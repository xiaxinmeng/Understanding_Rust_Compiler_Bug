{"sha": "e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NDNlNjhhNDdkZmJkZDczZDM0ZjNiNDBlNjI4ZjMwMzFmOTBiNmE=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2017-02-08T00:07:28Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2017-02-13T18:41:06Z"}, "message": "Port TRPL to mdbook\n\n1. move everything under a src directory\n2. add README.md to the SUMMARY.md", "tree": {"sha": "48b6ba34a604e53493b9301014288e9114fac3a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48b6ba34a604e53493b9301014288e9114fac3a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "html_url": "https://github.com/rust-lang/rust/commit/e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a076961fd0e3d8a68f8b047460b8f5191d203b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/a076961fd0e3d8a68f8b047460b8f5191d203b08", "html_url": "https://github.com/rust-lang/rust/commit/a076961fd0e3d8a68f8b047460b8f5191d203b08"}], "stats": {"total": 292, "additions": 146, "deletions": 146}, "files": [{"sha": "babbafa078f4a7b52c223da7e658c5ba6bd5276d", "filename": "src/doc/book/SUMMARY.md", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/a076961fd0e3d8a68f8b047460b8f5191d203b08/src%2Fdoc%2Fbook%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/a076961fd0e3d8a68f8b047460b8f5191d203b08/src%2Fdoc%2Fbook%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2FSUMMARY.md?ref=a076961fd0e3d8a68f8b047460b8f5191d203b08", "patch": "@@ -1,70 +0,0 @@\n-# Summary\n-\n-* [Getting Started](getting-started.md)\n-* [Tutorial: Guessing Game](guessing-game.md)\n-* [Syntax and Semantics](syntax-and-semantics.md)\n-    * [Variable Bindings](variable-bindings.md)\n-    * [Functions](functions.md)\n-    * [Primitive Types](primitive-types.md)\n-    * [Comments](comments.md)\n-    * [if](if.md)\n-    * [Loops](loops.md)\n-    * [Vectors](vectors.md)\n-    * [Ownership](ownership.md)\n-    * [References and Borrowing](references-and-borrowing.md)\n-    * [Lifetimes](lifetimes.md)\n-    * [Mutability](mutability.md)\n-    * [Structs](structs.md)\n-    * [Enums](enums.md)\n-    * [Match](match.md)\n-    * [Patterns](patterns.md)\n-    * [Method Syntax](method-syntax.md)\n-    * [Strings](strings.md)\n-    * [Generics](generics.md)\n-    * [Traits](traits.md)\n-    * [Drop](drop.md)\n-    * [if let](if-let.md)\n-    * [Trait Objects](trait-objects.md)\n-    * [Closures](closures.md)\n-    * [Universal Function Call Syntax](ufcs.md)\n-    * [Crates and Modules](crates-and-modules.md)\n-    * [`const` and `static`](const-and-static.md)\n-    * [Attributes](attributes.md)\n-    * [`type` aliases](type-aliases.md)\n-    * [Casting between types](casting-between-types.md)\n-    * [Associated Types](associated-types.md)\n-    * [Unsized Types](unsized-types.md)\n-    * [Operators and Overloading](operators-and-overloading.md)\n-    * [Deref coercions](deref-coercions.md)\n-    * [Macros](macros.md)\n-    * [Raw Pointers](raw-pointers.md)\n-    * [`unsafe`](unsafe.md)\n-* [Effective Rust](effective-rust.md)\n-    * [The Stack and the Heap](the-stack-and-the-heap.md)\n-    * [Testing](testing.md)\n-    * [Conditional Compilation](conditional-compilation.md)\n-    * [Documentation](documentation.md)\n-    * [Iterators](iterators.md)\n-    * [Concurrency](concurrency.md)\n-    * [Error Handling](error-handling.md)\n-    * [Choosing your Guarantees](choosing-your-guarantees.md)\n-    * [FFI](ffi.md)\n-    * [Borrow and AsRef](borrow-and-asref.md)\n-    * [Release Channels](release-channels.md)\n-    * [Using Rust without the standard library](using-rust-without-the-standard-library.md)\n-    * [Procedural Macros (and custom derive)](procedural-macros.md)\n-* [Nightly Rust](nightly-rust.md)\n-    * [Compiler Plugins](compiler-plugins.md)\n-    * [Inline Assembly](inline-assembly.md)\n-    * [No stdlib](no-stdlib.md)\n-    * [Intrinsics](intrinsics.md)\n-    * [Lang items](lang-items.md)\n-    * [Advanced linking](advanced-linking.md)\n-    * [Benchmark Tests](benchmark-tests.md)\n-    * [Box Syntax and Patterns](box-syntax-and-patterns.md)\n-    * [Slice Patterns](slice-patterns.md)\n-    * [Associated Constants](associated-constants.md)\n-    * [Custom Allocators](custom-allocators.md)\n-* [Glossary](glossary.md)\n-* [Syntax Index](syntax-index.md)\n-* [Bibliography](bibliography.md)"}, {"sha": "9162642b1cc62f52bfb1154bf478dc2ee6040ecd", "filename": "src/doc/book/src/README.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2FREADME.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% The Rust Programming Language\n+# The Rust Programming Language\n \n Welcome! This book will teach you about the [Rust Programming Language][rust].\n Rust is a systems programming language focused on three goals: safety, speed,", "previous_filename": "src/doc/book/README.md"}, {"sha": "74b9b7fa5b29233f599b6c339c5dd001aaa994ab", "filename": "src/doc/book/src/SUMMARY.md", "status": "modified", "additions": 70, "deletions": 1, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2FSUMMARY.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,3 +1,72 @@\n # Summary\n \n-- [Chapter 1](./chapter_1.md)\n+[Introduction](README.md)\n+\n+* [Getting Started](getting-started.md)\n+* [Tutorial: Guessing Game](guessing-game.md)\n+* [Syntax and Semantics](syntax-and-semantics.md)\n+    * [Variable Bindings](variable-bindings.md)\n+    * [Functions](functions.md)\n+    * [Primitive Types](primitive-types.md)\n+    * [Comments](comments.md)\n+    * [if](if.md)\n+    * [Loops](loops.md)\n+    * [Vectors](vectors.md)\n+    * [Ownership](ownership.md)\n+    * [References and Borrowing](references-and-borrowing.md)\n+    * [Lifetimes](lifetimes.md)\n+    * [Mutability](mutability.md)\n+    * [Structs](structs.md)\n+    * [Enums](enums.md)\n+    * [Match](match.md)\n+    * [Patterns](patterns.md)\n+    * [Method Syntax](method-syntax.md)\n+    * [Strings](strings.md)\n+    * [Generics](generics.md)\n+    * [Traits](traits.md)\n+    * [Drop](drop.md)\n+    * [if let](if-let.md)\n+    * [Trait Objects](trait-objects.md)\n+    * [Closures](closures.md)\n+    * [Universal Function Call Syntax](ufcs.md)\n+    * [Crates and Modules](crates-and-modules.md)\n+    * [`const` and `static`](const-and-static.md)\n+    * [Attributes](attributes.md)\n+    * [`type` aliases](type-aliases.md)\n+    * [Casting between types](casting-between-types.md)\n+    * [Associated Types](associated-types.md)\n+    * [Unsized Types](unsized-types.md)\n+    * [Operators and Overloading](operators-and-overloading.md)\n+    * [Deref coercions](deref-coercions.md)\n+    * [Macros](macros.md)\n+    * [Raw Pointers](raw-pointers.md)\n+    * [`unsafe`](unsafe.md)\n+* [Effective Rust](effective-rust.md)\n+    * [The Stack and the Heap](the-stack-and-the-heap.md)\n+    * [Testing](testing.md)\n+    * [Conditional Compilation](conditional-compilation.md)\n+    * [Documentation](documentation.md)\n+    * [Iterators](iterators.md)\n+    * [Concurrency](concurrency.md)\n+    * [Error Handling](error-handling.md)\n+    * [Choosing your Guarantees](choosing-your-guarantees.md)\n+    * [FFI](ffi.md)\n+    * [Borrow and AsRef](borrow-and-asref.md)\n+    * [Release Channels](release-channels.md)\n+    * [Using Rust without the standard library](using-rust-without-the-standard-library.md)\n+    * [Procedural Macros (and custom derive)](procedural-macros.md)\n+* [Nightly Rust](nightly-rust.md)\n+    * [Compiler Plugins](compiler-plugins.md)\n+    * [Inline Assembly](inline-assembly.md)\n+    * [No stdlib](no-stdlib.md)\n+    * [Intrinsics](intrinsics.md)\n+    * [Lang items](lang-items.md)\n+    * [Advanced linking](advanced-linking.md)\n+    * [Benchmark Tests](benchmark-tests.md)\n+    * [Box Syntax and Patterns](box-syntax-and-patterns.md)\n+    * [Slice Patterns](slice-patterns.md)\n+    * [Associated Constants](associated-constants.md)\n+    * [Custom Allocators](custom-allocators.md)\n+* [Glossary](glossary.md)\n+* [Syntax Index](syntax-index.md)\n+* [Bibliography](bibliography.md)"}, {"sha": "a882d6d2ebe0779a565f418d9a4070944939d223", "filename": "src/doc/book/src/advanced-linking.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fadvanced-linking.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fadvanced-linking.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fadvanced-linking.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Advanced Linking\n+# Advanced Linking\n \n The common cases of linking with Rust have been covered earlier in this book,\n but supporting the range of linking possibilities made available by other", "previous_filename": "src/doc/book/advanced-linking.md"}, {"sha": "61bad3d39489589ec8cae03e19f7cf34e24b8ace", "filename": "src/doc/book/src/associated-constants.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fassociated-constants.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fassociated-constants.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fassociated-constants.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Associated Constants\n+# Associated Constants\n \n With the `associated_consts` feature, you can define constants like this:\n ", "previous_filename": "src/doc/book/associated-constants.md"}, {"sha": "4db2b9e5eec2000463020cae9b88547c065cd9fe", "filename": "src/doc/book/src/associated-types.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fassociated-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fassociated-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fassociated-types.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Associated Types\n+# Associated Types\n \n Associated types are a powerful part of Rust\u2019s type system. They\u2019re related to\n the idea of a \u2018type family\u2019, in other words, grouping multiple types together. That", "previous_filename": "src/doc/book/associated-types.md"}, {"sha": "9e3cdb7ec09789359a3cb195b3ff614f5ef05a15", "filename": "src/doc/book/src/attributes.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fattributes.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fattributes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fattributes.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Attributes\n+# Attributes\n \n Declarations can be annotated with \u2018attributes\u2019 in Rust. They look like this:\n ", "previous_filename": "src/doc/book/attributes.md"}, {"sha": "a6ae2b3049a3b8637cb5151806500ae6b1fb367d", "filename": "src/doc/book/src/benchmark-tests.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fbenchmark-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fbenchmark-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fbenchmark-tests.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Benchmark tests\n+# Benchmark tests\n \n Rust supports benchmark tests, which can test the performance of your\n code. Let's make our `src/lib.rs` look like this (comments elided):", "previous_filename": "src/doc/book/benchmark-tests.md"}, {"sha": "07b2aa94a77463fa279641cc15d0b7febed28901", "filename": "src/doc/book/src/bibliography.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fbibliography.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fbibliography.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fbibliography.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Bibliography\n+# Bibliography\n \n This is a reading list of material relevant to Rust. It includes prior\n research that has - at one time or another - influenced the design of", "previous_filename": "src/doc/book/bibliography.md"}, {"sha": "a6e396571c685f9b05fa8b96c786568201cab8b8", "filename": "src/doc/book/src/borrow-and-asref.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fborrow-and-asref.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fborrow-and-asref.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fborrow-and-asref.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Borrow and AsRef\n+# Borrow and AsRef\n \n The [`Borrow`][borrow] and [`AsRef`][asref] traits are very similar, but\n different. Here\u2019s a quick refresher on what these two traits mean.", "previous_filename": "src/doc/book/borrow-and-asref.md"}, {"sha": "f03e881f47404300c47ebc313468a6658f4bfef6", "filename": "src/doc/book/src/box-syntax-and-patterns.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fbox-syntax-and-patterns.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fbox-syntax-and-patterns.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fbox-syntax-and-patterns.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-%  Box Syntax and Patterns\n+#  Box Syntax and Patterns\n \n Currently the only stable way to create a `Box` is via the `Box::new` method.\n Also it is not possible in stable Rust to destructure a `Box` in a match", "previous_filename": "src/doc/book/box-syntax-and-patterns.md"}, {"sha": "853fb1ec254176cbb3956440aec18883eb451382", "filename": "src/doc/book/src/casting-between-types.md", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcasting-between-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcasting-between-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fcasting-between-types.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Casting Between Types\n+# Casting Between Types\n \n Rust, with its focus on safety, provides two different ways of casting\n different types between each other. The first, `as`, is for safe casts.\n@@ -19,7 +19,7 @@ The most common case of coercion is removing mutability from a reference:\n * `&mut T` to `&T`\n \n An analogous conversion is to remove mutability from a\n-[raw pointer](raw-pointers.md):\n+[raw pointer](raw-pointers.html):\n \n * `*mut T` to `*const T`\n \n@@ -29,7 +29,7 @@ References can also be coerced to raw pointers:\n \n * `&mut T` to `*mut T`\n \n-Custom coercions may be defined using [`Deref`](deref-coercions.md).\n+Custom coercions may be defined using [`Deref`](deref-coercions.html).\n \n Coercion is transitive.\n \n@@ -101,7 +101,7 @@ The semantics of numeric casts are:\n \n ## Pointer casts\n \n-Perhaps surprisingly, it is safe to cast [raw pointers](raw-pointers.md) to and\n+Perhaps surprisingly, it is safe to cast [raw pointers](raw-pointers.html) to and\n from integers, and to cast between pointers to different types subject to\n some constraints. It is only unsafe to dereference the pointer:\n ", "previous_filename": "src/doc/book/casting-between-types.md"}, {"sha": "89dd09e67048121341a50438354ef9618312fdc4", "filename": "src/doc/book/src/choosing-your-guarantees.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fchoosing-your-guarantees.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fchoosing-your-guarantees.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fchoosing-your-guarantees.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Choosing your Guarantees\n+# Choosing your Guarantees\n \n One important feature of Rust is that it lets us control the costs and guarantees\n of a program.", "previous_filename": "src/doc/book/choosing-your-guarantees.md"}, {"sha": "5426ed0ff4c9c2e4985e2007daaba4bc590103e3", "filename": "src/doc/book/src/closures.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fclosures.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Closures\n+# Closures\n \n Sometimes it is useful to wrap up a function and _free variables_ for better\n clarity and reuse. The free variables that can be used come from the", "previous_filename": "src/doc/book/closures.md"}, {"sha": "0e68ab218e843719a688504b232896d9e9de5321", "filename": "src/doc/book/src/comments.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcomments.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcomments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fcomments.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Comments\n+# Comments\n \n Now that we have some functions, it\u2019s a good idea to learn about comments.\n Comments are notes that you leave to other programmers to help explain things", "previous_filename": "src/doc/book/comments.md"}, {"sha": "1b7ce678982afe80b0475060c40c0ed6a08cd25c", "filename": "src/doc/book/src/compiler-plugins.md", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcompiler-plugins.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcompiler-plugins.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fcompiler-plugins.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,6 +1,6 @@\n-% Compiler Plugins\n+# Compiler Plugins\n \n-# Introduction\n+## Introduction\n \n `rustc` can load compiler plugins, which are user-provided libraries that\n extend the compiler's behavior with new syntax extensions, lint checks, etc.", "previous_filename": "src/doc/book/compiler-plugins.md"}, {"sha": "a64178c26f237f914da56b421067f75c063a5ec0", "filename": "src/doc/book/src/concurrency.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fconcurrency.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Concurrency\n+# Concurrency\n \n Concurrency and parallelism are incredibly important topics in computer\n science, and are also a hot topic in industry today. Computers are gaining more", "previous_filename": "src/doc/book/concurrency.md"}, {"sha": "938c1c5132698da7a0bc67bd671bf2822e9d3de9", "filename": "src/doc/book/src/conditional-compilation.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fconditional-compilation.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fconditional-compilation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fconditional-compilation.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Conditional Compilation\n+# Conditional Compilation\n \n Rust has a special attribute, `#[cfg]`, which allows you to compile code\n based on a flag passed to the compiler. It has two forms:", "previous_filename": "src/doc/book/conditional-compilation.md"}, {"sha": "25b4bd94799e0704a1f81f19cb305a4a9ec1c8e1", "filename": "src/doc/book/src/const-and-static.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fconst-and-static.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fconst-and-static.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fconst-and-static.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% const and static\n+# const and static\n \n Rust has a way of defining constants with the `const` keyword:\n ", "previous_filename": "src/doc/book/const-and-static.md"}, {"sha": "84f5fac044e0e9604db602c43e6e97388c634c33", "filename": "src/doc/book/src/crates-and-modules.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcrates-and-modules.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcrates-and-modules.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fcrates-and-modules.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Crates and Modules\n+# Crates and Modules\n \n When a project starts getting large, it\u2019s considered good software\n engineering practice to split it up into a bunch of smaller pieces, and then", "previous_filename": "src/doc/book/crates-and-modules.md"}, {"sha": "154b5f0f4e256a8892f18a2fb3220c524c594c25", "filename": "src/doc/book/src/custom-allocators.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcustom-allocators.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fcustom-allocators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fcustom-allocators.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Custom Allocators\n+# Custom Allocators\n \n Allocating memory isn't always the easiest thing to do, and while Rust generally\n takes care of this by default it often becomes necessary to customize how", "previous_filename": "src/doc/book/custom-allocators.md"}, {"sha": "8552a7c8b3425b56da83a615759af64c9f0288e5", "filename": "src/doc/book/src/deref-coercions.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fderef-coercions.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fderef-coercions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fderef-coercions.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% `Deref` coercions\n+# `Deref` coercions\n \n The standard library provides a special trait, [`Deref`][deref]. It\u2019s normally\n used to overload `*`, the dereference operator:", "previous_filename": "src/doc/book/deref-coercions.md"}, {"sha": "69d49e2f96aa896d5b7a705174ce1ed98e6d19fc", "filename": "src/doc/book/src/documentation.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fdocumentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fdocumentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fdocumentation.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Documentation\n+# Documentation\n \n Documentation is an important part of any software project, and it's\n first-class in Rust. Let's talk about the tooling Rust gives you to", "previous_filename": "src/doc/book/documentation.md"}, {"sha": "53c507eba3f78b744d4391bf9afd9da460bf9fbf", "filename": "src/doc/book/src/drop.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fdrop.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fdrop.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fdrop.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Drop\n+# Drop\n \n Now that we\u2019ve discussed traits, let\u2019s talk about a particular trait provided\n by the Rust standard library, [`Drop`][drop]. The `Drop` trait provides a way", "previous_filename": "src/doc/book/drop.md"}, {"sha": "ce2dfe4eae27e5d3db0a5d2ecbb82c23436e8f2f", "filename": "src/doc/book/src/effective-rust.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Feffective-rust.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Feffective-rust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Feffective-rust.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Effective Rust\n+# Effective Rust\n \n So you\u2019ve learned how to write some Rust code. But there\u2019s a difference between\n writing *any* Rust code and writing *good* Rust code.", "previous_filename": "src/doc/book/effective-rust.md"}, {"sha": "9cf5e6bfa21aca3f48731134bd4f66ece8f29421", "filename": "src/doc/book/src/enums.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fenums.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fenums.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fenums.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Enums\n+# Enums\n \n An `enum` in Rust is a type that represents data that is one of\n several possible variants. Each variant in the `enum` can optionally", "previous_filename": "src/doc/book/enums.md"}, {"sha": "c823c32a135bb272ad08328185a2d85f7928e7c0", "filename": "src/doc/book/src/error-handling.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Ferror-handling.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Error Handling\n+# Error Handling\n \n Like most programming languages, Rust encourages the programmer to handle\n errors in a particular way. Generally speaking, error handling is divided into", "previous_filename": "src/doc/book/error-handling.md"}, {"sha": "cccefd8dfe73f5d1732586d45426578d3fc58dc3", "filename": "src/doc/book/src/ffi.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fffi.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Foreign Function Interface\n+# Foreign Function Interface\n \n # Introduction\n ", "previous_filename": "src/doc/book/ffi.md"}, {"sha": "eff77a54d8395c309f265a491750071e57afaff0", "filename": "src/doc/book/src/functions.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ffunctions.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ffunctions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Ffunctions.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Functions\n+# Functions\n \n Every Rust program has at least one function, the `main` function:\n ", "previous_filename": "src/doc/book/functions.md"}, {"sha": "56655ac41d0d3dc7f8db1a1bb52dbf2408abc341", "filename": "src/doc/book/src/generics.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fgenerics.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fgenerics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fgenerics.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Generics\n+# Generics\n \n Sometimes, when writing a function or data type, we may want it to work for\n multiple types of arguments. In Rust, we can do this with generics.", "previous_filename": "src/doc/book/generics.md"}, {"sha": "6208b1f4c123409f76683b6dd61c0742fc058117", "filename": "src/doc/book/src/getting-started.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fgetting-started.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fgetting-started.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fgetting-started.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Getting Started\n+# Getting Started\n \n This first chapter of the book will get us going with Rust and its tooling.\n First, we\u2019ll install Rust. Then, the classic \u2018Hello World\u2019 program. Finally,", "previous_filename": "src/doc/book/getting-started.md"}, {"sha": "b17b89633f356406ef9e003f2ea453b64fcba0d7", "filename": "src/doc/book/src/glossary.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fglossary.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fglossary.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fglossary.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Glossary\n+# Glossary\n \n Not every Rustacean has a background in systems programming, nor in computer\n science, so we've added explanations of terms that might be unfamiliar.", "previous_filename": "src/doc/book/glossary.md"}, {"sha": "7368d2184e5c2d73af831dce3ff7f774b3b95eee", "filename": "src/doc/book/src/guessing-game.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fguessing-game.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fguessing-game.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fguessing-game.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Guessing Game\n+# Guessing Game\n \n Let\u2019s learn some Rust! For our first project, we\u2019ll implement a classic\n beginner programming problem: the guessing game. Here\u2019s how it works: Our", "previous_filename": "src/doc/book/guessing-game.md"}, {"sha": "17bf13690009f35361b7c254f624017505ecc923", "filename": "src/doc/book/src/if-let.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fif-let.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fif-let.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fif-let.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% if let\n+# if let\n \n `if let` permits [patterns][pattern] matching within the condition of an [if][if] statement.\n This allows us to reduce the overhead of certain kinds of [pattern][patterns] matches", "previous_filename": "src/doc/book/if-let.md"}, {"sha": "d74503757bc48c154222abbd8d9a07747d2811d9", "filename": "src/doc/book/src/if.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fif.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fif.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fif.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% if\n+# if\n \n Rust\u2019s take on `if` is not particularly complex, but it\u2019s much more like the\n `if` you\u2019ll find in a dynamically typed language than in a more traditional", "previous_filename": "src/doc/book/if.md"}, {"sha": "4262289acbfde70578ec1e16c7105a75bc23b925", "filename": "src/doc/book/src/inline-assembly.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Finline-assembly.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Finline-assembly.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Finline-assembly.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Inline Assembly\n+# Inline Assembly\n \n For extremely low-level manipulations and performance reasons, one\n might wish to control the CPU directly. Rust supports using inline", "previous_filename": "src/doc/book/inline-assembly.md"}, {"sha": "e1edce3e80f714dfda16b833d8327d29ae0995e9", "filename": "src/doc/book/src/intrinsics.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fintrinsics.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fintrinsics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fintrinsics.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Intrinsics\n+# Intrinsics\n \n > **Note**: intrinsics will forever have an unstable interface, it is\n > recommended to use the stable interfaces of libcore rather than intrinsics", "previous_filename": "src/doc/book/intrinsics.md"}, {"sha": "1437c0f0b54c68a931f616fa4f4631476ab52eaf", "filename": "src/doc/book/src/iterators.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fiterators.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fiterators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fiterators.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Iterators\n+# Iterators\n \n Let's talk about loops.\n ", "previous_filename": "src/doc/book/iterators.md"}, {"sha": "9bd64d3817955a472baac17a9928103604e813f2", "filename": "src/doc/book/src/lang-items.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Flang-items.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Lang items\n+# Lang items\n \n > **Note**: lang items are often provided by crates in the Rust distribution,\n > and lang items themselves have an unstable interface. It is recommended to use", "previous_filename": "src/doc/book/lang-items.md"}, {"sha": "8bca13c28f0bd2b2def24b6dc7b1ed8bbdc28abd", "filename": "src/doc/book/src/lifetimes.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Flifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Flifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Flifetimes.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Lifetimes\n+# Lifetimes\n \n This is the last of three sections presenting Rust\u2019s ownership system. This is one of\n Rust\u2019s most distinct and compelling features, with which Rust developers should", "previous_filename": "src/doc/book/lifetimes.md"}, {"sha": "ec4acfa311230b862c1e31c8c6bd52a7660b030e", "filename": "src/doc/book/src/loops.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Floops.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Floops.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Floops.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Loops\n+# Loops\n \n Rust currently provides three approaches to performing some kind of iterative activity. They are: `loop`, `while` and `for`. Each approach has its own set of uses.\n ", "previous_filename": "src/doc/book/loops.md"}, {"sha": "22d53779bb9296da97076878b64cdc92bd14f06a", "filename": "src/doc/book/src/macros.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmacros.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmacros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fmacros.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Macros\n+# Macros\n \n By now you\u2019ve learned about many of the tools Rust provides for abstracting and\n reusing code. These units of code reuse have a rich semantic structure. For", "previous_filename": "src/doc/book/macros.md"}, {"sha": "b1e26a9c9d3cd2665b01c2c84ebf3fab63a3cef3", "filename": "src/doc/book/src/match.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmatch.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmatch.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fmatch.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Match\n+# Match\n \n Often, a simple [`if`][if]/`else` isn\u2019t enough, because you have more than two\n possible options. Also, conditions can get quite complex. Rust", "previous_filename": "src/doc/book/match.md"}, {"sha": "0404a5c992ba304460602b8a72b040806e681d02", "filename": "src/doc/book/src/method-syntax.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmethod-syntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmethod-syntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fmethod-syntax.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Method Syntax\n+# Method Syntax\n \n Functions are great, but if you want to call a bunch of them on some data, it\n can be awkward. Consider this code:", "previous_filename": "src/doc/book/method-syntax.md"}, {"sha": "fa7a259392a7e6af0ca22da903749bd54269a90e", "filename": "src/doc/book/src/mutability.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmutability.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fmutability.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fmutability.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Mutability\n+# Mutability\n \n Mutability, the ability to change something, works a bit differently in Rust\n than in other languages. The first aspect of mutability is its non-default", "previous_filename": "src/doc/book/mutability.md"}, {"sha": "5dfaa9e0fa8009551a2bc19067b294adf2c5ab39", "filename": "src/doc/book/src/nightly-rust.md", "status": "renamed", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fnightly-rust.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fnightly-rust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fnightly-rust.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,8 +1,8 @@\n-% Nightly Rust\n+# Nightly Rust\n \n Rust provides three distribution channels for Rust: nightly, beta, and stable.\n Unstable features are only available on nightly Rust. For more details on this\n-process, see \u2018[Stability as a deliverable][stability]\u2019.\n+process, see [Stability as a deliverable][stability].\n \n [stability]: http://blog.rust-lang.org/2014/10/30/Stability.html\n \n@@ -91,9 +91,10 @@ If not, there are a number of places where you can get help. The easiest is\n [the #rust IRC channel on irc.mozilla.org][irc], which you can access through\n [Mibbit][mibbit]. Click that link, and you'll be chatting with other Rustaceans\n (a silly nickname we call ourselves), and we can help you out. Other great\n-resources include [the user\u2019s forum][users], and [Stack Overflow][stackoverflow].\n+resources include [the users forum][users], and [Stack Overflow][stackoverflow].\n \n [irc]: irc://irc.mozilla.org/#rust\n [mibbit]: http://chat.mibbit.com/?server=irc.mozilla.org&channel=%23rust\n [users]: https://users.rust-lang.org/\n [stackoverflow]: http://stackoverflow.com/questions/tagged/rust\n+", "previous_filename": "src/doc/book/nightly-rust.md"}, {"sha": "dcb0fbc8005347349ffcde7b7a7b10f68534399f", "filename": "src/doc/book/src/no-stdlib.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fno-stdlib.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fno-stdlib.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fno-stdlib.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% No stdlib\n+# No stdlib\n \n Rust\u2019s standard library provides a lot of useful functionality, but assumes\n support for various features of its host system: threads, networking, heap", "previous_filename": "src/doc/book/no-stdlib.md"}, {"sha": "a69cd6adb3b1ff242b23d480fe077ad067505121", "filename": "src/doc/book/src/operators-and-overloading.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Foperators-and-overloading.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Foperators-and-overloading.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Foperators-and-overloading.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Operators and Overloading\n+# Operators and Overloading\n \n Rust allows for a limited form of operator overloading. There are certain\n operators that are able to be overloaded. To support a particular operator", "previous_filename": "src/doc/book/operators-and-overloading.md"}, {"sha": "21ebd6333f7101bd2d2d28db0d5fa013b3606369", "filename": "src/doc/book/src/ownership.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fownership.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Ownership\n+# Ownership\n \n This is the first of three sections presenting Rust\u2019s ownership system. This is one of\n Rust\u2019s most distinct and compelling features, with which Rust developers should", "previous_filename": "src/doc/book/ownership.md"}, {"sha": "1983927085c148291e3a1095ddcb247c3c8b0a3a", "filename": "src/doc/book/src/patterns.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fpatterns.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fpatterns.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fpatterns.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Patterns\n+# Patterns\n \n Patterns are quite common in Rust. We use them in [variable\n bindings][bindings], [match expressions][match], and other places, too. Let\u2019s go", "previous_filename": "src/doc/book/patterns.md"}, {"sha": "8fd3d17c15e57f5a90a59ed14f6bfb016b9cbd5d", "filename": "src/doc/book/src/primitive-types.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fprimitive-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fprimitive-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fprimitive-types.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Primitive Types\n+# Primitive Types\n \n The Rust language has a number of types that are considered \u2018primitive\u2019. This\n means that they\u2019re built-in to the language. Rust is structured in such a way", "previous_filename": "src/doc/book/primitive-types.md"}, {"sha": "d286c3b7bdc633fd4b67b1f7c39073080339450a", "filename": "src/doc/book/src/procedural-macros.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fprocedural-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fprocedural-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fprocedural-macros.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Procedural Macros (and custom Derive)\n+# Procedural Macros (and custom Derive)\n \n As you've seen throughout the rest of the book, Rust provides a mechanism\n called \"derive\" that lets you implement traits easily. For example,", "previous_filename": "src/doc/book/procedural-macros.md"}, {"sha": "1f75665f4b8c36ebde4386a7e5b434a6cee16888", "filename": "src/doc/book/src/raw-pointers.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fraw-pointers.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fraw-pointers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fraw-pointers.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Raw Pointers\n+# Raw Pointers\n \n Rust has a number of different smart pointer types in its standard library, but\n there are two types that are extra-special. Much of Rust\u2019s safety comes from", "previous_filename": "src/doc/book/raw-pointers.md"}, {"sha": "f01aa45385acf4ea6eef3fac12565396095dc3f4", "filename": "src/doc/book/src/references-and-borrowing.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Freferences-and-borrowing.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Freferences-and-borrowing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Freferences-and-borrowing.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% References and Borrowing\n+# References and Borrowing\n \n This is the second of three sections presenting Rust\u2019s ownership system. This is one of\n Rust\u2019s most distinct and compelling features, with which Rust developers should", "previous_filename": "src/doc/book/references-and-borrowing.md"}, {"sha": "af89ca8348424a6b2636631f71fc302892d0b55e", "filename": "src/doc/book/src/release-channels.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Frelease-channels.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Frelease-channels.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Frelease-channels.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Release Channels\n+# Release Channels\n \n The Rust project uses a concept called \u2018release channels\u2019 to manage releases.\n It\u2019s important to understand this process to choose which version of Rust", "previous_filename": "src/doc/book/release-channels.md"}, {"sha": "3f7398dde5e20ca788ed24052ff2fb46d0158681", "filename": "src/doc/book/src/slice-patterns.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fslice-patterns.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fslice-patterns.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fslice-patterns.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Slice patterns\n+# Slice patterns\n \n If you want to match against a slice or array, you can use `&` with the\n `slice_patterns` feature:", "previous_filename": "src/doc/book/slice-patterns.md"}, {"sha": "ac41be11854b89603c4ffc519a49a470f5f638d7", "filename": "src/doc/book/src/strings.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fstrings.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fstrings.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fstrings.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Strings\n+# Strings\n \n Strings are an important concept for any programmer to master. Rust\u2019s string\n handling system is a bit different from other languages, due to its systems", "previous_filename": "src/doc/book/strings.md"}, {"sha": "51af343c130123b4a8fda6887f6353bf02e17826", "filename": "src/doc/book/src/structs.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Structs\n+# Structs\n \n `struct`s are a way of creating more complex data types. For example, if we were\n doing calculations involving coordinates in 2D space, we would need both an `x`", "previous_filename": "src/doc/book/structs.md"}, {"sha": "aa4c1251024de218ac7787a6249ae81f0669e2d0", "filename": "src/doc/book/src/syntax-and-semantics.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fsyntax-and-semantics.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fsyntax-and-semantics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fsyntax-and-semantics.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Syntax and Semantics\n+# Syntax and Semantics\n \n This chapter breaks Rust down into small chunks, one for each concept.\n ", "previous_filename": "src/doc/book/syntax-and-semantics.md"}, {"sha": "d8bb4fadc0b6d73e89f6fba1b660597e55e9cb1a", "filename": "src/doc/book/src/syntax-index.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fsyntax-index.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fsyntax-index.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fsyntax-index.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Syntax Index\n+# Syntax Index\n \n ## Keywords\n ", "previous_filename": "src/doc/book/syntax-index.md"}, {"sha": "291c4481d551321d6ec4b598ab259bc8d414f02b", "filename": "src/doc/book/src/testing.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Ftesting.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Testing\n+# Testing\n \n > Program testing can be a very effective way to show the presence of bugs, but\n > it is hopelessly inadequate for showing their absence.", "previous_filename": "src/doc/book/testing.md"}, {"sha": "b9b3b801eae58abaa264bf9709778af5a1e9005e", "filename": "src/doc/book/src/the-stack-and-the-heap.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fthe-stack-and-the-heap.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fthe-stack-and-the-heap.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fthe-stack-and-the-heap.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% The Stack and the Heap\n+# The Stack and the Heap\n \n As a systems language, Rust operates at a low level. If you\u2019re coming from a\n high-level language, there are some aspects of systems programming that you may", "previous_filename": "src/doc/book/the-stack-and-the-heap.md"}, {"sha": "a77d5fe93b524716326bd566fd0b0ab4c987b9f8", "filename": "src/doc/book/src/trait-objects.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftrait-objects.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftrait-objects.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Ftrait-objects.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Trait Objects\n+# Trait Objects\n \n When code involves polymorphism, there needs to be a mechanism to determine\n which specific version is actually run. This is called \u2018dispatch\u2019. There are", "previous_filename": "src/doc/book/trait-objects.md"}, {"sha": "19a133f84b0b6ffee92eaf55645bfc1989e4263b", "filename": "src/doc/book/src/traits.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftraits.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftraits.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Ftraits.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Traits\n+# Traits\n \n A trait is a language feature that tells the Rust compiler about\n functionality a type must provide.", "previous_filename": "src/doc/book/traits.md"}, {"sha": "1bd0f78e36853143cf391b91957ef653c1ed20a9", "filename": "src/doc/book/src/type-aliases.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftype-aliases.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Ftype-aliases.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Ftype-aliases.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Type Aliases\n+# Type Aliases\n \n The `type` keyword lets you declare an alias of another type:\n ", "previous_filename": "src/doc/book/type-aliases.md"}, {"sha": "016ecc70976574d33b5e4b06c476c1745c5a1e49", "filename": "src/doc/book/src/ufcs.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fufcs.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fufcs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fufcs.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Universal Function Call Syntax\n+# Universal Function Call Syntax\n \n Sometimes, functions can have the same names. Consider this code:\n ", "previous_filename": "src/doc/book/ufcs.md"}, {"sha": "e90a4b1c268ca3ad2389edc675dc709130e4086e", "filename": "src/doc/book/src/unsafe.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Funsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Funsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Funsafe.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Unsafe\n+# Unsafe\n \n Rust\u2019s main draw is its powerful static guarantees about behavior. But safety\n checks are conservative by nature: there are some programs that are actually", "previous_filename": "src/doc/book/unsafe.md"}, {"sha": "2d090925d51f6cc7d4aa38a44e4d9b114003099c", "filename": "src/doc/book/src/unsized-types.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Funsized-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Funsized-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Funsized-types.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Unsized Types\n+# Unsized Types\n \n Most types have a particular size, in bytes, that is knowable at compile time.\n For example, an `i32` is thirty-two bits big, or four bytes. However, there are", "previous_filename": "src/doc/book/unsized-types.md"}, {"sha": "8458f9314f9262c397549452cd1c11b506a01b88", "filename": "src/doc/book/src/using-rust-without-the-standard-library.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fusing-rust-without-the-standard-library.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fusing-rust-without-the-standard-library.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fusing-rust-without-the-standard-library.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Using Rust Without the Standard Library\n+# Using Rust Without the Standard Library\n \n Rust\u2019s standard library provides a lot of useful functionality, but assumes\n support for various features of its host system: threads, networking, heap", "previous_filename": "src/doc/book/using-rust-without-the-standard-library.md"}, {"sha": "0c8324d83e07381564c651b4e647240224d3909a", "filename": "src/doc/book/src/variable-bindings.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fvariable-bindings.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fvariable-bindings.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fvariable-bindings.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Variable Bindings\n+# Variable Bindings\n \n Virtually every non-'Hello World\u2019 Rust program uses *variable bindings*. They\n bind some value to a name, so it can be used later. `let` is", "previous_filename": "src/doc/book/variable-bindings.md"}, {"sha": "aff078718dfb1311726529cb5199d7c2001d8288", "filename": "src/doc/book/src/vectors.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fvectors.md", "raw_url": "https://github.com/rust-lang/rust/raw/e943e68a47dfbdd73d34f3b40e628f3031f90b6a/src%2Fdoc%2Fbook%2Fsrc%2Fvectors.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fvectors.md?ref=e943e68a47dfbdd73d34f3b40e628f3031f90b6a", "patch": "@@ -1,4 +1,4 @@\n-% Vectors\n+# Vectors\n \n A \u2018vector\u2019 is a dynamic or \u2018growable\u2019 array, implemented as the standard\n library type [`Vec<T>`][vec]. The `T` means that we can have vectors", "previous_filename": "src/doc/book/vectors.md"}]}