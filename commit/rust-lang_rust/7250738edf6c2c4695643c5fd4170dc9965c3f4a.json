{"sha": "7250738edf6c2c4695643c5fd4170dc9965c3f4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNTA3MzhlZGY2YzJjNDY5NTY0M2M1ZmQ0MTcwZGM5OTY1YzNmNGE=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-02-17T14:53:28Z"}, "committer": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-02-17T14:53:28Z"}, "message": "Merge pull request #679 from mcarton/rustup\n\nRustup to 1.8.0-nightly (57c357d89 2016-02-16)", "tree": {"sha": "fd9f47bb4ddc499e3bc39948cbdfac43c5392cf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd9f47bb4ddc499e3bc39948cbdfac43c5392cf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7250738edf6c2c4695643c5fd4170dc9965c3f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7250738edf6c2c4695643c5fd4170dc9965c3f4a", "html_url": "https://github.com/rust-lang/rust/commit/7250738edf6c2c4695643c5fd4170dc9965c3f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7250738edf6c2c4695643c5fd4170dc9965c3f4a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59c8f6210b5bc84a1ef3d92e71c0e2703cbd784e", "url": "https://api.github.com/repos/rust-lang/rust/commits/59c8f6210b5bc84a1ef3d92e71c0e2703cbd784e", "html_url": "https://github.com/rust-lang/rust/commit/59c8f6210b5bc84a1ef3d92e71c0e2703cbd784e"}, {"sha": "227ff8c4ad881b99222d1f3feda559a8db95a8d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/227ff8c4ad881b99222d1f3feda559a8db95a8d3", "html_url": "https://github.com/rust-lang/rust/commit/227ff8c4ad881b99222d1f3feda559a8db95a8d3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "28d5fb65f36a699fa690146c7eac7c092be4ac63", "filename": "src/misc_early.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7250738edf6c2c4695643c5fd4170dc9965c3f4a/src%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7250738edf6c2c4695643c5fd4170dc9965c3f4a/src%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc_early.rs?ref=7250738edf6c2c4695643c5fd4170dc9965c3f4a", "patch": "@@ -43,15 +43,15 @@ impl LintPass for MiscEarly {\n \n impl EarlyLintPass for MiscEarly {\n     fn check_pat(&mut self, cx: &EarlyContext, pat: &Pat) {\n-        if let PatStruct(ref npat, ref pfields, _) = pat.node {\n+        if let PatKind::Struct(ref npat, ref pfields, _) = pat.node {\n             let mut wilds = 0;\n             let type_name = match npat.segments.last() {\n                 Some(elem) => format!(\"{}\", elem.identifier.name),\n                 None => String::new(),\n             };\n \n             for field in pfields {\n-                if field.node.pat.node == PatWild {\n+                if field.node.pat.node == PatKind::Wild {\n                     wilds += 1;\n                 }\n             }\n@@ -67,14 +67,14 @@ impl EarlyLintPass for MiscEarly {\n                 let mut normal = vec![];\n \n                 for field in pfields {\n-                    if field.node.pat.node != PatWild {\n+                    if field.node.pat.node != PatKind::Wild {\n                         if let Ok(n) = cx.sess().codemap().span_to_snippet(field.span) {\n                             normal.push(n);\n                         }\n                     }\n                 }\n                 for field in pfields {\n-                    if field.node.pat.node == PatWild {\n+                    if field.node.pat.node == PatKind::Wild {\n                         wilds -= 1;\n                         if wilds > 0 {\n                             span_lint(cx,\n@@ -101,7 +101,7 @@ impl EarlyLintPass for MiscEarly {\n         let mut registered_names: HashMap<String, Span> = HashMap::new();\n \n         for ref arg in &decl.inputs {\n-            if let PatIdent(_, sp_ident, None) = arg.pat.node {\n+            if let PatKind::Ident(_, sp_ident, None) = arg.pat.node {\n                 let arg_name = sp_ident.node.to_string();\n \n                 if arg_name.starts_with('_') {"}, {"sha": "bfddee797b8d8ce351c092f612a67d8cfa99ff8b", "filename": "src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7250738edf6c2c4695643c5fd4170dc9965c3f4a/src%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7250738edf6c2c4695643c5fd4170dc9965c3f4a/src%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freturns.rs?ref=7250738edf6c2c4695643c5fd4170dc9965c3f4a", "patch": "@@ -97,7 +97,7 @@ impl ReturnPass {\n                 let StmtKind::Decl(ref decl, _) = stmt.node,\n                 let DeclKind::Local(ref local) = decl.node,\n                 let Some(ref initexpr) = local.init,\n-                let PatIdent(_, Spanned { node: id, .. }, _) = local.pat.node,\n+                let PatKind::Ident(_, Spanned { node: id, .. }, _) = local.pat.node,\n                 let ExprKind::Path(_, ref path) = retexpr.node,\n                 match_path_ast(path, &[&id.name.as_str()])\n             ], {"}]}