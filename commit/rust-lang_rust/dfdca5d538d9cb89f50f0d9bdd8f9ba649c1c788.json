{"sha": "dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZGNhNWQ1MzhkOWNiODlmNTBmMGQ5YmRkOGY5YmE2NDljMWM3ODg=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-04-23T07:25:14Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-04-23T07:25:14Z"}, "message": "Fix broken determination of external method type param count\n\nCloses #2185", "tree": {"sha": "f382fca0a0cf0211278614b63da72b53c977df6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f382fca0a0cf0211278614b63da72b53c977df6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "html_url": "https://github.com/rust-lang/rust/commit/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "512927573e08aba67832146a6097c8f6142f4fd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/512927573e08aba67832146a6097c8f6142f4fd4", "html_url": "https://github.com/rust-lang/rust/commit/512927573e08aba67832146a6097c8f6142f4fd4"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "0e8fee771902422e14ebbafc39abd58abdb21fc9", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "patch": "@@ -2341,7 +2341,7 @@ fn trans_callee(bcx: block, e: @ast::expr) -> lval_maybe_callee {\n     let _icx = bcx.insn_ctxt(\"trans_callee\");\n     alt e.node {\n       ast::expr_path(path) { ret trans_path(bcx, e.id); }\n-      ast::expr_field(base, ident, _) {\n+      ast::expr_field(base, _, _) {\n         // Lval means this is a record field, so not a method\n         if !expr_is_lval(bcx, e) {\n             alt bcx.ccx().maps.method_map.find(e.id) {"}, {"sha": "cb87000c7c61b954b72711ded657f901bbc4bc79", "filename": "src/rustc/middle/trans/impl.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/src%2Frustc%2Fmiddle%2Ftrans%2Fimpl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/src%2Frustc%2Fmiddle%2Ftrans%2Fimpl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fimpl.rs?ref=dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "patch": "@@ -95,13 +95,15 @@ fn method_with_name(ccx: @crate_ctxt, impl_id: ast::def_id,\n     }\n }\n \n-fn method_ty_param_count(ccx: @crate_ctxt, m_id: ast::def_id) -> uint {\n+fn method_ty_param_count(ccx: @crate_ctxt, m_id: ast::def_id,\n+                         i_id: ast::def_id) -> uint {\n     if m_id.crate == ast::local_crate {\n         alt check ccx.tcx.items.get(m_id.node) {\n           ast_map::node_method(m, _, _) { vec::len(m.tps) }\n         }\n     } else {\n-        csearch::get_type_param_count(ccx.sess.cstore, m_id)\n+        csearch::get_type_param_count(ccx.sess.cstore, m_id) -\n+            csearch::get_type_param_count(ccx.sess.cstore, i_id)\n     }\n }\n \n@@ -115,7 +117,7 @@ fn trans_monomorphized_callee(bcx: block, callee_id: ast::node_id,\n         let ccx = bcx.ccx();\n         let mname = ty::iface_methods(ccx.tcx, iface_id)[n_method].ident;\n         let mth_id = method_with_name(bcx.ccx(), impl_did, mname);\n-        let n_m_tps = method_ty_param_count(ccx, mth_id);\n+        let n_m_tps = method_ty_param_count(ccx, mth_id, impl_did);\n         let node_substs = node_id_type_params(bcx, callee_id);\n         let ty_substs = impl_substs +\n             vec::tailn(node_substs, node_substs.len() - n_m_tps);"}, {"sha": "8abe0f51ca7f01dad7e358f074e85b81c7e53703", "filename": "src/test/run-pass/issue-2185.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2185.rs?ref=dfdca5d538d9cb89f50f0d9bdd8f9ba649c1c788", "patch": "@@ -0,0 +1,9 @@\n+import iter::*;\n+\n+fn main() {\n+    let range = bind uint::range(0u, 1000u, _);\n+    let filt  = bind iter::filter(range, {|&&n: uint| n % 3u != 0u && n % 5u != 0u }, _);\n+    let sum   = iter::foldl(filt, 0u) {|accum, &&n: uint| accum + n };\n+\n+    io::println(#fmt(\"%u\", sum));\n+}\n\\ No newline at end of file"}]}