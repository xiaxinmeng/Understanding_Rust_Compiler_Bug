{"sha": "480ac69a4c338d93d367a4afcba02caaf8843895", "node_id": "C_kwDOAAsO6NoAKDQ4MGFjNjlhNGMzMzhkOTNkMzY3YTRhZmNiYTAyY2FhZjg4NDM4OTU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-05-27T11:38:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-27T11:38:33Z"}, "message": "Rollup merge of #111997 - GuillaumeGomez:re-export-doc-hidden-macros, r=notriddle\n\nFix re-export of doc hidden macro not showing up\n\nIt's part of the follow-up of https://github.com/rust-lang/rust/pull/109697.\n\nRe-exports of doc hidden macros should be visible. It was the only kind of re-export of doc hidden item that didn't show up.\n\nr? `@notriddle`", "tree": {"sha": "a89a6185d622553b24b60540f0614df005e1d158", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a89a6185d622553b24b60540f0614df005e1d158"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/480ac69a4c338d93d367a4afcba02caaf8843895", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkceu5CRBK7hj4Ov3rIwAAa4IIAA7sRXe7v8/dugwLe8M6T4Vm\nQjmjCmcHhoqMuEswF6/XOGb/tL5OozzVXNdxvblBOT/kJSaZeKXcMW513rEedYJk\ndVckqxfLpR4yA0DZNPzmA1Dfe/+4Re8vOwdVqdgdQlXEoawpeLrsl4UrWe2DC7l2\nIw8aXrCJLt0onA2y1albSdou7zotoDVAC9C3zlLfhQuEkUNMdPx72VBi8u+ULc5Q\nl6U3A/4VofzqE7tOh6cSb4+kocD0oiXxBUhlvK6LyjOpGgxAs3kxn0jYl+104Jw9\nfuYNhR61Yinx1C8RvwtPFqN61iwgeyzAoBf7vj2mPOLSa/pbD68OMIAxXBQvslw=\n=G07T\n-----END PGP SIGNATURE-----\n", "payload": "tree a89a6185d622553b24b60540f0614df005e1d158\nparent cd8132bfabf6cbf42ae4903a59fcadbae4b6d41a\nparent 898dfc680f22b0b07eb569384c5e947d2922d0d5\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1685187513 +0200\ncommitter GitHub <noreply@github.com> 1685187513 +0200\n\nRollup merge of #111997 - GuillaumeGomez:re-export-doc-hidden-macros, r=notriddle\n\nFix re-export of doc hidden macro not showing up\n\nIt's part of the follow-up of https://github.com/rust-lang/rust/pull/109697.\n\nRe-exports of doc hidden macros should be visible. It was the only kind of re-export of doc hidden item that didn't show up.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/480ac69a4c338d93d367a4afcba02caaf8843895", "html_url": "https://github.com/rust-lang/rust/commit/480ac69a4c338d93d367a4afcba02caaf8843895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/480ac69a4c338d93d367a4afcba02caaf8843895/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd8132bfabf6cbf42ae4903a59fcadbae4b6d41a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8132bfabf6cbf42ae4903a59fcadbae4b6d41a", "html_url": "https://github.com/rust-lang/rust/commit/cd8132bfabf6cbf42ae4903a59fcadbae4b6d41a"}, {"sha": "898dfc680f22b0b07eb569384c5e947d2922d0d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/898dfc680f22b0b07eb569384c5e947d2922d0d5", "html_url": "https://github.com/rust-lang/rust/commit/898dfc680f22b0b07eb569384c5e947d2922d0d5"}], "stats": {"total": 68, "additions": 63, "deletions": 5}, "files": [{"sha": "03adc19e359c193279616a7c6b34e6643e15c82b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/480ac69a4c338d93d367a4afcba02caaf8843895/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480ac69a4c338d93d367a4afcba02caaf8843895/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=480ac69a4c338d93d367a4afcba02caaf8843895", "patch": "@@ -2592,7 +2592,8 @@ fn clean_use_statement_inner<'tcx>(\n     } else {\n         if inline_attr.is_none()\n             && let Res::Def(DefKind::Mod, did) = path.res\n-            && !did.is_local() && did.is_crate_root()\n+            && !did.is_local()\n+            && did.is_crate_root()\n         {\n             // if we're `pub use`ing an extern crate root, don't inline it unless we\n             // were specifically asked for it"}, {"sha": "eb813af779ef66f402ea1ce4b8c218b7320853c7", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/480ac69a4c338d93d367a4afcba02caaf8843895/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480ac69a4c338d93d367a4afcba02caaf8843895/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=480ac69a4c338d93d367a4afcba02caaf8843895", "patch": "@@ -305,11 +305,27 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             return false;\n         }\n \n-        if !self.view_item_stack.insert(res_did) {\n+        let is_bang_macro = matches!(\n+            tcx.hir().get_by_def_id(res_did),\n+            Node::Item(&hir::Item { kind: hir::ItemKind::Macro(_, MacroKind::Bang), .. })\n+        );\n+\n+        if !self.view_item_stack.insert(res_did) && !is_bang_macro {\n             return false;\n         }\n \n         let ret = match tcx.hir().get_by_def_id(res_did) {\n+            // Bang macros are handled a bit on their because of how they are handled by the\n+            // compiler. If they have `#[doc(hidden)]` and the re-export doesn't have\n+            // `#[doc(inline)]`, then we don't inline it.\n+            Node::Item(_)\n+                if is_bang_macro\n+                    && !please_inline\n+                    && renamed.is_some()\n+                    && self.cx.tcx.is_doc_hidden(ori_res_did) =>\n+            {\n+                return false;\n+            }\n             Node::Item(&hir::Item { kind: hir::ItemKind::Mod(ref m), .. }) if glob => {\n                 let prev = mem::replace(&mut self.inlining, true);\n                 for &i in m.item_ids {"}, {"sha": "d9ed954868e50a9b4b1d895f6598a15ec68aa368", "filename": "tests/rustdoc/reexport-doc-hidden.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/480ac69a4c338d93d367a4afcba02caaf8843895/tests%2Frustdoc%2Freexport-doc-hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480ac69a4c338d93d367a4afcba02caaf8843895/tests%2Frustdoc%2Freexport-doc-hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-doc-hidden.rs?ref=480ac69a4c338d93d367a4afcba02caaf8843895", "patch": "@@ -21,6 +21,5 @@ macro_rules! foo {\n     () => {};\n }\n \n-// This is a bug: https://github.com/rust-lang/rust/issues/59368\n-// @!has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n+// @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n pub use crate::foo as Macro;"}, {"sha": "47a21e39462251473ebb9fd6e72eb7166df16ece", "filename": "tests/rustdoc/reexport-hidden-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/480ac69a4c338d93d367a4afcba02caaf8843895/tests%2Frustdoc%2Freexport-hidden-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480ac69a4c338d93d367a4afcba02caaf8843895/tests%2Frustdoc%2Freexport-hidden-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-hidden-macro.rs?ref=480ac69a4c338d93d367a4afcba02caaf8843895", "patch": "@@ -5,6 +5,7 @@\n \n // @has 'foo/index.html'\n // @has - '//*[@id=\"main-content\"]//a[@href=\"macro.Macro2.html\"]' 'Macro2'\n+// @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n \n // @has 'foo/macro.Macro2.html'\n // @has - '//*[@class=\"docblock\"]' 'Displayed'\n@@ -15,7 +16,6 @@ macro_rules! foo {\n     () => {};\n }\n \n-/// not displayed\n pub use crate::foo as Macro;\n /// Displayed\n #[doc(inline)]"}, {"sha": "b733716c22a3b65f62c8a7f21436b184ffbf11ea", "filename": "tests/rustdoc/reexport-of-doc-hidden.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/480ac69a4c338d93d367a4afcba02caaf8843895/tests%2Frustdoc%2Freexport-of-doc-hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480ac69a4c338d93d367a4afcba02caaf8843895/tests%2Frustdoc%2Freexport-of-doc-hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-of-doc-hidden.rs?ref=480ac69a4c338d93d367a4afcba02caaf8843895", "patch": "@@ -0,0 +1,42 @@\n+// This test ensures that all re-exports of doc hidden elements are displayed.\n+\n+#![crate_name = \"foo\"]\n+\n+#[doc(hidden)]\n+pub struct Bar;\n+\n+#[macro_export]\n+#[doc(hidden)]\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+// @has 'foo/index.html'\n+// @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n+pub use crate::foo as Macro;\n+// @has - '//*[@id=\"reexport.Macro2\"]/code' 'pub use crate::foo as Macro2;'\n+pub use crate::foo as Macro2;\n+// @has - '//*[@id=\"reexport.Boo\"]/code' 'pub use crate::Bar as Boo;'\n+pub use crate::Bar as Boo;\n+// @has - '//*[@id=\"reexport.Boo2\"]/code' 'pub use crate::Bar as Boo2;'\n+pub use crate::Bar as Boo2;\n+\n+pub fn fofo() {}\n+\n+// @has - '//*[@id=\"reexport.f1\"]/code' 'pub use crate::fofo as f1;'\n+pub use crate::fofo as f1;\n+// @has - '//*[@id=\"reexport.f2\"]/code' 'pub use crate::fofo as f2;'\n+pub use crate::fofo as f2;\n+\n+pub mod sub {\n+    // @has 'foo/sub/index.html'\n+    // @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n+    pub use crate::foo as Macro;\n+    // @has - '//*[@id=\"reexport.Macro2\"]/code' 'pub use crate::foo as Macro2;'\n+    pub use crate::foo as Macro2;\n+\n+    // @has - '//*[@id=\"reexport.f1\"]/code' 'pub use crate::fofo as f1;'\n+    pub use crate::fofo as f1;\n+    // @has - '//*[@id=\"reexport.f2\"]/code' 'pub use crate::fofo as f2;'\n+    pub use crate::fofo as f2;\n+}"}]}