{"sha": "5416901ccad4550b6f7a6145de5dbbe94b98e309", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MTY5MDFjY2FkNDU1MGI2ZjdhNjE0NWRlNWRiYmU5NGI5OGUzMDk=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-11-15T00:26:25Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-11-15T00:26:25Z"}, "message": "librustc: use type parameters less vigorously when giving the IR type names", "tree": {"sha": "b92afc52026b753c5367a8b884bbf837ff7f5afc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b92afc52026b753c5367a8b884bbf837ff7f5afc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5416901ccad4550b6f7a6145de5dbbe94b98e309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5416901ccad4550b6f7a6145de5dbbe94b98e309", "html_url": "https://github.com/rust-lang/rust/commit/5416901ccad4550b6f7a6145de5dbbe94b98e309", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5416901ccad4550b6f7a6145de5dbbe94b98e309/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4e55aebc1a71b6674c00b8604efa6b1e2e52cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4e55aebc1a71b6674c00b8604efa6b1e2e52cd", "html_url": "https://github.com/rust-lang/rust/commit/1e4e55aebc1a71b6674c00b8604efa6b1e2e52cd"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9530c86a94c111416a8ddd155f25892370fc0681", "filename": "src/librustc/middle/trans/type_of.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5416901ccad4550b6f7a6145de5dbbe94b98e309/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5416901ccad4550b6f7a6145de5dbbe94b98e309/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=5416901ccad4550b6f7a6145de5dbbe94b98e309", "patch": "@@ -455,7 +455,12 @@ pub fn llvm_type_name(cx: &CrateContext,\n \n     let base = ty::item_path_str(cx.tcx(), did);\n     let strings: Vec<String> = tps.iter().map(|t| t.repr(cx.tcx())).collect();\n-    let tstr = format!(\"{}<{}>\", base, strings);\n+    let tstr = if strings.is_empty() {\n+        base\n+    } else {\n+        format!(\"{}<{}>\", base, strings)\n+    };\n+\n     if did.krate == 0 {\n         format!(\"{}.{}\", name, tstr)\n     } else {"}]}