{"sha": "50e9f2e6e87911659b6ae63230a5797f4cdf28e1", "node_id": "C_kwDOAAsO6NoAKDUwZTlmMmU2ZTg3OTExNjU5YjZhZTYzMjMwYTU3OTdmNGNkZjI4ZTE", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-18T15:48:53Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-18T15:48:53Z"}, "message": "Update `IsZero` documentation", "tree": {"sha": "97a2a1095322a295aa58604b2592c462a102698e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97a2a1095322a295aa58604b2592c462a102698e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50e9f2e6e87911659b6ae63230a5797f4cdf28e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50e9f2e6e87911659b6ae63230a5797f4cdf28e1", "html_url": "https://github.com/rust-lang/rust/commit/50e9f2e6e87911659b6ae63230a5797f4cdf28e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50e9f2e6e87911659b6ae63230a5797f4cdf28e1/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b94a29a25ff9ca4a8edfc0b6c7d1d309dc03d5cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b94a29a25ff9ca4a8edfc0b6c7d1d309dc03d5cd", "html_url": "https://github.com/rust-lang/rust/commit/b94a29a25ff9ca4a8edfc0b6c7d1d309dc03d5cd"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "cb9adf05c25b0efe8351608e7293452975bd08b9", "filename": "library/alloc/src/vec/is_zero.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50e9f2e6e87911659b6ae63230a5797f4cdf28e1/library%2Falloc%2Fsrc%2Fvec%2Fis_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e9f2e6e87911659b6ae63230a5797f4cdf28e1/library%2Falloc%2Fsrc%2Fvec%2Fis_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fis_zero.rs?ref=50e9f2e6e87911659b6ae63230a5797f4cdf28e1", "patch": "@@ -4,7 +4,8 @@ use crate::boxed::Box;\n \n #[rustc_specialization_trait]\n pub(super) unsafe trait IsZero {\n-    /// Whether this value's representation is all zeros\n+    /// Whether this value's representation is all zeros,\n+    /// or can be represented with all zeroes.\n     fn is_zero(&self) -> bool;\n }\n "}]}