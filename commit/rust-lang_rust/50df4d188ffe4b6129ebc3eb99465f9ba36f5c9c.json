{"sha": "50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZGY0ZDE4OGZmZTRiNjEyOWViYzNlYjk5NDY1ZjliYTM2ZjVjOWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-08T23:15:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T23:15:53Z"}, "message": "Rollup merge of #58247 - taiki-e:librustc_passes-2018, r=Centril\n\nlibrustc_passes => 2018\n\nTransitions `librustc_passes` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "37fced280c11d53deda4c7ccc7e459afbc69dd7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37fced280c11d53deda4c7ccc7e459afbc69dd7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXg2pCRBK7hj4Ov3rIwAAdHIIAJwnh+BYahl70XX0drE/6APD\nrSjuvisEinWULTEDabUY2ZV3oejXPFY86p3vxmI3YJ4I4uZmX4JlfeJoqqAYHZYj\n8EQ24Tml3NvkW7w1aJdN0kGNDGSQJavPBRu/NpKzbgTuV80wlacm0sZIlRxQ7qFd\nR71wjWOdNXP/RTiHMXMi3lDnEitIxq3R3IicxMO8W2HoIzy8ad4mrziq8yIrSqTM\nAeD8Ge8jUxZBYLne6ilYfPZEeFk9lpCEQooEkP2mz9NzeuzKfotJafvj3yrIjnnx\nOdJDJz5Frf2IXvW4b96AKYrSw5dCgkra+25tyfY1cP9BndUF20BdIsP2V9Fxcnk=\n=jR2i\n-----END PGP SIGNATURE-----\n", "payload": "tree 37fced280c11d53deda4c7ccc7e459afbc69dd7d\nparent 543f4571697178193c4619020e05853c2fb60e0c\nparent bf531bd4594ad78fe3443554e2b80d7a496faf4a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1549667753 +0100\ncommitter GitHub <noreply@github.com> 1549667753 +0100\n\nRollup merge of #58247 - taiki-e:librustc_passes-2018, r=Centril\n\nlibrustc_passes => 2018\n\nTransitions `librustc_passes` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "html_url": "https://github.com/rust-lang/rust/commit/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "543f4571697178193c4619020e05853c2fb60e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/543f4571697178193c4619020e05853c2fb60e0c", "html_url": "https://github.com/rust-lang/rust/commit/543f4571697178193c4619020e05853c2fb60e0c"}, {"sha": "bf531bd4594ad78fe3443554e2b80d7a496faf4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf531bd4594ad78fe3443554e2b80d7a496faf4a", "html_url": "https://github.com/rust-lang/rust/commit/bf531bd4594ad78fe3443554e2b80d7a496faf4a"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "00bdcdc0cc021151de881115c9b99b3fbd97d551", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_passes\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_passes\"\n@@ -16,4 +17,4 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n syntax = { path = \"../libsyntax\" }\n syntax_ext = { path = \"../libsyntax_ext\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }"}, {"sha": "a391a316312692393a3a9d351f1844d8f80140fe", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -17,10 +17,11 @@ use syntax::source_map::Spanned;\n use syntax::symbol::keywords;\n use syntax::ptr::P;\n use syntax::visit::{self, Visitor};\n+use syntax::{span_err, struct_span_err, walk_list};\n use syntax_ext::proc_macro_decls::is_proc_macro_attr;\n use syntax_pos::Span;\n-use errors;\n use errors::Applicability;\n+use log::debug;\n \n struct AstValidator<'a> {\n     session: &'a Session,"}, {"sha": "19d4d3aeb0f6530e06a0a724bb89c2cb0e52b4b6", "filename": "src/librustc_passes/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostics.rs?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -1,5 +1,7 @@\n #![allow(non_snake_case)]\n \n+use syntax::{register_diagnostic, register_diagnostics, register_long_diagnostics};\n+\n register_long_diagnostics! {\n /*\n E0014: r##\""}, {"sha": "2427abad07c958853f3451c0bab378f231755cb1", "filename": "src/librustc_passes/hir_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fhir_stats.rs?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -61,7 +61,7 @@ impl<'k> StatCollector<'k> {\n         });\n \n         entry.count += 1;\n-        entry.size = ::std::mem::size_of_val(node);\n+        entry.size = std::mem::size_of_val(node);\n     }\n \n     fn print(&self, title: &str) {"}, {"sha": "ff2e345d08401a5132059b8c45c5401d7d2d2b6c", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -11,18 +11,10 @@\n \n #![recursion_limit=\"256\"]\n \n-#[macro_use]\n-extern crate rustc;\n-extern crate rustc_mir;\n-extern crate rustc_data_structures;\n+#![deny(rust_2018_idioms)]\n \n #[macro_use]\n-extern crate log;\n-#[macro_use]\n-extern crate syntax;\n-extern crate syntax_ext;\n-extern crate syntax_pos;\n-extern crate rustc_errors as errors;\n+extern crate rustc;\n \n use rustc::ty::query::Providers;\n \n@@ -36,7 +28,7 @@ pub mod loops;\n \n __build_diagnostic_array! { librustc_passes, DIAGNOSTICS }\n \n-pub fn provide(providers: &mut Providers) {\n+pub fn provide(providers: &mut Providers<'_>) {\n     rvalue_promotion::provide(providers);\n     loops::provide(providers);\n }"}, {"sha": "533e043efa9d223f4f3f1addc239f21a25d58b46", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -1,4 +1,4 @@\n-use self::Context::*;\n+use Context::*;\n \n use rustc::session::Session;\n \n@@ -9,6 +9,7 @@ use rustc::hir::map::Map;\n use rustc::hir::intravisit::{self, Visitor, NestedVisitorMap};\n use rustc::hir::{self, Node, Destination};\n use syntax::ast;\n+use syntax::struct_span_err;\n use syntax_pos::Span;\n use errors::Applicability;\n \n@@ -59,7 +60,7 @@ fn check_mod_loops<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>, module_def_id: DefId) {\n     }.as_deep_visitor());\n }\n \n-pub(crate) fn provide(providers: &mut Providers) {\n+pub(crate) fn provide(providers: &mut Providers<'_>) {\n     *providers = Providers {\n         check_mod_loops,\n         ..*providers"}, {"sha": "8d33fef5303ed11e3d8fa830ee5f3dc366646352", "filename": "src/librustc_passes/rvalue_promotion.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Frvalue_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c/src%2Flibrustc_passes%2Frvalue_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Frvalue_promotion.rs?ref=50df4d188ffe4b6129ebc3eb99465f9ba36f5c9c", "patch": "@@ -28,10 +28,11 @@ use rustc::hir;\n use rustc_data_structures::sync::Lrc;\n use syntax::ast;\n use syntax_pos::{Span, DUMMY_SP};\n-use self::Promotability::*;\n+use log::debug;\n+use Promotability::*;\n use std::ops::{BitAnd, BitAndAssign, BitOr};\n \n-pub fn provide(providers: &mut Providers) {\n+pub fn provide(providers: &mut Providers<'_>) {\n     *providers = Providers {\n         rvalue_promotable_map,\n         const_is_rvalue_promotable_to_static,\n@@ -621,7 +622,7 @@ impl<'a, 'gcx, 'tcx> euv::Delegate<'tcx> for CheckCrateVisitor<'a, 'gcx> {\n     fn consume(&mut self,\n                _consume_id: ast::NodeId,\n                _consume_span: Span,\n-               _cmt: &mc::cmt_,\n+               _cmt: &mc::cmt_<'_>,\n                _mode: euv::ConsumeMode) {}\n \n     fn borrow(&mut self,\n@@ -680,11 +681,14 @@ impl<'a, 'gcx, 'tcx> euv::Delegate<'tcx> for CheckCrateVisitor<'a, 'gcx> {\n     fn mutate(&mut self,\n               _assignment_id: ast::NodeId,\n               _assignment_span: Span,\n-              _assignee_cmt: &mc::cmt_,\n+              _assignee_cmt: &mc::cmt_<'_>,\n               _mode: euv::MutateMode) {\n     }\n \n-    fn matched_pat(&mut self, _: &hir::Pat, _: &mc::cmt_, _: euv::MatchMode) {}\n+    fn matched_pat(&mut self, _: &hir::Pat, _: &mc::cmt_<'_>, _: euv::MatchMode) {}\n \n-    fn consume_pat(&mut self, _consume_pat: &hir::Pat, _cmt: &mc::cmt_, _mode: euv::ConsumeMode) {}\n+    fn consume_pat(&mut self,\n+                   _consume_pat: &hir::Pat,\n+                   _cmt: &mc::cmt_<'_>,\n+                   _mode: euv::ConsumeMode) {}\n }"}]}