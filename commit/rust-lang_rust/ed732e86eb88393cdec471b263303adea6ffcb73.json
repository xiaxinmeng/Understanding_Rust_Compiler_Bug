{"sha": "ed732e86eb88393cdec471b263303adea6ffcb73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNzMyZTg2ZWI4ODM5M2NkZWM0NzFiMjYzMzAzYWRlYTZmZmNiNzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-06T12:49:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-06T12:49:50Z"}, "message": "Merge #7177\n\n7177: Speed up snapshoting r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "9d76ac3477b73f1e84675ec3fee5428cb60d3075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d76ac3477b73f1e84675ec3fee5428cb60d3075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed732e86eb88393cdec471b263303adea6ffcb73", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf9bHuCRBK7hj4Ov3rIwAAdHIIABKl9TaRfukNEJkR77qWCz5X\nE2KYB7IvUDF9QFNmydZacW+GOWgD9nxi6A41H88f8XoOIl7jzYRbeWHeuyIj6RVE\n6jLeo9yhytaC1ZPD45JynOCUMxw0Q8KMElTIyLKhGzaG/IRVWnWqRv1AkWoHSWbN\nJidrJblRjOL8b6ZzUMLMnx1xy9/dP22W2tdCZw6yepYQKf6+Bjkry4usANapB9+R\nenzF7vdekC/0v8N/YhgKNjb56oMQy+Mod9aV2uYC+eHSA0ppe+rgyhPOzqlMASsr\nqVpw0Ju9vMg4yYNnSvuVrRGmR9ADHuZxB3sIRLlyRdEjxCyYFiUJNbBN6KAsrE4=\n=5idA\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d76ac3477b73f1e84675ec3fee5428cb60d3075\nparent 66c575659e17035a747d3e4e10bcf4f3669a7143\nparent 66ed821e18eadd3930a8621095c90b142763d517\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609937390 +0000\ncommitter GitHub <noreply@github.com> 1609937390 +0000\n\nMerge #7177\n\n7177: Speed up snapshoting r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed732e86eb88393cdec471b263303adea6ffcb73", "html_url": "https://github.com/rust-lang/rust/commit/ed732e86eb88393cdec471b263303adea6ffcb73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed732e86eb88393cdec471b263303adea6ffcb73/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66c575659e17035a747d3e4e10bcf4f3669a7143", "url": "https://api.github.com/repos/rust-lang/rust/commits/66c575659e17035a747d3e4e10bcf4f3669a7143", "html_url": "https://github.com/rust-lang/rust/commit/66c575659e17035a747d3e4e10bcf4f3669a7143"}, {"sha": "66ed821e18eadd3930a8621095c90b142763d517", "url": "https://api.github.com/repos/rust-lang/rust/commits/66ed821e18eadd3930a8621095c90b142763d517", "html_url": "https://github.com/rust-lang/rust/commit/66ed821e18eadd3930a8621095c90b142763d517"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1f6bf1c8cbbcde9be99f87d54e5a951eb7d7c245", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ed732e86eb88393cdec471b263303adea6ffcb73/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed732e86eb88393cdec471b263303adea6ffcb73/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=ed732e86eb88393cdec471b263303adea6ffcb73", "patch": "@@ -67,7 +67,7 @@ pub(crate) struct GlobalState {\n     pub(crate) flycheck: Vec<FlycheckHandle>,\n     pub(crate) flycheck_sender: Sender<flycheck::Message>,\n     pub(crate) flycheck_receiver: Receiver<flycheck::Message>,\n-    pub(crate) config: Config,\n+    pub(crate) config: Arc<Config>,\n     pub(crate) analysis_host: AnalysisHost,\n     pub(crate) diagnostics: DiagnosticCollection,\n     pub(crate) mem_docs: FxHashMap<VfsPath, DocumentData>,\n@@ -83,7 +83,7 @@ pub(crate) struct GlobalState {\n \n /// An immutable snapshot of the world's state at a point in time.\n pub(crate) struct GlobalStateSnapshot {\n-    pub(crate) config: Config,\n+    pub(crate) config: Arc<Config>,\n     pub(crate) analysis: Analysis,\n     pub(crate) check_fixes: CheckFixes,\n     pub(crate) latest_requests: Arc<RwLock<LatestRequests>>,\n@@ -119,7 +119,7 @@ impl GlobalState {\n             flycheck: Vec::new(),\n             flycheck_sender,\n             flycheck_receiver,\n-            config,\n+            config: Arc::new(config),\n             analysis_host,\n             diagnostics: Default::default(),\n             mem_docs: FxHashMap::default(),\n@@ -184,7 +184,7 @@ impl GlobalState {\n \n     pub(crate) fn snapshot(&self) -> GlobalStateSnapshot {\n         GlobalStateSnapshot {\n-            config: self.config.clone(),\n+            config: Arc::clone(&self.config),\n             workspaces: Arc::clone(&self.workspaces),\n             analysis: self.analysis_host.analysis(),\n             vfs: Arc::clone(&self.vfs),"}, {"sha": "7ac6acf708dbbe01aecd9294727769472ee814f3", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed732e86eb88393cdec471b263303adea6ffcb73/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed732e86eb88393cdec471b263303adea6ffcb73/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=ed732e86eb88393cdec471b263303adea6ffcb73", "patch": "@@ -609,7 +609,7 @@ impl GlobalState {\n                                 if let Some(json) = configs.get_mut(0) {\n                                     // Note that json can be null according to the spec if the client can't\n                                     // provide a configuration. This is handled in Config::update below.\n-                                    let mut config = this.config.clone();\n+                                    let mut config = Config::clone(&*this.config);\n                                     config.update(json.take());\n                                     this.update_configuration(config);\n                                 }"}, {"sha": "76b50931ad61223b0ef6aacfad6c778b5e6aa5da", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed732e86eb88393cdec471b263303adea6ffcb73/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed732e86eb88393cdec471b263303adea6ffcb73/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=ed732e86eb88393cdec471b263303adea6ffcb73", "patch": "@@ -18,7 +18,7 @@ use lsp_ext::StatusParams;\n impl GlobalState {\n     pub(crate) fn update_configuration(&mut self, config: Config) {\n         let _p = profile::span(\"GlobalState::update_configuration\");\n-        let old_config = mem::replace(&mut self.config, config);\n+        let old_config = mem::replace(&mut self.config, Arc::new(config));\n         if self.config.lru_capacity() != old_config.lru_capacity() {\n             self.analysis_host.update_lru_capacity(self.config.lru_capacity());\n         }"}]}