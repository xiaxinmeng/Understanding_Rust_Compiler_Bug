{"sha": "31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYjBkMWI0YmRmNDc1NTQ2MDRiZDQ5NjJkOGQ5NDBjNWUyOWNjN2E=", "commit": {"author": {"name": "Tom Lee", "email": "github@tomlee.co", "date": "2012-02-03T11:28:49Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-03T13:09:44Z"}, "message": "core: rename str::lteq to str::le", "tree": {"sha": "b80e7ed47a9ab5823704669cc4a1133e1a9a01ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b80e7ed47a9ab5823704669cc4a1133e1a9a01ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "html_url": "https://github.com/rust-lang/rust/commit/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/comments", "author": {"login": "thomaslee", "id": 93216, "node_id": "MDQ6VXNlcjkzMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/93216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaslee", "html_url": "https://github.com/thomaslee", "followers_url": "https://api.github.com/users/thomaslee/followers", "following_url": "https://api.github.com/users/thomaslee/following{/other_user}", "gists_url": "https://api.github.com/users/thomaslee/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaslee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaslee/subscriptions", "organizations_url": "https://api.github.com/users/thomaslee/orgs", "repos_url": "https://api.github.com/users/thomaslee/repos", "events_url": "https://api.github.com/users/thomaslee/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaslee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "633e4502e76811183208b5d1e107c4ccde2ce36c", "url": "https://api.github.com/repos/rust-lang/rust/commits/633e4502e76811183208b5d1e107c4ccde2ce36c", "html_url": "https://github.com/rust-lang/rust/commit/633e4502e76811183208b5d1e107c4ccde2ce36c"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9c507d296c6cba4180ba68e192552c6f8fd070fd", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "patch": "@@ -1588,7 +1588,7 @@ fn method_idx(id: ast::ident, meths: [method]) -> option<uint> {\n \n fn sort_methods(meths: [method]) -> [method] {\n     fn method_lteq(a: method, b: method) -> bool {\n-        ret str::lteq(a.ident, b.ident);\n+        ret str::le(a.ident, b.ident);\n     }\n     ret std::sort::merge_sort(bind method_lteq(_, _), meths);\n }"}, {"sha": "aaf103659835a3bf0e95e71e96e48092ff8fb7f5", "filename": "src/libcore/str.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "patch": "@@ -54,7 +54,7 @@ export\n \n    // Comparing strings\n    eq,\n-   lteq,\n+   le,\n    hash,\n \n    // Iterating through strings\n@@ -704,11 +704,11 @@ Bytewise string equality\n pure fn eq(&&a: str, &&b: str) -> bool { a == b }\n \n /*\n-Function: lteq\n+Function: le\n \n Bytewise less than or equal\n */\n-pure fn lteq(&&a: str, &&b: str) -> bool { a <= b }\n+pure fn le(&&a: str, &&b: str) -> bool { a <= b }\n \n /*\n Function: hash\n@@ -1381,10 +1381,10 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_lteq() {\n-        assert (lteq(\"\", \"\"));\n-        assert (lteq(\"\", \"foo\"));\n-        assert (lteq(\"foo\", \"foo\"));\n+    fn test_le() {\n+        assert (le(\"\", \"\"));\n+        assert (le(\"\", \"foo\"));\n+        assert (le(\"foo\", \"foo\"));\n         assert (!eq(\"foo\", \"bar\"));\n     }\n "}, {"sha": "6d7273ff0b19398845f754781f57fa45b566cd57", "filename": "src/libstd/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Flibstd%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Flibstd%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftest.rs?ref=31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "patch": "@@ -279,7 +279,7 @@ fn filter_tests(opts: test_opts,\n     filtered =\n         {\n             fn lteq(t1: test_desc, t2: test_desc) -> bool {\n-                str::lteq(t1.name, t2.name)\n+                str::le(t1.name, t2.name)\n             }\n             sort::merge_sort(bind lteq(_, _), filtered)\n         };"}, {"sha": "674b028d0d52ca6af45fa5040b4730cf5f9867b8", "filename": "src/rustdoc/sort_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Frustdoc%2Fsort_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a/src%2Frustdoc%2Fsort_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsort_pass.rs?ref=31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "patch": "@@ -38,7 +38,7 @@ fn fold_mod(\n #[test]\n fn test() {\n     fn name_lteq(item1: doc::itemtag, item2: doc::itemtag) -> bool {\n-        str::lteq(item1.name(), item2.name())\n+        str::le(item1.name(), item2.name())\n     }\n \n     let source = \"mod z { mod y { } fn x() { } } mod w { }\";"}]}