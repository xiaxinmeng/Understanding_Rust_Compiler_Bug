{"sha": "97b561a0944141a02a0cebe577c3c69e436abcf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YjU2MWEwOTQ0MTQxYTAyYTBjZWJlNTc3YzNjNjllNDM2YWJjZjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-14T11:57:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-14T11:57:47Z"}, "message": "Auto merge of #35667 - ollie27:rustdoc_opaque_structs, r=steveklabnik\n\nrustdoc: Don't add extra newlines for fully opaque structs\n\nChanges the definition for braced structs with only private or hidden fields to save space on the page.\n\nBefore:\n```\npub struct Vec<T> {\n    // some fields omitted\n}\n```\nAfter:\n```\npub struct Vec<T> { /* fields omitted */ }\n```\n\nThis also cleans up empty braced structs.\n\nBefore:\n```\npub struct Foo {\n}\n```\nAfter:\n```\npub struct Foo {}\n```\n\n[before](https://doc.rust-lang.org/nightly/std/vec/struct.Vec.html) [after](https://ollie27.github.io/rust_doc_test/std/vec/struct.Vec.html)\n\ncc #34713", "tree": {"sha": "6bd4298d50a67c2772db7e1cc4b44a870dfb31ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd4298d50a67c2772db7e1cc4b44a870dfb31ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97b561a0944141a02a0cebe577c3c69e436abcf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97b561a0944141a02a0cebe577c3c69e436abcf4", "html_url": "https://github.com/rust-lang/rust/commit/97b561a0944141a02a0cebe577c3c69e436abcf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97b561a0944141a02a0cebe577c3c69e436abcf4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "739d57180fa207410b8858f8cede7b8a9ea6f01e", "url": "https://api.github.com/repos/rust-lang/rust/commits/739d57180fa207410b8858f8cede7b8a9ea6f01e", "html_url": "https://github.com/rust-lang/rust/commit/739d57180fa207410b8858f8cede7b8a9ea6f01e"}, {"sha": "8154a6bc69b42813ffda91adcefd9f277338acf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8154a6bc69b42813ffda91adcefd9f277338acf3", "html_url": "https://github.com/rust-lang/rust/commit/8154a6bc69b42813ffda91adcefd9f277338acf3"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "f352e39071c53675b6652863ca9e6b574c364ae8", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/97b561a0944141a02a0cebe577c3c69e436abcf4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b561a0944141a02a0cebe577c3c69e436abcf4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=97b561a0944141a02a0cebe577c3c69e436abcf4", "patch": "@@ -2521,19 +2521,28 @@ fn render_struct(w: &mut fmt::Formatter, it: &clean::Item,\n             if let Some(g) = g {\n                 write!(w, \"{}\", WhereClause(g))?\n             }\n-            write!(w, \" {{\\n{}\", tab)?;\n+            let mut has_visible_fields = false;\n+            write!(w, \" {{\")?;\n             for field in fields {\n                 if let clean::StructFieldItem(ref ty) = field.inner {\n-                    write!(w, \"    {}{}: {},\\n{}\",\n+                    write!(w, \"\\n{}    {}{}: {},\",\n+                           tab,\n                            VisSpace(&field.visibility),\n                            field.name.as_ref().unwrap(),\n-                           *ty,\n-                           tab)?;\n+                           *ty)?;\n+                    has_visible_fields = true;\n                 }\n             }\n \n-            if it.has_stripped_fields().unwrap() {\n-                write!(w, \"    // some fields omitted\\n{}\", tab)?;\n+            if has_visible_fields {\n+                if it.has_stripped_fields().unwrap() {\n+                    write!(w, \"\\n{}    // some fields omitted\", tab)?;\n+                }\n+                write!(w, \"\\n{}\", tab)?;\n+            } else if it.has_stripped_fields().unwrap() {\n+                // If there are no visible fields we can just display\n+                // `{ /* fields omitted */ }` to save space.\n+                write!(w, \" /* fields omitted */ \")?;\n             }\n             write!(w, \"}}\")?;\n         }"}, {"sha": "75d9be856d74cc477f39eee65a93f1fd6cae316b", "filename": "src/test/rustdoc/structfields.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/97b561a0944141a02a0cebe577c3c69e436abcf4/src%2Ftest%2Frustdoc%2Fstructfields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b561a0944141a02a0cebe577c3c69e436abcf4/src%2Ftest%2Frustdoc%2Fstructfields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstructfields.rs?ref=97b561a0944141a02a0cebe577c3c69e436abcf4", "patch": "@@ -48,3 +48,13 @@ pub enum Qux {\n         // @has - //pre \"// some fields omitted\"\n     },\n }\n+\n+// @has structfields/struct.Baz.html //pre \"pub struct Baz { /* fields omitted */ }\"\n+pub struct Baz {\n+    x: u8,\n+    #[doc(hidden)]\n+    pub y: u8,\n+}\n+\n+// @has structfields/struct.Quux.html //pre \"pub struct Quux {}\"\n+pub struct Quux {}"}]}