{"sha": "2846e033d7eb961a5043a8cf5b8c6f516ba97b90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NDZlMDMzZDdlYjk2MWE1MDQzYThjZjViOGM2ZjUxNmJhOTdiOTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-03T00:08:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-03T00:08:40Z"}, "message": "automated merge", "tree": {"sha": "03c70c524e445864ef29ce212628cc35c8fde4c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03c70c524e445864ef29ce212628cc35c8fde4c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2846e033d7eb961a5043a8cf5b8c6f516ba97b90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2846e033d7eb961a5043a8cf5b8c6f516ba97b90", "html_url": "https://github.com/rust-lang/rust/commit/2846e033d7eb961a5043a8cf5b8c6f516ba97b90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2846e033d7eb961a5043a8cf5b8c6f516ba97b90/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ebdb1a11bb356a3ef7ab7f549144e44e0d313ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebdb1a11bb356a3ef7ab7f549144e44e0d313ea", "html_url": "https://github.com/rust-lang/rust/commit/8ebdb1a11bb356a3ef7ab7f549144e44e0d313ea"}, {"sha": "dffc3f82b25dc8a5398ecb3a40bb7057cb2e7c5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dffc3f82b25dc8a5398ecb3a40bb7057cb2e7c5e", "html_url": "https://github.com/rust-lang/rust/commit/dffc3f82b25dc8a5398ecb3a40bb7057cb2e7c5e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "4ff7783888f8d38e2d7b0c79192c07228e1dccd7", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2846e033d7eb961a5043a8cf5b8c6f516ba97b90/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/2846e033d7eb961a5043a8cf5b8c6f516ba97b90/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=2846e033d7eb961a5043a8cf5b8c6f516ba97b90", "patch": "@@ -12,25 +12,24 @@ endif\n \n syn match     rustAssert      \"\\<assert\\(\\w\\)*\"\n syn keyword   rustKeyword     as break\n-syn keyword   rustKeyword     const copy do drop else export extern fail\n+syn keyword   rustKeyword     copy do drop else extern\n syn keyword   rustKeyword     for if impl let log\n-syn keyword   rustKeyword     loop match mod move mut once priv pure\n-syn match     rustKeyword     \"\\<pub\\>\"\n+syn keyword   rustKeyword     loop match mod move once priv pub pure\n syn keyword   rustKeyword     ref return static\n-syn match     rustKeyword     \"\\<unsafe\\>\" \" Allows also matching unsafe::foo()\n-syn keyword   rustKeyword     use while\n+syn keyword   rustKeyword     unsafe use while\n \" FIXME: Scoped impl's name is also fallen in this category\n syn keyword   rustKeyword     mod trait struct enum type nextgroup=rustIdentifier skipwhite\n syn keyword   rustKeyword     fn nextgroup=rustFuncName skipwhite\n+syn keyword   rustStorage     const mut\n \n syn match     rustIdentifier  contains=rustIdentifierPrime \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n \n \" Reserved words\n-syn keyword   rustKeyword     m32 m64 m128 f80 f16 f128\n+syn keyword   rustKeyword     m32 m64 m128 f80 f16 f128 be\n \n syn keyword   rustType        int uint float char bool u8 u16 u32 u64 f32\n-syn keyword   rustType        f64 i8 i16 i32 i64 str\n+syn keyword   rustType        f64 i8 i16 i32 i64 str Self\n syn keyword   rustType        Option Either\n \n \" Types from libc\n@@ -134,6 +133,7 @@ hi def link rustMacro         Macro\n hi def link rustType          Type\n hi def link rustTodo          Todo\n hi def link rustAttribute     PreProc\n+hi def link rustStorage       StorageClass\n \n \" Other Suggestions:\n \" hi rustAssert ctermfg=yellow"}]}