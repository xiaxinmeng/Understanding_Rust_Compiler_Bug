{"sha": "53d71c181e53be51a1e122146c504e758f304c38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZDcxYzE4MWU1M2JlNTFhMWUxMjIxNDZjNTA0ZTc1OGYzMDRjMzg=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-06-09T21:11:07Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-06-09T21:11:07Z"}, "message": "optimize Eq implementation for paths\n\nFilesystems generally have a tree-ish structure which means\npaths are more likely to share a prefix than a suffix. Absolute paths\nare especially prone to share long prefixes.", "tree": {"sha": "fd23fb9e907a15858b37b16f9014f083e592726d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd23fb9e907a15858b37b16f9014f083e592726d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53d71c181e53be51a1e122146c504e758f304c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53d71c181e53be51a1e122146c504e758f304c38", "html_url": "https://github.com/rust-lang/rust/commit/53d71c181e53be51a1e122146c504e758f304c38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53d71c181e53be51a1e122146c504e758f304c38/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47d38752c65359e1f4558d7a06935982fb8b486f", "url": "https://api.github.com/repos/rust-lang/rust/commits/47d38752c65359e1f4558d7a06935982fb8b486f", "html_url": "https://github.com/rust-lang/rust/commit/47d38752c65359e1f4558d7a06935982fb8b486f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6ccf4c9656e087b52f96314e4e56bfce4755880c", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53d71c181e53be51a1e122146c504e758f304c38/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53d71c181e53be51a1e122146c504e758f304c38/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=53d71c181e53be51a1e122146c504e758f304c38", "patch": "@@ -951,7 +951,7 @@ impl FusedIterator for Components<'_> {}\n impl<'a> cmp::PartialEq for Components<'a> {\n     #[inline]\n     fn eq(&self, other: &Components<'a>) -> bool {\n-        Iterator::eq(self.clone(), other.clone())\n+        Iterator::eq(self.clone().rev(), other.clone().rev())\n     }\n }\n "}]}