{"sha": "7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ODhjZDZhMWIzNjA0ZDZiNGYxMWE3ZjgzYjYwMDZhMzRjZGEwYzA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-26T19:25:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T19:25:46Z"}, "message": "Merge #5083\n\n5083: Micro-optimize lookahead in composite tokens r=matklad a=lnicola\n\nI'm not sure that this is measurable, but can't hurt, I guess.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "bd1d793159823b525efb359ddd352839fbe24c14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd1d793159823b525efb359ddd352839fbe24c14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9ku6CRBK7hj4Ov3rIwAAdHIIACBTSa73FnS49EivSbB7aNVZ\nmShurLh6BbrOFvqcrGBf8iOsC48uzFmUI0kBQ4BBUAaBKblDtZ8hb9HWTz+MAf9K\new+ELRXe6jRgf4KlAPpXwFXW97AP/oazX6O0CuNzJ7aJd406tlKw0LrAoHWWIl40\nJkP6GRwK68X55U30ejbCcnU1SqzCW4gYILJpjtL2df/vtls+Jr1hT1gjxgnKMLUA\nW7EEj9wgEYXatMuKjXkHsEP6NFyTvpK6ZIZkY8hErsO4tfP1fo455JRq8er4fdi5\nJoKu+nOsxNizCmUGpxDYU3Lxty7idN7XJt7oIv5scIGnPvaZqKeaEGNJR1RGp3k=\n=KPMq\n-----END PGP SIGNATURE-----\n", "payload": "tree bd1d793159823b525efb359ddd352839fbe24c14\nparent e628c6635917cb9a280b435cc1cd55bc511ed770\nparent 2c72d2f438fe0f8b1cbc41ac12e578a5817bafc4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593199546 +0000\ncommitter GitHub <noreply@github.com> 1593199546 +0000\n\nMerge #5083\n\n5083: Micro-optimize lookahead in composite tokens r=matklad a=lnicola\n\nI'm not sure that this is measurable, but can't hurt, I guess.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0", "html_url": "https://github.com/rust-lang/rust/commit/7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e628c6635917cb9a280b435cc1cd55bc511ed770", "url": "https://api.github.com/repos/rust-lang/rust/commits/e628c6635917cb9a280b435cc1cd55bc511ed770", "html_url": "https://github.com/rust-lang/rust/commit/e628c6635917cb9a280b435cc1cd55bc511ed770"}, {"sha": "2c72d2f438fe0f8b1cbc41ac12e578a5817bafc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c72d2f438fe0f8b1cbc41ac12e578a5817bafc4", "html_url": "https://github.com/rust-lang/rust/commit/2c72d2f438fe0f8b1cbc41ac12e578a5817bafc4"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "d797f2cc96382d8e89cf4987206058c2dbf4ce0c", "filename": "crates/ra_parser/src/parser.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0/crates%2Fra_parser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0/crates%2Fra_parser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fparser.rs?ref=7488cd6a1b3604d6b4f11a7f83b6006a34cda0c0", "patch": "@@ -127,17 +127,24 @@ impl<'t> Parser<'t> {\n \n     fn at_composite2(&self, n: usize, k1: SyntaxKind, k2: SyntaxKind) -> bool {\n         let t1 = self.token_source.lookahead_nth(n);\n+        if t1.kind != k1 || !t1.is_jointed_to_next {\n+            return false;\n+        }\n         let t2 = self.token_source.lookahead_nth(n + 1);\n-        t1.kind == k1 && t1.is_jointed_to_next && t2.kind == k2\n+        t2.kind == k2\n     }\n \n     fn at_composite3(&self, n: usize, k1: SyntaxKind, k2: SyntaxKind, k3: SyntaxKind) -> bool {\n         let t1 = self.token_source.lookahead_nth(n);\n+        if t1.kind != k1 || !t1.is_jointed_to_next {\n+            return false;\n+        }\n         let t2 = self.token_source.lookahead_nth(n + 1);\n+        if t2.kind != k2 || !t2.is_jointed_to_next {\n+            return false;\n+        }\n         let t3 = self.token_source.lookahead_nth(n + 2);\n-        (t1.kind == k1 && t1.is_jointed_to_next)\n-            && (t2.kind == k2 && t2.is_jointed_to_next)\n-            && t3.kind == k3\n+        t3.kind == k3\n     }\n \n     /// Checks if the current token is in `kinds`."}]}