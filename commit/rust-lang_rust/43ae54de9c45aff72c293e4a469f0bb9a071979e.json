{"sha": "43ae54de9c45aff72c293e4a469f0bb9a071979e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYWU1NGRlOWM0NWFmZjcyYzI5M2U0YTQ2OWYwYmI5YTA3MTk3OWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-30T11:45:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T11:45:08Z"}, "message": "Rollup merge of #72521 - Amanieu:fix-72484, r=petrochenkov\n\nProperly handle InlineAsmOperand::SymFn when collecting monomorphized items\n\nFixes #72484", "tree": {"sha": "ae9516d91282636e1bc5a4352852eead42b1fab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae9516d91282636e1bc5a4352852eead42b1fab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43ae54de9c45aff72c293e4a469f0bb9a071979e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0kdECRBK7hj4Ov3rIwAAdHIIAFR6vG+4crNuUt+NkylwJKVU\nW9w8LQRPzXOIKtqRzjM0h6pLNdkzwwNaJF9jiCQ4F8LfrfoXuAId+7/86pHh8o/k\n1z6jTGUgx6sa1AtGN9ZbzJN4uOK7IlcEBrKxMBP2j8l1M6wXlnauqrMEBjYRyMkx\nkjE6HCQTnMlx1rSngEf4ZcEtCdcqY5mztQazFMI1nAk0eG8ytI6MywTI5dTrTSAS\nMTjUMMFTsFd0LHN2wtLcDoT928fjGZ4XWAEVzF3sOG89kku4PJM3yB+eVDBpYjyp\nR14NdLz882j+gNdpmm4P2S/ct6UdDqLYw8hoUltdUnXiuKyR6s1q9knARAWSVq0=\n=5CR2\n-----END PGP SIGNATURE-----\n", "payload": "tree ae9516d91282636e1bc5a4352852eead42b1fab6\nparent 8d64fd80adef2c80325f7a5a545108035198daba\nparent 3ed1e79cc40133b6cdb65955c7433cc483a89ca8\nauthor Ralf Jung <post@ralfj.de> 1590839108 +0200\ncommitter GitHub <noreply@github.com> 1590839108 +0200\n\nRollup merge of #72521 - Amanieu:fix-72484, r=petrochenkov\n\nProperly handle InlineAsmOperand::SymFn when collecting monomorphized items\n\nFixes #72484\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43ae54de9c45aff72c293e4a469f0bb9a071979e", "html_url": "https://github.com/rust-lang/rust/commit/43ae54de9c45aff72c293e4a469f0bb9a071979e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43ae54de9c45aff72c293e4a469f0bb9a071979e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d64fd80adef2c80325f7a5a545108035198daba", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d64fd80adef2c80325f7a5a545108035198daba", "html_url": "https://github.com/rust-lang/rust/commit/8d64fd80adef2c80325f7a5a545108035198daba"}, {"sha": "3ed1e79cc40133b6cdb65955c7433cc483a89ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed1e79cc40133b6cdb65955c7433cc483a89ca8", "html_url": "https://github.com/rust-lang/rust/commit/3ed1e79cc40133b6cdb65955c7433cc483a89ca8"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "2a6d1abba9e9dc3f588be30b7c0d2e1681b41031", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43ae54de9c45aff72c293e4a469f0bb9a071979e/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ae54de9c45aff72c293e4a469f0bb9a071979e/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=43ae54de9c45aff72c293e4a469f0bb9a071979e", "patch": "@@ -908,13 +908,12 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 mir::InlineAsmOperand::SymFn { ref value } => {\n                     let literal = self.monomorphize(&value.literal);\n                     if let ty::FnDef(def_id, substs) = literal.ty.kind {\n-                        let instance = ty::Instance::resolve(\n+                        let instance = ty::Instance::resolve_for_fn_ptr(\n                             bx.tcx(),\n                             ty::ParamEnv::reveal_all(),\n                             def_id,\n                             substs,\n                         )\n-                        .unwrap()\n                         .unwrap();\n                         InlineAsmOperandRef::SymFn { instance }\n                     } else {"}, {"sha": "a6fccac3332f1b111ab805ec016e1f6ae49bcf0f", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43ae54de9c45aff72c293e4a469f0bb9a071979e/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ae54de9c45aff72c293e4a469f0bb9a071979e/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=43ae54de9c45aff72c293e4a469f0bb9a071979e", "patch": "@@ -632,14 +632,21 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                 let ty = self.monomorphize(ty);\n                 visit_drop_use(self.tcx, ty, true, self.output);\n             }\n+            mir::TerminatorKind::InlineAsm { ref operands, .. } => {\n+                for op in operands {\n+                    if let mir::InlineAsmOperand::SymFn { value } = op {\n+                        let fn_ty = self.monomorphize(value.literal.ty);\n+                        visit_fn_use(self.tcx, fn_ty, false, &mut self.output);\n+                    }\n+                }\n+            }\n             mir::TerminatorKind::Goto { .. }\n             | mir::TerminatorKind::SwitchInt { .. }\n             | mir::TerminatorKind::Resume\n             | mir::TerminatorKind::Abort\n             | mir::TerminatorKind::Return\n             | mir::TerminatorKind::Unreachable\n-            | mir::TerminatorKind::Assert { .. }\n-            | mir::TerminatorKind::InlineAsm { .. } => {}\n+            | mir::TerminatorKind::Assert { .. } => {}\n             mir::TerminatorKind::GeneratorDrop\n             | mir::TerminatorKind::Yield { .. }\n             | mir::TerminatorKind::FalseEdges { .. }"}, {"sha": "83a3672af49ce620b3b534a0587c689889d5c660", "filename": "src/test/ui/asm/sym.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/43ae54de9c45aff72c293e4a469f0bb9a071979e/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ae54de9c45aff72c293e4a469f0bb9a071979e/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fsym.rs?ref=43ae54de9c45aff72c293e4a469f0bb9a071979e", "patch": "@@ -0,0 +1,38 @@\n+// no-system-llvm\n+// only-x86_64\n+// run-pass\n+\n+#![feature(asm, track_caller)]\n+\n+extern \"C\" fn f1() -> i32 {\n+    111\n+}\n+\n+// The compiler will generate a shim to hide the caller location parameter.\n+#[track_caller]\n+fn f2() -> i32 {\n+    222\n+}\n+\n+macro_rules! call {\n+    ($func:path) => {{\n+        let result: i32;\n+        unsafe {\n+            asm!(\"call {}\", sym $func,\n+                out(\"rax\") result,\n+                out(\"rcx\") _, out(\"rdx\") _, out(\"rdi\") _, out(\"rsi\") _,\n+                out(\"r8\") _, out(\"r9\") _, out(\"r10\") _, out(\"r11\") _,\n+                out(\"xmm0\") _, out(\"xmm1\") _, out(\"xmm2\") _, out(\"xmm3\") _,\n+                out(\"xmm4\") _, out(\"xmm5\") _, out(\"xmm6\") _, out(\"xmm7\") _,\n+                out(\"xmm8\") _, out(\"xmm9\") _, out(\"xmm10\") _, out(\"xmm11\") _,\n+                out(\"xmm12\") _, out(\"xmm13\") _, out(\"xmm14\") _, out(\"xmm15\") _,\n+            );\n+        }\n+        result\n+    }}\n+}\n+\n+fn main() {\n+    assert_eq!(call!(f1), 111);\n+    assert_eq!(call!(f2), 222);\n+}"}]}