{"sha": "b6def6575cc0d1534f1fd9dcd04aa3fc40620e88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZGVmNjU3NWNjMGQxNTM0ZjFmZDlkY2QwNGFhM2ZjNDA2MjBlODg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-04T18:39:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-04T18:39:04Z"}, "message": "Merge #6724\n\n6724: Fix `diagnostics` subcommand, look at all modules r=jonas-schievink a=jonas-schievink\n\nThe `diagnostics` subcommand used to only compute diagnostics for `lib.rs` / the root module of all workspace crates. This fixed it and makes it look at every module.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "3c7225d32f405ea993583bbe9c8e7efe69babd04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c7225d32f405ea993583bbe9c8e7efe69babd04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6def6575cc0d1534f1fd9dcd04aa3fc40620e88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfyoJICRBK7hj4Ov3rIwAAdHIIAEfx+7V4gvIInrIWvHsTPgZS\nS9dj1gZeJy/M7tjzWNuLcjjfje4ElERDE7W92JsSzI0dTtnxCY6ZIs/htNDvAN/o\nvmb/oDde9nyB4dMrn8XslmZVQOruvWp81dpNVwu51p96DeBPmkNirBZojvNJ6Lau\n+V562/q/CLUZoL3Dvg/CEMkJ0s3Ui40aWoZwkG/lS37d+dTtKocSBM1+7lanz1dT\nE35vW6COSFEnFlL/sXjDpP0+CZ0RQEOglbKbPfMol5yUowW06IOG4bgOQDNw/ajt\nkfu2hidYW3VJAwqgcYT9YQkczwT0Ksfo7EXGtjL08Du1T9zjunoGYjz66iRQalc=\n=KAmF\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c7225d32f405ea993583bbe9c8e7efe69babd04\nparent 7efab3ed032e84ae8d8acf807aeb914365a9ac50\nparent e45ab7e0ecb681a2d19bd94fb0b2c09b88309319\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607107144 +0000\ncommitter GitHub <noreply@github.com> 1607107144 +0000\n\nMerge #6724\n\n6724: Fix `diagnostics` subcommand, look at all modules r=jonas-schievink a=jonas-schievink\n\nThe `diagnostics` subcommand used to only compute diagnostics for `lib.rs` / the root module of all workspace crates. This fixed it and makes it look at every module.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6def6575cc0d1534f1fd9dcd04aa3fc40620e88", "html_url": "https://github.com/rust-lang/rust/commit/b6def6575cc0d1534f1fd9dcd04aa3fc40620e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6def6575cc0d1534f1fd9dcd04aa3fc40620e88/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7efab3ed032e84ae8d8acf807aeb914365a9ac50", "url": "https://api.github.com/repos/rust-lang/rust/commits/7efab3ed032e84ae8d8acf807aeb914365a9ac50", "html_url": "https://github.com/rust-lang/rust/commit/7efab3ed032e84ae8d8acf807aeb914365a9ac50"}, {"sha": "e45ab7e0ecb681a2d19bd94fb0b2c09b88309319", "url": "https://api.github.com/repos/rust-lang/rust/commits/e45ab7e0ecb681a2d19bd94fb0b2c09b88309319", "html_url": "https://github.com/rust-lang/rust/commit/e45ab7e0ecb681a2d19bd94fb0b2c09b88309319"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "0090fd2c272c2611b9d18b7a0ee25fb953a0449b", "filename": "crates/rust-analyzer/src/cli/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b6def6575cc0d1534f1fd9dcd04aa3fc40620e88/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6def6575cc0d1534f1fd9dcd04aa3fc40620e88/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs?ref=b6def6575cc0d1534f1fd9dcd04aa3fc40620e88", "patch": "@@ -6,12 +6,25 @@ use std::path::Path;\n use anyhow::anyhow;\n use rustc_hash::FxHashSet;\n \n-use hir::Crate;\n+use hir::{db::HirDatabase, Crate, Module};\n use ide::{DiagnosticsConfig, Severity};\n use ide_db::base_db::SourceDatabaseExt;\n \n use crate::cli::{load_cargo::load_cargo, Result};\n \n+fn all_modules(db: &dyn HirDatabase) -> Vec<Module> {\n+    let mut worklist: Vec<_> =\n+        Crate::all(db).into_iter().map(|krate| krate.root_module(db)).collect();\n+    let mut modules = Vec::new();\n+\n+    while let Some(module) = worklist.pop() {\n+        modules.push(module);\n+        worklist.extend(module.children(db));\n+    }\n+\n+    modules\n+}\n+\n pub fn diagnostics(path: &Path, load_output_dirs: bool, with_proc_macro: bool) -> Result<()> {\n     let (host, _vfs) = load_cargo(path, load_output_dirs, with_proc_macro)?;\n     let db = host.raw_database();\n@@ -20,18 +33,12 @@ pub fn diagnostics(path: &Path, load_output_dirs: bool, with_proc_macro: bool) -\n     let mut found_error = false;\n     let mut visited_files = FxHashSet::default();\n \n-    let mut work = Vec::new();\n-    let krates = Crate::all(db);\n-    for krate in krates {\n-        let module = krate.root_module(db);\n-        let file_id = module.definition_source(db).file_id;\n-        let file_id = file_id.original_file(db);\n+    let work = all_modules(db).into_iter().filter(|module| {\n+        let file_id = module.definition_source(db).file_id.original_file(db);\n         let source_root = db.file_source_root(file_id);\n         let source_root = db.source_root(source_root);\n-        if !source_root.is_library {\n-            work.push(module);\n-        }\n-    }\n+        !source_root.is_library\n+    });\n \n     for module in work {\n         let file_id = module.definition_source(db).file_id.original_file(db);"}]}