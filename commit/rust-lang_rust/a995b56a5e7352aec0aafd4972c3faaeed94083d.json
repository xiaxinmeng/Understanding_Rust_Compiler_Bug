{"sha": "a995b56a5e7352aec0aafd4972c3faaeed94083d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OTViNTZhNWU3MzUyYWVjMGFhZmQ0OTcyYzNmYWFlZWQ5NDA4M2Q=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-10-03T13:54:12Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-10-04T10:47:46Z"}, "message": "Move E0508 diagnostic into mod borrowck_errors shared between ast- and mir-borrowck.", "tree": {"sha": "bb8b1a0e11e6a36b7c6d7b4b08e3bf75b719491f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8b1a0e11e6a36b7c6d7b4b08e3bf75b719491f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a995b56a5e7352aec0aafd4972c3faaeed94083d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a995b56a5e7352aec0aafd4972c3faaeed94083d", "html_url": "https://github.com/rust-lang/rust/commit/a995b56a5e7352aec0aafd4972c3faaeed94083d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a995b56a5e7352aec0aafd4972c3faaeed94083d/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a12cefb497fa6ebc397f7f2f2f14f2f2712b965d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a12cefb497fa6ebc397f7f2f2f14f2f2712b965d", "html_url": "https://github.com/rust-lang/rust/commit/a12cefb497fa6ebc397f7f2f2f14f2f2712b965d"}], "stats": {"total": 125, "additions": 67, "deletions": 58}, "files": [{"sha": "ef89b569a83764aefb58b570eb8fb6e4185a6ec6", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=a995b56a5e7352aec0aafd4972c3faaeed94083d", "patch": "@@ -147,19 +147,8 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &'a BorrowckCtxt<'a, 'tcx>,\n                 move_from.span, &move_from.descriptive_string(bccx.tcx), Origin::Ast)\n         }\n         Categorization::Interior(ref b, mc::InteriorElement(ik)) => {\n-            let type_name = match (&b.ty.sty, ik) {\n-                (&ty::TyArray(_, _), Kind::Index) => \"array\",\n-                (&ty::TySlice(_), _) => \"slice\",\n-                _ => {\n-                    span_bug!(move_from.span, \"this path should not cause illegal move\");\n-                },\n-            };\n-            let mut err = struct_span_err!(bccx, move_from.span, E0508,\n-                                           \"cannot move out of type `{}`, \\\n-                                            a non-copy {}\",\n-                                           b.ty, type_name);\n-            err.span_label(move_from.span, \"cannot move out of here\");\n-            err\n+            bccx.cannot_move_out_of_interior_noncopy(\n+                move_from.span, b.ty, ik == Kind::Index, Origin::Ast)\n         }\n \n         Categorization::Downcast(ref b, _) |"}, {"sha": "85e8e0e54fae2a6ec77a13ee18511ab6e55f8d02", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=a995b56a5e7352aec0aafd4972c3faaeed94083d", "patch": "@@ -317,51 +317,6 @@ fn main() {\n ```\n \"##,\n \n-\n-E0508: r##\"\n-A value was moved out of a non-copy fixed-size array.\n-\n-Example of erroneous code:\n-\n-```compile_fail,E0508\n-struct NonCopy;\n-\n-fn main() {\n-    let array = [NonCopy; 1];\n-    let _value = array[0]; // error: cannot move out of type `[NonCopy; 1]`,\n-                           //        a non-copy fixed-size array\n-}\n-```\n-\n-The first element was moved out of the array, but this is not\n-possible because `NonCopy` does not implement the `Copy` trait.\n-\n-Consider borrowing the element instead of moving it:\n-\n-```\n-struct NonCopy;\n-\n-fn main() {\n-    let array = [NonCopy; 1];\n-    let _value = &array[0]; // Borrowing is allowed, unlike moving.\n-}\n-```\n-\n-Alternatively, if your type implements `Clone` and you need to own the value,\n-consider borrowing and then cloning:\n-\n-```\n-#[derive(Clone)]\n-struct NonCopy;\n-\n-fn main() {\n-    let array = [NonCopy; 1];\n-    // Now you can clone the array element.\n-    let _value = array[0].clone();\n-}\n-```\n-\"##,\n-\n E0509: r##\"\n This error occurs when an attempt is made to move out of a value whose type\n implements the `Drop` trait."}, {"sha": "a1dd89f1a9f261fea33561cc5a82bde5c65c6a2c", "filename": "src/librustc_mir/diagnostics.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_mir%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_mir%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdiagnostics.rs?ref=a995b56a5e7352aec0aafd4972c3faaeed94083d", "patch": "@@ -1126,6 +1126,51 @@ You can find more information about borrowing in the rust-book:\n http://doc.rust-lang.org/book/first-edition/references-and-borrowing.html\n \"##,\n \n+E0508: r##\"\n+A value was moved out of a non-copy fixed-size array.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0508\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    let _value = array[0]; // error: cannot move out of type `[NonCopy; 1]`,\n+                           //        a non-copy fixed-size array\n+}\n+```\n+\n+The first element was moved out of the array, but this is not\n+possible because `NonCopy` does not implement the `Copy` trait.\n+\n+Consider borrowing the element instead of moving it:\n+\n+```\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    let _value = &array[0]; // Borrowing is allowed, unlike moving.\n+}\n+```\n+\n+Alternatively, if your type implements `Clone` and you need to own the value,\n+consider borrowing and then cloning:\n+\n+```\n+#[derive(Clone)]\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    // Now you can clone the array element.\n+    let _value = array[0].clone();\n+}\n+```\n+\"##,\n+\n+\n }\n \n register_diagnostics! {"}, {"sha": "3d9eae33ce7eaab78faf296762d38ceeca5120d4", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a995b56a5e7352aec0aafd4972c3faaeed94083d/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=a995b56a5e7352aec0aafd4972c3faaeed94083d", "patch": "@@ -203,6 +203,26 @@ pub trait BorrowckErrors {\n             format!(\"cannot move out of {}\", move_from_desc));\n         err\n     }\n+\n+    fn cannot_move_out_of_interior_noncopy(&self,\n+                                           move_from_span: Span,\n+                                           ty: ty::Ty,\n+                                           is_index: bool,\n+                                           o: Origin)\n+                                           -> DiagnosticBuilder\n+    {\n+        let type_name = match (&ty.sty, is_index) {\n+            (&ty::TyArray(_, _), true) => \"array\",\n+            (&ty::TySlice(_),    _) => \"slice\",\n+            _ => span_bug!(move_from_span, \"this path should not cause illegal move\"),\n+        };\n+        let mut err = struct_span_err!(self, move_from_span, E0508,\n+                                       \"cannot move out of type `{}`, \\\n+                                        a non-copy {}{OGN}\",\n+                                       ty, type_name, OGN=o);\n+        err.span_label(move_from_span, \"cannot move out of here\");\n+        err\n+    }\n }\n \n impl<'b, 'tcx, 'gcx> BorrowckErrors for TyCtxt<'b, 'tcx, 'gcx> {"}]}