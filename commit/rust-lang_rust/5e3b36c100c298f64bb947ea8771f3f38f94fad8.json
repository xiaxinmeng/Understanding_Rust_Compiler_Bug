{"sha": "5e3b36c100c298f64bb947ea8771f3f38f94fad8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlM2IzNmMxMDBjMjk4ZjY0YmI5NDdlYTg3NzFmM2YzOGY5NGZhZDg=", "commit": {"author": {"name": "Daniel J Rollins", "email": "daniel@djrollins.io", "date": "2016-03-05T17:17:36Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-19T16:36:45Z"}, "message": "Fix code review actions in PR #32053\n\nSplit `fileline_note` into a `file_line note` and `span_suggestion` as per\n@Manishearth's suggestions.\n\nChange nested `match`es to `if let`s.", "tree": {"sha": "9ff74b4955a0c4b95489d55cc3bcf84443d3ef00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ff74b4955a0c4b95489d55cc3bcf84443d3ef00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e3b36c100c298f64bb947ea8771f3f38f94fad8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3b36c100c298f64bb947ea8771f3f38f94fad8", "html_url": "https://github.com/rust-lang/rust/commit/5e3b36c100c298f64bb947ea8771f3f38f94fad8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e3b36c100c298f64bb947ea8771f3f38f94fad8/comments", "author": null, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dd5776b1110a24d9ceb1d1f89dd684d0e63fbf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd5776b1110a24d9ceb1d1f89dd684d0e63fbf7", "html_url": "https://github.com/rust-lang/rust/commit/2dd5776b1110a24d9ceb1d1f89dd684d0e63fbf7"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "3585f1e9c8805161d74a03253c2e26628e6706a7", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5e3b36c100c298f64bb947ea8771f3f38f94fad8/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3b36c100c298f64bb947ea8771f3f38f94fad8/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=5e3b36c100c298f64bb947ea8771f3f38f94fad8", "patch": "@@ -130,18 +130,18 @@ pub fn report_error<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n             }\n \n             if is_fn_ty(&rcvr_ty, &fcx, span) {\n-                let expr_string = match rcvr_expr {\n-                    Some(expr) => match cx.sess.codemap().span_to_snippet(expr.span) {\n-                        Ok(expr_string) => expr_string,\n-                        _ => \"s\".into()\n-                    },\n-                    _ => \"s\".into()\n-                };\n-                err.fileline_note(\n-                    span,\n-                    &format!(\"method invoked on function type. did you \\\n-                             mean `{}().{}(...)`?\",\n-                             expr_string, item_name));\n+                if let Some(expr) = rcvr_expr {\n+                    if let Ok (expr_string) = cx.sess.codemap().span_to_snippet(expr.span) {\n+                        err.fileline_note(\n+                            expr.span,\n+                            &format!(\"{} is a function, perhaps you wish to call it?\",\n+                                     expr_string));\n+                        err.span_suggestion(expr.span,\n+                                            \"try calling the base function:\",\n+                                            format!(\"{}()\",\n+                                                    expr_string));\n+                    }\n+                }\n             }\n \n             if !static_sources.is_empty() {"}]}