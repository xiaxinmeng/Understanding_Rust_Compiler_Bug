{"sha": "3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZGU0MjZlZGU3YmNhNGE3NGJjNjQxYTEyZjJlN2ZlMmNjMjBjNDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-30T19:52:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-30T19:52:11Z"}, "message": "Auto merge of #61353 - alexcrichton:less-tools, r=pietroalbini\n\nci: Favor SCRIPT instead of RUST_CHECK_TARGET\n\nSince #61212 we've been timing out on OSX, and this looks to be because\nwe're building tools like Cargo and the RLS twice instead of once. This\nturns out to be a slight bug in our configuration. CI builders using the\n`RUST_CHECK_TARGET` directive actually execute `make all` just before\ntheir acual target. In `make all` we're building a stage2 cargo, and\nthen in `make dist` we're building a stage1 cargo.\n\nOther builders use `SCRIPT` which provides explicit control over what\n`x.py` script, for example, is used to execute the build. This moves\nalmost all targets to using `SCRIPT` to ensure that we're explicitly\nspecifying what's being built where. Additionally this updates the logic\nof `RUST_CHECK_TARGET` to remove the pre-flight tidy as well as the\npre-flight `make all`. The system LLVM builder (run on PRs) now\nexplicitly runs tidy first and then runs the rest of the test suite.", "tree": {"sha": "e170debb73827a02d1e897c292c440e0775d4ae8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e170debb73827a02d1e897c292c440e0775d4ae8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "html_url": "https://github.com/rust-lang/rust/commit/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bfbaa6e8dfb509b453020740fd37c7a22882c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bfbaa6e8dfb509b453020740fd37c7a22882c87", "html_url": "https://github.com/rust-lang/rust/commit/0bfbaa6e8dfb509b453020740fd37c7a22882c87"}, {"sha": "ebdf42e9650a969bef553a0886d3754a670bd335", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebdf42e9650a969bef553a0886d3754a670bd335", "html_url": "https://github.com/rust-lang/rust/commit/ebdf42e9650a969bef553a0886d3754a670bd335"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "68a382bb8a75dd5fb87c93a2d60bebd028c2a43b", "filename": ".azure-pipelines/auto.yml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.azure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.azure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fauto.yml?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -165,7 +165,7 @@ jobs:\n       # Note that the compiler is compiled to target 10.8 here because the Xcode\n       # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n       x86_64-apple:\n-        RUST_CHECK_TARGET: check\n+        SCRIPT: ./x.py test\n         RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n         MACOSX_DEPLOYMENT_TARGET: 10.8\n@@ -174,7 +174,7 @@ jobs:\n         NO_DEBUG_ASSERTIONS: 1\n \n       dist-x86_64-apple:\n-        RUST_CHECK_TARGET: dist\n+        SCRIPT: ./x.py dist\n         RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc\n         DEPLOY: 1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n@@ -184,7 +184,7 @@ jobs:\n         DIST_REQUIRE_ALL_TOOLS: 1\n \n       dist-x86_64-apple-alt:\n-        RUST_CHECK_TARGET: dist\n+        SCRIPT: ./x.py dist\n         RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --enable-lldb --set rust.jemalloc\n         DEPLOY_ALT: 1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n@@ -193,7 +193,7 @@ jobs:\n         NO_DEBUG_ASSERTIONS: 1\n \n       i686-apple:\n-        RUST_CHECK_TARGET: check\n+        SCRIPT: ./x.py test\n         RUST_CONFIGURE_ARGS: --build=i686-apple-darwin --set rust.jemalloc\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n         MACOSX_DEPLOYMENT_TARGET: 10.8\n@@ -202,7 +202,7 @@ jobs:\n         NO_DEBUG_ASSERTIONS: 1\n \n       dist-i686-apple:\n-        RUST_CHECK_TARGET: dist\n+        SCRIPT: ./x.py dist\n         RUST_CONFIGURE_ARGS: --build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb --set rust.jemalloc\n         DEPLOY: 1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1"}, {"sha": "e7c6235a50444b59d25b73083b91077270fa466b", "filename": ".azure-pipelines/steps/run.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.azure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.azure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Frun.yml?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -33,7 +33,7 @@ steps:\n     brew install xz\n     brew install swig\n   displayName: Install build dependencies (OSX)\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'), eq(variables['RUST_CHECK_TARGET'],'dist'))\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'), eq(variables['SCRIPT'],'./x.py dist'))\n \n # Switch to XCode 9.3 on OSX since it seems to be the last version that supports\n # i686-apple-darwin. We'll eventually want to upgrade this and it will probably"}, {"sha": "e669925b5ff59ac6bd12d4584ae4ab50a73af550", "filename": ".azure-pipelines/try.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.azure-pipelines%2Ftry.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.azure-pipelines%2Ftry.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Ftry.yml?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -35,7 +35,7 @@ jobs:\n   strategy:\n     matrix:\n       dist-x86_64-apple:\n-        RUST_CHECK_TARGET: dist\n+        SCRIPT: ./x.py dist\n         RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc\n         DEPLOY: 1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n@@ -45,7 +45,7 @@ jobs:\n         DIST_REQUIRE_ALL_TOOLS: 1\n \n       dist-x86_64-apple-alt:\n-        RUST_CHECK_TARGET: dist\n+        SCRIPT: ./x.py dist\n         RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --enable-lldb --set rust.jemalloc\n         DEPLOY_ALT: 1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1"}, {"sha": "49a8d5b66c35697533f5ded76bdb9ea022aef70d", "filename": ".travis.yml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -36,7 +36,7 @@ matrix:\n       if: branch = try OR branch = auto\n \n     - env: >\n-        RUST_CHECK_TARGET=dist\n+        SCRIPT=\"./x.py dist\"\n         RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler --enable-lldb --set rust.jemalloc\"\n         SRC=.\n         DEPLOY_ALT=1\n@@ -59,7 +59,7 @@ matrix:\n     # Note that the compiler is compiled to target 10.8 here because the Xcode\n     # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n     - env: >\n-        RUST_CHECK_TARGET=check\n+        SCRIPT=\"./x.py test\"\n         RUST_CONFIGURE_ARGS=\"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n         SRC=.\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n@@ -73,7 +73,7 @@ matrix:\n       if: branch = auto\n \n     - env: >\n-        RUST_CHECK_TARGET=check\n+        SCRIPT=\"./x.py test\"\n         RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --set rust.jemalloc\"\n         SRC=.\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n@@ -93,7 +93,7 @@ matrix:\n     # `xcode8.2` image as above. That's because we want to build releases for\n     # OSX 10.7 and `xcode7` is the latest Xcode able to compile LLVM for 10.7.\n     - env: >\n-        RUST_CHECK_TARGET=dist\n+        SCRIPT=\"./x.py dist\"\n         RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb --set rust.jemalloc\"\n         SRC=.\n         DEPLOY=1\n@@ -108,7 +108,7 @@ matrix:\n       if: branch = auto\n \n     - env: >\n-        RUST_CHECK_TARGET=dist\n+        SCRIPT=\"./x.py dist\"\n         RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc\"\n         SRC=.\n         DEPLOY=1\n@@ -260,7 +260,7 @@ install:\n             export PATH=$PATH:$HOME\n           ;;\n         osx)\n-          if [[ \"$RUST_CHECK_TARGET\" == dist ]]; then\n+          if [[ \"$SCRIPT\" == \"./x.py dist\" ]]; then\n             travis_retry brew update &&\n             travis_retry brew install xz &&\n             travis_retry brew install swig;"}, {"sha": "2041ba50bc9a041f9ac6e7d9332203df54e454d4", "filename": "src/ci/docker/i686-gnu-nopt/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Fdocker%2Fi686-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Fdocker%2Fi686-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fi686-gnu-nopt%2FDockerfile?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -18,4 +18,4 @@ COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu --disable-optimize-tests\n-ENV RUST_CHECK_TARGET check\n+ENV SCRIPT python2.7 ../x.py test"}, {"sha": "2932f3737374560ceed092dcecb13950c872a79e", "filename": "src/ci/docker/x86_64-gnu-llvm-6.0/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Fdocker%2Fx86_64-gnu-llvm-6.0%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Fdocker%2Fx86_64-gnu-llvm-6.0%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-llvm-6.0%2FDockerfile?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -24,4 +24,4 @@ ENV RUST_CONFIGURE_ARGS \\\n       --build=x86_64-unknown-linux-gnu \\\n       --llvm-root=/usr/lib/llvm-6.0 \\\n       --enable-llvm-link-shared\n-ENV RUST_CHECK_TARGET check\n+ENV SCRIPT python2.7 ../x.py test src/tools/tidy && python2.7 ../x.py test"}, {"sha": "d0b244c9b7671b26ed6651b9e8c11fa65621b7cc", "filename": "src/ci/docker/x86_64-gnu-nopt/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Fdocker%2Fx86_64-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Fdocker%2Fx86_64-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-nopt%2FDockerfile?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -19,4 +19,4 @@ RUN sh /scripts/sccache.sh\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu \\\n   --disable-optimize-tests \\\n   --set rust.test-compare-mode\n-ENV RUST_CHECK_TARGET check\n+ENV SCRIPT python2.7 ../x.py test"}, {"sha": "811d401a83c21a02ef21aa4ae4b4a813d68b8e4c", "filename": "src/ci/run.sh", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "patch": "@@ -137,8 +137,6 @@ else\n     return $retval\n   }\n \n-  do_make tidy\n-  do_make all\n   do_make \"$RUST_CHECK_TARGET\"\n fi\n "}]}