{"sha": "10ad950130db2e78e70ae2439f3bba965329ea4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYWQ5NTAxMzBkYjJlNzhlNzBhZTI0MzlmM2JiYTk2NTMyOWVhNGY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-16T19:37:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-16T19:40:39Z"}, "message": "Fix static linkage", "tree": {"sha": "3a17b5a9bcb6766e803281105bff8dba9586e9c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a17b5a9bcb6766e803281105bff8dba9586e9c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10ad950130db2e78e70ae2439f3bba965329ea4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10ad950130db2e78e70ae2439f3bba965329ea4f", "html_url": "https://github.com/rust-lang/rust/commit/10ad950130db2e78e70ae2439f3bba965329ea4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10ad950130db2e78e70ae2439f3bba965329ea4f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c38313403f47500981d5831f7c3c81b02320dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c38313403f47500981d5831f7c3c81b02320dfe", "html_url": "https://github.com/rust-lang/rust/commit/2c38313403f47500981d5831f7c3c81b02320dfe"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "3a27b1abdbbeb6de6219a9cdf3dfad53c3344dea", "filename": "src/constant.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/10ad950130db2e78e70ae2439f3bba965329ea4f/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ad950130db2e78e70ae2439f3bba965329ea4f/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=10ad950130db2e78e70ae2439f3bba965329ea4f", "patch": "@@ -45,7 +45,7 @@ pub fn codegen_static_ref<'a, 'tcx: 'a>(\n     fx: &mut FunctionCx<'a, 'tcx, impl Backend>,\n     static_: &Static<'tcx>,\n ) -> CPlace<'tcx> {\n-    let data_id = data_id_for_static(fx.tcx, fx.module, static_.def_id);\n+    let data_id = data_id_for_static(fx.tcx, fx.module, static_.def_id, Linkage::Import);\n     cplace_for_dataid(fx, static_.ty, data_id)\n }\n \n@@ -158,6 +158,7 @@ fn data_id_for_static<'a, 'tcx: 'a, B: Backend>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     module: &mut Module<B>,\n     def_id: DefId,\n+    linkage: Linkage,\n ) -> DataId {\n     let symbol_name = tcx.symbol_name(Instance::mono(tcx, def_id)).as_str();\n     let is_mutable = if let ::rustc::hir::Mutability::MutMutable = tcx.is_static(def_id).unwrap() {\n@@ -167,7 +168,7 @@ fn data_id_for_static<'a, 'tcx: 'a, B: Backend>(\n             .is_freeze(tcx, ParamEnv::reveal_all(), DUMMY_SP)\n     };\n     module\n-        .declare_data(&*symbol_name, Linkage::Export, is_mutable)\n+        .declare_data(&*symbol_name, linkage, is_mutable)\n         .unwrap()\n }\n \n@@ -212,7 +213,7 @@ fn define_all_allocs<'a, 'tcx: 'a, B: Backend + 'a>(\n                     _ => bug!(\"static const eval returned {:#?}\", const_),\n                 };\n \n-                let data_id = data_id_for_static(tcx, module, def_id);\n+                let data_id = data_id_for_static(tcx, module, def_id, Linkage::Export);\n                 (data_id, alloc)\n             }\n         };\n@@ -251,7 +252,7 @@ fn define_all_allocs<'a, 'tcx: 'a, B: Backend + 'a>(\n                 }\n                 AllocType::Static(def_id) => {\n                     cx.todo.insert(TodoItem::Static(def_id));\n-                    data_id_for_static(tcx, module, def_id)\n+                    data_id_for_static(tcx, module, def_id, Linkage::Import)\n                 }\n             };\n "}]}