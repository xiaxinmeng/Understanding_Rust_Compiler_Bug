{"sha": "c8343b8653cdb0fb6cabf588ddee2fef07635b35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MzQzYjg2NTNjZGIwZmI2Y2FiZjU4OGRkZWUyZmVmMDc2MzViMzU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-13T20:28:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-13T20:28:09Z"}, "message": "Rollup merge of #69126 - RalfJung:exact-div, r=oli-obk\n\nmiri: fix exact_div\n\nTurns out `exact_div` was relying on the broken behavior of `Rem` for `int_min % -1` that was fixed in https://github.com/rust-lang/rust/pull/69002. This PR fixes `exact_div`.\n\nInside rustc, `exact_div` is only used in a single place where the divisor is always positive (in `ptr_offset_from`), so we cannot test the fix in rustc. The Miri test suite covers this through the `exact_div` intrinsic, though (and it is how I found out).\n\nOne step to https://github.com/rust-lang/rust/issues/69117 (then we also need to address build failures introduced by https://github.com/rust-lang/rust/pull/68969)\n\nr? @oli-obk", "tree": {"sha": "5198234d42056f95fe575335e61137dbd49f1c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5198234d42056f95fe575335e61137dbd49f1c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8343b8653cdb0fb6cabf588ddee2fef07635b35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRbFZCRBK7hj4Ov3rIwAAdHIIAF9XmsuIzXtHj0a43yFUGMPw\nKowYEGazx0rDspAbcDoxi4ouHkpGHziQE/NPQ7Uhs+I/qpPpVkeg2epvZ/6FcgGC\n4hmpS5SapwxE2BGTF2+LGxz2eEOeQNbPoS8EbzWrEuZE9rXl+l34k/MMRt+Mu4Ik\nH3O2dTeOfhrU6WBuepT/nba5UHqj5IQAWpCuADTQl3Y3gxOY6j+xDr6An7e0A2FQ\n1zdzpBGb6ZhVZg1o76N7MbkM49zZHstkdGjmqGKBVb1CmgEhdIFp0suMzASxjga1\nElAkH51GDZHXrkDRkOx3gUYFVqLOQyyWSOOjqsVpS7OTproycqp1fPEiZRQi+iY=\n=EO0o\n-----END PGP SIGNATURE-----\n", "payload": "tree 5198234d42056f95fe575335e61137dbd49f1c93\nparent 8e2772c0fdab55695d0a607f50e7deaa329e7189\nparent 10f342abae4e9aafb02c3adaaa050f43eb0e2dd0\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581625689 +0100\ncommitter GitHub <noreply@github.com> 1581625689 +0100\n\nRollup merge of #69126 - RalfJung:exact-div, r=oli-obk\n\nmiri: fix exact_div\n\nTurns out `exact_div` was relying on the broken behavior of `Rem` for `int_min % -1` that was fixed in https://github.com/rust-lang/rust/pull/69002. This PR fixes `exact_div`.\n\nInside rustc, `exact_div` is only used in a single place where the divisor is always positive (in `ptr_offset_from`), so we cannot test the fix in rustc. The Miri test suite covers this through the `exact_div` intrinsic, though (and it is how I found out).\n\nOne step to https://github.com/rust-lang/rust/issues/69117 (then we also need to address build failures introduced by https://github.com/rust-lang/rust/pull/68969)\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8343b8653cdb0fb6cabf588ddee2fef07635b35", "html_url": "https://github.com/rust-lang/rust/commit/c8343b8653cdb0fb6cabf588ddee2fef07635b35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8343b8653cdb0fb6cabf588ddee2fef07635b35/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e2772c0fdab55695d0a607f50e7deaa329e7189", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e2772c0fdab55695d0a607f50e7deaa329e7189", "html_url": "https://github.com/rust-lang/rust/commit/8e2772c0fdab55695d0a607f50e7deaa329e7189"}, {"sha": "10f342abae4e9aafb02c3adaaa050f43eb0e2dd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f342abae4e9aafb02c3adaaa050f43eb0e2dd0", "html_url": "https://github.com/rust-lang/rust/commit/10f342abae4e9aafb02c3adaaa050f43eb0e2dd0"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "1085b85d7cde3a00daa20918d0a864a385a97da3", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8343b8653cdb0fb6cabf588ddee2fef07635b35/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8343b8653cdb0fb6cabf588ddee2fef07635b35/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=c8343b8653cdb0fb6cabf588ddee2fef07635b35", "patch": "@@ -384,8 +384,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     ) -> InterpResult<'tcx> {\n         // Performs an exact division, resulting in undefined behavior where\n         // `x % y != 0` or `y == 0` or `x == T::min_value() && y == -1`.\n-        // First, check x % y != 0.\n-        if self.binary_op(BinOp::Rem, a, b)?.to_bits()? != 0 {\n+        // First, check x % y != 0 (or if that computation overflows).\n+        let (res, overflow, _ty) = self.overflowing_binary_op(BinOp::Rem, a, b)?;\n+        if overflow || res.to_bits(a.layout.size)? != 0 {\n             // Then, check if `b` is -1, which is the \"min_value / -1\" case.\n             let minus1 = Scalar::from_int(-1, dest.layout.size);\n             let b_scalar = b.to_scalar().unwrap();\n@@ -395,6 +396,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 throw_ub_format!(\"exact_div: {} cannot be divided by {} without remainder\", a, b,)\n             }\n         }\n+        // `Rem` says this is all right, so we can let `Div` do its job.\n         self.binop_ignore_overflow(BinOp::Div, a, b, dest)\n     }\n }"}]}