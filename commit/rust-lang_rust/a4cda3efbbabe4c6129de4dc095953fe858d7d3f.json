{"sha": "a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Y2RhM2VmYmJhYmU0YzYxMjlkZTRkYzA5NTk1M2ZlODU4ZDdkM2Y=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-16T19:01:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-16T19:01:30Z"}, "message": "Merge #3994\n\n3994: Don't expose SyntaxNodePtr impl details r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "13f7ec5be79c30c073475eef0d614435bc0d133a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13f7ec5be79c30c073475eef0d614435bc0d133a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJemKuKCRBK7hj4Ov3rIwAAdHIIAJhD1Gq8d03eKLs+R7hiGG7P\nFw5ru9UyBf4V+r/Ntx3H1dHurz7acplRwXEl3elKgReqyPCJMiyd6VbyFo98NhsU\naxxsb0oTebp6Y3+Ye77I83C0uq9PUsV3qu2seHTl/Fu4uzE+2hgpOTluayt09HkN\nsqXxU2AYRAD3kWPmvpWiSFwXr/s5Xu2ksvJk7AQjN+A0OXRBXMWvMdljWhhqmDil\ngiGCF60npw24OxcL7KfoeXH45nurIAcQbAT1/2XmQGaw7VFFPhjm7Lmjxcsp4l3w\n+0sFvLD/xAX9rxxiKKrdBpkV8H1v+IaJzOOOibj6HVk47Qk/oibdxhyhXVU6dAg=\n=IslJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 13f7ec5be79c30c073475eef0d614435bc0d133a\nparent fc0a47a0c19a1b58a586e30645cec4d80d700513\nparent cae2498513601c507bb10b15710feb800a24517f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587063690 +0000\ncommitter GitHub <noreply@github.com> 1587063690 +0000\n\nMerge #3994\n\n3994: Don't expose SyntaxNodePtr impl details r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "html_url": "https://github.com/rust-lang/rust/commit/a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc0a47a0c19a1b58a586e30645cec4d80d700513", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0a47a0c19a1b58a586e30645cec4d80d700513", "html_url": "https://github.com/rust-lang/rust/commit/fc0a47a0c19a1b58a586e30645cec4d80d700513"}, {"sha": "cae2498513601c507bb10b15710feb800a24517f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cae2498513601c507bb10b15710feb800a24517f", "html_url": "https://github.com/rust-lang/rust/commit/cae2498513601c507bb10b15710feb800a24517f"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "6289f53f3f0ffe7ade71b38bdf99a0673e0095a6", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "patch": "@@ -175,7 +175,7 @@ impl ToNav for FileSymbol {\n         NavigationTarget {\n             file_id: self.file_id,\n             name: self.name.clone(),\n-            kind: self.ptr.kind(),\n+            kind: self.kind,\n             full_range: self.ptr.range(),\n             focus_range: self.name_range,\n             container_name: self.container_name.clone(),"}, {"sha": "937abb4330e0c2378242005cc605851e85c9561e", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "patch": "@@ -285,7 +285,7 @@ impl Query {\n                 let (start, end) = SymbolIndex::map_value_to_range(indexed_value.value);\n \n                 for symbol in &symbol_index.symbols[start..end] {\n-                    if self.only_types && !is_type(symbol.ptr.kind()) {\n+                    if self.only_types && !is_type(symbol.kind) {\n                         continue;\n                     }\n                     if self.exact && symbol.name != self.query {\n@@ -312,6 +312,7 @@ fn is_type(kind: SyntaxKind) -> bool {\n pub struct FileSymbol {\n     pub file_id: FileId,\n     pub name: SmolStr,\n+    pub kind: SyntaxKind,\n     pub ptr: SyntaxNodePtr,\n     pub name_range: Option<TextRange>,\n     pub container_name: Option<SmolStr>,\n@@ -377,6 +378,7 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n fn to_file_symbol(node: &SyntaxNode, file_id: FileId) -> Option<FileSymbol> {\n     to_symbol(node).map(move |(name, ptr, name_range)| FileSymbol {\n         name,\n+        kind: node.kind(),\n         ptr,\n         file_id,\n         name_range: Some(name_range),"}, {"sha": "ea41bf85d16684086e45ced8ecea0b555a3bf533", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "patch": "@@ -351,7 +351,7 @@ fn with_children(\n     // FIXME: use a more elegant way to re-fetch the node (#1185), make\n     // `range` private afterwards\n     let mut ptr = SyntaxNodePtr::new(parent);\n-    ptr.range = TextRange::offset_len(ptr.range().start(), len);\n+    ptr.range = TextRange::offset_len(ptr.range.start(), len);\n     ptr.to_node(&new_root_node)\n }\n "}, {"sha": "3be648c2ae5c12397fb5df34e8e225450697c80c", "filename": "crates/ra_syntax/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cda3efbbabe4c6129de4dc095953fe858d7d3f/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fptr.rs?ref=a4cda3efbbabe4c6129de4dc095953fe858d7d3f", "patch": "@@ -34,12 +34,8 @@ impl SyntaxNodePtr {\n         self.range\n     }\n \n-    pub fn kind(&self) -> SyntaxKind {\n-        self.kind\n-    }\n-\n     pub fn cast<N: AstNode>(self) -> Option<AstPtr<N>> {\n-        if !N::can_cast(self.kind()) {\n+        if !N::can_cast(self.kind) {\n             return None;\n         }\n         Some(AstPtr { raw: self, _ty: PhantomData })\n@@ -88,7 +84,7 @@ impl<N: AstNode> AstPtr<N> {\n     }\n \n     pub fn cast<U: AstNode>(self) -> Option<AstPtr<U>> {\n-        if !U::can_cast(self.raw.kind()) {\n+        if !U::can_cast(self.raw.kind) {\n             return None;\n         }\n         Some(AstPtr { raw: self.raw, _ty: PhantomData })"}]}