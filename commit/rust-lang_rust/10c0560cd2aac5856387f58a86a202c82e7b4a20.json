{"sha": "10c0560cd2aac5856387f58a86a202c82e7b4a20", "node_id": "C_kwDOAAsO6NoAKDEwYzA1NjBjZDJhYWM1ODU2Mzg3ZjU4YTg2YTIwMmM4MmU3YjRhMjA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-15T13:37:34Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-15T13:37:34Z"}, "message": "Resolve a FIXME", "tree": {"sha": "47a44d8b7800d11ca5009fc80eba63f18ae45dd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a44d8b7800d11ca5009fc80eba63f18ae45dd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10c0560cd2aac5856387f58a86a202c82e7b4a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10c0560cd2aac5856387f58a86a202c82e7b4a20", "html_url": "https://github.com/rust-lang/rust/commit/10c0560cd2aac5856387f58a86a202c82e7b4a20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10c0560cd2aac5856387f58a86a202c82e7b4a20/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4e986c1f0c41951a61d35e198e0f45586b1894d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4e986c1f0c41951a61d35e198e0f45586b1894d", "html_url": "https://github.com/rust-lang/rust/commit/d4e986c1f0c41951a61d35e198e0f45586b1894d"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ff6c03775c58c51e555ac562fb767be374925927", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/10c0560cd2aac5856387f58a86a202c82e7b4a20/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10c0560cd2aac5856387f58a86a202c82e7b4a20/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=10c0560cd2aac5856387f58a86a202c82e7b4a20", "patch": "@@ -246,7 +246,6 @@ TrivialTypeTraversalAndLiftImpls! {\n ///////////////////////////////////////////////////////////////////////////\n // Lift implementations\n \n-// FIXME(eddyb) replace all the uses of `Option::map` with `?`.\n impl<'tcx, A: Lift<'tcx>, B: Lift<'tcx>> Lift<'tcx> for (A, B) {\n     type Lifted = (A::Lifted, B::Lifted);\n     fn lift_to_tcx(self, tcx: TyCtxt<'tcx>) -> Option<Self::Lifted> {\n@@ -264,10 +263,7 @@ impl<'tcx, A: Lift<'tcx>, B: Lift<'tcx>, C: Lift<'tcx>> Lift<'tcx> for (A, B, C)\n impl<'tcx, T: Lift<'tcx>> Lift<'tcx> for Option<T> {\n     type Lifted = Option<T::Lifted>;\n     fn lift_to_tcx(self, tcx: TyCtxt<'tcx>) -> Option<Self::Lifted> {\n-        match self {\n-            Some(x) => tcx.lift(x).map(Some),\n-            None => Some(None),\n-        }\n+        tcx.lift(self?).map(Some)\n     }\n }\n \n@@ -284,21 +280,21 @@ impl<'tcx, T: Lift<'tcx>, E: Lift<'tcx>> Lift<'tcx> for Result<T, E> {\n impl<'tcx, T: Lift<'tcx>> Lift<'tcx> for Box<T> {\n     type Lifted = Box<T::Lifted>;\n     fn lift_to_tcx(self, tcx: TyCtxt<'tcx>) -> Option<Self::Lifted> {\n-        tcx.lift(*self).map(Box::new)\n+        Some(Box::new(tcx.lift(*self)?))\n     }\n }\n \n impl<'tcx, T: Lift<'tcx> + Clone> Lift<'tcx> for Rc<T> {\n     type Lifted = Rc<T::Lifted>;\n     fn lift_to_tcx(self, tcx: TyCtxt<'tcx>) -> Option<Self::Lifted> {\n-        tcx.lift(self.as_ref().clone()).map(Rc::new)\n+        Some(Rc::new(tcx.lift(self.as_ref().clone())?))\n     }\n }\n \n impl<'tcx, T: Lift<'tcx> + Clone> Lift<'tcx> for Arc<T> {\n     type Lifted = Arc<T::Lifted>;\n     fn lift_to_tcx(self, tcx: TyCtxt<'tcx>) -> Option<Self::Lifted> {\n-        tcx.lift(self.as_ref().clone()).map(Arc::new)\n+        Some(Arc::new(tcx.lift(self.as_ref().clone())?))\n     }\n }\n impl<'tcx, T: Lift<'tcx>> Lift<'tcx> for Vec<T> {"}]}