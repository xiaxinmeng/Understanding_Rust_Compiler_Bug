{"sha": "910bb6530cc3594bbed4a140b1b47a0a22688a3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMGJiNjUzMGNjMzU5NGJiZWQ0YTE0MGIxYjQ3YTBhMjI2ODhhM2E=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-19T09:29:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-19T09:29:56Z"}, "message": "Rollup merge of #67321 - lzutao:htons, r=dtolnay\n\nmake htons const fn\n\nThis may partially help #67315.", "tree": {"sha": "fae380958aaf94c1b272a9fa1007a3c2123399e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae380958aaf94c1b272a9fa1007a3c2123399e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/910bb6530cc3594bbed4a140b1b47a0a22688a3a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd+0MUCRBK7hj4Ov3rIwAAdHIIACstUewLMaQRHQphZVZoWff9\nvHqK/y7CYsXUZmextIJDmnCKjPifNnHw5xvUuXd/JsFgrP8WZX8Fd1E/0/xslwoD\nU94fjjfcgkpTWOFzV7XtkpApZ2qu+xHKsBEkY8EHPOkUt79PUz1TidWAlxa1ufYv\n1QI3fekoJ6RtJzoFf2LoQCDl5xPR4GilNZwTxNO5Q/KrJwGrL7eCrf7varJw8H93\n+3x3hSkT/k3cEYaSrA4amGtW2AK1aQUZgnhSPqvGsdQeFtQyG3AHSz7USuWJ2Fx6\niVhg/7xvI7WEeJ6X81HkltwlYx096G6vKmR0vWS8/59U1BseNoa3RRXe1clard4=\n=mW8O\n-----END PGP SIGNATURE-----\n", "payload": "tree fae380958aaf94c1b272a9fa1007a3c2123399e4\nparent 0f19977797f9cf0416a620be2fb44a5b2b70cb6f\nparent 3594d8b8a14d48c8aec90a2e702cf312ea2d7f02\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576747796 +0100\ncommitter GitHub <noreply@github.com> 1576747796 +0100\n\nRollup merge of #67321 - lzutao:htons, r=dtolnay\n\nmake htons const fn\n\nThis may partially help #67315.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/910bb6530cc3594bbed4a140b1b47a0a22688a3a", "html_url": "https://github.com/rust-lang/rust/commit/910bb6530cc3594bbed4a140b1b47a0a22688a3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/910bb6530cc3594bbed4a140b1b47a0a22688a3a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f19977797f9cf0416a620be2fb44a5b2b70cb6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f19977797f9cf0416a620be2fb44a5b2b70cb6f", "html_url": "https://github.com/rust-lang/rust/commit/0f19977797f9cf0416a620be2fb44a5b2b70cb6f"}, {"sha": "3594d8b8a14d48c8aec90a2e702cf312ea2d7f02", "url": "https://api.github.com/repos/rust-lang/rust/commits/3594d8b8a14d48c8aec90a2e702cf312ea2d7f02", "html_url": "https://github.com/rust-lang/rust/commit/3594d8b8a14d48c8aec90a2e702cf312ea2d7f02"}], "stats": {"total": 33, "additions": 11, "deletions": 22}, "files": [{"sha": "a9d88370c612fa1afa826b9510e0e536162b125f", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/910bb6530cc3594bbed4a140b1b47a0a22688a3a/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/910bb6530cc3594bbed4a140b1b47a0a22688a3a/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=910bb6530cc3594bbed4a140b1b47a0a22688a3a", "patch": "@@ -4,7 +4,7 @@ use crate::hash;\n use crate::io;\n use crate::iter;\n use crate::mem;\n-use crate::net::{hton, ntoh, IpAddr, Ipv4Addr, Ipv6Addr};\n+use crate::net::{htons, ntohs, IpAddr, Ipv4Addr, Ipv6Addr};\n use crate::option;\n use crate::slice;\n use crate::sys::net::netc as c;\n@@ -276,7 +276,7 @@ impl SocketAddrV4 {\n         SocketAddrV4 {\n             inner: c::sockaddr_in {\n                 sin_family: c::AF_INET as c::sa_family_t,\n-                sin_port: hton(port),\n+                sin_port: htons(port),\n                 sin_addr: *ip.as_inner(),\n                 ..unsafe { mem::zeroed() }\n             },\n@@ -326,7 +326,7 @@ impl SocketAddrV4 {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 {\n-        ntoh(self.inner.sin_port)\n+        ntohs(self.inner.sin_port)\n     }\n \n     /// Changes the port number associated with this socket address.\n@@ -342,7 +342,7 @@ impl SocketAddrV4 {\n     /// ```\n     #[stable(feature = \"sockaddr_setters\", since = \"1.9.0\")]\n     pub fn set_port(&mut self, new_port: u16) {\n-        self.inner.sin_port = hton(new_port);\n+        self.inner.sin_port = htons(new_port);\n     }\n }\n \n@@ -368,7 +368,7 @@ impl SocketAddrV6 {\n         SocketAddrV6 {\n             inner: c::sockaddr_in6 {\n                 sin6_family: c::AF_INET6 as c::sa_family_t,\n-                sin6_port: hton(port),\n+                sin6_port: htons(port),\n                 sin6_addr: *ip.as_inner(),\n                 sin6_flowinfo: flowinfo,\n                 sin6_scope_id: scope_id,\n@@ -420,7 +420,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 {\n-        ntoh(self.inner.sin6_port)\n+        ntohs(self.inner.sin6_port)\n     }\n \n     /// Changes the port number associated with this socket address.\n@@ -436,7 +436,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[stable(feature = \"sockaddr_setters\", since = \"1.9.0\")]\n     pub fn set_port(&mut self, new_port: u16) {\n-        self.inner.sin6_port = hton(new_port);\n+        self.inner.sin6_port = htons(new_port);\n     }\n \n     /// Returns the flow information associated with this address."}, {"sha": "8652ed8b046bbee60d9f12b016df7baad6a50c30", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/910bb6530cc3594bbed4a140b1b47a0a22688a3a/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/910bb6530cc3594bbed4a140b1b47a0a22688a3a/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=910bb6530cc3594bbed4a140b1b47a0a22688a3a", "patch": "@@ -85,21 +85,10 @@ pub enum Shutdown {\n     Both,\n }\n \n-#[doc(hidden)]\n-trait NetInt {\n-    fn from_be(i: Self) -> Self;\n-    fn to_be(&self) -> Self;\n-}\n-macro_rules! doit {\n-    ($($t:ident)*) => ($(impl NetInt for $t {\n-        fn from_be(i: Self) -> Self { <$t>::from_be(i) }\n-        fn to_be(&self) -> Self { <$t>::to_be(*self) }\n-    })*)\n-}\n-doit! { i8 i16 i32 i64 isize u8 u16 u32 u64 usize }\n-\n-fn hton<I: NetInt>(i: I) -> I { i.to_be() }\n-fn ntoh<I: NetInt>(i: I) -> I { I::from_be(i) }\n+#[inline]\n+const fn htons(i: u16) -> u16 { i.to_be() }\n+#[inline]\n+const fn ntohs(i: u16) -> u16 { u16::from_be(i) }\n \n fn each_addr<A: ToSocketAddrs, F, T>(addr: A, mut f: F) -> io::Result<T>\n     where F: FnMut(io::Result<&SocketAddr>) -> io::Result<T>"}]}