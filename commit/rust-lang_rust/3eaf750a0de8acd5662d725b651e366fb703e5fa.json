{"sha": "3eaf750a0de8acd5662d725b651e366fb703e5fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYWY3NTBhMGRlOGFjZDU2NjJkNzI1YjY1MWUzNjZmYjcwM2U1ZmE=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-09-07T18:05:48Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-09-07T18:05:48Z"}, "message": "Renamed Uuid::from_utf8 to Uuid::from_bytes\n\nThis method doesn't deal with utf8. I guess it got caught in a mass\nrename.", "tree": {"sha": "9790c8078107d0e2ff6dacf99610ae958e4bedbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9790c8078107d0e2ff6dacf99610ae958e4bedbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eaf750a0de8acd5662d725b651e366fb703e5fa", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eaf750a0de8acd5662d725b651e366fb703e5fa", "html_url": "https://github.com/rust-lang/rust/commit/3eaf750a0de8acd5662d725b651e366fb703e5fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eaf750a0de8acd5662d725b651e366fb703e5fa/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "124eb2119c78651cfaaa7a046a101fa2e20f83ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/124eb2119c78651cfaaa7a046a101fa2e20f83ca", "html_url": "https://github.com/rust-lang/rust/commit/124eb2119c78651cfaaa7a046a101fa2e20f83ca"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b2c0f24824fce579c163afab16704f59532a85f6", "filename": "src/libextra/uuid.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3eaf750a0de8acd5662d725b651e366fb703e5fa/src%2Flibextra%2Fuuid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eaf750a0de8acd5662d725b651e366fb703e5fa/src%2Flibextra%2Fuuid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuuid.rs?ref=3eaf750a0de8acd5662d725b651e366fb703e5fa", "patch": "@@ -210,7 +210,7 @@ impl Uuid {\n     ///\n     /// # Arguments\n     /// * `b` An array or slice of 16 bytes\n-    pub fn from_utf8(b: &[u8]) -> Option<Uuid> {\n+    pub fn from_bytes(b: &[u8]) -> Option<Uuid> {\n         if b.len() != 16 {\n             return None\n         }\n@@ -413,7 +413,7 @@ impl Uuid {\n             ub[i] = FromStrRadix::from_str_radix(vs.slice(i*2, (i+1)*2), 16).unwrap();\n         }\n \n-        Ok(Uuid::from_utf8(ub).unwrap())\n+        Ok(Uuid::from_bytes(ub).unwrap())\n     }\n }\n \n@@ -705,11 +705,11 @@ mod test {\n     }\n \n     #[test]\n-    fn test_from_utf8() {\n+    fn test_from_bytes() {\n         let b = ~[ 0xa1, 0xa2, 0xa3, 0xa4, 0xb1, 0xb2, 0xc1, 0xc2,\n                    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8 ];\n \n-        let u = Uuid::from_utf8(b).unwrap();\n+        let u = Uuid::from_bytes(b).unwrap();\n         let expected = ~\"a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8\";\n \n         assert!(u.to_simple_str() == expected);\n@@ -729,7 +729,7 @@ mod test {\n         let b_in: [u8, ..16] = [ 0xa1, 0xa2, 0xa3, 0xa4, 0xb1, 0xb2, 0xc1, 0xc2,\n                                  0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8 ];\n \n-        let u = Uuid::from_utf8(b_in.clone()).unwrap();\n+        let u = Uuid::from_bytes(b_in.clone()).unwrap();\n \n         let b_out = u.to_bytes();\n "}]}