{"sha": "d98892b67f9b1f04c8c3c90cd99cd24738fd30ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ODg5MmI2N2Y5YjFmMDRjOGMzYzkwY2Q5OWNkMjQ3MzhmZDMwYmE=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-09-11T01:48:25Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-09-11T01:48:25Z"}, "message": "Make sure the call span parens check only fires on the callee, not args", "tree": {"sha": "a8a08594322b9c5c1e95dbf0c12ef01c9d81871c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a08594322b9c5c1e95dbf0c12ef01c9d81871c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d98892b67f9b1f04c8c3c90cd99cd24738fd30ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d98892b67f9b1f04c8c3c90cd99cd24738fd30ba", "html_url": "https://github.com/rust-lang/rust/commit/d98892b67f9b1f04c8c3c90cd99cd24738fd30ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d98892b67f9b1f04c8c3c90cd99cd24738fd30ba/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5c2412e52019ef35f9c6b3524cd5caf972e26b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c2412e52019ef35f9c6b3524cd5caf972e26b7", "html_url": "https://github.com/rust-lang/rust/commit/e5c2412e52019ef35f9c6b3524cd5caf972e26b7"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "61d5b6985f1bfe0b96ca91abf9267c7b7b291ad4", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d98892b67f9b1f04c8c3c90cd99cd24738fd30ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98892b67f9b1f04c8c3c90cd99cd24738fd30ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=d98892b67f9b1f04c8c3c90cd99cd24738fd30ba", "patch": "@@ -1842,13 +1842,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             expr_t\n         );\n         err.span_label(field.span, \"method, not a field\");\n-        let expr_is_call = if let hir::Node::Expr(parent_expr) =\n-            self.tcx.hir().get(self.tcx.hir().get_parent_node(expr.hir_id))\n-        {\n-            matches!(parent_expr.kind, ExprKind::Call(..))\n-        } else {\n-            false\n-        };\n+        let expr_is_call =\n+            if let hir::Node::Expr(hir::Expr { kind: ExprKind::Call(callee, _args), .. }) =\n+                self.tcx.hir().get(self.tcx.hir().get_parent_node(expr.hir_id))\n+            {\n+                expr.hir_id == callee.hir_id\n+            } else {\n+                false\n+            };\n         let expr_snippet =\n             self.tcx.sess.source_map().span_to_snippet(expr.span).unwrap_or(String::new());\n         if expr_is_call && expr_snippet.starts_with(\"(\") && expr_snippet.ends_with(\")\") {"}]}