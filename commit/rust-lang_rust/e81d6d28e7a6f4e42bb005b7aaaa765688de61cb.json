{"sha": "e81d6d28e7a6f4e42bb005b7aaaa765688de61cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MWQ2ZDI4ZTdhNmY0ZTQyYmIwMDViN2FhYWE3NjU2ODhkZTYxY2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-28T01:30:57Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-28T02:04:57Z"}, "message": "Don't stop at first test failure\n\nSince compiletest is setting up its own test tasks it needs to configure them\nthe correct way, which means allowing them to leak.", "tree": {"sha": "5877264b84266e4e77ebb3340e0749248fd57f2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5877264b84266e4e77ebb3340e0749248fd57f2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb", "html_url": "https://github.com/rust-lang/rust/commit/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ef7a3676c2665ca41e4ec9f5b43c7a2eb7c6d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ef7a3676c2665ca41e4ec9f5b43c7a2eb7c6d8", "html_url": "https://github.com/rust-lang/rust/commit/51ef7a3676c2665ca41e4ec9f5b43c7a2eb7c6d8"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "7fc6ad4da13c3feee24480374ed256c5ec77993e", "filename": "src/lib/test.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=e81d6d28e7a6f4e42bb005b7aaaa765688de61cb", "patch": "@@ -22,6 +22,7 @@ export filter_tests;\n export parse_opts;\n export test_to_task;\n export default_test_to_task;\n+export configure_test_task;\n \n // The name of a test. By convention this follows the rules for rust\n // paths, i.e it should be a series of identifiers seperated by double\n@@ -300,24 +301,26 @@ native \"rust\" mod rustrt {\n // only works with functions that don't contain closures.\n fn default_test_to_task(f: &fn()) -> task {\n     fn run_task(fptr: *mutable fn() ) {\n-        // If this task fails we don't want that failure to propagate to the\n-        // test runner or else we couldn't keep running tests\n-        task::unsupervise();\n-\n-        // FIXME (236): Hack supreme - unwinding doesn't work yet so if this\n-        // task fails memory will not be freed correctly. This turns off the\n-        // sanity checks in the runtime's memory region for the task, so that\n-        // the test runner can continue.\n-        rustrt::hack_allow_leaks();\n-\n-\n+        configure_test_task();\n         // Run the test\n         (*fptr)()\n     }\n     let fptr = ptr::addr_of(f);\n     ret spawn run_task(fptr);\n }\n \n+// Call from within a test task to make sure it's set up correctly\n+fn configure_test_task() {\n+    // If this task fails we don't want that failure to propagate to the\n+    // test runner or else we couldn't keep running tests\n+    task::unsupervise();\n+\n+    // FIXME (236): Hack supreme - unwinding doesn't work yet so if this\n+    // task fails memory will not be freed correctly. This turns off the\n+    // sanity checks in the runtime's memory region for the task, so that\n+    // the test runner can continue.\n+    rustrt::hack_allow_leaks();\n+}\n \n // Local Variables:\n // mode: rust;"}, {"sha": "ff6fc171d9e1a972318c7e57dd1ea49c7920ef2d", "filename": "src/test/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e81d6d28e7a6f4e42bb005b7aaaa765688de61cb/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fcompiletest.rs?ref=e81d6d28e7a6f4e42bb005b7aaaa765688de61cb", "patch": "@@ -388,12 +388,12 @@ mod runtest {\n     export run;\n \n     fn run(cx: &cx, testfile: &str) {\n+        test::configure_test_task();\n         if (cx.config.verbose) {\n             // We're going to be dumping a lot of info. Start on a new line.\n             io::stdout().write_str(\"\\n\\n\");\n         }\n         log #fmt(\"running %s\", testfile);\n-        task::unsupervise();\n         let props = load_props(testfile);\n         alt cx.config.mode {\n                 mode_compile_fail. { run_cfail_test(cx, props, testfile); }"}]}