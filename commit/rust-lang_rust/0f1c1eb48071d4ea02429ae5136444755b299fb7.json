{"sha": "0f1c1eb48071d4ea02429ae5136444755b299fb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMWMxZWI0ODA3MWQ0ZWEwMjQyOWFlNTEzNjQ0NDc1NWIyOTlmYjc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-10T23:21:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-10T23:21:23Z"}, "message": "Rollup merge of #55828 - oli-obk:promotion_strikes_again, r=eddyb\n\nAdd missing `rustc_promotable` attribute to unsigned `min_value` and `max_value`\n\ncc @pnkfelix\n\nfixes #55806", "tree": {"sha": "28c5944fcca84ec9e8cfedc9bce84ad492ea7518", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28c5944fcca84ec9e8cfedc9bce84ad492ea7518"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1c1eb48071d4ea02429ae5136444755b299fb7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb52fzCRBK7hj4Ov3rIwAAdHIIAHUTbws2fDQNuYChYE3oHtDN\nN0o6X4aF53UT/auKnYP/cYQQgfrVyuYPiFKZyem44l5XtAy76FE1EFR+mg0WmDEL\nXo/IQxqS0jWSgvS8qskq0mRf1pwHEJ84AbS6rqRYnKpVh7Er4T0R/PxdfTDEPqMF\nh2HghmcTpKFg+WB+e2xcqYHqbdYj7vckDglWuOSnFfLWkYaD4FChmHGvbUkH0sZM\nW6qpOXvreweqhpU/rcN3jnly2NWovh/298kEQjWGtVQ5PZtuaBQzQaO7DbCC60Qy\nRagHxIsNFJqxYiNq/QHkEgcIlwX/V5+9sqiOY8kcIPAXNcTphj1nq26BM59Kk4Q=\n=Y7i+\n-----END PGP SIGNATURE-----\n", "payload": "tree 28c5944fcca84ec9e8cfedc9bce84ad492ea7518\nparent 4c50964c5f015f48006b0722545424f80158eea2\nparent f4c9dd55d6446f6308dc70ab8f88129a87c5daf1\nauthor Pietro Albini <pietro@pietroalbini.org> 1541892083 +0100\ncommitter GitHub <noreply@github.com> 1541892083 +0100\n\nRollup merge of #55828 - oli-obk:promotion_strikes_again, r=eddyb\n\nAdd missing `rustc_promotable` attribute to unsigned `min_value` and `max_value`\n\ncc @pnkfelix\n\nfixes #55806\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1c1eb48071d4ea02429ae5136444755b299fb7", "html_url": "https://github.com/rust-lang/rust/commit/0f1c1eb48071d4ea02429ae5136444755b299fb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1c1eb48071d4ea02429ae5136444755b299fb7/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c50964c5f015f48006b0722545424f80158eea2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c50964c5f015f48006b0722545424f80158eea2", "html_url": "https://github.com/rust-lang/rust/commit/4c50964c5f015f48006b0722545424f80158eea2"}, {"sha": "f4c9dd55d6446f6308dc70ab8f88129a87c5daf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c9dd55d6446f6308dc70ab8f88129a87c5daf1", "html_url": "https://github.com/rust-lang/rust/commit/f4c9dd55d6446f6308dc70ab8f88129a87c5daf1"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "30b7b4546841268750052647cabb30bec85a7ee2", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=0f1c1eb48071d4ea02429ae5136444755b299fb7", "patch": "@@ -2152,6 +2152,7 @@ Basic usage:\n \", $Feature, \"assert_eq!(\", stringify!($SelfT), \"::min_value(), 0);\", $EndFeature, \"\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+            #[rustc_promotable]\n             #[inline]\n             pub const fn min_value() -> Self { 0 }\n         }\n@@ -2168,6 +2169,7 @@ Basic usage:\n stringify!($MaxV), \");\", $EndFeature, \"\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+            #[rustc_promotable]\n             #[inline]\n             pub const fn max_value() -> Self { !0 }\n         }"}, {"sha": "f6bbcc60e4e6456fc388d5fdb34baeb20ab14197", "filename": "src/test/ui/consts/auxiliary/promotable_const_fn_lib.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fpromotable_const_fn_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fpromotable_const_fn_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fpromotable_const_fn_lib.rs?ref=0f1c1eb48071d4ea02429ae5136444755b299fb7", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Crate that exports a const fn. Used for testing cross-crate.\n+\n+#![feature(staged_api, rustc_attrs)]\n+#![stable(since=\"1.0.0\", feature = \"mep\")]\n+\n+#![crate_type=\"rlib\"]\n+\n+#[rustc_promotable]\n+#[stable(since=\"1.0.0\", feature = \"mep\")]\n+#[inline]\n+pub const fn foo() -> usize { 22 }\n+\n+#[stable(since=\"1.0.0\", feature = \"mep\")]\n+pub struct Foo(usize);\n+\n+impl Foo {\n+    #[stable(since=\"1.0.0\", feature = \"mep\")]\n+    #[inline]\n+    #[rustc_promotable]\n+    pub const fn foo() -> usize { 22 }\n+}"}, {"sha": "045322de3470820ed61789bd5ddcf5d038d93b4d", "filename": "src/test/ui/consts/promote_fn_calls.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Ftest%2Fui%2Fconsts%2Fpromote_fn_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Ftest%2Fui%2Fconsts%2Fpromote_fn_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote_fn_calls.rs?ref=0f1c1eb48071d4ea02429ae5136444755b299fb7", "patch": "@@ -0,0 +1,13 @@\n+// compile-pass\n+// aux-build:promotable_const_fn_lib.rs\n+\n+#![feature(nll)]\n+\n+extern crate promotable_const_fn_lib;\n+\n+use promotable_const_fn_lib::{foo, Foo};\n+\n+fn main() {\n+    let x: &'static usize = &foo();\n+    let x: &'static usize = &Foo::foo();\n+}"}, {"sha": "0350708d673d7d52a9558f76aaf806f6d6ea6a72", "filename": "src/test/ui/consts/promote_fn_calls_std.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Ftest%2Fui%2Fconsts%2Fpromote_fn_calls_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1c1eb48071d4ea02429ae5136444755b299fb7/src%2Ftest%2Fui%2Fconsts%2Fpromote_fn_calls_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote_fn_calls_std.rs?ref=0f1c1eb48071d4ea02429ae5136444755b299fb7", "patch": "@@ -0,0 +1,30 @@\n+// compile-pass\n+\n+#![feature(nll)]\n+\n+fn main() {\n+    let x: &'static u8 = &u8::max_value();\n+    let x: &'static u16 = &u16::max_value();\n+    let x: &'static u32 = &u32::max_value();\n+    let x: &'static u64 = &u64::max_value();\n+    let x: &'static u128 = &u128::max_value();\n+    let x: &'static usize = &usize::max_value();\n+    let x: &'static u8 = &u8::min_value();\n+    let x: &'static u16 = &u16::min_value();\n+    let x: &'static u32 = &u32::min_value();\n+    let x: &'static u64 = &u64::min_value();\n+    let x: &'static u128 = &u128::min_value();\n+    let x: &'static usize = &usize::min_value();\n+    let x: &'static i8 = &i8::max_value();\n+    let x: &'static i16 = &i16::max_value();\n+    let x: &'static i32 = &i32::max_value();\n+    let x: &'static i64 = &i64::max_value();\n+    let x: &'static i128 = &i128::max_value();\n+    let x: &'static isize = &isize::max_value();\n+    let x: &'static i8 = &i8::min_value();\n+    let x: &'static i16 = &i16::min_value();\n+    let x: &'static i32 = &i32::min_value();\n+    let x: &'static i64 = &i64::min_value();\n+    let x: &'static i128 = &i128::min_value();\n+    let x: &'static isize = &isize::min_value();\n+}"}]}