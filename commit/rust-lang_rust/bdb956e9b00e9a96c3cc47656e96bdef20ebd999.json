{"sha": "bdb956e9b00e9a96c3cc47656e96bdef20ebd999", "node_id": "C_kwDOAAsO6NoAKGJkYjk1NmU5YjAwZTlhOTZjM2NjNDc2NTZlOTZiZGVmMjBlYmQ5OTk", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-04-27T11:13:22Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-04-27T11:13:28Z"}, "message": "nits", "tree": {"sha": "6e3baf241dd980f1e52c0dc87121ee9553c69dae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e3baf241dd980f1e52c0dc87121ee9553c69dae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdb956e9b00e9a96c3cc47656e96bdef20ebd999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdb956e9b00e9a96c3cc47656e96bdef20ebd999", "html_url": "https://github.com/rust-lang/rust/commit/bdb956e9b00e9a96c3cc47656e96bdef20ebd999", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdb956e9b00e9a96c3cc47656e96bdef20ebd999/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b8110e1469d459a196f6feb60d82dec48c3cfc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8110e1469d459a196f6feb60d82dec48c3cfc2", "html_url": "https://github.com/rust-lang/rust/commit/8b8110e1469d459a196f6feb60d82dec48c3cfc2"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "3928520153c478896de9479a84a6046a2930fc7c", "filename": "compiler/rustc_hir_typeck/src/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdb956e9b00e9a96c3cc47656e96bdef20ebd999/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb956e9b00e9a96c3cc47656e96bdef20ebd999/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs?ref=bdb956e9b00e9a96c3cc47656e96bdef20ebd999", "patch": "@@ -221,12 +221,6 @@ fn typeck_with_fallback<'tcx>(\n             }))\n         } else if let Node::AnonConst(_) = node {\n             match tcx.hir().get(tcx.hir().parent_id(id)) {\n-                Node::Expr(&hir::Expr {\n-                    kind: hir::ExprKind::ConstBlock(ref anon_const), ..\n-                }) if anon_const.hir_id == id => Some(fcx.next_ty_var(TypeVariableOrigin {\n-                    kind: TypeVariableOriginKind::TypeInference,\n-                    span,\n-                })),\n                 Node::Ty(&hir::Ty { kind: hir::TyKind::Typeof(ref anon_const), .. })\n                     if anon_const.hir_id == id =>\n                 {"}]}