{"sha": "d94b4e81e4ce8bc21c192ed928f33991ffe78365", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NGI0ZTgxZTRjZThiYzIxYzE5MmVkOTI4ZjMzOTkxZmZlNzgzNjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-27T16:07:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-27T16:21:50Z"}, "message": "clarify RW lock's priority gotcha\n\nIn particular, the following program works on Linux, but deadlocks on\nmac:\n\n    use std::{\n        sync::{Arc, RwLock},\n        thread,\n        time::Duration,\n    };\n\n    fn main() {\n        let lock = Arc::new(RwLock::new(()));\n\n        let r1 = thread::spawn({\n            let lock = Arc::clone(&lock);\n            move || {\n                let _rg = lock.read();\n                eprintln!(\"r1/1\");\n                sleep(1000);\n\n                let _rg = lock.read();\n                eprintln!(\"r1/2\");\n\n                sleep(5000);\n            }\n        });\n        sleep(100);\n        let w = thread::spawn({\n            let lock = Arc::clone(&lock);\n            move || {\n                let _wg = lock.write();\n                eprintln!(\"w\");\n            }\n        });\n        sleep(100);\n        let r2 = thread::spawn({\n            let lock = Arc::clone(&lock);\n            move || {\n                let _rg = lock.read();\n                eprintln!(\"r2\");\n                sleep(2000);\n            }\n        });\n\n        r1.join().unwrap();\n        r2.join().unwrap();\n        w.join().unwrap();\n    }\n\n    fn sleep(ms: u64) {\n        std::thread::sleep(Duration::from_millis(ms))\n    }", "tree": {"sha": "756ebf87c58cbe44c7bc1c88dfc2f4aca2318aa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/756ebf87c58cbe44c7bc1c88dfc2f4aca2318aa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d94b4e81e4ce8bc21c192ed928f33991ffe78365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d94b4e81e4ce8bc21c192ed928f33991ffe78365", "html_url": "https://github.com/rust-lang/rust/commit/d94b4e81e4ce8bc21c192ed928f33991ffe78365", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d94b4e81e4ce8bc21c192ed928f33991ffe78365/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0846043440b480e4bbf36ac19db3948f0c835bb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0846043440b480e4bbf36ac19db3948f0c835bb1", "html_url": "https://github.com/rust-lang/rust/commit/0846043440b480e4bbf36ac19db3948f0c835bb1"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "4e706b270963b6927afb40e48cf43583bfa6b9a1", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d94b4e81e4ce8bc21c192ed928f33991ffe78365/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d94b4e81e4ce8bc21c192ed928f33991ffe78365/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=d94b4e81e4ce8bc21c192ed928f33991ffe78365", "patch": "@@ -23,7 +23,9 @@ use crate::sys_common::rwlock as sys;\n ///\n /// The priority policy of the lock is dependent on the underlying operating\n /// system's implementation, and this type does not guarantee that any\n-/// particular policy will be used.\n+/// particular policy will be used. In particular, a writer which is waiting to\n+/// acquire the lock  in `write` might or might not block future calls to\n+/// `read`.\n ///\n /// The type parameter `T` represents the data that this lock protects. It is\n /// required that `T` satisfies [`Send`] to be shared across threads and"}]}