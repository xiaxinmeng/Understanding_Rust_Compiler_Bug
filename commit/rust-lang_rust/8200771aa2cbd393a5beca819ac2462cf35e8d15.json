{"sha": "8200771aa2cbd393a5beca819ac2462cf35e8d15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMDA3NzFhYTJjYmQzOTNhNWJlY2E4MTlhYzI0NjJjZjM1ZThkMTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-06T09:45:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-22T07:19:08Z"}, "message": "reveal_all when sanity-checking MIR assignment types", "tree": {"sha": "ffd186cf63450b57140f6580570907a900fd74b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffd186cf63450b57140f6580570907a900fd74b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8200771aa2cbd393a5beca819ac2462cf35e8d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8200771aa2cbd393a5beca819ac2462cf35e8d15", "html_url": "https://github.com/rust-lang/rust/commit/8200771aa2cbd393a5beca819ac2462cf35e8d15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8200771aa2cbd393a5beca819ac2462cf35e8d15/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9576e307a7b8ac0c812fac927d247761662e7d1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9576e307a7b8ac0c812fac927d247761662e7d1a", "html_url": "https://github.com/rust-lang/rust/commit/9576e307a7b8ac0c812fac927d247761662e7d1a"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "b2fbb48eefea57a36a088c259219cb949b1e2e90", "filename": "src/librustc_mir/transform/validate.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8200771aa2cbd393a5beca819ac2462cf35e8d15/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8200771aa2cbd393a5beca819ac2462cf35e8d15/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs?ref=8200771aa2cbd393a5beca819ac2462cf35e8d15", "patch": "@@ -90,8 +90,11 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             return true;\n         }\n         // Normalize projections and things like that.\n-        let src = self.tcx.normalize_erasing_regions(self.param_env, src);\n-        let dest = self.tcx.normalize_erasing_regions(self.param_env, dest);\n+        // FIXME: We need to reveal_all, as some optimizations change types in ways\n+        // that requires unfolding opaque types.\n+        let param_env = self.param_env.with_reveal_all();\n+        let src = self.tcx.normalize_erasing_regions(param_env, src);\n+        let dest = self.tcx.normalize_erasing_regions(param_env, dest);\n         // It's worth checking equality again.\n         if src == dest {\n             return true;\n@@ -119,7 +122,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                 // lead to wrong errors.\n                 lt_op: |_| self.tcx.lifetimes.re_erased,\n                 // Evaluate consts.\n-                ct_op: |ct| ct.eval(self.tcx, self.param_env),\n+                ct_op: |ct| ct.eval(self.tcx, param_env),\n             })\n         };\n         normalize(src) == normalize(dest)"}]}