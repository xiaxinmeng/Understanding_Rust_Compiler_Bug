{"sha": "774c6d01984b608047afedb5d8c579c00d69823f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NGM2ZDAxOTg0YjYwODA0N2FmZWRiNWQ4YzU3OWMwMGQ2OTgyM2Y=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-10T21:34:01Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-10T21:34:01Z"}, "message": "Friendlier error message for break outside a loop\n\nThe typechecker should really check for this, but at least now\nthere's an error message rather than an inexhaustive match failure\nin trans.", "tree": {"sha": "64267161d14d8604687d620065e5adb74f27d5a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64267161d14d8604687d620065e5adb74f27d5a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/774c6d01984b608047afedb5d8c579c00d69823f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/774c6d01984b608047afedb5d8c579c00d69823f", "html_url": "https://github.com/rust-lang/rust/commit/774c6d01984b608047afedb5d8c579c00d69823f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/774c6d01984b608047afedb5d8c579c00d69823f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5eacf8ea9e59777d6c7d4939d91d2e96dfff838", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5eacf8ea9e59777d6c7d4939d91d2e96dfff838", "html_url": "https://github.com/rust-lang/rust/commit/e5eacf8ea9e59777d6c7d4939d91d2e96dfff838"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "d1b5d39516d07f75113c8fb7c70b7d0cc474d352", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/774c6d01984b608047afedb5d8c579c00d69823f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774c6d01984b608047afedb5d8c579c00d69823f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=774c6d01984b608047afedb5d8c579c00d69823f", "patch": "@@ -5691,11 +5691,11 @@ fn trans_expr_out(&@block_ctxt cx, &@ast::expr e, out_method output)\n         }\n \n         case (ast::expr_break(?a)) {\n-            ret trans_break(cx);\n+            ret trans_break(e.span, cx);\n         }\n \n         case (ast::expr_cont(?a)) {\n-            ret trans_cont(cx);\n+            ret trans_cont(e.span, cx);\n         }\n \n         case (ast::expr_ret(?e, _)) {\n@@ -5972,7 +5972,7 @@ fn trans_put(&@block_ctxt cx, &option::t[@ast::expr] e) -> result {\n     ret res(bcx, bcx.build.FastCall(llcallee, llargs));\n }\n \n-fn trans_break_cont(&@block_ctxt cx, bool to_end) -> result {\n+fn trans_break_cont(&span sp, &@block_ctxt cx, bool to_end) -> result {\n     auto bcx = cx;\n     // Locate closest loop block, outputting cleanup as we go.\n     auto cleanup_cx = cx;\n@@ -5998,6 +5998,11 @@ fn trans_break_cont(&@block_ctxt cx, bool to_end) -> result {\n             case (_) {\n                 alt ({cleanup_cx.parent}) {\n                     case (parent_some(?cx)) { cleanup_cx = cx; }\n+                    case (parent_none) {\n+                        cx.fcx.lcx.ccx.sess.span_err(sp,\n+                         (if (to_end) { \"Break\" } else { \"Cont\" })\n+                          + \" outside a loop\");\n+                    }\n                 }\n             }\n         }\n@@ -6007,12 +6012,12 @@ fn trans_break_cont(&@block_ctxt cx, bool to_end) -> result {\n     cx.fcx.lcx.ccx.sess.bug(\"in trans::trans_break_cont()\");\n }\n \n-fn trans_break(&@block_ctxt cx) -> result {\n-    ret trans_break_cont(cx, true);\n+fn trans_break(&span sp, &@block_ctxt cx) -> result {\n+    ret trans_break_cont(sp, cx, true);\n }\n \n-fn trans_cont(&@block_ctxt cx) -> result {\n-    ret trans_break_cont(cx, false);\n+fn trans_cont(&span sp, &@block_ctxt cx) -> result {\n+    ret trans_break_cont(sp, cx, false);\n }\n \n "}, {"sha": "9c5d8c5e7ed3b6b16fd910463d68caaf2a218f59", "filename": "src/test/compile-fail/break-outside-loop.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/774c6d01984b608047afedb5d8c579c00d69823f/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774c6d01984b608047afedb5d8c579c00d69823f/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs?ref=774c6d01984b608047afedb5d8c579c00d69823f", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:Break outside a loop\n+fn main() {\n+  auto pth = break;\n+\n+  let rec(str t) res = rec(t=pth);\n+\n+}\n\\ No newline at end of file"}]}