{"sha": "90d976e8fce44d24acefad884d86be08a4a02212", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZDk3NmU4ZmNlNDRkMjRhY2VmYWQ4ODRkODZiZTA4YTRhMDIyMTI=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2014-04-18T06:48:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-14T00:24:08Z"}, "message": "pprust: Remove unnecessary && of `print_tt`", "tree": {"sha": "4f04da3456900068be96548cf0cbca707f518a4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f04da3456900068be96548cf0cbca707f518a4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90d976e8fce44d24acefad884d86be08a4a02212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90d976e8fce44d24acefad884d86be08a4a02212", "html_url": "https://github.com/rust-lang/rust/commit/90d976e8fce44d24acefad884d86be08a4a02212", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90d976e8fce44d24acefad884d86be08a4a02212/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4675a87c8bf4dacdd112c712503f362b7ded1857", "url": "https://api.github.com/repos/rust-lang/rust/commits/4675a87c8bf4dacdd112c712503f362b7ded1857", "html_url": "https://github.com/rust-lang/rust/commit/4675a87c8bf4dacdd112c712503f362b7ded1857"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a039959557267a6de73e1203975df662b73212cb", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90d976e8fce44d24acefad884d86be08a4a02212/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90d976e8fce44d24acefad884d86be08a4a02212/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=90d976e8fce44d24acefad884d86be08a4a02212", "patch": "@@ -723,7 +723,7 @@ impl<'a> State<'a> {\n                 try!(self.print_ident(item.ident));\n                 try!(self.cbox(indent_unit));\n                 try!(self.popen());\n-                try!(self.print_tts(&(tts.as_slice())));\n+                try!(self.print_tts(tts.as_slice()));\n                 try!(self.pclose());\n                 try!(self.end());\n             }\n@@ -839,7 +839,7 @@ impl<'a> State<'a> {\n     /// expression arguments as expressions). It can be done! I think.\n     pub fn print_tt(&mut self, tt: &ast::TokenTree) -> IoResult<()> {\n         match *tt {\n-            ast::TTDelim(ref tts) => self.print_tts(&(tts.as_slice())),\n+            ast::TTDelim(ref tts) => self.print_tts(tts.as_slice()),\n             ast::TTTok(_, ref tk) => {\n                 word(&mut self.s, parse::token::to_str(tk).as_slice())\n             }\n@@ -865,7 +865,7 @@ impl<'a> State<'a> {\n         }\n     }\n \n-    pub fn print_tts(&mut self, tts: & &[ast::TokenTree]) -> IoResult<()> {\n+    pub fn print_tts(&mut self, tts: &[ast::TokenTree]) -> IoResult<()> {\n         try!(self.ibox(0));\n         for (i, tt) in tts.iter().enumerate() {\n             if i != 0 {\n@@ -1122,7 +1122,7 @@ impl<'a> State<'a> {\n                 try!(self.print_path(pth, false));\n                 try!(word(&mut self.s, \"!\"));\n                 try!(self.popen());\n-                try!(self.print_tts(&tts.as_slice()));\n+                try!(self.print_tts(tts.as_slice()));\n                 self.pclose()\n             }\n         }"}]}