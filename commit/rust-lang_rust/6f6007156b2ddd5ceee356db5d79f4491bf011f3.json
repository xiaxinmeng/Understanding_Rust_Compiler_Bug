{"sha": "6f6007156b2ddd5ceee356db5d79f4491bf011f3", "node_id": "C_kwDOAAsO6NoAKDZmNjAwNzE1NmIyZGRkNWNlZWUzNTZkYjVkNzlmNDQ5MWJmMDExZjM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-15T14:26:03Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-15T14:26:03Z"}, "message": "Introduce Box::new in mini_core", "tree": {"sha": "5b6934af9476154a690b9eb1be4274d3c028203d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b6934af9476154a690b9eb1be4274d3c028203d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f6007156b2ddd5ceee356db5d79f4491bf011f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6007156b2ddd5ceee356db5d79f4491bf011f3", "html_url": "https://github.com/rust-lang/rust/commit/6f6007156b2ddd5ceee356db5d79f4491bf011f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f6007156b2ddd5ceee356db5d79f4491bf011f3/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42358a23f145688f048145be2ac9fe4f6b36335", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42358a23f145688f048145be2ac9fe4f6b36335", "html_url": "https://github.com/rust-lang/rust/commit/b42358a23f145688f048145be2ac9fe4f6b36335"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "73b83b89f6d91ea3358c15a5e8cc49354ac62d4a", "filename": "example/mini_core.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6f6007156b2ddd5ceee356db5d79f4491bf011f3/example%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f6007156b2ddd5ceee356db5d79f4491bf011f3/example%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core.rs?ref=6f6007156b2ddd5ceee356db5d79f4491bf011f3", "patch": "@@ -518,6 +518,17 @@ pub struct Box<T: ?Sized>(Unique<T>, ());\n \n impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Box<U>> for Box<T> {}\n \n+impl<T> Box<T> {\n+    pub fn new(val: T) -> Box<T> {\n+        unsafe {\n+            let size = intrinsics::size_of::<T>();\n+            let ptr = libc::malloc(size);\n+            intrinsics::copy(&val as *const T as *const u8, ptr, size);\n+            Box(Unique { pointer: NonNull(ptr as *const T), _marker: PhantomData }, ())\n+        }\n+    }\n+}\n+\n impl<T: ?Sized> Drop for Box<T> {\n     fn drop(&mut self) {\n         // drop is currently performed by compiler."}]}