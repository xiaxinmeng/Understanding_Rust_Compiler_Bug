{"sha": "6442d45d3a55cee14ccee14c004ea344072d54cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDJkNDVkM2E1NWNlZTE0Y2NlZTE0YzAwNGVhMzQ0MDcyZDU0Y2Q=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T15:10:19Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:23Z"}, "message": "Move transmute_ptr_to_ref to its own module", "tree": {"sha": "07c6b57781dd40ff09acd6eb96c6d155858b15b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07c6b57781dd40ff09acd6eb96c6d155858b15b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6442d45d3a55cee14ccee14c004ea344072d54cd", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAcACgkQHKDfKvWd\naKVE+Q//SRZmG/z/D2eEAysZHguJTLLxCJWryj7VNOZmaI5hPBrpyW+kCnT7xBah\nvxK5vNwHSsUbkBNiQHZeVHo/h9VmNd06j7/NfaI52mw1z4ebjcHMLAMIZHScXWpa\nfyf5vPQQ5QyaoO4vGo01MPQaRa9kdH+QzUvUQRKFE7fIqpjcYhegsv1Jq1/EIhH3\nZY2BvVnyejyAxaCQdvB4EvuEs1BUb8kQKjTWn2uciNoTYW4RPc1xhV+H7OlF0Frr\nCyeSjuDgxqFEZboG4AZyREgzKaVoyHJbYHStNmufVnfHQHzIrl5C6XVcron/KZ67\nS22mQk+KBFACRgeR1HQAn/S+YSAyH6cLiwR5G773OP8Ucb3G78hAnJn200V0Erwi\n2HF+VEmofBPnIDmzIpiPxPns8SqqtuRhlV6DrQMWt886Z14HIxrWW8Tv3hvpKt+F\nF+NAZX1d6fHEON9f1l/fALdxkpgUOuEdGOpf/hAr9aybmKfef/EdYP9M8xQsQgqs\nKuhJcAo+5Y8lRC4jN6GsNgBDA2qsT25mSy5z5YeTioU0hsRPE5rQjtWyifDyfJyZ\n6F3oW0ArN5Qz/WhRlMsjFLoSo+5LtjJ1yeSBOOkS54HDnduUnZOGwc34IMVMykoC\nVq5PPT7kg6n5xgHpHH06jg54H6AuAO4Dx+3Vv85Tk96v1vRfgfg=\n=7XSA\n-----END PGP SIGNATURE-----", "payload": "tree 07c6b57781dd40ff09acd6eb96c6d155858b15b9\nparent afc9275928905d2142da027815aac67b81d0a89b\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612969819 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678023 +0100\n\nMove transmute_ptr_to_ref to its own module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6442d45d3a55cee14ccee14c004ea344072d54cd", "html_url": "https://github.com/rust-lang/rust/commit/6442d45d3a55cee14ccee14c004ea344072d54cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6442d45d3a55cee14ccee14c004ea344072d54cd/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afc9275928905d2142da027815aac67b81d0a89b", "url": "https://api.github.com/repos/rust-lang/rust/commits/afc9275928905d2142da027815aac67b81d0a89b", "html_url": "https://github.com/rust-lang/rust/commit/afc9275928905d2142da027815aac67b81d0a89b"}], "stats": {"total": 92, "additions": 61, "deletions": 31}, "files": [{"sha": "f00cb9b935c23a76a9690be7f1b207bfd56db512", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6442d45d3a55cee14ccee14c004ea344072d54cd/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6442d45d3a55cee14ccee14c004ea344072d54cd/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=6442d45d3a55cee14ccee14c004ea344072d54cd", "patch": "@@ -1,4 +1,5 @@\n mod crosspointer_transmute;\n+mod transmute_ptr_to_ref;\n mod useless_transmute;\n mod utils;\n mod wrong_transmute;\n@@ -360,39 +361,12 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 if triggered {\n                     return;\n                 }\n+                let triggered = transmute_ptr_to_ref::check(cx, e, from_ty, to_ty, args, qpath);\n+                if triggered {\n+                    return;\n+                }\n \n                 match (&from_ty.kind(), &to_ty.kind()) {\n-                    (ty::RawPtr(from_pty), ty::Ref(_, to_ref_ty, mutbl)) => span_lint_and_then(\n-                        cx,\n-                        TRANSMUTE_PTR_TO_REF,\n-                        e.span,\n-                        &format!(\n-                            \"transmute from a pointer type (`{}`) to a reference type \\\n-                             (`{}`)\",\n-                            from_ty, to_ty\n-                        ),\n-                        |diag| {\n-                            let arg = sugg::Sugg::hir(cx, &args[0], \"..\");\n-                            let (deref, cast) = if *mutbl == Mutability::Mut {\n-                                (\"&mut *\", \"*mut\")\n-                            } else {\n-                                (\"&*\", \"*const\")\n-                            };\n-\n-                            let arg = if from_pty.ty == *to_ref_ty {\n-                                arg\n-                            } else {\n-                                arg.as_ty(&format!(\"{} {}\", cast, get_type_snippet(cx, qpath, to_ref_ty)))\n-                            };\n-\n-                            diag.span_suggestion(\n-                                e.span,\n-                                \"try\",\n-                                sugg::make_unop(deref, arg).to_string(),\n-                                Applicability::Unspecified,\n-                            );\n-                        },\n-                    ),\n                     (ty::Int(ty::IntTy::I32) | ty::Uint(ty::UintTy::U32), &ty::Char) => {\n                         span_lint_and_then(\n                             cx,"}, {"sha": "7be47da35dac7f1239e4b8069db5c1e473dbdb14", "filename": "clippy_lints/src/transmute/transmute_ptr_to_ref.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/6442d45d3a55cee14ccee14c004ea344072d54cd/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6442d45d3a55cee14ccee14c004ea344072d54cd/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs?ref=6442d45d3a55cee14ccee14c004ea344072d54cd", "patch": "@@ -0,0 +1,56 @@\n+use super::utils::get_type_snippet;\n+use super::TRANSMUTE_PTR_TO_REF;\n+use crate::utils::{span_lint_and_then, sugg};\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, Mutability, QPath};\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+use rustc_middle::ty::Ty;\n+\n+/// Checks for `transmute_ptr_to_ref` lint.\n+/// Returns `true` if it's triggered, otherwise returns `false`.\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    e: &'tcx Expr<'_>,\n+    from_ty: Ty<'tcx>,\n+    to_ty: Ty<'tcx>,\n+    args: &'tcx [Expr<'_>],\n+    qpath: &'tcx QPath<'_>,\n+) -> bool {\n+    match (&from_ty.kind(), &to_ty.kind()) {\n+        (ty::RawPtr(from_pty), ty::Ref(_, to_ref_ty, mutbl)) => {\n+            span_lint_and_then(\n+                cx,\n+                TRANSMUTE_PTR_TO_REF,\n+                e.span,\n+                &format!(\n+                    \"transmute from a pointer type (`{}`) to a reference type (`{}`)\",\n+                    from_ty, to_ty\n+                ),\n+                |diag| {\n+                    let arg = sugg::Sugg::hir(cx, &args[0], \"..\");\n+                    let (deref, cast) = if *mutbl == Mutability::Mut {\n+                        (\"&mut *\", \"*mut\")\n+                    } else {\n+                        (\"&*\", \"*const\")\n+                    };\n+\n+                    let arg = if from_pty.ty == *to_ref_ty {\n+                        arg\n+                    } else {\n+                        arg.as_ty(&format!(\"{} {}\", cast, get_type_snippet(cx, qpath, to_ref_ty)))\n+                    };\n+\n+                    diag.span_suggestion(\n+                        e.span,\n+                        \"try\",\n+                        sugg::make_unop(deref, arg).to_string(),\n+                        Applicability::Unspecified,\n+                    );\n+                },\n+            );\n+            true\n+        },\n+        _ => false,\n+    }\n+}"}]}