{"sha": "96001921fc1a00fe4f13dbe140e2df01430d11ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MDAxOTIxZmMxYTAwZmU0ZjEzZGJlMTQwZTJkZjAxNDMwZDExZWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T10:21:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T10:21:03Z"}, "message": "Minor", "tree": {"sha": "8de2f14788f1dd4e65290156e24b37e98f6f64a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8de2f14788f1dd4e65290156e24b37e98f6f64a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96001921fc1a00fe4f13dbe140e2df01430d11ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96001921fc1a00fe4f13dbe140e2df01430d11ea", "html_url": "https://github.com/rust-lang/rust/commit/96001921fc1a00fe4f13dbe140e2df01430d11ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96001921fc1a00fe4f13dbe140e2df01430d11ea/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b93408d0b2609b82f869b1953122df4a46bb0014", "url": "https://api.github.com/repos/rust-lang/rust/commits/b93408d0b2609b82f869b1953122df4a46bb0014", "html_url": "https://github.com/rust-lang/rust/commit/b93408d0b2609b82f869b1953122df4a46bb0014"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "d3d62debfdddf3bec8f94f6ef543e65e3efdfaee", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/96001921fc1a00fe4f13dbe140e2df01430d11ea/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96001921fc1a00fe4f13dbe140e2df01430d11ea/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=96001921fc1a00fe4f13dbe140e2df01430d11ea", "patch": "@@ -265,8 +265,7 @@ impl SourceAnalyzer {\n         }\n \n         // This must be a normal source file rather than macro file.\n-        let hir_path =\n-            crate::Path::from_src(path.clone(), &Hygiene::new(db.upcast(), self.file_id))?;\n+        let hir_path = Path::from_src(path.clone(), &Hygiene::new(db.upcast(), self.file_id))?;\n \n         // Case where path is a qualifier of another path, e.g. foo::bar::Baz where we\n         // trying to resolve foo::bar.\n@@ -451,7 +450,7 @@ fn adjust(\n pub(crate) fn resolve_hir_path(\n     db: &dyn HirDatabase,\n     resolver: &Resolver,\n-    path: &crate::Path,\n+    path: &Path,\n ) -> Option<PathResolution> {\n     let types =\n         resolver.resolve_path_in_type_ns_fully(db.upcast(), path.mod_path()).map(|ty| match ty {\n@@ -512,7 +511,7 @@ pub(crate) fn resolve_hir_path(\n pub(crate) fn resolve_hir_path_qualifier(\n     db: &dyn HirDatabase,\n     resolver: &Resolver,\n-    path: &crate::Path,\n+    path: &Path,\n ) -> Option<PathResolution> {\n     let items = resolver\n         .resolve_module_path_in_items(db.upcast(), path.mod_path())"}]}