{"sha": "1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNDJiYmRmYzRlOWFlNDgwNDVlOWI3YTJjNmI1MDdhYTA2MjZlODQ=", "commit": {"author": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-03T17:41:01Z"}, "committer": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-03T17:41:01Z"}, "message": "Add docs for `as` keyword\n\nIt's pretty basic and could do with more details, but it's a good\nstarter until someone else improves it.", "tree": {"sha": "7582db182572675bf71e17647e6eca0a8a2b7bc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7582db182572675bf71e17647e6eca0a8a2b7bc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "html_url": "https://github.com/rust-lang/rust/commit/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84/comments", "author": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "047aac5cc60016b7c7f2a92f335b4a82b07ec59c", "url": "https://api.github.com/repos/rust-lang/rust/commits/047aac5cc60016b7c7f2a92f335b4a82b07ec59c", "html_url": "https://github.com/rust-lang/rust/commit/047aac5cc60016b7c7f2a92f335b4a82b07ec59c"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "db447c1b363d1608490b107d4d553471bd8e01bc", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "patch": "@@ -8,6 +8,33 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[doc(keyword = \"as\")]\n+//\n+/// The type coercion keyword\n+///\n+/// `as` is most commonly used to turn primitive types into other primitive types, but it has other\n+/// uses that include turning pointers into addresses, addresses into pointers, and pointers into\n+/// other pointers.\n+///\n+/// ```rust\n+/// let thing1: u8 = 89.0 as u8;\n+/// assert_eq!('B' as u32, 66);\n+/// assert_eq!(thing1 as char, 'Y');\n+/// let thing2: f32 = thing1 as f32 + 10.5;\n+/// assert_eq!(true as u8 + thing2 as u8, 100);\n+/// ```\n+///\n+/// In general, any coercion that can be performed via writing out type hints can also be done\n+/// using `as`, so instead of writing `let x: u32 = 123`, you can write `let x = 123 as u32` (Note:\n+/// `let x = 123u32` would be best in that situation). The same is not true in the other direction,\n+/// however, explicitly using `as` allows a few more coercions that aren't allowed implicitly, such\n+/// as changing the type of a raw pointer or turning closures into raw pointers.\n+///\n+/// For more information on what `as` is capable of, see the [Reference]\n+///\n+/// [Reference]: https://doc.rust-lang.org/reference/expressions/operator-expr.html#type-cast-expressions\n+mod as_keyword { }\n+\n #[doc(keyword = \"fn\")]\n //\n /// The `fn` keyword."}]}