{"sha": "db1d003de1657e31174fac2bfa016000294ea266", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMWQwMDNkZTE2NTdlMzExNzRmYWMyYmZhMDE2MDAwMjk0ZWEyNjY=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-02T15:50:23Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-02T15:50:23Z"}, "message": "Remove `debug_assert`", "tree": {"sha": "2a30c0a35dfda755a10908ed46b71129a62b1c01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a30c0a35dfda755a10908ed46b71129a62b1c01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1d003de1657e31174fac2bfa016000294ea266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1d003de1657e31174fac2bfa016000294ea266", "html_url": "https://github.com/rust-lang/rust/commit/db1d003de1657e31174fac2bfa016000294ea266", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1d003de1657e31174fac2bfa016000294ea266/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86e0985f91d4b824370d3c4e015cd51460bf7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c86e0985f91d4b824370d3c4e015cd51460bf7dc", "html_url": "https://github.com/rust-lang/rust/commit/c86e0985f91d4b824370d3c4e015cd51460bf7dc"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "af93cd7a3e27d43f53d52db60136f2ac87a0126e", "filename": "library/std/src/sys/windows/alloc.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db1d003de1657e31174fac2bfa016000294ea266/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1d003de1657e31174fac2bfa016000294ea266/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs?ref=db1d003de1657e31174fac2bfa016000294ea266", "patch": "@@ -223,10 +223,7 @@ unsafe impl GlobalAlloc for System {\n \n         // SAFETY: `heap` is a non-null handle returned by `GetProcessHeap`,\n         // `block` is a pointer to the start of an allocated block.\n-        unsafe {\n-            let err = HeapFree(heap, 0, block as c::LPVOID);\n-            debug_assert!(err != 0, \"Failed to free heap memory: {}\", c::GetLastError());\n-        }\n+        unsafe { HeapFree(heap, 0, block as c::LPVOID) };\n     }\n \n     #[inline]"}]}