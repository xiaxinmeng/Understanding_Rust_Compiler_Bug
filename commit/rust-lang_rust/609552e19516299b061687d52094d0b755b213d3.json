{"sha": "609552e19516299b061687d52094d0b755b213d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwOTU1MmUxOTUxNjI5OWIwNjE2ODdkNTIwOTRkMGI3NTViMjEzZDM=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-06-13T07:00:49Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-06-24T18:36:27Z"}, "message": "Run lint passes using the Option dance instead of RefCells", "tree": {"sha": "f1cea92d1df25ba812550a11ade617b1425bad08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1cea92d1df25ba812550a11ade617b1425bad08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/609552e19516299b061687d52094d0b755b213d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/609552e19516299b061687d52094d0b755b213d3", "html_url": "https://github.com/rust-lang/rust/commit/609552e19516299b061687d52094d0b755b213d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/609552e19516299b061687d52094d0b755b213d3/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1898b9acb324990367bb6672145c30b51e0399f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1898b9acb324990367bb6672145c30b51e0399f", "html_url": "https://github.com/rust-lang/rust/commit/c1898b9acb324990367bb6672145c30b51e0399f"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "bc92d69a747c4b3dbd7d4ecd35252ada5d045d5f", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/609552e19516299b061687d52094d0b755b213d3/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609552e19516299b061687d52094d0b755b213d3/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=609552e19516299b061687d52094d0b755b213d3", "patch": "@@ -56,7 +56,9 @@ pub struct LintStore {\n     lints: Vec<(&'static Lint, bool)>,\n \n     /// Trait objects for each lint pass.\n-    passes: Vec<RefCell<LintPassObject>>,\n+    /// This is only `None` while iterating over the objects. See the definition\n+    /// of run_lints.\n+    passes: Option<Vec<LintPassObject>>,\n \n     /// Lints indexed by name.\n     by_name: HashMap<&'static str, LintId>,\n@@ -84,7 +86,7 @@ impl LintStore {\n     pub fn new() -> LintStore {\n         LintStore {\n             lints: vec!(),\n-            passes: vec!(),\n+            passes: Some(vec!()),\n             by_name: HashMap::new(),\n             levels: HashMap::new(),\n         }\n@@ -117,7 +119,7 @@ impl LintStore {\n                 self.levels.insert(id, (lint.default_level, Default));\n             }\n         }\n-        self.passes.push(RefCell::new(pass));\n+        self.passes.get_mut_ref().push(pass);\n     }\n \n     pub fn register_builtin(&mut self, sess: Option<&Session>) {\n@@ -181,11 +183,15 @@ pub struct Context<'a> {\n }\n \n /// Convenience macro for calling a `LintPass` method on every pass in the context.\n-macro_rules! run_lints ( ($cx:expr, $f:ident, $($args:expr),*) => (\n-    for obj in $cx.lints.passes.iter() {\n-        obj.borrow_mut().$f($cx, $($args),*);\n-    }\n-))\n+macro_rules! run_lints ( ($cx:expr, $f:ident, $($args:expr),*) => ({\n+    // Move the vector of passes out of `$cx` so that we can\n+    // iterate over it mutably while passing `$cx` to the methods.\n+    let mut passes = $cx.lints.passes.take_unwrap();\n+    for obj in passes.mut_iter() {\n+        obj.$f($cx, $($args),*);\n+    }\n+    $cx.lints.passes = Some(passes);\n+}))\n \n /// Emit a lint as a warning or an error (or not at all)\n /// according to `level`."}]}