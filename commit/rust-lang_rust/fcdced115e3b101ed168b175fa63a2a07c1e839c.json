{"sha": "fcdced115e3b101ed168b175fa63a2a07c1e839c", "node_id": "C_kwDOAAsO6NoAKGZjZGNlZDExNWUzYjEwMWVkMTY4YjE3NWZhNjNhMmEwN2MxZTgzOWM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-01T11:33:55Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-01T11:33:55Z"}, "message": "Deprioritize ops function completions for non-method calls", "tree": {"sha": "d4307e658a716232215012336231648d23fc47f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4307e658a716232215012336231648d23fc47f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcdced115e3b101ed168b175fa63a2a07c1e839c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcdced115e3b101ed168b175fa63a2a07c1e839c", "html_url": "https://github.com/rust-lang/rust/commit/fcdced115e3b101ed168b175fa63a2a07c1e839c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcdced115e3b101ed168b175fa63a2a07c1e839c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4800c05a206eb156617b76fdb30af0b6c2c0fb26", "url": "https://api.github.com/repos/rust-lang/rust/commits/4800c05a206eb156617b76fdb30af0b6c2c0fb26", "html_url": "https://github.com/rust-lang/rust/commit/4800c05a206eb156617b76fdb30af0b6c2c0fb26"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "5feee48a96c5ff448de94111e0a4a9ef8c60b5ed", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fcdced115e3b101ed168b175fa63a2a07c1e839c/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcdced115e3b101ed168b175fa63a2a07c1e839c/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=fcdced115e3b101ed168b175fa63a2a07c1e839c", "patch": "@@ -1354,7 +1354,7 @@ fn main() {\n     }\n \n     #[test]\n-    fn op_method_relevances() {\n+    fn op_function_relevances() {\n         check_relevance(\n             r#\"\n #[lang = \"sub\"]\n@@ -1367,7 +1367,30 @@ fn foo(a: u32) { a.$0 }\n             expect![[r#\"\n                 me sub(\u2026) (as Sub) [op_method]\n             \"#]],\n-        )\n+        );\n+        check_relevance(\n+            r#\"\n+struct Foo;\n+impl Foo {\n+    fn new() -> Self {}\n+}\n+#[lang = \"eq\"]\n+pub trait PartialEq<Rhs: ?Sized = Self> {\n+    fn eq(&self, other: &Rhs) -> bool;\n+    fn ne(&self, other: &Rhs) -> bool;\n+}\n+\n+impl PartialEq for Foo {}\n+fn main() {\n+    Foo::$0\n+}\n+\"#,\n+            expect![[r#\"\n+                fn new() []\n+                me eq(\u2026) (as PartialEq) [op_method]\n+                me ne(\u2026) (as PartialEq) [op_method]\n+            \"#]],\n+        );\n     }\n \n     #[test]"}, {"sha": "224d4b054e035e8e7d8e3d28beb1f75104b0acc8", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fcdced115e3b101ed168b175fa63a2a07c1e839c/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcdced115e3b101ed168b175fa63a2a07c1e839c/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=fcdced115e3b101ed168b175fa63a2a07c1e839c", "patch": "@@ -67,16 +67,14 @@ fn render(\n     );\n \n     let ret_type = func.ret_type(db);\n+    let is_op_method = func\n+        .as_assoc_item(ctx.db())\n+        .and_then(|trait_| trait_.containing_trait_or_trait_impl(ctx.db()))\n+        .map_or(false, |trait_| completion.is_ops_trait(trait_));\n     item.set_relevance(CompletionRelevance {\n         type_match: compute_type_match(completion, &ret_type),\n         exact_name_match: compute_exact_name_match(completion, &call),\n-        is_op_method: match func_type {\n-            FuncType::Method(_) => func\n-                .as_assoc_item(ctx.db())\n-                .and_then(|trait_| trait_.containing_trait_or_trait_impl(ctx.db()))\n-                .map_or(false, |trait_| completion.is_ops_trait(trait_)),\n-            _ => false,\n-        },\n+        is_op_method,\n         ..CompletionRelevance::default()\n     });\n "}]}