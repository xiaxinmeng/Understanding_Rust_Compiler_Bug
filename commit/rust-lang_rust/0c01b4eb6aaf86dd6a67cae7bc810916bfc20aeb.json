{"sha": "0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMDFiNGViNmFhZjg2ZGQ2YTY3Y2FlN2JjODEwOTE2YmZjMjBhZWI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-23T18:50:14Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-23T21:53:08Z"}, "message": "Fix wrong substitution code\n\nWe need to shift in when we're substituting inside a binder.\n\nThis should fix #4053 (it doesn't fix the occasional overflow that also occurs\non the Diesel codebase though).", "tree": {"sha": "8981f17bcd77c0b151437aa4c39d54a9dc1d13be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8981f17bcd77c0b151437aa4c39d54a9dc1d13be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "html_url": "https://github.com/rust-lang/rust/commit/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29bc218fba2e52711b038562ff23bbb76a002380", "url": "https://api.github.com/repos/rust-lang/rust/commits/29bc218fba2e52711b038562ff23bbb76a002380", "html_url": "https://github.com/rust-lang/rust/commit/29bc218fba2e52711b038562ff23bbb76a002380"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "279c06d65d197e2ed8bc97e4a50e691fb850964c", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "patch": "@@ -863,7 +863,7 @@ pub trait TypeWalk {\n             &mut |ty, binders| {\n                 if let &mut Ty::Bound(bound) = ty {\n                     if bound.debruijn >= binders {\n-                        *ty = substs.0[bound.index].clone();\n+                        *ty = substs.0[bound.index].clone().shift_bound_vars(binders);\n                     }\n                 }\n             },"}, {"sha": "61a6801fc645c0cb9a8579d06bc1c78338c8de66", "filename": "crates/ra_hir_ty/src/tests/regression.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "patch": "@@ -533,3 +533,44 @@ fn foo(b: Bar) {\n     \"###\n     );\n }\n+\n+#[test]\n+fn issue_4053_diesel_where_clauses() {\n+    assert_snapshot!(\n+        infer(r#\"\n+trait BoxedDsl<DB> {\n+    type Output;\n+    fn internal_into_boxed(self) -> Self::Output;\n+}\n+\n+struct SelectStatement<From, Select, Distinct, Where, Order, LimitOffset, GroupBy, Locking> {\n+    order: Order,\n+}\n+\n+trait QueryFragment<DB: Backend> {}\n+\n+trait Into<T> { fn into(self) -> T; }\n+\n+impl<F, S, D, W, O, LOf, DB> BoxedDsl<DB>\n+    for SelectStatement<F, S, D, W, O, LOf, G>\n+where\n+    O: Into<dyn QueryFragment<DB>>,\n+{\n+    type Output = XXX;\n+\n+    fn internal_into_boxed(self) -> Self::Output {\n+        self.order.into();\n+    }\n+}\n+\"#),\n+        @r###\"\n+    [66; 70) 'self': Self\n+    [268; 272) 'self': Self\n+    [467; 471) 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n+    [489; 523) '{     ...     }': ()\n+    [499; 503) 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n+    [499; 509) 'self.order': O\n+    [499; 516) 'self.o...into()': dyn QueryFragment<DB>\n+    \"###\n+    );\n+}"}]}