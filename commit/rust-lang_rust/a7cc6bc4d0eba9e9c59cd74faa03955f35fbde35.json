{"sha": "a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "node_id": "C_kwDOAAsO6NoAKGE3Y2M2YmM0ZDBlYmE5ZTljNTljZDc0ZmFhMDM5NTVmMzVmYmRlMzU", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-11-24T23:20:52Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-11-25T21:33:37Z"}, "message": "Visit `param_env` field in Obligation's `TypeFoldable` impl\n\nThis oversight appears to have gone unnoticed for a long time\nwithout causing issues, but it should still be fixed.", "tree": {"sha": "daa87ed35555a4c8858b0e036917623cb034472f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daa87ed35555a4c8858b0e036917623cb034472f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmGgATIACgkQtAh+UQ6Y\nsWTBvQ//QiRoePg048s9CkYL4wIgn5t5YQ9NVGy879ukfJ7ErXF4woW9Qwdx4DP+\ncsP38SpLZtyN1fGeiupRV5OJhlDM0dXqn8c1PXWowYbB1BW2JmecwGCfdu/ABjz9\n+1DS/YK+6p0pM5uE1ZhI0srl+tJ3JDjhZmLiW6TA+15BReyvxCCxiQroa3fkCicY\nwBKdaxzNQGwP1YH+kn1Exp3JufqLvx8DMq5bZI30JAwrkbzt/0T7Z6IWNtTg3oNx\nLUZukkSxREXiLBJpoWdcTeCHyX0NLgK/eCfqt0SYAN726vROearo6nhb/pzvRMlb\nzeI1UsXawN6lHyFP6ToacrYofZm0pf0SDZ5l6reGyVsQinT9LjIDDBGo5BHinxkU\nX8zhL/97EVVXKCoohcJfR+7vfPUb8CkiFPSOMEvz5sO74kWJRmp0exXg2uHD7q2k\ncS1E2rfuqNYBFt2Ccg1BTQXNngVZHXV4rGkSORel/zGABvsuDC3WvnDtI6RRzT8u\nj26/mrVnzTo1OfWlvdWuh78EFGmjiATr6O9opvolVBjDC3WxPgVyk8JJsiKpIb9D\ncBVOaMH2O7SoHPvZYuMzro661j6xTC2s+V40NO8f79AljPgqSoSF527fubf2oVAE\nqyyxb1itfyFtQzd93UdkeLAe9G6kzvJMbL4M8VeRWzObU8hCHSk=\n=jRA6\n-----END PGP SIGNATURE-----", "payload": "tree daa87ed35555a4c8858b0e036917623cb034472f\nparent 982c552c908d179eaa38b6ef152ad3fa30268778\nauthor Aaron Hill <aa1ronham@gmail.com> 1637796052 -0600\ncommitter Aaron Hill <aa1ronham@gmail.com> 1637876017 -0600\n\nVisit `param_env` field in Obligation's `TypeFoldable` impl\n\nThis oversight appears to have gone unnoticed for a long time\nwithout causing issues, but it should still be fixed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "html_url": "https://github.com/rust-lang/rust/commit/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982c552c908d179eaa38b6ef152ad3fa30268778", "url": "https://api.github.com/repos/rust-lang/rust/commits/982c552c908d179eaa38b6ef152ad3fa30268778", "html_url": "https://github.com/rust-lang/rust/commit/982c552c908d179eaa38b6ef152ad3fa30268778"}], "stats": {"total": 58, "additions": 33, "deletions": 25}, "files": [{"sha": "b48ca3bd0c0d355d9cd8d3ed2aa311b590873eab", "filename": "compiler/rustc_infer/src/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fstructural_impls.rs?ref=a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "patch": "@@ -70,6 +70,7 @@ impl<'tcx, O: TypeFoldable<'tcx>> TypeFoldable<'tcx> for traits::Obligation<'tcx\n     }\n \n     fn super_visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> ControlFlow<V::BreakTy> {\n-        self.predicate.visit_with(visitor)\n+        self.predicate.visit_with(visitor)?;\n+        self.param_env.visit_with(visitor)\n     }\n }"}, {"sha": "3a7095789336c26bbd9a945a30ee1a4a7b6cc9c4", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-72787.min.stderr", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72787.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72787.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72787.min.stderr?ref=a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "patch": "@@ -1,5 +1,5 @@\n error: generic parameters may not be used in const operations\n-  --> $DIR/issue-72787.rs:11:17\n+  --> $DIR/issue-72787.rs:12:17\n    |\n LL |     Condition<{ LHS <= RHS }>: True\n    |                 ^^^ cannot perform const operation using `LHS`\n@@ -8,7 +8,7 @@ LL |     Condition<{ LHS <= RHS }>: True\n    = help: use `#![feature(generic_const_exprs)]` to allow generic const expressions\n \n error: generic parameters may not be used in const operations\n-  --> $DIR/issue-72787.rs:11:24\n+  --> $DIR/issue-72787.rs:12:24\n    |\n LL |     Condition<{ LHS <= RHS }>: True\n    |                        ^^^ cannot perform const operation using `RHS`\n@@ -17,7 +17,7 @@ LL |     Condition<{ LHS <= RHS }>: True\n    = help: use `#![feature(generic_const_exprs)]` to allow generic const expressions\n \n error: generic parameters may not be used in const operations\n-  --> $DIR/issue-72787.rs:25:25\n+  --> $DIR/issue-72787.rs:26:25\n    |\n LL |     IsLessOrEqual<{ 8 - I }, { 8 - J }>: True,\n    |                         ^ cannot perform const operation using `I`\n@@ -26,7 +26,7 @@ LL |     IsLessOrEqual<{ 8 - I }, { 8 - J }>: True,\n    = help: use `#![feature(generic_const_exprs)]` to allow generic const expressions\n \n error: generic parameters may not be used in const operations\n-  --> $DIR/issue-72787.rs:25:36\n+  --> $DIR/issue-72787.rs:26:36\n    |\n LL |     IsLessOrEqual<{ 8 - I }, { 8 - J }>: True,\n    |                                    ^ cannot perform const operation using `J`\n@@ -35,21 +35,29 @@ LL |     IsLessOrEqual<{ 8 - I }, { 8 - J }>: True,\n    = help: use `#![feature(generic_const_exprs)]` to allow generic const expressions\n \n error[E0283]: type annotations needed\n-  --> $DIR/issue-72787.rs:21:26\n+  --> $DIR/issue-72787.rs:10:38\n+   |\n+LL | impl<const LHS: u32, const RHS: u32> True for IsLessOrEqual<LHS, RHS> where\n+   |                                      ^^^^ cannot infer type for struct `IsLessOrEqual<LHS, RHS>`\n+   |\n+   = note: cannot satisfy `IsLessOrEqual<LHS, RHS>: True`\n+\n+error[E0283]: type annotations needed\n+  --> $DIR/issue-72787.rs:22:26\n    |\n LL |     IsLessOrEqual<I, 8>: True,\n    |                          ^^^^ cannot infer type for struct `IsLessOrEqual<I, 8_u32>`\n    |\n    = note: cannot satisfy `IsLessOrEqual<I, 8_u32>: True`\n \n error[E0283]: type annotations needed\n-  --> $DIR/issue-72787.rs:21:26\n+  --> $DIR/issue-72787.rs:22:26\n    |\n LL |     IsLessOrEqual<I, 8>: True,\n    |                          ^^^^ cannot infer type for struct `IsLessOrEqual<I, 8_u32>`\n    |\n    = note: cannot satisfy `IsLessOrEqual<I, 8_u32>: True`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n \n For more information about this error, try `rustc --explain E0283`."}, {"sha": "2ea5d634f6ef3c94d98833eacd68167766be5833", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-72787.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72787.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72787.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72787.rs?ref=a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "patch": "@@ -8,6 +8,7 @@ pub struct Condition<const CONDITION: bool>;\n pub trait True {}\n \n impl<const LHS: u32, const RHS: u32> True for IsLessOrEqual<LHS, RHS> where\n+//[min]~^ ERROR type annotations needed\n     Condition<{ LHS <= RHS }>: True\n //[min]~^ Error generic parameters may not be used in const operations\n //[min]~| Error generic parameters may not be used in const operations"}, {"sha": "6e597b7669abc632ebdcdfc973450c5666d9c163", "filename": "src/test/ui/issues/issue-77919.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fissues%2Fissue-77919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fissues%2Fissue-77919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77919.rs?ref=a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "patch": "@@ -10,4 +10,4 @@ struct Multiply<N, M> {\n }\n impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n //~^ ERROR cannot find type `VAL` in this scope\n-//~| ERROR not all trait items implemented, missing: `VAL`\n+//~| ERROR type annotations needed"}, {"sha": "f98556bc72f478ebb6d7a7053e00867048d6fce3", "filename": "src/test/ui/issues/issue-77919.stderr", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fissues%2Fissue-77919.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftest%2Fui%2Fissues%2Fissue-77919.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77919.stderr?ref=a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "patch": "@@ -17,16 +17,15 @@ LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n    |          |\n    |          help: you might be missing a type parameter: `, VAL`\n \n-error[E0046]: not all trait items implemented, missing: `VAL`\n-  --> $DIR/issue-77919.rs:11:1\n+error[E0283]: type annotations needed\n+  --> $DIR/issue-77919.rs:11:12\n    |\n-LL |     const VAL: T;\n-   |     ------------- `VAL` from trait\n-...\n LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `VAL` in implementation\n+   |            ^^^^^^^^^^^^^^ cannot infer type for struct `Multiply<N, M>`\n+   |\n+   = note: cannot satisfy `Multiply<N, M>: TypeVal<usize>`\n \n error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0046, E0412.\n-For more information about an error, try `rustc --explain E0046`.\n+Some errors have detailed explanations: E0283, E0412.\n+For more information about an error, try `rustc --explain E0283`."}, {"sha": "abca7af30a00617510de76edd51c976e577d1e80", "filename": "src/tools/clippy/tests/ui/crashes/ice-6252.stderr", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6252.stderr?ref=a7cc6bc4d0eba9e9c59cd74faa03955f35fbde35", "patch": "@@ -21,16 +21,15 @@ LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n    |          |\n    |          help: you might be missing a type parameter: `, VAL`\n \n-error[E0046]: not all trait items implemented, missing: `VAL`\n-  --> $DIR/ice-6252.rs:10:1\n+error[E0283]: type annotations needed\n+  --> $DIR/ice-6252.rs:10:12\n    |\n-LL |     const VAL: T;\n-   |     ------------- `VAL` from trait\n-...\n LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `VAL` in implementation\n+   |            ^^^^^^^^^^^^^^ cannot infer type for struct `Multiply<N, M>`\n+   |\n+   = note: cannot satisfy `Multiply<N, M>: TypeVal<usize>`\n \n error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0046, E0412.\n-For more information about an error, try `rustc --explain E0046`.\n+Some errors have detailed explanations: E0283, E0412.\n+For more information about an error, try `rustc --explain E0283`."}]}