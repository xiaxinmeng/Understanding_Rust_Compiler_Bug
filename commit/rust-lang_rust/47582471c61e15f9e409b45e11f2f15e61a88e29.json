{"sha": "47582471c61e15f9e409b45e11f2f15e61a88e29", "node_id": "C_kwDOAAsO6NoAKDQ3NTgyNDcxYzYxZTE1ZjllNDA5YjQ1ZTExZjJmMTVlNjFhODhlMjk", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-05-07T07:14:48Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-05-12T06:21:51Z"}, "message": "typeck: port \"no resolve overridden impl substs\"\n\nPort \"could not resolve substs on overridden impl\" diagnostic to use the\ndiagnostic derive.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "fe9680676cc9ed121b83ef705f3ca555319ecfd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe9680676cc9ed121b83ef705f3ca555319ecfd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47582471c61e15f9e409b45e11f2f15e61a88e29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47582471c61e15f9e409b45e11f2f15e61a88e29", "html_url": "https://github.com/rust-lang/rust/commit/47582471c61e15f9e409b45e11f2f15e61a88e29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47582471c61e15f9e409b45e11f2f15e61a88e29/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "664733efd50eb4e2233d083abd159ca71f3844ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/664733efd50eb4e2233d083abd159ca71f3844ff", "html_url": "https://github.com/rust-lang/rust/commit/664733efd50eb4e2233d083abd159ca71f3844ff"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "95b348ec61353e5bca87292dc00084aefae38d08", "filename": "compiler/rustc_error_messages/locales/en-US/typeck.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47582471c61e15f9e409b45e11f2f15e61a88e29/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/47582471c61e15f9e409b45e11f2f15e61a88e29/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl?ref=47582471c61e15f9e409b45e11f2f15e61a88e29", "patch": "@@ -127,3 +127,5 @@ typeck-manual-implementation =\n     manual implementations of `{$trait_name}` are experimental\n     .label = manual implementations of `{$trait_name}` are experimental\n     .help = add `#![feature(unboxed_closures)]` to the crate attributes to enable\n+\n+typeck-substs-on-overridden-impl = could not resolve substs on overridden impl"}, {"sha": "cd3813ca4f5b536db118ef918e15c26ab2ed47cc", "filename": "compiler/rustc_typeck/src/errors.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/47582471c61e15f9e409b45e11f2f15e61a88e29/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47582471c61e15f9e409b45e11f2f15e61a88e29/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs?ref=47582471c61e15f9e409b45e11f2f15e61a88e29", "patch": "@@ -323,3 +323,10 @@ pub struct ManualImplementation {\n     pub span: Span,\n     pub trait_name: String,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(slug = \"typeck-substs-on-overridden-impl\")]\n+pub struct SubstsOnOverriddenImpl {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "bb97d00be32ccf41af60926b0944753c4e5b7284", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47582471c61e15f9e409b45e11f2f15e61a88e29/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47582471c61e15f9e409b45e11f2f15e61a88e29/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=47582471c61e15f9e409b45e11f2f15e61a88e29", "patch": "@@ -66,6 +66,7 @@\n //! on traits with methods can.\n \n use crate::constrained_generic_params as cgp;\n+use crate::errors::SubstsOnOverriddenImpl;\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::{DefId, LocalDefId};\n@@ -165,7 +166,7 @@ fn get_impl_substs<'tcx>(\n     let outlives_env = OutlivesEnvironment::new(ty::ParamEnv::empty());\n     infcx.resolve_regions_and_report_errors(impl1_def_id, &outlives_env, RegionckMode::default());\n     let Ok(impl2_substs) = infcx.fully_resolve(impl2_substs) else {\n-        tcx.sess.struct_span_err(span, \"could not resolve substs on overridden impl\").emit();\n+        tcx.sess.emit_err(SubstsOnOverriddenImpl { span });\n         return None;\n     };\n     Some((impl1_substs, impl2_substs))"}]}