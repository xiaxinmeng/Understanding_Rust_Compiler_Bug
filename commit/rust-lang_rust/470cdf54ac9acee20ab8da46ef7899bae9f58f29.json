{"sha": "470cdf54ac9acee20ab8da46ef7899bae9f58f29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MGNkZjU0YWM5YWNlZTIwYWI4ZGE0NmVmNzg5OWJhZTlmNThmMjk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge.aparicio@ferrous-systems.com", "date": "2020-01-15T15:39:08Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge.aparicio@ferrous-systems.com", "date": "2020-01-15T17:05:06Z"}, "message": "add bare metal ARM Cortex-A targets to rustc\n\n-> `rustc --target armv7-none-eabi` will work\n\nalso build rust-std (rustup) components for them\n\n-> `rustup target add armv7-none-eabi` will work", "tree": {"sha": "818985a018ed5b90de6382d1f28e3aeb982b03ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/818985a018ed5b90de6382d1f28e3aeb982b03ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/470cdf54ac9acee20ab8da46ef7899bae9f58f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/470cdf54ac9acee20ab8da46ef7899bae9f58f29", "html_url": "https://github.com/rust-lang/rust/commit/470cdf54ac9acee20ab8da46ef7899bae9f58f29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/470cdf54ac9acee20ab8da46ef7899bae9f58f29/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c74353c7d2e61b111a9241490b9fbbd1ebe491fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c74353c7d2e61b111a9241490b9fbbd1ebe491fe", "html_url": "https://github.com/rust-lang/rust/commit/c74353c7d2e61b111a9241490b9fbbd1ebe491fe"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "689e18c3b40bafeabd8d96910e40e4622ab715a2", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=470cdf54ac9acee20ab8da46ef7899bae9f58f29", "patch": "@@ -134,6 +134,8 @@ ENV TARGETS=$TARGETS,armebv7r-none-eabihf\n ENV TARGETS=$TARGETS,armv7r-none-eabi\n ENV TARGETS=$TARGETS,armv7r-none-eabihf\n ENV TARGETS=$TARGETS,thumbv7neon-unknown-linux-gnueabihf\n+ENV TARGETS=$TARGETS,armv7a-none-eabi\n+ENV TARGETS=$TARGETS,armv7a-none-eabihf\n \n # riscv targets currently do not need a C compiler, as compiler_builtins\n # doesn't currently have it enabled, and the riscv gcc compiler is not\n@@ -147,6 +149,8 @@ ENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n     CC_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc \\\n     AR_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-ar \\\n     CXX_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-g++ \\\n+    CC_armv7a_none_eabi=arm-none-eabi-gcc \\\n+    CC_armv7a_none_eabihf=arm-none-eabi-gcc \\\n     CC_riscv32i_unknown_none_elf=false \\\n     CC_riscv32imc_unknown_none_elf=false \\\n     CC_riscv32imac_unknown_none_elf=false \\"}, {"sha": "2fbef154f814c19046a8999be1bd6a33dde6ce63", "filename": "src/librustc_target/spec/armv7a_none_eabi.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabi.rs?ref=470cdf54ac9acee20ab8da46ef7899bae9f58f29", "patch": "@@ -0,0 +1,48 @@\n+// Generic ARMv7-A target for bare-metal code - floating point disabled\n+//\n+// This is basically the `armv7-unknown-linux-gnueabi` target with some changes\n+// (listed below) to bring it closer to the bare-metal `thumb` & `aarch64`\n+// targets:\n+//\n+// - `TargetOptions.features`: added `+strict-align`. rationale: unaligned\n+// memory access is disabled on boot on these cores\n+// - linker changed to LLD. rationale: C is not strictly needed to build\n+// bare-metal binaries (the `gcc` linker has the advantage that it knows where C\n+// libraries and crt*.o are but it's not much of an advantage here); LLD is also\n+// faster\n+// - `target_os` set to `none`. rationale: matches `thumb` targets\n+// - `target_{env,vendor}` set to an empty string. rationale: matches `thumb`\n+// targets\n+// - `panic_strategy` set to `abort`. rationale: matches `thumb` targets\n+// - `relocation-model` set to `static`; also no PIE, no relro and no dynamic\n+// linking. rationale: matches `thumb` targets\n+\n+use super::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        features: \"+v7,+thumb2,+soft-float,-neon,+strict-align\".to_string(),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        max_atomic_width: Some(64),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        emit_debug_gdb_scripts: false,\n+        ..Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"armv7a-none-eabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "f31e68c5bd12a51f05e173ead51c590706df5d0b", "filename": "src/librustc_target/spec/armv7a_none_eabihf.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabihf.rs?ref=470cdf54ac9acee20ab8da46ef7899bae9f58f29", "patch": "@@ -0,0 +1,36 @@\n+// Generic ARMv7-A target for bare-metal code - floating point enabled (assumes\n+// FPU is present and emits FPU instructions)\n+//\n+// This is basically the `armv7-unknown-linux-gnueabihf` target with some\n+// changes (list in `armv7a_none_eabi.rs`) to bring it closer to the bare-metal\n+// `thumb` & `aarch64` targets.\n+\n+use super::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        features: \"+v7,+vfp3,-d32,+thumb2,-neon,+strict-align\".to_string(),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        max_atomic_width: Some(64),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        emit_debug_gdb_scripts: false,\n+        ..Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"armv7a-none-eabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "67f45d3d230ef481c6d5ffa795a6673209833560", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=470cdf54ac9acee20ab8da46ef7899bae9f58f29", "patch": "@@ -472,6 +472,9 @@ supported_targets! {\n     (\"thumbv8m.main-none-eabi\", thumbv8m_main_none_eabi),\n     (\"thumbv8m.main-none-eabihf\", thumbv8m_main_none_eabihf),\n \n+    (\"armv7a-none-eabi\", armv7a_none_eabi),\n+    (\"armv7a-none-eabihf\", armv7a_none_eabihf),\n+\n     (\"msp430-none-elf\", msp430_none_elf),\n \n     (\"aarch64-unknown-cloudabi\", aarch64_unknown_cloudabi),"}, {"sha": "8281d20e4c886f564b0b90dd67dd143acf8f36b2", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470cdf54ac9acee20ab8da46ef7899bae9f58f29/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=470cdf54ac9acee20ab8da46ef7899bae9f58f29", "patch": "@@ -69,6 +69,8 @@ static TARGETS: &[&str] = &[\n     \"thumbv7neon-linux-androideabi\",\n     \"armv7-unknown-linux-gnueabi\",\n     \"armv7-unknown-linux-gnueabihf\",\n+    \"armv7a-none-eabi\",\n+    \"armv7a-none-eabihf\",\n     \"thumbv7neon-unknown-linux-gnueabihf\",\n     \"armv7-unknown-linux-musleabi\",\n     \"armv7-unknown-linux-musleabihf\","}]}