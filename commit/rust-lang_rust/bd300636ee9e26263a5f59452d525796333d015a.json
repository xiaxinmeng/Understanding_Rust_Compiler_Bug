{"sha": "bd300636ee9e26263a5f59452d525796333d015a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMzAwNjM2ZWU5ZTI2MjYzYTVmNTk0NTJkNTI1Nzk2MzMzZDAxNWE=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-19T19:30:23Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-20T07:38:40Z"}, "message": "rustc: Implement re-export of renamed modules\n\nIssue #1115", "tree": {"sha": "3f57d6d8b81ca260115a9376bef884b17298e334", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f57d6d8b81ca260115a9376bef884b17298e334"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd300636ee9e26263a5f59452d525796333d015a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd300636ee9e26263a5f59452d525796333d015a", "html_url": "https://github.com/rust-lang/rust/commit/bd300636ee9e26263a5f59452d525796333d015a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd300636ee9e26263a5f59452d525796333d015a/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25f7c844df79a92b0de75f2ac658f31307e492c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/25f7c844df79a92b0de75f2ac658f31307e492c5", "html_url": "https://github.com/rust-lang/rust/commit/25f7c844df79a92b0de75f2ac658f31307e492c5"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "0c50845de8b0461b2831436bf4b4ace073fecc48", "filename": "src/comp/metadata/csearch.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcsearch.rs?ref=bd300636ee9e26263a5f59452d525796333d015a", "patch": "@@ -12,6 +12,7 @@ export get_tag_variants;\n export get_impls_for_mod;\n export get_impl_methods;\n export get_type;\n+export get_item_name;\n \n fn get_symbol(cstore: cstore::cstore, def: ast::def_id) -> str {\n     let cdata = cstore::get_crate_data(cstore, def.crate).data;\n@@ -93,6 +94,11 @@ fn get_type(tcx: ty::ctxt, def: ast::def_id) -> ty::ty_param_kinds_and_ty {\n     decoder::get_type(cdata, def, tcx, resolver)\n }\n \n+fn get_item_name(cstore: cstore::cstore, cnum: int, id: int) -> ast::ident {\n+    let cdata = cstore::get_crate_data(cstore, cnum).data;\n+    ret decoder::lookup_item_name(cdata, id);\n+}\n+\n // Translates a def_id from an external crate to a def_id for the current\n // compilation environment. We use this when trying to load types from\n // external crates - if those types further refer to types in other crates"}, {"sha": "6c3066f4752b382f5adaae4a733c25fddc3a901f", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=bd300636ee9e26263a5f59452d525796333d015a", "patch": "@@ -183,7 +183,6 @@ fn lookup_item_name(data: @[u8], id: ast::node_id) -> ast::ident {\n     item_name(lookup_item(id, data))\n }\n \n-// FIXME doesn't yet handle renamed re-exported externals\n fn lookup_def(cnum: ast::crate_num, data: @[u8], did_: ast::def_id) ->\n    ast::def {\n     let item = lookup_item(did_.node, data);"}, {"sha": "26f55caec684d8a7344c2009b3ab2be3e22e5399", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=bd300636ee9e26263a5f59452d525796333d015a", "patch": "@@ -250,10 +250,11 @@ fn encode_tag_variant_info(ecx: @encode_ctxt, ebml_w: ebml::writer,\n }\n \n fn encode_info_for_mod(ebml_w: ebml::writer, md: _mod,\n-                       id: node_id) {\n+                       id: node_id, name: ident) {\n     ebml::start_tag(ebml_w, tag_items_data_item);\n     encode_def_id(ebml_w, local_def(id));\n     encode_family(ebml_w, 'm' as u8);\n+    encode_name(ebml_w, name);\n     for i in md.items {\n         alt i.node {\n           item_impl(_, _, _) {\n@@ -300,12 +301,13 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         ebml::end_tag(ebml_w);\n       }\n       item_mod(m) {\n-        encode_info_for_mod(ebml_w, m, item.id);\n+        encode_info_for_mod(ebml_w, m, item.id, item.ident);\n       }\n       item_native_mod(_) {\n         ebml::start_tag(ebml_w, tag_items_data_item);\n         encode_def_id(ebml_w, local_def(item.id));\n         encode_family(ebml_w, 'n' as u8);\n+        encode_name(ebml_w, item.ident);\n         ebml::end_tag(ebml_w);\n       }\n       item_ty(_, tps) {\n@@ -434,7 +436,7 @@ fn encode_info_for_items(ecx: @encode_ctxt, ebml_w: ebml::writer,\n     let index: [entry<int>] = [];\n     ebml::start_tag(ebml_w, tag_items_data);\n     index += [{val: crate_node_id, pos: ebml_w.writer.tell()}];\n-    encode_info_for_mod(ebml_w, crate_mod, crate_node_id);\n+    encode_info_for_mod(ebml_w, crate_mod, crate_node_id, \"\");\n     ecx.ccx.ast_map.items {|key, val|\n         alt val {\n           middle::ast_map::node_item(i) {"}, {"sha": "9620931995b1de2baacf06997722619205343dc0", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd300636ee9e26263a5f59452d525796333d015a/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=bd300636ee9e26263a5f59452d525796333d015a", "patch": "@@ -1353,7 +1353,25 @@ fn ns_for_def(d: def) -> namespace {\n fn lookup_external(e: env, cnum: int, ids: [ident], ns: namespace) ->\n    option::t<def> {\n     for d: def in csearch::lookup_defs(e.sess.get_cstore(), cnum, ids) {\n-        e.ext_map.insert(def_id_of_def(d), ids);\n+        let did = def_id_of_def(d);\n+        alt d {\n+          def_mod(_) | def_native_mod(_) {\n+            // The [native] module name might have renamed when importing,\n+            // find the original name for further lookup of names inside the\n+            // [native] module\n+            if did.crate != ast::local_crate {\n+                let cname = cstore::get_crate_data(e.cstore, did.crate).name;\n+                let name =\n+                    csearch::get_item_name(e.cstore, did.crate, did.node);\n+                e.ext_map.insert(did, vec::init(ids) + [name]);\n+            } else {\n+                e.ext_map.insert(did, ids);\n+            }\n+          }\n+          _ {\n+            e.ext_map.insert(did, ids);\n+          }\n+        }\n         if ns == ns_for_def(d) { ret some(d); }\n     }\n     ret none::<def>;"}]}