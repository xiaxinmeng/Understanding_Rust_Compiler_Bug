{"sha": "e87cba85efe966f51e9ba68401187731319ba7c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4N2NiYTg1ZWZlOTY2ZjUxZTliYTY4NDAxMTg3NzMxMzE5YmE3Yzc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-30T08:45:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-30T08:45:16Z"}, "message": "Merge #5132\n\n5132: Fix some typos r=matklad a=davidlattimore\n\n\n\nCo-authored-by: David Lattimore <dml@google.com>", "tree": {"sha": "65699e6f3a876d3aa4ac62576d76e8f518a21d62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65699e6f3a876d3aa4ac62576d76e8f518a21d62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e87cba85efe966f51e9ba68401187731319ba7c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe+vucCRBK7hj4Ov3rIwAAdHIIABOXVYUNRjUd+v8ZO1z6VTA5\nxjpUMp3l3LYS6izlBlDBCZ43CDngdNU5GBdxlgXxU0RshqTimN8sQ0AeRVf0V6NJ\np7rdBFgBcyxirChHUXNghE8eHjuGPo6EYdr30NWGIlCg5uzKrUqElzbsKHEpeHZM\n0TVnxtZ0g+bgrHhvZXhL3tSasavsOKMOyVsjaLXDds6zJjOoGlMhZ7x1jzJ8vB8O\nrgl3gTioA+Cj6PNur9CqapsfopTxptDZg5f3CF2fKWWl5HtCeJBoG8xGAJjT/41B\nIbHFX5Kd1n/xN+ZkRkkyD07AAnDP+FlPbI6tR4fhFOluCUFzA95MKpg+wEU8kow=\n=IJYJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 65699e6f3a876d3aa4ac62576d76e8f518a21d62\nparent d13ded6cbc8b835807f08606db90bedf18643154\nparent ef49bbeec430586b847a0ef84264b7afaf36112a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593506716 +0000\ncommitter GitHub <noreply@github.com> 1593506716 +0000\n\nMerge #5132\n\n5132: Fix some typos r=matklad a=davidlattimore\n\n\n\nCo-authored-by: David Lattimore <dml@google.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e87cba85efe966f51e9ba68401187731319ba7c7", "html_url": "https://github.com/rust-lang/rust/commit/e87cba85efe966f51e9ba68401187731319ba7c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e87cba85efe966f51e9ba68401187731319ba7c7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d13ded6cbc8b835807f08606db90bedf18643154", "url": "https://api.github.com/repos/rust-lang/rust/commits/d13ded6cbc8b835807f08606db90bedf18643154", "html_url": "https://github.com/rust-lang/rust/commit/d13ded6cbc8b835807f08606db90bedf18643154"}, {"sha": "ef49bbeec430586b847a0ef84264b7afaf36112a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef49bbeec430586b847a0ef84264b7afaf36112a", "html_url": "https://github.com/rust-lang/rust/commit/ef49bbeec430586b847a0ef84264b7afaf36112a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9f8e540c023e107a47f587cce12a367643fa2595", "filename": "crates/ra_ide/src/ssr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=e87cba85efe966f51e9ba68401187731319ba7c7", "patch": "@@ -4,7 +4,7 @@ use ra_ide_db::{symbol_index::SymbolsDatabase, RootDatabase};\n use crate::SourceFileEdit;\n use ra_ssr::{MatchFinder, SsrError, SsrRule};\n \n-// Feature: Structural Seach and Replace\n+// Feature: Structural Search and Replace\n //\n // Search and replace with named wildcards that will match any expression, type, path, pattern or item.\n // The syntax for a structural search replace command is `<search_pattern> ==>> <replace_pattern>`."}, {"sha": "54413a151e05b8a8365b5e58ca8cae8e804873d9", "filename": "crates/ra_ssr/src/matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fmatching.rs?ref=e87cba85efe966f51e9ba68401187731319ba7c7", "patch": "@@ -225,7 +225,7 @@ impl<'db, 'sema> MatchState<'db, 'sema> {\n             match self.next_non_trivial(&mut code_it) {\n                 None => {\n                     if let Some(p) = pattern_it.next() {\n-                        fail_match!(\"Part of the pattern was unmached: {:?}\", p);\n+                        fail_match!(\"Part of the pattern was unmatched: {:?}\", p);\n                     }\n                     return Ok(());\n                 }"}, {"sha": "04d46bd32653b080b0c346d10c7cc388734c9663", "filename": "crates/ra_ssr/src/parsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ssr%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ssr%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fparsing.rs?ref=e87cba85efe966f51e9ba68401187731319ba7c7", "patch": "@@ -55,7 +55,7 @@ impl FromStr for SsrRule {\n         let pattern = it.next().expect(\"at least empty string\").trim();\n         let template = it\n             .next()\n-            .ok_or_else(|| SsrError(\"Cannot find delemiter `==>>`\".into()))?\n+            .ok_or_else(|| SsrError(\"Cannot find delimiter `==>>`\".into()))?\n             .trim()\n             .to_string();\n         if it.next().is_some() {"}, {"sha": "57b2f50b25e4d63b93960f3475d765b884df4ae2", "filename": "crates/ra_ssr/src/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Ftests.rs?ref=e87cba85efe966f51e9ba68401187731319ba7c7", "patch": "@@ -152,12 +152,12 @@ fn parse_error_text(query: &str) -> String {\n \n #[test]\n fn parser_empty_query() {\n-    assert_eq!(parse_error_text(\"\"), \"Parse error: Cannot find delemiter `==>>`\");\n+    assert_eq!(parse_error_text(\"\"), \"Parse error: Cannot find delimiter `==>>`\");\n }\n \n #[test]\n fn parser_no_delimiter() {\n-    assert_eq!(parse_error_text(\"foo()\"), \"Parse error: Cannot find delemiter `==>>`\");\n+    assert_eq!(parse_error_text(\"foo()\"), \"Parse error: Cannot find delimiter `==>>`\");\n }\n \n #[test]\n@@ -227,7 +227,7 @@ fn assert_ssr_transforms(rules: &[&str], input: &str, result: &str) {\n         let mut after = db.file_text(file_id).to_string();\n         edits.apply(&mut after);\n         // Likewise, we need to make sure that whatever transformations fixture parsing applies,\n-        // also get appplied to our expected result.\n+        // also get applied to our expected result.\n         let result = normalize_code(result);\n         assert_eq!(after, result);\n     } else {"}, {"sha": "cf1108e129da106042a736293658f8bcc50dcb06", "filename": "crates/rust-analyzer/src/bin/args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87cba85efe966f51e9ba68401187731319ba7c7/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs?ref=e87cba85efe966f51e9ba68401187731319ba7c7", "patch": "@@ -98,7 +98,7 @@ USAGE:\n     rust-analyzer parse [FLAGS]\n \n FLAGS:\n-    -h, --help       Prints help inforamtion\n+    -h, --help       Prints help information\n         --no-dump\"\n                     );\n                     return Ok(Err(HelpPrinted));"}]}