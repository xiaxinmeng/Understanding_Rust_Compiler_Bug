{"sha": "b52f6f4ca8a2d04abf2f6481530303c2eabaef18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MmY2ZjRjYThhMmQwNGFiZjJmNjQ4MTUzMDMwM2MyZWFiYWVmMTg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-03T16:39:38Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T07:52:35Z"}, "message": "Elaborate on why we don't look at frozenness", "tree": {"sha": "3e71c3453f07813a3e18fd8c4bd35e8ef927aef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e71c3453f07813a3e18fd8c4bd35e8ef927aef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b52f6f4ca8a2d04abf2f6481530303c2eabaef18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b52f6f4ca8a2d04abf2f6481530303c2eabaef18", "html_url": "https://github.com/rust-lang/rust/commit/b52f6f4ca8a2d04abf2f6481530303c2eabaef18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b52f6f4ca8a2d04abf2f6481530303c2eabaef18/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "870a6dc230f14347fe71b7a27919607630cef033", "url": "https://api.github.com/repos/rust-lang/rust/commits/870a6dc230f14347fe71b7a27919607630cef033", "html_url": "https://github.com/rust-lang/rust/commit/870a6dc230f14347fe71b7a27919607630cef033"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "b55129bd4196d963c6fd26d3c300c2b35d62fa58", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b52f6f4ca8a2d04abf2f6481530303c2eabaef18/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b52f6f4ca8a2d04abf2f6481530303c2eabaef18/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=b52f6f4ca8a2d04abf2f6481530303c2eabaef18", "patch": "@@ -168,6 +168,8 @@ for\n                 // We do not have any `frozen` logic here, because it's essentially equivalent to\n                 // the mutability except for the outermost item. Only `UnsafeCell` can \"unfreeze\",\n                 // and we check that in `visit_aggregate`.\n+                // This is not an inherent limitation, but one that we know to be true, because\n+                // const qualification enforces it. We can lift it in the future.\n                 match (self.mode, mutability) {\n                     // all is \"good and well\" in the unsoundness of `static mut`\n                     (InternMode::StaticMut, _) => {},"}]}