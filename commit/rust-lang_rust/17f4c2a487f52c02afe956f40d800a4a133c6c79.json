{"sha": "17f4c2a487f52c02afe956f40d800a4a133c6c79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZjRjMmE0ODdmNTJjMDJhZmU5NTZmNDBkODAwYTRhMTMzYzZjNzk=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-12-09T00:08:11Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-03-21T19:54:06Z"}, "message": "add codegen test", "tree": {"sha": "a511df7b6ec5439a1ce1c543e9302293031ea06c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a511df7b6ec5439a1ce1c543e9302293031ea06c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f4c2a487f52c02afe956f40d800a4a133c6c79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f4c2a487f52c02afe956f40d800a4a133c6c79", "html_url": "https://github.com/rust-lang/rust/commit/17f4c2a487f52c02afe956f40d800a4a133c6c79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f4c2a487f52c02afe956f40d800a4a133c6c79/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c67e5527023df098257c4258072bff52de95c8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c67e5527023df098257c4258072bff52de95c8f", "html_url": "https://github.com/rust-lang/rust/commit/6c67e5527023df098257c4258072bff52de95c8f"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "51b570e8be68c9a1d3d1c738488d9fdd08c7349c", "filename": "src/test/codegen/vec-in-place.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/17f4c2a487f52c02afe956f40d800a4a133c6c79/src%2Ftest%2Fcodegen%2Fvec-in-place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4c2a487f52c02afe956f40d800a4a133c6c79/src%2Ftest%2Fcodegen%2Fvec-in-place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fvec-in-place.rs?ref=17f4c2a487f52c02afe956f40d800a4a133c6c79", "patch": "@@ -0,0 +1,13 @@\n+// compile-flags: -O\n+// min-llvm-version: 11.0\n+#![crate_type = \"lib\"]\n+\n+// Ensure that trivial casts of vec elements are O(1)\n+\n+// CHECK-LABEL: @vec_iterator_cast\n+#[no_mangle]\n+pub fn vec_iterator_cast(vec: Vec<isize>) -> Vec<usize> {\n+    // CHECK-NOT: loop\n+    // CHECK-NOT: call\n+    vec.into_iter().map(|e| e as usize).collect()\n+}"}]}