{"sha": "f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YTkzZjAyOWNlNzIxZmMyZDc0ZDhiYTEyOTQyZDljZGZiYjZjMTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-06T15:44:52Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-07T09:38:12Z"}, "message": "Apply suggestion from code review", "tree": {"sha": "b74ed5bda9d73740a0d53773c470410eda2e1a0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b74ed5bda9d73740a0d53773c470410eda2e1a0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "html_url": "https://github.com/rust-lang/rust/commit/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd201f526f797796c738b93241fd0c70df881f9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd201f526f797796c738b93241fd0c70df881f9c", "html_url": "https://github.com/rust-lang/rust/commit/cd201f526f797796c738b93241fd0c70df881f9c"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "c57061c0bfa9782f3f012363fbc2e53a4e4f9fa5", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "patch": "@@ -187,7 +187,7 @@ declare_clippy_lint! {\n     /// ```\n     pub DEPRECATED_CFG_ATTR,\n     complexity,\n-    \"usage of `cfg_attr(rustfmt)` instead of `tool_attributes`\"\n+    \"usage of `cfg_attr(rustfmt)` instead of tool attributes\"\n }\n \n declare_lint_pass!(Attributes => [\n@@ -520,7 +520,7 @@ impl EarlyLintPass for DeprecatedCfgAttribute {\n                     cx,\n                     DEPRECATED_CFG_ATTR,\n                     attr.span,\n-                    \"`cfg_attr` is deprecated for rustfmt and got replaced by `tool_attributes`\",\n+                    \"`cfg_attr` is deprecated for rustfmt and got replaced by tool attributes\",\n                     \"use\",\n                     \"#[rustfmt::skip]\".to_string(),\n                     Applicability::MachineApplicable,"}, {"sha": "eb2a3220a04e8671928c9f7550db8a24f28e41fb", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "patch": "@@ -113,7 +113,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingConstForFn {\n                 cx.tcx.sess.span_err(span, &err);\n             }\n         } else {\n-            span_lint(cx, MISSING_CONST_FOR_FN, span, \"this could be a `const_fn`\");\n+            span_lint(cx, MISSING_CONST_FOR_FN, span, \"this could be a `const fn`\");\n         }\n     }\n }"}, {"sha": "1086f5e48f9ad728db69e0a607cebdf63b7a4987", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "patch": "@@ -318,7 +318,7 @@ pub const ALL_LINTS: [Lint; 345] = [\n     Lint {\n         name: \"deprecated_cfg_attr\",\n         group: \"complexity\",\n-        desc: \"usage of `cfg_attr(rustfmt)` instead of `tool_attributes`\",\n+        desc: \"usage of `cfg_attr(rustfmt)` instead of tool attributes\",\n         deprecation: None,\n         module: \"attrs\",\n     },"}, {"sha": "c1efd47db90b0f313132e0a0465c5cf2826672e2", "filename": "tests/ui/cfg_attr_rustfmt.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.stderr?ref=f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "patch": "@@ -1,12 +1,12 @@\n-error: `cfg_attr` is deprecated for rustfmt and got replaced by `tool_attributes`\n+error: `cfg_attr` is deprecated for rustfmt and got replaced by tool attributes\n   --> $DIR/cfg_attr_rustfmt.rs:18:5\n    |\n LL |     #[cfg_attr(rustfmt, rustfmt::skip)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`\n    |\n    = note: `-D clippy::deprecated-cfg-attr` implied by `-D warnings`\n \n-error: `cfg_attr` is deprecated for rustfmt and got replaced by `tool_attributes`\n+error: `cfg_attr` is deprecated for rustfmt and got replaced by tool attributes\n   --> $DIR/cfg_attr_rustfmt.rs:22:1\n    |\n LL | #[cfg_attr(rustfmt, rustfmt_skip)]"}, {"sha": "7d3dca1800b30a6d50b77c50ff5fb0d56fbe853e", "filename": "tests/ui/missing_const_for_fn/could_be_const.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr?ref=f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "patch": "@@ -1,4 +1,4 @@\n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:12:5\n    |\n LL | /     pub fn new() -> Self {\n@@ -8,15 +8,15 @@ LL | |     }\n    |\n    = note: `-D clippy::missing-const-for-fn` implied by `-D warnings`\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:18:1\n    |\n LL | / fn one() -> i32 {\n LL | |     1\n LL | | }\n    | |_^\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:23:1\n    |\n LL | / fn two() -> i32 {\n@@ -25,39 +25,39 @@ LL | |     abc\n LL | | }\n    | |_^\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:30:1\n    |\n LL | / fn string() -> String {\n LL | |     String::new()\n LL | | }\n    | |_^\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:35:1\n    |\n LL | / unsafe fn four() -> i32 {\n LL | |     4\n LL | | }\n    | |_^\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:40:1\n    |\n LL | / fn generic<T>(t: T) -> T {\n LL | |     t\n LL | | }\n    | |_^\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:44:1\n    |\n LL | / fn sub(x: u32) -> usize {\n LL | |     unsafe { transmute(&x) }\n LL | | }\n    | |_^\n \n-error: this could be a `const_fn`\n+error: this could be a `const fn`\n   --> $DIR/could_be_const.rs:63:9\n    |\n LL | /         pub fn b(self, a: &A) -> B {"}]}