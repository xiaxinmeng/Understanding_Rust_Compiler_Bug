{"sha": "20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "node_id": "C_kwDOAAsO6NoAKDIwYTZmM2E4YThjZTVhZTE4ZDA2YjEyY2Q3OTA0YmM1Mjk0Y2E3NTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-25T21:01:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-25T21:01:10Z"}, "message": "Auto merge of #97513 - jyn514:submodule-handling, r=Mark-Simulacrum\n\nFully remove submodule handling from bootstrap.py\n\nThese submodules were previously updated in python because Cargo gives a hard error if toml files\nare missing from the workspace:\n\n```\nerror: failed to load manifest for workspace member `/home/jnelson/rust-lang/rust/src/tools/rls`\n\nCaused by:\n  failed to read `/home/jnelson/rust-lang/rust/src/tools/rls/Cargo.toml`\n\nCaused by:\n  No such file or directory (os error 2)\nfailed to run: /home/jnelson/rust-lang/rust/build/x86_64-unknown-linux-gnu/stage0/bin/cargo build --manifest-path /home/jnelson/rust-lang/rust/src/bootstrap/Cargo.toml\n```\n\nHowever, bootstrap doesn't actually need to be part of the workspace.\nRemove it so we can move submodule handling fully to Rust, avoiding duplicate code between Rust and Python.\n\nNote that this does break `cargo run`; it has to be `cd src/bootstrap && cargo run` now.\nGiven that we're planning to make the main entrypoint a shell script (or rust binary),\nI think this is a good tradeoff for reduced complexity in bootstrap.py.\n\nTo get this working, I also had to remove support for vendoring when using the git sources, because `cargo vendor` requires all submodules to be checked out. I think this is ok; people who care about this are likely already using the pre-vendored `rustc-src` tarball.\n\nFixes https://github.com/rust-lang/rust/issues/90764. Helps with #94829", "tree": {"sha": "91e252536323e083dd0a93d508386a7d6be66063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91e252536323e083dd0a93d508386a7d6be66063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "html_url": "https://github.com/rust-lang/rust/commit/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cf699d2ff4ff23a6d6862a35727f4d5d3567dae", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf699d2ff4ff23a6d6862a35727f4d5d3567dae", "html_url": "https://github.com/rust-lang/rust/commit/9cf699d2ff4ff23a6d6862a35727f4d5d3567dae"}, {"sha": "81482e67cbde2e15422bb8a07345ceab54a6a24e", "url": "https://api.github.com/repos/rust-lang/rust/commits/81482e67cbde2e15422bb8a07345ceab54a6a24e", "html_url": "https://github.com/rust-lang/rust/commit/81482e67cbde2e15422bb8a07345ceab54a6a24e"}], "stats": {"total": 985, "additions": 757, "deletions": 228}, "files": [{"sha": "a094cd78429c6ed15ab88c52332215ca29aa97cb", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 67, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -215,32 +215,6 @@ dependencies = [\n  \"byte-tools\",\n ]\n \n-[[package]]\n-name = \"bootstrap\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"cc\",\n- \"cmake\",\n- \"filetime\",\n- \"getopts\",\n- \"hex 0.4.2\",\n- \"ignore\",\n- \"libc\",\n- \"num_cpus\",\n- \"once_cell\",\n- \"opener\",\n- \"pretty_assertions 0.7.2\",\n- \"serde\",\n- \"serde_json\",\n- \"sha2\",\n- \"sysinfo\",\n- \"tar\",\n- \"toml\",\n- \"walkdir\",\n- \"winapi\",\n- \"xz2\",\n-]\n-\n [[package]]\n name = \"bstr\"\n version = \"0.2.13\"\n@@ -735,15 +709,6 @@ dependencies = [\n  \"rustc-semver\",\n ]\n \n-[[package]]\n-name = \"cmake\"\n-version = \"0.1.44\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0e56268c17a6248366d66d4a47a3381369d068cce8409bb1716ed77ea32163bb\"\n-dependencies = [\n- \"cc\",\n-]\n-\n [[package]]\n name = \"colored\"\n version = \"2.0.0\"\n@@ -1023,9 +988,9 @@ dependencies = [\n \n [[package]]\n name = \"ctor\"\n-version = \"0.1.15\"\n+version = \"0.1.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"39858aa5bac06462d4dd4b9164848eb81ffc4aa5c479746393598fd193afa227\"\n+checksum = \"f877be4f7c9f246b183111634f75baa039715e3f46ce860677d3b19a69fb229c\"\n dependencies = [\n  \"quote\",\n  \"syn\",\n@@ -2683,9 +2648,9 @@ checksum = \"8e22443d1643a904602595ba1cd8f7d896afe56d26712531c5ff73a15b2fbf64\"\n \n [[package]]\n name = \"output_vt100\"\n-version = \"0.1.2\"\n+version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"53cdc5b785b7a58c5aad8216b3dfa114df64b0b06ae6e1501cef91df2fbdf8f9\"\n+checksum = \"628223faebab4e3e40667ee0b2336d34a5b960ff60ea743ddfdbcf7770bcfb66\"\n dependencies = [\n  \"winapi\",\n ]\n@@ -2944,18 +2909,6 @@ version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\"\n \n-[[package]]\n-name = \"pretty_assertions\"\n-version = \"0.7.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1cab0e7c02cf376875e9335e0ba1da535775beb5450d21e1dffca068818ed98b\"\n-dependencies = [\n- \"ansi_term\",\n- \"ctor\",\n- \"diff\",\n- \"output_vt100\",\n-]\n-\n [[package]]\n name = \"pretty_assertions\"\n version = \"1.2.1\"\n@@ -5162,21 +5115,6 @@ dependencies = [\n  \"unicode-xid\",\n ]\n \n-[[package]]\n-name = \"sysinfo\"\n-version = \"0.24.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a6a8e71535da31837213ac114531d31def75d7aebd133264e420a3451fa7f703\"\n-dependencies = [\n- \"cfg-if 1.0.0\",\n- \"core-foundation-sys\",\n- \"libc\",\n- \"ntapi\",\n- \"once_cell\",\n- \"rayon\",\n- \"winapi\",\n-]\n-\n [[package]]\n name = \"tar\"\n version = \"0.4.38\"\n@@ -5553,7 +5491,7 @@ dependencies = [\n  \"colored\",\n  \"crossbeam\",\n  \"lazy_static\",\n- \"pretty_assertions 1.2.1\",\n+ \"pretty_assertions\",\n  \"regex\",\n  \"rustc_version\",\n  \"serde\","}, {"sha": "ed024192c15030cf2acaffa900031a39d1abc760", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -1,7 +1,5 @@\n [workspace]\n-default-members = [\"src/bootstrap\"]\n members = [\n-  \"src/bootstrap\",\n   \"compiler/rustc\",\n   \"library/std\",\n   \"library/test\",\n@@ -44,6 +42,7 @@ exclude = [\n   \"build\",\n   \"compiler/rustc_codegen_cranelift\",\n   \"compiler/rustc_codegen_gcc\",\n+  \"src/bootstrap\",\n   \"src/test/rustdoc-gui\",\n   # HACK(eddyb) This hardcodes the fact that our CI uses `/checkout/obj`.\n   \"obj\",\n@@ -97,15 +96,6 @@ gimli.debug = 0\n miniz_oxide.debug = 0\n object.debug = 0\n \n-# The only package that ever uses debug builds is bootstrap.\n-# We care a lot about bootstrap's compile times, so don't include debug info for\n-# dependencies, only bootstrap itself.\n-[profile.dev]\n-debug = 0\n-[profile.dev.package]\n-# Only use debuginfo=1 to further reduce compile times.\n-bootstrap.debug = 1\n-\n # We want the RLS to use the version of Cargo that we've got vendored in this\n # repository to ensure that the same exact version of Cargo is used by both the\n # RLS and the Cargo binary itself. The RLS depends on Cargo as a git repository"}, {"sha": "206bc38efb320c45e18c61874ea9a5f26a3fa4f3", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -7,9 +7,9 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n \n ## [Changes since the last major version]\n \n+- Vendoring is no longer done automatically when building from git sources. To use vendoring, run `cargo vendor` manually, or use the pre-vendored `rustc-src` tarball.\n - `llvm-libunwind` now accepts `in-tree` (formerly true), `system` or `no` (formerly false) [#77703](https://github.com/rust-lang/rust/pull/77703)\n - The options `infodir`, `localstatedir`, and `gpg-password-file` are no longer allowed in config.toml. Previously, they were ignored without warning. Note that `infodir` and `localstatedir` are still accepted by `./configure`, with a warning. [#82451](https://github.com/rust-lang/rust/pull/82451)\n-- Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n - Change the names for `dist` commands to match the component they generate. [#90684](https://github.com/rust-lang/rust/pull/90684)\n - The `build.fast-submodules` option has been removed. Fast submodule checkouts are enabled unconditionally. Automatic submodule handling can still be disabled with `build.submodules = false`.\n \n@@ -19,6 +19,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - The default bootstrap profiles are now located at `bootstrap/defaults/config.$PROFILE.toml` (previously they were located at `bootstrap/defaults/config.toml.$PROFILE`) [#77558](https://github.com/rust-lang/rust/pull/77558)\n - If you have Rust already installed, `x.py` will now infer the host target\n   from the default rust toolchain. [#78513](https://github.com/rust-lang/rust/pull/78513)\n+- Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n \n \n ## [Version 2] - 2020-09-25"}, {"sha": "6fcbd7a215601dc56d7a640ca85f370bfdfbdb89", "filename": "src/bootstrap/Cargo.lock", "status": "added", "additions": 676, "deletions": 0, "changes": 676, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.lock?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -0,0 +1,676 @@\n+# This file is automatically @generated by Cargo.\n+# It is not intended for manual editing.\n+version = 3\n+\n+[[package]]\n+name = \"aho-corasick\"\n+version = \"0.7.18\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1e37cfd5e7657ada45f742d6e99ca5788580b5c529dc78faf11ece6dc702656f\"\n+dependencies = [\n+ \"memchr\",\n+]\n+\n+[[package]]\n+name = \"ansi_term\"\n+version = \"0.12.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\n+dependencies = [\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"autocfg\"\n+version = \"1.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n+\n+[[package]]\n+name = \"bitflags\"\n+version = \"1.3.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n+\n+[[package]]\n+name = \"block-buffer\"\n+version = \"0.10.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"0bf7fe51849ea569fd452f37822f606a5cabb684dc918707a0193fd4664ff324\"\n+dependencies = [\n+ \"generic-array\",\n+]\n+\n+[[package]]\n+name = \"bootstrap\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"cc\",\n+ \"cmake\",\n+ \"filetime\",\n+ \"getopts\",\n+ \"hex\",\n+ \"ignore\",\n+ \"libc\",\n+ \"num_cpus\",\n+ \"once_cell\",\n+ \"opener\",\n+ \"pretty_assertions\",\n+ \"serde\",\n+ \"serde_json\",\n+ \"sha2\",\n+ \"sysinfo\",\n+ \"tar\",\n+ \"toml\",\n+ \"walkdir\",\n+ \"winapi\",\n+ \"xz2\",\n+]\n+\n+[[package]]\n+name = \"bstr\"\n+version = \"0.2.17\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\n+dependencies = [\n+ \"lazy_static\",\n+ \"memchr\",\n+ \"regex-automata\",\n+]\n+\n+[[package]]\n+name = \"cc\"\n+version = \"1.0.73\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2fff2a6927b3bb87f9595d67196a70493f627687a71d87a0d692242c33f58c11\"\n+\n+[[package]]\n+name = \"cfg-if\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n+\n+[[package]]\n+name = \"cmake\"\n+version = \"0.1.48\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e8ad8cef104ac57b68b89df3208164d228503abbdce70f6880ffa3d970e7443a\"\n+dependencies = [\n+ \"cc\",\n+]\n+\n+[[package]]\n+name = \"core-foundation-sys\"\n+version = \"0.8.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"5827cebf4670468b8772dd191856768aedcb1b0278a04f989f7766351917b9dc\"\n+\n+[[package]]\n+name = \"cpufeatures\"\n+version = \"0.2.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"59a6001667ab124aebae2a495118e11d30984c3a653e99d86d58971708cf5e4b\"\n+dependencies = [\n+ \"libc\",\n+]\n+\n+[[package]]\n+name = \"crossbeam-channel\"\n+version = \"0.5.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"5aaa7bd5fb665c6864b5f963dd9097905c54125909c7aa94c9e18507cdbe6c53\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"crossbeam-utils\",\n+]\n+\n+[[package]]\n+name = \"crossbeam-deque\"\n+version = \"0.8.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"6455c0ca19f0d2fbf751b908d5c55c1f5cbc65e03c4225427254b46890bdde1e\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"crossbeam-epoch\",\n+ \"crossbeam-utils\",\n+]\n+\n+[[package]]\n+name = \"crossbeam-epoch\"\n+version = \"0.9.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1145cf131a2c6ba0615079ab6a638f7e1973ac9c2634fcbeaaad6114246efe8c\"\n+dependencies = [\n+ \"autocfg\",\n+ \"cfg-if\",\n+ \"crossbeam-utils\",\n+ \"lazy_static\",\n+ \"memoffset\",\n+ \"scopeguard\",\n+]\n+\n+[[package]]\n+name = \"crossbeam-utils\"\n+version = \"0.8.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"0bf124c720b7686e3c2663cf54062ab0f68a88af2fb6a030e87e30bf721fcb38\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"lazy_static\",\n+]\n+\n+[[package]]\n+name = \"crypto-common\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"57952ca27b5e3606ff4dd79b0020231aaf9d6aa76dc05fd30137538c50bd3ce8\"\n+dependencies = [\n+ \"generic-array\",\n+ \"typenum\",\n+]\n+\n+[[package]]\n+name = \"ctor\"\n+version = \"0.1.22\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f877be4f7c9f246b183111634f75baa039715e3f46ce860677d3b19a69fb229c\"\n+dependencies = [\n+ \"quote\",\n+ \"syn\",\n+]\n+\n+[[package]]\n+name = \"diff\"\n+version = \"0.1.12\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"0e25ea47919b1560c4e3b7fe0aaab9becf5b84a10325ddf7db0f0ba5e1026499\"\n+\n+[[package]]\n+name = \"digest\"\n+version = \"0.10.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f2fb860ca6fafa5552fb6d0e816a69c8e49f0908bf524e30a90d97c85892d506\"\n+dependencies = [\n+ \"block-buffer\",\n+ \"crypto-common\",\n+]\n+\n+[[package]]\n+name = \"either\"\n+version = \"1.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457\"\n+\n+[[package]]\n+name = \"filetime\"\n+version = \"0.2.16\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c0408e2626025178a6a7f7ffc05a25bc47103229f19c113755de7bf63816290c\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"libc\",\n+ \"redox_syscall\",\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"fnv\"\n+version = \"1.0.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n+\n+[[package]]\n+name = \"generic-array\"\n+version = \"0.14.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"fd48d33ec7f05fbfa152300fdad764757cbded343c1aa1cff2fbaf4134851803\"\n+dependencies = [\n+ \"typenum\",\n+ \"version_check\",\n+]\n+\n+[[package]]\n+name = \"getopts\"\n+version = \"0.2.21\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\n+dependencies = [\n+ \"unicode-width\",\n+]\n+\n+[[package]]\n+name = \"globset\"\n+version = \"0.4.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"10463d9ff00a2a068db14231982f5132edebad0d7660cd956a1c30292dbcbfbd\"\n+dependencies = [\n+ \"aho-corasick\",\n+ \"bstr\",\n+ \"fnv\",\n+ \"log\",\n+ \"regex\",\n+]\n+\n+[[package]]\n+name = \"hermit-abi\"\n+version = \"0.1.19\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\n+dependencies = [\n+ \"libc\",\n+]\n+\n+[[package]]\n+name = \"hex\"\n+version = \"0.4.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n+\n+[[package]]\n+name = \"ignore\"\n+version = \"0.4.18\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"713f1b139373f96a2e0ce3ac931cd01ee973c3c5dd7c40c0c2efe96ad2b6751d\"\n+dependencies = [\n+ \"crossbeam-utils\",\n+ \"globset\",\n+ \"lazy_static\",\n+ \"log\",\n+ \"memchr\",\n+ \"regex\",\n+ \"same-file\",\n+ \"thread_local\",\n+ \"walkdir\",\n+ \"winapi-util\",\n+]\n+\n+[[package]]\n+name = \"itoa\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"112c678d4050afce233f4f2852bb2eb519230b3cf12f33585275537d7e41578d\"\n+\n+[[package]]\n+name = \"lazy_static\"\n+version = \"1.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n+\n+[[package]]\n+name = \"libc\"\n+version = \"0.2.126\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"349d5a591cd28b49e1d1037471617a32ddcda5731b99419008085f72d5a53836\"\n+\n+[[package]]\n+name = \"log\"\n+version = \"0.4.17\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e\"\n+dependencies = [\n+ \"cfg-if\",\n+]\n+\n+[[package]]\n+name = \"lzma-sys\"\n+version = \"0.1.17\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"bdb4b7c3eddad11d3af9e86c487607d2d2442d185d848575365c4856ba96d619\"\n+dependencies = [\n+ \"cc\",\n+ \"libc\",\n+ \"pkg-config\",\n+]\n+\n+[[package]]\n+name = \"memchr\"\n+version = \"2.5.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n+\n+[[package]]\n+name = \"memoffset\"\n+version = \"0.6.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce\"\n+dependencies = [\n+ \"autocfg\",\n+]\n+\n+[[package]]\n+name = \"ntapi\"\n+version = \"0.3.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c28774a7fd2fbb4f0babd8237ce554b73af68021b5f695a3cebd6c59bac0980f\"\n+dependencies = [\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"num_cpus\"\n+version = \"1.13.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"19e64526ebdee182341572e50e9ad03965aa510cd94427a4549448f285e957a1\"\n+dependencies = [\n+ \"hermit-abi\",\n+ \"libc\",\n+]\n+\n+[[package]]\n+name = \"once_cell\"\n+version = \"1.12.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"7709cef83f0c1f58f666e746a08b21e0085f7440fa6a29cc194d68aac97a4225\"\n+\n+[[package]]\n+name = \"opener\"\n+version = \"0.5.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"4ea3ebcd72a54701f56345f16785a6d3ac2df7e986d273eb4395c0b01db17952\"\n+dependencies = [\n+ \"bstr\",\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"output_vt100\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"628223faebab4e3e40667ee0b2336d34a5b960ff60ea743ddfdbcf7770bcfb66\"\n+dependencies = [\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"pkg-config\"\n+version = \"0.3.25\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1df8c4ec4b0627e53bdf214615ad287367e482558cf84b109250b37464dc03ae\"\n+\n+[[package]]\n+name = \"pretty_assertions\"\n+version = \"0.7.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1cab0e7c02cf376875e9335e0ba1da535775beb5450d21e1dffca068818ed98b\"\n+dependencies = [\n+ \"ansi_term\",\n+ \"ctor\",\n+ \"diff\",\n+ \"output_vt100\",\n+]\n+\n+[[package]]\n+name = \"proc-macro2\"\n+version = \"1.0.39\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c54b25569025b7fc9651de43004ae593a75ad88543b17178aa5e1b9c4f15f56f\"\n+dependencies = [\n+ \"unicode-ident\",\n+]\n+\n+[[package]]\n+name = \"quote\"\n+version = \"1.0.18\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a1feb54ed693b93a84e14094943b84b7c4eae204c512b7ccb95ab0c66d278ad1\"\n+dependencies = [\n+ \"proc-macro2\",\n+]\n+\n+[[package]]\n+name = \"rayon\"\n+version = \"1.5.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"bd99e5772ead8baa5215278c9b15bf92087709e9c1b2d1f97cdb5a183c933a7d\"\n+dependencies = [\n+ \"autocfg\",\n+ \"crossbeam-deque\",\n+ \"either\",\n+ \"rayon-core\",\n+]\n+\n+[[package]]\n+name = \"rayon-core\"\n+version = \"1.9.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"258bcdb5ac6dad48491bb2992db6b7cf74878b0384908af124823d118c99683f\"\n+dependencies = [\n+ \"crossbeam-channel\",\n+ \"crossbeam-deque\",\n+ \"crossbeam-utils\",\n+ \"num_cpus\",\n+]\n+\n+[[package]]\n+name = \"redox_syscall\"\n+version = \"0.2.13\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"62f25bc4c7e55e0b0b7a1d43fb893f4fa1361d0abe38b9ce4f323c2adfe6ef42\"\n+dependencies = [\n+ \"bitflags\",\n+]\n+\n+[[package]]\n+name = \"regex\"\n+version = \"1.5.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d83f127d94bdbcda4c8cc2e50f6f84f4b611f69c902699ca385a39c3a75f9ff1\"\n+dependencies = [\n+ \"aho-corasick\",\n+ \"memchr\",\n+ \"regex-syntax\",\n+]\n+\n+[[package]]\n+name = \"regex-automata\"\n+version = \"0.1.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\n+\n+[[package]]\n+name = \"regex-syntax\"\n+version = \"0.6.26\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"49b3de9ec5dc0a3417da371aab17d729997c15010e7fd24ff707773a33bddb64\"\n+\n+[[package]]\n+name = \"ryu\"\n+version = \"1.0.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f3f6f92acf49d1b98f7a81226834412ada05458b7364277387724a237f062695\"\n+\n+[[package]]\n+name = \"same-file\"\n+version = \"1.0.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\n+dependencies = [\n+ \"winapi-util\",\n+]\n+\n+[[package]]\n+name = \"scopeguard\"\n+version = \"1.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n+\n+[[package]]\n+name = \"serde\"\n+version = \"1.0.137\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"61ea8d54c77f8315140a05f4c7237403bf38b72704d031543aa1d16abbf517d1\"\n+dependencies = [\n+ \"serde_derive\",\n+]\n+\n+[[package]]\n+name = \"serde_derive\"\n+version = \"1.0.137\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1f26faba0c3959972377d3b2d306ee9f71faee9714294e41bb777f83f88578be\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+]\n+\n+[[package]]\n+name = \"serde_json\"\n+version = \"1.0.81\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"9b7ce2b32a1aed03c558dc61a5cd328f15aff2dbc17daad8fb8af04d2100e15c\"\n+dependencies = [\n+ \"itoa\",\n+ \"ryu\",\n+ \"serde\",\n+]\n+\n+[[package]]\n+name = \"sha2\"\n+version = \"0.10.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"55deaec60f81eefe3cce0dc50bda92d6d8e88f2a27df7c5033b42afeb1ed2676\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"cpufeatures\",\n+ \"digest\",\n+]\n+\n+[[package]]\n+name = \"syn\"\n+version = \"1.0.95\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"fbaf6116ab8924f39d52792136fb74fd60a80194cf1b1c6ffa6453eef1c3f942\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"unicode-ident\",\n+]\n+\n+[[package]]\n+name = \"sysinfo\"\n+version = \"0.24.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"9a2809487b962344ca55d9aea565f9ffbcb6929780802217acc82561f6746770\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"core-foundation-sys\",\n+ \"libc\",\n+ \"ntapi\",\n+ \"once_cell\",\n+ \"rayon\",\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"tar\"\n+version = \"0.4.38\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"4b55807c0344e1e6c04d7c965f5289c39a8d94ae23ed5c0b57aabac549f871c6\"\n+dependencies = [\n+ \"filetime\",\n+ \"libc\",\n+ \"xattr\",\n+]\n+\n+[[package]]\n+name = \"thread_local\"\n+version = \"1.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"5516c27b78311c50bf42c071425c560ac799b11c30b31f87e3081965fe5e0180\"\n+dependencies = [\n+ \"once_cell\",\n+]\n+\n+[[package]]\n+name = \"toml\"\n+version = \"0.5.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"8d82e1a7758622a465f8cee077614c73484dac5b836c02ff6a40d5d1010324d7\"\n+dependencies = [\n+ \"serde\",\n+]\n+\n+[[package]]\n+name = \"typenum\"\n+version = \"1.15.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"dcf81ac59edc17cc8697ff311e8f5ef2d99fcbd9817b34cec66f90b6c3dfd987\"\n+\n+[[package]]\n+name = \"unicode-ident\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d22af068fba1eb5edcb4aea19d382b2a3deb4c8f9d475c589b6ada9e0fd493ee\"\n+\n+[[package]]\n+name = \"unicode-width\"\n+version = \"0.1.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"3ed742d4ea2bd1176e236172c8429aaf54486e7ac098db29ffe6529e0ce50973\"\n+\n+[[package]]\n+name = \"version_check\"\n+version = \"0.9.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n+\n+[[package]]\n+name = \"walkdir\"\n+version = \"2.3.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"808cf2735cd4b6866113f648b791c6adc5714537bc222d9347bb203386ffda56\"\n+dependencies = [\n+ \"same-file\",\n+ \"winapi\",\n+ \"winapi-util\",\n+]\n+\n+[[package]]\n+name = \"winapi\"\n+version = \"0.3.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\n+dependencies = [\n+ \"winapi-i686-pc-windows-gnu\",\n+ \"winapi-x86_64-pc-windows-gnu\",\n+]\n+\n+[[package]]\n+name = \"winapi-i686-pc-windows-gnu\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n+\n+[[package]]\n+name = \"winapi-util\"\n+version = \"0.1.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\n+dependencies = [\n+ \"winapi\",\n+]\n+\n+[[package]]\n+name = \"winapi-x86_64-pc-windows-gnu\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n+\n+[[package]]\n+name = \"xattr\"\n+version = \"0.2.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"6d1526bbe5aaeb5eb06885f4d987bcdfa5e23187055de9b83fe00156a821fabc\"\n+dependencies = [\n+ \"libc\",\n+]\n+\n+[[package]]\n+name = \"xz2\"\n+version = \"0.1.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c179869f34fc7c01830d3ce7ea2086bc3a07e0d35289b667d0a8bf910258926c\"\n+dependencies = [\n+ \"lzma-sys\",\n+]"}, {"sha": "b9bd3d0cf7895d37a3ce32449a1c5b49132d1953", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -74,3 +74,11 @@ pretty_assertions = \"0.7\"\n \n [features]\n build-metrics = [\"sysinfo\"]\n+\n+# We care a lot about bootstrap's compile times, so don't include debuginfo for\n+# dependencies, only bootstrap itself.\n+[profile.dev]\n+debug = 0\n+[profile.dev.package]\n+# Only use debuginfo=1 to further reduce compile times.\n+bootstrap.debug = 1"}, {"sha": "457fedd2d8a7ece6515f6c1c702c4182b520e306", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 17, "deletions": 145, "changes": 162, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -813,110 +813,6 @@ def build_triple(self):\n             return config\n         return default_build_triple(self.verbose)\n \n-    def check_submodule(self, module):\n-        checked_out = subprocess.Popen([\"git\", \"rev-parse\", \"HEAD\"],\n-                                        cwd=os.path.join(self.rust_root, module),\n-                                        stdout=subprocess.PIPE)\n-        return checked_out\n-\n-    def update_submodule(self, module, checked_out, recorded_submodules):\n-        module_path = os.path.join(self.rust_root, module)\n-\n-        default_encoding = sys.getdefaultencoding()\n-        checked_out = checked_out.communicate()[0].decode(default_encoding).strip()\n-        if recorded_submodules[module] == checked_out:\n-            return\n-\n-        print(\"Updating submodule\", module)\n-\n-        run([\"git\", \"submodule\", \"-q\", \"sync\", module],\n-            cwd=self.rust_root, verbose=self.verbose)\n-\n-        update_args = [\"git\", \"submodule\", \"update\", \"--init\", \"--recursive\", \"--depth=1\"]\n-        if self.git_version >= distutils.version.LooseVersion(\"2.11.0\"):\n-            update_args.append(\"--progress\")\n-        update_args.append(module)\n-        try:\n-            run(update_args, cwd=self.rust_root, verbose=self.verbose, exception=True)\n-        except RuntimeError:\n-            print(\"Failed updating submodule. This is probably due to uncommitted local changes.\")\n-            print('Either stash the changes by running \"git stash\" within the submodule\\'s')\n-            print('directory, reset them by running \"git reset --hard\", or commit them.')\n-            print(\"To reset all submodules' changes run\", end=\" \")\n-            print('\"git submodule foreach --recursive git reset --hard\".')\n-            raise SystemExit(1)\n-\n-        run([\"git\", \"reset\", \"-q\", \"--hard\"],\n-            cwd=module_path, verbose=self.verbose)\n-        run([\"git\", \"clean\", \"-qdfx\"],\n-            cwd=module_path, verbose=self.verbose)\n-\n-    def update_submodules(self):\n-        \"\"\"Update submodules\"\"\"\n-        has_git = os.path.exists(os.path.join(self.rust_root, \".git\"))\n-        # This just arbitrarily checks for cargo, but any workspace member in\n-        # a submodule would work.\n-        has_submodules = os.path.exists(os.path.join(self.rust_root, \"src/tools/cargo/Cargo.toml\"))\n-        if not has_git and not has_submodules:\n-            print(\"This is not a git repository, and the requisite git submodules were not found.\")\n-            print(\"If you downloaded the source from https://github.com/rust-lang/rust/releases,\")\n-            print(\"those sources will not work. Instead, consider downloading from the source\")\n-            print(\"releases linked at\")\n-            print(\"https://forge.rust-lang.org/infra/other-installation-methods.html#source-code\")\n-            print(\"or clone the repository at https://github.com/rust-lang/rust/.\")\n-            raise SystemExit(1)\n-        if not has_git or self.get_toml('submodules') == \"false\":\n-            return\n-\n-        default_encoding = sys.getdefaultencoding()\n-\n-        # check the existence and version of 'git' command\n-        git_version_str = require(['git', '--version']).split()[2].decode(default_encoding)\n-        self.git_version = distutils.version.LooseVersion(git_version_str)\n-\n-        start_time = time()\n-        print('Updating only changed submodules')\n-        default_encoding = sys.getdefaultencoding()\n-        # Only update submodules that are needed to build bootstrap.  These are needed because Cargo\n-        # currently requires everything in a workspace to be \"locally present\" when starting a\n-        # build, and will give a hard error if any Cargo.toml files are missing.\n-        # FIXME: Is there a way to avoid cloning these eagerly? Bootstrap itself doesn't need to\n-        #   share a workspace with any tools - maybe it could be excluded from the workspace?\n-        #   That will still require cloning the submodules the second you check the standard\n-        #   library, though...\n-        # FIXME: Is there a way to avoid hard-coding the submodules required?\n-        # WARNING: keep this in sync with the submodules hard-coded in bootstrap/lib.rs\n-        submodules = [\n-            \"src/tools/rust-installer\",\n-            \"src/tools/cargo\",\n-            \"src/tools/rls\",\n-            \"src/tools/miri\",\n-            \"library/backtrace\",\n-            \"library/stdarch\"\n-        ]\n-        # If build.vendor is set in config.toml, we must update rust-analyzer also.\n-        # Otherwise, the bootstrap will fail (#96456).\n-        if self.use_vendored_sources:\n-            submodules.append(\"src/tools/rust-analyzer\")\n-        filtered_submodules = []\n-        submodules_names = []\n-        for module in submodules:\n-            check = self.check_submodule(module)\n-            filtered_submodules.append((module, check))\n-            submodules_names.append(module)\n-        recorded = subprocess.Popen([\"git\", \"ls-tree\", \"HEAD\"] + submodules_names,\n-                                    cwd=self.rust_root, stdout=subprocess.PIPE)\n-        recorded = recorded.communicate()[0].decode(default_encoding).strip().splitlines()\n-        # { filename: hash }\n-        recorded_submodules = {}\n-        for data in recorded:\n-            # [mode, kind, hash, filename]\n-            data = data.split()\n-            recorded_submodules[data[3]] = data[2]\n-        for module in filtered_submodules:\n-            self.update_submodule(module[0], module[1], recorded_submodules)\n-        print(\"  Submodules updated in %.2f seconds\" % (time() - start_time))\n-\n     def set_dist_environment(self, url):\n         \"\"\"Set download URL for normal environment\"\"\"\n         if 'RUSTUP_DIST_SERVER' in os.environ:\n@@ -926,54 +822,32 @@ def set_dist_environment(self, url):\n \n     def check_vendored_status(self):\n         \"\"\"Check that vendoring is configured properly\"\"\"\n-        vendor_dir = os.path.join(self.rust_root, 'vendor')\n         if 'SUDO_USER' in os.environ and not self.use_vendored_sources:\n             if os.getuid() == 0:\n                 self.use_vendored_sources = True\n                 print('info: looks like you\\'re trying to run this command as root')\n                 print('      and so in order to preserve your $HOME this will now')\n                 print('      use vendored sources by default.')\n-                if not os.path.exists(vendor_dir):\n-                    print('error: vendoring required, but vendor directory does not exist.')\n-                    print('       Run `cargo vendor` without sudo to initialize the '\n-                          'vendor directory.')\n-                    raise Exception(\"{} not found\".format(vendor_dir))\n \n+        cargo_dir = os.path.join(self.rust_root, '.cargo')\n         if self.use_vendored_sources:\n-            config = (\"[source.crates-io]\\n\"\n-                      \"replace-with = 'vendored-sources'\\n\"\n-                      \"registry = 'https://example.com'\\n\"\n-                      \"\\n\"\n-                      \"[source.vendored-sources]\\n\"\n-                      \"directory = '{}/vendor'\\n\"\n-                      .format(self.rust_root))\n-            if not os.path.exists('.cargo'):\n-                os.makedirs('.cargo')\n-                with output('.cargo/config') as cargo_config:\n-                    cargo_config.write(config)\n-            else:\n-                print('info: using vendored source, but .cargo/config is already present.')\n-                print('      Reusing the current configuration file. But you may want to '\n-                      'configure vendoring like this:')\n-                print(config)\n+            vendor_dir = os.path.join(self.rust_root, 'vendor')\n+            if not os.path.exists(vendor_dir):\n+                sync_dirs = \"--sync ./src/tools/rust-analyzer/Cargo.toml \" \\\n+                            \"--sync ./compiler/rustc_codegen_cranelift/Cargo.toml \" \\\n+                            \"--sync ./src/bootstrap/Cargo.toml \"\n+                print('error: vendoring required, but vendor directory does not exist.')\n+                print('       Run `cargo vendor {}` to initialize the '\n+                      'vendor directory.'.format(sync_dirs))\n+                print('Alternatively, use the pre-vendored `rustc-src` dist component.')\n+                raise Exception(\"{} not found\".format(vendor_dir))\n+\n+            if not os.path.exists(cargo_dir):\n+                print('error: vendoring required, but .cargo/config does not exist.')\n+                raise Exception(\"{} not found\".format(cargo_dir))\n         else:\n-            if os.path.exists('.cargo'):\n-                shutil.rmtree('.cargo')\n-\n-    def ensure_vendored(self):\n-        \"\"\"Ensure that the vendored sources are available if needed\"\"\"\n-        vendor_dir = os.path.join(self.rust_root, 'vendor')\n-        # Note that this does not handle updating the vendored dependencies if\n-        # the rust git repository is updated. Normal development usually does\n-        # not use vendoring, so hopefully this isn't too much of a problem.\n-        if self.use_vendored_sources and not os.path.exists(vendor_dir):\n-            run([\n-                self.cargo(),\n-                \"vendor\",\n-                \"--sync=./src/tools/rust-analyzer/Cargo.toml\",\n-                \"--sync=./compiler/rustc_codegen_cranelift/Cargo.toml\",\n-            ], verbose=self.verbose, cwd=self.rust_root)\n-\n+            if os.path.exists(cargo_dir):\n+                shutil.rmtree(cargo_dir)\n \n def bootstrap(help_triggered):\n     \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n@@ -1052,12 +926,10 @@ def bootstrap(help_triggered):\n     if not os.path.exists(build.build_dir):\n         os.makedirs(build.build_dir)\n     lock = acquire_lock(build.build_dir)\n-    build.update_submodules()\n \n     # Fetch/build the bootstrap\n     build.download_toolchain()\n     sys.stdout.flush()\n-    build.ensure_vendored()\n     build.build_bootstrap()\n     sys.stdout.flush()\n "}, {"sha": "8182d2bf8fb3bf1d96051ee4b7d0dab5ae94cf6c", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -894,8 +894,19 @@ impl Step for PlainSourceTarball {\n                 .arg(builder.src.join(\"./src/tools/rust-analyzer/Cargo.toml\"))\n                 .arg(\"--sync\")\n                 .arg(builder.src.join(\"./compiler/rustc_codegen_cranelift/Cargo.toml\"))\n+                .arg(\"--sync\")\n+                .arg(builder.src.join(\"./src/bootstrap/Cargo.toml\"))\n                 .current_dir(&plain_dst_src);\n-            builder.run(&mut cmd);\n+\n+            let config = if !builder.config.dry_run {\n+                t!(String::from_utf8(t!(cmd.output()).stdout))\n+            } else {\n+                String::new()\n+            };\n+\n+            let cargo_config_dir = plain_dst_src.join(\".cargo\");\n+            builder.create_dir(&cargo_config_dir);\n+            builder.create(&cargo_config_dir.join(\"config.toml\"), &config);\n         }\n \n         tarball.bare()"}, {"sha": "859d35b7d7ba1b9a8b63dfc45a86cd866cd0fa3f", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -537,6 +537,20 @@ impl Build {\n             build.local_rebuild = true;\n         }\n \n+        // Make sure we update these before gathering metadata so we don't get an error about missing\n+        // Cargo.toml files.\n+        let rust_submodules = [\n+            \"src/tools/rust-installer\",\n+            \"src/tools/cargo\",\n+            \"src/tools/rls\",\n+            \"src/tools/miri\",\n+            \"library/backtrace\",\n+            \"library/stdarch\",\n+        ];\n+        for s in rust_submodules {\n+            build.update_submodule(Path::new(s));\n+        }\n+\n         build.verbose(\"learning about cargo\");\n         metadata::build(&mut build);\n "}, {"sha": "55cf3fee9bf11d805880071e3913953e2e0dc4ab", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753", "patch": "@@ -63,6 +63,10 @@ const EXCEPTIONS_CRANELIFT: &[(&str, &str)] = &[\n     (\"target-lexicon\", \"Apache-2.0 WITH LLVM-exception\"),\n ];\n \n+const EXCEPTIONS_BOOTSTRAP: &[(&str, &str)] = &[\n+    (\"ryu\", \"Apache-2.0 OR BSL-1.0\"), // through serde\n+];\n+\n /// These are the root crates that are part of the runtime. The licenses for\n /// these and all their dependencies *must not* be in the exception list.\n const RUNTIME_CRATES: &[&str] = &[\"std\", \"core\", \"alloc\", \"test\", \"panic_abort\", \"panic_unwind\"];\n@@ -96,7 +100,6 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"chalk-ir\",\n     \"chalk-solve\",\n     \"chrono\",\n-    \"cmake\",\n     \"compiler_builtins\",\n     \"cpufeatures\",\n     \"crc32fast\",\n@@ -309,7 +312,13 @@ pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n     let metadata = t!(cmd.exec());\n     let runtime_ids = compute_runtime_crates(&metadata);\n     check_exceptions(&metadata, EXCEPTIONS, runtime_ids, bad);\n-    check_dependencies(&metadata, PERMITTED_DEPENDENCIES, RESTRICTED_DEPENDENCY_CRATES, bad);\n+    check_dependencies(\n+        &metadata,\n+        \"main workspace\",\n+        PERMITTED_DEPENDENCIES,\n+        RESTRICTED_DEPENDENCY_CRATES,\n+        bad,\n+    );\n     check_crate_duplicate(&metadata, FORBIDDEN_TO_HAVE_DUPLICATES, bad);\n     check_rustfix(&metadata, bad);\n \n@@ -323,11 +332,20 @@ pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n     check_exceptions(&metadata, EXCEPTIONS_CRANELIFT, runtime_ids, bad);\n     check_dependencies(\n         &metadata,\n+        \"cranelift\",\n         PERMITTED_CRANELIFT_DEPENDENCIES,\n         &[\"rustc_codegen_cranelift\"],\n         bad,\n     );\n     check_crate_duplicate(&metadata, &[], bad);\n+\n+    let mut cmd = cargo_metadata::MetadataCommand::new();\n+    cmd.cargo_path(cargo)\n+        .manifest_path(root.join(\"src/bootstrap/Cargo.toml\"))\n+        .features(cargo_metadata::CargoOpt::AllFeatures);\n+    let metadata = t!(cmd.exec());\n+    let runtime_ids = HashSet::new();\n+    check_exceptions(&metadata, EXCEPTIONS_BOOTSTRAP, runtime_ids, bad);\n }\n \n /// Check that all licenses are in the valid list in `LICENSES`.\n@@ -409,6 +427,7 @@ fn check_exceptions(\n /// Specifically, this checks that the dependencies are on the `PERMITTED_DEPENDENCIES`.\n fn check_dependencies(\n     metadata: &Metadata,\n+    descr: &str,\n     permitted_dependencies: &[&'static str],\n     restricted_dependency_crates: &[&'static str],\n     bad: &mut bool,\n@@ -438,7 +457,7 @@ fn check_dependencies(\n     }\n \n     if !unapproved.is_empty() {\n-        tidy_error!(bad, \"Dependencies not explicitly permitted:\");\n+        tidy_error!(bad, \"Dependencies for {} not explicitly permitted:\", descr);\n         for dep in unapproved {\n             println!(\"* {dep}\");\n         }"}]}