{"sha": "188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OGM5OTY3YzBkMGI2YWI5YWNlZjVlODc5YjViYmFmMWE1MDM1ZWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-20T16:06:22Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-20T16:53:05Z"}, "message": "Drop unnecessary `&'_` from impls", "tree": {"sha": "89f41cc3674bf38db912a3d0a68a834da9fdc4d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89f41cc3674bf38db912a3d0a68a834da9fdc4d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed", "html_url": "https://github.com/rust-lang/rust/commit/188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4753409f86bf21b8d0ba7bd83918aa951921c97c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4753409f86bf21b8d0ba7bd83918aa951921c97c", "html_url": "https://github.com/rust-lang/rust/commit/4753409f86bf21b8d0ba7bd83918aa951921c97c"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "818fa6d61f58b39c8ae40dae182887d72053d5df", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=188c9967c0d0b6ab9acef5e879b5bbaf1a5035ed", "patch": "@@ -88,7 +88,7 @@ impl Conv for Severity {\n     }\n }\n \n-impl ConvWith<(&'_ LineIndex, LineEndings)> for CompletionItem {\n+impl ConvWith<(&LineIndex, LineEndings)> for CompletionItem {\n     type Output = ::lsp_types::CompletionItem;\n \n     fn conv_with(self, ctx: (&LineIndex, LineEndings)) -> ::lsp_types::CompletionItem {\n@@ -136,7 +136,7 @@ impl ConvWith<(&'_ LineIndex, LineEndings)> for CompletionItem {\n     }\n }\n \n-impl ConvWith<&'_ LineIndex> for Position {\n+impl ConvWith<&LineIndex> for Position {\n     type Output = TextUnit;\n \n     fn conv_with(self, line_index: &LineIndex) -> TextUnit {\n@@ -145,7 +145,7 @@ impl ConvWith<&'_ LineIndex> for Position {\n     }\n }\n \n-impl ConvWith<&'_ LineIndex> for TextUnit {\n+impl ConvWith<&LineIndex> for TextUnit {\n     type Output = Position;\n \n     fn conv_with(self, line_index: &LineIndex) -> Position {\n@@ -154,15 +154,15 @@ impl ConvWith<&'_ LineIndex> for TextUnit {\n     }\n }\n \n-impl ConvWith<&'_ LineIndex> for TextRange {\n+impl ConvWith<&LineIndex> for TextRange {\n     type Output = Range;\n \n     fn conv_with(self, line_index: &LineIndex) -> Range {\n         Range::new(self.start().conv_with(line_index), self.end().conv_with(line_index))\n     }\n }\n \n-impl ConvWith<&'_ LineIndex> for Range {\n+impl ConvWith<&LineIndex> for Range {\n     type Output = TextRange;\n \n     fn conv_with(self, line_index: &LineIndex) -> TextRange {\n@@ -202,15 +202,15 @@ impl Conv for ra_ide_api::FunctionSignature {\n     }\n }\n \n-impl ConvWith<(&'_ LineIndex, LineEndings)> for TextEdit {\n+impl ConvWith<(&LineIndex, LineEndings)> for TextEdit {\n     type Output = Vec<lsp_types::TextEdit>;\n \n     fn conv_with(self, ctx: (&LineIndex, LineEndings)) -> Vec<lsp_types::TextEdit> {\n         self.as_atoms().iter().map_conv_with(ctx).collect()\n     }\n }\n \n-impl ConvWith<(&'_ LineIndex, LineEndings)> for &'_ AtomTextEdit {\n+impl ConvWith<(&LineIndex, LineEndings)> for &AtomTextEdit {\n     type Output = lsp_types::TextEdit;\n \n     fn conv_with(\n@@ -234,42 +234,42 @@ impl<T: ConvWith<CTX>, CTX> ConvWith<CTX> for Option<T> {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for &'_ Url {\n+impl TryConvWith<&WorldSnapshot> for &Url {\n     type Output = FileId;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<FileId> {\n         world.uri_to_file_id(self)\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for FileId {\n+impl TryConvWith<&WorldSnapshot> for FileId {\n     type Output = Url;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<Url> {\n         world.file_id_to_uri(self)\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for &'_ TextDocumentItem {\n+impl TryConvWith<&WorldSnapshot> for &TextDocumentItem {\n     type Output = FileId;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<FileId> {\n         self.uri.try_conv_with(world)\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for &'_ VersionedTextDocumentIdentifier {\n+impl TryConvWith<&WorldSnapshot> for &VersionedTextDocumentIdentifier {\n     type Output = FileId;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<FileId> {\n         self.uri.try_conv_with(world)\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for &'_ TextDocumentIdentifier {\n+impl TryConvWith<&WorldSnapshot> for &TextDocumentIdentifier {\n     type Output = FileId;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<FileId> {\n         world.uri_to_file_id(&self.uri)\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for &'_ TextDocumentPositionParams {\n+impl TryConvWith<&WorldSnapshot> for &TextDocumentPositionParams {\n     type Output = FilePosition;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<FilePosition> {\n         let file_id = self.text_document.try_conv_with(world)?;\n@@ -279,7 +279,7 @@ impl TryConvWith<&'_ WorldSnapshot> for &'_ TextDocumentPositionParams {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for (&'_ TextDocumentIdentifier, Range) {\n+impl TryConvWith<&WorldSnapshot> for (&TextDocumentIdentifier, Range) {\n     type Output = FileRange;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<FileRange> {\n         let file_id = self.0.try_conv_with(world)?;\n@@ -300,7 +300,7 @@ impl<T: TryConvWith<CTX>, CTX: Copy> TryConvWith<CTX> for Vec<T> {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for SourceChange {\n+impl TryConvWith<&WorldSnapshot> for SourceChange {\n     type Output = req::SourceChange;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<req::SourceChange> {\n         let cursor_position = match self.cursor_position {\n@@ -339,7 +339,7 @@ impl TryConvWith<&'_ WorldSnapshot> for SourceChange {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for SourceFileEdit {\n+impl TryConvWith<&WorldSnapshot> for SourceFileEdit {\n     type Output = TextDocumentEdit;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<TextDocumentEdit> {\n         let text_document = VersionedTextDocumentIdentifier {\n@@ -354,7 +354,7 @@ impl TryConvWith<&'_ WorldSnapshot> for SourceFileEdit {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for FileSystemEdit {\n+impl TryConvWith<&WorldSnapshot> for FileSystemEdit {\n     type Output = ResourceOp;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<ResourceOp> {\n         let res = match self {\n@@ -372,7 +372,7 @@ impl TryConvWith<&'_ WorldSnapshot> for FileSystemEdit {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for &NavigationTarget {\n+impl TryConvWith<&WorldSnapshot> for &NavigationTarget {\n     type Output = Location;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<Location> {\n         let line_index = world.analysis().file_line_index(self.file_id())?;\n@@ -381,7 +381,7 @@ impl TryConvWith<&'_ WorldSnapshot> for &NavigationTarget {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for (FileId, RangeInfo<NavigationTarget>) {\n+impl TryConvWith<&WorldSnapshot> for (FileId, RangeInfo<NavigationTarget>) {\n     type Output = LocationLink;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<LocationLink> {\n         let (src_file_id, target) = self;\n@@ -408,7 +408,7 @@ impl TryConvWith<&'_ WorldSnapshot> for (FileId, RangeInfo<NavigationTarget>) {\n     }\n }\n \n-impl TryConvWith<&'_ WorldSnapshot> for (FileId, RangeInfo<Vec<NavigationTarget>>) {\n+impl TryConvWith<&WorldSnapshot> for (FileId, RangeInfo<Vec<NavigationTarget>>) {\n     type Output = req::GotoDefinitionResponse;\n     fn try_conv_with(self, world: &WorldSnapshot) -> Result<req::GotoTypeDefinitionResponse> {\n         let (file_id, RangeInfo { range, info: navs }) = self;"}]}