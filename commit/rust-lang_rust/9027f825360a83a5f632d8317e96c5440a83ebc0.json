{"sha": "9027f825360a83a5f632d8317e96c5440a83ebc0", "node_id": "C_kwDOAAsO6NoAKDkwMjdmODI1MzYwYTgzYTVmNjMyZDgzMTdlOTZjNTQ0MGE4M2ViYzA", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-06-14T19:02:26Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-07-11T13:55:31Z"}, "message": "introduce PGO on the `dist-x86_64-msvc` builder\n\nThis adds windows-specific behavior into the PGO script, and enables it\non CI.", "tree": {"sha": "992a7b764b33fecf3f63f6ca6a3b1371b61ea445", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/992a7b764b33fecf3f63f6ca6a3b1371b61ea445"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9027f825360a83a5f632d8317e96c5440a83ebc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9027f825360a83a5f632d8317e96c5440a83ebc0", "html_url": "https://github.com/rust-lang/rust/commit/9027f825360a83a5f632d8317e96c5440a83ebc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9027f825360a83a5f632d8317e96c5440a83ebc0/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "736dbefaf3bd9a7cd95b4a8e5a60cb317125904c", "url": "https://api.github.com/repos/rust-lang/rust/commits/736dbefaf3bd9a7cd95b4a8e5a60cb317125904c", "html_url": "https://github.com/rust-lang/rust/commit/736dbefaf3bd9a7cd95b4a8e5a60cb317125904c"}], "stats": {"total": 62, "additions": 48, "deletions": 14}, "files": [{"sha": "6d9e249ee44ef14442a862a58ae787feb77a5bbd", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9027f825360a83a5f632d8317e96c5440a83ebc0/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9027f825360a83a5f632d8317e96c5440a83ebc0/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=9027f825360a83a5f632d8317e96c5440a83ebc0", "patch": "@@ -410,7 +410,7 @@ jobs:\n           - name: dist-x86_64-msvc\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --host=x86_64-pc-windows-msvc --target=x86_64-pc-windows-msvc --enable-full-tools --enable-profiler\"\n-              SCRIPT: python x.py dist\n+              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc src/ci/pgo.sh python x.py dist\n               DIST_REQUIRE_ALL_TOOLS: 1\n             os: windows-latest-xl\n           - name: dist-i686-msvc"}, {"sha": "f92e46b0a97f657918b029490359da5f948a0961", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9027f825360a83a5f632d8317e96c5440a83ebc0/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9027f825360a83a5f632d8317e96c5440a83ebc0/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=9027f825360a83a5f632d8317e96c5440a83ebc0", "patch": "@@ -625,7 +625,7 @@ jobs:\n                 --target=x86_64-pc-windows-msvc\n                 --enable-full-tools\n                 --enable-profiler\n-              SCRIPT: python x.py dist\n+              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc src/ci/pgo.sh python x.py dist\n               DIST_REQUIRE_ALL_TOOLS: 1\n             <<: *job-windows-xl\n "}, {"sha": "28bed1fa0353b3cc1778bee81dcaee1d44fbd0a6", "filename": "src/ci/pgo.sh", "status": "modified", "additions": 46, "deletions": 12, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/9027f825360a83a5f632d8317e96c5440a83ebc0/src%2Fci%2Fpgo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9027f825360a83a5f632d8317e96c5440a83ebc0/src%2Fci%2Fpgo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fpgo.sh?ref=9027f825360a83a5f632d8317e96c5440a83ebc0", "patch": "@@ -14,13 +14,26 @@ DOWNLOADED_LLVM=/rustroot\n # The main directory where the build occurs, which can be different between linux and windows\n BUILD_ROOT=$CHECKOUT/obj\n \n+if isWindows; then\n+    CHECKOUT=$(pwd)\n+    DOWNLOADED_LLVM=$CHECKOUT/citools/clang-rust\n+    BUILD_ROOT=$CHECKOUT\n+fi\n+\n # The various build artifacts used in other commands: to launch rustc builds, build the perf\n # collector, and run benchmarks to gather profiling data\n BUILD_ARTIFACTS=$BUILD_ROOT/build/$PGO_HOST\n RUSTC_STAGE_0=$BUILD_ARTIFACTS/stage0/bin/rustc\n CARGO_STAGE_0=$BUILD_ARTIFACTS/stage0/bin/cargo\n RUSTC_STAGE_2=$BUILD_ARTIFACTS/stage2/bin/rustc\n \n+# Windows needs these to have the .exe extension\n+if isWindows; then\n+    RUSTC_STAGE_0=\"${RUSTC_STAGE_0}.exe\"\n+    CARGO_STAGE_0=\"${CARGO_STAGE_0}.exe\"\n+    RUSTC_STAGE_2=\"${RUSTC_STAGE_2}.exe\"\n+fi\n+\n # Make sure we have a temporary PGO work folder\n PGO_TMP=/tmp/tmp-pgo\n mkdir -p $PGO_TMP\n@@ -80,13 +93,26 @@ LLVM_PROFILE_DIR=${LLVM_PROFILE_DIRECTORY_ROOT}/prof-%p python3 $CHECKOUT/x.py b\n     --stage 2 library/std \\\n     --llvm-profile-generate\n \n-# Compile rustc perf\n-cp -r /tmp/rustc-perf $RUSTC_PERF\n-chown -R $(whoami): $RUSTC_PERF\n+# Compile rustc-perf:\n+# - get the expected commit source code: on linux, the Dockerfile downloads a source archive before\n+# running this script. On Windows, we do that here.\n+if isLinux; then\n+    cp -r /tmp/rustc-perf $RUSTC_PERF\n+    chown -R $(whoami): $RUSTC_PERF\n+else\n+    # rustc-perf version from 2022-05-18\n+    PERF_COMMIT=f66cc8f3e04392b0e2fd811f21fd1ece6ebaded3\n+    retry curl -LS -o $PGO_TMP/perf.zip \\\n+        https://github.com/rust-lang/rustc-perf/archive/$PERF_COMMIT.zip && \\\n+        cd $PGO_TMP && unzip -q perf.zip && \\\n+        mv rustc-perf-$PERF_COMMIT $RUSTC_PERF && \\\n+        rm perf.zip\n+fi\n+\n+# - build rustc-perf's collector ahead of time, which is needed to make sure the rustc-fake binary\n+# used by the collector is present.\n cd $RUSTC_PERF\n \n-# Build rustc-perf's collector ahead of time, which is needed to make sure the rustc-fake\n-# binary used by the collector is present.\n RUSTC=$RUSTC_STAGE_0 \\\n RUSTC_BOOTSTRAP=1 \\\n $CARGO_STAGE_0 build -p collector\n@@ -128,13 +154,21 @@ python3 $CHECKOUT/x.py build --target=$PGO_HOST --host=$PGO_HOST \\\n \n # Here we're profiling the `rustc` frontend, so we also include `Check`.\n # The benchmark set includes various stress tests that put the frontend under pressure.\n-# The profile data is written into a single filepath that is being repeatedly merged when each\n-# rustc invocation ends. Empirically, this can result in some profiling data being lost.\n-# That's why we override the profile path to include the PID. This will produce many more profiling\n-# files, but the resulting profile will produce a slightly faster rustc binary.\n-LLVM_PROFILE_FILE=${RUSTC_PROFILE_DIRECTORY_ROOT}/default_%m_%p.profraw gather_profiles \\\n-    \"Check,Debug,Opt\" \"All\" \\\n-    \"externs,ctfe-stress-5,cargo-0.60.0,token-stream-stress,match-stress,tuple-stress,diesel-1.4.8,bitmaps-3.1.0\"\n+if isLinux; then\n+    # The profile data is written into a single filepath that is being repeatedly merged when each\n+    # rustc invocation ends. Empirically, this can result in some profiling data being lost. That's\n+    # why we override the profile path to include the PID. This will produce many more profiling\n+    # files, but the resulting profile will produce a slightly faster rustc binary.\n+    LLVM_PROFILE_FILE=${RUSTC_PROFILE_DIRECTORY_ROOT}/default_%m_%p.profraw gather_profiles \\\n+        \"Check,Debug,Opt\" \"All\" \\\n+        \"externs,ctfe-stress-5,cargo-0.60.0,token-stream-stress,match-stress,tuple-stress,diesel-1.4.8,bitmaps-3.1.0\"\n+else\n+    # On windows, we don't do that yet (because it generates a lot of data, hitting disk space\n+    # limits on the builder), and use the default profraw merging behavior.\n+    gather_profiles \\\n+        \"Check,Debug,Opt\" \"All\" \\\n+        \"externs,ctfe-stress-5,cargo-0.60.0,token-stream-stress,match-stress,tuple-stress,diesel-1.4.8,bitmaps-3.1.0\"\n+fi\n \n RUSTC_PROFILE_MERGED_FILE=$PGO_TMP/rustc-pgo.profdata\n "}]}