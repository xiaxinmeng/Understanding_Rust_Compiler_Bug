{"sha": "86a5e3632c77d1c77d58ddb750a147998b5e4dbd", "node_id": "C_kwDOAAsO6NoAKDg2YTVlMzYzMmM3N2QxYzc3ZDU4ZGRiNzUwYTE0Nzk5OGI1ZTRkYmQ", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2023-03-15T04:30:45Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2023-03-15T04:30:45Z"}, "message": "Fix linker detection for clang with prefix", "tree": {"sha": "e6a6a7544476a592bf971288d7c5c374f941775d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6a6a7544476a592bf971288d7c5c374f941775d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86a5e3632c77d1c77d58ddb750a147998b5e4dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86a5e3632c77d1c77d58ddb750a147998b5e4dbd", "html_url": "https://github.com/rust-lang/rust/commit/86a5e3632c77d1c77d58ddb750a147998b5e4dbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86a5e3632c77d1c77d58ddb750a147998b5e4dbd/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1716932743a7b3705cbf0c34db0c4e070ed1930d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1716932743a7b3705cbf0c34db0c4e070ed1930d", "html_url": "https://github.com/rust-lang/rust/commit/1716932743a7b3705cbf0c34db0c4e070ed1930d"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8bb143ed3da8d0af445ad7d6d4acd5f5fde4aa11", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86a5e3632c77d1c77d58ddb750a147998b5e4dbd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86a5e3632c77d1c77d58ddb750a147998b5e4dbd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=86a5e3632c77d1c77d58ddb750a147998b5e4dbd", "patch": "@@ -1199,15 +1199,17 @@ pub fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n                     .and_then(|(lhs, rhs)| rhs.chars().all(char::is_numeric).then_some(lhs))\n                     .unwrap_or(stem);\n \n-                // GCC can have an optional target prefix.\n+                // GCC/Clang can have an optional target prefix.\n                 let flavor = if stem == \"emcc\" {\n                     LinkerFlavor::EmCc\n                 } else if stem == \"gcc\"\n                     || stem.ends_with(\"-gcc\")\n                     || stem == \"g++\"\n                     || stem.ends_with(\"-g++\")\n                     || stem == \"clang\"\n+                    || stem.ends_with(\"-clang\")\n                     || stem == \"clang++\"\n+                    || stem.ends_with(\"-clang++\")\n                 {\n                     LinkerFlavor::from_cli(LinkerFlavorCli::Gcc, &sess.target)\n                 } else if stem == \"wasm-ld\" || stem.ends_with(\"-wasm-ld\") {"}]}