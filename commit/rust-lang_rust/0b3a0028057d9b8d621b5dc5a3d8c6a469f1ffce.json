{"sha": "0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "node_id": "C_kwDOAAsO6NoAKDBiM2EwMDI4MDU3ZDliOGQ2MjFiNWRjNWEzZDhjNmE0NjlmMWZmY2U", "commit": {"author": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-10-16T08:00:03Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-11-05T18:55:51Z"}, "message": "Reorder `widening_impl`s to make the doc clearer", "tree": {"sha": "9191690bab7b1c3846edfff4869d3de9d6917393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9191690bab7b1c3846edfff4869d3de9d6917393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmGFfjcACgkQ+boUO5X/\nbYKE1w/+LNGLsFVSE9mLSinSc9NDz6lKvOAlgxnhtTsTikh40V++WRKLcI2QWCCO\nFhqTH1b+gCy1E9ib3GpfVJoweA/blS412Wdba6Y98jFe0vQP8dM6vdgcqcX8+toV\nEIp73nsCNqNZkEeNAKVgiHdy0AdaHrzrNQSN2Yxy7o1FTNmuU78IoMQ5MUiK5RMN\nnCIAHY8FUnzANa99Gkug9vGFhvCziiTlGHnhdhTVzxxM71DzRsXrZeuexblmPkXx\nznX3Gd+5rRmextzyCaaqaRiXQE1Cjy7nCI44N0Vrfg0G8DShfGNKwQjDy6cwRd8w\n+Vqqvotip0vd+6349LEsIBz6+OuqTr+ZadOsUQvPGAbF4aH+1xBbNwVxYxu9Pz0m\nrzN83ew7UtxhTorQDGyxE42Jq2dorqbXzLqL6C+Y7yZ6U7tkfPu8HC4gEsWX9sFP\nS/Py0rMocdqmDvtcdFkB2+LJMjOJ3r5A85MIHuC6J/fiCOlgIay+qRII9T1h/HHn\n5RM8w0otYLiIcXZoeKqjTbY3cSVEq8GCyyjm5C5hUwtGf/aDYwii9GVdHu7OfyGc\nm2juZBIofCVBs5evAev+Lme9KDWdET0kkx+I5QSp5HhcM8ldpmMM3zCj3kLXPy8/\nJLG9t98eOwK+wlAmsJZwH/zHFScLXfrm8q9sfrpIPRbLEvOCW5Y=\n=lPjf\n-----END PGP SIGNATURE-----", "payload": "tree 9191690bab7b1c3846edfff4869d3de9d6917393\nparent d22dd65835190278f315e06442614142653ec98f\nauthor Yuki Okushi <yuki.okushi@huawei.com> 1634371203 +0900\ncommitter David Tolnay <dtolnay@gmail.com> 1636138551 -0700\n\nReorder `widening_impl`s to make the doc clearer\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "html_url": "https://github.com/rust-lang/rust/commit/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d22dd65835190278f315e06442614142653ec98f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d22dd65835190278f315e06442614142653ec98f", "html_url": "https://github.com/rust-lang/rust/commit/d22dd65835190278f315e06442614142653ec98f"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "0c00db5fdf37aa38142116eeb970919bb320fda3", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "patch": "@@ -201,33 +201,33 @@ macro_rules! widening_impl {\n \n #[lang = \"i8\"]\n impl i8 {\n-    widening_impl! { i8, i16, 8, signed }\n     int_impl! { i8, i8, u8, 8, 7, -128, 127, 2, \"-0x7e\", \"0xa\", \"0x12\", \"0x12\", \"0x48\",\n     \"[0x12]\", \"[0x12]\", \"\", \"\" }\n+    widening_impl! { i8, i16, 8, signed }\n }\n \n #[lang = \"i16\"]\n impl i16 {\n-    widening_impl! { i16, i32, 16, signed }\n     int_impl! { i16, i16, u16, 16, 15, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\", \"0x3412\",\n     \"0x2c48\", \"[0x34, 0x12]\", \"[0x12, 0x34]\", \"\", \"\" }\n+    widening_impl! { i16, i32, 16, signed }\n }\n \n #[lang = \"i32\"]\n impl i32 {\n-    widening_impl! { i32, i64, 32, signed }\n     int_impl! { i32, i32, u32, 32, 31, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n     \"0x12345678\", \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78]\", \"\", \"\" }\n+    widening_impl! { i32, i64, 32, signed }\n }\n \n #[lang = \"i64\"]\n impl i64 {\n-    widening_impl! { i64, i128, 64, signed }\n     int_impl! { i64, i64, u64, 64, 63, -9223372036854775808, 9223372036854775807, 12,\n     \"0xaa00000000006e1\", \"0x6e10aa\", \"0x1234567890123456\", \"0x5634129078563412\",\n     \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\", \"\", \"\" }\n+    widening_impl! { i64, i128, 64, signed }\n }\n \n #[lang = \"i128\"]\n@@ -245,41 +245,41 @@ impl i128 {\n #[cfg(target_pointer_width = \"16\")]\n #[lang = \"isize\"]\n impl isize {\n-    widening_impl! { isize, i32, 16, signed }\n     int_impl! { isize, i16, usize, 16, 15, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\",\n     \"0x3412\", \"0x2c48\", \"[0x34, 0x12]\", \"[0x12, 0x34]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { isize, i32, 16, signed }\n }\n \n #[cfg(target_pointer_width = \"32\")]\n #[lang = \"isize\"]\n impl isize {\n-    widening_impl! { isize, i64, 32, signed }\n     int_impl! { isize, i32, usize, 32, 31, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n     \"0x12345678\", \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { isize, i64, 32, signed }\n }\n \n #[cfg(target_pointer_width = \"64\")]\n #[lang = \"isize\"]\n impl isize {\n-    widening_impl! { isize, i128, 64, signed }\n     int_impl! { isize, i64, usize, 64, 63, -9223372036854775808, 9223372036854775807,\n     12, \"0xaa00000000006e1\", \"0x6e10aa\",  \"0x1234567890123456\", \"0x5634129078563412\",\n-     \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n-     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n-     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n+    \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n+    usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { isize, i128, 64, signed }\n }\n \n /// If 6th bit set ascii is upper case.\n const ASCII_CASE_MASK: u8 = 0b0010_0000;\n \n #[lang = \"u8\"]\n impl u8 {\n-    widening_impl! { u8, u16, 8, unsigned }\n     uint_impl! { u8, u8, i8, 8, 255, 2, \"0x82\", \"0xa\", \"0x12\", \"0x12\", \"0x48\", \"[0x12]\",\n     \"[0x12]\", \"\", \"\" }\n+    widening_impl! { u8, u16, 8, unsigned }\n \n     /// Checks if the value is within the ASCII range.\n     ///\n@@ -826,26 +826,26 @@ impl u8 {\n \n #[lang = \"u16\"]\n impl u16 {\n-    widening_impl! { u16, u32, 16, unsigned }\n     uint_impl! { u16, u16, i16, 16, 65535, 4, \"0xa003\", \"0x3a\", \"0x1234\", \"0x3412\", \"0x2c48\",\n     \"[0x34, 0x12]\", \"[0x12, 0x34]\", \"\", \"\" }\n+    widening_impl! { u16, u32, 16, unsigned }\n }\n \n #[lang = \"u32\"]\n impl u32 {\n-    widening_impl! { u32, u64, 32, unsigned }\n     uint_impl! { u32, u32, i32, 32, 4294967295, 8, \"0x10000b3\", \"0xb301\", \"0x12345678\",\n     \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\", \"[0x12, 0x34, 0x56, 0x78]\", \"\", \"\" }\n+    widening_impl! { u32, u64, 32, unsigned }\n }\n \n #[lang = \"u64\"]\n impl u64 {\n-    widening_impl! { u64, u128, 64, unsigned }\n     uint_impl! { u64, u64, i64, 64, 18446744073709551615, 12, \"0xaa00000000006e1\", \"0x6e10aa\",\n     \"0x1234567890123456\", \"0x5634129078563412\", \"0x6a2c48091e6a2c48\",\n     \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n     \"\", \"\"}\n+    widening_impl! { u64, u128, 64, unsigned }\n }\n \n #[lang = \"u128\"]\n@@ -863,29 +863,29 @@ impl u128 {\n #[cfg(target_pointer_width = \"16\")]\n #[lang = \"usize\"]\n impl usize {\n-    widening_impl! { usize, u32, 16, unsigned }\n     uint_impl! { usize, u16, isize, 16, 65535, 4, \"0xa003\", \"0x3a\", \"0x1234\", \"0x3412\", \"0x2c48\",\n     \"[0x34, 0x12]\", \"[0x12, 0x34]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { usize, u32, 16, unsigned }\n }\n #[cfg(target_pointer_width = \"32\")]\n #[lang = \"usize\"]\n impl usize {\n-    widening_impl! { usize, u64, 32, unsigned }\n     uint_impl! { usize, u32, isize, 32, 4294967295, 8, \"0x10000b3\", \"0xb301\", \"0x12345678\",\n     \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\", \"[0x12, 0x34, 0x56, 0x78]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { usize, u64, 32, unsigned }\n }\n \n #[cfg(target_pointer_width = \"64\")]\n #[lang = \"usize\"]\n impl usize {\n-    widening_impl! { usize, u128, 64, unsigned }\n     uint_impl! { usize, u64, isize, 64, 18446744073709551615, 12, \"0xaa00000000006e1\", \"0x6e10aa\",\n     \"0x1234567890123456\", \"0x5634129078563412\", \"0x6a2c48091e6a2c48\",\n     \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n-     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n+    \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { usize, u128, 64, unsigned }\n }\n \n /// A classification of floating point numbers."}]}