{"sha": "2690b513506dad53d0b86b20f8b73bc420dfb3a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OTBiNTEzNTA2ZGFkNTNkMGI4NmIyMGY4YjczYmM0MjBkZmIzYTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-18T06:11:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T22:46:04Z"}, "message": "std: Make vec::push_all_move call reserve_at_least\n\nvec::unshift uses this to add elements, scheduler queues use unshift,\nand this was causing a lot of reallocation", "tree": {"sha": "af016b51f134cfa55c5b3c4c66205035bb15356c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af016b51f134cfa55c5b3c4c66205035bb15356c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2690b513506dad53d0b86b20f8b73bc420dfb3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2690b513506dad53d0b86b20f8b73bc420dfb3a2", "html_url": "https://github.com/rust-lang/rust/commit/2690b513506dad53d0b86b20f8b73bc420dfb3a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2690b513506dad53d0b86b20f8b73bc420dfb3a2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44c88ddf4237ca18d7eb7b437f46731da7f30bb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/44c88ddf4237ca18d7eb7b437f46731da7f30bb5", "html_url": "https://github.com/rust-lang/rust/commit/44c88ddf4237ca18d7eb7b437f46731da7f30bb5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "10dc1b5409e57c23929b75a5691cf8bb48dd9afd", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2690b513506dad53d0b86b20f8b73bc420dfb3a2/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2690b513506dad53d0b86b20f8b73bc420dfb3a2/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=2690b513506dad53d0b86b20f8b73bc420dfb3a2", "patch": "@@ -1401,7 +1401,7 @@ impl<T> OwnedVector<T> for ~[T] {\n         let self_len = self.len();\n         let rhs_len = rhs.len();\n         let new_len = self_len + rhs_len;\n-        self.reserve(new_len);\n+        self.reserve_at_least(new_len);\n         unsafe { // Note: infallible.\n             let self_p = vec::raw::to_mut_ptr(*self);\n             let rhs_p = vec::raw::to_ptr(rhs);"}]}