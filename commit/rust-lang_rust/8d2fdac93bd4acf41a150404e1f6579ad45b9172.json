{"sha": "8d2fdac93bd4acf41a150404e1f6579ad45b9172", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMmZkYWM5M2JkNGFjZjQxYTE1MDQwNGUxZjY1NzlhZDQ1YjkxNzI=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2010-12-25T01:03:46Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-25T01:03:46Z"}, "message": "Parse 'use' directives in rustc.", "tree": {"sha": "e7219c3b151f33ce0efd563f978b505e5a3ecf61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7219c3b151f33ce0efd563f978b505e5a3ecf61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d2fdac93bd4acf41a150404e1f6579ad45b9172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d2fdac93bd4acf41a150404e1f6579ad45b9172", "html_url": "https://github.com/rust-lang/rust/commit/8d2fdac93bd4acf41a150404e1f6579ad45b9172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d2fdac93bd4acf41a150404e1f6579ad45b9172/comments", "author": null, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9482089789afbe0b5ad929f77ea3480fb9fcd62", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9482089789afbe0b5ad929f77ea3480fb9fcd62", "html_url": "https://github.com/rust-lang/rust/commit/d9482089789afbe0b5ad929f77ea3480fb9fcd62"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "040fcdeaf4fff2e315be4e65525930b782d2e19e", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d2fdac93bd4acf41a150404e1f6579ad45b9172/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8d2fdac93bd4acf41a150404e1f6579ad45b9172/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=8d2fdac93bd4acf41a150404e1f6579ad45b9172", "patch": "@@ -559,6 +559,7 @@ TEST_XFAILS_SELF := $(filter-out \\\n                         u8-incr-decr.rs \\\n                         uint.rs \\\n                         unit.rs \\\n+                        use.rs \\\n                         tag.rs \\\n                         vec.rs \\\n                         vec-drop.rs \\"}, {"sha": "074d0a8743eef5453a8f1413329733a77937ed7d", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/8d2fdac93bd4acf41a150404e1f6579ad45b9172/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2fdac93bd4acf41a150404e1f6579ad45b9172/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=8d2fdac93bd4acf41a150404e1f6579ad45b9172", "patch": "@@ -1330,6 +1330,8 @@ impure fn parse_item_obj(parser p, ast.layer lyr) -> @ast.item {\n }\n \n impure fn parse_mod_items(parser p, token.token term) -> ast._mod {\n+    parse_use_and_imports(p);\n+\n     let vec[@ast.item] items = vec();\n     auto index = new_str_hash[ast.mod_index_entry]();\n     let uint u = 0u;\n@@ -1531,6 +1533,51 @@ impure fn parse_item(parser p) -> @ast.item {\n     fail;\n }\n \n+impure fn parse_meta_item(parser p) {\n+    auto ident = parse_ident(p);\n+    expect(p, token.EQ);\n+    alt (p.peek()) {\n+        case (token.LIT_STR(?s)) {\n+            p.bump();\n+        }\n+        case (_) {\n+            p.err(\"Metadata items must be string literals\");\n+        }\n+    }\n+}\n+\n+impure fn parse_meta(parser p) {\n+    auto pf = parse_meta_item;\n+    parse_seq[()](token.LPAREN, token.RPAREN, some(token.COMMA), pf, p);\n+}\n+\n+impure fn parse_optional_meta(parser p) {\n+    alt (p.peek()) {\n+        case (token.LPAREN) {\n+            ret parse_meta(p);\n+        }\n+        case (_) {\n+            ret;\n+        }\n+    }\n+}\n+\n+impure fn parse_use_and_imports(parser p) {\n+    while (true) {\n+        alt (p.peek()) {\n+            case (token.USE) {\n+                p.bump();\n+                auto ident = parse_ident(p);\n+                parse_optional_meta(p);\n+                expect(p, token.SEMI);\n+            }\n+            case (_) {\n+                ret;\n+            }\n+        }\n+    }\n+}\n+\n impure fn parse_crate(parser p) -> @ast.crate {\n     auto lo = p.get_span();\n     auto hi = lo;"}, {"sha": "ab3e5e4397872ad72a4fe71b675432d861806a89", "filename": "src/test/run-pass/use.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8d2fdac93bd4acf41a150404e1f6579ad45b9172/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2fdac93bd4acf41a150404e1f6579ad45b9172/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=8d2fdac93bd4acf41a150404e1f6579ad45b9172", "patch": "@@ -0,0 +1,14 @@\n+use std;\n+use libc();\n+use zed(name = \"std\");\n+use bar(name = \"std\", ver = \"0.0.1\");\n+\n+mod baz {\n+  use std;\n+  use libc();\n+  use zed(name = \"std\");\n+  use bar(name = \"std\", ver = \"0.0.1\");\n+}\n+\n+fn main() {\n+}"}]}