{"sha": "e56a1720e4dd35f9143fc0620083b406c797fb9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NmExNzIwZTRkZDM1ZjkxNDNmYzA2MjAwODNiNDA2Yzc5N2ZiOWM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-22T00:21:35Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-22T00:21:35Z"}, "message": "Add a \"last\" function to return the last element of a vector to the standard library", "tree": {"sha": "86f71ac8552e3a43baaa33220cadde96402fd4f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f71ac8552e3a43baaa33220cadde96402fd4f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e56a1720e4dd35f9143fc0620083b406c797fb9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e56a1720e4dd35f9143fc0620083b406c797fb9c", "html_url": "https://github.com/rust-lang/rust/commit/e56a1720e4dd35f9143fc0620083b406c797fb9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e56a1720e4dd35f9143fc0620083b406c797fb9c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71de17d38ee8db40e5f50d2ce8986e9676767309", "url": "https://api.github.com/repos/rust-lang/rust/commits/71de17d38ee8db40e5f50d2ce8986e9676767309", "html_url": "https://github.com/rust-lang/rust/commit/71de17d38ee8db40e5f50d2ce8986e9676767309"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "36b529cc070755b3c3d60e0d6b39a44d9a85f846", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e56a1720e4dd35f9143fc0620083b406c797fb9c/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e56a1720e4dd35f9143fc0620083b406c797fb9c/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=e56a1720e4dd35f9143fc0620083b406c797fb9c", "patch": "@@ -1,3 +1,6 @@\n+import option.none;\n+import option.some;\n+\n import vbuf = rustrt.vbuf;\n \n type operator2[T,U,V] = fn(&T, &U) -> V;\n@@ -115,6 +118,15 @@ fn print_debug_info[T](vec[mutable? T] v) {\n     rustrt.vec_print_debug_info[T](v);\n }\n \n+// Returns the last element of v.\n+fn last[T](vec[mutable? T] v) -> option.t[T] {\n+    auto l = len[T](v);\n+    if (l == 0u) {\n+        ret none[T];\n+    }\n+    ret some[T](v.(l - 1u));\n+}\n+\n // Returns elements from [start..end) from v.\n fn slice[T](vec[mutable? T] v, uint start, uint end) -> vec[T] {\n     check (start <= end);"}]}