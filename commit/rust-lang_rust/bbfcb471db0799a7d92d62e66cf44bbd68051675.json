{"sha": "bbfcb471db0799a7d92d62e66cf44bbd68051675", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZmNiNDcxZGIwNzk5YTdkOTJkNjJlNjZjZjQ0YmJkNjgwNTE2NzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-18T21:26:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-18T21:26:22Z"}, "message": "Auto merge of #34357 - tbu-:pr_exact_size_is_empty, r=brson\n\nAdd `is_empty` function to `ExactSizeIterator`\n\nAll other types implementing a `len` functions have `is_empty` already.", "tree": {"sha": "2c50da9289268c660ceb5bbf4b2c98faedf769c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c50da9289268c660ceb5bbf4b2c98faedf769c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbfcb471db0799a7d92d62e66cf44bbd68051675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbfcb471db0799a7d92d62e66cf44bbd68051675", "html_url": "https://github.com/rust-lang/rust/commit/bbfcb471db0799a7d92d62e66cf44bbd68051675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbfcb471db0799a7d92d62e66cf44bbd68051675/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c888980763e8ba16caa67f5f08e13109bbc6fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c888980763e8ba16caa67f5f08e13109bbc6fa5", "html_url": "https://github.com/rust-lang/rust/commit/9c888980763e8ba16caa67f5f08e13109bbc6fa5"}, {"sha": "7b2a03f08e930f6eaac419e203630b06e3d491e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2a03f08e930f6eaac419e203630b06e3d491e6", "html_url": "https://github.com/rust-lang/rust/commit/7b2a03f08e930f6eaac419e203630b06e3d491e6"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "896d1c6f30bf2cfe0509eb8103e05e89e7927a98", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bbfcb471db0799a7d92d62e66cf44bbd68051675/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbfcb471db0799a7d92d62e66cf44bbd68051675/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=bbfcb471db0799a7d92d62e66cf44bbd68051675", "patch": "@@ -491,8 +491,6 @@ impl<'a, I: DoubleEndedIterator + ?Sized> DoubleEndedIterator for &'a mut I {\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait ExactSizeIterator: Iterator {\n-    #[inline]\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     /// Returns the exact number of times the iterator will iterate.\n     ///\n     /// This method has a default implementation, so you usually should not\n@@ -516,6 +514,8 @@ pub trait ExactSizeIterator: Iterator {\n     ///\n     /// assert_eq!(5, five.len());\n     /// ```\n+    #[inline]\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn len(&self) -> usize {\n         let (lower, upper) = self.size_hint();\n         // Note: This assertion is overly defensive, but it checks the invariant\n@@ -525,6 +525,32 @@ pub trait ExactSizeIterator: Iterator {\n         assert_eq!(upper, Some(lower));\n         lower\n     }\n+\n+    /// Returns whether the iterator is empty.\n+    ///\n+    /// This method has a default implementation using `self.len()`, so you\n+    /// don't need to implement it yourself.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(exact_size_is_empty)]\n+    ///\n+    /// let mut one_element = 0..1;\n+    /// assert!(!one_element.is_empty());\n+    ///\n+    /// assert_eq!(one_element.next(), Some(0));\n+    /// assert!(one_element.is_empty());\n+    ///\n+    /// assert_eq!(one_element.next(), None);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"exact_size_is_empty\", issue = \"0\")]\n+    fn is_empty(&self) -> bool {\n+        self.len() == 0\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "390b8f07b2fbd97436e3ea304c5adb5ede0c4f21", "filename": "src/test/compile-fail/method-suggestion-no-duplication.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bbfcb471db0799a7d92d62e66cf44bbd68051675/src%2Ftest%2Fcompile-fail%2Fmethod-suggestion-no-duplication.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbfcb471db0799a7d92d62e66cf44bbd68051675/src%2Ftest%2Fcompile-fail%2Fmethod-suggestion-no-duplication.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-suggestion-no-duplication.rs?ref=bbfcb471db0799a7d92d62e66cf44bbd68051675", "patch": "@@ -18,7 +18,8 @@ fn foo<F>(f: F) where F: FnMut(Foo) {}\n fn main() {\n     foo(|s| s.is_empty());\n     //~^ ERROR no method named `is_empty` found\n-    //~^^ HELP #1: `core::slice::SliceExt`\n-    //~^^^ HELP #2: `core::str::StrExt`\n-    //~^^^^ HELP items from traits can only be used if the trait is implemented and in scope; the following traits define an item `is_empty`, perhaps you need to implement one of them:\n+    //~^^ HELP #1: `std::iter::ExactSizeIterator`\n+    //~^^^ HELP #2: `core::slice::SliceExt`\n+    //~^^^^ HELP #3: `core::str::StrExt`\n+    //~^^^^^ HELP items from traits can only be used if the trait is implemented and in scope; the following traits define an item `is_empty`, perhaps you need to implement one of them:\n }"}]}