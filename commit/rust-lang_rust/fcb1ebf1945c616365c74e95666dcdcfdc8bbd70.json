{"sha": "fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjYjFlYmYxOTQ1YzYxNjM2NWM3NGU5NTY2NmRjZGNmZGM4YmJkNzA=", "commit": {"author": {"name": "Michael Hall", "email": "michael@mbh.sh", "date": "2021-06-24T03:45:56Z"}, "committer": {"name": "Michael Hall", "email": "michael@mbh.sh", "date": "2021-06-24T03:45:56Z"}, "message": "change return signature for split_file_at_dot", "tree": {"sha": "50f5ddad133ddc11c8f9cd67d8d79b46d872eb5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f5ddad133ddc11c8f9cd67d8d79b46d872eb5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "html_url": "https://github.com/rust-lang/rust/commit/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70/comments", "author": {"login": "mbhall88", "id": 20403931, "node_id": "MDQ6VXNlcjIwNDAzOTMx", "avatar_url": "https://avatars.githubusercontent.com/u/20403931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbhall88", "html_url": "https://github.com/mbhall88", "followers_url": "https://api.github.com/users/mbhall88/followers", "following_url": "https://api.github.com/users/mbhall88/following{/other_user}", "gists_url": "https://api.github.com/users/mbhall88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbhall88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhall88/subscriptions", "organizations_url": "https://api.github.com/users/mbhall88/orgs", "repos_url": "https://api.github.com/users/mbhall88/repos", "events_url": "https://api.github.com/users/mbhall88/events{/privacy}", "received_events_url": "https://api.github.com/users/mbhall88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbhall88", "id": 20403931, "node_id": "MDQ6VXNlcjIwNDAzOTMx", "avatar_url": "https://avatars.githubusercontent.com/u/20403931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbhall88", "html_url": "https://github.com/mbhall88", "followers_url": "https://api.github.com/users/mbhall88/followers", "following_url": "https://api.github.com/users/mbhall88/following{/other_user}", "gists_url": "https://api.github.com/users/mbhall88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbhall88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhall88/subscriptions", "organizations_url": "https://api.github.com/users/mbhall88/orgs", "repos_url": "https://api.github.com/users/mbhall88/repos", "events_url": "https://api.github.com/users/mbhall88/events{/privacy}", "received_events_url": "https://api.github.com/users/mbhall88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a889529e984f1d477153e60c16fa4066d8b6c9d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a889529e984f1d477153e60c16fa4066d8b6c9d7", "html_url": "https://github.com/rust-lang/rust/commit/a889529e984f1d477153e60c16fa4066d8b6c9d7"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "1cb596d691c41ecfb4e343556e345b2a8aa4efc8", "filename": "library/std/src/path.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "patch": "@@ -334,10 +334,10 @@ fn rsplit_file_at_dot(file: &OsStr) -> (Option<&OsStr>, Option<&OsStr>) {\n     }\n }\n \n-fn split_file_at_dot(file: &OsStr) -> (Option<&OsStr>, Option<&OsStr>) {\n+fn split_file_at_dot(file: &OsStr) -> (&OsStr, Option<&OsStr>) {\n     let slice = os_str_as_u8_slice(file);\n     if slice == b\"..\" {\n-        return (Some(file), None);\n+        return (file, None);\n     }\n \n     // The unsafety here stems from converting between &OsStr and &[u8]\n@@ -346,11 +346,11 @@ fn split_file_at_dot(file: &OsStr) -> (Option<&OsStr>, Option<&OsStr>) {\n     // only from ASCII-bounded slices of existing &OsStr values.\n     let i = match slice[1..].iter().position(|b| *b == b'.') {\n         Some(i) => i + 1,\n-        None => return (Some(file), None),\n+        None => return (file, None),\n     };\n     let before = &slice[..i];\n     let after = &slice[i + 1..];\n-    unsafe { (Some(u8_slice_as_os_str(before)), Some(u8_slice_as_os_str(after))) }\n+    unsafe { (u8_slice_as_os_str(before), Some(u8_slice_as_os_str(after))) }\n }\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -2201,9 +2201,11 @@ impl Path {\n     /// assert_eq!(\"foo\", Path::new(\"foo.rs\").file_prefix().unwrap());\n     /// assert_eq!(\"foo\", Path::new(\"foo.tar.gz\").file_prefix().unwrap());\n     /// ```\n-    #[unstable(feature = \"path_file_prefix\", issue = \"none\")]\n+    #[unstable(feature = \"path_file_prefix\", issue = \"86319\")]\n     pub fn file_prefix(&self) -> Option<&OsStr> {\n-        self.file_name().map(split_file_at_dot).and_then(|(before, after)| before.or(after))\n+        self.file_name()\n+            .map(split_file_at_dot)\n+            .and_then(|(before, after)| if before.is_empty() { after } else { Some(before) })\n     }\n \n     /// Extracts the extension of [`self.file_name`], if possible."}]}