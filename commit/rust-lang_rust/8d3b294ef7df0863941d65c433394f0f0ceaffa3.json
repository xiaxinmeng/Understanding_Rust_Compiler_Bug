{"sha": "8d3b294ef7df0863941d65c433394f0f0ceaffa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkM2IyOTRlZjdkZjA4NjM5NDFkNjVjNDMzMzk0ZjBmMGNlYWZmYTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-28T17:31:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-28T17:31:17Z"}, "message": "Merge #9719\n\n9719: feat: Make flyimport respect `#[doc(hidden)]` r=jonas-schievink a=jonas-schievink\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/7718 (we still don't respect `#[doc(hidden)]` on reexports, but that is tracked by https://github.com/rust-analyzer/rust-analyzer/issues/9197)\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "080bc414cb7435c3df504b52926484faee02a997", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/080bc414cb7435c3df504b52926484faee02a997"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d3b294ef7df0863941d65c433394f0f0ceaffa3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhAZRlCRBK7hj4Ov3rIwAAG8kIAKbaF9V7Y/rTg7dIArhsXAUB\nRtmgh63yXnmZALB+gMHl5Zglx5qTOSloSALiBxQU/W/hPOuCIl4Zlf0tUCmZrMFS\n4l5aILi6xea3+8hKq4QKMBzM1aUxnccQ5EnaTl2zMrTZf7l5WZFSmrXXjXrnTZ77\ncz7v42yoyK4hhJjB+T17xUEg9Sznq3LmA1d7dtZYjxLx7Gj7bgyzQPDGhjlUq6BG\nkQdhTk1+t92qMB2wPXoMXIXKiKFMi4oCZecfEj/WEuo+aySvKnWdGS+GwdJOVXe7\nT9JuG4LwOEQVrM3vzP+bOwFsJz2XthOBZ6E5UI3EythM6zDgpfq7psx/tj7z+K0=\n=ehWn\n-----END PGP SIGNATURE-----\n", "payload": "tree 080bc414cb7435c3df504b52926484faee02a997\nparent 54db97af455e31e37505d48528822e79cd02d122\nparent 8764cc955fc4d6834d553f09a4356bd5c932057e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627493477 +0000\ncommitter GitHub <noreply@github.com> 1627493477 +0000\n\nMerge #9719\n\n9719: feat: Make flyimport respect `#[doc(hidden)]` r=jonas-schievink a=jonas-schievink\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/7718 (we still don't respect `#[doc(hidden)]` on reexports, but that is tracked by https://github.com/rust-analyzer/rust-analyzer/issues/9197)\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3b294ef7df0863941d65c433394f0f0ceaffa3", "html_url": "https://github.com/rust-lang/rust/commit/8d3b294ef7df0863941d65c433394f0f0ceaffa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d3b294ef7df0863941d65c433394f0f0ceaffa3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54db97af455e31e37505d48528822e79cd02d122", "url": "https://api.github.com/repos/rust-lang/rust/commits/54db97af455e31e37505d48528822e79cd02d122", "html_url": "https://github.com/rust-lang/rust/commit/54db97af455e31e37505d48528822e79cd02d122"}, {"sha": "8764cc955fc4d6834d553f09a4356bd5c932057e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8764cc955fc4d6834d553f09a4356bd5c932057e", "html_url": "https://github.com/rust-lang/rust/commit/8764cc955fc4d6834d553f09a4356bd5c932057e"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "5960b3cc1c27630a964c5f61778f0867fbc737c6", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8d3b294ef7df0863941d65c433394f0f0ceaffa3/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3b294ef7df0863941d65c433394f0f0ceaffa3/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=8d3b294ef7df0863941d65c433394f0f0ceaffa3", "patch": "@@ -1599,6 +1599,21 @@ impl ItemInNs {\n             ItemInNs::Macros(_) => None,\n         }\n     }\n+\n+    /// Returns the crate defining this item (or `None` if `self` is built-in).\n+    pub fn krate(&self, db: &dyn HirDatabase) -> Option<Crate> {\n+        match self {\n+            ItemInNs::Types(did) | ItemInNs::Values(did) => did.module(db).map(|m| m.krate()),\n+            ItemInNs::Macros(id) => id.module(db).map(|m| m.krate()),\n+        }\n+    }\n+\n+    pub fn attrs(&self, db: &dyn HirDatabase) -> Option<AttrsWithOwner> {\n+        match self {\n+            ItemInNs::Types(it) | ItemInNs::Values(it) => it.attrs(db),\n+            ItemInNs::Macros(it) => Some(it.attrs(db)),\n+        }\n+    }\n }\n \n /// Invariant: `inner.as_assoc_item(db).is_some()`"}, {"sha": "0118d94641f3321113144f6a7a59118f329e3977", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/8d3b294ef7df0863941d65c433394f0f0ceaffa3/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3b294ef7df0863941d65c433394f0f0ceaffa3/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=8d3b294ef7df0863941d65c433394f0f0ceaffa3", "patch": "@@ -138,6 +138,10 @@ pub(crate) fn import_on_the_fly(acc: &mut Completions, ctx: &CompletionContext)\n         import_assets\n             .search_for_imports(&ctx.sema, ctx.config.insert_use.prefix_kind)\n             .into_iter()\n+            .filter(|import| {\n+                !ctx.is_item_hidden(&import.item_to_import)\n+                    && !ctx.is_item_hidden(&import.original_item)\n+            })\n             .sorted_by_key(|located_import| {\n                 compute_fuzzy_completion_order_key(\n                     &located_import.import_path,\n@@ -1147,4 +1151,42 @@ mod bar {\n             expect![[r#\"\"#]],\n         );\n     }\n+\n+    #[test]\n+    fn respects_doc_hidden() {\n+        check(\n+            r#\"\n+//- /lib.rs crate:lib deps:dep\n+fn f() {\n+    ().fro$0\n+}\n+\n+//- /dep.rs crate:dep\n+#[doc(hidden)]\n+pub trait Private {\n+    fn frob(&self) {}\n+}\n+\n+impl<T> Private for T {}\n+            \"#,\n+            expect![[r#\"\"#]],\n+        );\n+        check(\n+            r#\"\n+//- /lib.rs crate:lib deps:dep\n+fn f() {\n+    ().fro$0\n+}\n+\n+//- /dep.rs crate:dep\n+pub trait Private {\n+    #[doc(hidden)]\n+    fn frob(&self) {}\n+}\n+\n+impl<T> Private for T {}\n+            \"#,\n+            expect![[r#\"\"#]],\n+        );\n+    }\n }"}, {"sha": "36611cfc2b7483711631d08ebb69fd492768faf4", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8d3b294ef7df0863941d65c433394f0f0ceaffa3/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3b294ef7df0863941d65c433394f0f0ceaffa3/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=8d3b294ef7df0863941d65c433394f0f0ceaffa3", "patch": "@@ -378,6 +378,15 @@ impl<'a> CompletionContext<'a> {\n         false\n     }\n \n+    pub(crate) fn is_item_hidden(&self, item: &hir::ItemInNs) -> bool {\n+        let attrs = item.attrs(self.db);\n+        let krate = item.krate(self.db);\n+        match (attrs, krate) {\n+            (Some(attrs), Some(krate)) => self.is_doc_hidden(&attrs, krate),\n+            _ => false,\n+        }\n+    }\n+\n     /// A version of [`SemanticsScope::process_all_names`] that filters out `#[doc(hidden)]` items.\n     pub(crate) fn process_all_names(&self, f: &mut dyn FnMut(Name, ScopeDef)) {\n         self.scope.process_all_names(&mut |name, def| {"}]}