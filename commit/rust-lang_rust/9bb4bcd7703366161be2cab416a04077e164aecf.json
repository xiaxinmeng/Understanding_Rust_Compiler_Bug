{"sha": "9bb4bcd7703366161be2cab416a04077e164aecf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYjRiY2Q3NzAzMzY2MTYxYmUyY2FiNDE2YTA0MDc3ZTE2NGFlY2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-03T06:45:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-09T11:08:00Z"}, "message": "tidy up", "tree": {"sha": "55399b60625a3da2ff0e9607c34338b22db3b0a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55399b60625a3da2ff0e9607c34338b22db3b0a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bb4bcd7703366161be2cab416a04077e164aecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb4bcd7703366161be2cab416a04077e164aecf", "html_url": "https://github.com/rust-lang/rust/commit/9bb4bcd7703366161be2cab416a04077e164aecf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bb4bcd7703366161be2cab416a04077e164aecf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "654d9ff618ed95720cf9a3c49cc33e0a6c6ff158", "url": "https://api.github.com/repos/rust-lang/rust/commits/654d9ff618ed95720cf9a3c49cc33e0a6c6ff158", "html_url": "https://github.com/rust-lang/rust/commit/654d9ff618ed95720cf9a3c49cc33e0a6c6ff158"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d7025f9d6b58e0b5ae09d0dc05dd184f6aa91c9d", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb4bcd7703366161be2cab416a04077e164aecf/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb4bcd7703366161be2cab416a04077e164aecf/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=9bb4bcd7703366161be2cab416a04077e164aecf", "patch": "@@ -180,7 +180,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n                     scalar_format(value), path, \"a pointer\");\n                 let _fn = try_validation!(self.memory.get_fn(ptr),\n                     scalar_format(value), path, \"a function pointer\");\n-                // TODO: Check if the signature matches\n+                // FIXME: Check if the signature matches\n             }\n             ty::FnDef(..) => {\n                 // This is a zero-sized type with all relevant data sitting in the type."}]}