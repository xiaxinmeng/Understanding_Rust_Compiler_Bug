{"sha": "7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "node_id": "C_kwDOAAsO6NoAKDdmOWQ5ZGU4MmQxYTNlMmZmN2JkODk5N2Y3NGIyODAyZDdmZGFlZDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-18T12:26:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-18T12:26:47Z"}, "message": "Rollup merge of #108162 - clubby789:issue-108155, r=Nilstrieb\n\nDon't eagerly convert principal to string\n\nFixes #108155\n\n~~I haven't yet been able to reproduce the ICE in a minimal example unfortunately.~~ Added a test", "tree": {"sha": "1ab7c14d903ddaafdb9159e481ae8f06e8810b9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ab7c14d903ddaafdb9159e481ae8f06e8810b9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj8MQHCRBK7hj4Ov3rIwAABNYIAIsQ8TSMT4cfuPWtLN7vCpF1\na73BFGDhvqkMBCy+3TwI3nHcYJuNn8MRz9X8BxwH+UHiaNvDV0qZjfp1aVNzgxN1\nZpv9F/P5N4NPV+1VsuAtha5cEn13Anf0zGer1k7tj2gUUKDt6VZfJv7fDFnp8HqA\nCzyshAjmJ33ZreXaFsKC+vnTWXmr9/F4lSvJW52CaclanqbExPZq/HgLNxxsW634\nwU3e3iIpmjHjeKobbsbRMoxU70ZEfr6ynYuaTvkC9tXnNLp568SFnl9rnAfXPU8/\nNBqTAgkC5jEJKDm4Ebz3yKmnbt7CEUnNXCZgI4nsomYi493SYC0DGkrll3GQ3Lw=\n=86mY\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ab7c14d903ddaafdb9159e481ae8f06e8810b9a\nparent d9c90402905170b219bb1c114b493dc47d4ce1a9\nparent eebd31c1875677bf1f4d7c43801f6cedd57c0ea2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676723207 +0100\ncommitter GitHub <noreply@github.com> 1676723207 +0100\n\nRollup merge of #108162 - clubby789:issue-108155, r=Nilstrieb\n\nDon't eagerly convert principal to string\n\nFixes #108155\n\n~~I haven't yet been able to reproduce the ICE in a minimal example unfortunately.~~ Added a test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "html_url": "https://github.com/rust-lang/rust/commit/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c90402905170b219bb1c114b493dc47d4ce1a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c90402905170b219bb1c114b493dc47d4ce1a9", "html_url": "https://github.com/rust-lang/rust/commit/d9c90402905170b219bb1c114b493dc47d4ce1a9"}, {"sha": "eebd31c1875677bf1f4d7c43801f6cedd57c0ea2", "url": "https://api.github.com/repos/rust-lang/rust/commits/eebd31c1875677bf1f4d7c43801f6cedd57c0ea2", "html_url": "https://github.com/rust-lang/rust/commit/eebd31c1875677bf1f4d7c43801f6cedd57c0ea2"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "ccf95992a6e6e63c44345c44b3172d0a69e06bce", "filename": "compiler/rustc_lint/src/deref_into_dyn_supertrait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/compiler%2Frustc_lint%2Fsrc%2Fderef_into_dyn_supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/compiler%2Frustc_lint%2Fsrc%2Fderef_into_dyn_supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fderef_into_dyn_supertrait.rs?ref=7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "patch": "@@ -78,7 +78,7 @@ impl<'tcx> LateLintPass<'tcx> for DerefIntoDynSupertrait {\n             });\n             cx.emit_spanned_lint(DEREF_INTO_DYN_SUPERTRAIT, cx.tcx.def_span(item.owner_id.def_id), SupertraitAsDerefTarget {\n                 t,\n-                target_principal: target_principal.to_string(),\n+                target_principal,\n                 label,\n             });\n         }"}, {"sha": "94a43ab0c4674b11b510d2106a9cc2fcbb38c501", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "patch": "@@ -8,7 +8,7 @@ use rustc_errors::{\n };\n use rustc_hir::def_id::DefId;\n use rustc_macros::{LintDiagnostic, Subdiagnostic};\n-use rustc_middle::ty::{Predicate, Ty, TyCtxt};\n+use rustc_middle::ty::{PolyExistentialTraitRef, Predicate, Ty, TyCtxt};\n use rustc_session::parse::ParseSess;\n use rustc_span::{edition::Edition, sym, symbol::Ident, Span, Symbol};\n \n@@ -556,8 +556,7 @@ pub struct BuiltinUnexpectedCliConfigValue {\n #[diag(lint_supertrait_as_deref_target)]\n pub struct SupertraitAsDerefTarget<'a> {\n     pub t: Ty<'a>,\n-    pub target_principal: String,\n-    // pub target_principal: Binder<'a, ExistentialTraitRef<'b>>,\n+    pub target_principal: PolyExistentialTraitRef<'a>,\n     #[subdiagnostic]\n     pub label: Option<SupertraitAsDerefTargetLabel>,\n }"}, {"sha": "f8d17433cf7701e1f7da8c3bb736a9dac7cbf529", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "patch": "@@ -933,6 +933,12 @@ impl<'tcx> PolyExistentialTraitRef<'tcx> {\n     }\n }\n \n+impl rustc_errors::IntoDiagnosticArg for PolyExistentialTraitRef<'_> {\n+    fn into_diagnostic_arg(self) -> rustc_errors::DiagnosticArgValue<'static> {\n+        self.to_string().into_diagnostic_arg()\n+    }\n+}\n+\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, TyEncodable, TyDecodable)]\n #[derive(HashStable)]\n pub enum BoundVariableKind {"}, {"sha": "4ae0cbd92ff162e724540806057ff930d3f0b9ab", "filename": "tests/ui/lint/issue-108155.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/tests%2Fui%2Flint%2Fissue-108155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2/tests%2Fui%2Flint%2Fissue-108155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fissue-108155.rs?ref=7f9d9de82d1a3e2ff7bd8997f74b2802d7fdaed2", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+// check that `deref_into_dyn_supertrait` doesn't cause ICE by eagerly converting\n+// a cancelled lint\n+\n+#![allow(deref_into_dyn_supertrait)]\n+\n+trait Trait {}\n+impl std::ops::Deref for dyn Trait + Send + Sync {\n+    type Target = dyn Trait;\n+    fn deref(&self) -> &Self::Target {\n+        self\n+    }\n+}\n+\n+fn main() {}"}]}