{"sha": "67362b301bd00802c10c9fa9bc7396dc7ada83dd", "node_id": "C_kwDOAAsO6NoAKDY3MzYyYjMwMWJkMDA4MDJjMTBjOWZhOWJjNzM5NmRjN2FkYTgzZGQ", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-10-31T14:02:49Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-10-31T14:23:36Z"}, "message": "Add test for JoinHandle::is_running.", "tree": {"sha": "6ee232ffa6428b77fe8cc3f6b3bb349679985a74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ee232ffa6428b77fe8cc3f6b3bb349679985a74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67362b301bd00802c10c9fa9bc7396dc7ada83dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67362b301bd00802c10c9fa9bc7396dc7ada83dd", "html_url": "https://github.com/rust-lang/rust/commit/67362b301bd00802c10c9fa9bc7396dc7ada83dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67362b301bd00802c10c9fa9bc7396dc7ada83dd/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d718b1a79508169f10cd4b691071d4308ac15fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d718b1a79508169f10cd4b691071d4308ac15fc3", "html_url": "https://github.com/rust-lang/rust/commit/d718b1a79508169f10cd4b691071d4308ac15fc3"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "ca0d88135a5d8ae43fe35edb7654507da6b34bd7", "filename": "library/std/src/thread/tests.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/67362b301bd00802c10c9fa9bc7396dc7ada83dd/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67362b301bd00802c10c9fa9bc7396dc7ada83dd/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs?ref=67362b301bd00802c10c9fa9bc7396dc7ada83dd", "patch": "@@ -2,9 +2,13 @@ use super::Builder;\n use crate::any::Any;\n use crate::mem;\n use crate::result;\n-use crate::sync::mpsc::{channel, Sender};\n+use crate::sync::{\n+    mpsc::{channel, Sender},\n+    Arc, Barrier,\n+};\n use crate::thread::{self, ThreadId};\n use crate::time::Duration;\n+use crate::time::Instant;\n \n // !!! These tests are dangerous. If something is buggy, they will hang, !!!\n // !!! instead of exiting cleanly. This might wedge the buildbots.       !!!\n@@ -46,6 +50,36 @@ fn test_run_basic() {\n     rx.recv().unwrap();\n }\n \n+#[test]\n+fn test_is_running() {\n+    let b = Arc::new(Barrier::new(2));\n+    let t = thread::spawn({\n+        let b = b.clone();\n+        move || {\n+            b.wait();\n+            1234\n+        }\n+    });\n+\n+    // Thread is definitely running here, since it's still waiting for the barrier.\n+    assert_eq!(t.is_running(), true);\n+\n+    // Unblock the barrier.\n+    b.wait();\n+\n+    // Now check that t.is_running() becomes false within a reasonable time.\n+    let start = Instant::now();\n+    while t.is_running() {\n+        assert!(start.elapsed() < Duration::from_secs(2));\n+        thread::sleep(Duration::from_millis(15));\n+    }\n+\n+    // Joining the thread should not block for a significant time now.\n+    let join_time = Instant::now();\n+    assert_eq!(t.join().unwrap(), 1234);\n+    assert!(join_time.elapsed() < Duration::from_secs(2));\n+}\n+\n #[test]\n fn test_join_panic() {\n     match thread::spawn(move || panic!()).join() {"}]}