{"sha": "f7677b03e1624bc478614d34034c4c59d784cf09", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3Njc3YjAzZTE2MjRiYzQ3ODYxNGQzNDAzNGM0YzU5ZDc4NGNmMDk=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-17T09:46:45Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-17T09:46:45Z"}, "message": "added regression test for #189", "tree": {"sha": "30050f4847c65b86e6f683e803e537e7be9a7e3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30050f4847c65b86e6f683e803e537e7be9a7e3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7677b03e1624bc478614d34034c4c59d784cf09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7677b03e1624bc478614d34034c4c59d784cf09", "html_url": "https://github.com/rust-lang/rust/commit/f7677b03e1624bc478614d34034c4c59d784cf09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7677b03e1624bc478614d34034c4c59d784cf09/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84abfcd22d84431519c029e87c5914389ef008cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/84abfcd22d84431519c029e87c5914389ef008cb", "html_url": "https://github.com/rust-lang/rust/commit/84abfcd22d84431519c029e87c5914389ef008cb"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "54551852d5e14e5639d827e1e4fc4baef0d45332", "filename": "tests/compile-fail/identity_op.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f7677b03e1624bc478614d34034c4c59d784cf09/tests%2Fcompile-fail%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7677b03e1624bc478614d34034c4c59d784cf09/tests%2Fcompile-fail%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fidentity_op.rs?ref=f7677b03e1624bc478614d34034c4c59d784cf09", "patch": "@@ -10,7 +10,10 @@ fn main() {\n     let x = 0;\n \n     x + 0;        //~ERROR the operation is ineffective\n+    x + (1 - 1);  //~ERROR the operation is ineffective\n+    x + 1;\n     0 + x;        //~ERROR the operation is ineffective\n+    1 + x;\n     x - ZERO;     //no error, as we skip lookups (for now)\n     x | (0);      //~ERROR the operation is ineffective\n     ((ZERO)) | x; //no error, as we skip lookups (for now)\n@@ -19,6 +22,8 @@ fn main() {\n     1 * x;        //~ERROR the operation is ineffective\n     x / ONE;      //no error, as we skip lookups (for now)\n \n+    x / 2;        //no false positive\n+\n     x & NEG_ONE;  //no error, as we skip lookups (for now)\n     -1 & x;       //~ERROR the operation is ineffective\n }"}]}