{"sha": "0a4993527014a80c0b86d74c01115054c4875b18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNDk5MzUyNzAxNGE4MGMwYjg2ZDc0YzAxMTE1MDU0YzQ4NzViMTg=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-23T06:12:03Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-26T11:44:08Z"}, "message": "cargo dev fmt", "tree": {"sha": "b701d63ed2dad37b2cfb582756a159f0e568360b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b701d63ed2dad37b2cfb582756a159f0e568360b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a4993527014a80c0b86d74c01115054c4875b18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE6VFioMHrom999LRAK0OZxL9Ny94FAl6ldA0ACgkQK0OZxL9N\ny94KAw//VEkOdV4cYV9PA+j0nvN1B4MSUFgGG77TjhNpVUAxtd4sZ5L86X+4WNii\nFR7hxyFY1nxDgSmNQPcIO81R5hxJRYtSRGXQAOZ5BvIcvYGlavvbV2K0HgNCQvqJ\nnpMaMWyY3pyz96MR+28hUep4sGpKEqI6UZ9Rsi50BmE+FVpYJ+BTakhPYESqv6qi\nT6JFXyZsOlUrCJve8tBKaQRfCqj8nm/SDtWd2IxImvMsvsCLpaVCDMrrLWavEHEg\nwyJmHlRoFJsgzfrC6zG+39Hg64+GV+owkfl04lz4F9sI2ArrPCxbUJCl1w98qB+h\nmYqSP9KP70VCzZO7637E4pjeSVbTNlt6O6y/+/yuhPXv5ghno/z4lPweHm740xk0\n4d19r20Ga0coE6oGiv54ScwU00fKZapcpZnskZTW/pkKk1dpXBXzxMlfWmZpJOCN\n9I2uzHlrieLaEGbJXhykeivFth5UWQdasEFipLrpjSRqvLAAp3woYJmDjS+RJY4+\nZLIx3jxofJL4nqjv64u0oUtuQXRAzpV9Dkp8aFIdnhGnBQIZulyHJjVIjgCJapuM\niKRf7FRp3fw4A2fIg0uxCS9mQQLpxO+wr6c72qtPx8pwAF5qJjh/gPGV9D8k4GpB\n5rT/4FgAVMs3Yz1m2m5TnrBDGgUb/68gBYeuRrCKFu/J8gWvNio=\n=GkBG\n-----END PGP SIGNATURE-----", "payload": "tree b701d63ed2dad37b2cfb582756a159f0e568360b\nparent 0480ff861a66239f5cd8496f12dc99da70124013\nauthor Philipp Hansch <dev@phansch.net> 1587622323 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1587901448 +0200\n\ncargo dev fmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a4993527014a80c0b86d74c01115054c4875b18", "html_url": "https://github.com/rust-lang/rust/commit/0a4993527014a80c0b86d74c01115054c4875b18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a4993527014a80c0b86d74c01115054c4875b18/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0480ff861a66239f5cd8496f12dc99da70124013", "url": "https://api.github.com/repos/rust-lang/rust/commits/0480ff861a66239f5cd8496f12dc99da70124013", "html_url": "https://github.com/rust-lang/rust/commit/0480ff861a66239f5cd8496f12dc99da70124013"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "5b092526ce4f2921cafb6bc22747cec1cf3c7dfb", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::paths;\n use crate::utils::{\n-    is_expn_of, is_type_diagnostic_item, last_path_segment, match_def_path, match_function_call, snippet, span_lint_and_then,\n-    walk_ptrs_ty,\n+    is_expn_of, is_type_diagnostic_item, last_path_segment, match_def_path, match_function_call, snippet,\n+    span_lint_and_then, walk_ptrs_ty,\n };\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;"}, {"sha": "289628a2752af81ded7e8fdbe848b219888f0b0b", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -4,8 +4,8 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{\n-    get_trait_def_id, is_type_diagnostic_item, implements_trait, paths, return_ty, span_lint_and_help, trait_ref_of_method,\n-    walk_ptrs_ty,\n+    get_trait_def_id, implements_trait, is_type_diagnostic_item, paths, return_ty, span_lint_and_help,\n+    trait_ref_of_method, walk_ptrs_ty,\n };\n \n declare_clippy_lint! {"}, {"sha": "06138ab9783c34f19d8b1340a05d846c20237a3f", "filename": "clippy_lints/src/methods/inefficient_to_string.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -1,5 +1,7 @@\n use super::INEFFICIENT_TO_STRING;\n-use crate::utils::{match_def_path, is_type_diagnostic_item, paths, snippet_with_applicability, span_lint_and_then, walk_ptrs_ty_depth};\n+use crate::utils::{\n+    is_type_diagnostic_item, match_def_path, paths, snippet_with_applicability, span_lint_and_then, walk_ptrs_ty_depth,\n+};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -45,16 +47,15 @@ pub fn lint<'tcx>(cx: &LateContext<'_, 'tcx>, expr: &hir::Expr<'_>, arg: &hir::E\n /// Currently, these are `str`, `String`, and `Cow<'_, str>`.\n fn specializes_tostring(cx: &LateContext<'_, '_>, ty: Ty<'_>) -> bool {\n     if let ty::Str = ty.kind {\n-        return true\n+        return true;\n     }\n \n     if is_type_diagnostic_item(cx, ty, sym!(string_type)) {\n-        return true\n+        return true;\n     }\n \n     if let ty::Adt(adt, substs) = ty.kind {\n-        match_def_path(cx, adt.did, &paths::COW) &&\n-            substs.type_at(1).is_str()\n+        match_def_path(cx, adt.did, &paths::COW) && substs.type_at(1).is_str()\n     } else {\n         false\n     }"}, {"sha": "653ab44e129b403c02a079fe8c8a64f7450a8e86", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::ptr::get_spans;\n use crate::utils::{\n-    get_trait_def_id, implements_trait, is_copy, is_self, is_type_diagnostic_item, multispan_sugg, paths,\n-    snippet, snippet_opt, span_lint_and_then,\n+    get_trait_def_id, implements_trait, is_copy, is_self, is_type_diagnostic_item, multispan_sugg, paths, snippet,\n+    snippet_opt, span_lint_and_then,\n };\n use if_chain::if_chain;\n use rustc_ast::ast::Attribute;"}, {"sha": "d5cace0c647461b4b1440f99b969366e51b464dc", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n-    fn_has_unsatisfiable_preds, has_drop, is_copy, is_type_diagnostic_item, match_def_path, match_type, paths, snippet_opt, span_lint_hir,\n-    span_lint_hir_and_then, walk_ptrs_ty_depth,\n+    fn_has_unsatisfiable_preds, has_drop, is_copy, is_type_diagnostic_item, match_def_path, match_type, paths,\n+    snippet_opt, span_lint_hir, span_lint_hir_and_then, walk_ptrs_ty_depth,\n };\n use if_chain::if_chain;\n use rustc_data_structures::{fx::FxHashMap, transitive_relation::TransitiveRelation};\n@@ -113,7 +113,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n \n             let from_borrow = match_def_path(cx, fn_def_id, &paths::CLONE_TRAIT_METHOD)\n                 || match_def_path(cx, fn_def_id, &paths::TO_OWNED_METHOD)\n-                || (match_def_path(cx, fn_def_id, &paths::TO_STRING_METHOD) && is_type_diagnostic_item(cx, arg_ty, sym!(string_type)));\n+                || (match_def_path(cx, fn_def_id, &paths::TO_STRING_METHOD)\n+                    && is_type_diagnostic_item(cx, arg_ty, sym!(string_type)));\n \n             let from_deref = !from_borrow\n                 && (match_def_path(cx, fn_def_id, &paths::PATH_TO_PATH_BUF)"}, {"sha": "c52e6a643f2a28e0348c764a4836d545db10a082", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::sugg::Sugg;\n use crate::utils::{\n-    differing_macro_contexts, is_type_diagnostic_item, snippet_with_applicability,\n-    span_lint_and_then, walk_ptrs_ty, SpanlessEq,\n+    differing_macro_contexts, is_type_diagnostic_item, snippet_with_applicability, span_lint_and_then, walk_ptrs_ty,\n+    SpanlessEq,\n };\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "d8d6dcc3777ef91296d0aa19f5fe993820c7d304", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4993527014a80c0b86d74c01115054c4875b18/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=0a4993527014a80c0b86d74c01115054c4875b18", "patch": "@@ -29,10 +29,10 @@ use rustc_typeck::hir_ty_to_ty;\n use crate::consts::{constant, Constant};\n use crate::utils::paths;\n use crate::utils::{\n-    clip, comparisons, differing_macro_contexts, higher, in_constant, int_bits, is_type_diagnostic_item, last_path_segment, match_def_path,\n-    match_path, method_chain_args, multispan_sugg, numeric_literal::NumericLiteral, qpath_res, same_tys, sext, snippet,\n-    snippet_opt, snippet_with_applicability, snippet_with_macro_callsite, span_lint, span_lint_and_help,\n-    span_lint_and_sugg, span_lint_and_then, unsext,\n+    clip, comparisons, differing_macro_contexts, higher, in_constant, int_bits, is_type_diagnostic_item,\n+    last_path_segment, match_def_path, match_path, method_chain_args, multispan_sugg, numeric_literal::NumericLiteral,\n+    qpath_res, same_tys, sext, snippet, snippet_opt, snippet_with_applicability, snippet_with_macro_callsite,\n+    span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then, unsext,\n };\n \n declare_clippy_lint! {"}]}