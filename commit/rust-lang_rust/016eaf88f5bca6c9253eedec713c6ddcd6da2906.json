{"sha": "016eaf88f5bca6c9253eedec713c6ddcd6da2906", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNmVhZjg4ZjViY2E2YzkyNTNlZWRlYzcxM2M2ZGRjZDZkYTI5MDY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-10-21T02:15:06Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-11-02T13:52:56Z"}, "message": "Use `jemalloc-sys` on Linux and OSX compilers\n\nThis commit adds opt-in support to the compiler to link to `jemalloc` in\nthe compiler. When activated the compiler will depend on `jemalloc-sys`,\ninstruct jemalloc to unprefix its symbols, and then link to it. The\nfeature is activated by default on Linux/OSX compilers for x86_64/i686\nplatforms, and it's not enabled anywhere else for now. We may be able to\nopt-in other platforms in the future! Also note that the opt-in only\nhappens on CI, it's otherwise unconditionally turned off by default.\n\nCloses #36963", "tree": {"sha": "bb32f508b08930114bd8f3377e11d2fcb6a7cb70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb32f508b08930114bd8f3377e11d2fcb6a7cb70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/016eaf88f5bca6c9253eedec713c6ddcd6da2906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/016eaf88f5bca6c9253eedec713c6ddcd6da2906", "html_url": "https://github.com/rust-lang/rust/commit/016eaf88f5bca6c9253eedec713c6ddcd6da2906", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/016eaf88f5bca6c9253eedec713c6ddcd6da2906/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61e89446ef6e115630faa75c985c599d739f7586", "url": "https://api.github.com/repos/rust-lang/rust/commits/61e89446ef6e115630faa75c985c599d739f7586", "html_url": "https://github.com/rust-lang/rust/commit/61e89446ef6e115630faa75c985c599d739f7586"}], "stats": {"total": 69, "additions": 58, "deletions": 11}, "files": [{"sha": "b208e760d95c672b1a60891970bd7d0cb7a77f01", "filename": ".travis.yml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -30,7 +30,7 @@ matrix:\n \n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler --enable-lldb\"\n+        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler --enable-lldb --set rust.jemalloc\"\n         SRC=.\n         DEPLOY_ALT=1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n@@ -53,7 +53,7 @@ matrix:\n     # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n     - env: >\n         RUST_CHECK_TARGET=check\n-        RUST_CONFIGURE_ARGS=\"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler\"\n+        RUST_CONFIGURE_ARGS=\"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n         SRC=.\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n         MACOSX_DEPLOYMENT_TARGET=10.8\n@@ -67,7 +67,7 @@ matrix:\n \n     - env: >\n         RUST_CHECK_TARGET=check\n-        RUST_CONFIGURE_ARGS=--build=i686-apple-darwin\n+        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --set rust.jemalloc\"\n         SRC=.\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n         MACOSX_DEPLOYMENT_TARGET=10.8\n@@ -87,7 +87,7 @@ matrix:\n     # OSX 10.7 and `xcode7` is the latest Xcode able to compile LLVM for 10.7.\n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb\"\n+        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb --set rust.jemalloc\"\n         SRC=.\n         DEPLOY=1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n@@ -102,7 +102,7 @@ matrix:\n \n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb\"\n+        RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc\"\n         SRC=.\n         DEPLOY=1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1"}, {"sha": "8b11014edae795c1a4638680d475e16247c5b056", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -396,6 +396,10 @@\n # generally only set for releases\n #remap-debuginfo = false\n \n+# Link the compiler against `jemalloc`, where on Linux and OSX it should\n+# override the default allocator for rustc and LLVM.\n+#jemalloc = false\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "dce5d4eb5129dce4afb43b60bb0c8bfd201c3199", "filename": "src/Cargo.lock", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -785,6 +785,11 @@ dependencies = [\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"fs_extra\"\n+version = \"1.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"fst\"\n version = \"0.3.0\"\n@@ -996,6 +1001,16 @@ name = \"itoa\"\n version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"jemalloc-sys\"\n+version = \"0.1.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"jobserver\"\n version = \"0.1.11\"\n@@ -2181,6 +2196,7 @@ dependencies = [\n  \"arena 0.0.0\",\n  \"env_logger 0.5.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"graphviz 0.0.0\",\n+ \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -3237,6 +3253,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\n \"checksum foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n \"checksum fs2 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9564fc758e15025b46aa6643b1b77d047d1a56a1aea6e01002ac0c7026876213\"\n+\"checksum fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674\"\n \"checksum fst 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d94485a00b1827b861dd9d1a2cc9764f9044d4c535514c0760a5a2012ef3399f\"\n \"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n \"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n@@ -3259,6 +3276,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum is-match 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e5b386aef33a1c677be65237cb9d32c3f3ef56bd035949710c4bb13083eb053\"\n \"checksum itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450\"\n \"checksum itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b\"\n+\"checksum jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bfc62c8e50e381768ce8ee0428ee53741929f7ebd73e4d83f669bcf7693e00ae\"\n \"checksum jobserver 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"60af5f849e1981434e4a31d3d782c4774ae9b434ce55b101a96ecfd09147e8be\"\n \"checksum json 0.11.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9ad0485404155f45cce53a40d4b2d6ac356418300daed05273d9e26f91c390be\"\n \"checksum jsonrpc-core 8.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddf83704f4e79979a424d1082dd2c1e52683058056c9280efa19ac5f6bc9033c\""}, {"sha": "0f249eee000224a9f0b8d1ff48878dae20e0551b", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -116,6 +116,7 @@ pub struct Config {\n     pub hosts: Vec<Interned<String>>,\n     pub targets: Vec<Interned<String>>,\n     pub local_rebuild: bool,\n+    pub jemalloc: bool,\n \n     // dist misc\n     pub dist_sign_folder: Option<PathBuf>,\n@@ -260,7 +261,7 @@ struct Llvm {\n     link_jobs: Option<u32>,\n     link_shared: Option<bool>,\n     version_suffix: Option<String>,\n-    clang_cl: Option<String>\n+    clang_cl: Option<String>,\n }\n \n #[derive(Deserialize, Default, Clone)]\n@@ -324,6 +325,7 @@ struct Rust {\n     backtrace_on_ice: Option<bool>,\n     verify_llvm_ir: Option<bool>,\n     remap_debuginfo: Option<bool>,\n+    jemalloc: Option<bool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -537,6 +539,7 @@ impl Config {\n             set(&mut config.rust_debuginfo_tests, rust.debuginfo_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n             set(&mut config.rust_rpath, rust.rpath);\n+            set(&mut config.jemalloc, rust.jemalloc);\n             set(&mut config.backtrace, rust.backtrace);\n             set(&mut config.channel, rust.channel.clone());\n             set(&mut config.rust_dist_src, rust.dist_src);"}, {"sha": "8159fb182a18d05575704723c6646cea9eff3eeb", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -530,7 +530,11 @@ impl Build {\n \n     /// Get the space-separated set of activated features for the compiler.\n     fn rustc_features(&self) -> String {\n-        String::new()\n+        let mut features = String::new();\n+        if self.config.jemalloc {\n+            features.push_str(\"jemalloc\");\n+        }\n+        features\n     }\n \n     /// Component directory that Cargo will produce output into (e.g."}, {"sha": "8df49f364a372eb50d6b9edbd7d9e850652ffc37", "filename": "src/ci/docker/dist-i686-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -98,7 +98,8 @@ ENV RUST_CONFIGURE_ARGS \\\n       --enable-sanitizers \\\n       --enable-profiler \\\n       --set target.i686-unknown-linux-gnu.linker=clang \\\n-      --build=i686-unknown-linux-gnu\n+      --build=i686-unknown-linux-gnu \\\n+      --set rust.jemalloc\n ENV SCRIPT python2.7 ../x.py dist --build $HOSTS --host $HOSTS --target $HOSTS\n ENV CARGO_TARGET_I686_UNKNOWN_LINUX_GNU_LINKER=clang\n "}, {"sha": "0a2dae72f73828d7497625f6de96c1efdf2a67c8", "filename": "src/ci/docker/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -101,7 +101,8 @@ ENV RUST_CONFIGURE_ARGS \\\n       --set target.x86_64-unknown-linux-gnu.linker=clang \\\n       --set target.x86_64-unknown-linux-gnu.ar=/rustroot/bin/llvm-ar \\\n       --set target.x86_64-unknown-linux-gnu.ranlib=/rustroot/bin/llvm-ranlib \\\n-      --set llvm.thin-lto=true\n+      --set llvm.thin-lto=true \\\n+      --set rust.jemalloc\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS\n ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=clang\n "}, {"sha": "1e32f5ef6f0b61c82a92249497fa2c40aa86048c", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -38,3 +38,8 @@ syntax = { path = \"../libsyntax\" }\n smallvec = { version = \"0.6.5\", features = [\"union\"] }\n syntax_ext = { path = \"../libsyntax_ext\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+\n+[dependencies.jemalloc-sys]\n+version = '0.1.8'\n+optional = true\n+features = ['unprefixed_malloc_on_supported_platforms']"}, {"sha": "e8fdaddaeb89cd5a3e654f196c3dd9007030707f", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -64,6 +64,14 @@ extern crate syntax;\n extern crate syntax_ext;\n extern crate syntax_pos;\n \n+// Note that the linkage here should be all that we need, on Linux we're not\n+// prefixing the symbols here so this should naturally override our default\n+// allocator. On OSX it should override via the zone allocator. We shouldn't\n+// enable this by default on other platforms, so other platforms aren't handled\n+// here yet.\n+#[cfg(feature = \"jemalloc-sys\")]\n+extern crate jemalloc_sys;\n+\n use driver::CompileController;\n use pretty::{PpMode, UserIdentifiedItem};\n "}, {"sha": "055bca6c34848621d11685de781c6c8db554b216", "filename": "src/librustc_target/spec/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -14,7 +14,7 @@ pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();\n     // https://developer.android.com/ndk/guides/abis.html#armeabi\n     base.features = \"+strict-align,+v5te\".to_string();\n-    base.max_atomic_width = Some(64);\n+    base.max_atomic_width = Some(32);\n \n     Ok(Target {\n         llvm_target: \"arm-linux-androideabi\".to_string(),"}, {"sha": "ec822fddef3eba1b2638f82869d131a2b8ec9e46", "filename": "src/rustc/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Frustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Frustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.toml?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -10,3 +10,6 @@ path = \"rustc.rs\"\n [dependencies]\n rustc_target = { path = \"../librustc_target\" }\n rustc_driver = { path = \"../librustc_driver\" }\n+\n+[features]\n+jemalloc = ['rustc_driver/jemalloc-sys']"}, {"sha": "466d2fa0d2bd627b4461c52158dc7e8cdc30a8ed", "filename": "src/tools/tidy/src/cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016eaf88f5bca6c9253eedec713c6ddcd6da2906/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs?ref=016eaf88f5bca6c9253eedec713c6ddcd6da2906", "patch": "@@ -84,7 +84,7 @@ fn verify(tomlfile: &Path, libfile: &Path, bad: &mut bool) {\n \n         // This is intentional, this dependency just makes the crate available\n         // for others later on. Cover cases\n-        let whitelisted = whitelisted || krate.starts_with(\"panic\");\n+        let whitelisted = krate.starts_with(\"panic\");\n         if toml.contains(\"name = \\\"std\\\"\") && whitelisted {\n             continue\n         }"}]}