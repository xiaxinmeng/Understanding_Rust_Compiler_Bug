{"sha": "11af20b156dbe9ac158f1456083e296274de5a54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYWYyMGIxNTZkYmU5YWMxNThmMTQ1NjA4M2UyOTYyNzRkZTVhNTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-24T17:07:20Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-06T19:56:15Z"}, "message": "Fix panic with reported const_eval promoted error", "tree": {"sha": "86441d3de4a7ef23e06a46468b0d7c487f3ae21c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86441d3de4a7ef23e06a46468b0d7c487f3ae21c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11af20b156dbe9ac158f1456083e296274de5a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11af20b156dbe9ac158f1456083e296274de5a54", "html_url": "https://github.com/rust-lang/rust/commit/11af20b156dbe9ac158f1456083e296274de5a54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11af20b156dbe9ac158f1456083e296274de5a54/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "html_url": "https://github.com/rust-lang/rust/commit/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "c1ce5409ab2c827ba9a58e63df9fb1520add39c8", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11af20b156dbe9ac158f1456083e296274de5a54/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11af20b156dbe9ac158f1456083e296274de5a54/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=11af20b156dbe9ac158f1456083e296274de5a54", "patch": "@@ -1134,7 +1134,7 @@ pub fn trans_place<'a, 'tcx: 'a>(\n     match place {\n         Place::Base(base) => match base {\n             PlaceBase::Local(local) => fx.get_local_place(*local),\n-            PlaceBase::Promoted(promoted) => crate::constant::trans_promoted(fx, promoted.0),\n+            PlaceBase::Promoted(data) => crate::constant::trans_promoted(fx, data.0, data.1),\n             PlaceBase::Static(static_) => crate::constant::codegen_static_ref(fx, static_),\n         }\n         Place::Projection(projection) => {"}, {"sha": "19fce47358c54560255aa143c4a3afed942630a6", "filename": "src/constant.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/11af20b156dbe9ac158f1456083e296274de5a54/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11af20b156dbe9ac158f1456083e296274de5a54/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=11af20b156dbe9ac158f1456083e296274de5a54", "patch": "@@ -53,16 +53,22 @@ pub fn codegen_static_ref<'a, 'tcx: 'a>(\n pub fn trans_promoted<'a, 'tcx: 'a>(\n     fx: &mut FunctionCx<'a, 'tcx, impl Backend>,\n     promoted: Promoted,\n+    dest_ty: Ty<'tcx>,\n ) -> CPlace<'tcx> {\n-    let const_ = fx\n+    match fx\n         .tcx\n         .const_eval(ParamEnv::reveal_all().and(GlobalId {\n             instance: fx.instance,\n             promoted: Some(promoted),\n         }))\n-        .unwrap();\n-\n-    trans_const_place(fx, const_)\n+    {\n+        Ok(const_) => {\n+            let cplace = trans_const_place(fx, const_);\n+            debug_assert_eq!(cplace.layout(), fx.layout_of(dest_ty));\n+            cplace\n+        }\n+        Err(_) => crate::trap::trap_unreachable_ret_place(fx, fx.layout_of(dest_ty)),\n+    }\n }\n \n pub fn trans_constant<'a, 'tcx: 'a>("}, {"sha": "9a517ae774927bdef0aa01c3c33df60424a15620", "filename": "src/trap.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/11af20b156dbe9ac158f1456083e296274de5a54/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11af20b156dbe9ac158f1456083e296274de5a54/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=11af20b156dbe9ac158f1456083e296274de5a54", "patch": "@@ -16,3 +16,10 @@ pub fn trap_unreachable_ret_value<'tcx>(fx: &mut FunctionCx<'_, 'tcx, impl crane\n     let zero = fx.bcx.ins().iconst(fx.pointer_type, 0);\n     CValue::ByRef(zero, dest_layout)\n }\n+\n+pub fn trap_unreachable_ret_place<'tcx>(fx: &mut FunctionCx<'_, 'tcx, impl cranelift_module::Backend>, dest_layout: TyLayout<'tcx>) -> CPlace<'tcx> {\n+    let true_ = fx.bcx.ins().iconst(types::I32, 1);\n+    fx.bcx.ins().trapnz(true_, TrapCode::User(!0));\n+    let zero = fx.bcx.ins().iconst(fx.pointer_type, 0);\n+    CPlace::Addr(zero, None, dest_layout)\n+}"}]}