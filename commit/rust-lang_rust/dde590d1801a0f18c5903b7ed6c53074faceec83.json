{"sha": "dde590d1801a0f18c5903b7ed6c53074faceec83", "node_id": "C_kwDOAAsO6NoAKGRkZTU5MGQxODAxYTBmMThjNTkwM2I3ZWQ2YzUzMDc0ZmFjZWVjODM", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-03-27T07:15:21Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-05-05T03:20:29Z"}, "message": "Update `int_roundings` methods from feedback", "tree": {"sha": "3780d38bb8e6758a88f3ed1fa29807231620cc02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3780d38bb8e6758a88f3ed1fa29807231620cc02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dde590d1801a0f18c5903b7ed6c53074faceec83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYnNCfQAKCRC4DhnkZita\npCN3AP9VVcQeZiaRtSAZb9XQbW/2oO2NUw0kiFDWbKhDrLIx2QD9HTCmRD4NHjuw\n5U6yWwbkmD+zzhGY+5n+6HepsGfzyQU=\n=t+GF\n-----END PGP SIGNATURE-----", "payload": "tree 3780d38bb8e6758a88f3ed1fa29807231620cc02\nparent 4c60a0ea5b2385d7400df9db1ad04e96f2a4c154\nauthor Jacob Pratt <jacob@jhpratt.dev> 1648365321 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1651720829 -0400\n\nUpdate `int_roundings` methods from feedback\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dde590d1801a0f18c5903b7ed6c53074faceec83", "html_url": "https://github.com/rust-lang/rust/commit/dde590d1801a0f18c5903b7ed6c53074faceec83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dde590d1801a0f18c5903b7ed6c53074faceec83/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c60a0ea5b2385d7400df9db1ad04e96f2a4c154", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c60a0ea5b2385d7400df9db1ad04e96f2a4c154", "html_url": "https://github.com/rust-lang/rust/commit/4c60a0ea5b2385d7400df9db1ad04e96f2a4c154"}], "stats": {"total": 70, "additions": 46, "deletions": 24}, "files": [{"sha": "b5c7982a5a871170a21dcdb1395fc827313a2bc0", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -2015,7 +2015,12 @@ macro_rules! int_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `rhs` is 0 or the division results in overflow.\n+        /// This function will panic if `rhs` is zero.\n+        ///\n+        /// ## Overflow behavior\n+        ///\n+        /// On overflow, this function will panic if overflow checks are enabled (default in debug\n+        /// mode) and wrap if overflow checks are disabled (default in release mode).\n         ///\n         /// # Examples\n         ///\n@@ -2050,7 +2055,12 @@ macro_rules! int_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `rhs` is 0 or the division results in overflow.\n+        /// This function will panic if `rhs` is zero.\n+        ///\n+        /// ## Overflow behavior\n+        ///\n+        /// On overflow, this function will panic if overflow checks are enabled (default in debug\n+        /// mode) and wrap if overflow checks are disabled (default in release mode).\n         ///\n         /// # Examples\n         ///\n@@ -2088,7 +2098,12 @@ macro_rules! int_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `rhs` is 0 or the operation results in overflow.\n+        /// This function will panic if `rhs` is zero.\n+        ///\n+        /// ## Overflow behavior\n+        ///\n+        /// On overflow, this function will panic if overflow checks are enabled (default in debug\n+        /// mode) and wrap if overflow checks are disabled (default in release mode).\n         ///\n         /// # Examples\n         ///\n@@ -2157,7 +2172,6 @@ macro_rules! int_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n-        #[rustc_inherit_overflow_checks]\n         pub const fn checked_next_multiple_of(self, rhs: Self) -> Option<Self> {\n             // This would otherwise fail when calculating `r` when self == T::MIN.\n             if rhs == -1 {"}, {"sha": "048d6bafcdecd018dae127660878b36dfe565023", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -2020,7 +2020,7 @@ macro_rules! uint_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `rhs` is 0.\n+        /// This function will panic if `rhs` is zero.\n         ///\n         /// # Examples\n         ///\n@@ -2034,7 +2034,6 @@ macro_rules! uint_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n-        #[rustc_inherit_overflow_checks]\n         pub const fn div_floor(self, rhs: Self) -> Self {\n             self / rhs\n         }\n@@ -2043,7 +2042,12 @@ macro_rules! uint_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `rhs` is 0.\n+        /// This function will panic if `rhs` is zero.\n+        ///\n+        /// ## Overflow behavior\n+        ///\n+        /// On overflow, this function will panic if overflow checks are enabled (default in debug\n+        /// mode) and wrap if overflow checks are disabled (default in release mode).\n         ///\n         /// # Examples\n         ///\n@@ -2073,7 +2077,12 @@ macro_rules! uint_impl {\n         ///\n         /// # Panics\n         ///\n-        /// This function will panic if `rhs` is 0 or the operation results in overflow.\n+        /// This function will panic if `rhs` is zero.\n+        ///\n+        /// ## Overflow behavior\n+        ///\n+        /// On overflow, this function will panic if overflow checks are enabled (default in debug\n+        /// mode) and wrap if overflow checks are disabled (default in release mode).\n         ///\n         /// # Examples\n         ///\n@@ -2097,7 +2106,7 @@ macro_rules! uint_impl {\n         }\n \n         /// Calculates the smallest value greater than or equal to `self` that\n-        /// is a multiple of `rhs`. Returns `None` is `rhs` is zero or the\n+        /// is a multiple of `rhs`. Returns `None` if `rhs` is zero or the\n         /// operation would result in overflow.\n         ///\n         /// # Examples\n@@ -2115,7 +2124,6 @@ macro_rules! uint_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n-        #[rustc_inherit_overflow_checks]\n         pub const fn checked_next_multiple_of(self, rhs: Self) -> Option<Self> {\n             match try_opt!(self.checked_rem(rhs)) {\n                 0 => Some(self),"}, {"sha": "1ddd20f33d0b17cec89d08e393422cbb0dd0b5ce", "filename": "library/core/tests/num/i128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi128.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-int_module!(i128, i128);\n+int_module!(i128);"}, {"sha": "c7aa9fff964ede3deee081616195518c3e9e1232", "filename": "library/core/tests/num/i16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi16.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-int_module!(i16, i16);\n+int_module!(i16);"}, {"sha": "efd5b1596a80d25e09d605e8f088ec8c34c94509", "filename": "library/core/tests/num/i32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi32.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1,4 +1,4 @@\n-int_module!(i32, i32);\n+int_module!(i32);\n \n #[test]\n fn test_arith_operation() {"}, {"sha": "93d23c10adf7e7fb3c5672a7addb81d39c02ed56", "filename": "library/core/tests/num/i64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi64.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-int_module!(i64, i64);\n+int_module!(i64);"}, {"sha": "887d4f17d25ffd204d1e15ab5da12f2440b82ff9", "filename": "library/core/tests/num/i8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi8.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-int_module!(i8, i8);\n+int_module!(i8);"}, {"sha": "8b84a78e6be08823a33a1abb9ad07f7724778d73", "filename": "library/core/tests/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fint_macros.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1,9 +1,9 @@\n macro_rules! int_module {\n-    ($T:ident, $T_i:ident) => {\n+    ($T:ident) => {\n         #[cfg(test)]\n         mod tests {\n             use core::ops::{BitAnd, BitOr, BitXor, Not, Shl, Shr};\n-            use core::$T_i::*;\n+            use core::$T::*;\n \n             use crate::num;\n "}, {"sha": "a7b0f9effefb97f0431350b1bec9ca3875f7abd1", "filename": "library/core/tests/num/u128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fu128.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-uint_module!(u128, u128);\n+uint_module!(u128);"}, {"sha": "010596a34a56cbce1ffe2f96ec065d073289e75c", "filename": "library/core/tests/num/u16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fu16.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-uint_module!(u16, u16);\n+uint_module!(u16);"}, {"sha": "687d3bbaa907ffe7e9da11e7edda52eee8447fda", "filename": "library/core/tests/num/u32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fu32.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-uint_module!(u32, u32);\n+uint_module!(u32);"}, {"sha": "ee55071e949960142d374cfd21b24a01f2201cdb", "filename": "library/core/tests/num/u64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fu64.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-uint_module!(u64, u64);\n+uint_module!(u64);"}, {"sha": "12b038ce0f75cab97dceafa4f534eff2b4c06b20", "filename": "library/core/tests/num/u8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fu8.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1 +1 @@\n-uint_module!(u8, u8);\n+uint_module!(u8);"}, {"sha": "93ae620c23302413da250988dd8b0592d8c19d8a", "filename": "library/core/tests/num/uint_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde590d1801a0f18c5903b7ed6c53074faceec83/library%2Fcore%2Ftests%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fuint_macros.rs?ref=dde590d1801a0f18c5903b7ed6c53074faceec83", "patch": "@@ -1,9 +1,9 @@\n macro_rules! uint_module {\n-    ($T:ident, $T_i:ident) => {\n+    ($T:ident) => {\n         #[cfg(test)]\n         mod tests {\n             use core::ops::{BitAnd, BitOr, BitXor, Not, Shl, Shr};\n-            use core::$T_i::*;\n+            use core::$T::*;\n             use std::str::FromStr;\n \n             use crate::num;"}]}