{"sha": "855c2d130fb70da1643cf8f696c7aad7537aef34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NWMyZDEzMGZiNzBkYTE2NDNjZjhmNjk2YzdhYWQ3NTM3YWVmMzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-28T05:52:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-28T05:52:47Z"}, "message": "Auto merge of #83713 - spastorino:revert-pub-macro-rules, r=nikomatsakis\n\nRevert \"Rollup merge of #82296 - spastorino:pubrules, r=nikomatsakis\"\n\nThis reverts commit e2561c58a41023a14e0e583113dcf55e1ecb236a, reversing\nchanges made to 2982ba50fc4bb629b8fe4108a81cb2f9b053510b.\n\nAs discussed in #83641 this feature is not complete and in particular doesn't work cross macros and given that this is not going to be included in edition 2021 nobody seems to be trying to fix the underlying problem. When can add this again I guess, whenever somebody has the time to make it work cross crates.\n\nr? `@nikomatsakis`", "tree": {"sha": "41829a9612ab210fc11b74691bd783c44190db85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41829a9612ab210fc11b74691bd783c44190db85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/855c2d130fb70da1643cf8f696c7aad7537aef34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/855c2d130fb70da1643cf8f696c7aad7537aef34", "html_url": "https://github.com/rust-lang/rust/commit/855c2d130fb70da1643cf8f696c7aad7537aef34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/855c2d130fb70da1643cf8f696c7aad7537aef34/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "537544b1061467ee4b74ef7f552fab3d513e5caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/537544b1061467ee4b74ef7f552fab3d513e5caf", "html_url": "https://github.com/rust-lang/rust/commit/537544b1061467ee4b74ef7f552fab3d513e5caf"}, {"sha": "83767d97f0ac4e644340792dd7209bbcd9306647", "url": "https://api.github.com/repos/rust-lang/rust/commits/83767d97f0ac4e644340792dd7209bbcd9306647", "html_url": "https://github.com/rust-lang/rust/commit/83767d97f0ac4e644340792dd7209bbcd9306647"}], "stats": {"total": 219, "additions": 37, "deletions": 182}, "files": [{"sha": "da516f5cb412928c4272ae7bdaa52fefde992f74", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -686,7 +686,6 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n         // involved, so we only emit errors where there are no other parsing errors.\n         gate_all!(destructuring_assignment, \"destructuring assignments are unstable\");\n     }\n-    gate_all!(pub_macro_rules, \"`pub` on `macro_rules` items is unstable\");\n \n     // All uses of `gate_all!` below this point were added in #65742,\n     // and subsequently disabled (with the non-early gating readded)."}, {"sha": "304d7ede625a76ba0f1a166f24af3a38996025cd", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -628,9 +628,6 @@ declare_features! (\n     /// Allows macro attributes to observe output of `#[derive]`.\n     (active, macro_attributes_in_derive_output, \"1.51.0\", Some(81119), None),\n \n-    /// Allows `pub` on `macro_rules` items.\n-    (active, pub_macro_rules, \"1.52.0\", Some(78855), None),\n-\n     /// Allows the use of type alias impl trait in function return positions\n     (active, min_type_alias_impl_trait, \"1.52.0\", Some(63063), None),\n "}, {"sha": "fa8ef182aeddf2a0eaf815fe6503742cbb304697", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -134,6 +134,8 @@ declare_features! (\n            which is available from cargo build scripts with `cargo:rustc-link-arg` now\")),\n     /// Allows using `#[main]` to replace the entrypoint `#[lang = \"start\"]` calls.\n     (removed, main, \"1.53.0\", Some(29634), None, None),\n+    (removed, pub_macro_rules, \"1.53.0\", Some(78855), None,\n+     Some(\"removed due to being incomplete, in particular it does not work across crates\")),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: removed features"}, {"sha": "acf3867cf8920608c2ad4b40858c0de037656210", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -1478,7 +1478,15 @@ impl<'a> Parser<'a> {\n         let vstr = pprust::vis_to_string(vis);\n         let vstr = vstr.trim_end();\n         if macro_rules {\n-            self.sess.gated_spans.gate(sym::pub_macro_rules, vis.span);\n+            let msg = format!(\"can't qualify macro_rules invocation with `{}`\", vstr);\n+            self.struct_span_err(vis.span, &msg)\n+                .span_suggestion(\n+                    vis.span,\n+                    \"try exporting the macro\",\n+                    \"#[macro_export]\".to_owned(),\n+                    Applicability::MaybeIncorrect, // speculative\n+                )\n+                .emit();\n         } else {\n             self.struct_span_err(vis.span, \"can't qualify macro invocation with `pub`\")\n                 .span_suggestion("}, {"sha": "b5c95cfcb29cbe46e57f414ecef95e53bed03674", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -1230,13 +1230,13 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n         };\n \n         let res = Res::Def(DefKind::Macro(ext.macro_kind()), def_id.to_def_id());\n-        let is_macro_export = self.r.session.contains_name(&item.attrs, sym::macro_export);\n         self.r.macro_map.insert(def_id.to_def_id(), ext);\n         self.r.local_macro_def_scopes.insert(def_id, parent_scope.module);\n \n-        if macro_rules && matches!(item.vis.kind, ast::VisibilityKind::Inherited) {\n+        if macro_rules {\n             let ident = ident.normalize_to_macros_2_0();\n             self.r.macro_names.insert(ident);\n+            let is_macro_export = self.r.session.contains_name(&item.attrs, sym::macro_export);\n             let vis = if is_macro_export {\n                 ty::Visibility::Public\n             } else {\n@@ -1261,11 +1261,6 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 }),\n             ))\n         } else {\n-            if is_macro_export {\n-                let what = if macro_rules { \"`macro_rules` with `pub`\" } else { \"`macro` items\" };\n-                let msg = format!(\"`#[macro_export]` cannot be used on {what}\");\n-                self.r.session.span_err(item.span, &msg);\n-            }\n             let module = parent_scope.module;\n             let vis = match item.kind {\n                 // Visibilities must not be resolved non-speculatively twice"}, {"sha": "c5393703f70919687a92b223d99b6bb6f244453c", "filename": "src/test/ui/did_you_mean/pub-macro-rules.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.rs?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -0,0 +1,16 @@\n+#[macro_use] mod bleh {\n+    pub macro_rules! foo { //~ ERROR can't qualify macro_rules invocation\n+        ($n:ident) => (\n+            fn $n () -> i32 {\n+                1\n+            }\n+        )\n+    }\n+\n+}\n+\n+foo!(meh);\n+\n+fn main() {\n+    println!(\"{}\", meh());\n+}"}, {"sha": "0bde5783b8cc615e1784c6f31e491dbbeb1882b5", "filename": "src/test/ui/did_you_mean/pub-macro-rules.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/855c2d130fb70da1643cf8f696c7aad7537aef34/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/855c2d130fb70da1643cf8f696c7aad7537aef34/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.stderr?ref=855c2d130fb70da1643cf8f696c7aad7537aef34", "patch": "@@ -0,0 +1,8 @@\n+error: can't qualify macro_rules invocation with `pub`\n+  --> $DIR/pub-macro-rules.rs:2:5\n+   |\n+LL |     pub macro_rules! foo {\n+   |     ^^^ help: try exporting the macro: `#[macro_export]`\n+\n+error: aborting due to previous error\n+"}, {"sha": "5504ec317ae59d597ff40b03308b645a6ce0b492", "filename": "src/test/ui/feature-gates/feature-gate-pub_macro_rules.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-pub_macro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-pub_macro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-pub_macro_rules.rs?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,10 +0,0 @@\n-pub macro_rules! m1 { () => {} } //~ ERROR `pub` on `macro_rules` items is unstable\n-\n-#[cfg(FALSE)]\n-pub macro_rules! m2 { () => {} } //~ ERROR `pub` on `macro_rules` items is unstable\n-\n-pub(crate) macro_rules! m3 { () => {} } //~ ERROR `pub` on `macro_rules` items is unstable\n-\n-pub(in self) macro_rules! m4 { () => {} } //~ ERROR `pub` on `macro_rules` items is unstable\n-\n-fn main() {}"}, {"sha": "bfaec398d9a976fc58587b6aec8d4350a392abc2", "filename": "src/test/ui/feature-gates/feature-gate-pub_macro_rules.stderr", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-pub_macro_rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-pub_macro_rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-pub_macro_rules.stderr?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,39 +0,0 @@\n-error[E0658]: `pub` on `macro_rules` items is unstable\n-  --> $DIR/feature-gate-pub_macro_rules.rs:1:1\n-   |\n-LL | pub macro_rules! m1 { () => {} }\n-   | ^^^\n-   |\n-   = note: see issue #78855 <https://github.com/rust-lang/rust/issues/78855> for more information\n-   = help: add `#![feature(pub_macro_rules)]` to the crate attributes to enable\n-\n-error[E0658]: `pub` on `macro_rules` items is unstable\n-  --> $DIR/feature-gate-pub_macro_rules.rs:4:1\n-   |\n-LL | pub macro_rules! m2 { () => {} }\n-   | ^^^\n-   |\n-   = note: see issue #78855 <https://github.com/rust-lang/rust/issues/78855> for more information\n-   = help: add `#![feature(pub_macro_rules)]` to the crate attributes to enable\n-\n-error[E0658]: `pub` on `macro_rules` items is unstable\n-  --> $DIR/feature-gate-pub_macro_rules.rs:6:1\n-   |\n-LL | pub(crate) macro_rules! m3 { () => {} }\n-   | ^^^^^^^^^^\n-   |\n-   = note: see issue #78855 <https://github.com/rust-lang/rust/issues/78855> for more information\n-   = help: add `#![feature(pub_macro_rules)]` to the crate attributes to enable\n-\n-error[E0658]: `pub` on `macro_rules` items is unstable\n-  --> $DIR/feature-gate-pub_macro_rules.rs:8:1\n-   |\n-LL | pub(in self) macro_rules! m4 { () => {} }\n-   | ^^^^^^^^^^^^\n-   |\n-   = note: see issue #78855 <https://github.com/rust-lang/rust/issues/78855> for more information\n-   = help: add `#![feature(pub_macro_rules)]` to the crate attributes to enable\n-\n-error: aborting due to 4 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "467c6ba7b78e4caa60eaf32ea917dc6f0b00cf91", "filename": "src/test/ui/macros/macro-export-on-modularized-macros.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fmacro-export-on-modularized-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fmacro-export-on-modularized-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-export-on-modularized-macros.rs?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,11 +0,0 @@\n-#![feature(decl_macro)]\n-#![feature(pub_macro_rules)]\n-\n-#[macro_export]\n-macro m1() {} //~ ERROR `#[macro_export]` cannot be used on `macro` items\n-\n-#[macro_export]\n-pub macro_rules! m2 { () => {} }\n-//~^ ERROR `#[macro_export]` cannot be used on `macro_rules` with `pub`\n-\n-fn main() {}"}, {"sha": "8bb031e12cba2c54e54a490328bfb2750b797fc0", "filename": "src/test/ui/macros/macro-export-on-modularized-macros.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fmacro-export-on-modularized-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fmacro-export-on-modularized-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-export-on-modularized-macros.stderr?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,14 +0,0 @@\n-error: `#[macro_export]` cannot be used on `macro` items\n-  --> $DIR/macro-export-on-modularized-macros.rs:5:1\n-   |\n-LL | macro m1() {}\n-   | ^^^^^^^^^^^^^\n-\n-error: `#[macro_export]` cannot be used on `macro_rules` with `pub`\n-  --> $DIR/macro-export-on-modularized-macros.rs:8:1\n-   |\n-LL | pub macro_rules! m2 { () => {} }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "bdb4c73f18b1878ff4d0a94eeccf9db4fbad8651", "filename": "src/test/ui/macros/pub-macro-rules-fail.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules-fail.rs?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,28 +0,0 @@\n-#![feature(pub_macro_rules)]\n-\n-#[macro_use]\n-mod m {\n-    pub macro_rules! mac { () => {} }\n-\n-    // `pub` `macro_rules` cannot be redefined in the same module.\n-    pub macro_rules! mac { () => {} } //~ ERROR the name `mac` is defined multiple times\n-\n-    pub(self) macro_rules! private_mac { () => {} }\n-}\n-\n-const _: () = {\n-    pub macro_rules! block_mac { () => {} }\n-};\n-\n-mod n {\n-    // Scope of `pub` `macro_rules` is not extended by `#[macro_use]`.\n-    mac!(); //~ ERROR cannot find macro `mac` in this scope\n-\n-    // `pub` `macro_rules` doesn't put the macro into the root module, unlike `#[macro_export]`.\n-    crate::mac!(); //~ ERROR failed to resolve: maybe a missing crate `mac`\n-    crate::block_mac!(); //~ ERROR failed to resolve: maybe a missing crate `block_mac`\n-\n-    crate::m::private_mac!(); //~ ERROR macro `private_mac` is private\n-}\n-\n-fn main() {}"}, {"sha": "588d79dd76a4b9c76b1a1176304df7001c1244c5", "filename": "src/test/ui/macros/pub-macro-rules-fail.stderr", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules-fail.stderr?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,48 +0,0 @@\n-error[E0428]: the name `mac` is defined multiple times\n-  --> $DIR/pub-macro-rules-fail.rs:8:5\n-   |\n-LL |     pub macro_rules! mac { () => {} }\n-   |     -------------------- previous definition of the macro `mac` here\n-...\n-LL |     pub macro_rules! mac { () => {} }\n-   |     ^^^^^^^^^^^^^^^^^^^^ `mac` redefined here\n-   |\n-   = note: `mac` must be defined only once in the macro namespace of this module\n-\n-error[E0433]: failed to resolve: maybe a missing crate `mac`?\n-  --> $DIR/pub-macro-rules-fail.rs:22:12\n-   |\n-LL |     crate::mac!();\n-   |            ^^^ maybe a missing crate `mac`?\n-\n-error[E0433]: failed to resolve: maybe a missing crate `block_mac`?\n-  --> $DIR/pub-macro-rules-fail.rs:23:12\n-   |\n-LL |     crate::block_mac!();\n-   |            ^^^^^^^^^ maybe a missing crate `block_mac`?\n-\n-error: cannot find macro `mac` in this scope\n-  --> $DIR/pub-macro-rules-fail.rs:19:5\n-   |\n-LL |     mac!();\n-   |     ^^^\n-   |\n-   = note: consider importing this macro:\n-           m::mac\n-\n-error[E0603]: macro `private_mac` is private\n-  --> $DIR/pub-macro-rules-fail.rs:25:15\n-   |\n-LL |     crate::m::private_mac!();\n-   |               ^^^^^^^^^^^ private macro\n-   |\n-note: the macro `private_mac` is defined here\n-  --> $DIR/pub-macro-rules-fail.rs:10:5\n-   |\n-LL |     pub(self) macro_rules! private_mac { () => {} }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 5 previous errors\n-\n-Some errors have detailed explanations: E0428, E0433, E0603.\n-For more information about an error, try `rustc --explain E0428`."}, {"sha": "cd4a845f7c07dd3cc8bd6a834612b36772980566", "filename": "src/test/ui/macros/pub-macro-rules.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537544b1061467ee4b74ef7f552fab3d513e5caf/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fpub-macro-rules.rs?ref=537544b1061467ee4b74ef7f552fab3d513e5caf", "patch": "@@ -1,20 +0,0 @@\n-// check-pass\n-\n-#![feature(pub_macro_rules)]\n-\n-mod m {\n-    // `pub` `macro_rules` can be used earlier in item order than they are defined.\n-    foo!();\n-\n-    pub macro_rules! foo { () => {} }\n-\n-    // `pub(...)` works too.\n-    pub(super) macro_rules! bar { () => {} }\n-}\n-\n-// `pub` `macro_rules` are available by module path.\n-m::foo!();\n-\n-m::bar!();\n-\n-fn main() {}"}]}