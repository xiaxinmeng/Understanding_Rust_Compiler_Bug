{"sha": "158bf9aa443c5ea93ff4b3def8c7220632e45442", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OGJmOWFhNDQzYzVlYTkzZmY0YjNkZWY4YzcyMjA2MzJlNDU0NDI=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-31T18:56:51Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-11-02T17:08:38Z"}, "message": "Fix incorrect suggestion for macro expansion in `deref_addrof` lint", "tree": {"sha": "dc3d547851f7bac17d1dadbcee869351e1caaf6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc3d547851f7bac17d1dadbcee869351e1caaf6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/158bf9aa443c5ea93ff4b3def8c7220632e45442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/158bf9aa443c5ea93ff4b3def8c7220632e45442", "html_url": "https://github.com/rust-lang/rust/commit/158bf9aa443c5ea93ff4b3def8c7220632e45442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/158bf9aa443c5ea93ff4b3def8c7220632e45442/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c45255b14573e9cf641a766d225bc73ae7f36fc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c45255b14573e9cf641a766d225bc73ae7f36fc8", "html_url": "https://github.com/rust-lang/rust/commit/c45255b14573e9cf641a766d225bc73ae7f36fc8"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "f1555ab3ec187206d2ecbbd5432679a86ac12acb", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/158bf9aa443c5ea93ff4b3def8c7220632e45442/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/158bf9aa443c5ea93ff4b3def8c7220632e45442/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=158bf9aa443c5ea93ff4b3def8c7220632e45442", "patch": "@@ -46,13 +46,19 @@ impl EarlyLintPass for DerefAddrOf {\n             if !in_macro(addrof_target.span);\n             then {\n                 let mut applicability = Applicability::MachineApplicable;\n+                let sugg = if e.span.from_expansion() {\n+                    let snip = snippet_with_applicability(cx, e.span, \"_\", &mut applicability);\n+                    snip.trim_start_matches(|c| c == '&' || c == '*').to_string()\n+                } else {\n+                    snippet_with_applicability(cx, addrof_target.span, \"_\", &mut applicability).to_string()\n+                };\n                 span_lint_and_sugg(\n                     cx,\n                     DEREF_ADDROF,\n                     e.span,\n                     \"immediately dereferencing a reference\",\n                     \"try this\",\n-                    format!(\"{}\", snippet_with_applicability(cx, addrof_target.span, \"_\", &mut applicability)),\n+                    sugg,\n                     applicability,\n                 );\n             }"}, {"sha": "8cdec4201fefcf2dd6379d51104a933d81d63443", "filename": "tests/ui/deref_addrof.fixed", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/158bf9aa443c5ea93ff4b3def8c7220632e45442/tests%2Fui%2Fderef_addrof.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/158bf9aa443c5ea93ff4b3def8c7220632e45442/tests%2Fui%2Fderef_addrof.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.fixed?ref=158bf9aa443c5ea93ff4b3def8c7220632e45442", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+#![warn(clippy::deref_addrof)]\n \n fn get_number() -> usize {\n     10\n@@ -10,7 +11,6 @@ fn get_reference(n: &usize) -> &usize {\n \n #[allow(clippy::many_single_char_names, clippy::double_parens)]\n #[allow(unused_variables, unused_parens)]\n-#[warn(clippy::deref_addrof)]\n fn main() {\n     let a = 10;\n     let aref = &a;\n@@ -37,3 +37,16 @@ fn main() {\n \n     let b = *aref;\n }\n+\n+macro_rules! m {\n+    ($visitor: expr) => {\n+        $visitor\n+    };\n+}\n+\n+pub struct S;\n+impl S {\n+    pub fn f(&self) -> &Self {\n+        m!(self)\n+    }\n+}"}, {"sha": "6433e63ca5901349758fe9ab36188a955085fdc5", "filename": "tests/ui/deref_addrof.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/158bf9aa443c5ea93ff4b3def8c7220632e45442/tests%2Fui%2Fderef_addrof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/158bf9aa443c5ea93ff4b3def8c7220632e45442/tests%2Fui%2Fderef_addrof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.rs?ref=158bf9aa443c5ea93ff4b3def8c7220632e45442", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+#![warn(clippy::deref_addrof)]\n \n fn get_number() -> usize {\n     10\n@@ -10,7 +11,6 @@ fn get_reference(n: &usize) -> &usize {\n \n #[allow(clippy::many_single_char_names, clippy::double_parens)]\n #[allow(unused_variables, unused_parens)]\n-#[warn(clippy::deref_addrof)]\n fn main() {\n     let a = 10;\n     let aref = &a;\n@@ -37,3 +37,16 @@ fn main() {\n \n     let b = **&aref;\n }\n+\n+macro_rules! m {\n+    ($visitor: expr) => {\n+        *&$visitor\n+    };\n+}\n+\n+pub struct S;\n+impl S {\n+    pub fn f(&self) -> &Self {\n+        m!(self)\n+    }\n+}"}, {"sha": "1fe49ad49cd6b1a15d0e333b3b05c93a71f6422b", "filename": "tests/ui/deref_addrof.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/158bf9aa443c5ea93ff4b3def8c7220632e45442/tests%2Fui%2Fderef_addrof.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/158bf9aa443c5ea93ff4b3def8c7220632e45442/tests%2Fui%2Fderef_addrof.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.stderr?ref=158bf9aa443c5ea93ff4b3def8c7220632e45442", "patch": "@@ -48,5 +48,16 @@ error: immediately dereferencing a reference\n LL |     let b = **&aref;\n    |              ^^^^^^ help: try this: `aref`\n \n-error: aborting due to 8 previous errors\n+error: immediately dereferencing a reference\n+  --> $DIR/deref_addrof.rs:43:9\n+   |\n+LL |         *&$visitor\n+   |         ^^^^^^^^^^ help: try this: `$visitor`\n+...\n+LL |         m!(self)\n+   |         -------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 9 previous errors\n "}]}