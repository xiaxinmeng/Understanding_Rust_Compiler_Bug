{"sha": "e588f2fd7b0445944f15341f9b45051f440b82b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ODhmMmZkN2IwNDQ1OTQ0ZjE1MzQxZjliNDUwNTFmNDQwYjgyYjQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-31T07:23:42Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-31T07:23:42Z"}, "message": "Make definitive_tactic more generic via enum Separator", "tree": {"sha": "79f4b9e07f728a2cf49f129463da300a92a71f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79f4b9e07f728a2cf49f129463da300a92a71f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e588f2fd7b0445944f15341f9b45051f440b82b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e588f2fd7b0445944f15341f9b45051f440b82b4", "html_url": "https://github.com/rust-lang/rust/commit/e588f2fd7b0445944f15341f9b45051f440b82b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e588f2fd7b0445944f15341f9b45051f440b82b4/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "url": "https://api.github.com/repos/rust-lang/rust/commits/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "html_url": "https://github.com/rust-lang/rust/commit/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54"}], "stats": {"total": 78, "additions": 58, "deletions": 20}, "files": [{"sha": "cf2bc33724790765fb8dd86de24311aa5c3f96ce", "filename": "src/expr.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e588f2fd7b0445944f15341f9b45051f440b82b4", "patch": "@@ -24,7 +24,7 @@ use config::{Config, ControlBraceStyle, IndentStyle, MultilineStyle, Style};\n use items::{span_hi_for_arg, span_lo_for_arg};\n use lists::{definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting,\n             struct_lit_shape, struct_lit_tactic, write_list, DefinitiveListTactic, ListFormatting,\n-            ListItem, ListTactic, SeparatorTactic};\n+            ListItem, ListTactic, Separator, SeparatorTactic};\n use macros::{rewrite_macro, MacroPosition};\n use patterns::{can_be_overflowed_pat, TuplePatField};\n use rewrite::{Rewrite, RewriteContext};\n@@ -485,7 +485,7 @@ where\n                 Some(width) => {\n                     let tactic =\n                         ListTactic::LimitedHorizontalVertical(context.config.array_width());\n-                    definitive_tactic(&items, tactic, 2, width)\n+                    definitive_tactic(&items, tactic, Separator::Comma, width)\n                 }\n                 None => DefinitiveListTactic::Vertical,\n             }\n@@ -494,7 +494,7 @@ where\n             definitive_tactic(\n                 &items,\n                 ListTactic::LimitedHorizontalVertical(context.config.array_width()),\n-                2,\n+                Separator::Comma,\n                 nested_shape.width,\n             )\n         } else {\n@@ -595,7 +595,7 @@ fn rewrite_closure_fn_decl(\n     let tactic = definitive_tactic(\n         &item_vec,\n         ListTactic::HorizontalVertical,\n-        2,\n+        Separator::Comma,\n         horizontal_budget,\n     );\n     let arg_shape = match tactic {\n@@ -1674,7 +1674,12 @@ fn rewrite_match_pattern(\n     );\n \n     let items: Vec<_> = pat_strs.into_iter().map(ListItem::from_str).collect();\n-    let tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, 3, pat_shape.width);\n+    let tactic = definitive_tactic(\n+        &items,\n+        ListTactic::HorizontalVertical,\n+        Separator::VerticalBar,\n+        pat_shape.width,\n+    );\n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \" |\",\n@@ -2222,7 +2227,7 @@ where\n     let tactic = definitive_tactic(\n         &*item_vec,\n         ListTactic::LimitedHorizontalVertical(args_max_width),\n-        2,\n+        Separator::Comma,\n         one_line_width,\n     );\n \n@@ -2763,7 +2768,7 @@ where\n     let tactic = definitive_tactic(\n         &item_vec,\n         ListTactic::HorizontalVertical,\n-        2,\n+        Separator::Comma,\n         nested_shape.width,\n     );\n     let fmt = ListFormatting {"}, {"sha": "e0049698bfb014236133948247444c7b6258631a", "filename": "src/imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=e588f2fd7b0445944f15341f9b45051f440b82b4", "patch": "@@ -17,7 +17,7 @@ use Shape;\n use codemap::SpanUtils;\n use config::IndentStyle;\n use lists::{definitive_tactic, itemize_list, write_list, DefinitiveListTactic, ListFormatting,\n-            ListItem, SeparatorTactic};\n+            ListItem, Separator, SeparatorTactic};\n use rewrite::{Rewrite, RewriteContext};\n use types::{rewrite_path, PathContext};\n use utils;\n@@ -451,7 +451,7 @@ fn rewrite_use_list(\n     let tactic = definitive_tactic(\n         &items[first_index..],\n         context.config.imports_layout(),\n-        2,\n+        Separator::Comma,\n         remaining_width,\n     );\n "}, {"sha": "89028afdc1055d446153fefa524e67e871b8fe26", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e588f2fd7b0445944f15341f9b45051f440b82b4", "patch": "@@ -23,7 +23,7 @@ use config::{BraceStyle, Config, Density, IndentStyle, ReturnIndent, Style};\n use expr::{format_expr, is_empty_block, is_simple_block_stmt, rewrite_assign_rhs,\n            rewrite_call_inner, ExprType};\n use lists::{definitive_tactic, itemize_list, write_list, DefinitiveListTactic, ListFormatting,\n-            ListItem, ListTactic, SeparatorTactic};\n+            ListItem, ListTactic, Separator, SeparatorTactic};\n use rewrite::{Rewrite, RewriteContext};\n use types::join_bounds;\n use utils::{colon_spaces, contains_skip, end_typaram, format_defaultness, format_mutability,\n@@ -2241,7 +2241,7 @@ fn rewrite_args(\n     let tactic = definitive_tactic(\n         &arg_items,\n         context.config.fn_args_density().to_list_tactic(),\n-        2,\n+        Separator::Comma,\n         one_line_budget,\n     );\n     let budget = match tactic {\n@@ -2427,7 +2427,7 @@ where\n     let tactic = definitive_tactic(\n         &item_vec,\n         ListTactic::HorizontalVertical,\n-        2,\n+        Separator::Comma,\n         one_line_budget,\n     );\n     let fmt = ListFormatting {\n@@ -2642,7 +2642,12 @@ fn rewrite_where_clause(\n     let item_vec = items.collect::<Vec<_>>();\n     // FIXME: we don't need to collect here if the where_layout isn't\n     // HorizontalVertical.\n-    let tactic = definitive_tactic(&item_vec, context.config.where_layout(), 2, budget);\n+    let tactic = definitive_tactic(\n+        &item_vec,\n+        context.config.where_layout(),\n+        Separator::Comma,\n+        budget,\n+    );\n \n     let mut comma_tactic = context.config.trailing_comma();\n     // Kind of a hack because we don't usually have trailing commas in where clauses."}, {"sha": "048f11a18561a4a9cdd87a0dc33d8fe42b64cab5", "filename": "src/lists.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=e588f2fd7b0445944f15341f9b45051f440b82b4", "patch": "@@ -135,10 +135,28 @@ impl DefinitiveListTactic {\n     }\n }\n \n+/// The type of separator for lists.\n+#[derive(Eq, PartialEq, Debug)]\n+pub enum Separator {\n+    Comma,\n+    VerticalBar,\n+}\n+\n+impl Separator {\n+    pub fn len(&self) -> usize {\n+        match *self {\n+            // 2 = `, `\n+            Separator::Comma => 2,\n+            // 3 = ` | `\n+            Separator::VerticalBar => 3,\n+        }\n+    }\n+}\n+\n pub fn definitive_tactic<I, T>(\n     items: I,\n     tactic: ListTactic,\n-    sep_len: usize,\n+    sep: Separator,\n     width: usize,\n ) -> DefinitiveListTactic\n where\n@@ -160,7 +178,7 @@ where\n     };\n \n     let (sep_count, total_width) = calculate_width(items.clone());\n-    let total_sep_len = sep_len * sep_count.checked_sub(1).unwrap_or(0);\n+    let total_sep_len = sep.len() * sep_count.checked_sub(1).unwrap_or(0);\n     let real_total = total_width + total_sep_len;\n \n     if real_total <= limit && !pre_line_comments &&\n@@ -644,7 +662,7 @@ pub fn struct_lit_tactic(\n             (IndentStyle::Visual, 1) => ListTactic::HorizontalVertical,\n             _ => context.config.struct_lit_multiline_style().to_list_tactic(),\n         };\n-        definitive_tactic(items, prelim_tactic, 2, h_shape.width)\n+        definitive_tactic(items, prelim_tactic, Separator::Comma, h_shape.width)\n     } else {\n         DefinitiveListTactic::Vertical\n     }"}, {"sha": "8e0cf2436dee3b53652edb1fdd17312fd101c36d", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=e588f2fd7b0445944f15341f9b45051f440b82b4", "patch": "@@ -22,7 +22,7 @@ use codemap::SpanUtils;\n use config::{IndentStyle, Style, TypeDensity};\n use expr::{rewrite_pair, rewrite_tuple, rewrite_unary_prefix, wrap_args_with_parens};\n use items::{format_generics_item_list, generics_shape_from_config};\n-use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListTactic,\n+use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListTactic, Separator,\n             SeparatorTactic};\n use rewrite::{Rewrite, RewriteContext};\n use utils::{colon_spaces, extra_offset, format_mutability, last_line_width, mk_sp, wrap_str};\n@@ -348,7 +348,12 @@ where\n \n     let item_vec: Vec<_> = items.collect();\n \n-    let tactic = definitive_tactic(&*item_vec, ListTactic::HorizontalVertical, 2, budget);\n+    let tactic = definitive_tactic(\n+        &*item_vec,\n+        ListTactic::HorizontalVertical,\n+        Separator::Comma,\n+        budget,\n+    );\n \n     let fmt = ListFormatting {\n         tactic: tactic,"}, {"sha": "7f43fa8681a42c0925374f661acb2d4e069a4b8f", "filename": "src/vertical.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e588f2fd7b0445944f15341f9b45051f440b82b4/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=e588f2fd7b0445944f15341f9b45051f440b82b4", "patch": "@@ -20,7 +20,7 @@ use codemap::SpanUtils;\n use comment::contains_comment;\n use expr::rewrite_field;\n use items::{rewrite_struct_field, rewrite_struct_field_prefix};\n-use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListTactic};\n+use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListTactic, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use utils::{contains_skip, mk_sp};\n \n@@ -221,7 +221,12 @@ fn rewrite_aligned_items_inner<T: AlignedItem>(\n         span.hi,\n     ).collect::<Vec<_>>();\n \n-    let tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, 2, one_line_width);\n+    let tactic = definitive_tactic(\n+        &items,\n+        ListTactic::HorizontalVertical,\n+        Separator::Comma,\n+        one_line_width,\n+    );\n \n     let fmt = ListFormatting {\n         tactic: tactic,"}]}