{"sha": "8d5ca62dcdc212d6068c7e3340cf6dbb8577adce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNWNhNjJkY2RjMjEyZDYwNjhjN2UzMzQwY2Y2ZGJiODU3N2FkY2U=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2016-11-21T18:04:07Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2016-11-29T12:04:27Z"}, "message": "Fix some comments", "tree": {"sha": "5315173fb929e39bc814865d1e7e84c9119251f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5315173fb929e39bc814865d1e7e84c9119251f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d5ca62dcdc212d6068c7e3340cf6dbb8577adce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5ca62dcdc212d6068c7e3340cf6dbb8577adce", "html_url": "https://github.com/rust-lang/rust/commit/8d5ca62dcdc212d6068c7e3340cf6dbb8577adce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d5ca62dcdc212d6068c7e3340cf6dbb8577adce/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78b54c07e5cfc0287d87b132dc7774aed6b36922", "url": "https://api.github.com/repos/rust-lang/rust/commits/78b54c07e5cfc0287d87b132dc7774aed6b36922", "html_url": "https://github.com/rust-lang/rust/commit/78b54c07e5cfc0287d87b132dc7774aed6b36922"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "421d5bdad0c941a097a7f5d1f2026cb50ae4f22b", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8d5ca62dcdc212d6068c7e3340cf6dbb8577adce/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d5ca62dcdc212d6068c7e3340cf6dbb8577adce/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=8d5ca62dcdc212d6068c7e3340cf6dbb8577adce", "patch": "@@ -266,7 +266,7 @@ impl<'ast> Map<'ast> {\n \n                         if let Some(last_id) = last_expr {\n                             // The body of the item may have a separate dep node\n-                            // (Note that impl/trait items don't currently have\n+                            // (Note that trait items don't currently have\n                             // their own dep node, so there's also just one\n                             // HirBody node for all the items)\n                             if self.is_body(last_id, item) {\n@@ -282,9 +282,6 @@ impl<'ast> Map<'ast> {\n \n                         if let Some(last_id) = last_expr {\n                             // The body of the item may have a separate dep node\n-                            // (Note that impl/trait items don't currently have\n-                            // their own dep node, so there's also just one\n-                            // HirBody node for all the items)\n                             if self.is_impl_item_body(last_id, item) {\n                                 return DepNode::HirBody(def_id);\n                             }\n@@ -373,9 +370,9 @@ impl<'ast> Map<'ast> {\n     fn is_body(&self, node_id: NodeId, item: &Item) -> bool {\n         match item.node {\n             ItemFn(_, _, _, _, _, body) => body.node_id() == node_id,\n-            // Since trait/impl items currently don't get their own dep nodes,\n+            // Since trait items currently don't get their own dep nodes,\n             // we check here whether node_id is the body of any of the items.\n-            // Once they get their own dep nodes, this can go away\n+            // If they get their own dep nodes, this can go away\n             ItemTrait(_, _, _, ref trait_items) => {\n                 trait_items.iter().any(|trait_item| { match trait_item.node {\n                     MethodTraitItem(_, Some(body)) => body.node_id() == node_id,"}]}