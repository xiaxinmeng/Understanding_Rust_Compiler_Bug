{"sha": "84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0Y2QyOGZkZGM4OWJmYTc1NzYwZTgxZjRmYmM1YWEyMWNlMjc0MmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-23T16:56:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-23T16:56:26Z"}, "message": "Cut problematic dependency", "tree": {"sha": "e3a4ea586b680132224e542e53e312c24ce958b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3a4ea586b680132224e542e53e312c24ce958b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "html_url": "https://github.com/rust-lang/rust/commit/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf86aee18e396d393d50df7df27b02111838507", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf86aee18e396d393d50df7df27b02111838507", "html_url": "https://github.com/rust-lang/rust/commit/fdf86aee18e396d393d50df7df27b02111838507"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "9ea1765cb5805b6742d63f16ad71a6a241fb4d6f", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "patch": "@@ -1664,7 +1664,6 @@ name = \"test_utils\"\n version = \"0.1.0\"\n dependencies = [\n  \"difference\",\n- \"ra_cfg\",\n  \"rustc-hash\",\n  \"serde_json\",\n  \"stdx\","}, {"sha": "ea52ec563f29e341745cd3ce7091e75e9c1ebbe3", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "patch": "@@ -203,11 +203,15 @@ struct FileMeta {\n \n impl From<&Fixture> for ParsedMeta {\n     fn from(f: &Fixture) -> Self {\n+        let mut cfg = CfgOptions::default();\n+        f.cfg_atoms.iter().for_each(|it| cfg.insert_atom(it.into()));\n+        f.cfg_key_values.iter().for_each(|(k, v)| cfg.insert_key_value(k.into(), v.into()));\n+\n         Self::File(FileMeta {\n             path: f.path.to_owned(),\n             krate: f.crate_name.to_owned(),\n             deps: f.deps.to_owned(),\n-            cfg: f.cfg.to_owned(),\n+            cfg,\n             edition: f\n                 .edition\n                 .as_ref()"}, {"sha": "981bdf924d60d3b83b25b81763dc0e930c661fe6", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "patch": "@@ -38,7 +38,12 @@ impl MockFileData {\n \n     fn cfg_options(&self) -> CfgOptions {\n         match self {\n-            MockFileData::Fixture(f) => f.cfg.clone(),\n+            MockFileData::Fixture(f) => {\n+                let mut cfg = CfgOptions::default();\n+                f.cfg_atoms.iter().for_each(|it| cfg.insert_atom(it.into()));\n+                f.cfg_key_values.iter().for_each(|(k, v)| cfg.insert_key_value(k.into(), v.into()));\n+                cfg\n+            }\n             _ => CfgOptions::default(),\n         }\n     }"}, {"sha": "6821db1e8117f8a9cdcbe21a2922b389f136f5b2", "filename": "crates/test_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Ftest_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Ftest_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2FCargo.toml?ref=84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "patch": "@@ -8,10 +8,9 @@ authors = [\"rust-analyzer developers\"]\n doctest = false\n \n [dependencies]\n+# Avoid adding deps here, this crate is widely used in tests it should compile fast!\n difference = \"2.0.0\"\n text-size = \"1.0.0\"\n serde_json = \"1.0.48\"\n rustc-hash = \"1.1.0\"\n-\n-ra_cfg = { path = \"../ra_cfg\" }\n stdx = { path = \"../stdx\" }"}, {"sha": "44cf835b3e2d503746da3509110fb9517f63c8d1", "filename": "crates/test_utils/src/fixture.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Ffixture.rs?ref=84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "patch": "@@ -1,4 +1,3 @@\n-use ra_cfg::CfgOptions;\n use rustc_hash::FxHashMap;\n use stdx::split1;\n \n@@ -8,7 +7,8 @@ pub struct Fixture {\n     pub text: String,\n     pub crate_name: Option<String>,\n     pub deps: Vec<String>,\n-    pub cfg: CfgOptions,\n+    pub cfg_atoms: Vec<String>,\n+    pub cfg_key_values: Vec<(String, String)>,\n     pub edition: Option<String>,\n     pub env: FxHashMap<String, String>,\n }\n@@ -73,7 +73,8 @@ The offending line: {:?}\"#,\n         let mut krate = None;\n         let mut deps = Vec::new();\n         let mut edition = None;\n-        let mut cfg = CfgOptions::default();\n+        let mut cfg_atoms = Vec::new();\n+        let mut cfg_key_values = Vec::new();\n         let mut env = FxHashMap::default();\n         for component in components[1..].iter() {\n             let (key, value) = split1(component, ':').unwrap();\n@@ -82,10 +83,10 @@ The offending line: {:?}\"#,\n                 \"deps\" => deps = value.split(',').map(|it| it.to_string()).collect(),\n                 \"edition\" => edition = Some(value.to_string()),\n                 \"cfg\" => {\n-                    for key in value.split(',') {\n-                        match split1(key, '=') {\n-                            None => cfg.insert_atom(key.into()),\n-                            Some((k, v)) => cfg.insert_key_value(k.into(), v.into()),\n+                    for entry in value.split(',') {\n+                        match split1(entry, '=') {\n+                            Some((k, v)) => cfg_key_values.push((k.to_string(), v.to_string())),\n+                            None => cfg_atoms.push(entry.to_string()),\n                         }\n                     }\n                 }\n@@ -100,7 +101,16 @@ The offending line: {:?}\"#,\n             }\n         }\n \n-        Fixture { path, text: String::new(), crate_name: krate, deps, edition, cfg, env }\n+        Fixture {\n+            path,\n+            text: String::new(),\n+            crate_name: krate,\n+            deps,\n+            cfg_atoms,\n+            cfg_key_values,\n+            edition,\n+            env,\n+        }\n     }\n }\n \n@@ -152,7 +162,7 @@ fn indent_len(s: &str) -> usize {\n #[test]\n #[should_panic]\n fn parse_fixture_checks_further_indented_metadata() {\n-    parse_fixture(\n+    Fixture::parse(\n         r\"\n         //- /lib.rs\n           mod bar;"}, {"sha": "3fd8505ed22e50cdb92ffcce9b7fcc1209064a40", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cd28fddc89bfa75760e81f4fbc5aa21ce2742c/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=84cd28fddc89bfa75760e81f4fbc5aa21ce2742c", "patch": "@@ -19,7 +19,6 @@ use serde_json::Value;\n use text_size::{TextRange, TextSize};\n \n pub use difference::Changeset as __Changeset;\n-pub use ra_cfg::CfgOptions;\n pub use rustc_hash::FxHashMap;\n \n pub use crate::fixture::Fixture;"}]}