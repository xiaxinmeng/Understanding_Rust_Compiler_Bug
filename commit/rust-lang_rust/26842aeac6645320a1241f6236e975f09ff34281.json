{"sha": "26842aeac6645320a1241f6236e975f09ff34281", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ODQyYWVhYzY2NDUzMjBhMTI0MWY2MjM2ZTk3NWYwOWZmMzQyODE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-22T18:04:13Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-22T18:12:28Z"}, "message": "Rollup merge of #57039 - davidtwco:migrate-warning-wording, r=pnkfelix\n\nUpdate migrate warning wording.\n\nThis PR modifies the wording of the warning for backwards-incompatible changes in migrate mode. The warning messages are changed to be lowercase and not include line-breaks in order to be consistent with other compiler diagnostics.", "tree": {"sha": "afb4b18bcc0d7a2533f0f8c794b1feca89fd7861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afb4b18bcc0d7a2533f0f8c794b1feca89fd7861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26842aeac6645320a1241f6236e975f09ff34281", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlwefowACgkQ/vbIBR0O\nATwsMQ//c42U1+xdssPfano0DKfkobfRdQ2P8I7+skLRDZcAdPOsCU682utbguyd\n4c8Eh0V3yvPreaalZ1gl2xKZG9CIW4K0Tfvg8ADRkrAkEqy8xUj36wa00Oh6BRjg\nb/a2wA8JZPuzKLMud1BJHO2EENubAnRpvDhUkDb3lOUD0+qSxGSH8Q0ToWivVLfp\nSdnMnk0ejP4JChAPTr9kkGgWobTmY+0WDg9YrOOplYlNfOS4X2/exvREvs1kcVmT\nNt/oVkhyi0LweF+sdO0gc38syfcUluu+pZ/IZecNJqGFZbmujqY/PyvMpYu4xgvA\njVvhAnHN/GnGCCJzanBeHhQcGfFFT19u12WBgjmB4b7fv/yJOv+OlEm1BuDurlMQ\nt2XDNmg8QSrK7KQlSOu4DwyBxtRC1xpnFFqCIul2Hb9jV8PDgxA1ikgccTvITJZa\nngPMWD0O9tfqJYvSwPcxSStRM/3r2PqblZ5fSYhZkxOyRiAyVKIqQRItuowf5mXR\nva/vlesiya/P8jh7nNYym6F92RqnhyNP31eAxHK0SwwW1koSpvImNmcqodjChP0r\nXlClfIOlBjLuRZMQjeHj7JYgJHZ8hoFcqNOaWY805aLpwSlf5Zx5VCO+ghuwTqeF\nhJiCdAMFUwOGK86vB58bksyziIfJf8HLD3F3bExLGgiP1VE5JzI=\n=xpFE\n-----END PGP SIGNATURE-----", "payload": "tree afb4b18bcc0d7a2533f0f8c794b1feca89fd7861\nparent 5ffd1a63e666f158dca3acb2db7e8d9652f530a3\nparent 22b2bd8657d5af7375e18620978d3026cfbf9975\nauthor kennytm <kennytm@gmail.com> 1545501853 +0800\ncommitter kennytm <kennytm@gmail.com> 1545502348 +0800\n\nRollup merge of #57039 - davidtwco:migrate-warning-wording, r=pnkfelix\n\nUpdate migrate warning wording.\n\nThis PR modifies the wording of the warning for backwards-incompatible changes in migrate mode. The warning messages are changed to be lowercase and not include line-breaks in order to be consistent with other compiler diagnostics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26842aeac6645320a1241f6236e975f09ff34281", "html_url": "https://github.com/rust-lang/rust/commit/26842aeac6645320a1241f6236e975f09ff34281", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26842aeac6645320a1241f6236e975f09ff34281/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ffd1a63e666f158dca3acb2db7e8d9652f530a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ffd1a63e666f158dca3acb2db7e8d9652f530a3", "html_url": "https://github.com/rust-lang/rust/commit/5ffd1a63e666f158dca3acb2db7e8d9652f530a3"}, {"sha": "22b2bd8657d5af7375e18620978d3026cfbf9975", "url": "https://api.github.com/repos/rust-lang/rust/commits/22b2bd8657d5af7375e18620978d3026cfbf9975", "html_url": "https://github.com/rust-lang/rust/commit/22b2bd8657d5af7375e18620978d3026cfbf9975"}], "stats": {"total": 113, "additions": 52, "deletions": 61}, "files": [{"sha": "f49e8d89c5ac15ef09e6ad1d73940e0c4f19dedf", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -373,10 +373,14 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n                     for err in &mut mbcx.errors_buffer {\n                         if err.is_error() {\n                             err.level = Level::Warning;\n-                            err.warn(\"This error has been downgraded to a warning \\\n-                                      for backwards compatibility with previous releases.\\n\\\n-                                      It represents potential unsoundness in your code.\\n\\\n-                                      This warning will become a hard error in the future.\");\n+                            err.warn(\n+                                \"this error has been downgraded to a warning for backwards \\\n+                                 compatibility with previous releases\",\n+                            );\n+                            err.warn(\n+                                \"this represents potential undefined behavior in your code and \\\n+                                 this warning will become a hard error in the future\",\n+                            );\n                         }\n                     }\n                 }"}, {"sha": "5ea0ce5ba41ed8225bf5f0cdaff42f8851f4a238", "filename": "src/test/ui/borrowck/borrowck-anon-fields-variant.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -10,9 +10,8 @@ LL |       Foo::Y(_, ref mut b) => b,\n LL |     *a += 1;\n    |     ------- borrow later used here\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error[E0503]: cannot use `y` because it was mutably borrowed\n   --> $DIR/borrowck-anon-fields-variant.rs:44:7"}, {"sha": "3c457bff7cf7e52d215761d2d43860ede5466870", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.ast.nll.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -350,9 +350,8 @@ LL |             let p: &'a u8 = &*block.current;\n LL |             drop(x);\n    |                  - mutable borrow later used here\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n warning[E0502]: cannot borrow `*block.current` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:260:33\n@@ -365,9 +364,8 @@ LL |             let p : *const u8 = &*(*block).current;\n LL |             drop(x);\n    |                  - mutable borrow later used here\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error[E0382]: use of moved value: `x`\n   --> $DIR/borrowck-describe-lvalue.rs:318:22"}, {"sha": "032b8ddcbca68ed4393c99f93c6bcc6bb21046f1", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.edition.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -4,7 +4,6 @@ warning[E0507]: cannot move out of borrowed content\n LL |                 (|| { let bar = foo; bar.take() })();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n "}, {"sha": "032b8ddcbca68ed4393c99f93c6bcc6bb21046f1", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.zflag.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -4,7 +4,6 @@ warning[E0507]: cannot move out of borrowed content\n LL |                 (|| { let bar = foo; bar.take() })();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n "}, {"sha": "916fc3e0d880d141a9b5c1c10c97b5e5e99a7b49", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -199,9 +199,8 @@ LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                                               |temporary value created here\n    |                                                               returns a reference to data owned by the current function\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:147:41"}, {"sha": "96abc1042086923b9644a6f48412fbfc2bd0cd2c", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_dyn.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -19,9 +19,8 @@ LL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n    |                                                                  |creates a temporary which is freed while still in use\n    |                                                                  cast requires that borrow lasts for `'static`\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error: aborting due to 2 previous errors\n "}, {"sha": "1601f6d44679a8c0eacc0f430a2ca9b396354af5", "filename": "src/test/ui/issues/issue-40510-1.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -8,7 +8,6 @@ LL |         &mut x\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n "}, {"sha": "3c7e60520cc3b3bd197f01cfae4a8ee90528ed62", "filename": "src/test/ui/issues/issue-40510-3.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -10,7 +10,6 @@ LL | |         }\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n "}, {"sha": "8f8105508b3e73acb9266920ef567d059e73fa72", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.ast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.ast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.ast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.ast.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -1,5 +1,5 @@\n error: compilation successful\n-  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:89:1\n+  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:92:1\n    |\n LL | / fn main() { //[ast]~ ERROR compilation successful\n LL | |      //[migrate]~^ ERROR compilation successful"}, {"sha": "7efc9ce744e38861b1b9b29fb45eb17b7952161b", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.migrate.stderr", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -9,12 +9,11 @@ LL |     &mut *s.0 //[nll]~ ERROR borrow may still be in use when destructor run\n LL | }\n    | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n warning[E0713]: borrow may still be in use when destructor runs\n-  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:73:5\n+  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:74:5\n    |\n LL | fn boxed_scribbled<'a>(s: Box<Scribble<'a>>) -> &'a mut u32 {\n    |                    -- lifetime `'a` defined here\n@@ -24,12 +23,11 @@ LL |     &mut *(*s).0 //[nll]~ ERROR borrow may still be in use when destructor\n LL | }\n    | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n warning[E0713]: borrow may still be in use when destructor runs\n-  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:83:5\n+  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:85:5\n    |\n LL | fn boxed_boxed_scribbled<'a>(s: Box<Box<Scribble<'a>>>) -> &'a mut u32 {\n    |                          -- lifetime `'a` defined here\n@@ -39,12 +37,11 @@ LL |     &mut *(**s).0 //[nll]~ ERROR borrow may still be in use when destructor\n LL | }\n    | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error: compilation successful\n-  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:89:1\n+  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:92:1\n    |\n LL | / fn main() { //[ast]~ ERROR compilation successful\n LL | |      //[migrate]~^ ERROR compilation successful"}, {"sha": "45815fb589c26bf7abb592b90c21c253275f2114", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -10,7 +10,7 @@ LL | }\n    | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n \n error[E0713]: borrow may still be in use when destructor runs\n-  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:73:5\n+  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:74:5\n    |\n LL | fn boxed_scribbled<'a>(s: Box<Scribble<'a>>) -> &'a mut u32 {\n    |                    -- lifetime `'a` defined here\n@@ -21,7 +21,7 @@ LL | }\n    | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n \n error[E0713]: borrow may still be in use when destructor runs\n-  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:83:5\n+  --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:85:5\n    |\n LL | fn boxed_boxed_scribbled<'a>(s: Box<Box<Scribble<'a>>>) -> &'a mut u32 {\n    |                          -- lifetime `'a` defined here"}, {"sha": "0d0d22f993fd3734091a95453a42662b7dd92ba4", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.rs?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -62,7 +62,8 @@ fn boxed_boxed_borrowed_scribble<'a>(s: Box<Box<&'a mut Scribble>>) -> &'a mut u\n fn scribbled<'a>(s: Scribble<'a>) -> &'a mut u32 {\n     &mut *s.0 //[nll]~ ERROR borrow may still be in use when destructor runs [E0713]\n     //[migrate]~^ WARNING borrow may still be in use when destructor runs [E0713]\n-    //[migrate]~| WARNING This error has been downgraded to a warning for backwards compatibility\n+    //[migrate]~| WARNING this error has been downgraded to a warning for backwards compatibility\n+    //[migrate]~| WARNING this represents potential undefined behavior in your code\n }\n \n // This, by analogy to previous case, is *also* not okay.\n@@ -72,7 +73,8 @@ fn scribbled<'a>(s: Scribble<'a>) -> &'a mut u32 {\n fn boxed_scribbled<'a>(s: Box<Scribble<'a>>) -> &'a mut u32 {\n     &mut *(*s).0 //[nll]~ ERROR borrow may still be in use when destructor runs [E0713]\n     //[migrate]~^ WARNING borrow may still be in use when destructor runs [E0713]\n-    //[migrate]~| WARNING This error has been downgraded to a warning for backwards compatibility\n+    //[migrate]~| WARNING this error has been downgraded to a warning for backwards compatibility\n+    //[migrate]~| WARNING this represents potential undefined behavior in your code\n }\n \n // This, by analogy to previous case, is *also* not okay.\n@@ -82,7 +84,8 @@ fn boxed_scribbled<'a>(s: Box<Scribble<'a>>) -> &'a mut u32 {\n fn boxed_boxed_scribbled<'a>(s: Box<Box<Scribble<'a>>>) -> &'a mut u32 {\n     &mut *(**s).0 //[nll]~ ERROR borrow may still be in use when destructor runs [E0713]\n     //[migrate]~^ WARNING borrow may still be in use when destructor runs [E0713]\n-    //[migrate]~| WARNING This error has been downgraded to a warning for backwards compatibility\n+    //[migrate]~| WARNING this error has been downgraded to a warning for backwards compatibility\n+    //[migrate]~| WARNING this represents potential undefined behavior in your code\n }\n \n #[rustc_error]"}, {"sha": "2300d84a3ff2bb5ee00f7c513a3d48bb7c1043c3", "filename": "src/test/ui/issues/issue-49824.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-49824.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fissues%2Fissue-49824.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49824.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -10,9 +10,8 @@ LL | |         }\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error: compilation successful\n   --> $DIR/issue-49824.rs:18:1"}, {"sha": "46c26d2fd2dc0b38518c7ec7c6c920ae9c7c87fa", "filename": "src/test/ui/nll/match-guards-always-borrow.ast.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-always-borrow.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-always-borrow.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-always-borrow.ast.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -4,9 +4,8 @@ warning[E0507]: cannot move out of borrowed content\n LL |             (|| { let bar = foo; bar.take() })();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error: compilation successful\n   --> $DIR/match-guards-always-borrow.rs:57:1"}, {"sha": "83502bac4469f31631425335d8d31d85c25ba8c5", "filename": "src/test/ui/thread-local-in-ctfe.nll.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fthread-local-in-ctfe.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26842aeac6645320a1241f6236e975f09ff34281/src%2Ftest%2Fui%2Fthread-local-in-ctfe.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthread-local-in-ctfe.nll.stderr?ref=26842aeac6645320a1241f6236e975f09ff34281", "patch": "@@ -18,9 +18,8 @@ LL | static C: &u32 = &A;\n    |                  |\n    |                  thread-local variables cannot be borrowed beyond the end of the function\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error[E0625]: thread-local statics cannot be accessed at compile-time\n   --> $DIR/thread-local-in-ctfe.rs:22:16\n@@ -42,9 +41,8 @@ LL | const E: &u32 = &A;\n    |                 |\n    |                 thread-local variables cannot be borrowed beyond the end of the function\n    |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n \n error[E0625]: thread-local statics cannot be accessed at compile-time\n   --> $DIR/thread-local-in-ctfe.rs:29:5"}]}