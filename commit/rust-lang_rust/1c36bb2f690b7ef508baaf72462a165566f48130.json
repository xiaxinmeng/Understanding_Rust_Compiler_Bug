{"sha": "1c36bb2f690b7ef508baaf72462a165566f48130", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMzZiYjJmNjkwYjdlZjUwOGJhYWY3MjQ2MmExNjU1NjZmNDgxMzA=", "commit": {"author": {"name": "sharnoff", "email": "github@max.sharnoff.org", "date": "2020-12-09T22:43:59Z"}, "committer": {"name": "sharnoff", "email": "github@max.sharnoff.org", "date": "2020-12-09T22:43:59Z"}, "message": "add docs note about `Any::type_id` on smart pointers", "tree": {"sha": "afbd3d2a666874cd05f898bcd19d10e70a915ed4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afbd3d2a666874cd05f898bcd19d10e70a915ed4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c36bb2f690b7ef508baaf72462a165566f48130", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c36bb2f690b7ef508baaf72462a165566f48130", "html_url": "https://github.com/rust-lang/rust/commit/1c36bb2f690b7ef508baaf72462a165566f48130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c36bb2f690b7ef508baaf72462a165566f48130/comments", "author": {"login": "sharnoff", "id": 29154784, "node_id": "MDQ6VXNlcjI5MTU0Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/29154784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharnoff", "html_url": "https://github.com/sharnoff", "followers_url": "https://api.github.com/users/sharnoff/followers", "following_url": "https://api.github.com/users/sharnoff/following{/other_user}", "gists_url": "https://api.github.com/users/sharnoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharnoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharnoff/subscriptions", "organizations_url": "https://api.github.com/users/sharnoff/orgs", "repos_url": "https://api.github.com/users/sharnoff/repos", "events_url": "https://api.github.com/users/sharnoff/events{/privacy}", "received_events_url": "https://api.github.com/users/sharnoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sharnoff", "id": 29154784, "node_id": "MDQ6VXNlcjI5MTU0Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/29154784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharnoff", "html_url": "https://github.com/sharnoff", "followers_url": "https://api.github.com/users/sharnoff/followers", "following_url": "https://api.github.com/users/sharnoff/following{/other_user}", "gists_url": "https://api.github.com/users/sharnoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharnoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharnoff/subscriptions", "organizations_url": "https://api.github.com/users/sharnoff/orgs", "repos_url": "https://api.github.com/users/sharnoff/repos", "events_url": "https://api.github.com/users/sharnoff/events{/privacy}", "received_events_url": "https://api.github.com/users/sharnoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa55f668e5ea5388ec98b9340969527252239151", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa55f668e5ea5388ec98b9340969527252239151", "html_url": "https://github.com/rust-lang/rust/commit/fa55f668e5ea5388ec98b9340969527252239151"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "b140c9eb452084bf9425b41491407d96c62c4339", "filename": "library/core/src/any.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1c36bb2f690b7ef508baaf72462a165566f48130/library%2Fcore%2Fsrc%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c36bb2f690b7ef508baaf72462a165566f48130/library%2Fcore%2Fsrc%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fany.rs?ref=1c36bb2f690b7ef508baaf72462a165566f48130", "patch": "@@ -14,6 +14,29 @@\n //!\n //! [`Box`]: ../../std/boxed/struct.Box.html\n //!\n+//! # Smart pointers and `dyn Any`\n+//!\n+//! One piece of behavior to keep in mind when using `Any` as a trait object,\n+//! especially with types like `Box<dyn Any>` or `Arc<dyn Any>` is that simply\n+//! calling `.type_id()` on the value will produce the `TypeId` of the\n+//! container, and not the underlying trait object. This can be avoided\n+//! converting the smart pointer into a `&dyn Any` instead, which will return\n+//! the object's type id. For example:\n+//! ```\n+//! use std::any::{Any, TypeId};\n+//!\n+//! let boxed: Box<dyn Any> = Box::new(3_i32);\n+//!\n+//! // You're more likely to want this:\n+//! let actual_id = (&*boxed).type_id();\n+//! // ... than this:\n+//! let boxed_id = boxed.type_id();\n+//!\n+//! // Both of these assertions pass\n+//! assert_eq!(actual_id, TypeId::of::<i32>());\n+//! assert_eq!(boxed_id, TypeId::of::<Box<dyn Any>>());\n+//! ```\n+//!\n //! # Examples\n //!\n //! Consider a situation where we want to log out a value passed to a function."}]}