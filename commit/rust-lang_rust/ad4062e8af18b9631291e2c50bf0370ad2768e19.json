{"sha": "ad4062e8af18b9631291e2c50bf0370ad2768e19", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNDA2MmU4YWYxOGI5NjMxMjkxZTJjNTBiZjAzNzBhZDI3NjhlMTk=", "commit": {"author": {"name": "Yuri Kunde Schlesner", "email": "yuriks@yuriks.net", "date": "2014-04-18T10:23:36Z"}, "committer": {"name": "Yuri Kunde Schlesner", "email": "yuriks@yuriks.net", "date": "2014-04-18T10:23:36Z"}, "message": "Eliminate unecessary extra sigil node from LruCache.\n\nInstead of allocating both head and tail nodes for the ends of the node\nlist, a single node can be allocated and linked circularly instead,\nmaking it act as both the head and the tail of the list at the same\ntime.", "tree": {"sha": "503baac4e05d9146bfd0c42aa8d924b447e72d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/503baac4e05d9146bfd0c42aa8d924b447e72d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad4062e8af18b9631291e2c50bf0370ad2768e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad4062e8af18b9631291e2c50bf0370ad2768e19", "html_url": "https://github.com/rust-lang/rust/commit/ad4062e8af18b9631291e2c50bf0370ad2768e19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad4062e8af18b9631291e2c50bf0370ad2768e19/comments", "author": {"login": "yuriks", "id": 341401, "node_id": "MDQ6VXNlcjM0MTQwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/341401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuriks", "html_url": "https://github.com/yuriks", "followers_url": "https://api.github.com/users/yuriks/followers", "following_url": "https://api.github.com/users/yuriks/following{/other_user}", "gists_url": "https://api.github.com/users/yuriks/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuriks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuriks/subscriptions", "organizations_url": "https://api.github.com/users/yuriks/orgs", "repos_url": "https://api.github.com/users/yuriks/repos", "events_url": "https://api.github.com/users/yuriks/events{/privacy}", "received_events_url": "https://api.github.com/users/yuriks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yuriks", "id": 341401, "node_id": "MDQ6VXNlcjM0MTQwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/341401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuriks", "html_url": "https://github.com/yuriks", "followers_url": "https://api.github.com/users/yuriks/followers", "following_url": "https://api.github.com/users/yuriks/following{/other_user}", "gists_url": "https://api.github.com/users/yuriks/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuriks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuriks/subscriptions", "organizations_url": "https://api.github.com/users/yuriks/orgs", "repos_url": "https://api.github.com/users/yuriks/repos", "events_url": "https://api.github.com/users/yuriks/events{/privacy}", "received_events_url": "https://api.github.com/users/yuriks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04784540efe156398eee4fba535f5a24b8bd649e", "url": "https://api.github.com/repos/rust-lang/rust/commits/04784540efe156398eee4fba535f5a24b8bd649e", "html_url": "https://github.com/rust-lang/rust/commit/04784540efe156398eee4fba535f5a24b8bd649e"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "ef49ada322a4ba06081d2cc359a4f324276aad65", "filename": "src/libcollections/lru_cache.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ad4062e8af18b9631291e2c50bf0370ad2768e19/src%2Flibcollections%2Flru_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad4062e8af18b9631291e2c50bf0370ad2768e19/src%2Flibcollections%2Flru_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flru_cache.rs?ref=ad4062e8af18b9631291e2c50bf0370ad2768e19", "patch": "@@ -59,7 +59,6 @@ pub struct LruCache<K, V> {\n     map: HashMap<KeyRef<K>, ~LruEntry<K, V>>,\n     max_size: uint,\n     head: *mut LruEntry<K, V>,\n-    tail: *mut LruEntry<K, V>,\n }\n \n impl<S, K: Hash<S>> Hash<S> for KeyRef<K> {\n@@ -103,11 +102,10 @@ impl<K: Hash + TotalEq, V> LruCache<K, V> {\n             map: HashMap::new(),\n             max_size: capacity,\n             head: unsafe{ cast::transmute(~LruEntry::<K, V>::new()) },\n-            tail: unsafe{ cast::transmute(~LruEntry::<K, V>::new()) },\n         };\n         unsafe {\n-            (*cache.head).next = cache.tail;\n-            (*cache.tail).prev = cache.head;\n+            (*cache.head).next = cache.head;\n+            (*cache.head).prev = cache.head;\n         }\n         return cache;\n     }\n@@ -191,7 +189,7 @@ impl<K: Hash + TotalEq, V> LruCache<K, V> {\n     #[inline]\n     fn remove_lru(&mut self) {\n         if self.len() > 0 {\n-            let lru = unsafe { (*self.tail).prev };\n+            let lru = unsafe { (*self.head).prev };\n             self.detach(lru);\n             unsafe {\n                 match (*lru).key {\n@@ -269,7 +267,6 @@ impl<K, V> Drop for LruCache<K, V> {\n     fn drop(&mut self) {\n         unsafe {\n             let _: ~LruEntry<K, V> = cast::transmute(self.head);\n-            let _: ~LruEntry<K, V> = cast::transmute(self.tail);\n         }\n     }\n }"}]}