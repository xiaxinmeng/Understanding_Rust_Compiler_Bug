{"sha": "1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYjlmZDUwYTRiYmY2ZThmN2EzYmYwMDU3OTgwNGFhNWE2YzRiMzg=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-08T07:33:27Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-08T07:33:27Z"}, "message": "Update pointer error messages", "tree": {"sha": "0ac7d56b2f74e5510021b65ed5a05a5890f8b1bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ac7d56b2f74e5510021b65ed5a05a5890f8b1bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYJY+xxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLiMQQEAoLhZevSEemp5ZNtxdNmT61jATypm\n4a2xLGC0jilhGssA/3xFTBVZfoZK+S9xT0LKQF9B5bBjKW1Fk9CDgE3g1QsE\n=gqnU\n-----END PGP SIGNATURE-----", "payload": "tree 0ac7d56b2f74e5510021b65ed5a05a5890f8b1bb\nparent ee8dbbc40f8d1fe2805fd62b5cf32b9d3e0b62ac\nauthor hyd-dev <yd-huang@outlook.com> 1620459207 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1620459207 +0800\n\nUpdate pointer error messages\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "html_url": "https://github.com/rust-lang/rust/commit/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/comments", "author": null, "committer": null, "parents": [{"sha": "ee8dbbc40f8d1fe2805fd62b5cf32b9d3e0b62ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8dbbc40f8d1fe2805fd62b5cf32b9d3e0b62ac", "html_url": "https://github.com/rust-lang/rust/commit/ee8dbbc40f8d1fe2805fd62b5cf32b9d3e0b62ac"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "e679a6c32287d92b3a3bc81b6f69fd00b0c888c3", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1 +1 @@\n-1773f14a24c49356b384e45ebb45643bc9bef2c4\n+e002ac7e8a1eb04961a722c44b3ffbad575a6caa"}, {"sha": "c83bf1eb382e836d80f7369d1501b02d0cd9db57", "filename": "tests/compile-fail/backtrace/bad-backtrace-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fbacktrace%2Fbad-backtrace-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fbacktrace%2Fbad-backtrace-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fbacktrace%2Fbad-backtrace-ptr.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -4,6 +4,6 @@ extern \"Rust\" {\n \n fn main() {\n     unsafe {\n-        miri_resolve_frame(0 as *mut _, 0); //~ ERROR 0x0 is not a valid pointer\n+        miri_resolve_frame(0 as *mut _, 0); //~ ERROR null pointer is not a valid pointer for this operation\n     }\n }"}, {"sha": "87071d8b4591da9b8f515fe4ff8c7006303cf641", "filename": "tests/compile-fail/dangling_pointers/deref-invalid-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fdangling_pointers%2Fderef-invalid-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fdangling_pointers%2Fderef-invalid-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fderef-invalid-ptr.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -3,5 +3,5 @@\n \n fn main() {\n     let x = 16usize as *const u32;\n-    let _y = unsafe { &*x as *const u32 }; //~ ERROR inbounds test failed: 0x10 is not a valid pointer\n+    let _y = unsafe { &*x as *const u32 }; //~ ERROR 0x10 is not a valid pointer\n }"}, {"sha": "2749ccfc0a021bfa59191045919adbd62389d8f8", "filename": "tests/compile-fail/dangling_pointers/wild_pointer_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fdangling_pointers%2Fwild_pointer_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fdangling_pointers%2Fwild_pointer_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fwild_pointer_deref.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n     let p = 44 as *const i32;\n-    let x = unsafe { *p }; //~ ERROR inbounds test failed: 0x2c is not a valid pointer\n+    let x = unsafe { *p }; //~ ERROR 0x2c is not a valid pointer\n     panic!(\"this should never print: {}\", x);\n }"}, {"sha": "299fd5ae49e03bdaeb8089252db3ed4ab6171c0c", "filename": "tests/compile-fail/function_pointers/cast_int_to_fn_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -6,5 +6,5 @@ fn main() {\n         std::mem::transmute::<usize, fn(i32)>(42)\n     };\n \n-    g(42) //~ ERROR inbounds test failed: 0x2a is not a valid pointer\n+    g(42) //~ ERROR 0x2a is not a valid pointer\n }"}, {"sha": "d8a8f66e7aeed9694dbe7ab936b1d4a740dac722", "filename": "tests/compile-fail/intrinsics/ptr_offset_0_plus_0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_0_plus_0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_0_plus_0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_0_plus_0.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: inbounds test failed: 0x0 is not a valid pointer\n+// error-pattern: pointer arithmetic failed: 0x0 is not a valid pointer\n \n fn main() {\n     let x = 0 as *mut i32;"}, {"sha": "ea6bef151e1c1d63af11bc374b01a03f1d733894", "filename": "tests/compile-fail/intrinsics/ptr_offset_int_plus_int.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_int_plus_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_int_plus_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_int_plus_int.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: inbounds test failed: 0x1 is not a valid pointer\n+// error-pattern: 0x1 is not a valid pointer\n \n fn main() {\n     // Can't offset an integer pointer by non-zero offset."}, {"sha": "8ff5c3596ef63472e127e7551c47225c53153f60", "filename": "tests/compile-fail/intrinsics/ptr_offset_int_plus_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_int_plus_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_int_plus_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fptr_offset_int_plus_ptr.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: inbounds test failed: 0x1 is not a valid pointer\n+// error-pattern: 0x1 is not a valid pointer\n \n fn main() {\n     let ptr = Box::into_raw(Box::new(0u32));"}, {"sha": "076b2df609abdcec2fc20ab6f19f4eed40bf36fb", "filename": "tests/compile-fail/null_pointer_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fnull_pointer_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fnull_pointer_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnull_pointer_deref.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,5 +1,5 @@\n #[allow(deref_nullptr)]\n fn main() {\n-    let x: i32 = unsafe { *std::ptr::null() }; //~ ERROR inbounds test failed: 0x0 is not a valid pointer\n+    let x: i32 = unsafe { *std::ptr::null() }; //~ ERROR null pointer is not a valid pointer for this operation\n     panic!(\"this should never print: {}\", x);\n }"}, {"sha": "5294e60c025fb76343acb4b4bd8d22170007d6af", "filename": "tests/compile-fail/null_pointer_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fnull_pointer_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fnull_pointer_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnull_pointer_write.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,4 +1,4 @@\n #[allow(deref_nullptr)]\n fn main() {\n-    unsafe { *std::ptr::null_mut() = 0i32 }; //~ ERROR inbounds test failed: 0x0 is not a valid pointer\n+    unsafe { *std::ptr::null_mut() = 0i32 }; //~ ERROR null pointer is not a valid pointer for this operation\n }"}, {"sha": "30cbf0b339a1d243fa517194a0479179ddd53935", "filename": "tests/compile-fail/stacked_borrows/issue-miri-1050-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fstacked_borrows%2Fissue-miri-1050-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38/tests%2Fcompile-fail%2Fstacked_borrows%2Fissue-miri-1050-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fissue-miri-1050-2.rs?ref=1ab9fd50a4bbf6e8f7a3bf00579804aa5a6c4b38", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: inbounds test failed: 0x4 is not a valid pointer\n+// error-pattern: 0x4 is not a valid pointer\n use std::ptr::NonNull;\n \n fn main() { unsafe {"}]}