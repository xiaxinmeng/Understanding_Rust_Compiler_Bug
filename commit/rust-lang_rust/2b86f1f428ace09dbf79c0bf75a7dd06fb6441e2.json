{"sha": "2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiODZmMWY0MjhhY2UwOWRiZjc5YzBiZjc1YTdkZDA2ZmI2NDQxZTI=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-04-15T01:11:37Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-04-15T18:38:23Z"}, "message": "Describe the Iterator enumerate() method more clearly.", "tree": {"sha": "261cfff523b4b44087bcb6fa73174c7eff8b475e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/261cfff523b4b44087bcb6fa73174c7eff8b475e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2", "html_url": "https://github.com/rust-lang/rust/commit/2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2/comments", "author": null, "committer": null, "parents": [{"sha": "8415fa27877a4309a79b08c75a52eb4c3546b7a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8415fa27877a4309a79b08c75a52eb4c3546b7a5", "html_url": "https://github.com/rust-lang/rust/commit/8415fa27877a4309a79b08c75a52eb4c3546b7a5"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "eed8edb7a528b92a3b567cf7fb76550fff7c70f6", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=2b86f1f428ace09dbf79c0bf75a7dd06fb6441e2", "patch": "@@ -273,8 +273,9 @@ pub trait Iterator {\n         FilterMap { iter: self, f: f }\n     }\n \n-    /// Creates an iterator that yields a pair of the value returned by this\n-    /// iterator plus the current index of iteration.\n+    /// Creates an iterator that yields pairs `(i, val)` where `i` is the\n+    /// current index of iteration and `val` is the value returned by the\n+    /// iterator.\n     ///\n     /// `enumerate` keeps its count as a `usize`. If you want to count by a\n     /// different sized integer, the `zip` function provides similar"}]}