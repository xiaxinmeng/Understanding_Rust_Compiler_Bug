{"sha": "e477a13d63c2139f39c192c8e22dcfd0810f68e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NzdhMTNkNjNjMjEzOWYzOWMxOTJjOGUyMmRjZmQwODEwZjY4ZTQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-29T13:21:01Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-29T14:01:35Z"}, "message": "Replace usages of 'bad_style' with 'nonstandard_style'.\n\n`bad_style` is being deprecated in favor of `nonstandard_style`:\n\n- https://github.com/rust-lang/rust/issues/41646", "tree": {"sha": "c5ed734f6ed887a5348070b7666db6ac13468e2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5ed734f6ed887a5348070b7666db6ac13468e2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e477a13d63c2139f39c192c8e22dcfd0810f68e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e477a13d63c2139f39c192c8e22dcfd0810f68e4", "html_url": "https://github.com/rust-lang/rust/commit/e477a13d63c2139f39c192c8e22dcfd0810f68e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e477a13d63c2139f39c192c8e22dcfd0810f68e4/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca0de63898b525656ad8447cd81ccb08a05e3d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0de63898b525656ad8447cd81ccb08a05e3d6c", "html_url": "https://github.com/rust-lang/rust/commit/ca0de63898b525656ad8447cd81ccb08a05e3d6c"}], "stats": {"total": 104, "additions": 52, "deletions": 52}, "files": [{"sha": "e6ee525ca2e0304bf4a8f615b3a6288361f2bc17", "filename": "src/bootstrap/job.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Fbootstrap%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Fbootstrap%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fjob.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -37,7 +37,7 @@\n //! Note that this module has a #[cfg(windows)] above it as none of this logic\n //! is required on Unix.\n \n-#![allow(bad_style, dead_code)]\n+#![allow(nonstandard_style, dead_code)]\n \n use std::env;\n use std::io;"}, {"sha": "8ce8f20add3ad20fa2d5e61ae629cf7364cd0888", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -137,7 +137,7 @@ pub fn symlink_dir(config: &Config, src: &Path, dest: &Path) -> io::Result<()> {\n     //\n     // Copied from std\n     #[cfg(windows)]\n-    #[allow(bad_style)]\n+    #[allow(nonstandard_style)]\n     fn symlink_dir_inner(target: &Path, junction: &Path) -> io::Result<()> {\n         use std::ptr;\n         use std::ffi::OsStr;"}, {"sha": "8848be5903810ef96bdbc44dda078a543e1c4fe0", "filename": "src/liballoc_system/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Fliballoc_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Fliballoc_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_system%2Flib.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -220,7 +220,7 @@ mod platform {\n }\n \n #[cfg(windows)]\n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n mod platform {\n     use MIN_ALIGN;\n     use System;"}, {"sha": "d6298a38a2601fbd3cee9699c40ec983e7f0af84", "filename": "src/libpanic_unwind/seh.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibpanic_unwind%2Fseh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibpanic_unwind%2Fseh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fseh.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -54,7 +54,7 @@\n //! [win64]: http://msdn.microsoft.com/en-us/library/1eyas8tf.aspx\n //! [llvm]: http://llvm.org/docs/ExceptionHandling.html#background-on-windows-exceptions\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n #![allow(private_no_mangle_fns)]\n \n use alloc::boxed::Box;"}, {"sha": "c2074db00385b8367c823eb44d3ba4365d65b1c0", "filename": "src/libpanic_unwind/seh64_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibpanic_unwind%2Fseh64_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibpanic_unwind%2Fseh64_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fseh64_gnu.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -11,7 +11,7 @@\n //! Unwinding implementation of top of native Win64 SEH,\n //! however the unwind handler data (aka LSDA) uses GCC-compatible encoding.\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n #![allow(private_no_mangle_fns)]\n \n use alloc::boxed::Box;"}, {"sha": "0a1c9b3adf183b67143f02a7f335dc16446d5591", "filename": "src/libpanic_unwind/windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibpanic_unwind%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibpanic_unwind%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fwindows.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n #![allow(dead_code)]\n #![cfg(windows)]\n "}, {"sha": "0edb1aa79e74583d5866c18ea3a72a3f0b685470", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -718,7 +718,7 @@ macro_rules! define_queries_inner {\n             }\n         }\n \n-        #[allow(bad_style)]\n+        #[allow(nonstandard_style)]\n         #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n         pub enum Query<$tcx> {\n             $($(#[$attr])* $name($K)),*\n@@ -775,7 +775,7 @@ macro_rules! define_queries_inner {\n         pub mod queries {\n             use std::marker::PhantomData;\n \n-            $(#[allow(bad_style)]\n+            $(#[allow(nonstandard_style)]\n             pub struct $name<$tcx> {\n                 data: PhantomData<&$tcx ()>\n             })*"}, {"sha": "02bdc5f41b35428e04287114043e94ce6ad0b5f5", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -84,7 +84,7 @@ pub struct ProfQDumpParams {\n     pub dump_profq_msg_log:bool,\n }\n \n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct QueryMsg {\n     pub query: &'static str,"}, {"sha": "70760d35f7865c1f3e78d8b208f6990d37cb59d7", "filename": "src/librustc/util/profiling.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc%2Futil%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc%2Futil%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fprofiling.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -21,7 +21,7 @@ macro_rules! define_categories {\n             $($name),*\n         }\n \n-        #[allow(bad_style)]\n+        #[allow(nonstandard_style)]\n         struct Categories<T> {\n             $($name: T),*\n         }"}, {"sha": "f10a9a68bed5b3a73d2354b2e6a2e61b34572fd5", "filename": "src/librustc_data_structures/flock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_data_structures%2Fflock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_data_structures%2Fflock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fflock.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -239,7 +239,7 @@ mod imp {\n }\n \n #[cfg(windows)]\n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n mod imp {\n     use std::io;\n     use std::mem;"}, {"sha": "e5baf93b00064abf32a50b65f3cd1ea70a0de1af", "filename": "src/librustc_errors/lock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_errors%2Flock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_errors%2Flock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flock.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -22,7 +22,7 @@\n use std::any::Any;\n \n #[cfg(windows)]\n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n pub fn acquire_global_lock(name: &str) -> Box<dyn Any> {\n     use std::ffi::CString;\n     use std::io;"}, {"sha": "acce4bc0650afbe391d4bebdf5c9f8ee33370d5e", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -54,7 +54,7 @@ use syntax::errors::{Applicability, DiagnosticBuilder};\n use rustc::hir::{self, GenericParamKind, PatKind};\n use rustc::hir::intravisit::FnKind;\n \n-use bad_style::{MethodLateContext, method_context};\n+use nonstandard_style::{MethodLateContext, method_context};\n \n // hardwired lints from librustc\n pub use lint::builtin::*;"}, {"sha": "0fcf0ca30c136060a5afb41d24cab01eabac6ac7", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -62,12 +62,12 @@ use syntax::edition::Edition;\n use lint::LintId;\n use lint::FutureIncompatibleInfo;\n \n-mod bad_style;\n+mod nonstandard_style;\n pub mod builtin;\n mod types;\n mod unused;\n \n-use bad_style::*;\n+use nonstandard_style::*;\n use builtin::*;\n use types::*;\n use unused::*;"}, {"sha": "09871c0e84049d801888014eafc012a400faa67f", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "previous_filename": "src/librustc_lint/bad_style.rs"}, {"sha": "f093d672498ad4b2483ad71133cb43b4a38cd852", "filename": "src/librustc_platform_intrinsics/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_platform_intrinsics%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibrustc_platform_intrinsics%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Flib.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n \n #![cfg_attr(not(stage0), feature(nll))]\n #![cfg_attr(not(stage0), feature(infer_outlives_requirements))]"}, {"sha": "6d8298f01cdceee5100c46b431726fe84cda11bc", "filename": "src/libstd/os/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fmod.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -11,7 +11,7 @@\n //! OS-specific functionality.\n \n #![stable(feature = \"os\", since = \"1.0.0\")]\n-#![allow(missing_docs, bad_style, missing_debug_implementations)]\n+#![allow(missing_docs, nonstandard_style, missing_debug_implementations)]\n \n cfg_if! {\n     if #[cfg(dox)] {"}, {"sha": "f943257c687330c368622f087e42bde74c625f45", "filename": "src/libstd/sys/redox/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(dead_code, missing_docs, bad_style)]\n+#![allow(dead_code, missing_docs, nonstandard_style)]\n \n use io::{self, ErrorKind};\n "}, {"sha": "2b9fbc9ef3945e2364eda68f34686e46013cafe7", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(missing_docs, bad_style)]\n+#![allow(missing_docs, nonstandard_style)]\n \n use io::{self, ErrorKind};\n use libc;"}, {"sha": "03a5b2d779e1f633420f0f85e00f8bb29acb0250", "filename": "src/libstd/sys/wasm/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwasm%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwasm%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fnet.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -297,7 +297,7 @@ pub fn lookup_host(_: &str) -> io::Result<LookupHost> {\n     unsupported()\n }\n \n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n pub mod netc {\n     pub const AF_INET: u8 = 0;\n     pub const AF_INET6: u8 = 1;"}, {"sha": "8a744519e917591ac052453bd0e4f7f4375d9556", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -10,7 +10,7 @@\n \n //! C definitions used by libnative that don't belong in liblibc\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n #![cfg_attr(test, allow(dead_code))]\n #![unstable(issue = \"0\", feature = \"windows_c\")]\n "}, {"sha": "31ef9fa2bedfd4a4a0091c661a19db158ae75c0c", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(missing_docs, bad_style)]\n+#![allow(missing_docs, nonstandard_style)]\n \n use ptr;\n use ffi::{OsStr, OsString};"}, {"sha": "29ea82c2053cdb08df0e6f8de9efc5f96787c82e", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -10,7 +10,7 @@\n \n //! Implementation of `std::os` functionality for Windows\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n \n use os::windows::prelude::*;\n "}, {"sha": "d993c6244fc163d7241095a4ff62200d81922ae2", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -1184,7 +1184,7 @@ fn get_concurrency() -> usize {\n     };\n \n     #[cfg(windows)]\n-    #[allow(bad_style)]\n+    #[allow(nonstandard_style)]\n     fn num_cpus() -> usize {\n         #[repr(C)]\n         struct SYSTEM_INFO {"}, {"sha": "43c3e1e7666239568d219c4dd2299e8ae8521132", "filename": "src/libunwind/libunwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibunwind%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Flibunwind%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flibunwind.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(bad_style)]\n+#![allow(nonstandard_style)]\n \n macro_rules! cfg_if {\n     ( $( if #[cfg( $meta:meta )] { $($it1:item)* } else { $($it2:item)* } )* ) =>"}, {"sha": "a7fd9f299c033bdb8c086e310290ed21678e6cfa", "filename": "src/test/run-pass/simd-target-feature-mixup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Frun-pass%2Fsimd-target-feature-mixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Frun-pass%2Fsimd-target-feature-mixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-target-feature-mixup.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -52,7 +52,7 @@ fn is_sigill(status: ExitStatus) -> bool {\n }\n \n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n mod test {\n     // An SSE type\n     #[repr(simd)]"}, {"sha": "81b81a9a141da48292f513365c6445cff77ce4e5", "filename": "src/test/rustdoc/intra-links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Frustdoc%2Fintra-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Frustdoc%2Fintra-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-links.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -75,7 +75,7 @@ pub static THIS_STATIC: usize = 5usize;\n \n pub trait SoAmbiguous {}\n \n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n pub fn SoAmbiguous() {}\n \n "}, {"sha": "55d6168e6e0085205d0044dca7e8f4ab517d8c7a", "filename": "src/test/ui/lint/lint-group-style.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Flint-group-style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Flint-group-style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-style.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,24 +8,24 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(bad_style)]\n+#![deny(nonstandard_style)]\n #![allow(dead_code)]\n \n fn CamelCase() {} //~ ERROR should have a snake\n \n-#[allow(bad_style)]\n+#[allow(nonstandard_style)]\n mod test {\n     fn CamelCase() {}\n \n-    #[forbid(bad_style)]\n+    #[forbid(nonstandard_style)]\n     mod bad {\n         fn CamelCase() {} //~ ERROR should have a snake\n \n         static bad: isize = 1; //~ ERROR should have an upper\n     }\n \n     mod warn {\n-        #![warn(bad_style)]\n+        #![warn(nonstandard_style)]\n \n         fn CamelCase() {} //~ WARN should have a snake\n "}, {"sha": "6b91ce5b93ca604ab9d28b5b7a816028ea96fe30", "filename": "src/test/ui/lint/lint-group-style.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -7,9 +7,9 @@ LL | fn CamelCase() {} //~ ERROR should have a snake\n note: lint level defined here\n   --> $DIR/lint-group-style.rs:11:9\n    |\n-LL | #![deny(bad_style)]\n-   |         ^^^^^^^^^\n-   = note: #[deny(non_snake_case)] implied by #[deny(bad_style)]\n+LL | #![deny(nonstandard_style)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = note: #[deny(non_snake_case)] implied by #[deny(nonstandard_style)]\n \n error: function `CamelCase` should have a snake case name such as `camel_case`\n   --> $DIR/lint-group-style.rs:22:9\n@@ -20,9 +20,9 @@ LL |         fn CamelCase() {} //~ ERROR should have a snake\n note: lint level defined here\n   --> $DIR/lint-group-style.rs:20:14\n    |\n-LL |     #[forbid(bad_style)]\n-   |              ^^^^^^^^^\n-   = note: #[forbid(non_snake_case)] implied by #[forbid(bad_style)]\n+LL |     #[forbid(nonstandard_style)]\n+   |              ^^^^^^^^^^^^^^^^^\n+   = note: #[forbid(non_snake_case)] implied by #[forbid(nonstandard_style)]\n \n error: static variable `bad` should have an upper case name such as `BAD`\n   --> $DIR/lint-group-style.rs:24:9\n@@ -33,9 +33,9 @@ LL |         static bad: isize = 1; //~ ERROR should have an upper\n note: lint level defined here\n   --> $DIR/lint-group-style.rs:20:14\n    |\n-LL |     #[forbid(bad_style)]\n-   |              ^^^^^^^^^\n-   = note: #[forbid(non_upper_case_globals)] implied by #[forbid(bad_style)]\n+LL |     #[forbid(nonstandard_style)]\n+   |              ^^^^^^^^^^^^^^^^^\n+   = note: #[forbid(non_upper_case_globals)] implied by #[forbid(nonstandard_style)]\n \n warning: function `CamelCase` should have a snake case name such as `camel_case`\n   --> $DIR/lint-group-style.rs:30:9\n@@ -46,9 +46,9 @@ LL |         fn CamelCase() {} //~ WARN should have a snake\n note: lint level defined here\n   --> $DIR/lint-group-style.rs:28:17\n    |\n-LL |         #![warn(bad_style)]\n-   |                 ^^^^^^^^^\n-   = note: #[warn(non_snake_case)] implied by #[warn(bad_style)]\n+LL |         #![warn(nonstandard_style)]\n+   |                 ^^^^^^^^^^^^^^^^^\n+   = note: #[warn(non_snake_case)] implied by #[warn(nonstandard_style)]\n \n warning: type `snake_case` should have a camel case name such as `SnakeCase`\n   --> $DIR/lint-group-style.rs:32:9\n@@ -59,9 +59,9 @@ LL |         struct snake_case; //~ WARN should have a camel\n note: lint level defined here\n   --> $DIR/lint-group-style.rs:28:17\n    |\n-LL |         #![warn(bad_style)]\n-   |                 ^^^^^^^^^\n-   = note: #[warn(non_camel_case_types)] implied by #[warn(bad_style)]\n+LL |         #![warn(nonstandard_style)]\n+   |                 ^^^^^^^^^^^^^^^^^\n+   = note: #[warn(non_camel_case_types)] implied by #[warn(nonstandard_style)]\n \n error: aborting due to 3 previous errors\n "}, {"sha": "1e37ac0dc586c9b00ccbf25bc1463a15d7ba5487", "filename": "src/test/ui/lint/lint-shorthand-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Flint-shorthand-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Flint-shorthand-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-shorthand-field.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(bad_style, unused_variables)]\n+#![allow(nonstandard_style, unused_variables)]\n #![deny(non_shorthand_field_patterns)]\n \n struct Foo {"}, {"sha": "23e98cc22fc3ae725b1ce257a6056edc61895f1f", "filename": "src/test/ui/lint/outer-forbid.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Fouter-forbid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Fouter-forbid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fouter-forbid.rs?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -11,7 +11,7 @@\n // Forbidding a group (here, `unused`) overrules subsequent allowance of both\n // the group, and an individual lint in the group (here, `unused_variables`);\n // and, forbidding an individual lint (here, `non_snake_case`) overrules\n-// subsequent allowance of a lint group containing it (here, `bad_style`). See\n+// subsequent allowance of a lint group containing it (here, `nonstandard_style`). See\n // Issue #42873.\n \n #![forbid(unused, non_snake_case)]\n@@ -22,7 +22,7 @@ fn foo() {}\n #[allow(unused)] //~ ERROR overruled\n fn bar() {}\n \n-#[allow(bad_style)] //~ ERROR overruled\n+#[allow(nonstandard_style)] //~ ERROR overruled\n fn main() {\n     println!(\"hello forbidden world\")\n }"}, {"sha": "c011b49eaee7ded8c8863ca47fdd384f83edba1d", "filename": "src/test/ui/lint/outer-forbid.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Fouter-forbid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e477a13d63c2139f39c192c8e22dcfd0810f68e4/src%2Ftest%2Fui%2Flint%2Fouter-forbid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fouter-forbid.stderr?ref=e477a13d63c2139f39c192c8e22dcfd0810f68e4", "patch": "@@ -16,14 +16,14 @@ LL | #![forbid(unused, non_snake_case)]\n LL | #[allow(unused)] //~ ERROR overruled\n    |         ^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(bad_style) overruled by outer forbid(non_snake_case)\n+error[E0453]: allow(nonstandard_style) overruled by outer forbid(non_snake_case)\n   --> $DIR/outer-forbid.rs:25:9\n    |\n LL | #![forbid(unused, non_snake_case)]\n    |                   -------------- `forbid` level set here\n ...\n-LL | #[allow(bad_style)] //~ ERROR overruled\n-   |         ^^^^^^^^^ overruled by previous forbid\n+LL | #[allow(nonstandard_style)] //~ ERROR overruled\n+   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n \n error: aborting due to 3 previous errors\n "}]}