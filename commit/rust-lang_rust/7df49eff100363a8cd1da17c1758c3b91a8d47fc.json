{"sha": "7df49eff100363a8cd1da17c1758c3b91a8d47fc", "node_id": "C_kwDOAAsO6NoAKDdkZjQ5ZWZmMTAwMzYzYThjZDFkYTE3YzE3NThjM2I5MWE4ZDQ3ZmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-29T09:41:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-29T09:41:36Z"}, "message": "Rollup merge of #91327 - dtolnay:exact, r=michaelwoerister\n\nDelete an unreachable codepath from format_args implementation", "tree": {"sha": "6dd9a8fdedd3a2c5f04d4171dd97395e5ecfcb76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dd9a8fdedd3a2c5f04d4171dd97395e5ecfcb76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7df49eff100363a8cd1da17c1758c3b91a8d47fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhpKBQCRBK7hj4Ov3rIwAAH0IIAK5CVawhVAYmDOPYsW6XEanw\nUkWXtBMo4UX4C+SCgpKJvqjd4bTZZ7/RQQ+T10YUHmvT+iVFcV115jpqUz1YluJd\n71YKNW6jn/kghKRMxvF70c9LOgbYOxQVakzCIqbVRg06v494EJv6nvfcPQGulO7J\niqtlc0g2mKoEGdJ4v7R5w0W0KWH+Ebnh7mgsN4b4lgTmI2uiW44HATOenbXOddaq\nN0gj452f5G0Nkd1BtG2mwen4XRAjwA1boMHcblDvWBGQQa5NnK6pxyQ0PD5qDkxP\nz05Dexk5aAa+ZcXugnpn18Fifd4CuWkKvj8FNVfLZ+B+6MSMHwX/+iDMm9WENBA=\n=tzCu\n-----END PGP SIGNATURE-----\n", "payload": "tree 6dd9a8fdedd3a2c5f04d4171dd97395e5ecfcb76\nparent a2f924a255f472953389e9009321f2e3805afe2c\nparent cc53f1356d5f9d625b59f2f35873761e87e914ab\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638178896 +0100\ncommitter GitHub <noreply@github.com> 1638178896 +0100\n\nRollup merge of #91327 - dtolnay:exact, r=michaelwoerister\n\nDelete an unreachable codepath from format_args implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7df49eff100363a8cd1da17c1758c3b91a8d47fc", "html_url": "https://github.com/rust-lang/rust/commit/7df49eff100363a8cd1da17c1758c3b91a8d47fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7df49eff100363a8cd1da17c1758c3b91a8d47fc/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f924a255f472953389e9009321f2e3805afe2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f924a255f472953389e9009321f2e3805afe2c", "html_url": "https://github.com/rust-lang/rust/commit/a2f924a255f472953389e9009321f2e3805afe2c"}, {"sha": "cc53f1356d5f9d625b59f2f35873761e87e914ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc53f1356d5f9d625b59f2f35873761e87e914ab", "html_url": "https://github.com/rust-lang/rust/commit/cc53f1356d5f9d625b59f2f35873761e87e914ab"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "62a55c0e49ed08ed94a0263688f01e6ceedba9ba", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7df49eff100363a8cd1da17c1758c3b91a8d47fc/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df49eff100363a8cd1da17c1758c3b91a8d47fc/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=7df49eff100363a8cd1da17c1758c3b91a8d47fc", "patch": "@@ -88,8 +88,8 @@ struct Context<'a, 'b> {\n     /// * Implicit argument resolution: `\"{1:.0$} {2:.foo$} {1:.3$} {4:.0$}\"`\n     /// * Name resolution: `\"{1:.0$} {2:.5$} {1:.3$} {4:.0$}\"`\n     /// * `count_positions` (in JSON): `{0: 0, 5: 1, 3: 2}`\n-    /// * `count_args`: `vec![Exact(0), Exact(5), Exact(3)]`\n-    count_args: Vec<Position>,\n+    /// * `count_args`: `vec![0, 5, 3]`\n+    count_args: Vec<usize>,\n     /// Relative slot numbers for count arguments.\n     count_positions: FxHashMap<usize, usize>,\n     /// Number of count slots assigned.\n@@ -513,7 +513,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                         if let Entry::Vacant(e) = self.count_positions.entry(arg) {\n                             let i = self.count_positions_count;\n                             e.insert(i);\n-                            self.count_args.push(Exact(arg));\n+                            self.count_args.push(arg);\n                             self.count_positions_count += 1;\n                         }\n                     }\n@@ -774,11 +774,7 @@ impl<'a, 'b> Context<'a, 'b> {\n             // (the span is otherwise unavailable in MIR)\n             heads.push(self.ecx.expr_addr_of(e.span.with_ctxt(self.macsp.ctxt()), e));\n         }\n-        for pos in self.count_args {\n-            let index = match pos {\n-                Exact(i) => i,\n-                _ => panic!(\"should never happen\"),\n-            };\n+        for index in self.count_args {\n             let span = spans_pos[index];\n             args.push(Context::format_arg(self.ecx, self.macsp, span, &Count, index));\n         }"}]}