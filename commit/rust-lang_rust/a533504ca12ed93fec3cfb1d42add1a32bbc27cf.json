{"sha": "a533504ca12ed93fec3cfb1d42add1a32bbc27cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MzM1MDRjYTEyZWQ5M2ZlYzNjZmIxZDQyYWRkMWEzMmJiYzI3Y2Y=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2019-02-07T11:28:27Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2019-04-23T22:54:14Z"}, "message": "Add try_reserve to HashSet", "tree": {"sha": "6786f1974d9a68761e213a3aaefc7431e78c5d85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6786f1974d9a68761e213a3aaefc7431e78c5d85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a533504ca12ed93fec3cfb1d42add1a32bbc27cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a533504ca12ed93fec3cfb1d42add1a32bbc27cf", "html_url": "https://github.com/rust-lang/rust/commit/a533504ca12ed93fec3cfb1d42add1a32bbc27cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a533504ca12ed93fec3cfb1d42add1a32bbc27cf/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "185ed988d240e380c63c7ff809622a270f670637", "url": "https://api.github.com/repos/rust-lang/rust/commits/185ed988d240e380c63c7ff809622a270f670637", "html_url": "https://github.com/rust-lang/rust/commit/185ed988d240e380c63c7ff809622a270f670637"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "f8a93b680f7626d93b1c3779332a0c422e967f17", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a533504ca12ed93fec3cfb1d42add1a32bbc27cf/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a533504ca12ed93fec3cfb1d42add1a32bbc27cf/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=a533504ca12ed93fec3cfb1d42add1a32bbc27cf", "patch": "@@ -1,4 +1,5 @@\n use crate::borrow::Borrow;\n+use crate::collections::CollectionAllocErr;\n use crate::fmt;\n use crate::hash::{Hash, BuildHasher};\n use crate::iter::{Chain, FromIterator, FusedIterator};\n@@ -357,6 +358,29 @@ impl<T, S> HashSet<T, S>\n         self.map.reserve(additional)\n     }\n \n+    /// Tries to reserve capacity for at least `additional` more elements to be inserted\n+    /// in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n+    /// frequent reallocations.\n+    ///\n+    /// # Errors\n+    ///\n+    /// If the capacity overflows, or the allocator reports a failure, then an error\n+    /// is returned.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(try_reserve)]\n+    /// use std::collections::HashSet;\n+    /// let mut set: HashSet<i32> = HashSet::new();\n+    /// set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"try_reserve\", reason = \"new API\", issue=\"48043\")]\n+    pub fn try_reserve(&mut self, additional: usize) -> Result<(), CollectionAllocErr> {\n+        self.map.try_reserve(additional)\n+    }\n+\n     /// Shrinks the capacity of the set as much as possible. It will drop\n     /// down as much as possible while maintaining the internal rules\n     /// and possibly leaving some space in accordance with the resize policy."}]}