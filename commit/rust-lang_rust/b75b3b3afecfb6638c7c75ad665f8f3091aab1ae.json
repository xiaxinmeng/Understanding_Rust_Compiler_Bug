{"sha": "b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "node_id": "C_kwDOAAsO6NoAKGI3NWIzYjNhZmVjZmI2NjM4YzdjNzVhZDY2NWY4ZjMwOTFhYWIxYWU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-25T09:08:04Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-26T00:30:36Z"}, "message": "Change `FnAbi::args` to a boxed slice.", "tree": {"sha": "1538fd848a4898cf66d994d070cb45e53993c638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1538fd848a4898cf66d994d070cb45e53993c638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "html_url": "https://github.com/rust-lang/rust/commit/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4df7bffa953d4583f6785114519602a4f1898f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4df7bffa953d4583f6785114519602a4f1898f8d", "html_url": "https://github.com/rust-lang/rust/commit/4df7bffa953d4583f6785114519602a4f1898f8d"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "7f313583c82c8eb0885fefae342b56301f097d96", "filename": "compiler/rustc_codegen_gcc/src/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_codegen_gcc%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_codegen_gcc%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fabi.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -140,7 +140,7 @@ impl<'gcc, 'tcx> FnAbiGccExt<'gcc, 'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n                 }\n             };\n \n-        for arg in &self.args {\n+        for arg in self.args.iter() {\n             // add padding\n             if let Some(ty) = arg.pad {\n                 argument_tys.push(ty.gcc_type(cx));"}, {"sha": "2353362f83b571d42f0416b54083886c21fc8239", "filename": "compiler/rustc_codegen_llvm/src/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -442,7 +442,7 @@ impl<'ll, 'tcx> FnAbiLlvmExt<'ll, 'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n             }\n             _ => {}\n         }\n-        for arg in &self.args {\n+        for arg in self.args.iter() {\n             if arg.pad.is_some() {\n                 apply(&ArgAttributes::new());\n             }\n@@ -518,7 +518,7 @@ impl<'ll, 'tcx> FnAbiLlvmExt<'ll, 'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n                 }\n             }\n         }\n-        for arg in &self.args {\n+        for arg in self.args.iter() {\n             if arg.pad.is_some() {\n                 apply(bx.cx, &ArgAttributes::new());\n             }"}, {"sha": "48b668253ab91e53e9059d100796555d6fed581f", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -3334,7 +3334,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                 }\n             };\n             fixup(&mut fn_abi.ret);\n-            for arg in &mut fn_abi.args {\n+            for arg in fn_abi.args.iter_mut() {\n                 fixup(arg);\n             }\n         } else {"}, {"sha": "8a5ad90db71f555041b4c45eab93759d884302e6", "filename": "compiler/rustc_target/src/abi/call/aarch64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Faarch64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -77,7 +77,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "e30dead63cbf8677069af5292294700c88345e63", "filename": "compiler/rustc_target/src/abi/call/amdgpu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Famdgpu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Famdgpu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Famdgpu.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -26,7 +26,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "1923ea58838ba12e2264f8778075a5be4a62d493", "filename": "compiler/rustc_target/src/abi/call/arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Farm.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -88,7 +88,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret, vfp);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "e20f01355a4a628c8767c4d5c31c0a929fad0d1f", "filename": "compiler/rustc_target/src/abi/call/avr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Favr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Favr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Favr.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -49,7 +49,7 @@ pub fn compute_abi_info<Ty>(fty: &mut FnAbi<'_, Ty>) {\n         classify_ret_ty(&mut fty.ret);\n     }\n \n-    for arg in &mut fty.args {\n+    for arg in fty.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "780e7df4383734abfda3c1a2a579ede03476e4bb", "filename": "compiler/rustc_target/src/abi/call/bpf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fbpf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fbpf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fbpf.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -22,7 +22,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "80a442048d53cab9ff4d5aca2002bb021e260023", "filename": "compiler/rustc_target/src/abi/call/hexagon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fhexagon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fhexagon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fhexagon.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -21,7 +21,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "c1e0f54af5f1ee673de803152f038059f45ed11c", "filename": "compiler/rustc_target/src/abi/call/m68k.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fm68k.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fm68k.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fm68k.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -21,7 +21,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "83d8657af118ec75055362c9d086ab9b6703e2f0", "filename": "compiler/rustc_target/src/abi/call/mips.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmips.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -42,7 +42,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret, &mut offset);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "2700f67b2096b408b872b29a82904bf4ad539861", "filename": "compiler/rustc_target/src/abi/call/mips64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmips64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmips64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmips64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -158,7 +158,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "bf30c24258e86a38b2a72bc8728f684cdcced63b", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -614,7 +614,7 @@ pub enum Conv {\n #[derive(PartialEq, Eq, Hash, Debug, HashStable_Generic)]\n pub struct FnAbi<'a, Ty> {\n     /// The LLVM types of each argument.\n-    pub args: Vec<ArgAbi<'a, Ty>>,\n+    pub args: Box<[ArgAbi<'a, Ty>]>,\n \n     /// LLVM return type.\n     pub ret: ArgAbi<'a, Ty>,\n@@ -738,5 +738,5 @@ mod size_asserts {\n     use rustc_data_structures::static_assert_size;\n     // These are in alphabetical order, which is easy to maintain.\n     static_assert_size!(ArgAbi<'_, usize>, 72);\n-    static_assert_size!(FnAbi<'_, usize>, 104);\n+    static_assert_size!(FnAbi<'_, usize>, 96);\n }"}, {"sha": "33ef47be00993d2d06991f32be843ad5c1a4170b", "filename": "compiler/rustc_target/src/abi/call/msp430.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmsp430.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmsp430.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmsp430.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -30,7 +30,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "4abe51cd697e0a24413d65468ca3524b5457ee64", "filename": "compiler/rustc_target/src/abi/call/nvptx64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fnvptx64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fnvptx64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fnvptx64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -38,7 +38,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }\n@@ -55,7 +55,7 @@ where\n         panic!(\"Kernels should not return anything other than () or !\");\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "70c32db0a871b3578cbe0e92b572b56460ebf32e", "filename": "compiler/rustc_target/src/abi/call/powerpc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fpowerpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fpowerpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fpowerpc.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -21,7 +21,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "359bb8fc09a876dce5026c4298c68c9ea69435f1", "filename": "compiler/rustc_target/src/abi/call/powerpc64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fpowerpc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fpowerpc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fpowerpc64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -132,7 +132,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret, abi);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "ea23692817f50f1ee7b2d33de41326f75e401efe", "filename": "compiler/rustc_target/src/abi/call/s390x.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fs390x.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fs390x.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fs390x.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -48,7 +48,7 @@ where\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "83d8657af118ec75055362c9d086ab9b6703e2f0", "filename": "compiler/rustc_target/src/abi/call/sparc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fsparc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fsparc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fsparc.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -42,7 +42,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret, &mut offset);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "1b74959ad17c2e577efc76d7cf759f4976ff7645", "filename": "compiler/rustc_target/src/abi/call/sparc64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fsparc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fsparc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fsparc64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -217,7 +217,7 @@ where\n         classify_arg(cx, &mut fn_abi.ret, Size { raw: 32 });\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "44427ee5317c1db7e50019e6959593f933d9d522", "filename": "compiler/rustc_target/src/abi/call/wasm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fwasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fwasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fwasm.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -50,7 +50,7 @@ where\n         classify_ret(cx, &mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }\n@@ -66,7 +66,7 @@ pub fn compute_wasm_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n         classify_ret(&mut fn_abi.ret);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "c2d70d1160c44f21c48b2adc60a8748de7f2244b", "filename": "compiler/rustc_target/src/abi/call/x86.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -49,7 +49,7 @@ where\n         }\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }\n@@ -72,7 +72,7 @@ where\n \n         let mut free_regs = 2;\n \n-        for arg in &mut fn_abi.args {\n+        for arg in fn_abi.args.iter_mut() {\n             let attrs = match arg.mode {\n                 PassMode::Ignore\n                 | PassMode::Indirect { attrs: _, extra_attrs: None, on_stack: _ } => {"}, {"sha": "c0c071a614f5058808e7bbd11384287ca9139e6e", "filename": "compiler/rustc_target/src/abi/call/x86_64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86_64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -239,7 +239,7 @@ where\n         x86_64_arg_or_ret(&mut fn_abi.ret, false);\n     }\n \n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}, {"sha": "1aaf0e511ca41d51c06e329d92314292d4045dcc", "filename": "compiler/rustc_target/src/abi/call/x86_win64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86_win64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75b3b3afecfb6638c7c75ad665f8f3091aab1ae/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86_win64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fx86_win64.rs?ref=b75b3b3afecfb6638c7c75ad665f8f3091aab1ae", "patch": "@@ -31,7 +31,7 @@ pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n     if !fn_abi.ret.is_ignore() {\n         fixup(&mut fn_abi.ret);\n     }\n-    for arg in &mut fn_abi.args {\n+    for arg in fn_abi.args.iter_mut() {\n         if arg.is_ignore() {\n             continue;\n         }"}]}