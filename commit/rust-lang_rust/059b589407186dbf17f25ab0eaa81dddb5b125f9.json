{"sha": "059b589407186dbf17f25ab0eaa81dddb5b125f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1OWI1ODk0MDcxODZkYmYxN2YyNWFiMGVhYTgxZGRkYjViMTI1Zjk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-06T17:44:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-06T17:44:13Z"}, "message": "Implement dynamic dispatch for self: Box<T>", "tree": {"sha": "da1e7c82fb69d0f7f14517c493a58319c122a838", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da1e7c82fb69d0f7f14517c493a58319c122a838"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/059b589407186dbf17f25ab0eaa81dddb5b125f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/059b589407186dbf17f25ab0eaa81dddb5b125f9", "html_url": "https://github.com/rust-lang/rust/commit/059b589407186dbf17f25ab0eaa81dddb5b125f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/059b589407186dbf17f25ab0eaa81dddb5b125f9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f78c99eb10fc9b0739a51b34ea5e468f3396fd6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f78c99eb10fc9b0739a51b34ea5e468f3396fd6c", "html_url": "https://github.com/rust-lang/rust/commit/f78c99eb10fc9b0739a51b34ea5e468f3396fd6c"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "562fbab4361a8c91d7893483488d71eb1d26d709", "filename": "src/vtable.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/059b589407186dbf17f25ab0eaa81dddb5b125f9/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059b589407186dbf17f25ab0eaa81dddb5b125f9/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=059b589407186dbf17f25ab0eaa81dddb5b125f9", "patch": "@@ -37,6 +37,13 @@ pub fn get_ptr_and_method_ref<'a, 'tcx: 'a>(\n     arg: CValue<'tcx>,\n     idx: usize,\n ) -> (Value, Value) {\n+    let arg = if arg.layout().ty.is_box() {\n+        // Cast `Box<T>` to `*mut T` so `load_value_pair` works\n+        arg.unchecked_cast_to(fx.layout_of(fx.tcx.mk_mut_ptr(arg.layout().ty.boxed_ty())))\n+    } else {\n+        arg\n+    };\n+\n     let (ptr, vtable) = arg.load_value_pair(fx);\n     let usize_size = fx.layout_of(fx.tcx.types.usize).size.bytes();\n     let func_ref = fx.bcx.ins().load("}]}