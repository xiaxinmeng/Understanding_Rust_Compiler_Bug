{"sha": "2982ba50fc4bb629b8fe4108a81cb2f9b053510b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ODJiYTUwZmM0YmI2MjliOGZlNDEwOGE4MWNiMmY5YjA1MzUxMGI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-23T15:10:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-23T15:10:22Z"}, "message": "Rollup merge of #82258 - tmiasko:foreign-hir-stats, r=davidtwco\n\nImplement -Z hir-stats for nested foreign items\n\nAn attempt to compute HIR stats for crates with nested foreign items results in an ICE.\n\n```rust\nfn main() {\n    extern \"C\" { fn f(); }\n}\n```\n\n```\nthread 'rustc' panicked at 'visit_nested_xxx must be manually implemented in this visitor'\n```\n\nProvide required implementation of visitor method.", "tree": {"sha": "6351625182f3aaef77a86e51f53d5f3adca1b69d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6351625182f3aaef77a86e51f53d5f3adca1b69d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2982ba50fc4bb629b8fe4108a81cb2f9b053510b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgNRrfCRBK7hj4Ov3rIwAAdHIIAFyoDCTqO9TM3B0GLP8JeKkA\nAZc3ttoRA+SYTZWJAm2ZUnJ0m2nEnh/V9LRDyYJZz4mhRSQOsMNRZW8PQrmvIH1w\nEEcYeAY+j0yXpMsAwqF0E1dfCj/JOgQVijtJA5botn8hnrRbcdPbmheglWUSzHrn\ndbWtptrKldMwAMUdhJl0XffDqQke1WKNZXwoaT7gqI2OXeCF+79ae+7Oex1TIQQY\nd/xB6J868K0g9XUJAj/EiOq6EaxzopVX7pEidPZ+fwnvBcSZqx0AeefLAvtiCYHj\nZ8jPHeH6gG29QvhIgVv2UJ7bkELhn5Lgi8Z5LAkCyy/O/tdzOhLPNuWy8tLmIN4=\n=wJO6\n-----END PGP SIGNATURE-----\n", "payload": "tree 6351625182f3aaef77a86e51f53d5f3adca1b69d\nparent 547b3adfe4afb7cfe3d3603e16faa458913ef56f\nparent bf09e0499e30a39426695c149c8a45c0c06bf715\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614093022 +0100\ncommitter GitHub <noreply@github.com> 1614093022 +0100\n\nRollup merge of #82258 - tmiasko:foreign-hir-stats, r=davidtwco\n\nImplement -Z hir-stats for nested foreign items\n\nAn attempt to compute HIR stats for crates with nested foreign items results in an ICE.\n\n```rust\nfn main() {\n    extern \"C\" { fn f(); }\n}\n```\n\n```\nthread 'rustc' panicked at 'visit_nested_xxx must be manually implemented in this visitor'\n```\n\nProvide required implementation of visitor method.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2982ba50fc4bb629b8fe4108a81cb2f9b053510b", "html_url": "https://github.com/rust-lang/rust/commit/2982ba50fc4bb629b8fe4108a81cb2f9b053510b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2982ba50fc4bb629b8fe4108a81cb2f9b053510b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547b3adfe4afb7cfe3d3603e16faa458913ef56f", "url": "https://api.github.com/repos/rust-lang/rust/commits/547b3adfe4afb7cfe3d3603e16faa458913ef56f", "html_url": "https://github.com/rust-lang/rust/commit/547b3adfe4afb7cfe3d3603e16faa458913ef56f"}, {"sha": "bf09e0499e30a39426695c149c8a45c0c06bf715", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf09e0499e30a39426695c149c8a45c0c06bf715", "html_url": "https://github.com/rust-lang/rust/commit/bf09e0499e30a39426695c149c8a45c0c06bf715"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "a2b6dd17ad9ba011520fbc0812819e1acecc75ef", "filename": "compiler/rustc_passes/src/hir_stats.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2982ba50fc4bb629b8fe4108a81cb2f9b053510b/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2982ba50fc4bb629b8fe4108a81cb2f9b053510b/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs?ref=2982ba50fc4bb629b8fe4108a81cb2f9b053510b", "patch": "@@ -114,6 +114,11 @@ impl<'v> hir_visit::Visitor<'v> for StatCollector<'v> {\n         self.visit_impl_item(nested_impl_item)\n     }\n \n+    fn visit_nested_foreign_item(&mut self, id: hir::ForeignItemId) {\n+        let nested_foreign_item = self.krate.unwrap().foreign_item(id);\n+        self.visit_foreign_item(nested_foreign_item);\n+    }\n+\n     fn visit_nested_body(&mut self, body_id: hir::BodyId) {\n         let nested_body = self.krate.unwrap().body(body_id);\n         self.visit_body(nested_body)"}]}