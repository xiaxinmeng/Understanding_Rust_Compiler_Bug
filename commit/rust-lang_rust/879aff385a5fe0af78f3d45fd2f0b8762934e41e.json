{"sha": "879aff385a5fe0af78f3d45fd2f0b8762934e41e", "node_id": "C_kwDOAAsO6NoAKDg3OWFmZjM4NWE1ZmUwYWY3OGYzZDQ1ZmQyZjBiODc2MjkzNGU0MWU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-20T21:32:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-20T21:32:01Z"}, "message": "Auto merge of #96187 - GuillaumeGomez:potential-intra-doc-links-filtering, r=notriddle\n\nPrevent `<>` links to be interpreted for intra-doc links\n\nAs discussed in [this thread](https://github.com/rust-lang/rust/pull/96135#discussion_r852107956). As mentioned, the intra-doc RFC states that `<>` links shouldn't be potential intra-doc links:  https://rust-lang.github.io/rfcs/1946-intra-rustdoc-links.html#no-autolinks-style.\n\nI renamed `markdown_links` into `potential_intra_doc_markdown_links` to make it more obvious what it's doing.\n\ncc `@petrochenkov`\nr? `@notriddle`", "tree": {"sha": "325c0c0208780d05a1a7454c41c0b825b34df785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/325c0c0208780d05a1a7454c41c0b825b34df785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/879aff385a5fe0af78f3d45fd2f0b8762934e41e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/879aff385a5fe0af78f3d45fd2f0b8762934e41e", "html_url": "https://github.com/rust-lang/rust/commit/879aff385a5fe0af78f3d45fd2f0b8762934e41e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/879aff385a5fe0af78f3d45fd2f0b8762934e41e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ea9bb29b07d76c5a7167d054b54f4eb7f5b44e", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ea9bb29b07d76c5a7167d054b54f4eb7f5b44e", "html_url": "https://github.com/rust-lang/rust/commit/51ea9bb29b07d76c5a7167d054b54f4eb7f5b44e"}, {"sha": "f988f86cdc13f75386ea58bfa11a1b9cd632bac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f988f86cdc13f75386ea58bfa11a1b9cd632bac9", "html_url": "https://github.com/rust-lang/rust/commit/f988f86cdc13f75386ea58bfa11a1b9cd632bac9"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "b0f7836a8340c1c87e74cdd97535dd2e6903d9c6", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/879aff385a5fe0af78f3d45fd2f0b8762934e41e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/879aff385a5fe0af78f3d45fd2f0b8762934e41e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=879aff385a5fe0af78f3d45fd2f0b8762934e41e", "patch": "@@ -1312,7 +1312,19 @@ crate fn markdown_links<R>(md: &str, filter_map: impl Fn(MarkdownLink) -> Option\n     let iter = Footnotes::new(HeadingLinks::new(p, None, &mut ids, HeadingOffset::H1));\n \n     for ev in iter {\n-        if let Event::Start(Tag::Link(kind, dest, _)) = ev.0 {\n+        if let Event::Start(Tag::Link(\n+            // `<>` links cannot be intra-doc links so we skip them.\n+            kind @ (LinkType::Inline\n+            | LinkType::Reference\n+            | LinkType::ReferenceUnknown\n+            | LinkType::Collapsed\n+            | LinkType::CollapsedUnknown\n+            | LinkType::Shortcut\n+            | LinkType::ShortcutUnknown),\n+            dest,\n+            _,\n+        )) = ev.0\n+        {\n             debug!(\"found link: {dest}\");\n             let span = span_for_link(&dest, ev.1);\n             filter_map(MarkdownLink { kind, link: dest.into_string(), range: span })"}]}