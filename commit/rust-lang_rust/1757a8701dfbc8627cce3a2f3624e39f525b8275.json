{"sha": "1757a8701dfbc8627cce3a2f3624e39f525b8275", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NTdhODcwMWRmYmM4NjI3Y2NlM2EyZjM2MjRlMzlmNTI1YjgyNzU=", "commit": {"author": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2017-08-22T21:24:29Z"}, "committer": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2017-08-22T21:24:29Z"}, "message": "Improve explanation of musl_root", "tree": {"sha": "51fb97a397ac174cf7b457b81cf8a6531b6fbfd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51fb97a397ac174cf7b457b81cf8a6531b6fbfd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1757a8701dfbc8627cce3a2f3624e39f525b8275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1757a8701dfbc8627cce3a2f3624e39f525b8275", "html_url": "https://github.com/rust-lang/rust/commit/1757a8701dfbc8627cce3a2f3624e39f525b8275", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1757a8701dfbc8627cce3a2f3624e39f525b8275/comments", "author": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15c141ce05793e9907aaf766d08eeaeb65788140", "url": "https://api.github.com/repos/rust-lang/rust/commits/15c141ce05793e9907aaf766d08eeaeb65788140", "html_url": "https://github.com/rust-lang/rust/commit/15c141ce05793e9907aaf766d08eeaeb65788140"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "5b03608f6875d333d4eb00c42d5e4a9329f52ebe", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1757a8701dfbc8627cce3a2f3624e39f525b8275/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1757a8701dfbc8627cce3a2f3624e39f525b8275/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=1757a8701dfbc8627cce3a2f3624e39f525b8275", "patch": "@@ -210,7 +210,10 @@ impl Step for StdLink {\n \n /// Copies the crt(1,i,n).o startup objects\n ///\n-/// Only required for musl targets that statically link to libc\n+/// Since musl supports fully static linking, we can cross link for it even\n+/// with a glibc-targeting toolchain, given we have the appropriate startup\n+/// files. As those shipped with glibc won't work, copy the ones provided by\n+/// musl so we have them on linux-gnu hosts.\n fn copy_musl_third_party_objects(build: &Build, target: Interned<String>, into: &Path) {\n     for &obj in &[\"crt1.o\", \"crti.o\", \"crtn.o\"] {\n         copy(&build.musl_root(target).unwrap().join(\"lib\").join(obj), &into.join(obj));"}]}