{"sha": "6c6cea28bde5078ed1ab07245d088e10d13756f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNmNlYTI4YmRlNTA3OGVkMWFiMDcyNDVkMDg4ZTEwZDEzNzU2Zjk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T16:01:53Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T16:01:53Z"}, "message": "Write intrinsic result to correct lvalue.", "tree": {"sha": "11592b1e2012583acdaa576d081e837c40dcd8f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11592b1e2012583acdaa576d081e837c40dcd8f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c6cea28bde5078ed1ab07245d088e10d13756f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6cea28bde5078ed1ab07245d088e10d13756f9", "html_url": "https://github.com/rust-lang/rust/commit/6c6cea28bde5078ed1ab07245d088e10d13756f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c6cea28bde5078ed1ab07245d088e10d13756f9/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb66b6701ed9bf6c9c06310814fff6463da4594", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb66b6701ed9bf6c9c06310814fff6463da4594", "html_url": "https://github.com/rust-lang/rust/commit/1eb66b6701ed9bf6c9c06310814fff6463da4594"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "73011886cdb0a2d91f787b1d1a83d39ffbe04c84", "filename": "src/interpreter.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6c6cea28bde5078ed1ab07245d088e10d13756f9/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6cea28bde5078ed1ab07245d088e10d13756f9/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=6c6cea28bde5078ed1ab07245d088e10d13756f9", "patch": "@@ -238,7 +238,14 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                         match fn_ty.abi {\n                             Abi::RustIntrinsic => {\n                                 let name = self.tcx.item_name(def_id).as_str();\n-                                try!(self.call_intrinsic(&name, substs, args))\n+                                match fn_ty.sig.0.output {\n+                                    ty::FnConverging(ty) => {\n+                                        let size = self.ty_size(ty);\n+                                        try!(self.call_intrinsic(&name, substs, args,\n+                                            return_ptr.unwrap(), size))\n+                                    }\n+                                    ty::FnDiverging => unimplemented!(),\n+                                }\n                             }\n \n                             Abi::Rust | Abi::RustCall => {\n@@ -308,12 +315,9 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n     }\n \n     fn call_intrinsic(&mut self, name: &str, substs: &'tcx Substs<'tcx>,\n-        args: &[mir::Operand<'tcx>]) -> EvalResult<TerminatorTarget>\n+        args: &[mir::Operand<'tcx>], dest: Pointer, dest_size: usize)\n+        -> EvalResult<TerminatorTarget>\n     {\n-        let ret_ptr = &mir::Lvalue::ReturnPointer;\n-        let dest = try!(self.eval_lvalue(ret_ptr));\n-        let dest_size = self.lvalue_repr(ret_ptr).size();\n-\n         match name {\n             \"assume\" => {}\n "}]}