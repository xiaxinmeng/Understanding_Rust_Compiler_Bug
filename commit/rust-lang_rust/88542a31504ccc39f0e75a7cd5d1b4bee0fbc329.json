{"sha": "88542a31504ccc39f0e75a7cd5d1b4bee0fbc329", "node_id": "C_kwDOAAsO6NoAKDg4NTQyYTMxNTA0Y2NjMzlmMGU3NWE3Y2Q1ZDFiNGJlZTBmYmMzMjk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-22T11:06:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-22T11:06:37Z"}, "message": "Rollup merge of #104615 - spastorino:create-async-def-id-in-lowering, r=compiler-errors\n\nCreate def_id for async fns during lowering\n\nr? `@compiler-errors`", "tree": {"sha": "ec3b54e15b93a1ce6cd916d20f86564bca16d6b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec3b54e15b93a1ce6cd916d20f86564bca16d6b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfK09CRBK7hj4Ov3rIwAAU50IAEEAoZ14oHmsL8G5dT3Tkgy5\nvNhzfVJir1RBSormIw/odS6xtFrVal50JdR8pUQJI8XNTIdVx78yUnOYYqt1M3Lc\n00IQujXw0y73HBVhXOgNz8JPNg99r4qpaa8xrHy2bZ408OGCgP09td8dxeFwBV+s\nODIx8+IetJ9Uv92N3R/WBDt4T595CUNicUr0JQavGUqmNyb438VruFRJmubvdgo7\nraU4jB1Mlz2xi55peKMlihP9H/kVaSGZq5d1bAW9kY2FIZmRiz41MTWgUeOw5LuC\nMjVlrb+u2F246UR0o5xdzxnTc/JACyNKxN88D5CHAaKrcVrq0UE4O0Bv4GWRx7g=\n=pjHg\n-----END PGP SIGNATURE-----\n", "payload": "tree ec3b54e15b93a1ce6cd916d20f86564bca16d6b0\nparent 20d6a44334e189989a99f2f914b243dd81e88968\nparent 520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1669115197 +0530\ncommitter GitHub <noreply@github.com> 1669115197 +0530\n\nRollup merge of #104615 - spastorino:create-async-def-id-in-lowering, r=compiler-errors\n\nCreate def_id for async fns during lowering\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329", "html_url": "https://github.com/rust-lang/rust/commit/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d6a44334e189989a99f2f914b243dd81e88968", "url": "https://api.github.com/repos/rust-lang/rust/commits/20d6a44334e189989a99f2f914b243dd81e88968", "html_url": "https://github.com/rust-lang/rust/commit/20d6a44334e189989a99f2f914b243dd81e88968"}, {"sha": "520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "html_url": "https://github.com/rust-lang/rust/commit/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "bd1876d428475ffe267b86ffd0c91a8407ae0374", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=88542a31504ccc39f0e75a7cd5d1b4bee0fbc329", "patch": "@@ -1817,9 +1817,11 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n         let opaque_ty_span = self.mark_span_with_reason(DesugaringKind::Async, span, None);\n \n-        let opaque_ty_def_id = self.local_def_id(opaque_ty_node_id);\n         let fn_def_id = self.local_def_id(fn_node_id);\n \n+        let opaque_ty_def_id =\n+            self.create_def(fn_def_id, opaque_ty_node_id, DefPathData::ImplTrait);\n+\n         // When we create the opaque type for this async fn, it is going to have\n         // to capture all the lifetimes involved in the signature (including in the\n         // return type). This is done by introducing lifetime parameters for:"}, {"sha": "4aed5d1ea3a34c1378cc0ac47c15f924c749006b", "filename": "compiler/rustc_resolve/src/def_collector.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88542a31504ccc39f0e75a7cd5d1b4bee0fbc329/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs?ref=88542a31504ccc39f0e75a7cd5d1b4bee0fbc329", "patch": "@@ -131,22 +131,17 @@ impl<'a, 'b> visit::Visitor<'a> for DefCollector<'a, 'b> {\n \n     fn visit_fn(&mut self, fn_kind: FnKind<'a>, span: Span, _: NodeId) {\n         if let FnKind::Fn(_, _, sig, _, generics, body) = fn_kind {\n-            if let Async::Yes { closure_id, return_impl_trait_id, .. } = sig.header.asyncness {\n+            if let Async::Yes { closure_id, .. } = sig.header.asyncness {\n                 self.visit_generics(generics);\n \n-                let return_impl_trait_id =\n-                    self.create_def(return_impl_trait_id, DefPathData::ImplTrait, span);\n-\n                 // For async functions, we need to create their inner defs inside of a\n                 // closure to match their desugared representation. Besides that,\n                 // we must mirror everything that `visit::walk_fn` below does.\n                 self.visit_fn_header(&sig.header);\n                 for param in &sig.decl.inputs {\n                     self.visit_param(param);\n                 }\n-                self.with_parent(return_impl_trait_id, |this| {\n-                    this.visit_fn_ret_ty(&sig.decl.output)\n-                });\n+                self.visit_fn_ret_ty(&sig.decl.output);\n                 // If this async fn has no body (i.e. it's an async fn signature in a trait)\n                 // then the closure_def will never be used, and we should avoid generating a\n                 // def-id for it."}]}