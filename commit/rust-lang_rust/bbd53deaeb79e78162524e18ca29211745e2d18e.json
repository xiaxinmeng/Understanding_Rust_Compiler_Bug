{"sha": "bbd53deaeb79e78162524e18ca29211745e2d18e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZDUzZGVhZWI3OWU3ODE2MjUyNGUxOGNhMjkyMTE3NDVlMmQxOGU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-20T16:17:12Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-22T11:26:32Z"}, "message": "Forbid non-`structural_match` types in const generics", "tree": {"sha": "73506fbfe998360dceb873efd27723960d7f0c43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73506fbfe998360dceb873efd27723960d7f0c43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbd53deaeb79e78162524e18ca29211745e2d18e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd53deaeb79e78162524e18ca29211745e2d18e", "html_url": "https://github.com/rust-lang/rust/commit/bbd53deaeb79e78162524e18ca29211745e2d18e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbd53deaeb79e78162524e18ca29211745e2d18e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "600607f45a400e5930126b5ef1dc05f5644e95c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/600607f45a400e5930126b5ef1dc05f5644e95c3", "html_url": "https://github.com/rust-lang/rust/commit/600607f45a400e5930126b5ef1dc05f5644e95c3"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "d6162c0bc0e9fe630ca890dbde8d63ba2db8af8c", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=bbd53deaeb79e78162524e18ca29211745e2d18e", "patch": "@@ -1532,6 +1532,17 @@ pub fn checked_type_of(tcx: TyCtxt<'_>, def_id: DefId, fail: bool) -> Option<Ty<\n                         );\n                     };\n                 }\n+                if ty::search_for_adt_without_structural_match(tcx, ty).is_some() {\n+                    struct_span_err!(\n+                        tcx.sess,\n+                        hir_ty.span,\n+                        E0739,\n+                        \"the types of const generic parameters must derive `PartialEq` and `Eq`\",\n+                    ).span_label(\n+                        hir_ty.span,\n+                        format!(\"`{}` doesn't derive both `PartialEq` and `Eq`\", ty),\n+                    ).emit();\n+                }\n                 ty\n             }\n             x => {"}, {"sha": "5d1afcaef91404a9c14f03d513edd3a18c105761", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=bbd53deaeb79e78162524e18ca29211745e2d18e", "patch": "@@ -4978,6 +4978,30 @@ the future, [RFC 2091] prohibits their implementation without a follow-up RFC.\n [RFC 2091]: https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md\n \"##,\n \n+E0739: r##\"\n+Only `structural_match` types (that is, types that derive `PartialEq` and `Eq`)\n+may be used as the types of const generic parameters.\n+\n+```compile_fail,E0739\n+#![feature(const_generics)]\n+\n+struct A;\n+\n+struct B<const X: A>; // error!\n+```\n+\n+To fix this example, we derive `PartialEq` and `Eq`.\n+\n+```\n+#![feature(const_generics)]\n+\n+#[derive(PartialEq, Eq)]\n+struct A;\n+\n+struct B<const X: A>; // ok!\n+```\n+\"##,\n+\n ;\n //  E0035, merged into E0087/E0089\n //  E0036, merged into E0087/E0089"}, {"sha": "7bc4f3986eb754ba7160739f6dadc49142f7282b", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs?ref=bbd53deaeb79e78162524e18ca29211745e2d18e", "patch": "@@ -0,0 +1,13 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+#[derive(PartialEq, Eq)]\n+struct A;\n+\n+struct B<const X: A>; // ok\n+\n+struct C;\n+\n+struct D<const X: C>; //~ ERROR the types of const generic parameters must derive\n+\n+fn main() {}"}, {"sha": "9ab6c69521be0cb8bf0c40c2356710a270f4405a", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbd53deaeb79e78162524e18ca29211745e2d18e/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr?ref=bbd53deaeb79e78162524e18ca29211745e2d18e", "patch": "@@ -0,0 +1,17 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/forbid-non-structural_match-types.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0739]: the types of const generic parameters must derive `PartialEq` and `Eq`\n+  --> $DIR/forbid-non-structural_match-types.rs:11:19\n+   |\n+LL | struct D<const X: C>;\n+   |                   ^ `C` doesn't derive both `PartialEq` and `Eq`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0739`."}]}