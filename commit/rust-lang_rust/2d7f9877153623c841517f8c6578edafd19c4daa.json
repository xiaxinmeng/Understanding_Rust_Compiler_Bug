{"sha": "2d7f9877153623c841517f8c6578edafd19c4daa", "node_id": "C_kwDOAAsO6NoAKDJkN2Y5ODc3MTUzNjIzYzg0MTUxN2Y4YzY1NzhlZGFmZDE5YzRkYWE", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-09-22T07:11:51Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-09-22T07:11:51Z"}, "message": "use appropriate variable names", "tree": {"sha": "1891d3144acd47243267b27970b5b6852b9bf731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1891d3144acd47243267b27970b5b6852b9bf731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d7f9877153623c841517f8c6578edafd19c4daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7f9877153623c841517f8c6578edafd19c4daa", "html_url": "https://github.com/rust-lang/rust/commit/2d7f9877153623c841517f8c6578edafd19c4daa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d7f9877153623c841517f8c6578edafd19c4daa/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de00d1ac5247a02184ef7ad044f6521ade7e0cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de00d1ac5247a02184ef7ad044f6521ade7e0cc", "html_url": "https://github.com/rust-lang/rust/commit/1de00d1ac5247a02184ef7ad044f6521ade7e0cc"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f112f1274b8c7d417476b8a137d21bc21a0dd7ce", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2d7f9877153623c841517f8c6578edafd19c4daa/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7f9877153623c841517f8c6578edafd19c4daa/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=2d7f9877153623c841517f8c6578edafd19c4daa", "patch": "@@ -35,8 +35,8 @@ pub(crate) fn target_from_impl_item<'tcx>(\n     match impl_item.kind {\n         hir::ImplItemKind::Const(..) => Target::AssocConst,\n         hir::ImplItemKind::Fn(..) => {\n-            let parent_hir_id = tcx.hir().get_parent_item(impl_item.hir_id());\n-            let containing_item = tcx.hir().expect_item(parent_hir_id);\n+            let parent_def_id = tcx.hir().get_parent_item(impl_item.hir_id());\n+            let containing_item = tcx.hir().expect_item(parent_def_id);\n             let containing_impl_is_for_trait = match &containing_item.kind {\n                 hir::ItemKind::Impl(impl_) => impl_.of_trait.is_some(),\n                 _ => bug!(\"parent of an ImplItem must be an Impl\"),\n@@ -640,17 +640,17 @@ impl CheckAttrVisitor<'_> {\n         let span = meta.span();\n         if let Some(location) = match target {\n             Target::AssocTy => {\n-                let parent_hir_id = self.tcx.hir().get_parent_item(hir_id);\n-                let containing_item = self.tcx.hir().expect_item(parent_hir_id);\n+                let parent_def_id = self.tcx.hir().get_parent_item(hir_id);\n+                let containing_item = self.tcx.hir().expect_item(parent_def_id);\n                 if Target::from_item(containing_item) == Target::Impl {\n                     Some(\"type alias in implementation block\")\n                 } else {\n                     None\n                 }\n             }\n             Target::AssocConst => {\n-                let parent_hir_id = self.tcx.hir().get_parent_item(hir_id);\n-                let containing_item = self.tcx.hir().expect_item(parent_hir_id);\n+                let parent_def_id = self.tcx.hir().get_parent_item(hir_id);\n+                let containing_item = self.tcx.hir().expect_item(parent_def_id);\n                 // We can't link to trait impl's consts.\n                 let err = \"associated constant in trait implementation block\";\n                 match containing_item.kind {"}]}