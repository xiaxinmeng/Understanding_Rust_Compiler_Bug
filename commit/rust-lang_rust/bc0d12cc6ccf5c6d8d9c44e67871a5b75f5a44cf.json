{"sha": "bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "node_id": "C_kwDOAAsO6NoAKGJjMGQxMmNjNmNjZjVjNmQ4ZDljNDRlNjc4NzFhNWI3NWY1YTQ0Y2Y", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-24T07:57:14Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-02T08:19:15Z"}, "message": "use verbose suggestions", "tree": {"sha": "f1d421f2791ec6836744b1ed2c34ebdb3a964faa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1d421f2791ec6836744b1ed2c34ebdb3a964faa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "html_url": "https://github.com/rust-lang/rust/commit/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe346e7a3776d01541fc973c4a7bb686ef3b1a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe346e7a3776d01541fc973c4a7bb686ef3b1a8", "html_url": "https://github.com/rust-lang/rust/commit/3fe346e7a3776d01541fc973c4a7bb686ef3b1a8"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "b0b7fc6ad5af862c04c1fb101948116d45214f37", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "patch": "@@ -422,7 +422,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     (receiver.span.shrink_to_lo(), format!(\"{def_path}({adjustment}\")),\n                     (receiver.span.shrink_to_hi().with_hi(successor.1), successor.0.to_string()),\n                 ];\n-                err.multipart_suggestion(\n+                err.multipart_suggestion_verbose(\n                     \"try using a fully qualified path to specify the expected types\",\n                     suggestion,\n                     Applicability::HasPlaceholders,\n@@ -441,7 +441,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     ],\n                     None => vec![(data.span(), format!(\"{}{}{}\", arrow, ret, post))],\n                 };\n-                err.multipart_suggestion(\n+                err.multipart_suggestion_verbose(\n                     \"try giving this closure an explicit return type\",\n                     suggestion,\n                     Applicability::HasPlaceholders,"}, {"sha": "220602c124cb15a47f41c261f570008285fa26f4", "filename": "src/test/ui/inference/cannot-infer-partial-try-return.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr?ref=bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "patch": "@@ -2,9 +2,12 @@ error[E0282]: type annotations needed for `Result<(), QualifiedError<_>>`\n   --> $DIR/cannot-infer-partial-try-return.rs:18:13\n    |\n LL |     let x = || -> Result<_, QualifiedError<_>> {\n-   |             ^^^^^^----------------------------\n-   |                   |\n-   |                   help: try giving this closure an explicit return type: `Result<(), QualifiedError<_>>`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try giving this closure an explicit return type\n+   |\n+LL |     let x = || -> Result<(), QualifiedError<_>> {\n+   |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "3116211b52c9075307bb2478c166684e2fb0a9ff", "filename": "src/test/ui/suggestions/suggest-closure-return-type-1.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-1.stderr?ref=bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "patch": "@@ -2,9 +2,12 @@ error[E0282]: type annotations needed for `[_; 0]`\n   --> $DIR/suggest-closure-return-type-1.rs:4:18\n    |\n LL |     unbound_drop(|| -> _ { [] });\n-   |                  ^^^^^^-\n-   |                        |\n-   |                        help: try giving this closure an explicit return type: `[_; 0]`\n+   |                  ^^^^^^^\n+   |\n+help: try giving this closure an explicit return type\n+   |\n+LL |     unbound_drop(|| -> [_; 0] { [] });\n+   |                        ~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "f368e7de467ca94847bf76348afb3d36604b783b", "filename": "src/test/ui/suggestions/suggest-closure-return-type-2.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-2.stderr?ref=bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "patch": "@@ -2,7 +2,12 @@ error[E0282]: type annotations needed for `[_; 0]`\n   --> $DIR/suggest-closure-return-type-2.rs:4:18\n    |\n LL |     unbound_drop(|| { [] })\n-   |                  ^^ - help: try giving this closure an explicit return type: `-> [_; 0]`\n+   |                  ^^\n+   |\n+help: try giving this closure an explicit return type\n+   |\n+LL |     unbound_drop(|| -> [_; 0] { [] })\n+   |                     +++++++++\n \n error: aborting due to previous error\n "}, {"sha": "6ac63a91ee9ac546637a527aa15d071bdcc688fc", "filename": "src/test/ui/type-inference/or_else-multiple-type-params.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Ftype-inference%2For_else-multiple-type-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf/src%2Ftest%2Fui%2Ftype-inference%2For_else-multiple-type-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-inference%2For_else-multiple-type-params.stderr?ref=bc0d12cc6ccf5c6d8d9c44e67871a5b75f5a44cf", "patch": "@@ -2,7 +2,12 @@ error[E0282]: type annotations needed for `Result<Child, F>`\n   --> $DIR/or_else-multiple-type-params.rs:7:18\n    |\n LL |         .or_else(|err| {\n-   |                  ^^^^^ - help: try giving this closure an explicit return type: `-> Result<Child, F>`\n+   |                  ^^^^^\n+   |\n+help: try giving this closure an explicit return type\n+   |\n+LL |         .or_else(|err| -> Result<Child, F> {\n+   |                        +++++++++++++++++++\n \n error: aborting due to previous error\n "}]}