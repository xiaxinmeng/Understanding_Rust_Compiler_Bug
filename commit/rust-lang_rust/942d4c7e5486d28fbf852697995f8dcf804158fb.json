{"sha": "942d4c7e5486d28fbf852697995f8dcf804158fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MmQ0YzdlNTQ4NmQyOGZiZjg1MjY5Nzk5NWY4ZGNmODA0MTU4ZmI=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-04-08T05:13:29Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-04-08T05:13:29Z"}, "message": "Blacklist fn item types from being used with variadic functions.", "tree": {"sha": "5179ec51d9e0b99db69bc85ff8a98099641529cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5179ec51d9e0b99db69bc85ff8a98099641529cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/942d4c7e5486d28fbf852697995f8dcf804158fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/942d4c7e5486d28fbf852697995f8dcf804158fb", "html_url": "https://github.com/rust-lang/rust/commit/942d4c7e5486d28fbf852697995f8dcf804158fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/942d4c7e5486d28fbf852697995f8dcf804158fb/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7979dd6089ee5cba39cfbe6e880a3edeb7fff788", "url": "https://api.github.com/repos/rust-lang/rust/commits/7979dd6089ee5cba39cfbe6e880a3edeb7fff788", "html_url": "https://github.com/rust-lang/rust/commit/7979dd6089ee5cba39cfbe6e880a3edeb7fff788"}], "stats": {"total": 55, "additions": 43, "deletions": 12}, "files": [{"sha": "67b91f7838c6644616ab0de8f66c96f3b9bd8a5f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/942d4c7e5486d28fbf852697995f8dcf804158fb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/942d4c7e5486d28fbf852697995f8dcf804158fb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=942d4c7e5486d28fbf852697995f8dcf804158fb", "patch": "@@ -2578,24 +2578,33 @@ fn check_argument_types<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n                 ty::TyFloat(ast::FloatTy::F32) => {\n                     fcx.type_error_message(arg.span,\n                                            |t| {\n-                        format!(\"can't pass an {} to variadic \\\n-                                 function, cast to c_double\", t)\n+                        format!(\"can't pass an `{}` to variadic \\\n+                                 function, cast to `c_double`\", t)\n                     }, arg_ty, None);\n                 }\n                 ty::TyInt(ast::IntTy::I8) | ty::TyInt(ast::IntTy::I16) | ty::TyBool => {\n                     fcx.type_error_message(arg.span, |t| {\n-                        format!(\"can't pass {} to variadic \\\n-                                 function, cast to c_int\",\n+                        format!(\"can't pass `{}` to variadic \\\n+                                 function, cast to `c_int`\",\n                                        t)\n                     }, arg_ty, None);\n                 }\n                 ty::TyUint(ast::UintTy::U8) | ty::TyUint(ast::UintTy::U16) => {\n                     fcx.type_error_message(arg.span, |t| {\n-                        format!(\"can't pass {} to variadic \\\n-                                 function, cast to c_uint\",\n+                        format!(\"can't pass `{}` to variadic \\\n+                                 function, cast to `c_uint`\",\n                                        t)\n                     }, arg_ty, None);\n                 }\n+                ty::TyFnDef(_, _, f) => {\n+                    let ptr_ty = fcx.tcx().mk_ty(ty::TyFnPtr(f));\n+                    let ptr_ty = fcx.infcx().resolve_type_vars_if_possible(&ptr_ty);\n+                    fcx.type_error_message(arg.span,\n+                                           |t| {\n+                        format!(\"can't pass `{}` to variadic \\\n+                                 function, cast to `{}`\", t, ptr_ty)\n+                    }, arg_ty, None);\n+                }\n                 _ => {}\n             }\n         }"}, {"sha": "bcc53df68a323a3d0e05b6951c2ca7a4b98d04d6", "filename": "src/test/compile-fail/issue-32201.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/942d4c7e5486d28fbf852697995f8dcf804158fb/src%2Ftest%2Fcompile-fail%2Fissue-32201.rs", "raw_url": "https://github.com/rust-lang/rust/raw/942d4c7e5486d28fbf852697995f8dcf804158fb/src%2Ftest%2Fcompile-fail%2Fissue-32201.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32201.rs?ref=942d4c7e5486d28fbf852697995f8dcf804158fb", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern {\n+    fn foo(a: i32, ...);\n+}\n+\n+fn bar(_: *const u8) {}\n+\n+fn main() {\n+    unsafe {\n+        foo(0, bar);\n+        //~^ ERROR can't pass `fn(*const u8) {bar}` to variadic function, cast to `fn(*const u8)`\n+    }\n+}"}, {"sha": "6e60562da67495513b829dec5462f0474d23f4d0", "filename": "src/test/compile-fail/variadic-ffi-3.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/942d4c7e5486d28fbf852697995f8dcf804158fb/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/942d4c7e5486d28fbf852697995f8dcf804158fb/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs?ref=942d4c7e5486d28fbf852697995f8dcf804158fb", "patch": "@@ -33,11 +33,11 @@ fn main() {\n         //~| expected variadic fn\n         //~| found non-variadic function\n \n-        foo(1, 2, 3f32); //~ ERROR: can't pass an f32 to variadic function, cast to c_double\n-        foo(1, 2, true); //~ ERROR: can't pass bool to variadic function, cast to c_int\n-        foo(1, 2, 1i8); //~ ERROR: can't pass i8 to variadic function, cast to c_int\n-        foo(1, 2, 1u8); //~ ERROR: can't pass u8 to variadic function, cast to c_uint\n-        foo(1, 2, 1i16); //~ ERROR: can't pass i16 to variadic function, cast to c_int\n-        foo(1, 2, 1u16); //~ ERROR: can't pass u16 to variadic function, cast to c_uint\n+        foo(1, 2, 3f32); //~ ERROR: can't pass an `f32` to variadic function, cast to `c_double`\n+        foo(1, 2, true); //~ ERROR: can't pass `bool` to variadic function, cast to `c_int`\n+        foo(1, 2, 1i8); //~ ERROR: can't pass `i8` to variadic function, cast to `c_int`\n+        foo(1, 2, 1u8); //~ ERROR: can't pass `u8` to variadic function, cast to `c_uint`\n+        foo(1, 2, 1i16); //~ ERROR: can't pass `i16` to variadic function, cast to `c_int`\n+        foo(1, 2, 1u16); //~ ERROR: can't pass `u16` to variadic function, cast to `c_uint`\n     }\n }"}]}