{"sha": "9070a055def9df90f7e50531dab176c30804011a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNzBhMDU1ZGVmOWRmOTBmN2U1MDUzMWRhYjE3NmMzMDgwNDAxMWE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-28T09:24:56Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-28T09:24:56Z"}, "message": "Comments after return", "tree": {"sha": "9cbd52872db24ae5e38687a7fe9babfdf0b84e9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cbd52872db24ae5e38687a7fe9babfdf0b84e9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9070a055def9df90f7e50531dab176c30804011a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9070a055def9df90f7e50531dab176c30804011a", "html_url": "https://github.com/rust-lang/rust/commit/9070a055def9df90f7e50531dab176c30804011a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9070a055def9df90f7e50531dab176c30804011a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a84287c6b06026ecc1eced2ef4d0351c11b130f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a84287c6b06026ecc1eced2ef4d0351c11b130f0", "html_url": "https://github.com/rust-lang/rust/commit/a84287c6b06026ecc1eced2ef4d0351c11b130f0"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "982bfe875009a6c6a778343dd61a278a77582b63", "filename": "src/functions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9070a055def9df90f7e50531dab176c30804011a/src%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9070a055def9df90f7e50531dab176c30804011a/src%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffunctions.rs?ref=9070a055def9df90f7e50531dab176c30804011a", "patch": "@@ -111,7 +111,6 @@ impl<'a> FmtVisitor<'a> {\n                 let snippet = self.snippet(codemap::mk_sp(snippet_lo, snippet_hi));\n                 let snippet = snippet.trim();\n                 if snippet.len() > 0 {\n-                    println!(\"found comment {}\", snippet);\n                     result.push(' ');\n                     result.push_str(snippet);\n                 }"}, {"sha": "e7557242e1be635f297a9a06314d2591ad6bc849", "filename": "src/imports.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9070a055def9df90f7e50531dab176c30804011a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9070a055def9df90f7e50531dab176c30804011a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=9070a055def9df90f7e50531dab176c30804011a", "patch": "@@ -16,7 +16,7 @@ use syntax::codemap::Span;\n use syntax::parse::token;\n use syntax::print::pprust;\n \n-use IDEAL_WIDTH;\n+use {IDEAL_WIDTH, MAX_WIDTH};\n \n // TODO change import lists with one item to a single import\n //      remove empty lists (if they're even possible)\n@@ -25,9 +25,9 @@ use IDEAL_WIDTH;\n impl<'a> FmtVisitor<'a> {\n     // Basically just pretty prints a multi-item import.\n     pub fn rewrite_use_list(&mut self,\n-                        path: &ast::Path,\n-                        path_list: &[ast::PathListItem],\n-                        vp_span: Span) -> String {\n+                            path: &ast::Path,\n+                            path_list: &[ast::PathListItem],\n+                            vp_span: Span) -> String {\n         // FIXME remove unused imports\n \n         // FIXME check indentation\n@@ -37,14 +37,25 @@ impl<'a> FmtVisitor<'a> {\n \n         // 3 = :: + {\n         let indent = l_loc.col.0 + path_str.len() + 3;\n+        // 2 = } + ;\n+        let used_width = indent + path_str.len() + 2;\n+        let budget = if used_width >= IDEAL_WIDTH {\n+            if used_width < MAX_WIDTH {\n+                MAX_WIDTH - used_width\n+            } else {\n+                // Give up\n+                return String::new();\n+            }\n+        } else {\n+            IDEAL_WIDTH - used_width\n+        };\n         let fmt = ListFormatting {\n             tactic: ListTactic::Mixed,\n             separator: \",\",\n             trailing_separator: SeparatorTactic::Never,\n             indent: indent,\n-            // 2 = } + ;\n-            h_width: IDEAL_WIDTH - (indent + path_str.len() + 2),\n-            v_width: IDEAL_WIDTH - (indent + path_str.len() + 2),\n+            h_width: budget,\n+            v_width: budget,\n         };\n \n         // TODO handle any comments inbetween items."}, {"sha": "18ddb64e47ffad6f981fb25593ae0aa63e8f5331", "filename": "src/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9070a055def9df90f7e50531dab176c30804011a/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9070a055def9df90f7e50531dab176c30804011a/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=9070a055def9df90f7e50531dab176c30804011a", "patch": "@@ -264,8 +264,8 @@ fn run(args: Vec<String>, write_mode: WriteMode) {\n \n fn main() {\n     let args: Vec<_> = std::env::args().collect();\n-    run(args, WriteMode::Display);\n-    //run(args, WriteMode::NewFile(\"new\"));\n+    //run(args, WriteMode::Display);\n+    run(args, WriteMode::NewFile(\"new\"));\n     std::env::set_exit_status(0);\n \n     // TODO unit tests"}]}