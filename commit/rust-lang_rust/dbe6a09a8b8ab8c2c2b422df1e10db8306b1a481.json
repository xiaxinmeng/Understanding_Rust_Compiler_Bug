{"sha": "dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZTZhMDlhOGI4YWI4YzJjMmI0MjJkZjFlMTBkYjgzMDZiMWE0ODE=", "commit": {"author": {"name": "ubsan", "email": "npmazzuca@gmail.com", "date": "2016-06-24T22:27:22Z"}, "committer": {"name": "ubsan", "email": "npmazzuca@gmail.com", "date": "2016-06-24T22:28:51Z"}, "message": "First commit, fix ABI string docs in reference.md", "tree": {"sha": "b77cb67c9b6e05a9921f451b8458db399e959963", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b77cb67c9b6e05a9921f451b8458db399e959963"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481", "html_url": "https://github.com/rust-lang/rust/commit/dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481/comments", "author": {"login": "ubsan", "id": 60298436, "node_id": "MDQ6VXNlcjYwMjk4NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/60298436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubsan", "html_url": "https://github.com/ubsan", "followers_url": "https://api.github.com/users/ubsan/followers", "following_url": "https://api.github.com/users/ubsan/following{/other_user}", "gists_url": "https://api.github.com/users/ubsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubsan/subscriptions", "organizations_url": "https://api.github.com/users/ubsan/orgs", "repos_url": "https://api.github.com/users/ubsan/repos", "events_url": "https://api.github.com/users/ubsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ubsan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubsan", "id": 60298436, "node_id": "MDQ6VXNlcjYwMjk4NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/60298436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubsan", "html_url": "https://github.com/ubsan", "followers_url": "https://api.github.com/users/ubsan/followers", "following_url": "https://api.github.com/users/ubsan/following{/other_user}", "gists_url": "https://api.github.com/users/ubsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubsan/subscriptions", "organizations_url": "https://api.github.com/users/ubsan/orgs", "repos_url": "https://api.github.com/users/ubsan/repos", "events_url": "https://api.github.com/users/ubsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ubsan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b89debc7b776a947331dd0ceaa52ba8476157b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b89debc7b776a947331dd0ceaa52ba8476157b2", "html_url": "https://github.com/rust-lang/rust/commit/4b89debc7b776a947331dd0ceaa52ba8476157b2"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "d564b19e1001c12b22380a1ed0f4267f96caaa64", "filename": "src/doc/reference.md", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=dbe6a09a8b8ab8c2c2b422df1e10db8306b1a481", "patch": "@@ -1631,14 +1631,41 @@ the Rust ABI and the foreign ABI.\n A number of [attributes](#ffi-attributes) control the behavior of external blocks.\n \n By default external blocks assume that the library they are calling uses the\n-standard C \"cdecl\" ABI. Other ABIs may be specified using an `abi` string, as\n-shown here:\n+standard C ABI on the specific platform. Other ABIs may be specified using an\n+`abi` string, as shown here:\n \n ```ignore\n // Interface to the Windows API\n extern \"stdcall\" { }\n ```\n \n+There are three ABI strings which are cross-platform, and which all compilers\n+are guaranteed to support:\n+\n+* `extern \"Rust\"` -- The default ABI when you write a normal `fn foo()` in any\n+  Rust code.\n+* `extern \"C\"` -- This is the same as `extern fn foo()`; whatever the default\n+  your C compiler supports.\n+* `extern \"system\"` -- Usually the same as `extern \"C\"`, except on Win32, in\n+  which case it's `\"stdcall\"`, or what you should use to link to the Windows API\n+  itself\n+\n+There are also some platform-specific ABI strings:\n+\n+* `extern \"cdecl\"` -- The default for x86\\_32 C code.\n+* `extern \"stdcall\"` -- The default for the Win32 API on x86\\_32.\n+* `extern \"win64\"` -- The default for C code on x86\\_64 Windows.\n+* `extern \"aapcs\"` -- The default for ARM.\n+* `extern \"fastcall\"`\n+* `extern \"vectorcall\"`\n+\n+Finally, there are some rustc-specific ABI strings:\n+\n+* `extern \"rust-intrinsic\"` -- The ABI of rustc intrinsics.\n+* `extern \"rust-call\"` -- The ABI of the Fn::call trait functions.\n+* `extern \"platform-intrinsic\"` -- Specific platform intrinsics -- like, for\n+  example, `sqrt` -- have this ABI. You should never have to deal with it.\n+\n The `link` attribute allows the name of the library to be specified. When\n specified the compiler will attempt to link against the native library of the\n specified name."}]}