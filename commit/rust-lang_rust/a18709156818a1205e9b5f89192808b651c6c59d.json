{"sha": "a18709156818a1205e9b5f89192808b651c6c59d", "node_id": "C_kwDOAAsO6NoAKGExODcwOTE1NjgxOGExMjA1ZTliNWY4OTE5MjgwOGI2NTFjNmM1OWQ", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-06-22T17:40:10Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-06-22T22:45:42Z"}, "message": "Add idempotency test for issue 5399", "tree": {"sha": "5d75bf8eda6fa72cffd473d94ea195edd91a01f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d75bf8eda6fa72cffd473d94ea195edd91a01f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a18709156818a1205e9b5f89192808b651c6c59d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a18709156818a1205e9b5f89192808b651c6c59d", "html_url": "https://github.com/rust-lang/rust/commit/a18709156818a1205e9b5f89192808b651c6c59d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a18709156818a1205e9b5f89192808b651c6c59d/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0156575a32511a2d58d129415e9ce31ccb80e7e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0156575a32511a2d58d129415e9ce31ccb80e7e8", "html_url": "https://github.com/rust-lang/rust/commit/0156575a32511a2d58d129415e9ce31ccb80e7e8"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "17364c38919a2696f426d97dd2d19e7b12cd8390", "filename": "tests/target/issue_5399.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a18709156818a1205e9b5f89192808b651c6c59d/tests%2Ftarget%2Fissue_5399.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a18709156818a1205e9b5f89192808b651c6c59d/tests%2Ftarget%2Fissue_5399.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_5399.rs?ref=a18709156818a1205e9b5f89192808b651c6c59d", "patch": "@@ -0,0 +1,48 @@\n+// rustfmt-max_width: 140\n+\n+impl NotificationRepository {\n+    fn set_status_changed(\n+        &self,\n+        repo_tx_conn: &RepoTxConn,\n+        rid: &RoutableId,\n+        changed_at: NaiveDateTime,\n+    ) -> NukeResult<Option<NotificationStatus>> {\n+        repo_tx_conn.run(move |conn| {\n+            let res = diesel::update(client_notification::table)\n+                .filter(\n+                    client_notification::routable_id.eq(DieselRoutableId(rid.clone())).and(\n+                        client_notification::changed_at\n+                            .lt(changed_at)\n+                            .or(client_notification::changed_at.is_null()),\n+                    ),\n+                )\n+                .set(client_notification::changed_at.eq(changed_at))\n+                .returning((\n+                    client_notification::id,\n+                    client_notification::changed_at,\n+                    client_notification::polled_at,\n+                    client_notification::notified_at,\n+                ))\n+                .get_result::<(Uuid, Option<NaiveDateTime>, Option<NaiveDateTime>, Option<NaiveDateTime>)>(conn)\n+                .optional()?;\n+\n+            match res {\n+                Some(row) => {\n+                    let client_id = client_contract::table\n+                        .inner_join(client_notification::table)\n+                        .filter(client_notification::id.eq(row.0))\n+                        .select(client_contract::client_id)\n+                        .get_result::<Uuid>(conn)?;\n+\n+                    Ok(Some(NotificationStatus {\n+                        client_id: client_id.into(),\n+                        changed_at: row.1,\n+                        polled_at: row.2,\n+                        notified_at: row.3,\n+                    }))\n+                }\n+                None => Ok(None),\n+            }\n+        })\n+    }\n+}"}]}