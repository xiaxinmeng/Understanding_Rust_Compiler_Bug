{"sha": "cfa677666cd7982cba107736be9fcc730d5bf6bf", "node_id": "C_kwDOAAsO6NoAKGNmYTY3NzY2NmNkNzk4MmNiYTEwNzczNmJlOWZjYzczMGQ1YmY2YmY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-01-10T13:57:43Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-02-03T21:59:33Z"}, "message": "Add filter-crate URL parameter", "tree": {"sha": "0abdb34ac021132f726cf993db77ecaea8349d25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0abdb34ac021132f726cf993db77ecaea8349d25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfa677666cd7982cba107736be9fcc730d5bf6bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfa677666cd7982cba107736be9fcc730d5bf6bf", "html_url": "https://github.com/rust-lang/rust/commit/cfa677666cd7982cba107736be9fcc730d5bf6bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfa677666cd7982cba107736be9fcc730d5bf6bf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7efba33582ab226e64a8cbee73041d44e7789528", "url": "https://api.github.com/repos/rust-lang/rust/commits/7efba33582ab226e64a8cbee73041d44e7789528", "html_url": "https://github.com/rust-lang/rust/commit/7efba33582ab226e64a8cbee73041d44e7789528"}], "stats": {"total": 144, "additions": 97, "deletions": 47}, "files": [{"sha": "4d13956c3758b69b93215c0855d72da007220620", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cfa677666cd7982cba107736be9fcc730d5bf6bf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/cfa677666cd7982cba107736be9fcc730d5bf6bf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=cfa677666cd7982cba107736be9fcc730d5bf6bf", "patch": "@@ -54,7 +54,6 @@ function resourcePath(basename, extension) {\n     return getVar(\"root-path\") + basename + getVar(\"resource-suffix\") + extension;\n }\n \n-\n (function () {\n     window.rootPath = getVar(\"root-path\");\n     window.currentCrate = getVar(\"current-crate\");\n@@ -232,7 +231,7 @@ function hideThemeButtonState() {\n             document.title = searchState.titleBeforeSearch;\n             // We also remove the query parameter from the URL.\n             if (searchState.browserSupportsHistoryApi()) {\n-                history.replaceState(\"\", window.currentCrate + \" - Rust\",\n+                history.replaceState(null, window.currentCrate + \" - Rust\",\n                     getNakedUrl() + window.location.hash);\n             }\n         },\n@@ -246,18 +245,6 @@ function hideThemeButtonState() {\n                 });\n             return params;\n         },\n-        putBackSearch: function(search_input) {\n-            var search = searchState.outputElement();\n-            if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n-                searchState.showResults(search);\n-                if (searchState.browserSupportsHistoryApi()) {\n-                    var extra = \"?search=\" + encodeURIComponent(search_input.value);\n-                    history.replaceState(search_input.value, \"\",\n-                        getNakedUrl() + extra + window.location.hash);\n-                }\n-                document.title = searchState.title;\n-            }\n-        },\n         browserSupportsHistoryApi: function() {\n             return window.history && typeof window.history.pushState === \"function\";\n         },\n@@ -282,14 +269,10 @@ function hideThemeButtonState() {\n             }\n \n             search_input.addEventListener(\"focus\", function() {\n-                searchState.putBackSearch(this);\n-                search_input.origPlaceholder = searchState.input.placeholder;\n+                search_input.origPlaceholder = search_input.placeholder;\n                 search_input.placeholder = \"Type your search here.\";\n                 loadSearch();\n             });\n-            search_input.addEventListener(\"blur\", function() {\n-                search_input.placeholder = searchState.input.origPlaceholder;\n-            });\n \n             if (search_input.value != '') {\n                 loadSearch();\n@@ -330,7 +313,7 @@ function hideThemeButtonState() {\n             var hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n             if (searchState.browserSupportsHistoryApi()) {\n                 // `window.location.search`` contains all the query parameters, not just `search`.\n-                history.replaceState(hash, \"\",\n+                history.replaceState(null, \"\",\n                     getNakedUrl() + window.location.search + \"#\" + hash);\n             }\n             elem = document.getElementById(hash);"}, {"sha": "8c832a222b74d942a3a45d9de3aceee3ebe69164", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 94, "deletions": 27, "changes": 121, "blob_url": "https://github.com/rust-lang/rust/blob/cfa677666cd7982cba107736be9fcc730d5bf6bf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/cfa677666cd7982cba107736be9fcc730d5bf6bf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=cfa677666cd7982cba107736be9fcc730d5bf6bf", "patch": "@@ -1,5 +1,5 @@\n /* global addClass, getNakedUrl, getSettingValue, hasOwnPropertyRustdoc, initSearch, onEach */\n-/* global onEachLazy, removeClass, searchState, updateLocalStorage */\n+/* global onEachLazy, removeClass, searchState, hasClass */\n \n (function() {\n // This mapping table should match the discriminants of\n@@ -133,6 +133,39 @@ window.initSearch = function(rawSearchIndex) {\n         searchState.input.value = params.search || \"\";\n     }\n \n+    /**\n+     * Build an URL with search parameters.\n+     *\n+     * @param {string} search            - The current search being performed.\n+     * @param {string|null} filterCrates - The current filtering crate (if any).\n+     * @return {string}\n+     */\n+    function buildUrl(search, filterCrates) {\n+        var extra = \"?search=\" + encodeURIComponent(search);\n+\n+        if (filterCrates !== null) {\n+            extra += \"&filter-crate=\" + encodeURIComponent(filterCrates);\n+        }\n+        return getNakedUrl() + extra + window.location.hash;\n+    }\n+\n+    /**\n+     * Return the filtering crate or `null` if there is none.\n+     *\n+     * @return {string|null}\n+     */\n+    function getFilterCrates() {\n+        var elem = document.getElementById(\"crate-search\");\n+\n+        if (elem &&\n+            elem.value !== \"All crates\" &&\n+            hasOwnPropertyRustdoc(rawSearchIndex, elem.value))\n+        {\n+            return elem.value;\n+        }\n+        return null;\n+    }\n+\n     /**\n      * Executes the query and returns a list of results for each results tab.\n      * @param  {Object}        query          - The user query\n@@ -595,7 +628,7 @@ window.initSearch = function(rawSearchIndex) {\n             // aliases to be before the others in the displayed results.\n             var aliases = [];\n             var crateAliases = [];\n-            if (filterCrates !== undefined) {\n+            if (filterCrates !== null) {\n                 if (ALIASES[filterCrates] && ALIASES[filterCrates][query.search]) {\n                     var query_aliases = ALIASES[filterCrates][query.search];\n                     var len = query_aliases.length;\n@@ -694,7 +727,7 @@ window.initSearch = function(rawSearchIndex) {\n         {\n             val = extractGenerics(val.substr(1, val.length - 2));\n             for (i = 0; i < nSearchWords; ++i) {\n-                if (filterCrates !== undefined && searchIndex[i].crate !== filterCrates) {\n+                if (filterCrates !== null && searchIndex[i].crate !== filterCrates) {\n                     continue;\n                 }\n                 in_args = findArg(searchIndex[i], val, true, typeFilter);\n@@ -725,7 +758,7 @@ window.initSearch = function(rawSearchIndex) {\n             var output = extractGenerics(parts[1]);\n \n             for (i = 0; i < nSearchWords; ++i) {\n-                if (filterCrates !== undefined && searchIndex[i].crate !== filterCrates) {\n+                if (filterCrates !== null && searchIndex[i].crate !== filterCrates) {\n                     continue;\n                 }\n                 var type = searchIndex[i].type;\n@@ -781,7 +814,7 @@ window.initSearch = function(rawSearchIndex) {\n             var lev, j;\n             for (j = 0; j < nSearchWords; ++j) {\n                 ty = searchIndex[j];\n-                if (!ty || (filterCrates !== undefined && ty.crate !== filterCrates)) {\n+                if (!ty || (filterCrates !== null && ty.crate !== filterCrates)) {\n                     continue;\n                 }\n                 var lev_add = 0;\n@@ -1279,17 +1312,6 @@ window.initSearch = function(rawSearchIndex) {\n         };\n     }\n \n-    function getFilterCrates() {\n-        var elem = document.getElementById(\"crate-search\");\n-\n-        if (elem && elem.value !== \"All crates\" &&\n-            hasOwnPropertyRustdoc(rawSearchIndex, elem.value))\n-        {\n-            return elem.value;\n-        }\n-        return undefined;\n-    }\n-\n     /**\n      * Perform a search based on the current state of the search input element\n      * and display the results.\n@@ -1309,27 +1331,34 @@ window.initSearch = function(rawSearchIndex) {\n         }\n         if (!forced && query.id === currentResults) {\n             if (query.query.length > 0) {\n-                searchState.putBackSearch(searchState.input);\n+                putBackSearch();\n             }\n             return;\n         }\n \n+        var filterCrates = getFilterCrates();\n+\n+        // In case we have no information about the saved crate and there is a URL query parameter,\n+        // we override it with the URL query parameter.\n+        if (filterCrates === null && params[\"filter-crate\"] !== undefined) {\n+            filterCrates = params[\"filter-crate\"];\n+        }\n+\n         // Update document title to maintain a meaningful browser history\n         searchState.title = \"Results for \" + query.query + \" - Rust\";\n \n         // Because searching is incremental by character, only the most\n         // recent search query is added to the browser history.\n         if (searchState.browserSupportsHistoryApi()) {\n-            var newURL = getNakedUrl() + \"?search=\" + encodeURIComponent(query.raw) +\n-                window.location.hash;\n+            var newURL = buildUrl(query.raw, filterCrates);\n+\n             if (!history.state && !params.search) {\n-                history.pushState(query, \"\", newURL);\n+                history.pushState(null, \"\", newURL);\n             } else {\n-                history.replaceState(query, \"\", newURL);\n+                history.replaceState(null, \"\", newURL);\n             }\n         }\n \n-        var filterCrates = getFilterCrates();\n         showResults(execSearch(query, searchWords, filterCrates),\n             params[\"go_to_first\"], filterCrates);\n     }\n@@ -1495,12 +1524,28 @@ window.initSearch = function(rawSearchIndex) {\n         search();\n     }\n \n+    function putBackSearch() {\n+        var search_input = searchState.input;\n+        if (!searchState.input) {\n+            return;\n+        }\n+        var search = searchState.outputElement();\n+        if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n+            searchState.showResults(search);\n+            if (searchState.browserSupportsHistoryApi()) {\n+                history.replaceState(null, \"\",\n+                    buildUrl(search_input.value, getFilterCrates()));\n+            }\n+            document.title = searchState.title;\n+        }\n+    }\n+\n     function registerSearchEvents() {\n         var searchAfter500ms = function() {\n             searchState.clearInputTimeout();\n             if (searchState.input.value.length === 0) {\n                 if (searchState.browserSupportsHistoryApi()) {\n-                    history.replaceState(\"\", window.currentCrate + \" - Rust\",\n+                    history.replaceState(null, window.currentCrate + \" - Rust\",\n                         getNakedUrl() + window.location.hash);\n                 }\n                 searchState.hideResults();\n@@ -1567,6 +1612,14 @@ window.initSearch = function(rawSearchIndex) {\n             }\n         });\n \n+        searchState.input.addEventListener(\"focus\", function() {\n+            putBackSearch();\n+        });\n+\n+        searchState.input.addEventListener(\"blur\", function() {\n+            searchState.input.placeholder = searchState.input.origPlaceholder;\n+        });\n+\n         // Push and pop states are used to add search results to the browser\n         // history.\n         if (searchState.browserSupportsHistoryApi()) {\n@@ -1619,7 +1672,16 @@ window.initSearch = function(rawSearchIndex) {\n     }\n \n     function updateCrate(ev) {\n-        updateLocalStorage(\"saved-filter-crate\", ev.target.value);\n+        if (ev.target.value === \"All crates\") {\n+            // If we don't remove it from the URL, it'll be picked up again by the search.\n+            var params = searchState.getQueryStringParams();\n+            var query = searchState.input.value.trim();\n+            if (!history.state && !params.search) {\n+                history.pushState(null, \"\", buildUrl(query, null));\n+            } else {\n+                history.replaceState(null, \"\", buildUrl(query, null));\n+            }\n+        }\n         // In case you \"cut\" the entry from the search input, then change the crate filter\n         // before paste back the previous search, you get the old search results without\n         // the filter. To prevent this, we need to remove the previous results.\n@@ -1629,10 +1691,15 @@ window.initSearch = function(rawSearchIndex) {\n \n     searchWords = buildIndex(rawSearchIndex);\n     registerSearchEvents();\n-    // If there's a search term in the URL, execute the search now.\n-    if (searchState.getQueryStringParams().search) {\n-        search();\n+\n+    function runSearchIfNeeded() {\n+        // If there's a search term in the URL, execute the search now.\n+        if (searchState.getQueryStringParams().search) {\n+            search();\n+        }\n     }\n+\n+    runSearchIfNeeded();\n };\n \n if (window.searchIndex !== undefined) {"}]}