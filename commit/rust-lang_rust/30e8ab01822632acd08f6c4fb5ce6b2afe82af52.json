{"sha": "30e8ab01822632acd08f6c4fb5ce6b2afe82af52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZThhYjAxODIyNjMyYWNkMDhmNmM0ZmI1Y2U2YjJhZmU4MmFmNTI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-04T14:00:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-30T14:36:23Z"}, "message": "Encode the name for associated items on a trait. Fixes #18048.", "tree": {"sha": "75786608475d2725831b58cfc4de11038f00cdf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75786608475d2725831b58cfc4de11038f00cdf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30e8ab01822632acd08f6c4fb5ce6b2afe82af52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30e8ab01822632acd08f6c4fb5ce6b2afe82af52", "html_url": "https://github.com/rust-lang/rust/commit/30e8ab01822632acd08f6c4fb5ce6b2afe82af52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30e8ab01822632acd08f6c4fb5ce6b2afe82af52/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1bc150bc43de8f8895c9d87dddf9b915eddbb2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1bc150bc43de8f8895c9d87dddf9b915eddbb2e", "html_url": "https://github.com/rust-lang/rust/commit/c1bc150bc43de8f8895c9d87dddf9b915eddbb2e"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "9378ff028e0a983a30a43c48b40ef4e5cd9c010b", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30e8ab01822632acd08f6c4fb5ce6b2afe82af52/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30e8ab01822632acd08f6c4fb5ce6b2afe82af52/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=30e8ab01822632acd08f6c4fb5ce6b2afe82af52", "patch": "@@ -1398,6 +1398,8 @@ fn encode_info_for_item(ecx: &EncodeContext,\n                         ty::StaticExplicitSelfCategory;\n                 }\n                 ty::TypeTraitItem(associated_type) => {\n+                    encode_name(rbml_w, associated_type.name);\n+\n                     let elem = ast_map::PathName(associated_type.name);\n                     encode_path(rbml_w,\n                                 path.clone().chain(Some(elem).into_iter()));"}]}