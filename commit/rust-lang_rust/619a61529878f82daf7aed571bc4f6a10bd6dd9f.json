{"sha": "619a61529878f82daf7aed571bc4f6a10bd6dd9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxOWE2MTUyOTg3OGY4MmRhZjdhZWQ1NzFiYzRmNmExMGJkNmRkOWY=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T06:28:22Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T22:05:07Z"}, "message": "Fix clippy::len_zero", "tree": {"sha": "5a4fa21a4410d353dd0522813df94cc6aea77cdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a4fa21a4410d353dd0522813df94cc6aea77cdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/619a61529878f82daf7aed571bc4f6a10bd6dd9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/619a61529878f82daf7aed571bc4f6a10bd6dd9f", "html_url": "https://github.com/rust-lang/rust/commit/619a61529878f82daf7aed571bc4f6a10bd6dd9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/619a61529878f82daf7aed571bc4f6a10bd6dd9f/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bcd8d6290f63a725a62cc7da0269c08c1b6c99b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bcd8d6290f63a725a62cc7da0269c08c1b6c99b", "html_url": "https://github.com/rust-lang/rust/commit/7bcd8d6290f63a725a62cc7da0269c08c1b6c99b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "67afd5027a9a3ddde389b3d6431dc6917ef1ed0e", "filename": "crates/ra_hir/src/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/619a61529878f82daf7aed571bc4f6a10bd6dd9f/crates%2Fra_hir%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/619a61529878f82daf7aed571bc4f6a10bd6dd9f/crates%2Fra_hir%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fpath.rs?ref=619a61529878f82daf7aed571bc4f6a10bd6dd9f", "patch": "@@ -116,7 +116,7 @@ impl Path {\n \n     /// `true` if this path is just a standalone `self`\n     pub fn is_self(&self) -> bool {\n-        self.kind == PathKind::Self_ && self.segments.len() == 0\n+        self.kind == PathKind::Self_ && self.segments.is_empty()\n     }\n \n     /// If this path is a single identifier, like `foo`, return its name.\n@@ -140,7 +140,7 @@ impl GenericArgs {\n             args.push(GenericArg::Type(type_ref));\n         }\n         // lifetimes and assoc type args ignored for now\n-        if args.len() > 0 {\n+        if !args.is_empty() {\n             Some(GenericArgs { args })\n         } else {\n             None"}, {"sha": "087dfafed826b61dfde4a3db39695c06f1ed2336", "filename": "crates/ra_ide_api/src/line_index.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/619a61529878f82daf7aed571bc4f6a10bd6dd9f/crates%2Fra_ide_api%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/619a61529878f82daf7aed571bc4f6a10bd6dd9f/crates%2Fra_ide_api%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fline_index.rs?ref=619a61529878f82daf7aed571bc4f6a10bd6dd9f", "patch": "@@ -41,7 +41,7 @@ impl LineIndex {\n                 newlines.push(curr_row);\n \n                 // Save any utf-16 characters seen in the previous line\n-                if utf16_chars.len() > 0 {\n+                if !utf16_chars.is_empty() {\n                     utf16_lines.insert(line, utf16_chars);\n                     utf16_chars = Vec::new();\n                 }\n@@ -61,7 +61,7 @@ impl LineIndex {\n         }\n \n         // Save any utf-16 characters seen in the last line\n-        if utf16_chars.len() > 0 {\n+        if !utf16_chars.is_empty() {\n             utf16_lines.insert(line, utf16_chars);\n         }\n "}, {"sha": "e3f93b23cc5984d5522e697d66eb235dba8e1364", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/619a61529878f82daf7aed571bc4f6a10bd6dd9f/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/619a61529878f82daf7aed571bc4f6a10bd6dd9f/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=619a61529878f82daf7aed571bc4f6a10bd6dd9f", "patch": "@@ -292,7 +292,7 @@ fn delim_to_str(d: tt::Delimiter, closing: bool) -> SmolStr {\n     };\n \n     let idx = closing as usize;\n-    let text = if texts.len() > 0 { &texts[idx..texts.len() - (1 - idx)] } else { \"\" };\n+    let text = if !texts.is_empty() { &texts[idx..texts.len() - (1 - idx)] } else { \"\" };\n     text.into()\n }\n "}]}