{"sha": "dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYjRlYTU4OGMyYWY3NjMzYjJkMDFkMmRmYTNkNmZmYzdkMDdlZTc=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-12-19T07:25:42Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-12-19T07:43:45Z"}, "message": "Fix blessing of new reference files\n\nAdding of new reference files wasn't handled correctly. It was trying to\nread a file that didn't exist yet.\n\nInstead of unwrapping, we now treat a missing reference file as empty\n(`Vec::new`). This makes the following conditional work. We then also\nhave to re-read the reference file after it was being copied. This\nsecond read is technically the same as in the old shell script, but\nwasn't really obvious. The shell script did a `-s` test which reads the\nfile.", "tree": {"sha": "7046d72a153bf187c215836d7a5ba3b90ef9a984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7046d72a153bf187c215836d7a5ba3b90ef9a984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEb0jkZw3AJLMiOp9wGI/nM3KGUrEFAl/drzsACgkQGI/nM3KG\nUrFCQw//bcFe7ZZGSnBjUfm5vZij/ypmKJw4qwghPOd4+SNAGTN2ogVtDjjl7rnP\nxhXNxqxUIrUfKX+vOH5PA+OHU+SZAUgjt372CLDZTz7fAMJT8dA1asnPMiMnu3d+\np5XAAUVeaBrv9b2lKrXrpvAHaQf4OKGh8TTPAakUBaujEP0ZxS/SatxoSRlexa4R\nEmpvo5OGHEp3/PFneJVjG3TcpDEHnShWGAM6CYrfSuIheEr+GQcMVwc+3XPoCZ/E\nkwdc84cGtp9saHMix66tQoHnXSUeZrjLsjsaY0AhYeIz7RnrRuu7tWWxMeZP57km\n+61exhBZdlZ+mVh+779hT13/0EBYWOUMgpjIM/05v28q2mkUs7bCRFMtQNls0hwn\nQXH/Oqva12sDGodgpKP/XJvFZYCpefHuOYxonjTNN7mGhjXuVCq2AFCOISK3jm6L\nsqHdqcefDtnFCdVV6TeQUfKRpIeDW4SH/PIea80zq0BB+QM1lVEHm5HZYrPBoQdl\nnPGtg1DajChK0AuOdS9i4lmqBPeKZAwolUPUvD2HvzMXm3Op7qxYda1lTtKfxQcs\nonIKBRS7x0YaFBGakg3GWSjqIKo+5HfKHWyQ0bDNR4S1+zCdi765knGBMUIEbYA4\ngT2ailxhABEjSANbsTKx9ujZviRTV0EK0pg+ttykC1gVZpqWryc=\n=yUjw\n-----END PGP SIGNATURE-----", "payload": "tree 7046d72a153bf187c215836d7a5ba3b90ef9a984\nparent 896d82f7ff64644656bda7a4ed8bbd55ca3b7619\nauthor Philipp Hansch <dev@phansch.net> 1608362742 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1608363825 +0100\n\nFix blessing of new reference files\n\nAdding of new reference files wasn't handled correctly. It was trying to\nread a file that didn't exist yet.\n\nInstead of unwrapping, we now treat a missing reference file as empty\n(`Vec::new`). This makes the following conditional work. We then also\nhave to re-read the reference file after it was being copied. This\nsecond read is technically the same as in the old shell script, but\nwasn't really obvious. The shell script did a `-s` test which reads the\nfile.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7", "html_url": "https://github.com/rust-lang/rust/commit/dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "896d82f7ff64644656bda7a4ed8bbd55ca3b7619", "url": "https://api.github.com/repos/rust-lang/rust/commits/896d82f7ff64644656bda7a4ed8bbd55ca3b7619", "html_url": "https://github.com/rust-lang/rust/commit/896d82f7ff64644656bda7a4ed8bbd55ca3b7619"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "645098e4cfcd2703c2e6db29522257b637825033", "filename": "clippy_dev/src/bless.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7/clippy_dev%2Fsrc%2Fbless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7/clippy_dev%2Fsrc%2Fbless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fbless.rs?ref=dfb4ea588c2af7633b2d01d2dfa3d6ffc7d07ee7", "patch": "@@ -46,13 +46,16 @@ fn update_reference_file(reference_file_path: PathBuf) {\n     }\n \n     let test_output_file = fs::read(&test_output_path).expect(\"Unable to read test output file\");\n-    let reference_file = fs::read(&reference_file_path).expect(\"Unable to read reference file\");\n+    let reference_file = fs::read(&reference_file_path).unwrap_or_default();\n \n     if test_output_file != reference_file {\n         // If a test run caused an output file to change, update the reference file\n         println!(\"updating {}\", &relative_reference_file_path.display());\n         fs::copy(test_output_path, &reference_file_path).expect(\"Could not update reference file\");\n \n+        // We need to re-read the file now because it was potentially updated from copying\n+        let reference_file = fs::read(&reference_file_path).unwrap_or_default();\n+\n         if reference_file.is_empty() {\n             // If we copied over an empty output file, we remove the now empty reference file\n             println!(\"removing {}\", &relative_reference_file_path.display());"}]}