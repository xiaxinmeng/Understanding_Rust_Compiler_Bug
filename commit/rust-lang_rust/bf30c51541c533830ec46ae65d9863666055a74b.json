{"sha": "bf30c51541c533830ec46ae65d9863666055a74b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMzBjNTE1NDFjNTMzODMwZWM0NmFlNjVkOTg2MzY2NjA1NWE3NGI=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-07-19T16:33:55Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-07-29T14:23:32Z"}, "message": "Rename feature gate bufwriter_into_parts from bufwriter_into_raw_parts\n\nAs requested\n  https://github.com/rust-lang/rust/pull/85901#pullrequestreview-698404772\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "edccbaf8c42627dd79af0ac7c2f26aeb6a0a607b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edccbaf8c42627dd79af0ac7c2f26aeb6a0a607b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf30c51541c533830ec46ae65d9863666055a74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf30c51541c533830ec46ae65d9863666055a74b", "html_url": "https://github.com/rust-lang/rust/commit/bf30c51541c533830ec46ae65d9863666055a74b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf30c51541c533830ec46ae65d9863666055a74b/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66f38075aff7d168795544638893d87217defe64", "url": "https://api.github.com/repos/rust-lang/rust/commits/66f38075aff7d168795544638893d87217defe64", "html_url": "https://github.com/rust-lang/rust/commit/66f38075aff7d168795544638893d87217defe64"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9da5fbff9cf0295184d13e57e01b5a0d483a2fed", "filename": "library/std/src/io/buffered/bufwriter.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bf30c51541c533830ec46ae65d9863666055a74b/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf30c51541c533830ec46ae65d9863666055a74b/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs?ref=bf30c51541c533830ec46ae65d9863666055a74b", "patch": "@@ -323,7 +323,7 @@ impl<W: Write> BufWriter<W> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(bufwriter_into_raw_parts)]\n+    /// #![feature(bufwriter_into_parts)]\n     /// use std::io::{BufWriter, Write};\n     ///\n     /// let mut buffer = [0u8; 10];\n@@ -334,7 +334,7 @@ impl<W: Write> BufWriter<W> {\n     /// assert_eq!(recovered_writer.len(), 0);\n     /// assert_eq!(&buffered_data.unwrap(), b\"ata\");\n     /// ```\n-    #[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+    #[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n     pub fn into_parts(mut self) -> (W, Result<Vec<u8>, WriterPanicked>) {\n         let buf = mem::take(&mut self.buf);\n         let buf = if !self.panicked { Ok(buf) } else { Err(WriterPanicked { buf }) };\n@@ -444,14 +444,14 @@ impl<W: Write> BufWriter<W> {\n     }\n }\n \n-#[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+#[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n /// Error returned for the buffered data from `BufWriter::into_parts`, when the underlying\n /// writer has previously panicked.  Contains the (possibly partly written) buffered data.\n ///\n /// # Example\n ///\n /// ```\n-/// #![feature(bufwriter_into_raw_parts)]\n+/// #![feature(bufwriter_into_parts)]\n /// use std::io::{self, BufWriter, Write};\n /// use std::panic::{catch_unwind, AssertUnwindSafe};\n ///\n@@ -478,7 +478,7 @@ pub struct WriterPanicked {\n impl WriterPanicked {\n     /// Returns the perhaps-unwritten data.  Some of this data may have been written by the\n     /// panicking call(s) to the underlying writer, so simply writing it again is not a good idea.\n-    #[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+    #[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n     pub fn into_inner(self) -> Vec<u8> {\n         self.buf\n     }\n@@ -487,22 +487,22 @@ impl WriterPanicked {\n         \"BufWriter inner writer panicked, what data remains unwritten is not known\";\n }\n \n-#[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+#[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n impl error::Error for WriterPanicked {\n     #[allow(deprecated, deprecated_in_future)]\n     fn description(&self) -> &str {\n         Self::DESCRIPTION\n     }\n }\n \n-#[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+#[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n impl fmt::Display for WriterPanicked {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"{}\", Self::DESCRIPTION)\n     }\n }\n \n-#[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+#[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n impl fmt::Debug for WriterPanicked {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_struct(\"WriterPanicked\")"}, {"sha": "8cfffc2fd35a4e32ccd0faefa36be2c8089677ae", "filename": "library/std/src/io/buffered/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf30c51541c533830ec46ae65d9863666055a74b/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf30c51541c533830ec46ae65d9863666055a74b/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fmod.rs?ref=bf30c51541c533830ec46ae65d9863666055a74b", "patch": "@@ -14,7 +14,7 @@ use crate::io::Error;\n \n pub use bufreader::BufReader;\n pub use bufwriter::BufWriter;\n-#[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+#[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n pub use bufwriter::WriterPanicked;\n pub use linewriter::LineWriter;\n use linewritershim::LineWriterShim;"}, {"sha": "c58abf2a737a355b0061661b6003e6848ab12088", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf30c51541c533830ec46ae65d9863666055a74b/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf30c51541c533830ec46ae65d9863666055a74b/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=bf30c51541c533830ec46ae65d9863666055a74b", "patch": "@@ -264,7 +264,7 @@ use crate::sys_common::memchr;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::buffered::IntoInnerError;\n-#[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"80690\")]\n+#[unstable(feature = \"bufwriter_into_parts\", issue = \"80690\")]\n pub use self::buffered::WriterPanicked;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::buffered::{BufReader, BufWriter, LineWriter};"}]}