{"sha": "69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YWIyYjVmNWUzZWJiM2JkY2QwN2M4ZGUxMmQyNjA0Y2UyOTgxYTI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-10-05T10:09:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-05T10:09:49Z"}, "message": "Merge pull request #2023 from topecongiro/issue-2020\n\nUse a correct budget for where predicate", "tree": {"sha": "83918e7593f61473cb1afec2908f90fadd0eadf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83918e7593f61473cb1afec2908f90fadd0eadf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "html_url": "https://github.com/rust-lang/rust/commit/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61043e64e05972219781031b5f3a2c8b6b73234b", "url": "https://api.github.com/repos/rust-lang/rust/commits/61043e64e05972219781031b5f3a2c8b6b73234b", "html_url": "https://github.com/rust-lang/rust/commit/61043e64e05972219781031b5f3a2c8b6b73234b"}, {"sha": "17529299833bd1a3085a411998d0f345131aea0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/17529299833bd1a3085a411998d0f345131aea0d", "html_url": "https://github.com/rust-lang/rust/commit/17529299833bd1a3085a411998d0f345131aea0d"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "8678e40ad22a94ace24ab36e181c9ba159b0133d", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "patch": "@@ -2529,7 +2529,9 @@ fn rewrite_where_clause_rfc_style(\n         \"\\n\".to_owned() + &block_shape.indent.to_string(context.config)\n     };\n \n-    let clause_shape = block_shape.block_indent(context.config.tab_spaces());\n+    let clause_shape = try_opt!(block_shape.block_left(context.config.tab_spaces()));\n+    // 1 = `,`\n+    let clause_shape = try_opt!(clause_shape.sub_width(1));\n     // each clause on one line, trailing comma (except if suppress_comma)\n     let span_start = where_clause.predicates[0].span().lo();\n     // If we don't have the start of the next span, then use the end of the\n@@ -2543,7 +2545,7 @@ fn rewrite_where_clause_rfc_style(\n         terminator,\n         |pred| pred.span().lo(),\n         |pred| pred.span().hi(),\n-        |pred| pred.rewrite(context, block_shape),\n+        |pred| pred.rewrite(context, clause_shape),\n         span_start,\n         span_end,\n         false,"}, {"sha": "060871df16132e4602be094b1d82ded1e59ba54e", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "patch": "@@ -438,7 +438,7 @@ impl Rewrite for ast::WherePredicate {\n \n                     // 6 = \"for<> \".len()\n                     let used_width = lifetime_str.len() + type_str.len() + colon.len() + 6;\n-                    let ty_shape = try_opt!(shape.block_left(used_width));\n+                    let ty_shape = try_opt!(shape.offset_left(used_width));\n                     let bounds: Vec<_> = try_opt!(\n                         bounds\n                             .iter()\n@@ -462,7 +462,7 @@ impl Rewrite for ast::WherePredicate {\n                     let used_width = type_str.len() + colon.len();\n                     let ty_shape = match context.config.where_style() {\n                         Style::Legacy => try_opt!(shape.block_left(used_width)),\n-                        Style::Rfc => shape.block_indent(context.config.tab_spaces()),\n+                        Style::Rfc => shape,\n                     };\n                     let bounds: Vec<_> = try_opt!(\n                         bounds\n@@ -552,10 +552,9 @@ impl Rewrite for ast::TyParamBound {\n                 tref.rewrite(context, shape)\n             }\n             ast::TyParamBound::TraitTyParamBound(ref tref, ast::TraitBoundModifier::Maybe) => {\n-                let budget = try_opt!(shape.width.checked_sub(1));\n                 Some(format!(\n                     \"?{}\",\n-                    try_opt!(tref.rewrite(context, Shape::legacy(budget, shape.indent + 1)))\n+                    try_opt!(tref.rewrite(context, try_opt!(shape.offset_left(1))))\n                 ))\n             }\n             ast::TyParamBound::RegionTyParamBound(ref l) => l.rewrite(context, shape),\n@@ -623,11 +622,10 @@ impl Rewrite for ast::PolyTraitRef {\n \n             // 6 is \"for<> \".len()\n             let extra_offset = lifetime_str.len() + 6;\n-            let max_path_width = try_opt!(shape.width.checked_sub(extra_offset));\n-            let path_str = try_opt!(self.trait_ref.rewrite(\n-                context,\n-                Shape::legacy(max_path_width, shape.indent + extra_offset),\n-            ));\n+            let path_str = try_opt!(\n+                self.trait_ref\n+                    .rewrite(context, try_opt!(shape.offset_left(extra_offset)))\n+            );\n \n             Some(\n                 if context.config.spaces_within_angle_brackets() && !lifetime_str.is_empty() {"}, {"sha": "678b060602e753319694618347d613b6a7308934", "filename": "tests/source/where-clause-rfc.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/tests%2Fsource%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/tests%2Fsource%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fwhere-clause-rfc.rs?ref=69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "patch": "@@ -48,3 +48,12 @@ pub trait SomeTrait<T>\n     T: Something + Sync + Send + Display     + Debug     + Copy + Hash + Debug + Display + Write + Read + FromStr\n {\n }\n+\n+// #2020\n+impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n+    fn elaborate_bounds<F>(&mut self, bounds: &[ty::PolyTraitRef<'tcx>], mut mk_cand: F)\n+    where F: for<'b> FnMut(&mut ProbeContext<'b, 'gcx, 'tcx>, ty::PolyTraitRef<'tcx>, ty::AssociatedItem),\n+    {\n+        // ...\n+    }\n+}"}, {"sha": "f52cf3e220e71f8a2b6779152bee8d3b85ad1d89", "filename": "tests/target/where-clause-rfc.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/tests%2Ftarget%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2/tests%2Ftarget%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwhere-clause-rfc.rs?ref=69ab2b5f5e3ebb3bdcd07c8de12d2604ce2981a2", "patch": "@@ -113,3 +113,17 @@ where\n         + FromStr,\n {\n }\n+\n+// #2020\n+impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n+    fn elaborate_bounds<F>(&mut self, bounds: &[ty::PolyTraitRef<'tcx>], mut mk_cand: F)\n+    where\n+        F: for<'b> FnMut(\n+            &mut ProbeContext<'b, 'gcx, 'tcx>,\n+            ty::PolyTraitRef<'tcx>,\n+            ty::AssociatedItem,\n+        ),\n+    {\n+        // ...\n+    }\n+}"}]}