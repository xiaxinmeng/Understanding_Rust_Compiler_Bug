{"sha": "26b2733b15a0011ff1569e059ae7520d1a3a519d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YjI3MzNiMTVhMDAxMWZmMTU2OWUwNTlhZTc1MjBkMWEzYTUxOWQ=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-10-07T20:58:34Z"}, "committer": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-10-07T20:58:34Z"}, "message": "Add a lint for sized integer types in a mutex", "tree": {"sha": "eb1261978b36318b9cfd5cebcc709361ff017fb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb1261978b36318b9cfd5cebcc709361ff017fb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26b2733b15a0011ff1569e059ae7520d1a3a519d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26b2733b15a0011ff1569e059ae7520d1a3a519d", "html_url": "https://github.com/rust-lang/rust/commit/26b2733b15a0011ff1569e059ae7520d1a3a519d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26b2733b15a0011ff1569e059ae7520d1a3a519d/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8aa0431bdea0b5adb8a53a7a8eb32b091759561", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8aa0431bdea0b5adb8a53a7a8eb32b091759561", "html_url": "https://github.com/rust-lang/rust/commit/f8aa0431bdea0b5adb8a53a7a8eb32b091759561"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "50789cc3db2ab1df57923cc076fe7ed091f14bf8", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/26b2733b15a0011ff1569e059ae7520d1a3a519d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/26b2733b15a0011ff1569e059ae7520d1a3a519d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=26b2733b15a0011ff1569e059ae7520d1a3a519d", "patch": "@@ -6,7 +6,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 60 lints included in this crate:\n+There are 61 lints included in this crate:\n \n name                                                                                                   | default | meaning\n -------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -38,6 +38,7 @@ name\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                               | warn    | taking a number modulo 1, which always returns 0\n [mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                     | allow   | usage of double-mut refs, e.g. `&mut &mut ...` (either copy'n'paste error, or shows a fundamental misunderstanding of references)\n [mutex_atomic](https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic)                           | warn    | using a Mutex where an atomic value could be used instead\n+[mutex_integer](https://github.com/Manishearth/rust-clippy/wiki#mutex_integer)                         | allow   | using a Mutex for an integer type\n [needless_bool](https://github.com/Manishearth/rust-clippy/wiki#needless_bool)                         | warn    | if-statements with plain booleans in the then- and else-clause, e.g. `if p { true } else { false }`\n [needless_lifetimes](https://github.com/Manishearth/rust-clippy/wiki#needless_lifetimes)               | warn    | using explicit lifetimes for references in function arguments when elision rules would allow omitting them\n [needless_range_loop](https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop)             | warn    | for-looping over a range of indices where an iterator over items would do"}, {"sha": "3483efea86808d45fb0d4a54d062e67313ae600d", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26b2733b15a0011ff1569e059ae7520d1a3a519d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b2733b15a0011ff1569e059ae7520d1a3a519d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=26b2733b15a0011ff1569e059ae7520d1a3a519d", "patch": "@@ -96,6 +96,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         methods::RESULT_UNWRAP_USED,\n         methods::WRONG_PUB_SELF_CONVENTION,\n         mut_mut::MUT_MUT,\n+        mutex_atomic::MUTEX_INTEGER,\n         ptr_arg::PTR_ARG,\n         shadow::SHADOW_REUSE,\n         shadow::SHADOW_SAME,"}, {"sha": "994e793798493395f87190d55c5053388604dbb5", "filename": "src/mutex_atomic.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/26b2733b15a0011ff1569e059ae7520d1a3a519d/src%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b2733b15a0011ff1569e059ae7520d1a3a519d/src%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmutex_atomic.rs?ref=26b2733b15a0011ff1569e059ae7520d1a3a519d", "patch": "@@ -17,11 +17,18 @@ declare_lint! {\n     \"using a Mutex where an atomic value could be used instead\"\n }\n \n+declare_lint! {\n+    pub MUTEX_INTEGER,\n+    Allow,\n+    \"using a Mutex for an integer type\"\n+}\n+\n impl LintPass for MutexAtomic {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(MUTEX_ATOMIC)\n+        lint_array!(MUTEX_ATOMIC, MUTEX_INTEGER)\n     }\n }\n+\n pub struct MutexAtomic;\n \n impl LateLintPass for MutexAtomic {\n@@ -33,7 +40,13 @@ impl LateLintPass for MutexAtomic {\n                 if let Some(atomic_name) = get_atomic_name(mutex_param) {\n                     let msg = format!(\"Consider using an {} instead of a \\\n                                        Mutex here.\", atomic_name);\n-                    span_lint(cx, MUTEX_ATOMIC, expr.span, &msg);\n+                    match *mutex_param {\n+                        ty::TyUint(t) if t != ast::TyUs =>\n+                            span_lint(cx, MUTEX_INTEGER, expr.span, &msg),\n+                        ty::TyInt(t) if t != ast::TyIs =>\n+                            span_lint(cx, MUTEX_INTEGER, expr.span, &msg),\n+                        _ => span_lint(cx, MUTEX_ATOMIC, expr.span, &msg)\n+                    }\n                 }\n             }\n         }\n@@ -43,8 +56,8 @@ impl LateLintPass for MutexAtomic {\n fn get_atomic_name(ty: &ty::TypeVariants) -> Option<(&'static str)> {\n     match *ty {\n         ty::TyBool => Some(\"AtomicBool\"),\n-        ty::TyUint(ast::TyUs) => Some(\"AtomicUsize\"),\n-        ty::TyInt(ast::TyIs) => Some(\"AtomicIsize\"),\n+        ty::TyUint(_) => Some(\"AtomicUsize\"),\n+        ty::TyInt(_) => Some(\"AtomicIsize\"),\n         ty::TyRawPtr(_) => Some(\"AtomicPtr\"),\n         _ => None\n     }"}, {"sha": "20a34ba5547c3a6e5c2d7311e6796a7d273dc23c", "filename": "tests/compile-fail/mutex_atomic.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/26b2733b15a0011ff1569e059ae7520d1a3a519d/tests%2Fcompile-fail%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b2733b15a0011ff1569e059ae7520d1a3a519d/tests%2Fcompile-fail%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmutex_atomic.rs?ref=26b2733b15a0011ff1569e059ae7520d1a3a519d", "patch": "@@ -2,6 +2,7 @@\n \n #![plugin(clippy)]\n #![deny(clippy)]\n+#![deny(mutex_integer)]\n \n fn main() {\n     use std::sync::Mutex;\n@@ -11,5 +12,7 @@ fn main() {\n     let mut x = 4u32;\n     Mutex::new(&x as *const u32); //~ERROR Consider using an AtomicPtr instead of a Mutex here.\n     Mutex::new(&mut x as *mut u32); //~ERROR Consider using an AtomicPtr instead of a Mutex here.\n+    Mutex::new(0u32); //~ERROR Consider using an AtomicUsize instead of a Mutex here.\n+    Mutex::new(0i32); //~ERROR Consider using an AtomicIsize instead of a Mutex here.\n     Mutex::new(0f32); // there are no float atomics, so this should not lint\n }"}]}