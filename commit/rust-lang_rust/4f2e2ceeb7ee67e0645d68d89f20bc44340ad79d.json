{"sha": "4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d", "node_id": "C_kwDOAAsO6NoAKDRmMmUyY2VlYjdlZTY3ZTA2NDVkNjhkODlmMjBiYzQ0MzQwYWQ3OWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-28T14:20:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-28T14:20:25Z"}, "message": "Rollup merge of #93295 - ChrisDenton:tempdir-double-panic, r=dtolnay\n\nAvoid double panics when using `TempDir` in tests\n\n`TempDir` could panic on drop if `remove_dir_all` returns an error. If this happens while already panicking, the test process would abort and therefore not show the test results.\n\nThis PR tries to avoid such double panics.", "tree": {"sha": "d29654ca7c8bd9eb471c6fc39bb89a9d11b846b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d29654ca7c8bd9eb471c6fc39bb89a9d11b846b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8/upCRBK7hj4Ov3rIwAAREUIAFxt15p8oXQZsc55RS2vQmx0\npuXtuSG/CKPMRj0a0n0P+iQYOS65KoWRRcIvHAU44QekxiwKRIB/UVZpoT8ujBSZ\nIyo6lHKf+D6C4hayu+AhfhGX+cIiBAsAU+OfKhXyoOlcoyKCHzXIwGKpHj1dLPuV\nxWK16Vb40t9EjWXVEkzSd5QcRC7R5KlpI70LoUyOhrXzfaHJpAIp+LUhd8TnAcix\no5MaIJV6Z0FM4iwvkWauN2ujDkQt1bHwmBT19mouaPp46gfnGpyTMSkB7yQ06t6m\noIQnjy50WWiC7E0eg+99XgQ63SPe4ymb52fCMcCdbuPQ5Ibigo7m3pZsSuekIM4=\n=ujaL\n-----END PGP SIGNATURE-----\n", "payload": "tree d29654ca7c8bd9eb471c6fc39bb89a9d11b846b4\nparent ada77e94ab9244dfb1b535b5340ebe4eefd80d7d\nparent 84c0c9d20dbe1d171e6aaf61b8e512d6dc78412f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643379625 +0100\ncommitter GitHub <noreply@github.com> 1643379625 +0100\n\nRollup merge of #93295 - ChrisDenton:tempdir-double-panic, r=dtolnay\n\nAvoid double panics when using `TempDir` in tests\n\n`TempDir` could panic on drop if `remove_dir_all` returns an error. If this happens while already panicking, the test process would abort and therefore not show the test results.\n\nThis PR tries to avoid such double panics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d", "html_url": "https://github.com/rust-lang/rust/commit/4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ada77e94ab9244dfb1b535b5340ebe4eefd80d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ada77e94ab9244dfb1b535b5340ebe4eefd80d7d", "html_url": "https://github.com/rust-lang/rust/commit/ada77e94ab9244dfb1b535b5340ebe4eefd80d7d"}, {"sha": "84c0c9d20dbe1d171e6aaf61b8e512d6dc78412f", "url": "https://api.github.com/repos/rust-lang/rust/commits/84c0c9d20dbe1d171e6aaf61b8e512d6dc78412f", "html_url": "https://github.com/rust-lang/rust/commit/84c0c9d20dbe1d171e6aaf61b8e512d6dc78412f"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "d1e9fed41fc930093b85b900ab5fb9e2735fcc3d", "filename": "library/std/src/sys_common/io.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d/library%2Fstd%2Fsrc%2Fsys_common%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d/library%2Fstd%2Fsrc%2Fsys_common%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fio.rs?ref=4f2e2ceeb7ee67e0645d68d89f20bc44340ad79d", "patch": "@@ -8,6 +8,7 @@ pub mod test {\n     use crate::env;\n     use crate::fs;\n     use crate::path::{Path, PathBuf};\n+    use crate::thread;\n     use rand::RngCore;\n \n     pub struct TempDir(PathBuf);\n@@ -29,7 +30,12 @@ pub mod test {\n             // Gee, seeing how we're testing the fs module I sure hope that we\n             // at least implement this correctly!\n             let TempDir(ref p) = *self;\n-            fs::remove_dir_all(p).unwrap();\n+            let result = fs::remove_dir_all(p);\n+            // Avoid panicking while panicking as this causes the process to\n+            // immediately abort, without displaying test results.\n+            if !thread::panicking() {\n+                result.unwrap();\n+            }\n         }\n     }\n "}]}