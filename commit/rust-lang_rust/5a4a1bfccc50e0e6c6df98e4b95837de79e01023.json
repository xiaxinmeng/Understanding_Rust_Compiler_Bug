{"sha": "5a4a1bfccc50e0e6c6df98e4b95837de79e01023", "node_id": "C_kwDOAAsO6NoAKDVhNGExYmZjY2M1MGUwZTZjNmRmOThlNGI5NTgzN2RlNzllMDEwMjM", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-05-15T21:29:40Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-06T18:15:54Z"}, "message": "Remove incorrect comment", "tree": {"sha": "0875d9d517031df9ffeff12aee2b78fb2a37626f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0875d9d517031df9ffeff12aee2b78fb2a37626f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a4a1bfccc50e0e6c6df98e4b95837de79e01023", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmKeRFoACgkQGBtJ+fOP\nM3QyjwwAlQ2iGb1IxS3DlDxuXoMh60Wy6qDYa3Dviva2PCQ6fE0un3BMx+J0iCaE\nBUCPZdyzw/MmeaPZIDcdJn0XlcJZYmiPX3KYtFZWh4YoksVLmqpFzq1mLM65/Rd4\nwuZgdswddbM0lK5yPBfp8EyZgO0ZHj4NVHlSOv2MmEebPcvQhaNUqleW4DZ/1olk\nlsBF2SPrcaUHsPGoStmWeVNLSP00jHLh8+OOjblMHR9RJTyK7JgC7bCRd5+WlICm\nHnD8pccLPCnQtOyQL5uk2hZgUHBcep2uQuVB9OYehd3CSH5AHtb8svWQLjyG/XEF\n5JRW9BJfJpH4EuLM9fC+7/s5+Es4cV0CTlNKWjtAamZ3i2b8HgmAPMzz2C4nu1Fy\nj5HUFpgTa+AxBbMtdUJ3WbX1JkB+jjqqVuyNRnrcGlrW5dVr8l69MFED+VuVZBCk\ngFVnZn6IZMKNxOocpY3henu+8gYhnxyVjW62PToNC21Mlu4k4TtbF9swo1xWwF4p\n6pTjXD1C\n=wYpG\n-----END PGP SIGNATURE-----", "payload": "tree 0875d9d517031df9ffeff12aee2b78fb2a37626f\nparent 335667c7749930f9f30e7045bc29690dd81a85f8\nauthor Andy Wang <cbeuw.andy@gmail.com> 1652650180 +0100\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1654539354 +0100\n\nRemove incorrect comment\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4a1bfccc50e0e6c6df98e4b95837de79e01023", "html_url": "https://github.com/rust-lang/rust/commit/5a4a1bfccc50e0e6c6df98e4b95837de79e01023", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a4a1bfccc50e0e6c6df98e4b95837de79e01023/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "335667c7749930f9f30e7045bc29690dd81a85f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/335667c7749930f9f30e7045bc29690dd81a85f8", "html_url": "https://github.com/rust-lang/rust/commit/335667c7749930f9f30e7045bc29690dd81a85f8"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "f6466724b5e971377192f15349b88a93168426e1", "filename": "src/concurrency/weak_memory.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4a1bfccc50e0e6c6df98e4b95837de79e01023/src%2Fconcurrency%2Fweak_memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4a1bfccc50e0e6c6df98e4b95837de79e01023/src%2Fconcurrency%2Fweak_memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fweak_memory.rs?ref=5a4a1bfccc50e0e6c6df98e4b95837de79e01023", "patch": "@@ -127,9 +127,7 @@ impl StoreBufferAlloc {\n             }\n             AccessType::ImperfectlyOverlapping(index_range) => {\n                 // Accesses that imperfectly overlaps with existing atomic objects\n-                // do not have well-defined behaviours. But we don't throw a UB here\n-                // because we have (or will) checked that all bytes in the current\n-                // access are non-racy.\n+                // do not have well-defined behaviours.\n                 // The behaviour here is that we delete all the existing objects this\n                 // access touches, and allocate a new and empty one for the exact range.\n                 // A read on an empty buffer returns None, which means the program will"}]}