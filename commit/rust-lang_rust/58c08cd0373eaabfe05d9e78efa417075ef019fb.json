{"sha": "58c08cd0373eaabfe05d9e78efa417075ef019fb", "node_id": "C_kwDOAAsO6NoAKDU4YzA4Y2QwMzczZWFhYmZlMDVkOWU3OGVmYTQxNzA3NWVmMDE5ZmI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-01T13:19:27Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-01T13:19:27Z"}, "message": "Remove type flag based opaque type workaround", "tree": {"sha": "f95a02c10bff0832ac3132f34d6fd8e6debb42df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f95a02c10bff0832ac3132f34d6fd8e6debb42df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58c08cd0373eaabfe05d9e78efa417075ef019fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58c08cd0373eaabfe05d9e78efa417075ef019fb", "html_url": "https://github.com/rust-lang/rust/commit/58c08cd0373eaabfe05d9e78efa417075ef019fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58c08cd0373eaabfe05d9e78efa417075ef019fb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84fc5516648e34f15d17b2ca0b892adb3743a5c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/84fc5516648e34f15d17b2ca0b892adb3743a5c0", "html_url": "https://github.com/rust-lang/rust/commit/84fc5516648e34f15d17b2ca0b892adb3743a5c0"}], "stats": {"total": 211, "additions": 30, "deletions": 181}, "files": [{"sha": "54cfed5807cbdf6cd5878e3888e3f218bc513b5a", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -204,14 +204,6 @@ bitflags! {\n                                           | TypeFlags::HAS_CT_INFER.bits\n                                           | TypeFlags::HAS_TY_PLACEHOLDER.bits\n                                           | TypeFlags::HAS_CT_PLACEHOLDER.bits\n-                                          // The `evaluate_obligation` query does not return further\n-                                          // obligations. If it evaluates an obligation with an opaque\n-                                          // type, that opaque type may get compared to another type,\n-                                          // constraining it. We would lose this information.\n-                                          // FIXME: differentiate between crate-local opaque types\n-                                          // and opaque types from other crates, as only opaque types\n-                                          // from the local crate can possibly be a local name\n-                                          | TypeFlags::HAS_TY_OPAQUE.bits\n                                           // We consider 'freshened' types and constants\n                                           // to depend on a particular fn.\n                                           // The freshening process throws away information,"}, {"sha": "c2fbbf94fd66623678df17d392e4507993b2330e", "filename": "src/test/ui/impl-trait/auto-trait-leak.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -11,7 +11,6 @@ fn main() {\n // return type, which can't depend on the obligation.\n fn cycle1() -> impl Clone {\n     //~^ ERROR cycle detected\n-    //~| ERROR cycle detected\n     send(cycle2().clone());\n \n     Rc::new(Cell::new(5))"}, {"sha": "634ff14869eb4d371384f31a382a5d4b93a66005", "filename": "src/test/ui/impl-trait/auto-trait-leak.stderr", "status": "modified", "additions": 15, "deletions": 97, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -30,129 +30,47 @@ note: ...which requires building MIR for `cycle1`...\n LL | fn cycle1() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires type-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires computing type of `cycle2::{opaque#0}`...\n-  --> $DIR/auto-trait-leak.rs:20:16\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   |                ^^^^^^^^^^\n-note: ...which requires borrow-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires unsafety-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires building MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: ...which again requires computing type of `cycle1::{opaque#0}`, completing the cycle\n-note: cycle used when checking item types in top-level module\n-  --> $DIR/auto-trait-leak.rs:1:1\n-   |\n-LL | / use std::cell::Cell;\n-LL | | use std::rc::Rc;\n-LL | |\n-LL | | fn send<T: Send>(_: T) {}\n-...  |\n-LL | |     Rc::new(String::from(\"foo\"))\n-LL | | }\n-   | |_^\n-\n-error[E0391]: cycle detected when computing type of `cycle1::{opaque#0}`\n-  --> $DIR/auto-trait-leak.rs:12:16\n+  --> $DIR/auto-trait-leak.rs:14:5\n    |\n-LL | fn cycle1() -> impl Clone {\n-   |                ^^^^^^^^^^\n-   |\n-note: ...which requires borrow-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing MIR for `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires unsafety-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires building MIR for `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     send(cycle2().clone());\n+   |     ^^^^\n+   = note: ...which requires evaluating trait selection obligation `impl core::clone::Clone: core::marker::Send`...\n note: ...which requires computing type of `cycle2::{opaque#0}`...\n-  --> $DIR/auto-trait-leak.rs:20:16\n+  --> $DIR/auto-trait-leak.rs:19:16\n    |\n LL | fn cycle2() -> impl Clone {\n    |                ^^^^^^^^^^\n note: ...which requires borrow-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n+  --> $DIR/auto-trait-leak.rs:19:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires processing `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n+  --> $DIR/auto-trait-leak.rs:19:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires processing MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n+  --> $DIR/auto-trait-leak.rs:19:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires unsafety-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n+  --> $DIR/auto-trait-leak.rs:19:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires building MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n+  --> $DIR/auto-trait-leak.rs:19:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires type-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n+  --> $DIR/auto-trait-leak.rs:20:5\n    |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     send(cycle1().clone());\n+   |     ^^^^\n+   = note: ...which requires evaluating trait selection obligation `impl core::clone::Clone: core::marker::Send`...\n    = note: ...which again requires computing type of `cycle1::{opaque#0}`, completing the cycle\n note: cycle used when checking item types in top-level module\n   --> $DIR/auto-trait-leak.rs:1:1\n@@ -166,6 +84,6 @@ LL | |     Rc::new(String::from(\"foo\"))\n LL | | }\n    | |_^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0391`."}, {"sha": "5fb7a9473d3dfbc57cef2537e10e59729a553908", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.rs?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -6,7 +6,6 @@\n mod m {\n     type Foo = impl std::fmt::Debug;\n     //~^ ERROR: cycle detected when computing type of `m::Foo::{opaque#0}` [E0391]\n-    //~| ERROR: cycle detected when computing type of `m::Foo::{opaque#0}` [E0391]\n \n     pub fn foo() -> Foo {\n         22_u32"}, {"sha": "1e9a45aac79e996e094b715d01a9aff30e85de5a", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage3.stderr", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.stderr?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -5,35 +5,18 @@ LL |     type Foo = impl std::fmt::Debug;\n    |                ^^^^^^^^^^^^^^^^^^^^\n    |\n note: ...which requires type-checking `m::bar`...\n-  --> $DIR/auto-trait-leakage3.rs:15:5\n+  --> $DIR/auto-trait-leakage3.rs:15:9\n    |\n-LL |     pub fn bar() {\n-   |     ^^^^^^^^^^^^\n+LL |         is_send(foo());\n+   |         ^^^^^^^\n+   = note: ...which requires evaluating trait selection obligation `m::Foo: core::marker::Send`...\n    = note: ...which again requires computing type of `m::Foo::{opaque#0}`, completing the cycle\n note: cycle used when checking item types in module `m`\n   --> $DIR/auto-trait-leakage3.rs:6:1\n    |\n LL | mod m {\n    | ^^^^^\n \n-error[E0391]: cycle detected when computing type of `m::Foo::{opaque#0}`\n-  --> $DIR/auto-trait-leakage3.rs:7:16\n-   |\n-LL |     type Foo = impl std::fmt::Debug;\n-   |                ^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: ...which requires type-checking `m::bar`...\n-  --> $DIR/auto-trait-leakage3.rs:15:5\n-   |\n-LL |     pub fn bar() {\n-   |     ^^^^^^^^^^^^\n-   = note: ...which again requires computing type of `m::Foo::{opaque#0}`, completing the cycle\n-note: cycle used when checking item types in module `m`\n-  --> $DIR/auto-trait-leakage3.rs:6:1\n-   |\n-LL | mod m {\n-   | ^^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0391`."}, {"sha": "79caddf79132072124ae62c6e1a539229159f6ce", "filename": "src/test/ui/type-alias-impl-trait/inference-cycle.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Finference-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Finference-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Finference-cycle.rs?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -4,7 +4,6 @@\n mod m {\n     type Foo = impl std::fmt::Debug;\n     //~^ ERROR cycle detected\n-    //~| ERROR cycle detected\n \n     // Cycle: error today, but it'd be nice if it eventually worked\n "}, {"sha": "b9d646b927a6fb895392843190dc0b8b8f9ab18d", "filename": "src/test/ui/type-alias-impl-trait/inference-cycle.stderr", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Finference-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Finference-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Finference-cycle.stderr?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -5,35 +5,18 @@ LL |     type Foo = impl std::fmt::Debug;\n    |                ^^^^^^^^^^^^^^^^^^^^\n    |\n note: ...which requires type-checking `m::bar`...\n-  --> $DIR/inference-cycle.rs:15:5\n+  --> $DIR/inference-cycle.rs:15:9\n    |\n-LL |     pub fn bar() {\n-   |     ^^^^^^^^^^^^\n+LL |         is_send(foo()); // Today: error\n+   |         ^^^^^^^\n+   = note: ...which requires evaluating trait selection obligation `m::Foo: core::marker::Send`...\n    = note: ...which again requires computing type of `m::Foo::{opaque#0}`, completing the cycle\n note: cycle used when checking item types in module `m`\n   --> $DIR/inference-cycle.rs:4:1\n    |\n LL | mod m {\n    | ^^^^^\n \n-error[E0391]: cycle detected when computing type of `m::Foo::{opaque#0}`\n-  --> $DIR/inference-cycle.rs:5:16\n-   |\n-LL |     type Foo = impl std::fmt::Debug;\n-   |                ^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: ...which requires type-checking `m::bar`...\n-  --> $DIR/inference-cycle.rs:15:5\n-   |\n-LL |     pub fn bar() {\n-   |     ^^^^^^^^^^^^\n-   = note: ...which again requires computing type of `m::Foo::{opaque#0}`, completing the cycle\n-note: cycle used when checking item types in module `m`\n-  --> $DIR/inference-cycle.rs:4:1\n-   |\n-LL | mod m {\n-   | ^^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0391`."}, {"sha": "7ecb553530106caf1c6d20d5c6927449b18a6484", "filename": "src/test/ui/type-alias-impl-trait/reveal_local.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Freveal_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Freveal_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Freveal_local.rs?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -4,7 +4,6 @@ use std::fmt::Debug;\n \n type Foo = impl Debug;\n //~^ ERROR cycle detected\n-//~| ERROR cycle detected\n \n fn is_send<T: Send>() { }\n "}, {"sha": "27fded3332921c92a22064f87471760763ae8f1b", "filename": "src/test/ui/type-alias-impl-trait/reveal_local.stderr", "status": "modified", "additions": 5, "deletions": 28, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Freveal_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58c08cd0373eaabfe05d9e78efa417075ef019fb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Freveal_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Freveal_local.stderr?ref=58c08cd0373eaabfe05d9e78efa417075ef019fb", "patch": "@@ -5,10 +5,11 @@ LL | type Foo = impl Debug;\n    |            ^^^^^^^^^^\n    |\n note: ...which requires type-checking `not_good`...\n-  --> $DIR/reveal_local.rs:11:1\n+  --> $DIR/reveal_local.rs:13:5\n    |\n-LL | fn not_good() {\n-   | ^^^^^^^^^^^^^\n+LL |     is_send::<Foo>();\n+   |     ^^^^^^^^^^^^^^\n+   = note: ...which requires evaluating trait selection obligation `Foo: core::marker::Send`...\n    = note: ...which again requires computing type of `Foo::{opaque#0}`, completing the cycle\n note: cycle used when checking item types in top-level module\n   --> $DIR/reveal_local.rs:1:1\n@@ -22,30 +23,6 @@ LL | |\n LL | | fn main() {}\n    | |____________^\n \n-error[E0391]: cycle detected when computing type of `Foo::{opaque#0}`\n-  --> $DIR/reveal_local.rs:5:12\n-   |\n-LL | type Foo = impl Debug;\n-   |            ^^^^^^^^^^\n-   |\n-note: ...which requires type-checking `not_gooder`...\n-  --> $DIR/reveal_local.rs:17:1\n-   |\n-LL | fn not_gooder() {\n-   | ^^^^^^^^^^^^^^^\n-   = note: ...which again requires computing type of `Foo::{opaque#0}`, completing the cycle\n-note: cycle used when checking item types in top-level module\n-  --> $DIR/reveal_local.rs:1:1\n-   |\n-LL | / #![feature(type_alias_impl_trait)]\n-LL | |\n-LL | | use std::fmt::Debug;\n-LL | |\n-...  |\n-LL | |\n-LL | | fn main() {}\n-   | |____________^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0391`."}]}