{"sha": "77ccac74f94fbe387fc587d46f9d93f04fce3644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Y2NhYzc0Zjk0ZmJlMzg3ZmM1ODdkNDZmOWQ5M2YwNGZjZTM2NDQ=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-11T16:24:39Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-11T16:24:39Z"}, "message": "Merge #790\n\n790: make macro-rules eq r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f0cc15c1fb77ca429717fcb1d5975f5cb5622c9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0cc15c1fb77ca429717fcb1d5975f5cb5622c9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77ccac74f94fbe387fc587d46f9d93f04fce3644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77ccac74f94fbe387fc587d46f9d93f04fce3644", "html_url": "https://github.com/rust-lang/rust/commit/77ccac74f94fbe387fc587d46f9d93f04fce3644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77ccac74f94fbe387fc587d46f9d93f04fce3644/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "a180674986df6ff4c1934dc92f29b49e607477db", "url": "https://api.github.com/repos/rust-lang/rust/commits/a180674986df6ff4c1934dc92f29b49e607477db", "html_url": "https://github.com/rust-lang/rust/commit/a180674986df6ff4c1934dc92f29b49e607477db"}, {"sha": "2efdf41bdb178ebf1ff0f8e3b335f491c84d7fa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2efdf41bdb178ebf1ff0f8e3b335f491c84d7fa3", "html_url": "https://github.com/rust-lang/rust/commit/2efdf41bdb178ebf1ff0f8e3b335f491c84d7fa3"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "b9f555ef6c7f40259a15323e96337c7b785319f1", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -30,7 +30,7 @@ pub use crate::syntax_bridge::ast_to_token_tree;\n /// be very confusing is that AST has almost exactly the same shape as\n /// `tt::TokenTree`, but there's a crucial difference: in macro rules, `$ident`\n /// and `$()*` have special meaning (see `Var` and `Repeat` data structures)\n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub struct MacroRules {\n     pub(crate) rules: Vec<Rule>,\n }\n@@ -44,21 +44,21 @@ impl MacroRules {\n     }\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) struct Rule {\n     pub(crate) lhs: Subtree,\n     pub(crate) rhs: Subtree,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) enum TokenTree {\n     Leaf(Leaf),\n     Subtree(Subtree),\n     Repeat(Repeat),\n }\n impl_froms!(TokenTree: Leaf, Subtree, Repeat);\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) enum Leaf {\n     Literal(Literal),\n     Punct(Punct),\n@@ -67,37 +67,37 @@ pub(crate) enum Leaf {\n }\n impl_froms!(Leaf: Literal, Punct, Ident, Var);\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) struct Subtree {\n     pub(crate) delimiter: Delimiter,\n     pub(crate) token_trees: Vec<TokenTree>,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) struct Repeat {\n     pub(crate) subtree: Subtree,\n     pub(crate) kind: RepeatKind,\n     pub(crate) separator: Option<char>,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) enum RepeatKind {\n     ZeroOrMore,\n     OneOrMore,\n     ZeroOrOne,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) struct Literal {\n     pub(crate) text: SmolStr,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) struct Ident {\n     pub(crate) text: SmolStr,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n pub(crate) struct Var {\n     pub(crate) text: SmolStr,\n     pub(crate) kind: Option<SmolStr>,"}, {"sha": "d2b080743b7da457cce1d0a439657646b883699b", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -1908,6 +1908,7 @@ impl ToOwned for MacroCall {\n }\n \n \n+impl ast::NameOwner for MacroCall {}\n impl MacroCall {\n     pub fn token_tree(&self) -> Option<&TokenTree> {\n         super::child_opt(self)"}, {"sha": "2e4b2d776c2a4d0abafe153cecab85722aebc080", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -545,7 +545,10 @@ Grammar(\n         \"Visibility\": (),\n         \"Name\": (),\n         \"NameRef\": (),\n-        \"MacroCall\": ( options: [ \"TokenTree\", \"Path\" ] ),\n+        \"MacroCall\": (\n+            traits: [ \"NameOwner\" ],\n+            options: [ \"TokenTree\", \"Path\" ],\n+        ),\n         \"Attr\": ( options: [ [\"value\", \"TokenTree\"] ] ),\n         \"TokenTree\": (),\n         \"TypeParamList\": ("}, {"sha": "4b962c1f37f989d42942ed7d7b5ed896bd5a79ef", "filename": "crates/ra_syntax/src/grammar/items.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems.rs?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -347,7 +347,9 @@ fn macro_call(p: &mut Parser) -> BlockLike {\n \n pub(super) fn macro_call_after_excl(p: &mut Parser) -> BlockLike {\n     p.expect(EXCL);\n-    p.eat(IDENT);\n+    if p.at(IDENT) {\n+        name(p);\n+    }\n     match p.current() {\n         L_CURLY => {\n             token_tree(p);"}, {"sha": "440bd7f92ada92367e76c418fb7531b16d66289b", "filename": "crates/ra_syntax/tests/data/parser/err/0028_macro_2.0.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0028_macro_2.0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0028_macro_2.0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0028_macro_2.0.txt?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -6,7 +6,8 @@ SOURCE_FILE@[0; 349)\n           IDENT@[0; 5) \"macro\"\n           err: `expected EXCL`\n     WHITESPACE@[5; 6)\n-    IDENT@[6; 21) \"parse_use_trees\"\n+    NAME@[6; 21)\n+      IDENT@[6; 21) \"parse_use_trees\"\n     TOKEN_TREE@[21; 41)\n       L_PAREN@[21; 22)\n       DOLLAR@[22; 23)"}, {"sha": "6ccd0ffc30526c1270eb5a21a0aef28f168520dd", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0062_mod_contents.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0062_mod_contents.txt", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0062_mod_contents.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0062_mod_contents.txt?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -19,7 +19,8 @@ SOURCE_FILE@[0; 70)\n           IDENT@[12; 23) \"macro_rules\"\n     EXCL@[23; 24)\n     WHITESPACE@[24; 25)\n-    IDENT@[25; 28) \"foo\"\n+    NAME@[25; 28)\n+      IDENT@[25; 28) \"foo\"\n     WHITESPACE@[28; 29)\n     TOKEN_TREE@[29; 31)\n       L_CURLY@[29; 30)"}, {"sha": "ac789651a5e19695b43da116812ad0fd979707c4", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0096_no_semi_after_block.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.txt?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -92,7 +92,8 @@ SOURCE_FILE@[0; 167)\n                 IDENT@[109; 120) \"macro_rules\"\n           EXCL@[120; 121)\n           WHITESPACE@[121; 122)\n-          IDENT@[122; 126) \"test\"\n+          NAME@[122; 126)\n+            IDENT@[122; 126) \"test\"\n           WHITESPACE@[126; 127)\n           TOKEN_TREE@[127; 152)\n             L_CURLY@[127; 128)"}, {"sha": "df31f72f39d2bd4c3cef51d2a315378a0f0291c0", "filename": "crates/ra_tt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_tt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ccac74f94fbe387fc587d46f9d93f04fce3644/crates%2Fra_tt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Flib.rs?ref=77ccac74f94fbe387fc587d46f9d93f04fce3644", "patch": "@@ -39,7 +39,7 @@ pub struct Subtree {\n     pub token_trees: Vec<TokenTree>,\n }\n \n-#[derive(Clone, Copy, Debug)]\n+#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n pub enum Delimiter {\n     Parenthesis,\n     Brace,"}]}