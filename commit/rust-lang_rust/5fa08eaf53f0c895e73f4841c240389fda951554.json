{"sha": "5fa08eaf53f0c895e73f4841c240389fda951554", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYTA4ZWFmNTNmMGM4OTVlNzNmNDg0MWMyNDAzODlmZGE5NTE1NTQ=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-05-30T17:25:24Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-05-30T17:25:24Z"}, "message": "Evaluate constant expressions in `suspicious_splitn`", "tree": {"sha": "8a7ce90e5477ccecbc23e831c6aefb1ff720ba68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a7ce90e5477ccecbc23e831c6aefb1ff720ba68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fa08eaf53f0c895e73f4841c240389fda951554", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmCzyqYACgkQ2lnoZDo37QaOEgEA6ahGST6ueA8whgco14uVehTL\nRSAXVU7ADyiLJJEDdDYBANqZrHintRUvHkzlHOP2/EJ/60Gt+a/uXw9bWj7TAvML\n=UdXM\n-----END PGP SIGNATURE-----", "payload": "tree 8a7ce90e5477ccecbc23e831c6aefb1ff720ba68\nparent 898b6a0e072c4f8ba741e83bd7fd12a4c2ccb1a2\nauthor Jason Newcomb <jsnewcomb@pm.me> 1622395524 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1622395524 -0400\n\nEvaluate constant expressions in `suspicious_splitn`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fa08eaf53f0c895e73f4841c240389fda951554", "html_url": "https://github.com/rust-lang/rust/commit/5fa08eaf53f0c895e73f4841c240389fda951554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fa08eaf53f0c895e73f4841c240389fda951554/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "898b6a0e072c4f8ba741e83bd7fd12a4c2ccb1a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/898b6a0e072c4f8ba741e83bd7fd12a4c2ccb1a2", "html_url": "https://github.com/rust-lang/rust/commit/898b6a0e072c4f8ba741e83bd7fd12a4c2ccb1a2"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "a6e2e0baadbb091143b14eb54587284fe3d58939", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5fa08eaf53f0c895e73f4841c240389fda951554/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fa08eaf53f0c895e73f4841c240389fda951554/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=5fa08eaf53f0c895e73f4841c240389fda951554", "patch": "@@ -1635,8 +1635,9 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for calls to `splitn` and related functions with\n-    /// either zero or one splits.\n+    /// **What it does:** Checks for calls to [`splitn`]\n+    /// (https://doc.rust-lang.org/std/primitive.str.html#method.splitn) and\n+    /// related functions with either zero or one splits.\n     ///\n     /// **Why is this bad?** These calls don't actually split the value and are\n     /// likely to be intended as a different number."}, {"sha": "a271df60572a22f0969910f22a5bc1c1828dabca", "filename": "clippy_lints/src/methods/suspicious_splitn.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5fa08eaf53f0c895e73f4841c240389fda951554/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_splitn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fa08eaf53f0c895e73f4841c240389fda951554/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_splitn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_splitn.rs?ref=5fa08eaf53f0c895e73f4841c240389fda951554", "patch": "@@ -1,3 +1,4 @@\n+use clippy_utils::consts::{constant, Constant};\n use clippy_utils::diagnostics::span_lint_and_note;\n use if_chain::if_chain;\n use rustc_ast::LitKind;\n@@ -15,18 +16,21 @@ pub(super) fn check(\n     count_arg: &Expr<'_>,\n ) {\n     if_chain! {\n-        // Ignore empty slice literal\n-        if !matches!(self_arg.kind, ExprKind::Array([]));\n-        // Ignore empty string literal\n-        if !matches!(self_arg.kind, ExprKind::Lit(Spanned { node: LitKind::Str(s, _), .. }) if s.is_empty());\n-        if let ExprKind::Lit(count_lit) = &count_arg.kind;\n-        if let LitKind::Int(count, _) = count_lit.node;\n+        if let Some((Constant::Int(count), _)) = constant(cx, cx.typeck_results(), count_arg);\n         if count <= 1;\n         if let Some(call_id) = cx.typeck_results().type_dependent_def_id(expr.hir_id);\n         if let Some(impl_id) = cx.tcx.impl_of_method(call_id);\n         let lang_items = cx.tcx.lang_items();\n         if lang_items.slice_impl() == Some(impl_id) || lang_items.str_impl() == Some(impl_id);\n         then {\n+            // Ignore empty slice and string literals when used with a literal count.\n+            if (matches!(self_arg.kind, ExprKind::Array([]))\n+                || matches!(self_arg.kind, ExprKind::Lit(Spanned { node: LitKind::Str(s, _), .. }) if s.is_empty())\n+            ) && matches!(count_arg.kind, ExprKind::Lit(_))\n+            {\n+                return;\n+            }\n+\n             let (msg, note_msg) = if count == 0 {\n                 (format!(\"`{}` called with `0` splits\", method_name),\n                 \"the resulting iterator will always return `None`\")"}, {"sha": "a21d94cf20bb1238195c5ffd451b68200d7da0dd", "filename": "tests/ui/suspicious_splitn.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fa08eaf53f0c895e73f4841c240389fda951554/tests%2Fui%2Fsuspicious_splitn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fa08eaf53f0c895e73f4841c240389fda951554/tests%2Fui%2Fsuspicious_splitn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_splitn.rs?ref=5fa08eaf53f0c895e73f4841c240389fda951554", "patch": "@@ -13,4 +13,8 @@ fn main() {\n     let _ = [0, 1, 2].splitn_mut(0, |&x| x == 1);\n     let _ = [0, 1, 2].splitn(1, |&x| x == 1);\n     let _ = [0, 1, 2].rsplitn_mut(1, |&x| x == 1);\n+\n+    const X: usize = 0;\n+    let _ = \"a,b\".splitn(X + 1, ',');\n+    let _ = \"a,b\".splitn(X, ',');\n }"}, {"sha": "b6220ae239339fbd0c162c03d0c9f905facbab89", "filename": "tests/ui/suspicious_splitn.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5fa08eaf53f0c895e73f4841c240389fda951554/tests%2Fui%2Fsuspicious_splitn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5fa08eaf53f0c895e73f4841c240389fda951554/tests%2Fui%2Fsuspicious_splitn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_splitn.stderr?ref=5fa08eaf53f0c895e73f4841c240389fda951554", "patch": "@@ -55,5 +55,21 @@ LL |     let _ = [0, 1, 2].rsplitn_mut(1, |&x| x == 1);\n    |\n    = note: the resulting iterator will always return the entire slice followed by `None`\n \n-error: aborting due to 7 previous errors\n+error: `splitn` called with `1` split\n+  --> $DIR/suspicious_splitn.rs:18:13\n+   |\n+LL |     let _ = \"a,b\".splitn(X + 1, ',');\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the resulting iterator will always return the entire string followed by `None`\n+\n+error: `splitn` called with `0` splits\n+  --> $DIR/suspicious_splitn.rs:19:13\n+   |\n+LL |     let _ = \"a,b\".splitn(X, ',');\n+   |             ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the resulting iterator will always return `None`\n+\n+error: aborting due to 9 previous errors\n "}]}