{"sha": "7472f9ef134465c8d077269236f09e8ef5767772", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NzJmOWVmMTM0NDY1YzhkMDc3MjY5MjM2ZjA5ZThlZjU3Njc3NzI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-06T06:34:52Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T07:57:24Z"}, "message": "lowering: remove dep on CrateStore", "tree": {"sha": "3432846501724eba9879d152eaed75d330f5ab22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3432846501724eba9879d152eaed75d330f5ab22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7472f9ef134465c8d077269236f09e8ef5767772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7472f9ef134465c8d077269236f09e8ef5767772", "html_url": "https://github.com/rust-lang/rust/commit/7472f9ef134465c8d077269236f09e8ef5767772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7472f9ef134465c8d077269236f09e8ef5767772/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "402907f27390edd0d6c8b73c3521f18a1e2c76d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/402907f27390edd0d6c8b73c3521f18a1e2c76d5", "html_url": "https://github.com/rust-lang/rust/commit/402907f27390edd0d6c8b73c3521f18a1e2c76d5"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "d2a51c5d9cc22fc04df63aecd3235c2e7cd12cde", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7472f9ef134465c8d077269236f09e8ef5767772/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7472f9ef134465c8d077269236f09e8ef5767772/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=7472f9ef134465c8d077269236f09e8ef5767772", "patch": "@@ -39,7 +39,6 @@ use rustc::hir::map::definitions::{DefKey, DefPathData, Definitions};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::lint::builtin;\n-use rustc::middle::cstore::CrateStore;\n use rustc::{bug, span_bug};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxHashSet;\n@@ -172,7 +171,9 @@ struct LoweringContext<'a, 'hir: 'a> {\n }\n \n pub trait Resolver {\n-    fn cstore(&self) -> &dyn CrateStore;\n+    fn def_key(&mut self, id: DefId) -> DefKey;\n+\n+    fn item_generics_cloned_untracked_liftimes(&self, def: DefId, sess: &Session) -> usize;\n \n     /// Obtains resolution for a `NodeId` with a single resolution.\n     fn get_partial_res(&mut self, id: NodeId) -> Option<PartialRes>;\n@@ -936,14 +937,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         ret\n     }\n \n-    fn def_key(&mut self, id: DefId) -> DefKey {\n-        if id.is_local() {\n-            self.resolver.definitions().def_key(id.index)\n-        } else {\n-            self.resolver.cstore().def_key(id)\n-        }\n-    }\n-\n     fn lower_attrs(&mut self, attrs: &[Attribute]) -> &'hir [Attribute] {\n         self.arena.alloc_from_iter(attrs.iter().map(|a| self.lower_attr(a)))\n     }"}, {"sha": "b4c196a254e4c58e702ba6004ba53bf705de93b2", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7472f9ef134465c8d077269236f09e8ef5767772/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7472f9ef134465c8d077269236f09e8ef5767772/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=7472f9ef134465c8d077269236f09e8ef5767772", "patch": "@@ -49,7 +49,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     // which may need lifetime elision performed.\n                     let parent_def_id = |this: &mut Self, def_id: DefId| DefId {\n                         krate: def_id.krate,\n-                        index: this.def_key(def_id).parent.expect(\"missing parent\"),\n+                        index: this.resolver.def_key(def_id).parent.expect(\"missing parent\"),\n                     };\n                     let type_def_id = match partial_res.base_res() {\n                         Res::Def(DefKind::AssocTy, def_id) if i + 2 == proj_start => {\n@@ -93,11 +93,9 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             return n;\n                         }\n                         assert!(!def_id.is_local());\n-                        let item_generics = self\n+                        let n = self\n                             .resolver\n-                            .cstore()\n-                            .item_generics_cloned_untracked(def_id, self.sess);\n-                        let n = item_generics.own_counts().lifetimes;\n+                            .item_generics_cloned_untracked_liftimes(def_id, self.sess);\n                         self.type_def_lifetime_params.insert(def_id, n);\n                         n\n                     });"}, {"sha": "8a6248aba866a9f7a8998197a5c44862356af3a8", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7472f9ef134465c8d077269236f09e8ef5767772/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7472f9ef134465c8d077269236f09e8ef5767772/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7472f9ef134465c8d077269236f09e8ef5767772", "patch": "@@ -22,7 +22,7 @@ use Determinacy::*;\n \n use errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc::hir::exports::ExportMap;\n-use rustc::hir::map::Definitions;\n+use rustc::hir::map::{DefKey, Definitions};\n use rustc::lint;\n use rustc::middle::cstore::{CrateStore, MetadataLoaderDyn};\n use rustc::session::Session;\n@@ -1027,8 +1027,12 @@ impl<'a, 'b> DefIdTree for &'a Resolver<'b> {\n /// This interface is used through the AST\u2192HIR step, to embed full paths into the HIR. After that\n /// the resolver is no longer needed as all the relevant information is inline.\n impl rustc_ast_lowering::Resolver for Resolver<'_> {\n-    fn cstore(&self) -> &dyn CrateStore {\n-        self.cstore()\n+    fn def_key(&mut self, id: DefId) -> DefKey {\n+        if id.is_local() { self.definitions().def_key(id.index) } else { self.cstore().def_key(id) }\n+    }\n+\n+    fn item_generics_cloned_untracked_liftimes(&self, def_id: DefId, sess: &Session) -> usize {\n+        self.cstore().item_generics_cloned_untracked(def_id, sess).own_counts().lifetimes\n     }\n \n     fn resolve_str_path("}]}