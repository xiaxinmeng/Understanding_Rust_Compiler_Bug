{"sha": "d252539990f5b4abee412d08edc6b36fd2a6219e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNTI1Mzk5OTBmNWI0YWJlZTQxMmQwOGVkYzZiMzZmZDJhNjIxOWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-26T02:23:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-26T04:35:10Z"}, "message": "mk: Rename CFG_COMPILER to CFG_COMPILER_HOST_TRIPLE\n\nMuch clearer", "tree": {"sha": "dfdd2da676f8ba11475be01112fd763da4541442", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfdd2da676f8ba11475be01112fd763da4541442"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d252539990f5b4abee412d08edc6b36fd2a6219e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d252539990f5b4abee412d08edc6b36fd2a6219e", "html_url": "https://github.com/rust-lang/rust/commit/d252539990f5b4abee412d08edc6b36fd2a6219e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d252539990f5b4abee412d08edc6b36fd2a6219e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f772e31d6484f090b9bc50f8e14f426c9c6dfaff", "url": "https://api.github.com/repos/rust-lang/rust/commits/f772e31d6484f090b9bc50f8e14f426c9c6dfaff", "html_url": "https://github.com/rust-lang/rust/commit/f772e31d6484f090b9bc50f8e14f426c9c6dfaff"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "11c57ac070f39ca8c64afd42b1d056cea225173a", "filename": "mk/target.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d252539990f5b4abee412d08edc6b36fd2a6219e/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d252539990f5b4abee412d08edc6b36fd2a6219e/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=d252539990f5b4abee412d08edc6b36fd2a6219e", "patch": "@@ -11,7 +11,7 @@\n # This is the compile-time target-triple for the compiler. For the compiler at\n # runtime, this should be considered the host-triple. More explanation for why\n # this exists can be found on issue #2400\n-export CFG_COMPILER\n+export CFG_COMPILER_HOST_TRIPLE\n \n # The standard libraries should be held up to a higher standard than any old\n # code, make sure that these common warnings are denied by default. These can\n@@ -68,7 +68,7 @@ $(foreach host,$(CFG_HOST),\t\t\t\t\t\t    \\\n # $(4) is the crate name\n define RUST_TARGET_STAGE_N\n \n-$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): CFG_COMPILER = $(2)\n+$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): CFG_COMPILER_HOST_TRIPLE = $(2)\n $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4):\t\t\t\t    \\\n \t\t$$(CRATEFILE_$(4))\t\t\t\t    \\\n \t\t$$(CRATE_FULLDEPS_$(1)_T_$(2)_H_$(3)_$(4))\t    \\"}, {"sha": "7fd6d148f3863befe79e59c0df0ccd6ee9aae9ae", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d252539990f5b4abee412d08edc6b36fd2a6219e/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d252539990f5b4abee412d08edc6b36fd2a6219e/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=d252539990f5b4abee412d08edc6b36fd2a6219e", "patch": "@@ -350,7 +350,7 @@ else\n TESTDEP_$(1)_$(2)_$(3)_$(4) = $$(RSINPUTS_$(4))\n endif\n \n-$(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2)): CFG_COMPILER = $(2)\n+$(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2)): CFG_COMPILER_HOST_TRIPLE = $(2)\n $(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2)):\t\t\t\t\\\n \t\t$$(CRATEFILE_$(4)) \\\n \t\t$$(TESTDEP_$(1)_$(2)_$(3)_$(4))"}, {"sha": "9ee0bb4a107cde182efdad45ff2e5faa6828f71a", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d252539990f5b4abee412d08edc6b36fd2a6219e/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d252539990f5b4abee412d08edc6b36fd2a6219e/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=d252539990f5b4abee412d08edc6b36fd2a6219e", "patch": "@@ -800,7 +800,7 @@ pub fn host_triple() -> ~str {\n     // Instead of grabbing the host triple (for the current host), we grab (at\n     // compile time) the target triple that this rustc is built with and\n     // calling that (at runtime) the host triple.\n-    (env!(\"CFG_COMPILER\")).to_owned()\n+    (env!(\"CFG_COMPILER_HOST_TRIPLE\")).to_owned()\n }\n \n pub fn build_session_options(matches: &getopts::Matches) -> session::Options {"}]}