{"sha": "a57ef6b0b17b1cbeac14789908b62df6ffef4079", "node_id": "C_kwDOAAsO6NoAKGE1N2VmNmIwYjE3YjFjYmVhYzE0Nzg5OTA4YjYyZGY2ZmZlZjQwNzk", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-06T06:10:28Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-06T06:16:39Z"}, "message": "Fix go-to-def for shadowed `include*!`", "tree": {"sha": "743d0e1ef79ab4cda91bed685a16cec7818eaac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/743d0e1ef79ab4cda91bed685a16cec7818eaac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a57ef6b0b17b1cbeac14789908b62df6ffef4079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a57ef6b0b17b1cbeac14789908b62df6ffef4079", "html_url": "https://github.com/rust-lang/rust/commit/a57ef6b0b17b1cbeac14789908b62df6ffef4079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a57ef6b0b17b1cbeac14789908b62df6ffef4079/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "476d0438749e3a5b2669811f9429da79a6628e8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/476d0438749e3a5b2669811f9429da79a6628e8a", "html_url": "https://github.com/rust-lang/rust/commit/476d0438749e3a5b2669811f9429da79a6628e8a"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "7d8ef7ab9dc2f1e16bb9aea3d9a1bca596c45bf5", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a57ef6b0b17b1cbeac14789908b62df6ffef4079/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a57ef6b0b17b1cbeac14789908b62df6ffef4079/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=a57ef6b0b17b1cbeac14789908b62df6ffef4079", "patch": "@@ -95,6 +95,14 @@ fn try_lookup_include_path(\n     if !matches!(&*name.text(), \"include\" | \"include_str\" | \"include_bytes\") {\n         return None;\n     }\n+\n+    // Ignore non-built-in macros to account for shadowing\n+    if let Some(it) = sema.resolve_macro_call(&macro_call) {\n+        if !matches!(it.kind(sema.db), hir::MacroKind::BuiltIn) {\n+            return None;\n+        }\n+    }\n+\n     let file_id = sema.db.resolve_path(AnchoredPath { anchor: file_id, path: &path })?;\n     let size = sema.db.file_text(file_id).len().try_into().ok()?;\n     Some(NavigationTarget {\n@@ -156,9 +164,6 @@ mod tests {\n     fn check(ra_fixture: &str) {\n         let (analysis, position, expected) = fixture::annotations(ra_fixture);\n         let navs = analysis.goto_definition(position).unwrap().expect(\"no definition found\").info;\n-        if navs.is_empty() {\n-            panic!(\"unresolved reference\")\n-        }\n \n         let cmp = |&FileRange { file_id, range }: &_| (file_id, range.start());\n         let navs = navs\n@@ -1348,6 +1353,10 @@ fn f(e: Enum) {\n         check(\n             r#\"\n //- /main.rs\n+\n+#[rustc_builtin_macro]\n+macro_rules! include_str {}\n+\n fn main() {\n     let str = include_str!(\"foo.txt$0\");\n }\n@@ -1357,6 +1366,24 @@ fn main() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn goto_shadow_include() {\n+        check(\n+            r#\"\n+//- /main.rs\n+macro_rules! include {\n+    (\"included.rs\") => {}\n+}\n+\n+include!(\"included.rs$0\");\n+\n+//- /included.rs\n+// empty\n+\"#,\n+        );\n+    }\n+\n     #[cfg(test)]\n     mod goto_impl_of_trait_fn {\n         use super::check;"}]}