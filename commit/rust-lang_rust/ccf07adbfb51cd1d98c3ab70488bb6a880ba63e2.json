{"sha": "ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZjA3YWRiZmI1MWNkMWQ5OGMzYWI3MDQ4OGJiNmE4ODBiYTYzZTI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-16T15:37:30Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-16T15:37:30Z"}, "message": "Implement isize -> raw-ptr cast", "tree": {"sha": "19194a18bc0a48dda0f46c9695bc0a4240bd0c8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19194a18bc0a48dda0f46c9695bc0a4240bd0c8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2", "html_url": "https://github.com/rust-lang/rust/commit/ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ecbee2f091cb22ebf191950cc15094a993605df", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecbee2f091cb22ebf191950cc15094a993605df", "html_url": "https://github.com/rust-lang/rust/commit/4ecbee2f091cb22ebf191950cc15094a993605df"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "556e01aa3a2198855888cef7f86603d203b0b324", "filename": "src/base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=ccf07adbfb51cd1d98c3ab70488bb6a880ba63e2", "patch": "@@ -482,6 +482,9 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                         (ty::Uint(_), ty::RawPtr(..)) if from_ty.sty == fx.tcx.types.usize.sty => {\n                             lval.write_cvalue(fx, operand.unchecked_cast_to(dest_layout));\n                         }\n+                        (ty::Int(_), ty::RawPtr(..)) if from_ty.sty == fx.tcx.types.isize.sty => {\n+                            lval.write_cvalue(fx, operand.unchecked_cast_to(dest_layout));\n+                        }\n                         (ty::Char, ty::Uint(_))\n                         | (ty::Uint(_), ty::Char)\n                         | (ty::Uint(_), ty::Int(_))"}]}