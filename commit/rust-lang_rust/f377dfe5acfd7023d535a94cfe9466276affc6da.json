{"sha": "f377dfe5acfd7023d535a94cfe9466276affc6da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNzdkZmU1YWNmZDcwMjNkNTM1YTk0Y2ZlOTQ2NjI3NmFmZmM2ZGE=", "commit": {"author": {"name": "Axel Viala", "email": "axel.viala@darnuria.eu", "date": "2014-06-04T14:33:25Z"}, "committer": {"name": "Axel Viala", "email": "axel.viala@darnuria.eu", "date": "2014-06-05T09:39:01Z"}, "message": "Adding examples and possible failures for getcwd.\n\nFor both window and unix platforms.", "tree": {"sha": "fb86aafbf762e77c63e993b0f4069568950d7f9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb86aafbf762e77c63e993b0f4069568950d7f9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f377dfe5acfd7023d535a94cfe9466276affc6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f377dfe5acfd7023d535a94cfe9466276affc6da", "html_url": "https://github.com/rust-lang/rust/commit/f377dfe5acfd7023d535a94cfe9466276affc6da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f377dfe5acfd7023d535a94cfe9466276affc6da/comments", "author": {"login": "darnuria", "id": 2827553, "node_id": "MDQ6VXNlcjI4Mjc1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2827553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darnuria", "html_url": "https://github.com/darnuria", "followers_url": "https://api.github.com/users/darnuria/followers", "following_url": "https://api.github.com/users/darnuria/following{/other_user}", "gists_url": "https://api.github.com/users/darnuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/darnuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darnuria/subscriptions", "organizations_url": "https://api.github.com/users/darnuria/orgs", "repos_url": "https://api.github.com/users/darnuria/repos", "events_url": "https://api.github.com/users/darnuria/events{/privacy}", "received_events_url": "https://api.github.com/users/darnuria/received_events", "type": "User", "site_admin": false}, "committer": {"login": "darnuria", "id": 2827553, "node_id": "MDQ6VXNlcjI4Mjc1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2827553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darnuria", "html_url": "https://github.com/darnuria", "followers_url": "https://api.github.com/users/darnuria/followers", "following_url": "https://api.github.com/users/darnuria/following{/other_user}", "gists_url": "https://api.github.com/users/darnuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/darnuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darnuria/subscriptions", "organizations_url": "https://api.github.com/users/darnuria/orgs", "repos_url": "https://api.github.com/users/darnuria/repos", "events_url": "https://api.github.com/users/darnuria/events{/privacy}", "received_events_url": "https://api.github.com/users/darnuria/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "650909244eee51b4fd70389538c6b784ccf005c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/650909244eee51b4fd70389538c6b784ccf005c7", "html_url": "https://github.com/rust-lang/rust/commit/650909244eee51b4fd70389538c6b784ccf005c7"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "eae4ca422013c3dfc0575bc8ac407084ead57be9", "filename": "src/libstd/os.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f377dfe5acfd7023d535a94cfe9466276affc6da/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f377dfe5acfd7023d535a94cfe9466276affc6da/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=f377dfe5acfd7023d535a94cfe9466276affc6da", "patch": "@@ -66,7 +66,24 @@ pub fn close(fd: int) -> int {\n pub static TMPBUF_SZ : uint = 1000u;\n static BUF_BYTES : uint = 2048u;\n \n-/// Returns the current working directory.\n+/// Returns the current working directory as a Path.\n+///\n+/// # Failure\n+///\n+/// Fails if the current working directory value is invalid:\n+/// Possibles cases:\n+///\n+/// * Current directory does not exist.\n+/// * There are insufficient permissions to access the current directory.\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// // We assume that we are in a valid directory like \"/home\".\n+/// let current_working_directory = std::os::getcwd();\n+/// println!(\"The current directory is {}\", current_working_directory.display());\n+/// // /home\n+/// ```\n #[cfg(unix)]\n pub fn getcwd() -> Path {\n     use c_str::CString;\n@@ -80,7 +97,24 @@ pub fn getcwd() -> Path {\n     }\n }\n \n-/// Returns the current working directory.\n+/// Returns the current working directory as a Path.\n+///\n+/// # Failure\n+///\n+/// Fails if the current working directory value is invalid.\n+/// Possibles cases:\n+///\n+/// * Current directory does not exist.\n+/// * There are insufficient permissions to access the current directory.\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// // We assume that we are in a valid directory like \"C:\\\\Windows\".\n+/// let current_working_directory = std::os::getcwd();\n+/// println!(\"The current directory is {}\", current_working_directory.display());\n+/// // C:\\\\Windows\n+/// ```\n #[cfg(windows)]\n pub fn getcwd() -> Path {\n     use libc::DWORD;"}]}