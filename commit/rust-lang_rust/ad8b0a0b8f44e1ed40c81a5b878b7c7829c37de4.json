{"sha": "ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkOGIwYTBiOGY0NGUxZWQ0MGM4MWE1Yjg3OGI3Yzc4MjljMzdkZTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T13:27:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-10T13:27:33Z"}, "message": "Rollup merge of #63425 - Mark-Simulacrum:clean-stability-doc, r=eddyb\n\nCleanup historical stability comments\n\nThese weren't removed by ccbcc720a679ae76155a8 most likely by accident,\nlet's clean them up now.", "tree": {"sha": "f1a0c192994f4a78a94964c9e19ed0e3f0de8a87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a0c192994f4a78a94964c9e19ed0e3f0de8a87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdTsZFCRBK7hj4Ov3rIwAAdHIIABMlmaZkjRh8CU3HUJvAe+EU\niBX7yu2ttckgmdEMjv9NA3b0vZG2KRckPijkLSIEe4czQCchdl8ykglFo8gaD0xR\nM+tdPbV5xu+y3KC8FZEoDcbYcmHXxSp9gqgIgThBDufRamDGI/1dKooyadY8Qaa8\nr5S9ARSNhFI3GVpKsiIeDG7d3S1A4/HaRQZNTJ9Q75HUenQ6V7fnPxBczsqnrE7Y\nhKtEf/6Wj5lyvAhY4OyjDAdp46l01VbK8HtBFlPeDRWBvfCwcXFQuAnMOnXYl+Jl\nPXIbeApjK6IiIeTqKlfO9zaf8x08xkwRLPQHPToYlWhGGWQ8x1hr2LMChmmT8Lk=\n=rztr\n-----END PGP SIGNATURE-----\n", "payload": "tree f1a0c192994f4a78a94964c9e19ed0e3f0de8a87\nparent 9d76a938de25e626a7c79a76789d7885405703e6\nparent 1ee37cd87245bb9e21a500bc1dc4185f3afea8a1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565443653 +0200\ncommitter GitHub <noreply@github.com> 1565443653 +0200\n\nRollup merge of #63425 - Mark-Simulacrum:clean-stability-doc, r=eddyb\n\nCleanup historical stability comments\n\nThese weren't removed by ccbcc720a679ae76155a8 most likely by accident,\nlet's clean them up now.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4", "html_url": "https://github.com/rust-lang/rust/commit/ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d76a938de25e626a7c79a76789d7885405703e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d76a938de25e626a7c79a76789d7885405703e6", "html_url": "https://github.com/rust-lang/rust/commit/9d76a938de25e626a7c79a76789d7885405703e6"}, {"sha": "1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "html_url": "https://github.com/rust-lang/rust/commit/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "e9d85a53d1e42d03230d6d7e3675cee78771fa34", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=ad8b0a0b8f44e1ed40c81a5b878b7c7829c37de4", "patch": "@@ -957,14 +957,11 @@ fn print_flag_list<T>(cmdline_opt: &str,\n /// otherwise returns `None`.\n ///\n /// The compiler's handling of options is a little complicated as it ties into\n-/// our stability story, and it's even *more* complicated by historical\n-/// accidents. The current intention of each compiler option is to have one of\n-/// three modes:\n+/// our stability story. The current intention of each compiler option is to\n+/// have one of two modes:\n ///\n /// 1. An option is stable and can be used everywhere.\n-/// 2. An option is unstable, but was historically allowed on the stable\n-///    channel.\n-/// 3. An option is unstable, and can only be used on nightly.\n+/// 2. An option is unstable, and can only be used on nightly.\n ///\n /// Like unstable library and language features, however, unstable options have\n /// always required a form of \"opt in\" to indicate that you're using them. This\n@@ -1007,19 +1004,13 @@ pub fn handle_options(args: &[String]) -> Option<getopts::Matches> {\n     //   this option that was passed.\n     // * If we're a nightly compiler, then unstable options are now unlocked, so\n     //   we're good to go.\n-    // * Otherwise, if we're a truly unstable option then we generate an error\n+    // * Otherwise, if we're an unstable option then we generate an error\n     //   (unstable option being used on stable)\n-    // * If we're a historically stable-but-should-be-unstable option then we\n-    //   emit a warning that we're going to turn this into an error soon.\n     nightly_options::check_nightly_options(&matches, &config::rustc_optgroups());\n \n     if matches.opt_present(\"h\") || matches.opt_present(\"help\") {\n-        // Only show unstable options in --help if we *really* accept unstable\n-        // options, which catches the case where we got `-Z unstable-options` on\n-        // the stable channel of Rust which was accidentally allowed\n-        // historically.\n-        usage(matches.opt_present(\"verbose\"),\n-              nightly_options::is_unstable_enabled(&matches));\n+        // Only show unstable options in --help if we accept unstable options.\n+        usage(matches.opt_present(\"verbose\"), nightly_options::is_unstable_enabled(&matches));\n         return None;\n     }\n "}]}