{"sha": "38f1c47d18761414cbe69e76b4d76c71afc24789", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZjFjNDdkMTg3NjE0MTRjYmU2OWU3NmI0ZDc2YzcxYWZjMjQ3ODk=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-09-26T01:53:14Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-09-26T01:53:14Z"}, "message": "Removed unused parameter.", "tree": {"sha": "26080b9613a302be78bae38edba74b97724bf137", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26080b9613a302be78bae38edba74b97724bf137"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38f1c47d18761414cbe69e76b4d76c71afc24789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38f1c47d18761414cbe69e76b4d76c71afc24789", "html_url": "https://github.com/rust-lang/rust/commit/38f1c47d18761414cbe69e76b4d76c71afc24789", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38f1c47d18761414cbe69e76b4d76c71afc24789/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21fcac29320c065b184cc30973308982a417445", "url": "https://api.github.com/repos/rust-lang/rust/commits/c21fcac29320c065b184cc30973308982a417445", "html_url": "https://github.com/rust-lang/rust/commit/c21fcac29320c065b184cc30973308982a417445"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "69268f1fde26f31264f3b37fdad8ae56d6ea9776", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38f1c47d18761414cbe69e76b4d76c71afc24789/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38f1c47d18761414cbe69e76b4d76c71afc24789/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=38f1c47d18761414cbe69e76b4d76c71afc24789", "patch": "@@ -2616,9 +2616,8 @@ fn internalize_symbols(cx: &SharedCrateContext, reachable: &HashSet<&str>) {\n // when using MSVC linker.  We do this only for data, as linker can fix up\n // code references on its own.\n // See #26591, #27438\n-fn create_imps(cx: &SharedCrateContext, _reachable: &HashSet<&str>) {\n+fn create_imps(cx: &SharedCrateContext) {\n     unsafe {\n-\n         for ccx in cx.iter() {\n             let exported: Vec<_> = iter_globals(ccx.llmod())\n                 .filter(|&val| llvm::LLVMGetLinkage(val) == llvm::ExternalLinkage as c_uint &&\n@@ -2857,9 +2856,8 @@ pub fn trans_crate(tcx: &ty::ctxt, analysis: ty::CrateAnalysis) -> CrateTranslat\n     }\n \n     if sess.target.target.options.is_like_msvc &&\n-       sess.crate_types.borrow().iter().any(|ct| *ct == config::CrateTypeRlib ||\n-                                                 *ct == config::CrateTypeStaticlib) {\n-        create_imps(&shared_ccx, &reachable_symbols.iter().map(|x| &x[..]).collect());\n+       sess.crate_types.borrow().iter().any(|ct| *ct == config::CrateTypeRlib) {\n+        create_imps(&shared_ccx);\n     }\n \n     let metadata_module = ModuleTranslation {"}]}