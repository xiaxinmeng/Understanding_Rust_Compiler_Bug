{"sha": "50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZWNlZTI0MTAwOGExN2EzZDI5NmYwYTBkMmE0ZmY5MDgwYTVjNTc=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-09-14T21:51:46Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-11-03T00:32:28Z"}, "message": "Add feature gate for Self and associated types in struct expressions and patterns", "tree": {"sha": "2a411a8cbf5f68566545f10c40261672b63c07f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a411a8cbf5f68566545f10c40261672b63c07f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "html_url": "https://github.com/rust-lang/rust/commit/50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ca9967af75f7a279dcf4921f119b2602b41dd71", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca9967af75f7a279dcf4921f119b2602b41dd71", "html_url": "https://github.com/rust-lang/rust/commit/0ca9967af75f7a279dcf4921f119b2602b41dd71"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "9a40cbb824a04301b717a84e3623f005c890ecc9", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -3235,6 +3235,16 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             }\n             Def::Struct(..) | Def::Union(..) | Def::TyAlias(..) |\n             Def::AssociatedTy(..) | Def::SelfTy(..) => {\n+                match def {\n+                    Def::AssociatedTy(..) | Def::SelfTy(..)\n+                            if !self.tcx.sess.features.borrow().more_struct_aliases => {\n+                        emit_feature_err(&self.tcx.sess.parse_sess,\n+                                         \"more_struct_aliases\", path.span, GateIssue::Language,\n+                                         \"`Self` and associated types in struct \\\n+                                          expressions and patterns are unstable\");\n+                    }\n+                    _ => {}\n+                }\n                 match ty.sty {\n                     ty::TyAdt(adt, substs) if !adt.is_enum() => {\n                         Some((adt.struct_variant(), adt.did, substs))"}, {"sha": "69dfe8e862095f9cbf04d89799eb4c2222fe1a07", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -309,6 +309,9 @@ declare_features! (\n \n     // Allows field shorthands (`x` meaning `x: x`) in struct literal expressions.\n     (active, field_init_shorthand, \"1.14.0\", Some(37340)),\n+\n+    // Allows using `Self` and associated types in struct expressions and patterns.\n+    (active, more_struct_aliases, \"1.14.0\", Some(37544)),\n );\n \n declare_features! ("}, {"sha": "ecaf269fcb1ae64f0d53bfcf5e95ac7ee247a9e7", "filename": "src/test/compile-fail/struct-path-associated-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-path-associated-type.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(more_struct_aliases)]\n+\n struct S;\n \n trait Tr {"}, {"sha": "a2050182a7e303f80ef4dbad84cbf4cea1a12581", "filename": "src/test/compile-fail/struct-path-self-feature-gate.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-feature-gate.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S;\n+\n+trait Tr {\n+    type A;\n+}\n+\n+fn f<T: Tr<A = S>>() {\n+    let _ = T::A {};\n+    //~^ ERROR `Self` and associated types in struct expressions and patterns are unstable\n+}\n+\n+impl S {\n+    fn f() {\n+        let _ = Self {};\n+        //~^ ERROR `Self` and associated types in struct expressions and patterns are unstable\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "8352bd6751f50dcfd3854a4a5c21f41927e6aa6a", "filename": "src/test/compile-fail/struct-path-self-type-mismatch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-type-mismatch.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(more_struct_aliases)]\n+\n struct Foo<A> { inner: A }\n \n trait Bar { fn bar(); }"}, {"sha": "aeac199227b75f1f44a64b3bebf5249c9490cc35", "filename": "src/test/compile-fail/struct-path-self.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Fcompile-fail%2Fstruct-path-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-path-self.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(more_struct_aliases)]\n+\n struct S;\n \n trait Tr {"}, {"sha": "292761dfd005f35d9c2697d59a6a2390d99e8db9", "filename": "src/test/run-pass/struct-path-associated-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Frun-pass%2Fstruct-path-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Frun-pass%2Fstruct-path-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-path-associated-type.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(more_struct_aliases)]\n+\n struct S<T, U = u16> {\n     a: T,\n     b: U,"}, {"sha": "b569ab62c1bfa5469844846cb3acc54813c6b3e0", "filename": "src/test/run-pass/struct-path-self.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Frun-pass%2Fstruct-path-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ecee241008a17a3d296f0a0d2a4ff9080a5c57/src%2Ftest%2Frun-pass%2Fstruct-path-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-path-self.rs?ref=50ecee241008a17a3d296f0a0d2a4ff9080a5c57", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(more_struct_aliases)]\n+\n use std::ops::Add;\n \n struct S<T, U = u16> {"}]}