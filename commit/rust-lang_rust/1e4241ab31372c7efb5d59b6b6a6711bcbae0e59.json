{"sha": "1e4241ab31372c7efb5d59b6b6a6711bcbae0e59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNDI0MWFiMzEzNzJjN2VmYjVkNTliNmI2YTY3MTFiY2JhZTBlNTk=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-12T05:59:53Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-18T09:55:23Z"}, "message": "Optimize `Substs::super_fold_with`.\n\nThis speeds up several rustc-benchmarks by 1--4%.", "tree": {"sha": "b4e52c5c09a850b2ec17e7fd369a7c09976e110e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4e52c5c09a850b2ec17e7fd369a7c09976e110e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e4241ab31372c7efb5d59b6b6a6711bcbae0e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4241ab31372c7efb5d59b6b6a6711bcbae0e59", "html_url": "https://github.com/rust-lang/rust/commit/1e4241ab31372c7efb5d59b6b6a6711bcbae0e59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e4241ab31372c7efb5d59b6b6a6711bcbae0e59/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "html_url": "https://github.com/rust-lang/rust/commit/1d3dfa5301f59e86547a4034fb654c4efb47ac0e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "6beb2b968e2b534c734d5969ecd3ff29d5d6a6c1", "filename": "src/librustc/ty/subst.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1e4241ab31372c7efb5d59b6b6a6711bcbae0e59/src%2Flibrustc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e4241ab31372c7efb5d59b6b6a6711bcbae0e59/src%2Flibrustc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsubst.rs?ref=1e4241ab31372c7efb5d59b6b6a6711bcbae0e59", "patch": "@@ -304,8 +304,15 @@ impl<'a, 'gcx, 'tcx> Substs<'tcx> {\n \n impl<'tcx> TypeFoldable<'tcx> for &'tcx Substs<'tcx> {\n     fn super_fold_with<'gcx: 'tcx, F: TypeFolder<'gcx, 'tcx>>(&self, folder: &mut F) -> Self {\n-        let params = self.iter().map(|k| k.fold_with(folder)).collect();\n-        folder.tcx().mk_substs(params)\n+        let params: Vec<_> = self.iter().map(|k| k.fold_with(folder)).collect();\n+\n+        // If folding doesn't change the substs, it's faster to avoid calling\n+        // `mk_substs` and instead reuse the existing substs.\n+        if params[..] == self[..] {\n+            self\n+        } else {\n+            folder.tcx().mk_substs(params)\n+        }\n     }\n \n     fn fold_with<'gcx: 'tcx, F: TypeFolder<'gcx, 'tcx>>(&self, folder: &mut F) -> Self {"}]}