{"sha": "710ddc151baf9750e074229b8bdc794d63246eb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMGRkYzE1MWJhZjk3NTBlMDc0MjI5YjhiZGM3OTRkNjMyNDZlYjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-05T01:40:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-05T01:40:13Z"}, "message": "Auto merge of #56291 - jamesmunns:upstream-embedded-book, r=steveklabnik\n\nInitial addition of the Embedded Rust Book\n\nThis PR adds the Embedded Rust Book to the bookshelf as a submodule, and adds text for the bookshelf page. I have added a new section after \"Master Rust\" called \"Specialize Rust\", with the plan that future domain WG books can also reside here. This now extends the titles down to H3, where formerly only H1 and H2 were used.\n\nThe added submodule tracks the master branch of the Embedded WG repo.\n\nIf there are additional steps necessary to make this work in CI (perhaps adding this to `src/ci/docker/x86_64-gnu-tools/checktools.sh:32` or so?), please let me know.\n\nCC @steveklabnik @japaric\n\nAlso CC issue https://github.com/rust-embedded/wg/issues/257", "tree": {"sha": "27d7258442d57270077c9e018e11bf5bc3862bf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27d7258442d57270077c9e018e11bf5bc3862bf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/710ddc151baf9750e074229b8bdc794d63246eb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/710ddc151baf9750e074229b8bdc794d63246eb8", "html_url": "https://github.com/rust-lang/rust/commit/710ddc151baf9750e074229b8bdc794d63246eb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/710ddc151baf9750e074229b8bdc794d63246eb8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ae730a442cc8af6a487a137ae9ba78f89edbba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae730a442cc8af6a487a137ae9ba78f89edbba6", "html_url": "https://github.com/rust-lang/rust/commit/8ae730a442cc8af6a487a137ae9ba78f89edbba6"}, {"sha": "4633cca157d9730d75e3fc6144ae952b76f5559f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4633cca157d9730d75e3fc6144ae952b76f5559f", "html_url": "https://github.com/rust-lang/rust/commit/4633cca157d9730d75e3fc6144ae952b76f5559f"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "d603e4575159df2edea87b55d70debd64bceeb7c", "filename": ".gitmodules", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/710ddc151baf9750e074229b8bdc794d63246eb8/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/710ddc151baf9750e074229b8bdc794d63246eb8/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=710ddc151baf9750e074229b8bdc794d63246eb8", "patch": "@@ -44,3 +44,6 @@\n \tpath = src/llvm-project\n \turl = https://github.com/rust-lang/llvm-project.git\n \tbranch = rustc/8.0-2019-01-16\n+[submodule \"src/doc/embedded-book\"]\n+\tpath = src/doc/embedded-book\n+\turl = https://github.com/rust-embedded/book.git\n\\ No newline at end of file"}, {"sha": "b0d15e6a5df5fc36d898d6392b4989b08557c95f", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=710ddc151baf9750e074229b8bdc794d63246eb8", "patch": "@@ -430,6 +430,7 @@ impl<'a> Builder<'a> {\n                 doc::RustByExample,\n                 doc::RustcBook,\n                 doc::CargoBook,\n+                doc::EmbeddedBook,\n                 doc::EditionGuide,\n             ),\n             Kind::Dist => describe!("}, {"sha": "f1d8fca71cdf72bae7ec3072c3aa04ce2bf0e0ad", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=710ddc151baf9750e074229b8bdc794d63246eb8", "patch": "@@ -61,6 +61,7 @@ macro_rules! book {\n // adding a build step in `src/bootstrap/builder.rs`!\n book!(\n     EditionGuide, \"src/doc/edition-guide\", \"edition-guide\", RustbookVersion::MdBook1;\n+    EmbeddedBook, \"src/doc/embedded-book\", \"embedded-book\", RustbookVersion::MdBook2;\n     Nomicon, \"src/doc/nomicon\", \"nomicon\", RustbookVersion::MdBook1;\n     Reference, \"src/doc/reference\", \"reference\", RustbookVersion::MdBook1;\n     RustByExample, \"src/doc/rust-by-example\", \"rust-by-example\", RustbookVersion::MdBook1;\n@@ -71,10 +72,6 @@ book!(\n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n enum RustbookVersion {\n     MdBook1,\n-\n-    /// Note: Currently no books use mdBook v2, but we want the option\n-    /// to be available\n-    #[allow(dead_code)]\n     MdBook2,\n }\n "}, {"sha": "3343716419ff459a473a69a4488f99251fcc7ab0", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=710ddc151baf9750e074229b8bdc794d63246eb8", "patch": "@@ -23,6 +23,7 @@ python2.7 \"$X_PY\" test --no-fail-fast \\\n     src/doc/nomicon \\\n     src/doc/reference \\\n     src/doc/rust-by-example \\\n+    src/doc/embedded-book \\\n     src/tools/clippy \\\n     src/tools/rls \\\n     src/tools/rustfmt \\"}, {"sha": "d663113d1d9fbd35f1145c29f6080a6350b7f419", "filename": "src/doc/embedded-book", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fembedded-book?ref=710ddc151baf9750e074229b8bdc794d63246eb8", "patch": "@@ -0,0 +1 @@\n+Subproject commit d663113d1d9fbd35f1145c29f6080a6350b7f419"}, {"sha": "7a240ac0a42a5473e41cd27330d369e0ae562815", "filename": "src/doc/index.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fdoc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/710ddc151baf9750e074229b8bdc794d63246eb8/src%2Fdoc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Findex.md?ref=710ddc151baf9750e074229b8bdc794d63246eb8", "patch": "@@ -117,3 +117,19 @@ Rust. It's also sometimes called \"the 'nomicon.\"\n [The `rustc` Guide](https://rust-lang.github.io/rustc-guide/) documents how\n the compiler works and how to contribute to it. This is useful if you want to build\n or modify the Rust compiler from source (e.g. to target something non-standard).\n+\n+# Specialize Rust\n+\n+When using Rust in specific domain areas, consider using the following resources tailored to each domain.\n+\n+## Embedded Systems\n+\n+When developing for Bare Metal or Embedded Linux systems, you may find these resources maintained by the [Embedded Working Group] useful.\n+\n+[Embedded Working Group]: https://github.com/rust-embedded\n+\n+### The Embedded Rust Book\n+\n+[The Embedded Rust Book] is targeted at developers familiar with embedded development and familiar with Rust, but have not used Rust for embedded development.\n+\n+[The Embedded Rust Book]: embedded-book/index.html"}]}