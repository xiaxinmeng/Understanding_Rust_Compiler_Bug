{"sha": "dc92ad4d5bd06f7c62a924090001d1620fc74f3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjOTJhZDRkNWJkMDZmN2M2MmE5MjQwOTAwMDFkMTYyMGZjNzRmM2U=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-26T09:26:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-26T09:26:18Z"}, "message": "adjust LayoutDetails comments", "tree": {"sha": "b21dbdbd41b57f4bdf202a32e16dc40c2278749c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b21dbdbd41b57f4bdf202a32e16dc40c2278749c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc92ad4d5bd06f7c62a924090001d1620fc74f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc92ad4d5bd06f7c62a924090001d1620fc74f3e", "html_url": "https://github.com/rust-lang/rust/commit/dc92ad4d5bd06f7c62a924090001d1620fc74f3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc92ad4d5bd06f7c62a924090001d1620fc74f3e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd979ed48cb94c271a953a32723aca73f4edb551", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd979ed48cb94c271a953a32723aca73f4edb551", "html_url": "https://github.com/rust-lang/rust/commit/bd979ed48cb94c271a953a32723aca73f4edb551"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "67a5246012dd089e77754847ff31cfaca4632ce8", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dc92ad4d5bd06f7c62a924090001d1620fc74f3e/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc92ad4d5bd06f7c62a924090001d1620fc74f3e/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=dc92ad4d5bd06f7c62a924090001d1620fc74f3e", "patch": "@@ -871,26 +871,26 @@ impl Niche {\n \n #[derive(PartialEq, Eq, Hash, Debug, HashStable_Generic)]\n pub struct LayoutDetails {\n-    /// Says where the fields are located.\n+    /// Says where the fields are located within the layout.\n     /// Primitives and fieldless enums appear as unions without fields.\n     pub fields: FieldPlacement,\n \n     /// Encodes information about multi-variant layouts.\n-    /// Even with `Multiple` variants, a layout can still have fields! Those are then\n+    /// Even with `Multiple` variants, a layout still has its own fields! Those are then\n     /// shared between all variants. One of them will be the discriminant,\n     /// but e.g. generators can have more.\n     ///\n-    /// A layout-guided recursive descent must first look at all the fields,\n-    /// and only then check if this is a multi-variant layout and if so, proceed\n-    /// with the active variant.\n+    /// To access all fields of this layout, both `fields` and the fields of the active variant\n+    /// must be taken into account.\n     pub variants: Variants,\n \n     /// The `abi` defines how this data is passed between functions, and it defines\n     /// value restrictions via `valid_range`.\n     ///\n-    /// Note that this is entirely orthogonal to the recursive structrue defined by\n+    /// Note that this is entirely orthogonal to the recursive structure defined by\n     /// `variants` and `fields`; for example, `ManuallyDrop<Result<isize, isize>>` has\n-    /// `Abi::ScalarPair`! So, having a non-`Aggregate` `abi` should not stop a recursive descent.\n+    /// `Abi::ScalarPair`! So, even with non-`Aggregate` `abi`, `fields` and `variants`\n+    /// have to be taken into account to find all fields of this layout.\n     pub abi: Abi,\n \n     /// The leaf scalar with the largest number of invalid values"}]}