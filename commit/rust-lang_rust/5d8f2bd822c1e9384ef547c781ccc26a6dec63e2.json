{"sha": "5d8f2bd822c1e9384ef547c781ccc26a6dec63e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOGYyYmQ4MjJjMWU5Mzg0ZWY1NDdjNzgxY2NjMjZhNmRlYzYzZTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-08T11:49:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-08T11:49:54Z"}, "message": "Merge pull request #2762 from edwin0cheng/fix-2759\n\nReject tuple index for missing fields assist", "tree": {"sha": "77d7aa8fd4ba146327322d052c0991bb87c5e26b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77d7aa8fd4ba146327322d052c0991bb87c5e26b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d8f2bd822c1e9384ef547c781ccc26a6dec63e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFcHiCRBK7hj4Ov3rIwAAdHIIAEnS0mFU5SVtJO7C4MYZZJd6\nVVlYm4nhOSaJ58JXOAwzEM6vX7ZAmbty+L7g8CIIeRDodhdbWAw4OoZ3C893AKdR\nnihoi9OxVLVmIJvdfpQZmvKjiZwuuqa9d5P09R+u5oZ86q8iQYZK11Ge8ryoOTNL\ngi4rqkNG+VwPkHuQY9RxVdKyk4j3n8ENPDRZolgfaHR9r7ebrMBmR5J0Wvz6MNqr\nxgv1zwXNcobMzNt/JeT4wys53MpAm3l62IYm4KZo1jissNIBeMHeOMaMgXYmsF6+\nri5q4AVj7uszbs0Unhy+hlAeZ0MfJSBSae94vjhN0DlbGuyLniHVd/GTmDYHAKk=\n=vVym\n-----END PGP SIGNATURE-----\n", "payload": "tree 77d7aa8fd4ba146327322d052c0991bb87c5e26b\nparent d5abe4cfddd5c6e14100f20d27d3de38fe7201f5\nparent a4c9babedb6f19b9dbf065f59761e1c804642189\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1578484194 +0100\ncommitter GitHub <noreply@github.com> 1578484194 +0100\n\nMerge pull request #2762 from edwin0cheng/fix-2759\n\nReject tuple index for missing fields assist"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d8f2bd822c1e9384ef547c781ccc26a6dec63e2", "html_url": "https://github.com/rust-lang/rust/commit/5d8f2bd822c1e9384ef547c781ccc26a6dec63e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d8f2bd822c1e9384ef547c781ccc26a6dec63e2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5abe4cfddd5c6e14100f20d27d3de38fe7201f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5abe4cfddd5c6e14100f20d27d3de38fe7201f5", "html_url": "https://github.com/rust-lang/rust/commit/d5abe4cfddd5c6e14100f20d27d3de38fe7201f5"}, {"sha": "a4c9babedb6f19b9dbf065f59761e1c804642189", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4c9babedb6f19b9dbf065f59761e1c804642189", "html_url": "https://github.com/rust-lang/rust/commit/a4c9babedb6f19b9dbf065f59761e1c804642189"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "4783685294e22ab9443ec2e9f35039b61a42a240", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5d8f2bd822c1e9384ef547c781ccc26a6dec63e2/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d8f2bd822c1e9384ef547c781ccc26a6dec63e2/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=5d8f2bd822c1e9384ef547c781ccc26a6dec63e2", "patch": "@@ -64,22 +64,36 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n         })\n     })\n     .on::<hir::diagnostics::MissingFields, _>(|d| {\n-        let mut field_list = d.ast(db);\n-        for f in d.missed_fields.iter() {\n-            let field = make::record_field(make::name_ref(&f.to_string()), Some(make::expr_unit()));\n-            field_list = field_list.append_field(&field);\n-        }\n-\n-        let mut builder = TextEditBuilder::default();\n-        algo::diff(&d.ast(db).syntax(), &field_list.syntax()).into_text_edit(&mut builder);\n+        // Note that although we could add a diagnostics to\n+        // fill the missing tuple field, e.g :\n+        // `struct A(usize);`\n+        // `let a = A { 0: () }`\n+        // but it is uncommon usage and it should not be encouraged.\n+        let fix = if d.missed_fields.iter().any(|it| it.as_tuple_index().is_some()) {\n+            None\n+        } else {\n+            let mut field_list = d.ast(db);\n+            for f in d.missed_fields.iter() {\n+                let field =\n+                    make::record_field(make::name_ref(&f.to_string()), Some(make::expr_unit()));\n+                field_list = field_list.append_field(&field);\n+            }\n+\n+            let mut builder = TextEditBuilder::default();\n+            algo::diff(&d.ast(db).syntax(), &field_list.syntax()).into_text_edit(&mut builder);\n+\n+            Some(SourceChange::source_file_edit_from(\n+                \"fill struct fields\",\n+                file_id,\n+                builder.finish(),\n+            ))\n+        };\n \n-        let fix =\n-            SourceChange::source_file_edit_from(\"fill struct fields\", file_id, builder.finish());\n         res.borrow_mut().push(Diagnostic {\n             range: d.highlight_range(),\n             message: d.message(),\n             severity: Severity::Error,\n-            fix: Some(fix),\n+            fix,\n         })\n     })\n     .on::<hir::diagnostics::MissingOkInTailExpr, _>(|d| {"}]}