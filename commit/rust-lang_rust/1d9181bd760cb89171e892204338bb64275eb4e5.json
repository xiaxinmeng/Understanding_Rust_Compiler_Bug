{"sha": "1d9181bd760cb89171e892204338bb64275eb4e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOTE4MWJkNzYwY2I4OTE3MWU4OTIyMDQzMzhiYjY0Mjc1ZWI0ZTU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-17T23:41:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-23T22:23:02Z"}, "message": "extra: remove a @ in workcache config.", "tree": {"sha": "a716886ddcfd3d31333a6dfef65d92bd38963362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a716886ddcfd3d31333a6dfef65d92bd38963362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d9181bd760cb89171e892204338bb64275eb4e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d9181bd760cb89171e892204338bb64275eb4e5", "html_url": "https://github.com/rust-lang/rust/commit/1d9181bd760cb89171e892204338bb64275eb4e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d9181bd760cb89171e892204338bb64275eb4e5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a093ab70a7d7b12e9cddf644e1a975375937465", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a093ab70a7d7b12e9cddf644e1a975375937465", "html_url": "https://github.com/rust-lang/rust/commit/9a093ab70a7d7b12e9cddf644e1a975375937465"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "41a6570674146588ce582ace5cfe7fa5fec0cce5", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d9181bd760cb89171e892204338bb64275eb4e5/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d9181bd760cb89171e892204338bb64275eb4e5/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=1d9181bd760cb89171e892204338bb64275eb4e5", "patch": "@@ -164,7 +164,7 @@ impl Logger {\n struct Context {\n     db: RWARC<Database>,\n     logger: @mut Logger,\n-    cfg: @json::Object,\n+    cfg: json::Object,\n     freshness: TreeMap<~str,@fn(&str,&str)->bool>\n }\n \n@@ -215,7 +215,7 @@ fn digest_file(path: &Path) -> ~str {\n }\n \n impl Context {\n-    pub fn new(db: RWARC<Database>, lg: @mut Logger, cfg: @json::Object)\n+    pub fn new(db: RWARC<Database>, lg: @mut Logger, cfg: json::Object)\n                -> Context {\n         Context {\n             db: db,\n@@ -361,7 +361,7 @@ fn test() {\n                               db_cache: TreeMap::new(),\n                               db_dirty: false });\n     let lg = @mut Logger { a: () };\n-    let cfg = @HashMap::new();\n+    let cfg = HashMap::new();\n     let cx = @Context::new(db, lg, cfg);\n     let w:Work<~str> = do cx.prep(\"test1\") |prep| {\n         let pth = Path(\"foo.c\");"}]}