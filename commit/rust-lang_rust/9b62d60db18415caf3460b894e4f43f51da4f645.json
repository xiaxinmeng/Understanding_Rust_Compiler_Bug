{"sha": "9b62d60db18415caf3460b894e4f43f51da4f645", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNjJkNjBkYjE4NDE1Y2FmMzQ2MGI4OTRlNGY0M2Y1MWRhNGY2NDU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-23T21:39:57Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-23T21:39:57Z"}, "message": "fmt", "tree": {"sha": "848586a98855c76644bf6c620dcab404d417118f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/848586a98855c76644bf6c620dcab404d417118f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b62d60db18415caf3460b894e4f43f51da4f645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b62d60db18415caf3460b894e4f43f51da4f645", "html_url": "https://github.com/rust-lang/rust/commit/9b62d60db18415caf3460b894e4f43f51da4f645", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b62d60db18415caf3460b894e4f43f51da4f645/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d932934748ef5c412c11a2ace18a504a7cb949", "url": "https://api.github.com/repos/rust-lang/rust/commits/01d932934748ef5c412c11a2ace18a504a7cb949", "html_url": "https://github.com/rust-lang/rust/commit/01d932934748ef5c412c11a2ace18a504a7cb949"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "69c9664b3515696f3d181066114aedc643819383", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9b62d60db18415caf3460b894e4f43f51da4f645/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b62d60db18415caf3460b894e4f43f51da4f645/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=9b62d60db18415caf3460b894e4f43f51da4f645", "patch": "@@ -219,10 +219,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     ///\n     /// This function must be idempotent.\n     #[inline]\n-    fn canonical_alloc_id(\n-        _mem: &Memory<'mir, 'tcx, Self>,\n-        id: AllocId,\n-    ) -> AllocId {\n+    fn canonical_alloc_id(_mem: &Memory<'mir, 'tcx, Self>, id: AllocId) -> AllocId {\n         id\n     }\n "}]}