{"sha": "17ca7408f392781250086ced3e4b6d6d3d517850", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Y2E3NDA4ZjM5Mjc4MTI1MDA4NmNlZDNlNGI2ZDZkM2Q1MTc4NTA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-03-25T02:20:14Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2019-03-25T02:21:14Z"}, "message": "Do not add a space after empty impl", "tree": {"sha": "799fc6327739aec26f68dee6e77b82907b1e8a21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/799fc6327739aec26f68dee6e77b82907b1e8a21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17ca7408f392781250086ced3e4b6d6d3d517850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17ca7408f392781250086ced3e4b6d6d3d517850", "html_url": "https://github.com/rust-lang/rust/commit/17ca7408f392781250086ced3e4b6d6d3d517850", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17ca7408f392781250086ced3e4b6d6d3d517850/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "288d7db5a9f38f2523d7e83b388744427be1e671", "url": "https://api.github.com/repos/rust-lang/rust/commits/288d7db5a9f38f2523d7e83b388744427be1e671", "html_url": "https://github.com/rust-lang/rust/commit/288d7db5a9f38f2523d7e83b388744427be1e671"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "81cfc20961d00d5dcfa3734febc2c2f73b6652bc", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/17ca7408f392781250086ced3e4b6d6d3d517850/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ca7408f392781250086ced3e4b6d6d3d517850/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=17ca7408f392781250086ced3e4b6d6d3d517850", "patch": "@@ -667,9 +667,13 @@ impl Rewrite for ast::Ty {\n                 rewrite_macro(mac, None, context, shape, MacroPosition::Expression)\n             }\n             ast::TyKind::ImplicitSelf => Some(String::from(\"\")),\n-            ast::TyKind::ImplTrait(_, ref it) => it\n-                .rewrite(context, shape)\n-                .map(|it_str| format!(\"impl {}\", it_str)),\n+            ast::TyKind::ImplTrait(_, ref it) => {\n+                // Empty trait is not a parser error.\n+                it.rewrite(context, shape).map(|it_str| {\n+                    let space = if it_str.is_empty() { \"\" } else { \" \" };\n+                    format!(\"impl{}{}\", space, it_str)\n+                })\n+            }\n             ast::TyKind::CVarArgs => Some(\"...\".to_owned()),\n             ast::TyKind::Err | ast::TyKind::Typeof(..) => unreachable!(),\n         }"}, {"sha": "27387c5bdcace31c89ef15b40c7ee40c36cc0640", "filename": "tests/source/type.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17ca7408f392781250086ced3e4b6d6d3d517850/tests%2Fsource%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ca7408f392781250086ced3e4b6d6d3d517850/tests%2Fsource%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftype.rs?ref=17ca7408f392781250086ced3e4b6d6d3d517850", "patch": "@@ -83,6 +83,10 @@ impl Future<Item = (), Error = SomeError> + 'a,\n     'c {\n }\n \n+// #3051\n+token![impl];\n+token![ impl ];\n+\n // #3060\n macro_rules! foo {\n     ($foo_api: ty) => {"}, {"sha": "575bd3573bcc7acf9dea66fb0bd00b0dc66dbb58", "filename": "tests/target/type.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17ca7408f392781250086ced3e4b6d6d3d517850/tests%2Ftarget%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ca7408f392781250086ced3e4b6d6d3d517850/tests%2Ftarget%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftype.rs?ref=17ca7408f392781250086ced3e4b6d6d3d517850", "patch": "@@ -82,6 +82,10 @@ pub fn do_something<'a, T: Trait1 + Trait2 + 'a>(\n > + 'a + 'b + 'c {\n }\n \n+// #3051\n+token![impl];\n+token![impl];\n+\n // #3060\n macro_rules! foo {\n     ($foo_api: ty) => {"}]}