{"sha": "abf259cc541214d1a08c8e8f74c2ce44fc310f76", "node_id": "C_kwDOAAsO6NoAKGFiZjI1OWNjNTQxMjE0ZDFhMDhjOGU4Zjc0YzJjZTQ0ZmMzMTBmNzY", "commit": {"author": {"name": "AndyJado", "email": "101876416+AndyJado@users.noreply.github.com", "date": "2022-11-09T12:56:28Z"}, "committer": {"name": "AndyJado", "email": "101876416+AndyJado@users.noreply.github.com", "date": "2022-11-09T13:15:29Z"}, "message": "var_subdiag refinement\n\ntrim old", "tree": {"sha": "411eeaed08a1c152b0fc93cbe53d039e1899e0d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/411eeaed08a1c152b0fc93cbe53d039e1899e0d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abf259cc541214d1a08c8e8f74c2ce44fc310f76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abf259cc541214d1a08c8e8f74c2ce44fc310f76", "html_url": "https://github.com/rust-lang/rust/commit/abf259cc541214d1a08c8e8f74c2ce44fc310f76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abf259cc541214d1a08c8e8f74c2ce44fc310f76/comments", "author": {"login": "AndyJado", "id": 101876416, "node_id": "U_kgDOBhKCwA", "avatar_url": "https://avatars.githubusercontent.com/u/101876416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyJado", "html_url": "https://github.com/AndyJado", "followers_url": "https://api.github.com/users/AndyJado/followers", "following_url": "https://api.github.com/users/AndyJado/following{/other_user}", "gists_url": "https://api.github.com/users/AndyJado/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyJado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyJado/subscriptions", "organizations_url": "https://api.github.com/users/AndyJado/orgs", "repos_url": "https://api.github.com/users/AndyJado/repos", "events_url": "https://api.github.com/users/AndyJado/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyJado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndyJado", "id": 101876416, "node_id": "U_kgDOBhKCwA", "avatar_url": "https://avatars.githubusercontent.com/u/101876416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyJado", "html_url": "https://github.com/AndyJado", "followers_url": "https://api.github.com/users/AndyJado/followers", "following_url": "https://api.github.com/users/AndyJado/following{/other_user}", "gists_url": "https://api.github.com/users/AndyJado/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyJado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyJado/subscriptions", "organizations_url": "https://api.github.com/users/AndyJado/orgs", "repos_url": "https://api.github.com/users/AndyJado/repos", "events_url": "https://api.github.com/users/AndyJado/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyJado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "html_url": "https://github.com/rust-lang/rust/commit/a0cee0ab90c7ecf39e14958e5f325864a5f496fe"}], "stats": {"total": 137, "additions": 80, "deletions": 57}, "files": [{"sha": "60860f93daa3cf13e8aec738f3ded26cd049d461", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=abf259cc541214d1a08c8e8f74c2ce44fc310f76", "patch": "@@ -715,22 +715,15 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             borrow_span,\n             &self.describe_any_place(borrow.borrowed_place.as_ref()),\n         );\n-        borrow_spans.var_subdiag(\n-            &mut err,\n-            |var_span| {\n-                use crate::session_diagnostics::CaptureVarCause::*;\n-                let place = &borrow.borrowed_place;\n-                let desc_place = self.describe_any_place(place.as_ref());\n-                match borrow_spans {\n-                    UseSpans::ClosureUse { generator_kind, .. } => match generator_kind {\n-                        Some(_) => BorrowUsePlaceGenerator { place: desc_place, var_span },\n-                        None => BorrowUsePlaceClosure { place: desc_place, var_span },\n-                    },\n-                    _ => BorrowUsePlace { place: desc_place, var_span },\n-                }\n-            },\n-            \"mutable\",\n-        );\n+        borrow_spans.var_subdiag(&mut err, Some(borrow.kind), |kind, var_span| {\n+            use crate::session_diagnostics::CaptureVarCause::*;\n+            let place = &borrow.borrowed_place;\n+            let desc_place = self.describe_any_place(place.as_ref());\n+            match kind {\n+                Some(_) => BorrowUsePlaceGenerator { place: desc_place, var_span },\n+                None => BorrowUsePlaceClosure { place: desc_place, var_span },\n+            }\n+        });\n \n         self.explain_why_borrow_contains_point(location, borrow, None)\n             .add_explanation_to_diagnostic("}, {"sha": "7f26af67c71b214485777b90ea0e97029650bafb", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=abf259cc541214d1a08c8e8f74c2ce44fc310f76", "patch": "@@ -650,19 +650,28 @@ impl UseSpans<'_> {\n     pub(super) fn var_subdiag(\n         self,\n         err: &mut Diagnostic,\n-        f: impl Fn(Span) -> crate::session_diagnostics::CaptureVarCause,\n-        kind_desc: impl Into<String>,\n+        kind: Option<rustc_middle::mir::BorrowKind>,\n+        f: impl Fn(Option<GeneratorKind>, Span) -> crate::session_diagnostics::CaptureVarCause,\n     ) {\n-        if let UseSpans::ClosureUse { capture_kind_span, path_span, .. } = self {\n-            if capture_kind_span == path_span {\n-                err.subdiagnostic(f(capture_kind_span));\n-            } else {\n-                err.subdiagnostic(crate::session_diagnostics::CaptureVarKind {\n-                    kind_desc: kind_desc.into(),\n-                    kind_span: capture_kind_span,\n+        use crate::session_diagnostics::CaptureVarKind::*;\n+        if let UseSpans::ClosureUse { generator_kind, capture_kind_span, path_span, .. } = self {\n+            if capture_kind_span != path_span {\n+                err.subdiagnostic(match kind {\n+                    Some(kd) => match kd {\n+                        rustc_middle::mir::BorrowKind::Shared\n+                        | rustc_middle::mir::BorrowKind::Shallow\n+                        | rustc_middle::mir::BorrowKind::Unique => {\n+                            Immute { kind_span: capture_kind_span }\n+                        }\n+\n+                        rustc_middle::mir::BorrowKind::Mut { .. } => {\n+                            Mut { kind_span: capture_kind_span }\n+                        }\n+                    },\n+                    None => Move { kind_span: capture_kind_span },\n                 });\n-                err.subdiagnostic(f(path_span));\n-            }\n+            };\n+            err.subdiagnostic(f(generator_kind, path_span));\n         }\n     }\n "}, {"sha": "3f9bfc5373aea34b8c56f7bf8ab906bcc44ac5ea", "filename": "compiler/rustc_borrowck/src/session_diagnostics.rs", "status": "modified", "additions": 35, "deletions": 30, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs?ref=abf259cc541214d1a08c8e8f74c2ce44fc310f76", "patch": "@@ -149,36 +149,6 @@ pub(crate) enum RequireStaticErr {\n     },\n }\n \n-#[derive(Subdiagnostic)]\n-#[label(borrowck_capture_kind_label)]\n-pub(crate) struct CaptureVarKind {\n-    pub kind_desc: String,\n-    #[primary_span]\n-    pub kind_span: Span,\n-}\n-\n-#[derive(Subdiagnostic)]\n-pub(crate) enum CaptureVarCause {\n-    #[label(borrowck_var_borrow_by_use_place)]\n-    BorrowUsePlace {\n-        place: String,\n-        #[primary_span]\n-        var_span: Span,\n-    },\n-    #[label(borrowck_var_borrow_by_use_place_in_generator)]\n-    BorrowUsePlaceGenerator {\n-        place: String,\n-        #[primary_span]\n-        var_span: Span,\n-    },\n-    #[label(borrowck_var_borrow_by_use_place_in_closure)]\n-    BorrowUsePlaceClosure {\n-        place: String,\n-        #[primary_span]\n-        var_span: Span,\n-    },\n-}\n-\n #[derive(Subdiagnostic)]\n pub(crate) enum CaptureVarPathUseCause {\n     #[label(borrowck_borrow_due_to_use_generator)]\n@@ -222,3 +192,38 @@ pub(crate) enum CaptureVarPathUseCause {\n         path_span: Span,\n     },\n }\n+\n+#[derive(Subdiagnostic)]\n+pub(crate) enum CaptureVarKind {\n+    #[label(borrowck_capture_immute)]\n+    Immute {\n+        #[primary_span]\n+        kind_span: Span,\n+    },\n+    #[label(borrowck_capture_mut)]\n+    Mut {\n+        #[primary_span]\n+        kind_span: Span,\n+    },\n+    #[label(borrowck_capture_move)]\n+    Move {\n+        #[primary_span]\n+        kind_span: Span,\n+    },\n+}\n+\n+#[derive(Subdiagnostic)]\n+pub(crate) enum CaptureVarCause {\n+    #[label(borrowck_var_borrow_by_use_place_in_generator)]\n+    BorrowUsePlaceGenerator {\n+        place: String,\n+        #[primary_span]\n+        var_span: Span,\n+    },\n+    #[label(borrowck_var_borrow_by_use_place_in_closure)]\n+    BorrowUsePlaceClosure {\n+        place: String,\n+        #[primary_span]\n+        var_span: Span,\n+    },\n+}"}, {"sha": "e3174360c90e26fa1135ee77868d81f34ccd8c7c", "filename": "compiler/rustc_error_messages/locales/en-US/borrowck.ftl", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl?ref=abf259cc541214d1a08c8e8f74c2ce44fc310f76", "patch": "@@ -94,3 +94,18 @@ borrowck_assign_due_to_use_closure =\n \n borrowck_assign_part_due_to_use_closure =\n     assign to part occurs due to use in closure\n+\n+borrowck_capture_immute =\n+    capture is immutable because of use here\n+\n+borrowck_capture_mut =\n+    capture is mutable because of use here\n+\n+borrowck_capture_move =\n+    capture is moved because of use here\n+\n+borrowck_var_move_by_use_place_in_generator =\n+    move occurs due to use of {$place} in generator\n+\n+borrowck_var_move_by_use_place_in_closure =\n+    move occurs due to use of {$place} in closure"}, {"sha": "35675313b48bcc997c98a61da548ca2ccc15bc81", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf259cc541214d1a08c8e8f74c2ce44fc310f76/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=abf259cc541214d1a08c8e8f74c2ce44fc310f76", "patch": "@@ -1898,6 +1898,7 @@ impl BorrowKind {\n         }\n     }\n \n+    // FIXME: won't be used after diagnostic migration\n     pub fn describe_mutability(&self) -> &str {\n         match *self {\n             BorrowKind::Shared | BorrowKind::Shallow | BorrowKind::Unique => \"immutable\","}]}