{"sha": "35b0f2438d72320a071aca1084e9c96c071c377d", "node_id": "C_kwDOAAsO6NoAKDM1YjBmMjQzOGQ3MjMyMGEwNzFhY2ExMDg0ZTljOTZjMDcxYzM3N2Q", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-25T08:10:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-25T08:10:55Z"}, "message": "Auto merge of #8028 - dswij:8016, r=flip1995\n\nAdd more descriptive help info for `needless_question_mark`\n\ncloses #8016\n\nchangelog: [`needless_question_mark`] help suggestion now explains what should be changed", "tree": {"sha": "4adc773e9e737fad80c0a1274424b7819e2748b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4adc773e9e737fad80c0a1274424b7819e2748b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35b0f2438d72320a071aca1084e9c96c071c377d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35b0f2438d72320a071aca1084e9c96c071c377d", "html_url": "https://github.com/rust-lang/rust/commit/35b0f2438d72320a071aca1084e9c96c071c377d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35b0f2438d72320a071aca1084e9c96c071c377d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81f37a8150fc86f8de00e6947e86d2b69291906a", "url": "https://api.github.com/repos/rust-lang/rust/commits/81f37a8150fc86f8de00e6947e86d2b69291906a", "html_url": "https://github.com/rust-lang/rust/commit/81f37a8150fc86f8de00e6947e86d2b69291906a"}, {"sha": "c0bad8bcab1cb3365e813de97c1f122e64b04510", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0bad8bcab1cb3365e813de97c1f122e64b04510", "html_url": "https://github.com/rust-lang/rust/commit/c0bad8bcab1cb3365e813de97c1f122e64b04510"}], "stats": {"total": 57, "additions": 32, "deletions": 25}, "files": [{"sha": "1ffed6a052499119e5bda1293034958b4dce05b8", "filename": "clippy_lints/src/needless_question_mark.rs", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/35b0f2438d72320a071aca1084e9c96c071c377d/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b0f2438d72320a071aca1084e9c96c071c377d/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_question_mark.rs?ref=35b0f2438d72320a071aca1084e9c96c071c377d", "patch": "@@ -93,26 +93,33 @@ impl LateLintPass<'_> for NeedlessQuestionMark {\n }\n \n fn check(cx: &LateContext<'_>, expr: &Expr<'_>) {\n-    let inner_expr = if_chain! {\n+    if_chain! {\n         if let ExprKind::Call(path, [arg]) = &expr.kind;\n         if let ExprKind::Path(ref qpath) = &path.kind;\n-        if is_lang_ctor(cx, qpath, OptionSome) || is_lang_ctor(cx, qpath, ResultOk);\n+        let sugg_remove = if is_lang_ctor(cx, qpath, OptionSome) {\n+            \"Some()\"\n+        } else if is_lang_ctor(cx, qpath, ResultOk) {\n+            \"Ok()\"\n+        } else {\n+            return;\n+        };\n         if let ExprKind::Match(inner_expr_with_q, _, MatchSource::TryDesugar) = &arg.kind;\n         if let ExprKind::Call(called, [inner_expr]) = &inner_expr_with_q.kind;\n         if let ExprKind::Path(QPath::LangItem(LangItem::TryTraitBranch, _)) = &called.kind;\n         if expr.span.ctxt() == inner_expr.span.ctxt();\n         let expr_ty = cx.typeck_results().expr_ty(expr);\n         let inner_ty = cx.typeck_results().expr_ty(inner_expr);\n         if TyS::same_type(expr_ty, inner_ty);\n-        then { inner_expr } else { return; }\n-    };\n-    span_lint_and_sugg(\n-        cx,\n-        NEEDLESS_QUESTION_MARK,\n-        expr.span,\n-        \"question mark operator is useless here\",\n-        \"try\",\n-        format!(\"{}\", snippet(cx, inner_expr.span, r#\"\"...\"\"#)),\n-        Applicability::MachineApplicable,\n-    );\n+        then {\n+            span_lint_and_sugg(\n+                cx,\n+                NEEDLESS_QUESTION_MARK,\n+                expr.span,\n+                \"question mark operator is useless here\",\n+                &format!(\"try removing question mark and `{}`\", sugg_remove),\n+                format!(\"{}\", snippet(cx, inner_expr.span, r#\"\"...\"\"#)),\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+    }\n }"}, {"sha": "57c3d48c7611c2b1cad980070081cce9bb574aa2", "filename": "tests/ui/needless_question_mark.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/35b0f2438d72320a071aca1084e9c96c071c377d/tests%2Fui%2Fneedless_question_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35b0f2438d72320a071aca1084e9c96c071c377d/tests%2Fui%2Fneedless_question_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_question_mark.stderr?ref=35b0f2438d72320a071aca1084e9c96c071c377d", "patch": "@@ -2,75 +2,75 @@ error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:23:12\n    |\n LL |     return Some(to.magic?);\n-   |            ^^^^^^^^^^^^^^^ help: try: `to.magic`\n+   |            ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n    |\n    = note: `-D clippy::needless-question-mark` implied by `-D warnings`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:31:12\n    |\n LL |     return Some(to.magic?)\n-   |            ^^^^^^^^^^^^^^^ help: try: `to.magic`\n+   |            ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:36:5\n    |\n LL |     Some(to.magic?)\n-   |     ^^^^^^^^^^^^^^^ help: try: `to.magic`\n+   |     ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:41:21\n    |\n LL |     to.and_then(|t| Some(t.magic?))\n-   |                     ^^^^^^^^^^^^^^ help: try: `t.magic`\n+   |                     ^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `t.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:50:9\n    |\n LL |         Some(t.magic?)\n-   |         ^^^^^^^^^^^^^^ help: try: `t.magic`\n+   |         ^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `t.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:55:12\n    |\n LL |     return Ok(tr.magic?);\n-   |            ^^^^^^^^^^^^^ help: try: `tr.magic`\n+   |            ^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `tr.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:62:12\n    |\n LL |     return Ok(tr.magic?)\n-   |            ^^^^^^^^^^^^^ help: try: `tr.magic`\n+   |            ^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `tr.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:66:5\n    |\n LL |     Ok(tr.magic?)\n-   |     ^^^^^^^^^^^^^ help: try: `tr.magic`\n+   |     ^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `tr.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:70:21\n    |\n LL |     tr.and_then(|t| Ok(t.magic?))\n-   |                     ^^^^^^^^^^^^ help: try: `t.magic`\n+   |                     ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `t.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:78:9\n    |\n LL |         Ok(t.magic?)\n-   |         ^^^^^^^^^^^^ help: try: `t.magic`\n+   |         ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `t.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:85:16\n    |\n LL |         return Ok(t.magic?);\n-   |                ^^^^^^^^^^^^ help: try: `t.magic`\n+   |                ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `t.magic`\n \n error: question mark operator is useless here\n   --> $DIR/needless_question_mark.rs:120:27\n    |\n LL |         || -> Option<_> { Some(Some($expr)?) }()\n-   |                           ^^^^^^^^^^^^^^^^^^ help: try: `Some($expr)`\n+   |                           ^^^^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `Some($expr)`\n ...\n LL |     let _x = some_and_qmark_in_macro!(x?);\n    |              ---------------------------- in this macro invocation"}]}