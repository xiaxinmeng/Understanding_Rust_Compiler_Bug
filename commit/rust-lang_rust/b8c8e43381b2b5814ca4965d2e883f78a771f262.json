{"sha": "b8c8e43381b2b5814ca4965d2e883f78a771f262", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YzhlNDMzODFiMmI1ODE0Y2E0OTY1ZDJlODgzZjc4YTc3MWYyNjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T22:19:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T22:48:47Z"}, "message": "rustdoc: Add some more error reporting for pandoc", "tree": {"sha": "bdc8da76094a995b364683c75875a9282cf6b953", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdc8da76094a995b364683c75875a9282cf6b953"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8c8e43381b2b5814ca4965d2e883f78a771f262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8c8e43381b2b5814ca4965d2e883f78a771f262", "html_url": "https://github.com/rust-lang/rust/commit/b8c8e43381b2b5814ca4965d2e883f78a771f262", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8c8e43381b2b5814ca4965d2e883f78a771f262/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc9b55d65f4854e22321095ae07d1ba9d39fe86d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9b55d65f4854e22321095ae07d1ba9d39fe86d", "html_url": "https://github.com/rust-lang/rust/commit/fc9b55d65f4854e22321095ae07d1ba9d39fe86d"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "b65ec03a8842f5c430c28b5842bbe2ec9b93d48a", "filename": "src/rustdoc/markdown_writer.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b8c8e43381b2b5814ca4965d2e883f78a771f262/src%2Frustdoc%2Fmarkdown_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8c8e43381b2b5814ca4965d2e883f78a771f262/src%2Frustdoc%2Fmarkdown_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_writer.rs?ref=b8c8e43381b2b5814ca4965d2e883f78a771f262", "patch": "@@ -100,17 +100,40 @@ fn pandoc_writer(\n         os::close(pipe_out.out);\n         os::close(pipe_err.out);\n         os::close(pipe_in.out);\n-        os::close(pipe_out.in);\n-        os::close(pipe_err.in);\n+\n+        let stdout = result::get(task::try {||\n+            readclose(pipe_out.in)\n+        });\n+        let stderr = result::get(task::try {||\n+            readclose(pipe_err.in)\n+        });\n \n         let status = run::waitpid(pid);\n         #debug(\"pandoc result: %i\", status);\n         if status != 0 {\n+            #error(\"pandoc-out: %s\", stdout);\n+            #error(\"pandoc-err: %s\", stderr);\n             fail \"pandoc failed\";\n         }\n     }\n }\n \n+fn readclose(fd: ctypes::fd_t) -> str {\n+    import std::os;\n+    import std::io;\n+\n+    // Copied from run::program_output\n+    let file = os::fd_FILE(fd);\n+    let reader = io::FILE_reader(file, false);\n+    let buf = \"\";\n+    while !reader.eof() {\n+        let bytes = reader.read_bytes(4096u);\n+        buf += str::from_bytes(bytes);\n+    }\n+    os::fclose(file);\n+    ret buf;\n+}\n+\n fn generic_writer(process: fn~(markdown: str)) -> writer {\n     let ch = task::spawn_listener {|po: comm::port<writeinstr>|\n         let markdown = \"\";"}]}