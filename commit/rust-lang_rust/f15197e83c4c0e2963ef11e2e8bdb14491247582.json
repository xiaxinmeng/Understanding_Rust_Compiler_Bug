{"sha": "f15197e83c4c0e2963ef11e2e8bdb14491247582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNTE5N2U4M2M0YzBlMjk2M2VmMTFlMmU4YmRiMTQ0OTEyNDc1ODI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-11-30T16:53:02Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-11-30T16:53:02Z"}, "message": "`find_fn` -> `find_mir_or_eval_fn` rename", "tree": {"sha": "8fe0e3ab10bb3d53099067b9e8ae0b16a2ac6736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fe0e3ab10bb3d53099067b9e8ae0b16a2ac6736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f15197e83c4c0e2963ef11e2e8bdb14491247582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f15197e83c4c0e2963ef11e2e8bdb14491247582", "html_url": "https://github.com/rust-lang/rust/commit/f15197e83c4c0e2963ef11e2e8bdb14491247582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f15197e83c4c0e2963ef11e2e8bdb14491247582/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "735a610f47b029d6620abfda04615f70f49c5ec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/735a610f47b029d6620abfda04615f70f49c5ec6", "html_url": "https://github.com/rust-lang/rust/commit/735a610f47b029d6620abfda04615f70f49c5ec6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "133ab31524723f0a031a5a8b5da2a2090abf86c7", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=f15197e83c4c0e2963ef11e2e8bdb14491247582", "patch": "@@ -328,14 +328,14 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         false // for now, we don't enforce validity\n     }\n \n-    fn find_fn(\n+    fn find_mir_or_eval_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx>],\n         ret: Option<(PlaceTy<'tcx>, mir::BasicBlock)>,\n         _unwind: Option<mir::BasicBlock> // unwinding is not supported in consts\n     ) -> InterpResult<'tcx, Option<&'mir mir::Body<'tcx>>> {\n-        debug!(\"eval_fn_call: {:?}\", instance);\n+        debug!(\"find_mir_or_eval_fn: {:?}\", instance);\n \n         // If this function is a `const fn` then as an optimization we can query this\n         // evaluation immediately."}, {"sha": "7f5873cebf621feb6dc00b670d11a8b373377665", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=f15197e83c4c0e2963ef11e2e8bdb14491247582", "patch": "@@ -146,7 +146,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     /// nor just jump to `ret`, but instead push their own stack frame.)\n     /// Passing `dest`and `ret` in the same `Option` proved very annoying when only one of them\n     /// was used.\n-    fn find_fn(\n+    fn find_mir_or_eval_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx, Self::PointerTag>],"}, {"sha": "674051ecd8f16c3232c99cb23d97f056150c6fcc", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=f15197e83c4c0e2963ef11e2e8bdb14491247582", "patch": "@@ -285,7 +285,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             ty::InstanceDef::CloneShim(..) |\n             ty::InstanceDef::Item(_) => {\n                 // We need MIR for this fn\n-                let body = match M::find_fn(self, instance, args, ret, unwind)? {\n+                let body = match M::find_mir_or_eval_fn(self, instance, args, ret, unwind)? {\n                     Some(body) => body,\n                     None => return Ok(()),\n                 };"}, {"sha": "22f25aa93a3921bfed5f55f88bfd4ff2764eaab5", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15197e83c4c0e2963ef11e2e8bdb14491247582/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=f15197e83c4c0e2963ef11e2e8bdb14491247582", "patch": "@@ -139,7 +139,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine {\n         false\n     }\n \n-    fn find_fn(\n+    fn find_mir_or_eval_fn(\n         _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         _instance: ty::Instance<'tcx>,\n         _args: &[OpTy<'tcx>],"}]}