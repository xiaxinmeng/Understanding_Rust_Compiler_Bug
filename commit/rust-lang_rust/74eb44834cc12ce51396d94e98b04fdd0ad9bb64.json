{"sha": "74eb44834cc12ce51396d94e98b04fdd0ad9bb64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZWI0NDgzNGNjMTJjZTUxMzk2ZDk0ZTk4YjA0ZmRkMGFkOWJiNjQ=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-05T13:06:43Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-05T13:06:43Z"}, "message": "Extract directory creation into its own function", "tree": {"sha": "c2deafa4b9c83d00f1b5150135f85cd2a4d1b6c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2deafa4b9c83d00f1b5150135f85cd2a4d1b6c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74eb44834cc12ce51396d94e98b04fdd0ad9bb64", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmBCLOMACgkQHKDfKvWd\naKVx4BAAtEse8Wbrhi4PUjU0iuMg1We/R4eAh2wRskvhHaueEONRFgypUT0wL8KG\nNllvceXGObyusrXGfcXq4HCGjs8+vMOT7iio2kVwKOQ4BDSRSjNlaLzS9ttmiYqS\np8wFZuSdmL+euzC8MKXHmUFOLV7KNY7yjgWcrdBzVqlkvi0bPFGigZulmPTmRP1l\n/gmQKUAbdggLFjy4mUlsH4b8f6lIlOBs7k7/55Gu4+cAEd2sgU8ms0Az7NEsTV5u\nwEJ1Gk1xxjXjRVmzKC17zmahMLbKBQOh1VwRzvZhRBNm0VXCE0QebcEO44D1GtqM\nxrxJgiIGi5LMI6Ig26KM5wP4QsKcF7i1w1jA4BD9Ct1FUKOB0Mlm/yXvQnIm+JiI\nBZAnFn51k06Np3N/VyOuwC3UIYTIqLdn5Hb47kJ/Flo6seOYNMRj/I+aBI++FefS\ni6Wio4/agHcEd5nAZRNQl0tDp+pWqxq5LxPSxV82hCe0zKR1cFKKIBe6Kjlf3G7n\nlyhradh1IYNV6SHB4nvIftKYHXVoR0/Tj4/UmG0Cx7gXMVf4/3DFoAGAokzEUT6I\npgnvZ7QmqZ/oTaHp+bHEgKX9nt6yWrMXOGqOJODUKfP9+wRcVu92dzaiTnb9Sqjn\nNvvMUb/hq85FlwEaOrNCHC8jfliNRUTVtVcHnFM+i9y7+9aCITY=\n=lMvC\n-----END PGP SIGNATURE-----", "payload": "tree c2deafa4b9c83d00f1b5150135f85cd2a4d1b6c7\nparent 4aaad086d2eff2d2f4e169551b6cffad22e7e751\nauthor flip1995 <philipp.krones@embecosm.com> 1614949603 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1614949603 +0100\n\nExtract directory creation into its own function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74eb44834cc12ce51396d94e98b04fdd0ad9bb64", "html_url": "https://github.com/rust-lang/rust/commit/74eb44834cc12ce51396d94e98b04fdd0ad9bb64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74eb44834cc12ce51396d94e98b04fdd0ad9bb64/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aaad086d2eff2d2f4e169551b6cffad22e7e751", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aaad086d2eff2d2f4e169551b6cffad22e7e751", "html_url": "https://github.com/rust-lang/rust/commit/4aaad086d2eff2d2f4e169551b6cffad22e7e751"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "f01f14eb458fd96dfb504ea957652fffd8bf1c33", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/74eb44834cc12ce51396d94e98b04fdd0ad9bb64/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74eb44834cc12ce51396d94e98b04fdd0ad9bb64/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=74eb44834cc12ce51396d94e98b04fdd0ad9bb64", "patch": "@@ -115,21 +115,7 @@ impl CrateSource {\n                 // url to download the crate from crates.io\n                 let url = format!(\"https://crates.io/api/v1/crates/{}/{}/download\", name, version);\n                 println!(\"Downloading and extracting {} {} from {}\", name, version, url);\n-                std::fs::create_dir(\"target/lintcheck/\").unwrap_or_else(|err| {\n-                    if err.kind() != ErrorKind::AlreadyExists {\n-                        panic!(\"cannot create lintcheck target dir\");\n-                    }\n-                });\n-                std::fs::create_dir(&krate_download_dir).unwrap_or_else(|err| {\n-                    if err.kind() != ErrorKind::AlreadyExists {\n-                        panic!(\"cannot create crate download dir\");\n-                    }\n-                });\n-                std::fs::create_dir(&extract_dir).unwrap_or_else(|err| {\n-                    if err.kind() != ErrorKind::AlreadyExists {\n-                        panic!(\"cannot create crate extraction dir\");\n-                    }\n-                });\n+                create_dirs(&krate_download_dir, &extract_dir);\n \n                 let krate_file_path = krate_download_dir.join(format!(\"{}-{}.crate.tar.gz\", name, version));\n                 // don't download/extract if we already have done so\n@@ -750,6 +736,29 @@ fn print_stats(old_stats: HashMap<String, usize>, new_stats: HashMap<&String, us\n         });\n }\n \n+/// Create necessary directories to run the lintcheck tool.\n+///\n+/// # Panics\n+///\n+/// This function panics if creating one of the dirs fails.\n+fn create_dirs(krate_download_dir: &Path, extract_dir: &Path) {\n+    std::fs::create_dir(\"target/lintcheck/\").unwrap_or_else(|err| {\n+        if err.kind() != ErrorKind::AlreadyExists {\n+            panic!(\"cannot create lintcheck target dir\");\n+        }\n+    });\n+    std::fs::create_dir(&krate_download_dir).unwrap_or_else(|err| {\n+        if err.kind() != ErrorKind::AlreadyExists {\n+            panic!(\"cannot create crate download dir\");\n+        }\n+    });\n+    std::fs::create_dir(&extract_dir).unwrap_or_else(|err| {\n+        if err.kind() != ErrorKind::AlreadyExists {\n+            panic!(\"cannot create crate extraction dir\");\n+        }\n+    });\n+}\n+\n #[test]\n fn lintcheck_test() {\n     let args = ["}]}