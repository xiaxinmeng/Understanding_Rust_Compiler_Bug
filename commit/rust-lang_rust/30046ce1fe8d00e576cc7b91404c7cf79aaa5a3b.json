{"sha": "30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b", "node_id": "C_kwDOAAsO6NoAKDMwMDQ2Y2UxZmU4ZDAwZTU3NmNjN2I5MTQwNGM3Y2Y3OWFhYTVhM2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-08T06:22:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-08T06:22:21Z"}, "message": "Auto merge of #96457 - yungkneez:fix-bootstrap, r=Mark-Simulacrum\n\nInitialize rust-analyzer submodule on bootstrap\n\nFixes #96456", "tree": {"sha": "56b27196286a067bf8575e810a3a1fcaf46a4f22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56b27196286a067bf8575e810a3a1fcaf46a4f22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b", "html_url": "https://github.com/rust-lang/rust/commit/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "030c886c29ffbfbb9f9c6495651cb4bee0fc93fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/030c886c29ffbfbb9f9c6495651cb4bee0fc93fe", "html_url": "https://github.com/rust-lang/rust/commit/030c886c29ffbfbb9f9c6495651cb4bee0fc93fe"}, {"sha": "2878f98672ea8b5d69c2139a0784e41c90de1d9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2878f98672ea8b5d69c2139a0784e41c90de1d9b", "html_url": "https://github.com/rust-lang/rust/commit/2878f98672ea8b5d69c2139a0784e41c90de1d9b"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "ab4338e1c85ef1bad52b1d165350e73edd795a36", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b", "patch": "@@ -998,6 +998,10 @@ def update_submodules(self):\n             \"library/backtrace\",\n             \"library/stdarch\"\n         ]\n+        # If build.vendor is set in config.toml, we must update rust-analyzer also.\n+        # Otherwise, the bootstrap will fail (#96456).\n+        if self.use_vendored_sources:\n+            submodules.append(\"src/tools/rust-analyzer\")\n         filtered_submodules = []\n         submodules_names = []\n         for module in submodules:"}, {"sha": "5d32b4f801a183fb22247e16f7bffcb99aab1d36", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=30046ce1fe8d00e576cc7b91404c7cf79aaa5a3b", "patch": "@@ -609,14 +609,19 @@ impl Build {\n     /// This avoids contributors checking in a submodule change by accident.\n     pub fn maybe_update_submodules(&self) {\n         // WARNING: keep this in sync with the submodules hard-coded in bootstrap.py\n-        const BOOTSTRAP_SUBMODULES: &[&str] = &[\n+        let mut bootstrap_submodules: Vec<&str> = vec![\n             \"src/tools/rust-installer\",\n             \"src/tools/cargo\",\n             \"src/tools/rls\",\n             \"src/tools/miri\",\n             \"library/backtrace\",\n             \"library/stdarch\",\n         ];\n+        // As in bootstrap.py, we include `rust-analyzer` if `build.vendor` was set in\n+        // `config.toml`.\n+        if self.config.vendor {\n+            bootstrap_submodules.push(\"src/tools/rust-analyzer\");\n+        }\n         // Avoid running git when there isn't a git checkout.\n         if !self.config.submodules(&self.rust_info) {\n             return;\n@@ -632,7 +637,7 @@ impl Build {\n             // Sample output: `submodule.src/rust-installer.path src/tools/rust-installer`\n             let submodule = Path::new(line.splitn(2, ' ').nth(1).unwrap());\n             // avoid updating submodules twice\n-            if !BOOTSTRAP_SUBMODULES.iter().any(|&p| Path::new(p) == submodule)\n+            if !bootstrap_submodules.iter().any(|&p| Path::new(p) == submodule)\n                 && channel::GitInfo::new(false, submodule).is_git()\n             {\n                 self.update_submodule(submodule);"}]}