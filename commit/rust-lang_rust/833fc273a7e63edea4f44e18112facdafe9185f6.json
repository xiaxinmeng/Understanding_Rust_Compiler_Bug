{"sha": "833fc273a7e63edea4f44e18112facdafe9185f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzM2ZjMjczYTdlNjNlZGVhNGY0NGUxODExMmZhY2RhZmU5MTg1ZjY=", "commit": {"author": {"name": "John Gallagher", "email": "jgallagher@bignerdranch.com", "date": "2015-05-06T15:47:30Z"}, "committer": {"name": "John Gallagher", "email": "jgallagher@bignerdranch.com", "date": "2015-05-06T15:47:30Z"}, "message": "Update documentation for RwLock::try_{read,write}.", "tree": {"sha": "c22f3dead96c1cb28e8336a4d203afe985e8d158", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c22f3dead96c1cb28e8336a4d203afe985e8d158"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/833fc273a7e63edea4f44e18112facdafe9185f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/833fc273a7e63edea4f44e18112facdafe9185f6", "html_url": "https://github.com/rust-lang/rust/commit/833fc273a7e63edea4f44e18112facdafe9185f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/833fc273a7e63edea4f44e18112facdafe9185f6/comments", "author": {"login": "hydhknn", "id": 62813007, "node_id": "MDQ6VXNlcjYyODEzMDA3", "avatar_url": "https://avatars.githubusercontent.com/u/62813007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hydhknn", "html_url": "https://github.com/hydhknn", "followers_url": "https://api.github.com/users/hydhknn/followers", "following_url": "https://api.github.com/users/hydhknn/following{/other_user}", "gists_url": "https://api.github.com/users/hydhknn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hydhknn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hydhknn/subscriptions", "organizations_url": "https://api.github.com/users/hydhknn/orgs", "repos_url": "https://api.github.com/users/hydhknn/repos", "events_url": "https://api.github.com/users/hydhknn/events{/privacy}", "received_events_url": "https://api.github.com/users/hydhknn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hydhknn", "id": 62813007, "node_id": "MDQ6VXNlcjYyODEzMDA3", "avatar_url": "https://avatars.githubusercontent.com/u/62813007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hydhknn", "html_url": "https://github.com/hydhknn", "followers_url": "https://api.github.com/users/hydhknn/followers", "following_url": "https://api.github.com/users/hydhknn/following{/other_user}", "gists_url": "https://api.github.com/users/hydhknn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hydhknn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hydhknn/subscriptions", "organizations_url": "https://api.github.com/users/hydhknn/orgs", "repos_url": "https://api.github.com/users/hydhknn/repos", "events_url": "https://api.github.com/users/hydhknn/events{/privacy}", "received_events_url": "https://api.github.com/users/hydhknn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30b883b93f94be643e4b29e32bc8dcdbf07bf1d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/30b883b93f94be643e4b29e32bc8dcdbf07bf1d9", "html_url": "https://github.com/rust-lang/rust/commit/30b883b93f94be643e4b29e32bc8dcdbf07bf1d9"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "d70c0a4b43836c0552cc613026239126e18843bb", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/833fc273a7e63edea4f44e18112facdafe9185f6/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833fc273a7e63edea4f44e18112facdafe9185f6/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=833fc273a7e63edea4f44e18112facdafe9185f6", "patch": "@@ -171,14 +171,16 @@ impl<T: ?Sized> RwLock<T> {\n         RwLockReadGuard::new(&*self.inner, &self.data)\n     }\n \n-    /// Attempts to acquire this lock with shared read access.\n+    /// Attempts to acquire this rwlock with shared read access.\n+    ///\n+    /// If the access could not be granted at this time, then `Err` is returned.\n+    /// Otherwise, an RAII guard is returned which will release the shared access\n+    /// when it is dropped.\n+    ///\n+    /// This function does not block.\n     ///\n-    /// This function will never block and will return immediately if `read`\n-    /// would otherwise succeed. Returns `Some` of an RAII guard which will\n-    /// release the shared access of this thread when dropped, or `None` if the\n-    /// access could not be granted. This method does not provide any\n-    /// guarantees with respect to the ordering of whether contentious readers\n-    /// or writers will acquire the lock first.\n+    /// This function does not provide any guarantees with respect to the ordering\n+    /// of whether contentious readers or writers will acquire the lock first.\n     ///\n     /// # Failure\n     ///\n@@ -219,9 +221,14 @@ impl<T: ?Sized> RwLock<T> {\n \n     /// Attempts to lock this rwlock with exclusive write access.\n     ///\n-    /// This function does not ever block, and it will return `None` if a call\n-    /// to `write` would otherwise block. If successful, an RAII guard is\n-    /// returned.\n+    /// If the lock could not be acquired at this time, then `Err` is returned.\n+    /// Otherwise, an RAII guard is returned which will release the lock when\n+    /// it is dropped.\n+    ///\n+    /// This function does not block.\n+    ///\n+    /// This function does not provide any guarantees with respect to the ordering\n+    /// of whether contentious readers or writers will acquire the lock first.\n     ///\n     /// # Failure\n     ///"}]}