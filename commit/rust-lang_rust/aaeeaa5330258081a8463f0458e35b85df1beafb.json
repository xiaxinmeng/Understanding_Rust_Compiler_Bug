{"sha": "aaeeaa5330258081a8463f0458e35b85df1beafb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZWVhYTUzMzAyNTgwODFhODQ2M2YwNDU4ZTM1Yjg1ZGYxYmVhZmI=", "commit": {"author": {"name": "flip1995", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-09-14T10:38:09Z"}, "committer": {"name": "flip1995", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-09-15T09:01:16Z"}, "message": "Add internal lint compiler_lint_functions", "tree": {"sha": "7c0b79a045a36e2727f20497a3d5f05b0ce8ea44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c0b79a045a36e2727f20497a3d5f05b0ce8ea44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaeeaa5330258081a8463f0458e35b85df1beafb", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE8rLaPclMjvVJWRZHnxhOEWSDEYEFAlucylwACgkQnxhOEWSD\nEYHhag/9Ew46X5HXItjYEXIb5A2+xEDVgDv7+yzOTeRcBNRnN8Qs/O9bMXWfn3IT\nuizRtMVAWgAphU4h5b4gLXVevn/O3ibAWH3uQiPUE8IPdhF+BZBYYf55WCdY8hdu\n5apa9TOe9LJK6ih4JsoyyEKivT/IrIbSyrW/3feVVHk78PhnB5RgtC/CHOslLu9e\nlYzQPbF8WTBqyGo2RqAKwl7P7QeZFGuDOXMny6XAbbhdXouziAX63HVDpxvyx8me\n+CoAP4oRnLWmwgns4c4gnTlVjOJ0/yTFA/itTKAdJjSsQ1RN3Gdzfr7AVruJ2e0b\niB0GK6VJxhb3gTg0ZQ4ALzVmGKLFKdUqjwMxiu5X4Ry2wlp0NJRsRFtrRMV00775\nq+YXWnckMVand28jk/YaXmX2nuFG5YAZFCvAnKpgPZUpMl0wfIdv51t2s72K6SiW\nQYGwZxJVUtH1rZUBhJYxGWC21mGMHhjYVlhxiZaIhujqg1yLhuLonbfSRduL7M1n\nn6QEKz3T4iVT3FGo3+IMcHAv7ekIWZtBuWv2yhsZUt8AF6RUMAylGnV3yUbnSY6g\nOzlu2SCaJM0D/cP+p54g0WWqmp291h6nMhJNedNpiVBfoCe5M7XwyoGTyh3spz0k\ndHyU3Eh6aDdw2RKhGwqF3+3r9P4dVaNdMEHdPp9aZIbVBuCsvyA=\n=MkEN\n-----END PGP SIGNATURE-----", "payload": "tree 7c0b79a045a36e2727f20497a3d5f05b0ce8ea44\nparent f166b7d2f4fb184e757c52973054ec07a7b8be60\nauthor flip1995 <9744647+flip1995@users.noreply.github.com> 1536921489 +0200\ncommitter flip1995 <9744647+flip1995@users.noreply.github.com> 1537002076 +0200\n\nAdd internal lint compiler_lint_functions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaeeaa5330258081a8463f0458e35b85df1beafb", "html_url": "https://github.com/rust-lang/rust/commit/aaeeaa5330258081a8463f0458e35b85df1beafb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaeeaa5330258081a8463f0458e35b85df1beafb/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f166b7d2f4fb184e757c52973054ec07a7b8be60", "url": "https://api.github.com/repos/rust-lang/rust/commits/f166b7d2f4fb184e757c52973054ec07a7b8be60", "html_url": "https://github.com/rust-lang/rust/commit/f166b7d2f4fb184e757c52973054ec07a7b8be60"}], "stats": {"total": 90, "additions": 82, "deletions": 8}, "files": [{"sha": "ec00a13c0c67dcf7827b69d5337d3c7ce3dca511", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aaeeaa5330258081a8463f0458e35b85df1beafb/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaeeaa5330258081a8463f0458e35b85df1beafb/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=aaeeaa5330258081a8463f0458e35b85df1beafb", "patch": "@@ -293,8 +293,9 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_late_lint_pass(box serde_api::Serde);\n     reg.register_early_lint_pass(box utils::internal_lints::Clippy);\n-    reg.register_late_lint_pass(box utils::internal_lints::LintWithoutLintPass::default());\n+    reg.register_late_lint_pass(box utils::internal_lints::CompilerLintFunctions::new());\n     reg.register_early_lint_pass(box utils::internal_lints::DefaultHashTypes::default());\n+    reg.register_late_lint_pass(box utils::internal_lints::LintWithoutLintPass::default());\n     reg.register_late_lint_pass(box utils::inspector::Pass);\n     reg.register_late_lint_pass(box utils::author::Pass);\n     reg.register_late_lint_pass(box types::TypePass);\n@@ -494,8 +495,9 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::internal\", Some(\"clippy_internal\"), vec![\n         utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n-        utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n+        utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n         utils::internal_lints::DEFAULT_HASH_TYPES,\n+        utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n     ]);\n \n     reg.register_lint_group(\"clippy::all\", Some(\"clippy\"), vec!["}, {"sha": "8b3e75159b268fa0a1f724238ad1921608e9ffdd", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 76, "deletions": 6, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/aaeeaa5330258081a8463f0458e35b85df1beafb/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaeeaa5330258081a8463f0458e35b85df1beafb/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=aaeeaa5330258081a8463f0458e35b85df1beafb", "patch": "@@ -1,14 +1,16 @@\n-use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, EarlyContext, EarlyLintPass};\n-use crate::rustc::{declare_tool_lint, lint_array};\n-use crate::rustc::hir::*;\n+use crate::utils::{\n+    match_qpath, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n+};\n+use if_chain::if_chain;\n use crate::rustc::hir;\n use crate::rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n+use crate::rustc::hir::*;\n+use crate::rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintPass};\n+use crate::rustc::{declare_tool_lint, lint_array};\n use crate::rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use crate::utils::{match_qpath, paths, span_lint, span_lint_and_sugg};\n-use crate::syntax::symbol::LocalInternedString;\n use crate::syntax::ast::{Crate as AstCrate, Ident, ItemKind, Name};\n use crate::syntax::source_map::Span;\n-\n+use crate::syntax::symbol::LocalInternedString;\n \n /// **What it does:** Checks for various things we like to keep tidy in clippy.\n ///\n@@ -65,6 +67,29 @@ declare_clippy_lint! {\n     \"forbid HashMap and HashSet and suggest the FxHash* variants\"\n }\n \n+/// **What it does:** Checks for calls to `cx.span_lint*` and suggests to use the `utils::*`\n+/// variant of the function.\n+///\n+/// **Why is this bad?** The `utils::*` variants also add a link to the Clippy documentation to the\n+/// warning/error messages.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// Bad:\n+/// ```rust\n+/// cx.span_lint(LINT_NAME, \"message\");\n+/// ```\n+///\n+/// Good:\n+/// ```rust\n+/// utils::span_lint(cx, LINT_NAME, \"message\");\n+/// ```\n+declare_clippy_lint! {\n+    pub COMPILER_LINT_FUNCTIONS,\n+    internal,\n+    \"usage of the lint functions of the compiler instead of the utils::* variant\"\n+}\n \n #[derive(Copy, Clone)]\n pub struct Clippy;\n@@ -245,3 +270,48 @@ impl EarlyLintPass for DefaultHashTypes {\n         }\n     }\n }\n+\n+#[derive(Clone, Default)]\n+pub struct CompilerLintFunctions {\n+    map: FxHashMap<String, String>,\n+}\n+\n+impl CompilerLintFunctions {\n+    pub fn new() -> Self {\n+        let mut map = FxHashMap::default();\n+        map.insert(\"span_lint\".to_string(), \"utils::span_lint\".to_string());\n+        map.insert(\"struct_span_lint\".to_string(), \"utils::span_lint\".to_string());\n+        map.insert(\"lint\".to_string(), \"utils::span_lint\".to_string());\n+        map.insert(\"span_lint_note\".to_string(), \"utils::span_note_and_lint\".to_string());\n+        map.insert(\"span_lint_help\".to_string(), \"utils::span_help_and_lint\".to_string());\n+        Self { map }\n+    }\n+}\n+\n+impl LintPass for CompilerLintFunctions {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(COMPILER_LINT_FUNCTIONS)\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CompilerLintFunctions {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+        if_chain! {\n+            if let ExprKind::MethodCall(ref path, _, ref args) = expr.node;\n+            let fn_name = path.ident.as_str().to_string();\n+            if let Some(sugg) = self.map.get(&fn_name);\n+            let ty = walk_ptrs_ty(cx.tables.expr_ty(&args[0]));\n+            if match_type(cx, ty, &paths::EARLY_CONTEXT)\n+                || match_type(cx, ty, &paths::LATE_CONTEXT);\n+            then {\n+                span_help_and_lint(\n+                    cx,\n+                    COMPILER_LINT_FUNCTIONS,\n+                    path.ident.span,\n+                    \"usage of a compiler lint function\",\n+                    &format!(\"Please use the Clippy variant of this function: `{}`\", sugg),\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "85036108914514a0805cde5cf5f788bafdeefcf8", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aaeeaa5330258081a8463f0458e35b85df1beafb/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaeeaa5330258081a8463f0458e35b85df1beafb/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=aaeeaa5330258081a8463f0458e35b85df1beafb", "patch": "@@ -26,6 +26,7 @@ pub const DISPLAY_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Display\", \"fmt\"];\n pub const DOUBLE_ENDED_ITERATOR: [&str; 4] = [\"core\", \"iter\", \"traits\", \"DoubleEndedIterator\"];\n pub const DROP: [&str; 3] = [\"core\", \"mem\", \"drop\"];\n pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n+pub const EARLY_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"EarlyContext\"];\n pub const FMT_ARGUMENTS_NEWV1FORMATTED: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1_formatted\"];\n pub const FROM_FROM: [&str; 4] = [\"core\", \"convert\", \"From\", \"from\"];\n pub const FROM_TRAIT: [&str; 3] = [\"core\", \"convert\", \"From\"];\n@@ -41,6 +42,7 @@ pub const INTO_ITERATOR: [&str; 4] = [\"core\", \"iter\", \"traits\", \"IntoIterator\"];\n pub const IO_READ: [&str; 3] = [\"std\", \"io\", \"Read\"];\n pub const IO_WRITE: [&str; 3] = [\"std\", \"io\", \"Write\"];\n pub const ITERATOR: [&str; 4] = [\"core\", \"iter\", \"iterator\", \"Iterator\"];\n+pub const LATE_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"LateContext\"];\n pub const LINKED_LIST: [&str; 4] = [\"alloc\", \"collections\", \"linked_list\", \"LinkedList\"];\n pub const LINT: [&str; 3] = [\"rustc\", \"lint\", \"Lint\"];\n pub const LINT_ARRAY: [&str; 3] = [\"rustc\", \"lint\", \"LintArray\"];"}]}