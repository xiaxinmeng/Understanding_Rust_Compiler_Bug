{"sha": "3be13c404475ba740cc54da02b9631a10a282b7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZTEzYzQwNDQ3NWJhNzQwY2M1NGRhMDJiOTYzMWExMGEyODJiN2E=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-12T19:44:10Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-02T14:14:59Z"}, "message": "Adjust tests to new enum variant fields", "tree": {"sha": "ee32fe6ff8060692af8a3a113261e3df68add06b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee32fe6ff8060692af8a3a113261e3df68add06b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3be13c404475ba740cc54da02b9631a10a282b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3be13c404475ba740cc54da02b9631a10a282b7a", "html_url": "https://github.com/rust-lang/rust/commit/3be13c404475ba740cc54da02b9631a10a282b7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3be13c404475ba740cc54da02b9631a10a282b7a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d4f8683b8a9f92b591566371475051ecaeb084a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d4f8683b8a9f92b591566371475051ecaeb084a", "html_url": "https://github.com/rust-lang/rust/commit/7d4f8683b8a9f92b591566371475051ecaeb084a"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "6a668099e18561a0d5dc147927617485ae73d56b", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/3be13c404475ba740cc54da02b9631a10a282b7a/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3be13c404475ba740cc54da02b9631a10a282b7a/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=3be13c404475ba740cc54da02b9631a10a282b7a", "patch": "@@ -2900,50 +2900,55 @@ mod tests {\n         let mut v3 = Options::default();\n         let mut v4 = Options::default();\n \n+        const JSON: super::ErrorOutputType = super::ErrorOutputType::Json {\n+            pretty: false,\n+            colorful_rendered: false,\n+        };\n+\n         // Reference\n         v1.search_paths\n-            .push(SearchPath::from_cli_opt(\"native=abc\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"native=abc\", JSON));\n         v1.search_paths\n-            .push(SearchPath::from_cli_opt(\"crate=def\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"crate=def\", JSON));\n         v1.search_paths\n-            .push(SearchPath::from_cli_opt(\"dependency=ghi\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"dependency=ghi\", JSON));\n         v1.search_paths\n-            .push(SearchPath::from_cli_opt(\"framework=jkl\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"framework=jkl\", JSON));\n         v1.search_paths\n-            .push(SearchPath::from_cli_opt(\"all=mno\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"all=mno\", JSON));\n \n         v2.search_paths\n-            .push(SearchPath::from_cli_opt(\"native=abc\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"native=abc\", JSON));\n         v2.search_paths\n-            .push(SearchPath::from_cli_opt(\"dependency=ghi\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"dependency=ghi\", JSON));\n         v2.search_paths\n-            .push(SearchPath::from_cli_opt(\"crate=def\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"crate=def\", JSON));\n         v2.search_paths\n-            .push(SearchPath::from_cli_opt(\"framework=jkl\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"framework=jkl\", JSON));\n         v2.search_paths\n-            .push(SearchPath::from_cli_opt(\"all=mno\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"all=mno\", JSON));\n \n         v3.search_paths\n-            .push(SearchPath::from_cli_opt(\"crate=def\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"crate=def\", JSON));\n         v3.search_paths\n-            .push(SearchPath::from_cli_opt(\"framework=jkl\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"framework=jkl\", JSON));\n         v3.search_paths\n-            .push(SearchPath::from_cli_opt(\"native=abc\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"native=abc\", JSON));\n         v3.search_paths\n-            .push(SearchPath::from_cli_opt(\"dependency=ghi\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"dependency=ghi\", JSON));\n         v3.search_paths\n-            .push(SearchPath::from_cli_opt(\"all=mno\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"all=mno\", JSON));\n \n         v4.search_paths\n-            .push(SearchPath::from_cli_opt(\"all=mno\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"all=mno\", json));\n         v4.search_paths\n-            .push(SearchPath::from_cli_opt(\"native=abc\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"native=abc\", json));\n         v4.search_paths\n-            .push(SearchPath::from_cli_opt(\"crate=def\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"crate=def\", json));\n         v4.search_paths\n-            .push(SearchPath::from_cli_opt(\"dependency=ghi\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"dependency=ghi\", json));\n         v4.search_paths\n-            .push(SearchPath::from_cli_opt(\"framework=jkl\", super::ErrorOutputType::Json(false)));\n+            .push(SearchPath::from_cli_opt(\"framework=jkl\", json));\n \n         assert!(v1.dep_tracking_hash() == v2.dep_tracking_hash());\n         assert!(v1.dep_tracking_hash() == v3.dep_tracking_hash());"}]}