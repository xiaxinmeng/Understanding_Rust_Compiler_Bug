{"sha": "9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NzBlNWQ3ZDU2YjRlNjk3ZTZiYTk2ZThmMGNjMTBjNjRmMGJkZjA=", "commit": {"author": {"name": "Chris Peterson", "email": "cpeterson@mozilla.com", "date": "2012-08-13T01:24:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-13T21:03:14Z"}, "message": "core: Export f32::ge(), f64::ge(), and float::ge()", "tree": {"sha": "bc10ef56c6d71c490c4e1e2d476953be956d0ab9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc10ef56c6d71c490c4e1e2d476953be956d0ab9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "html_url": "https://github.com/rust-lang/rust/commit/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/comments", "author": {"login": "cpeterso", "id": 629193, "node_id": "MDQ6VXNlcjYyOTE5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/629193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpeterso", "html_url": "https://github.com/cpeterso", "followers_url": "https://api.github.com/users/cpeterso/followers", "following_url": "https://api.github.com/users/cpeterso/following{/other_user}", "gists_url": "https://api.github.com/users/cpeterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpeterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpeterso/subscriptions", "organizations_url": "https://api.github.com/users/cpeterso/orgs", "repos_url": "https://api.github.com/users/cpeterso/repos", "events_url": "https://api.github.com/users/cpeterso/events{/privacy}", "received_events_url": "https://api.github.com/users/cpeterso/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af1a66a53c48f94c69bfc7cc571dd043d7a37355", "url": "https://api.github.com/repos/rust-lang/rust/commits/af1a66a53c48f94c69bfc7cc571dd043d7a37355", "html_url": "https://github.com/rust-lang/rust/commit/af1a66a53c48f94c69bfc7cc571dd043d7a37355"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5faf5393e3974765be032f3152d8601a9081ab6b", "filename": "src/libcore/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/src%2Flibcore%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/src%2Flibcore%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff32.rs?ref=9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "patch": "@@ -5,7 +5,7 @@\n import cmath::c_float::*;\n import cmath::c_float_targ_consts::*;\n \n-export add, sub, mul, div, rem, lt, le, gt, eq, ne;\n+export add, sub, mul, div, rem, lt, le, eq, ne, ge, gt;\n export is_positive, is_negative, is_nonpositive, is_nonnegative;\n export is_zero, is_infinite, is_finite;\n export NaN, is_NaN, infinity, neg_infinity;"}, {"sha": "bb7768beba202190bac6c4d3c4b6ddcf1ffd2f54", "filename": "src/libcore/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/src%2Flibcore%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/src%2Flibcore%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff64.rs?ref=9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "patch": "@@ -8,7 +8,7 @@ import cmath::c_double_targ_consts::*;\n // Even though this module exports everything defined in it,\n // because it contains re-exports, we also have to explicitly\n // export locally defined things. That's a bit annoying.\n-export add, sub, mul, div, rem, lt, le, gt, eq, ne;\n+export add, sub, mul, div, rem, lt, le, eq, ne, ge, gt;\n export is_positive, is_negative, is_nonpositive, is_nonnegative;\n export is_zero, is_infinite, is_finite;\n export NaN, is_NaN, infinity, neg_infinity;"}, {"sha": "0542b5b6593c47212cd77e547ad40f3460d53a71", "filename": "src/libcore/float.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=9470e5d7d56b4e697e6ba96e8f0cc10c64f0bdf0", "patch": "@@ -4,7 +4,7 @@\n // because it contains re-exports, we also have to explicitly\n // export locally defined things. That's a bit annoying.\n export to_str_common, to_str_exact, to_str, from_str;\n-export add, sub, mul, div, rem, lt, le, gt, eq, ne;\n+export add, sub, mul, div, rem, lt, le, eq, ne, ge, gt;\n export is_positive, is_negative, is_nonpositive, is_nonnegative;\n export is_zero, is_infinite, is_finite;\n export NaN, is_NaN, infinity, neg_infinity;\n@@ -28,7 +28,7 @@ export j0, j1, jn, y0, y1, yn;\n \n import m_float = f64;\n \n-import f64::{add, sub, mul, div, rem, lt, le, gt, eq, ne};\n+import f64::{add, sub, mul, div, rem, lt, le, eq, ne, ge, gt};\n import f64::logarithm;\n import f64::{acos, asin, atan2, cbrt, ceil, copysign, cosh, floor};\n import f64::{erf, erfc, exp, expm1, exp2, abs_sub};"}]}