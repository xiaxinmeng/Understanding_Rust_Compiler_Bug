{"sha": "43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYjdjYWQzZTU0OGIxNzk0ZDNlYTVkZGNmYmZhOTNjMDljYmUzNDY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-10T19:18:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-10T19:18:33Z"}, "message": "Rollup merge of #87582 - tmiasko:symbol-printer, r=michaelwoerister\n\nImplement `Printer` for `&mut SymbolPrinter`\n\nto avoid passing `SymbolPrinter` by value.", "tree": {"sha": "6d69a42a5e6aeba1a83093918144c93be0b2acda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d69a42a5e6aeba1a83093918144c93be0b2acda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhEtEKCRBK7hj4Ov3rIwAAKC8IAJN2kbliFFOQClaiCKFkH7eZ\nxjjaQUxFzBSxWk62yf2cTYyDBCp857Z5CIkBtJ8ihn/cycUZyrT143kzDhxuDFLm\nWQznqhlHpFRLlAKqHRnZuSsxc++iU6apZYhRzRms69tenY41HNLVj4jo/eY8wjZA\npgGe+RYPcyBuK9uYB8N5tKN2hsQcxLh1lQGtk4nivWGdyFPhopenKSbAEAjjsTo3\nN4ozj+YqwXZlm5dxsKJvG2FWgwe+u2NwxV0wP1NmoC63pyLPib2dbEUbZswHQLii\ner/ZK346OPv1fyD3nGcIavBYWs06CiiN2hkE+F1AKmqMc20vW4fduDbUaZWv+Kw=\n=YPZy\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d69a42a5e6aeba1a83093918144c93be0b2acda\nparent 3b41447a022be4b3612719c4e55d82da944a3d36\nparent 38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1\nauthor Yuki Okushi <jtitor@2k36.org> 1628623113 +0900\ncommitter GitHub <noreply@github.com> 1628623113 +0900\n\nRollup merge of #87582 - tmiasko:symbol-printer, r=michaelwoerister\n\nImplement `Printer` for `&mut SymbolPrinter`\n\nto avoid passing `SymbolPrinter` by value.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "html_url": "https://github.com/rust-lang/rust/commit/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b41447a022be4b3612719c4e55d82da944a3d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b41447a022be4b3612719c4e55d82da944a3d36", "html_url": "https://github.com/rust-lang/rust/commit/3b41447a022be4b3612719c4e55d82da944a3d36"}, {"sha": "38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1", "html_url": "https://github.com/rust-lang/rust/commit/38c07c7ca5f5a1bc65767b7dd8091b9992fc72a1"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "1b4e6b4e38177bf658afb1a8907098323df6ae05", "filename": "compiler/rustc_symbol_mangling/src/legacy.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs?ref=43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "patch": "@@ -55,7 +55,8 @@ pub(super) fn mangle(\n \n     let hash = get_symbol_hash(tcx, instance, instance_ty, instantiating_crate);\n \n-    let mut printer = SymbolPrinter { tcx, path: SymbolPath::new(), keep_within_component: false }\n+    let mut printer = SymbolPrinter { tcx, path: SymbolPath::new(), keep_within_component: false };\n+    printer\n         .print_def_path(\n             def_id,\n             if let ty::InstanceDef::DropGlue(_, _) = instance.def {\n@@ -198,7 +199,7 @@ struct SymbolPrinter<'tcx> {\n // `PrettyPrinter` aka pretty printing of e.g. types in paths,\n // symbol names should have their own printing machinery.\n \n-impl Printer<'tcx> for SymbolPrinter<'tcx> {\n+impl Printer<'tcx> for &mut SymbolPrinter<'tcx> {\n     type Error = fmt::Error;\n \n     type Path = Self;\n@@ -242,7 +243,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n         Ok(self)\n     }\n \n-    fn print_const(mut self, ct: &'tcx ty::Const<'tcx>) -> Result<Self::Const, Self::Error> {\n+    fn print_const(self, ct: &'tcx ty::Const<'tcx>) -> Result<Self::Const, Self::Error> {\n         // only print integers\n         if let ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int { .. })) = ct.val {\n             if ct.ty.is_integral() {\n@@ -253,7 +254,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n         Ok(self)\n     }\n \n-    fn path_crate(mut self, cnum: CrateNum) -> Result<Self::Path, Self::Error> {\n+    fn path_crate(self, cnum: CrateNum) -> Result<Self::Path, Self::Error> {\n         self.write_str(&self.tcx.crate_name(cnum).as_str())?;\n         Ok(self)\n     }\n@@ -344,7 +345,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n     }\n }\n \n-impl PrettyPrinter<'tcx> for SymbolPrinter<'tcx> {\n+impl PrettyPrinter<'tcx> for &mut SymbolPrinter<'tcx> {\n     fn region_should_not_be_omitted(&self, _region: ty::Region<'_>) -> bool {\n         false\n     }"}]}