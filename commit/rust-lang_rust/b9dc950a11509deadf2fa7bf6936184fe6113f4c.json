{"sha": "b9dc950a11509deadf2fa7bf6936184fe6113f4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZGM5NTBhMTE1MDlkZWFkZjJmYTdiZjY5MzYxODRmZTYxMTNmNGM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-27T09:01:36Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-27T09:01:36Z"}, "message": "Rustup to rustc 1.39.0-nightly (9b91b9c10 2019-08-26)", "tree": {"sha": "d287ba891856c723f90b64cd8bc09afb888ef76e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d287ba891856c723f90b64cd8bc09afb888ef76e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9dc950a11509deadf2fa7bf6936184fe6113f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9dc950a11509deadf2fa7bf6936184fe6113f4c", "html_url": "https://github.com/rust-lang/rust/commit/b9dc950a11509deadf2fa7bf6936184fe6113f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9dc950a11509deadf2fa7bf6936184fe6113f4c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e704eb52592be19d4a6417b646d97904cb73468e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e704eb52592be19d4a6417b646d97904cb73468e", "html_url": "https://github.com/rust-lang/rust/commit/e704eb52592be19d4a6417b646d97904cb73468e"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "3f0892a315ec4ef3a9c5073f3702bcb714de333b", "filename": "src/base.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b9dc950a11509deadf2fa7bf6936184fe6113f4c/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9dc950a11509deadf2fa7bf6936184fe6113f4c/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=b9dc950a11509deadf2fa7bf6936184fe6113f4c", "patch": "@@ -558,11 +558,12 @@ pub fn trans_place<'tcx>(\n     let base = match &place.base {\n         PlaceBase::Local(local) => fx.get_local_place(*local),\n         PlaceBase::Static(static_) => match static_.kind {\n-            StaticKind::Static(def_id) => {\n-                crate::constant::codegen_static_ref(fx, def_id, static_.ty)\n+            StaticKind::Static => {\n+                crate::constant::codegen_static_ref(fx, static_.def_id, static_.ty)\n             }\n-            StaticKind::Promoted(promoted) => {\n-                crate::constant::trans_promoted(fx, promoted, static_.ty)\n+            StaticKind::Promoted(promoted, substs) => {\n+                let instance = Instance::new(static_.def_id, fx.monomorphize(&substs));\n+                crate::constant::trans_promoted(fx, instance, promoted, static_.ty)\n             }\n         }\n     };"}, {"sha": "daec7434465708065661c5df6a87c5373ea8f702", "filename": "src/constant.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b9dc950a11509deadf2fa7bf6936184fe6113f4c/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9dc950a11509deadf2fa7bf6936184fe6113f4c/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=b9dc950a11509deadf2fa7bf6936184fe6113f4c", "patch": "@@ -54,13 +54,14 @@ pub fn codegen_static_ref<'tcx>(\n \n pub fn trans_promoted<'tcx>(\n     fx: &mut FunctionCx<'_, 'tcx, impl Backend>,\n+    instance: Instance<'tcx>,\n     promoted: Promoted,\n     dest_ty: Ty<'tcx>,\n ) -> CPlace<'tcx> {\n     match fx\n         .tcx\n         .const_eval(ParamEnv::reveal_all().and(GlobalId {\n-            instance: fx.instance,\n+            instance,\n             promoted: Some(promoted),\n         }))\n     {\n@@ -461,10 +462,11 @@ pub fn mir_operand_get_const_val<'tcx>(\n     };\n \n     Some(match &static_.kind {\n-        StaticKind::Static(_) => unimplemented!(),\n-        StaticKind::Promoted(promoted) => {\n+        StaticKind::Static => unimplemented!(),\n+        StaticKind::Promoted(promoted, substs) => {\n+            let instance = Instance::new(static_.def_id, fx.monomorphize(substs));\n             fx.tcx.const_eval(ParamEnv::reveal_all().and(GlobalId {\n-                instance: fx.instance,\n+                instance,\n                 promoted: Some(*promoted),\n             })).unwrap()\n         }"}]}