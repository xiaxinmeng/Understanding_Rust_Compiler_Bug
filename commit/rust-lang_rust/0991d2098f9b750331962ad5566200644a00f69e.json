{"sha": "0991d2098f9b750331962ad5566200644a00f69e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OTFkMjA5OGY5Yjc1MDMzMTk2MmFkNTU2NjIwMDY0NGEwMGY2OWU=", "commit": {"author": {"name": "Levente Kurusa", "email": "lkurusa@acm.org", "date": "2018-09-26T14:23:10Z"}, "committer": {"name": "Levente Kurusa", "email": "lkurusa@acm.org", "date": "2018-09-26T14:23:10Z"}, "message": "fixup! codegen_llvm: check inline assembly constraints with LLVM", "tree": {"sha": "95fcefcc93f07cda2e32b1078b9e69ef108ddc4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95fcefcc93f07cda2e32b1078b9e69ef108ddc4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0991d2098f9b750331962ad5566200644a00f69e", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE9aWNXk3bBSVLHV6MKNaxXmtJEmkFAlurlk4ACgkQKNaxXmtJ\nEmnA2Qf/ZzCJgj7NO7rpCqAzS3moAyxEZXV9uG5EBduIT9w0b09i0s80A01YD5PG\nc/YWnXhT4TL/UjbYz4MYzpVkE/QO+sqrYuB7DLSTUcbGpwrAlV/tomnIwfRkLEeG\nCKSfQdeSjbkh5FW4ydKPyiZfSM25BC/1R2Jc3Wl2LIuYZdawGYp42SEgp29Xh3tr\nn9fCFReYI/FlOoMfSc8CB4vAjvELT+UP7X56O/L8XEOFL+4eTIT9wKdatmSmiRR6\nGlkHCZ0wRr3AHgBymh6zoZr+lPthUITj6q7r6BlK6JLTtAU3V+5dTF1FCgnpHafa\nN6XF4DGy1utIT9O6rB0ze1K6PJCtuw==\n=v2hb\n-----END PGP SIGNATURE-----", "payload": "tree 95fcefcc93f07cda2e32b1078b9e69ef108ddc4c\nparent ecd51ed90b1a913d7d47138b51dad64946737958\nauthor Levente Kurusa <lkurusa@acm.org> 1537971790 +0200\ncommitter Levente Kurusa <lkurusa@acm.org> 1537971790 +0200\n\nfixup! codegen_llvm: check inline assembly constraints with LLVM\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0991d2098f9b750331962ad5566200644a00f69e", "html_url": "https://github.com/rust-lang/rust/commit/0991d2098f9b750331962ad5566200644a00f69e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0991d2098f9b750331962ad5566200644a00f69e/comments", "author": {"login": "levex", "id": 849140, "node_id": "MDQ6VXNlcjg0OTE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/849140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levex", "html_url": "https://github.com/levex", "followers_url": "https://api.github.com/users/levex/followers", "following_url": "https://api.github.com/users/levex/following{/other_user}", "gists_url": "https://api.github.com/users/levex/gists{/gist_id}", "starred_url": "https://api.github.com/users/levex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levex/subscriptions", "organizations_url": "https://api.github.com/users/levex/orgs", "repos_url": "https://api.github.com/users/levex/repos", "events_url": "https://api.github.com/users/levex/events{/privacy}", "received_events_url": "https://api.github.com/users/levex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "levex", "id": 849140, "node_id": "MDQ6VXNlcjg0OTE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/849140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levex", "html_url": "https://github.com/levex", "followers_url": "https://api.github.com/users/levex/followers", "following_url": "https://api.github.com/users/levex/following{/other_user}", "gists_url": "https://api.github.com/users/levex/gists{/gist_id}", "starred_url": "https://api.github.com/users/levex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levex/subscriptions", "organizations_url": "https://api.github.com/users/levex/orgs", "repos_url": "https://api.github.com/users/levex/repos", "events_url": "https://api.github.com/users/levex/events{/privacy}", "received_events_url": "https://api.github.com/users/levex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd51ed90b1a913d7d47138b51dad64946737958", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd51ed90b1a913d7d47138b51dad64946737958", "html_url": "https://github.com/rust-lang/rust/commit/ecd51ed90b1a913d7d47138b51dad64946737958"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "654f230741e96f6e9b5cef5e55fe92cec7da9b56", "filename": "src/test/ui/inline-asm-bad-constraint.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/0991d2098f9b750331962ad5566200644a00f69e/src%2Ftest%2Fui%2Finline-asm-bad-constraint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0991d2098f9b750331962ad5566200644a00f69e/src%2Ftest%2Fui%2Finline-asm-bad-constraint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-asm-bad-constraint.rs?ref=0991d2098f9b750331962ad5566200644a00f69e", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that the compiler will catch invalid inline assembly constraints.\n+\n+#![feature(asm)]\n+\n+extern \"C\" {\n+    fn foo(a: usize);\n+}\n+\n+fn main() {\n+    bad_register_constraint();\n+    bad_input();\n+    wrong_size_output();\n+}\n+\n+// Issue #54130\n+fn bad_register_constraint() {\n+    let rax: u64;\n+    unsafe {\n+        asm!(\"\" :\"={rax\"(rax)) //~ ERROR E0668\n+    };\n+    println!(\"Accumulator is: {}\", rax);\n+}\n+\n+// Issue #54376\n+fn bad_input() {\n+    unsafe {\n+        asm!(\"callq $0\" : : \"0\"(foo)) //~ ERROR E0668\n+    };\n+}\n+\n+fn wrong_size_output() {\n+    let rax: u64 = 0;\n+    unsafe {\n+        asm!(\"addb $1, $0\" : \"={rax}\"((0i32, rax))); //~ ERROR E0668\n+    }\n+    println!(\"rax: {}\", rax);\n+}"}, {"sha": "ce1f274749f1f70b67e5c70bfe67cdca050b9aa2", "filename": "src/test/ui/inline-asm-bad-constraint.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0991d2098f9b750331962ad5566200644a00f69e/src%2Ftest%2Fui%2Finline-asm-bad-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0991d2098f9b750331962ad5566200644a00f69e/src%2Ftest%2Fui%2Finline-asm-bad-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-asm-bad-constraint.stderr?ref=0991d2098f9b750331962ad5566200644a00f69e", "patch": "@@ -0,0 +1,21 @@\n+error[E0668]: malformed inline assembly\n+  --> $DIR/inline-asm-bad-constraint.rs:29:9\n+   |\n+LL |         asm!(\"\" :\"={rax\"(rax)) //~ ERROR E0668\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0668]: malformed inline assembly\n+  --> $DIR/inline-asm-bad-constraint.rs:37:9\n+   |\n+LL |         asm!(\"callq $0\" : : \"0\"(foo)) //~ ERROR E0668\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0668]: malformed inline assembly\n+  --> $DIR/inline-asm-bad-constraint.rs:44:9\n+   |\n+LL |         asm!(\"addb $1, $0\" : \"={rax}\"((0i32, rax))); //~ ERROR E0668\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0668`."}]}