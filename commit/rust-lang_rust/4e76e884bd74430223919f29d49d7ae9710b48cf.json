{"sha": "4e76e884bd74430223919f29d49d7ae9710b48cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNzZlODg0YmQ3NDQzMDIyMzkxOWYyOWQ0OWQ3YWU5NzEwYjQ4Y2Y=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-10-23T03:43:07Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-10-24T02:36:30Z"}, "message": "correct hover for items with doc attribute with raw strings", "tree": {"sha": "1f96284c93950f539f6e64b65d7e5991399f1a10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f96284c93950f539f6e64b65d7e5991399f1a10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e76e884bd74430223919f29d49d7ae9710b48cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e76e884bd74430223919f29d49d7ae9710b48cf", "html_url": "https://github.com/rust-lang/rust/commit/4e76e884bd74430223919f29d49d7ae9710b48cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e76e884bd74430223919f29d49d7ae9710b48cf/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3c851dd37f39f79e7e8807378f45fdde7f6411", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3c851dd37f39f79e7e8807378f45fdde7f6411", "html_url": "https://github.com/rust-lang/rust/commit/8b3c851dd37f39f79e7e8807378f45fdde7f6411"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "508e8af2063d38f459f58c4f341911992d317bb6", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4e76e884bd74430223919f29d49d7ae9710b48cf/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e76e884bd74430223919f29d49d7ae9710b48cf/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=4e76e884bd74430223919f29d49d7ae9710b48cf", "patch": "@@ -637,6 +637,33 @@ fn main() { }\n         );\n     }\n \n+    #[test]\n+    fn hover_shows_fn_doc_attr_raw_string() {\n+        check(\n+            r##\"\n+#[doc = r#\"Raw string doc attr\"#]\n+pub fn foo<|>(_: &Path) {}\n+\n+fn main() { }\n+\"##,\n+            expect![[r##\"\n+                *foo*\n+\n+                ```rust\n+                test\n+                ```\n+\n+                ```rust\n+                pub fn foo(_: &Path)\n+                ```\n+\n+                ---\n+\n+                Raw string doc attr\n+            \"##]],\n+        );\n+    }\n+\n     #[test]\n     fn hover_shows_struct_field_info() {\n         // Hovering over the field when instantiating"}, {"sha": "c5cd1c504da1eb87f02f68b83351fa68d837b0cd", "filename": "crates/syntax/src/ast/node_ext.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4e76e884bd74430223919f29d49d7ae9710b48cf/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e76e884bd74430223919f29d49d7ae9710b48cf/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=4e76e884bd74430223919f29d49d7ae9710b48cf", "patch": "@@ -7,7 +7,7 @@ use itertools::Itertools;\n use parser::SyntaxKind;\n \n use crate::{\n-    ast::{self, support, AstNode, NameOwner, SyntaxNode},\n+    ast::{self, support, token_ext::HasStringValue, AstNode, AstToken, NameOwner, SyntaxNode},\n     SmolStr, SyntaxElement, SyntaxToken, T,\n };\n \n@@ -53,8 +53,16 @@ impl ast::Attr {\n     pub fn as_simple_key_value(&self) -> Option<(SmolStr, SmolStr)> {\n         let lit = self.literal()?;\n         let key = self.simple_name()?;\n-        // FIXME: escape? raw string?\n-        let value = lit.syntax().first_token()?.text().trim_matches('\"').into();\n+        let value_token = lit.syntax().first_token()?;\n+\n+        let value: SmolStr = if let Some(s) = ast::String::cast(value_token.clone()) {\n+            s.value()?.into()\n+        } else if let Some(s) = ast::RawString::cast(value_token) {\n+            s.value()?.into()\n+        } else {\n+            return None;\n+        };\n+\n         Some((key, value))\n     }\n "}]}