{"sha": "d93b03793d4b6bcbc5cd5c0715df31bfcff15845", "node_id": "C_kwDOAAsO6NoAKGQ5M2IwMzc5M2Q0YjZiY2JjNWNkNWMwNzE1ZGYzMWJmY2ZmMTU4NDU", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-07T01:56:46Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-07T02:32:27Z"}, "message": "Remove wfness requirement from anon consts used by asm", "tree": {"sha": "cd725c62aff3d647e8f5bcd20d6ef5782c729469", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd725c62aff3d647e8f5bcd20d6ef5782c729469"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d93b03793d4b6bcbc5cd5c0715df31bfcff15845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d93b03793d4b6bcbc5cd5c0715df31bfcff15845", "html_url": "https://github.com/rust-lang/rust/commit/d93b03793d4b6bcbc5cd5c0715df31bfcff15845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d93b03793d4b6bcbc5cd5c0715df31bfcff15845/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf5748f43f3796732248fc90a404b6fe6cb05ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf5748f43f3796732248fc90a404b6fe6cb05ce3", "html_url": "https://github.com/rust-lang/rust/commit/cf5748f43f3796732248fc90a404b6fe6cb05ce3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "416ca2b23608714204d22a2363cfa451327d85de", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d93b03793d4b6bcbc5cd5c0715df31bfcff15845/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d93b03793d4b6bcbc5cd5c0715df31bfcff15845/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=d93b03793d4b6bcbc5cd5c0715df31bfcff15845", "patch": "@@ -2591,10 +2591,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         self.check_expr_asm_operand(out_expr, false);\n                     }\n                 }\n-                hir::InlineAsmOperand::Const { anon_const }\n-                | hir::InlineAsmOperand::SymFn { anon_const } => {\n-                    self.to_const(anon_const);\n-                }\n+                // `AnonConst`s have their own body and is type-checked separately.\n+                // As they don't flow into the type system we don't need them to\n+                // be well-formed.\n+                hir::InlineAsmOperand::Const { .. } | hir::InlineAsmOperand::SymFn { .. } => {}\n                 hir::InlineAsmOperand::SymStatic { .. } => {}\n             }\n         }"}]}