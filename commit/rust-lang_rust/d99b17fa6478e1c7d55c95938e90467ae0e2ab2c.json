{"sha": "d99b17fa6478e1c7d55c95938e90467ae0e2ab2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OWIxN2ZhNjQ3OGUxYzdkNTVjOTU5MzhlOTA0NjdhZTBlMmFiMmM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-08T03:24:42Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:29Z"}, "message": "Remove the `map` field from `Map`", "tree": {"sha": "3d4c0261cf18962ef082051d9c7184d6483f5afd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d4c0261cf18962ef082051d9c7184d6483f5afd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c", "html_url": "https://github.com/rust-lang/rust/commit/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "072449c0dc9bd435f002fa7fb531d6819033229e", "url": "https://api.github.com/repos/rust-lang/rust/commits/072449c0dc9bd435f002fa7fb531d6819033229e", "html_url": "https://github.com/rust-lang/rust/commit/072449c0dc9bd435f002fa7fb531d6819033229e"}], "stats": {"total": 27, "additions": 0, "deletions": 27}, "files": [{"sha": "7604aeb8766261341b704e70b8e77885f30ecc23", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=d99b17fa6478e1c7d55c95938e90467ae0e2ab2c", "patch": "@@ -172,8 +172,6 @@ pub struct Map<'hir> {\n     pub(super) owner_map: FxHashMap<DefIndex, &'hir HirOwner<'hir>>,\n     pub(super) owner_items_map: FxHashMap<DefIndex, &'hir HirOwnerItems<'hir>>,\n \n-    pub(super) map: HirEntryMap<'hir>,\n-\n     pub(super) definitions: &'hir Definitions,\n \n     /// The reverse mapping of `node_to_hir_id`.\n@@ -220,27 +218,6 @@ impl<'hir> Map<'hir> {\n         &self.krate\n     }\n \n-    #[inline]\n-    fn lookup(&self, id: HirId) -> Option<&Entry<'hir>> {\n-        let local_map = self.map.get(id.owner)?;\n-        local_map.get(id.local_id)?.as_ref()\n-    }\n-\n-    /// Registers a read in the dependency graph of the AST node with\n-    /// the given `id`. This needs to be called each time a public\n-    /// function returns the HIR for a node -- in other words, when it\n-    /// \"reveals\" the content of a node to the caller (who might not\n-    /// otherwise have had access to those contents, and hence needs a\n-    /// read recorded). If the function just returns a DefId or\n-    /// HirId, no actual content was returned, so no read is needed.\n-    pub fn read(&self, hir_id: HirId) {\n-        if let Some(entry) = self.lookup(hir_id) {\n-            self.dep_graph.read_index(entry.dep_node);\n-        } else {\n-            bug!(\"called `HirMap::read()` with invalid `HirId`: {:?}\", hir_id)\n-        }\n-    }\n-\n     #[inline]\n     pub fn definitions(&self) -> &Definitions {\n         &self.definitions\n@@ -943,7 +920,6 @@ impl<'hir> Map<'hir> {\n     /// Given a node ID, gets a list of attributes associated with the AST\n     /// corresponding to the node-ID.\n     pub fn attrs(&self, id: HirId) -> &'hir [ast::Attribute] {\n-        self.read(id); // reveals attributes on the node\n         let attrs = match self.find_entry(id).map(|entry| entry.node) {\n             Some(Node::Param(a)) => Some(&a.attrs[..]),\n             Some(Node::Local(l)) => Some(&l.attrs[..]),\n@@ -967,7 +943,6 @@ impl<'hir> Map<'hir> {\n     }\n \n     pub fn span(&self, hir_id: HirId) -> Span {\n-        self.read(hir_id); // reveals span from node\n         match self.find_entry(hir_id).map(|entry| entry.node) {\n             Some(Node::Param(param)) => param.span,\n             Some(Node::Item(item)) => item.span,"}, {"sha": "34cfff999a71cefb9eb441537a40c06310d0a622", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99b17fa6478e1c7d55c95938e90467ae0e2ab2c/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=d99b17fa6478e1c7d55c95938e90467ae0e2ab2c", "patch": "@@ -107,8 +107,6 @@ pub fn provide(providers: &mut Providers<'_>) {\n             owner_map: early.owner_map,\n             owner_items_map: early.owner_items_map,\n \n-            map: early.map,\n-\n             definitions: early.definitions,\n \n             hir_to_node_id: early.hir_to_node_id,"}]}