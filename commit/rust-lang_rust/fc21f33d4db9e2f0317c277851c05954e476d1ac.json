{"sha": "fc21f33d4db9e2f0317c277851c05954e476d1ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMjFmMzNkNGRiOWUyZjAzMTdjMjc3ODUxYzA1OTU0ZTQ3NmQxYWM=", "commit": {"author": {"name": "OptimisticPeach", "email": "patrikbuhring@yahoo.com", "date": "2019-05-30T23:37:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-30T23:37:23Z"}, "message": "Fixed some typos.", "tree": {"sha": "c60c1cc8a5ad421818007d440aea958813d3f7a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c60c1cc8a5ad421818007d440aea958813d3f7a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc21f33d4db9e2f0317c277851c05954e476d1ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc8GkzCRBK7hj4Ov3rIwAAdHIIAF/P4fe0dQBFifrSYFkQ46Aa\nt5SYXZOE0AaeAbnOQUJUxkX3H+oILxLubU+pZ48P0VgM/3eCCwERuIL1qKW/J6qt\nWUkDlBlkRGUocC0L0S3FGjzVEjrtoYtx8oxV2GQeV0K0x2XL3OXDvnG6Vq9Z8ifY\n+XPaJTgskdWFm+H0hUC0PXVAVVrncAmlAFqN8ZsuJ3kos6hkocVWeIZzzDgXpzIl\nxXRy7UfbTmfhztgLHC1UL9NJsLW4k/b5fUW/iOu+7qgRgPHvhIsEOL2l8ycLzYiG\nGPWRLb7FZ85/oJprVsxaJrmhvRcuia6R2aCnRtwUPYAxvZcWwqVgv08b3h+Docs=\n=kH5m\n-----END PGP SIGNATURE-----\n", "payload": "tree c60c1cc8a5ad421818007d440aea958813d3f7a4\nparent 3ade426ede7bca4a74bc641a12f2e7fe2cc20c47\nauthor OptimisticPeach <patrikbuhring@yahoo.com> 1559259443 -0400\ncommitter GitHub <noreply@github.com> 1559259443 -0400\n\nFixed some typos."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc21f33d4db9e2f0317c277851c05954e476d1ac", "html_url": "https://github.com/rust-lang/rust/commit/fc21f33d4db9e2f0317c277851c05954e476d1ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc21f33d4db9e2f0317c277851c05954e476d1ac/comments", "author": {"login": "OptimisticPeach", "id": 24464956, "node_id": "MDQ6VXNlcjI0NDY0OTU2", "avatar_url": "https://avatars.githubusercontent.com/u/24464956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OptimisticPeach", "html_url": "https://github.com/OptimisticPeach", "followers_url": "https://api.github.com/users/OptimisticPeach/followers", "following_url": "https://api.github.com/users/OptimisticPeach/following{/other_user}", "gists_url": "https://api.github.com/users/OptimisticPeach/gists{/gist_id}", "starred_url": "https://api.github.com/users/OptimisticPeach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OptimisticPeach/subscriptions", "organizations_url": "https://api.github.com/users/OptimisticPeach/orgs", "repos_url": "https://api.github.com/users/OptimisticPeach/repos", "events_url": "https://api.github.com/users/OptimisticPeach/events{/privacy}", "received_events_url": "https://api.github.com/users/OptimisticPeach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "html_url": "https://github.com/rust-lang/rust/commit/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a2796ad0cf0b0e898adac7b06a1952d7ef617172", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc21f33d4db9e2f0317c277851c05954e476d1ac/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc21f33d4db9e2f0317c277851c05954e476d1ac/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=fc21f33d4db9e2f0317c277851c05954e476d1ac", "patch": "@@ -177,8 +177,8 @@ pub trait AsRef<T: ?Sized> {\n ///\n /// Using `AsMut` as trait bound for a generic function we can accept all mutable references\n /// that can be converted to type `&mut T`. Because [`Box<T>`] implements `AsMut<T>` we can\n-/// write a function `add_one`that takes all arguments that can be converted to `&mut u64`.\n-/// Because [`Box<T>`] implements `AsMut<T>` `add_one` accepts arguments of type\n+/// write a function `add_one` that takes all arguments that can be converted to `&mut u64`.\n+/// Because [`Box<T>`] implements `AsMut<T>`, `add_one` accepts arguments of type\n /// `&mut Box<u64>` as well:\n ///\n /// ```"}]}