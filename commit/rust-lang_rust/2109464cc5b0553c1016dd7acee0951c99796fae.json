{"sha": "2109464cc5b0553c1016dd7acee0951c99796fae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDk0NjRjYzViMDU1M2MxMDE2ZGQ3YWNlZTA5NTFjOTk3OTZmYWU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-31T23:53:24Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-04-19T09:53:53Z"}, "message": "Make some option descriptions fit the usual pattern.\n\n- No trailing '.' chars.\n- Use a lower-case letter at the start.", "tree": {"sha": "2b4ae85fb2583b48c9a263cbb7c3ab5c7b595f9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b4ae85fb2583b48c9a263cbb7c3ab5c7b595f9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2109464cc5b0553c1016dd7acee0951c99796fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2109464cc5b0553c1016dd7acee0951c99796fae", "html_url": "https://github.com/rust-lang/rust/commit/2109464cc5b0553c1016dd7acee0951c99796fae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2109464cc5b0553c1016dd7acee0951c99796fae/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0e52b1e82472e4890202082a0482b178f9d6a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0e52b1e82472e4890202082a0482b178f9d6a16", "html_url": "https://github.com/rust-lang/rust/commit/a0e52b1e82472e4890202082a0482b178f9d6a16"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b759887cf5c0439e809d69c49dc51b60c141a5c8", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2109464cc5b0553c1016dd7acee0951c99796fae/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109464cc5b0553c1016dd7acee0951c99796fae/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=2109464cc5b0553c1016dd7acee0951c99796fae", "patch": "@@ -721,7 +721,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n                                            \"linker flavor\"),\n     linker_plugin_lto: LinkerPluginLto = (LinkerPluginLto::Disabled,\n         parse_linker_plugin_lto, [TRACKED],\n-        \"generate build artifacts that are compatible with linker-based LTO.\"),\n+        \"generate build artifacts that are compatible with linker-based LTO\"),\n     profile_generate: SwitchWithOptPath = (SwitchWithOptPath::Disabled,\n         parse_switch_with_opt_path, [TRACKED],\n         \"compile the program with profiling instrumentation\"),\n@@ -875,9 +875,9 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     sanitizer: Option<Sanitizer> = (None, parse_sanitizer, [TRACKED],\n                                     \"use a sanitizer\"),\n     sanitizer_recover: Vec<Sanitizer> = (vec![], parse_sanitizer_list, [TRACKED],\n-        \"Enable recovery for selected sanitizers\"),\n+        \"enable recovery for selected sanitizers\"),\n     sanitizer_memory_track_origins: usize = (0, parse_sanitizer_memory_track_origins, [TRACKED],\n-        \"Enable origins tracking in MemorySanitizer\"),\n+        \"enable origins tracking in MemorySanitizer\"),\n     fuel: Option<(String, u64)> = (None, parse_optimization_fuel, [TRACKED],\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n@@ -897,7 +897,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],\n                        \"dump facts from NLL analysis into side files\"),\n     dont_buffer_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n-        \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting).\"),\n+        \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting)\"),\n     polonius: bool = (false, parse_bool, [UNTRACKED],\n         \"enable polonius-based borrow-checker\"),\n     thinlto: Option<bool> = (None, parse_opt_bool, [TRACKED],\n@@ -931,7 +931,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     embed_bitcode: bool = (false, parse_bool, [TRACKED],\n         \"embed LLVM bitcode in object files\"),\n     strip_debuginfo_if_disabled: Option<bool> = (None, parse_opt_bool, [TRACKED],\n-        \"tell the linker to strip debuginfo when building without debuginfo enabled.\"),\n+        \"tell the linker to strip debuginfo when building without debuginfo enabled\"),\n     share_generics: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"make the current crate share its generic instantiations\"),\n     no_parallel_llvm: bool = (false, parse_bool, [UNTRACKED],\n@@ -981,7 +981,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     new_llvm_pass_manager: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"use new LLVM pass manager\"),\n     link_native_libraries: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n-        \"Link native libraries in the linker invocation.\"),\n+        \"link native libraries in the linker invocation\"),\n     src_hash_algorithm: Option<SourceFileHashAlgorithm> = (None, parse_src_file_hash, [TRACKED],\n         \"hash algorithm of source files in debug info (`md5`, or `sha1`)\"),\n }"}]}