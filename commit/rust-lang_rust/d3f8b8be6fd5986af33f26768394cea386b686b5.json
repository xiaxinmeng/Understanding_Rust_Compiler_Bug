{"sha": "d3f8b8be6fd5986af33f26768394cea386b686b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZjhiOGJlNmZkNTk4NmFmMzNmMjY3NjgzOTRjZWEzODZiNjg2YjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-04-07T14:28:31Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-04-12T20:06:03Z"}, "message": "Move hygiene tests to UI", "tree": {"sha": "ca598dd9f85ca094ea3ce4d4be8dc407aa90dcb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca598dd9f85ca094ea3ce4d4be8dc407aa90dcb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3f8b8be6fd5986af33f26768394cea386b686b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f8b8be6fd5986af33f26768394cea386b686b5", "html_url": "https://github.com/rust-lang/rust/commit/d3f8b8be6fd5986af33f26768394cea386b686b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3f8b8be6fd5986af33f26768394cea386b686b5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f69b7fb850cae83ea3d5adfeb8520418c976403", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f69b7fb850cae83ea3d5adfeb8520418c976403", "html_url": "https://github.com/rust-lang/rust/commit/4f69b7fb850cae83ea3d5adfeb8520418c976403"}], "stats": {"total": 223, "additions": 223, "deletions": 0}, "files": [{"sha": "e336b0df13fea71336343756b130dfef66d88645", "filename": "src/test/ui/hygiene/assoc_item_ctxt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/assoc_item_ctxt.rs"}, {"sha": "8b410405ae5ca59891a4ebe56932825c0d9bf729", "filename": "src/test/ui/hygiene/assoc_item_ctxt.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,25 @@\n+error[E0407]: method `method` is not a member of trait `Tr`\n+  --> $DIR/assoc_item_ctxt.rs:45:13\n+   |\n+LL |             fn method() {} //~ ERROR method `method` is not a member of trait `Tr`\n+   |             ^^^^^^^^^^^^^^ not a member of trait `Tr`\n+...\n+LL |     mac_trait_impl!();\n+   |     ------------------ in this macro invocation\n+\n+error[E0046]: not all trait items implemented, missing: `method`\n+  --> $DIR/assoc_item_ctxt.rs:44:9\n+   |\n+LL |         fn method();\n+   |         ------------ `method` from trait\n+...\n+LL |         impl Tr for u8 { //~ ERROR not all trait items implemented, missing: `method`\n+   |         ^^^^^^^^^^^^^^ missing `method` in implementation\n+...\n+LL |     mac_trait_impl!();\n+   |     ------------------ in this macro invocation\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0046, E0407.\n+For more information about an error, try `rustc --explain E0046`."}, {"sha": "46a138749ff176e4e521e60cd22ad2e8ece949dd", "filename": "src/test/ui/hygiene/assoc_ty_bindings.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_ty_bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_ty_bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fassoc_ty_bindings.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/assoc_ty_bindings.rs"}, {"sha": "0adf80994f7fc63f0bdff42829f3307139c3a177", "filename": "src/test/ui/hygiene/assoc_ty_bindings.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_ty_bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fassoc_ty_bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fassoc_ty_bindings.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,8 @@\n+error: compilation successful\n+  --> $DIR/assoc_ty_bindings.rs:49:1\n+   |\n+LL | fn main() {} //~ ERROR compilation successful\n+   | ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "aa67e5c5f4db7bcaf1d43feb2d228b63982cca6e", "filename": "src/test/ui/hygiene/auxiliary/intercrate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fauxiliary%2Fintercrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fauxiliary%2Fintercrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fauxiliary%2Fintercrate.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/auxiliary/intercrate.rs"}, {"sha": "64217770b13c9ad278b1381f4697ba86dde7e3ec", "filename": "src/test/ui/hygiene/fields.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ffields.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/fields.rs"}, {"sha": "c4be1834c04f8d60fa262e1e56b4ea7a93c197e2", "filename": "src/test/ui/hygiene/fields.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ffields.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,38 @@\n+error: type `foo::S` is private\n+  --> $DIR/fields.rs:25:17\n+   |\n+LL |         let s = S { x: 0 }; //~ ERROR type `foo::S` is private\n+   |                 ^^^^^^^^^^\n+...\n+LL |     let s = foo::m!(S, x);\n+   |             ------------- in this macro invocation\n+\n+error: type `foo::S` is private\n+  --> $DIR/fields.rs:26:17\n+   |\n+LL |         let _ = s.x; //~ ERROR type `foo::S` is private\n+   |                 ^\n+...\n+LL |     let s = foo::m!(S, x);\n+   |             ------------- in this macro invocation\n+\n+error: type `foo::T` is private\n+  --> $DIR/fields.rs:28:17\n+   |\n+LL |         let t = T(0); //~ ERROR type `foo::T` is private\n+   |                 ^^^^\n+...\n+LL |     let s = foo::m!(S, x);\n+   |             ------------- in this macro invocation\n+\n+error: type `foo::T` is private\n+  --> $DIR/fields.rs:29:17\n+   |\n+LL |         let _ = t.0; //~ ERROR type `foo::T` is private\n+   |                 ^\n+...\n+LL |     let s = foo::m!(S, x);\n+   |             ------------- in this macro invocation\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "d938642197092a8c432793af3a7455eb09b08260", "filename": "src/test/ui/hygiene/for-loop.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffor-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffor-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ffor-loop.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/for-loop-hygiene.rs"}, {"sha": "7e606b2358c142768fa57933ff7cb1fe7138face", "filename": "src/test/ui/hygiene/for-loop.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffor-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ffor-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ffor-loop.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find value `iter` in this scope\n+  --> $DIR/for-loop.rs:16:9\n+   |\n+LL |         iter.next();  //~ ERROR cannot find value `iter` in this scope\n+   |         ^^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "7ba217061c66ee986911556a844bc7a0a52b94a0", "filename": "src/test/ui/hygiene/globs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fglobs.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/globs.rs"}, {"sha": "d77242e135ddec03b20fcf351460d2385ceffd61", "filename": "src/test/ui/hygiene/globs.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,49 @@\n+error[E0425]: cannot find function `f` in this scope\n+  --> $DIR/globs.rs:32:9\n+   |\n+LL |         f(); //~ ERROR cannot find function `f` in this scope\n+   |         ^ not found in this scope\n+help: possible candidates are found in other modules, you can import them into scope\n+   |\n+LL | use foo::f;\n+   |\n+LL | use foo::f;\n+   |\n+LL | use foo::f;\n+   |\n+\n+error[E0425]: cannot find function `g` in this scope\n+  --> $DIR/globs.rs:25:5\n+   |\n+LL |       g(); //~ ERROR cannot find function `g` in this scope\n+   |       ^ not found in this scope\n+...\n+LL | /     m! {\n+LL | |         use bar::*;\n+LL | |         g();\n+LL | |         f(); //~ ERROR cannot find function `f` in this scope\n+LL | |     }\n+   | |_____- in this macro invocation\n+help: possible candidates are found in other modules, you can import them into scope\n+   |\n+LL | use bar::g;\n+   |\n+LL | use foo::test2::test::g;\n+   |\n+LL | use foo::test::g;\n+   |\n+LL | use foo::test::g;\n+   |\n+\n+error[E0425]: cannot find function `f` in this scope\n+  --> $DIR/globs.rs:64:17\n+   |\n+LL | n!(f);\n+   | ------ in this macro invocation\n+...\n+LL |                 f //~ ERROR cannot find function `f` in this scope\n+   |                 ^ not found in this scope\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "cdba559445d195be1a4636a496ed0b57fa8467b0", "filename": "src/test/ui/hygiene/impl_items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/impl_items.rs"}, {"sha": "dbcf53554cf258896736ff8f44eaa7dab70cb62e", "filename": "src/test/ui/hygiene/impl_items.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,11 @@\n+error: type `for<'r> fn(&'r foo::S) {foo::S::f}` is private\n+  --> $DIR/impl_items.rs:22:23\n+   |\n+LL |         let _: () = S.f(); //~ ERROR type `for<'r> fn(&'r foo::S) {foo::S::f}` is private\n+   |                       ^\n+...\n+LL |     foo::m!();\n+   |     ---------- in this macro invocation\n+\n+error: aborting due to previous error\n+"}, {"sha": "50fc985ba34faea982f93aa51efb5f468af4f073", "filename": "src/test/ui/hygiene/intercrate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/intercrate.rs"}, {"sha": "ecbc6e7b1472c29b8127297ba7cbae373548fbd9", "filename": "src/test/ui/hygiene/intercrate.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,10 @@\n+error: type `fn() -> u32 {intercrate::foo::bar::f}` is private\n+  --> $DIR/intercrate.rs:22:16\n+   |\n+LL |     assert_eq!(intercrate::foo::m!(), 1);\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}, {"sha": "6612359649c194cd660655ff18126b038db90ebd", "filename": "src/test/ui/hygiene/nested_macro_privacy.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/nested_macro_privacy.rs"}, {"sha": "1179065b94cd8a99ab95b6bc951ff39a352a6f45", "filename": "src/test/ui/hygiene/nested_macro_privacy.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,9 @@\n+error[E0616]: field `i` of struct `foo::S` is private\n+  --> $DIR/nested_macro_privacy.rs:25:5\n+   |\n+LL |     S::default().i; //~ ERROR field `i` of struct `foo::S` is private\n+   |     ^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0616`."}, {"sha": "c90c7b3093c9f0e5d04a15371b082d4cf05dbf38", "filename": "src/test/ui/hygiene/no_implicit_prelude.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/no_implicit_prelude.rs"}, {"sha": "5753d1a32f74fc864cb0c8a6fbe21c32889ce0f6", "filename": "src/test/ui/hygiene/no_implicit_prelude.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,30 @@\n+error[E0433]: failed to resolve. Use of undeclared type or module `Vec`\n+  --> $DIR/no_implicit_prelude.rs:21:9\n+   |\n+LL |     fn f() { ::bar::m!(); }\n+   |              ------------ in this macro invocation\n+...\n+LL |         Vec::new(); //~ ERROR failed to resolve\n+   |         ^^^ Use of undeclared type or module `Vec`\n+\n+error[E0601]: `main` function not found in crate `no_implicit_prelude`\n+   |\n+   = note: consider adding a `main` function to `$DIR/no_implicit_prelude.rs`\n+\n+error[E0599]: no method named `clone` found for type `()` in the current scope\n+  --> $DIR/no_implicit_prelude.rs:22:12\n+   |\n+LL |     fn f() { ::bar::m!(); }\n+   |              ------------ in this macro invocation\n+...\n+LL |         ().clone() //~ ERROR no method named `clone` found\n+   |            ^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           candidate #1: `use std::clone::Clone;`\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0433, E0599, E0601.\n+For more information about an error, try `rustc --explain E0433`."}, {"sha": "26d411c915482bdd89dcd78b20ead5376abd075e", "filename": "src/test/ui/hygiene/pattern-macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fpattern-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fpattern-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fpattern-macro.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/pattern-macro-hygiene.rs"}, {"sha": "b26084db02e966ec2709fd5cd15829ed6864fa4e", "filename": "src/test/ui/hygiene/pattern-macro.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fpattern-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fpattern-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fpattern-macro.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/pattern-macro.rs:15:5\n+   |\n+LL |     x + 1; //~ ERROR cannot find value `x` in this scope\n+   |     ^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "987cad187d428c7dcf719df625bc4ec736a3f755", "filename": "src/test/ui/hygiene/privacy.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/privacy.rs"}, {"sha": "808d244e9cdb6ae485958ee0f9454590ffa74069", "filename": "src/test/ui/hygiene/privacy.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,9 @@\n+error[E0603]: function `f` is private\n+  --> $DIR/privacy.rs:26:9\n+   |\n+LL |         foo::f() //~ ERROR `f` is private\n+   |         ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0603`."}, {"sha": "3bd19cbc0ac67cbf48b4138d0118a906bc799d05", "filename": "src/test/ui/hygiene/trait_items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.rs?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "previous_filename": "src/test/compile-fail/hygiene/trait_items.rs"}, {"sha": "56d9c585d6f85e2a86b4f4fd824f84571ca18eab", "filename": "src/test/ui/hygiene/trait_items.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8b8be6fd5986af33f26768394cea386b686b5/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr?ref=d3f8b8be6fd5986af33f26768394cea386b686b5", "patch": "@@ -0,0 +1,16 @@\n+error[E0599]: no method named `f` found for type `()` in the current scope\n+  --> $DIR/trait_items.rs:27:24\n+   |\n+LL |     fn f() { ::baz::m!(); }\n+   |              ------------ in this macro invocation\n+...\n+LL |     pub macro m() { ().f() } //~ ERROR no method named `f` found for type `()` in the current scope\n+   |                        ^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           candidate #1: `use foo::T;`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}