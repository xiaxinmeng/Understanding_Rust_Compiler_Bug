{"sha": "90080f47032b5b2d578b0940ee615a428680e884", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMDgwZjQ3MDMyYjViMmQ1NzhiMDk0MGVlNjE1YTQyODY4MGU4ODQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T21:42:13Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T21:43:38Z"}, "message": "Don't give invalid suggestions in array_into_iter.", "tree": {"sha": "91c6fd44c6e01d56dd2068e824e7434234a0e38a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c6fd44c6e01d56dd2068e824e7434234a0e38a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90080f47032b5b2d578b0940ee615a428680e884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90080f47032b5b2d578b0940ee615a428680e884", "html_url": "https://github.com/rust-lang/rust/commit/90080f47032b5b2d578b0940ee615a428680e884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90080f47032b5b2d578b0940ee615a428680e884/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422ad3bec2a9b41345cf1dd95a4ce4b4d9f159d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/422ad3bec2a9b41345cf1dd95a4ce4b4d9f159d8", "html_url": "https://github.com/rust-lang/rust/commit/422ad3bec2a9b41345cf1dd95a4ce4b4d9f159d8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5ac42c50c7240d22edb1adbd1b775248ac89d3fc", "filename": "compiler/rustc_lint/src/array_into_iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90080f47032b5b2d578b0940ee615a428680e884/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90080f47032b5b2d578b0940ee615a428680e884/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs?ref=90080f47032b5b2d578b0940ee615a428680e884", "patch": "@@ -141,7 +141,7 @@ impl<'tcx> LateLintPass<'tcx> for ArrayIntoIter {\n                         String::new(),\n                         Applicability::MaybeIncorrect,\n                     );\n-                } else {\n+                } else if receiver_ty.is_array() {\n                     diag.multipart_suggestion(\n                         \"or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\",\n                         vec!["}]}