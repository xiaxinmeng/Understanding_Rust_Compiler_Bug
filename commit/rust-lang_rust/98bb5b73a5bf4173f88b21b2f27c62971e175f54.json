{"sha": "98bb5b73a5bf4173f88b21b2f27c62971e175f54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YmI1YjczYTViZjQxNzNmODhiMjFiMmYyN2M2Mjk3MWUxNzVmNTQ=", "commit": {"author": {"name": "Jyun-Yan You", "email": "jyyou@cs.nctu.edu.tw", "date": "2012-01-27T03:08:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-07T01:56:41Z"}, "message": "use cc instead of gcc", "tree": {"sha": "4f74c61ce4a5c63ad55df6222961f134664c1822", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f74c61ce4a5c63ad55df6222961f134664c1822"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98bb5b73a5bf4173f88b21b2f27c62971e175f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98bb5b73a5bf4173f88b21b2f27c62971e175f54", "html_url": "https://github.com/rust-lang/rust/commit/98bb5b73a5bf4173f88b21b2f27c62971e175f54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98bb5b73a5bf4173f88b21b2f27c62971e175f54/comments", "author": {"login": "crabtw", "id": 36015, "node_id": "MDQ6VXNlcjM2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/36015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crabtw", "html_url": "https://github.com/crabtw", "followers_url": "https://api.github.com/users/crabtw/followers", "following_url": "https://api.github.com/users/crabtw/following{/other_user}", "gists_url": "https://api.github.com/users/crabtw/gists{/gist_id}", "starred_url": "https://api.github.com/users/crabtw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crabtw/subscriptions", "organizations_url": "https://api.github.com/users/crabtw/orgs", "repos_url": "https://api.github.com/users/crabtw/repos", "events_url": "https://api.github.com/users/crabtw/events{/privacy}", "received_events_url": "https://api.github.com/users/crabtw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc8a1f513d872e52c6251bae75462e62675eed75", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc8a1f513d872e52c6251bae75462e62675eed75", "html_url": "https://github.com/rust-lang/rust/commit/fc8a1f513d872e52c6251bae75462e62675eed75"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "c9f4f07a823e4cf6cf173ed69b39efb52d4a2fdf", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/98bb5b73a5bf4173f88b21b2f27c62971e175f54/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98bb5b73a5bf4173f88b21b2f27c62971e175f54/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=98bb5b73a5bf4173f88b21b2f27c62971e175f54", "patch": "@@ -608,7 +608,10 @@ fn link_binary(sess: session,\n     // The location of crates will be determined as needed.\n     let stage: str = \"-L\" + sess.filesearch.get_target_lib_path();\n \n-    let prog: str = \"gcc\";\n+    // In the future, FreeBSD will use clang as default compiler.\n+    // It would be flexible to use cc (system's default C compiler)\n+    // instead of hard-coded gcc\n+    let prog: str = \"cc\";\n     // The invocations of gcc share some flags across platforms\n \n     let gcc_args ="}]}