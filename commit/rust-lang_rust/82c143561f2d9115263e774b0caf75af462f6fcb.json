{"sha": "82c143561f2d9115263e774b0caf75af462f6fcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYzE0MzU2MWYyZDkxMTUyNjNlNzc0YjBjYWY3NWFmNDYyZjZmY2I=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-11-11T18:14:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-02-06T20:51:02Z"}, "message": "do not limit NiceRegionError to SubSupConflict or ConcreteFailure", "tree": {"sha": "fdb3190657cf0a2869e3f04a52e3930ad9e58576", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdb3190657cf0a2869e3f04a52e3930ad9e58576"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82c143561f2d9115263e774b0caf75af462f6fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82c143561f2d9115263e774b0caf75af462f6fcb", "html_url": "https://github.com/rust-lang/rust/commit/82c143561f2d9115263e774b0caf75af462f6fcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82c143561f2d9115263e774b0caf75af462f6fcb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "442ae7f04026c215a03b155eaaf9cde8bb5cf02a", "url": "https://api.github.com/repos/rust-lang/rust/commits/442ae7f04026c215a03b155eaaf9cde8bb5cf02a", "html_url": "https://github.com/rust-lang/rust/commit/442ae7f04026c215a03b155eaaf9cde8bb5cf02a"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "6a9fe19e1ac3d19948352db61564439d1da58e44", "filename": "src/librustc/infer/error_reporting/nice_region_error/different_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82c143561f2d9115263e774b0caf75af462f6fcb/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c143561f2d9115263e774b0caf75af462f6fcb/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs?ref=82c143561f2d9115263e774b0caf75af462f6fcb", "patch": "@@ -45,7 +45,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     ///\n     /// It will later be extended to trait objects.\n     pub(super) fn try_report_anon_anon_conflict(&self) -> Option<ErrorReported> {\n-        let (span, sub, sup) = self.regions();\n+        let (span, sub, sup) = self.regions()?;\n \n         // Determine whether the sub and sup consist of both anonymous (elided) regions.\n         let anon_reg_sup = self.tcx().is_suitable_region(sup)?;"}, {"sha": "b10a60ef6f11fbee7c9c75dc9827ae65663bd536", "filename": "src/librustc/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/82c143561f2d9115263e774b0caf75af462f6fcb/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c143561f2d9115263e774b0caf75af462f6fcb/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=82c143561f2d9115263e774b0caf75af462f6fcb", "patch": "@@ -17,11 +17,6 @@ mod util;\n \n impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {\n     pub fn try_report_nice_region_error(&self, error: &RegionResolutionError<'tcx>) -> bool {\n-        match *error {\n-            ConcreteFailure(..) | SubSupConflict(..) => {}\n-            _ => return false, // inapplicable\n-        }\n-\n         if let Some(tables) = self.in_progress_tables {\n             let tables = tables.borrow();\n             NiceRegionError::new(self, error.clone(), Some(&tables)).try_report().is_some()\n@@ -79,13 +74,14 @@ impl<'cx, 'tcx> NiceRegionError<'cx, 'tcx> {\n             .or_else(|| self.try_report_impl_not_conforming_to_trait())\n     }\n \n-    pub fn regions(&self) -> (Span, ty::Region<'tcx>, ty::Region<'tcx>) {\n+    pub fn regions(&self) -> Option<(Span, ty::Region<'tcx>, ty::Region<'tcx>)> {\n         match (&self.error, self.regions) {\n-            (Some(ConcreteFailure(origin, sub, sup)), None) => (origin.span(), sub, sup),\n-            (Some(SubSupConflict(_, _, origin, sub, _, sup)), None) => (origin.span(), sub, sup),\n-            (None, Some((span, sub, sup))) => (span, sub, sup),\n-            (Some(_), Some(_)) => panic!(\"incorrectly built NiceRegionError\"),\n-            _ => panic!(\"trying to report on an incorrect lifetime failure\"),\n+            (Some(ConcreteFailure(origin, sub, sup)), None) => Some((origin.span(), sub, sup)),\n+            (Some(SubSupConflict(_, _, origin, sub, _, sup)), None) => {\n+                Some((origin.span(), sub, sup))\n+            }\n+            (None, Some((span, sub, sup))) => Some((span, sub, sup)),\n+            _ => None,\n         }\n     }\n }"}, {"sha": "250dcff372c593b5e35af1695a8ce80773a83464", "filename": "src/librustc/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82c143561f2d9115263e774b0caf75af462f6fcb/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c143561f2d9115263e774b0caf75af462f6fcb/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=82c143561f2d9115263e774b0caf75af462f6fcb", "patch": "@@ -9,7 +9,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// When given a `ConcreteFailure` for a function with parameters containing a named region and\n     /// an anonymous region, emit an descriptive diagnostic error.\n     pub(super) fn try_report_named_anon_conflict(&self) -> Option<DiagnosticBuilder<'a>> {\n-        let (span, sub, sup) = self.regions();\n+        let (span, sub, sup) = self.regions()?;\n \n         debug!(\n             \"try_report_named_anon_conflict(sub={:?}, sup={:?}, error={:?})\","}]}