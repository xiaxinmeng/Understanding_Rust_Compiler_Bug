{"sha": "94aa02855defad20fe63d46a5df9506e82b78ff3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YWEwMjg1NWRlZmFkMjBmZTYzZDQ2YTVkZjk1MDZlODJiNzhmZjM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-21T14:30:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-21T14:49:11Z"}, "message": "fix discriminant sign extension", "tree": {"sha": "d1298341b77d25732884160cfd093b0dcfc8decb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1298341b77d25732884160cfd093b0dcfc8decb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94aa02855defad20fe63d46a5df9506e82b78ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94aa02855defad20fe63d46a5df9506e82b78ff3", "html_url": "https://github.com/rust-lang/rust/commit/94aa02855defad20fe63d46a5df9506e82b78ff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94aa02855defad20fe63d46a5df9506e82b78ff3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "963bf528292d8f97104515e32908e30c2467b6a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/963bf528292d8f97104515e32908e30c2467b6a8", "html_url": "https://github.com/rust-lang/rust/commit/963bf528292d8f97104515e32908e30c2467b6a8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fc4be82ad90ad04a95ef54394c8f3fbed1a279e1", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/94aa02855defad20fe63d46a5df9506e82b78ff3/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94aa02855defad20fe63d46a5df9506e82b78ff3/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=94aa02855defad20fe63d46a5df9506e82b78ff3", "patch": "@@ -219,7 +219,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let place = self.deref_operand(args[0])?;\n                 let discr_val = self.read_discriminant(place.into())?.0;\n                 let scalar = match dest.layout.ty.kind {\n-                    ty::Int(_) => Scalar::from_int(discr_val as i128, dest.layout.size),\n+                    ty::Int(_) => Scalar::from_int(\n+                        self.sign_extend(discr_val, dest.layout) as i128,\n+                        dest.layout.size,\n+                    ),\n                     ty::Uint(_) => Scalar::from_uint(discr_val, dest.layout.size),\n                     _ => bug!(\"invalid `discriminant_value` return layout: {:?}\", dest.layout),\n                 };"}]}