{"sha": "189b6bd7bbb01adea2163ca7b60ce2294dd10181", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OWI2YmQ3YmJiMDFhZGVhMjE2M2NhN2I2MGNlMjI5NGRkMTAxODE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-25T13:55:33Z"}, "committer": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-25T13:55:33Z"}, "message": "Update tests", "tree": {"sha": "cdcfaaa1b7ed2d83bace56f738b100c3bd0b5380", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdcfaaa1b7ed2d83bace56f738b100c3bd0b5380"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/189b6bd7bbb01adea2163ca7b60ce2294dd10181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/189b6bd7bbb01adea2163ca7b60ce2294dd10181", "html_url": "https://github.com/rust-lang/rust/commit/189b6bd7bbb01adea2163ca7b60ce2294dd10181", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/189b6bd7bbb01adea2163ca7b60ce2294dd10181/comments", "author": null, "committer": null, "parents": [{"sha": "10c79347009ded8f03e4988f016659ff2a3713e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/10c79347009ded8f03e4988f016659ff2a3713e1", "html_url": "https://github.com/rust-lang/rust/commit/10c79347009ded8f03e4988f016659ff2a3713e1"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "03f10a1ba38c7cf5ff28fe3820735ba252b57dd5", "filename": "tests/source/issue-1049.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/189b6bd7bbb01adea2163ca7b60ce2294dd10181/tests%2Fsource%2Fissue-1049.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189b6bd7bbb01adea2163ca7b60ce2294dd10181/tests%2Fsource%2Fissue-1049.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1049.rs?ref=189b6bd7bbb01adea2163ca7b60ce2294dd10181", "patch": "@@ -14,3 +14,5 @@ impl Handle {\n fn veeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}\n \n fn veeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}\n+\n+fn veeeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}"}, {"sha": "b176820c3e689ae94ad5efc65a541137c6fba72a", "filename": "tests/target/hard-tabs.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/189b6bd7bbb01adea2163ca7b60ce2294dd10181/tests%2Ftarget%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189b6bd7bbb01adea2163ca7b60ce2294dd10181/tests%2Ftarget%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhard-tabs.rs?ref=189b6bd7bbb01adea2163ca7b60ce2294dd10181", "patch": "@@ -16,17 +16,7 @@ fn main() {\n \t\t..something\n \t};\n \n-\tfn foo(a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32) {\n+\tfn foo(a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32) {\n \t}\n \n \tlet str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAa\";"}, {"sha": "020ac6ff0d9b77b014097e9470b30b6b104148af", "filename": "tests/target/issue-1049.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/189b6bd7bbb01adea2163ca7b60ce2294dd10181/tests%2Ftarget%2Fissue-1049.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189b6bd7bbb01adea2163ca7b60ce2294dd10181/tests%2Ftarget%2Fissue-1049.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1049.rs?ref=189b6bd7bbb01adea2163ca7b60ce2294dd10181", "patch": "@@ -16,6 +16,9 @@ impl Handle {\n // Long function without return type that should not be reformated.\n fn veeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}\n \n-fn veeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee,\n-                                       b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {\n+fn veeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {\n+}\n+\n+fn veeeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee,\n+                                        b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {\n }"}]}