{"sha": "6cb062dacfed8e647361bc94694c7177beb17390", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYjA2MmRhY2ZlZDhlNjQ3MzYxYmM5NDY5NGM3MTc3YmViMTczOTA=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-10-01T04:09:59Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-10-04T03:35:52Z"}, "message": "mips32: Add f64 hard-float support\n\nco-authored-by: Amanieu <amanieu@gmail.com>", "tree": {"sha": "11fec1779e8808e3c453dd56f9df6a85a3e33e75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11fec1779e8808e3c453dd56f9df6a85a3e33e75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cb062dacfed8e647361bc94694c7177beb17390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb062dacfed8e647361bc94694c7177beb17390", "html_url": "https://github.com/rust-lang/rust/commit/6cb062dacfed8e647361bc94694c7177beb17390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cb062dacfed8e647361bc94694c7177beb17390/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "446f86e370884df01cbbacc584d67859c6c2a10b", "url": "https://api.github.com/repos/rust-lang/rust/commits/446f86e370884df01cbbacc584d67859c6c2a10b", "html_url": "https://github.com/rust-lang/rust/commit/446f86e370884df01cbbacc584d67859c6c2a10b"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "f6e3b7d1921a45b9b727c716555a3d331a5af64e", "filename": "compiler/rustc_target/src/asm/mips.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cb062dacfed8e647361bc94694c7177beb17390/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb062dacfed8e647361bc94694c7177beb17390/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmips.rs?ref=6cb062dacfed8e647361bc94694c7177beb17390", "patch": "@@ -36,7 +36,7 @@ impl MipsInlineAsmRegClass {\n     ) -> &'static [(InlineAsmType, Option<&'static str>)] {\n         match self {\n             Self::reg => types! { _: I8, I16, I32, F32; },\n-            Self::freg => types! { _: F32; },\n+            Self::freg => types! { _: F32, F64; },\n         }\n     }\n }"}, {"sha": "8df08b2ab8f17c04e80f76c70a23a43378d15ff3", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cb062dacfed8e647361bc94694c7177beb17390/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/6cb062dacfed8e647361bc94694c7177beb17390/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=6cb062dacfed8e647361bc94694c7177beb17390", "patch": "@@ -551,7 +551,7 @@ Each register class has constraints on which value types they can be used with.\n | ARM | `dreg` | `vfp2` | `i64`, `f64`, `i8x8`, `i16x4`, `i32x2`, `i64x1`, `f32x2` |\n | ARM | `qreg` | `neon` | `i8x16`, `i16x8`, `i32x4`, `i64x2`, `f32x4` |\n | MIPS32 | `reg` | None | `i8`, `i16`, `i32`, `f32` |\n-| MIPS32 | `freg` | None | `f32` |\n+| MIPS32 | `freg` | None | `f32`, `f64` |\n | NVPTX | `reg16` | None | `i8`, `i16` |\n | NVPTX | `reg32` | None | `i8`, `i16`, `i32`, `f32` |\n | NVPTX | `reg64` | None | `i8`, `i16`, `i32`, `f32`, `i64`, `f64` |"}, {"sha": "f37da8490641a70641d1feb0462c2533d6d23097", "filename": "src/test/assembly/asm/mips-types.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6cb062dacfed8e647361bc94694c7177beb17390/src%2Ftest%2Fassembly%2Fasm%2Fmips-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb062dacfed8e647361bc94694c7177beb17390/src%2Ftest%2Fassembly%2Fasm%2Fmips-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fasm%2Fmips-types.rs?ref=6cb062dacfed8e647361bc94694c7177beb17390", "patch": "@@ -108,6 +108,30 @@ pub unsafe fn f0_f32(x: f32) -> f32 {\n     y\n }\n \n+// CHECK-LABEL: reg_f64:\n+// CHECK: #APP\n+// CHECK: mov.d $f{{[0-9]+}}, $f{{[0-9]+}}\n+// CHECK: #NO_APP\n+#[no_mangle]\n+pub unsafe fn reg_f64(x: f64) -> f64 {\n+    dont_merge(\"reg_f64\");\n+    let y;\n+    asm!(\"mov.d {}, {}\", out(freg) y, in(freg) x);\n+    y\n+}\n+\n+// CHECK-LABEL: f0_f64:\n+// CHECK: #APP\n+// CHECK: mov.d $f0, $f0\n+// CHECK: #NO_APP\n+#[no_mangle]\n+pub unsafe fn f0_f64(x: f64) -> f64 {\n+    dont_merge(\"f0_f64\");\n+    let y;\n+    asm!(\"mov.d $f0, $f0\", lateout(\"$f0\") y, in(\"$f0\") x);\n+    y\n+}\n+\n // CHECK-LABEL: reg_ptr:\n // CHECK: #APP\n // CHECK: move ${{[0-9]+}}, ${{[0-9]+}}"}]}