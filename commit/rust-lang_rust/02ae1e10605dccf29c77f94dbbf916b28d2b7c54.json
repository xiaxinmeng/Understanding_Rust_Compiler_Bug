{"sha": "02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYWUxZTEwNjA1ZGNjZjI5Yzc3Zjk0ZGJiZjkxNmIyOGQyYjdjNTQ=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2017-01-08T11:05:13Z"}, "committer": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2017-01-09T02:45:04Z"}, "message": "Support unprivileged symlink creation in Windows\n\nSymlink creation on Windows has in the past basically required admin;\nit\u2019s being opened up a bit in the Creators Update, so that at least\npeople who have put their computers into Developer Mode will be able to\ncreate symlinks without special privileges. (Microsoft are being\ncautious about it all; the Developer Mode requirement makes it so that\nit this won\u2019t be as helpful as I\u2019d like, but it\u2019s still an improvement\nover requiring admin.)\n\nBecause of compatibility concerns, they\u2019ve hidden this new functionality\nbehind a new flag in the CreateSymbolicLink dwFlags:\nSYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE. So we add this flag in\norder to join the party.\n\nOlder Windows doesn\u2019t like this new flag, though, so if we encounter\nERROR_INVALID_PARAMETER we try again without the new flag.\n\nSources:\n\n- https://blogs.windows.com/buildingapps/2016/12/02/symlinks-windows-10/\n  is the official announcement (search for CreateSymbolicLink)\n\n- https://news.ycombinator.com/item?id=13096354 on why the new flag.\n\n- https://twitter.com/richturn_ms/status/818167548269051905 confirming\n  that Developer Mode will still be required.", "tree": {"sha": "e6fc7b7e1361411c5f344130d329edad7a5a3d54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6fc7b7e1361411c5f344130d329edad7a5a3d54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "html_url": "https://github.com/rust-lang/rust/commit/02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02ae1e10605dccf29c77f94dbbf916b28d2b7c54/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac9d337dcc544b4b1959997cdd36f1ba0c8d3e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac9d337dcc544b4b1959997cdd36f1ba0c8d3e1", "html_url": "https://github.com/rust-lang/rust/commit/7ac9d337dcc544b4b1959997cdd36f1ba0c8d3e1"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "7b8575f9ec4c7cd33d5aba0e272fc15e49808f98", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02ae1e10605dccf29c77f94dbbf916b28d2b7c54/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02ae1e10605dccf29c77f94dbbf916b28d2b7c54/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "patch": "@@ -166,6 +166,7 @@ pub const SYMLINK_FLAG_RELATIVE: DWORD = 0x00000001;\n pub const FSCTL_SET_REPARSE_POINT: DWORD = 0x900a4;\n \n pub const SYMBOLIC_LINK_FLAG_DIRECTORY: DWORD = 0x1;\n+pub const SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE: DWORD = 0x2;\n \n // Note that these are not actually HANDLEs, just values to pass to GetStdHandle\n pub const STD_INPUT_HANDLE: DWORD = -10i32 as DWORD;"}, {"sha": "4efc68afdc4c74f6387f359c788f30eb42b20fbe", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/02ae1e10605dccf29c77f94dbbf916b28d2b7c54/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02ae1e10605dccf29c77f94dbbf916b28d2b7c54/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "patch": "@@ -646,9 +646,25 @@ pub fn symlink_inner(src: &Path, dst: &Path, dir: bool) -> io::Result<()> {\n     let src = to_u16s(src)?;\n     let dst = to_u16s(dst)?;\n     let flags = if dir { c::SYMBOLIC_LINK_FLAG_DIRECTORY } else { 0 };\n-    cvt(unsafe {\n-        c::CreateSymbolicLinkW(dst.as_ptr(), src.as_ptr(), flags) as c::BOOL\n-    })?;\n+    // Formerly, symlink creation required the SeCreateSymbolicLink privilege. For the Windows 10\n+    // Creators Update, Microsoft loosened this to allow unprivileged symlink creation if the\n+    // computer is in Developer Mode, but SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE must be\n+    // added to dwFlags to opt into this behaviour.\n+    let result = cvt(unsafe {\n+        c::CreateSymbolicLinkW(dst.as_ptr(), src.as_ptr(),\n+                               flags | c::SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE) as c::BOOL\n+    });\n+    if let Err(err) = result {\n+        if err.raw_os_error() == Some(c::ERROR_INVALID_PARAMETER as i32) {\n+            // Older Windows objects to SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE,\n+            // so if we encounter ERROR_INVALID_PARAMETER, retry without that flag.\n+            cvt(unsafe {\n+                c::CreateSymbolicLinkW(dst.as_ptr(), src.as_ptr(), flags) as c::BOOL\n+            })?;\n+        } else {\n+            return Err(err);\n+        }\n+    }\n     Ok(())\n }\n "}]}