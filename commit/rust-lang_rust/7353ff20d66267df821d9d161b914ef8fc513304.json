{"sha": "7353ff20d66267df821d9d161b914ef8fc513304", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNTNmZjIwZDY2MjY3ZGY4MjFkOWQxNjFiOTE0ZWY4ZmM1MTMzMDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T10:54:27Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T10:54:27Z"}, "message": "`SliceKind::VarLen`: make doc-comment render correctly.\n\n(The backticks were rendering badly in VSCode.)", "tree": {"sha": "e17b597cd34b20af524cb01fd21ae05dbcfcf9d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e17b597cd34b20af524cb01fd21ae05dbcfcf9d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7353ff20d66267df821d9d161b914ef8fc513304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7353ff20d66267df821d9d161b914ef8fc513304", "html_url": "https://github.com/rust-lang/rust/commit/7353ff20d66267df821d9d161b914ef8fc513304", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7353ff20d66267df821d9d161b914ef8fc513304/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6286a1d7eb68875504536c78f6316cad7e7490b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6286a1d7eb68875504536c78f6316cad7e7490b2", "html_url": "https://github.com/rust-lang/rust/commit/6286a1d7eb68875504536c78f6316cad7e7490b2"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f267be812c3d276ccfc90f45f27e986068e142a9", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7353ff20d66267df821d9d161b914ef8fc513304/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7353ff20d66267df821d9d161b914ef8fc513304/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=7353ff20d66267df821d9d161b914ef8fc513304", "patch": "@@ -620,10 +620,11 @@ impl<'a, 'tcx> MatchCheckCtxt<'a, 'tcx> {\n enum SliceKind {\n     /// Patterns of length `n` (`[x, y]`).\n     FixedLen(u64),\n-    /// Patterns using the `..` notation (`[x, .., y]`). Captures any array constructor of `length\n-    /// >= i + j`. In the case where `array_len` is `Some(_)`, this indicates that we only care\n-    /// about the first `i` and the last `j` values of the array, and everything in between is a\n-    /// wildcard `_`.\n+    /// Patterns using the `..` notation (`[x, .., y]`).\n+    /// Captures any array constructor of `length >= i + j`.\n+    /// In the case where `array_len` is `Some(_)`,\n+    /// this indicates that we only care about the first `i` and the last `j` values of the array,\n+    /// and everything in between is a wildcard `_`.\n     VarLen(u64, u64),\n }\n "}]}