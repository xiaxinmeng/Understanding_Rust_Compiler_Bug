{"sha": "f520f7e0f8e2046f431315b7fdd5ca14531ffa8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MjBmN2UwZjhlMjA0NmY0MzEzMTViN2ZkZDVjYTE0NTMxZmZhOGU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-04-24T11:23:02Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-04-24T11:46:29Z"}, "message": "Suppress spurious parse error messages on skipped files", "tree": {"sha": "1e52d4f926efb0a4dfbcf53b21afa2f5e1454583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e52d4f926efb0a4dfbcf53b21afa2f5e1454583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f520f7e0f8e2046f431315b7fdd5ca14531ffa8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f520f7e0f8e2046f431315b7fdd5ca14531ffa8e", "html_url": "https://github.com/rust-lang/rust/commit/f520f7e0f8e2046f431315b7fdd5ca14531ffa8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f520f7e0f8e2046f431315b7fdd5ca14531ffa8e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20ffc6d52e741341d98eca4a4502faae66d1dc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20ffc6d52e741341d98eca4a4502faae66d1dc4", "html_url": "https://github.com/rust-lang/rust/commit/a20ffc6d52e741341d98eca4a4502faae66d1dc4"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "9776359bef3819e765645db8cd80bbb19d259d73", "filename": "src/formatting.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f520f7e0f8e2046f431315b7fdd5ca14531ffa8e/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f520f7e0f8e2046f431315b7fdd5ca14531ffa8e/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=f520f7e0f8e2046f431315b7fdd5ca14531ffa8e", "patch": "@@ -67,6 +67,14 @@ fn format_project<T: FormatHandler>(\n     let main_file = input.file_name();\n     let input_is_stdin = main_file == FileName::Stdin;\n \n+    let ignore_path_set = match IgnorePathSet::from_ignore_list(&config.ignore()) {\n+        Ok(set) => set,\n+        Err(e) => return Err(ErrorKind::InvalidGlobPattern(e)),\n+    };\n+    if config.skip_children() && ignore_path_set.is_match(&main_file) {\n+        return Ok(FormatReport::new());\n+    }\n+\n     // Parse the crate.\n     let source_map = Rc::new(SourceMap::new(FilePathMapping::empty()));\n     let mut parse_session = make_parse_sess(source_map.clone(), config);\n@@ -91,11 +99,6 @@ fn format_project<T: FormatHandler>(\n     parse_session.span_diagnostic = Handler::with_emitter(true, None, silent_emitter);\n \n     let mut context = FormatContext::new(&krate, report, parse_session, config, handler);\n-    let ignore_path_set = match IgnorePathSet::from_ignore_list(&config.ignore()) {\n-        Ok(set) => set,\n-        Err(e) => return Err(ErrorKind::InvalidGlobPattern(e)),\n-    };\n-\n     let files = modules::ModResolver::new(\n         context.parse_session.source_map(),\n         directory_ownership.unwrap_or(parse::DirectoryOwnership::UnownedViaMod(false)),"}]}