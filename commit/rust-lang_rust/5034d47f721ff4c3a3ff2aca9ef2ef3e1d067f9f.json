{"sha": "5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMzRkNDdmNzIxZmY0YzNhM2ZmMmFjYTllZjJlZjNlMWQwNjdmOWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-10T14:34:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-10T14:34:22Z"}, "message": "Auto merge of #5980 - matsujika:create-dir, r=flip1995\n\nAdd a lint to prevent `create_dir` from being used\n\nThis closes #5950\nchangelog: none", "tree": {"sha": "a6fa704ae0cabba51a256c816e303d22d0ee599e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6fa704ae0cabba51a256c816e303d22d0ee599e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "html_url": "https://github.com/rust-lang/rust/commit/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55efa966594cd375b6bace6c0b4481108806d8a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/55efa966594cd375b6bace6c0b4481108806d8a2", "html_url": "https://github.com/rust-lang/rust/commit/55efa966594cd375b6bace6c0b4481108806d8a2"}, {"sha": "a899ad2e125e8dd3a0a339df1f8457ef8cab3cc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a899ad2e125e8dd3a0a339df1f8457ef8cab3cc7", "html_url": "https://github.com/rust-lang/rust/commit/a899ad2e125e8dd3a0a339df1f8457ef8cab3cc7"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "64f9379b303cda15d6cd5919d4208718149b8348", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -1547,6 +1547,7 @@ Released 2018-09-13\n [`collapsible_if`]: https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n [`comparison_chain`]: https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n [`copy_iterator`]: https://rust-lang.github.io/rust-clippy/master/index.html#copy_iterator\n+[`create_dir`]: https://rust-lang.github.io/rust-clippy/master/index.html#create_dir\n [`crosspointer_transmute`]: https://rust-lang.github.io/rust-clippy/master/index.html#crosspointer_transmute\n [`dbg_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#dbg_macro\n [`debug_assert_with_mut_call`]: https://rust-lang.github.io/rust-clippy/master/index.html#debug_assert_with_mut_call"}, {"sha": "4002fb655a5ebe18d99bed1c4933ed0d74992527", "filename": "clippy_lints/src/create_dir.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/clippy_lints%2Fsrc%2Fcreate_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/clippy_lints%2Fsrc%2Fcreate_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcreate_dir.rs?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -0,0 +1,51 @@\n+use crate::utils::{match_def_path, paths, snippet, span_lint_and_sugg};\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks usage of `std::fs::create_dir` and suggest using `std::fs::create_dir_all` instead.\n+    ///\n+    /// **Why is this bad?** Sometimes `std::fs::crate_dir` is mistakenly chosen over `std::fs::create_dir_all`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// std::fs::create_dir(\"foo\");\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// std::fs::create_dir_all(\"foo\");\n+    /// ```\n+    pub CREATE_DIR,\n+    restriction,\n+    \"calling `std::fs::create_dir` instead of `std::fs::create_dir_all`\"\n+}\n+\n+declare_lint_pass!(CreateDir => [CREATE_DIR]);\n+\n+impl LateLintPass<'_> for CreateDir {\n+    fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n+        if_chain! {\n+            if let ExprKind::Call(ref func, ref args) = expr.kind;\n+            if let ExprKind::Path(ref path) = func.kind;\n+            if let Some(def_id) = cx.qpath_res(path, func.hir_id).opt_def_id();\n+            if match_def_path(cx, def_id, &paths::STD_FS_CREATE_DIR);\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    CREATE_DIR,\n+                    expr.span,\n+                    \"calling `std::fs::create_dir` where there may be a better way\",\n+                    \"consider calling `std::fs::create_dir_all` instead\",\n+                    format!(\"create_dir_all({})\", snippet(cx, args[0].span, \"..\")),\n+                    Applicability::MaybeIncorrect,\n+                )\n+            }\n+        }\n+    }\n+}"}, {"sha": "2020ef78509b0c24f80f01f4105da0652462ebf9", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -170,6 +170,7 @@ mod collapsible_if;\n mod comparison_chain;\n mod copies;\n mod copy_iterator;\n+mod create_dir;\n mod dbg_macro;\n mod default_trait_access;\n mod dereference;\n@@ -513,6 +514,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &copies::MATCH_SAME_ARMS,\n         &copies::SAME_FUNCTIONS_IN_IF_CONDITION,\n         &copy_iterator::COPY_ITERATOR,\n+        &create_dir::CREATE_DIR,\n         &dbg_macro::DBG_MACRO,\n         &default_trait_access::DEFAULT_TRAIT_ACCESS,\n         &dereference::EXPLICIT_DEREF_METHODS,\n@@ -1044,6 +1046,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box items_after_statements::ItemsAfterStatements);\n     store.register_early_pass(|| box precedence::Precedence);\n     store.register_early_pass(|| box needless_continue::NeedlessContinue);\n+    store.register_late_pass(|| box create_dir::CreateDir);\n     store.register_early_pass(|| box needless_arbitrary_self_type::NeedlessArbitrarySelfType);\n     store.register_early_pass(|| box redundant_static_lifetimes::RedundantStaticLifetimes);\n     store.register_late_pass(|| box cargo_common_metadata::CargoCommonMetadata);\n@@ -1107,6 +1110,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),\n         LintId::of(&arithmetic::INTEGER_ARITHMETIC),\n         LintId::of(&as_conversions::AS_CONVERSIONS),\n+        LintId::of(&create_dir::CREATE_DIR),\n         LintId::of(&dbg_macro::DBG_MACRO),\n         LintId::of(&else_if_without_else::ELSE_IF_WITHOUT_ELSE),\n         LintId::of(&exit::EXIT),"}, {"sha": "65320d6a0e0bd98e9230b0e1143c0bab5a519562", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -110,6 +110,7 @@ pub const SLICE_ITER: [&str; 3] = [\"core\", \"slice\", \"Iter\"];\n pub const STDERR: [&str; 4] = [\"std\", \"io\", \"stdio\", \"stderr\"];\n pub const STDOUT: [&str; 4] = [\"std\", \"io\", \"stdio\", \"stdout\"];\n pub const STD_CONVERT_IDENTITY: [&str; 3] = [\"std\", \"convert\", \"identity\"];\n+pub const STD_FS_CREATE_DIR: [&str; 3] = [\"std\", \"fs\", \"create_dir\"];\n pub const STD_MEM_TRANSMUTE: [&str; 3] = [\"std\", \"mem\", \"transmute\"];\n pub const STD_PTR_NULL: [&str; 3] = [\"std\", \"ptr\", \"null\"];\n pub const STRING_AS_MUT_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_mut_str\"];"}, {"sha": "6697835e950d982d1767421d138411d921ee37ba", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -297,6 +297,13 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"copy_iterator\",\n     },\n+    Lint {\n+        name: \"create_dir\",\n+        group: \"restriction\",\n+        desc: \"calling `std::fs::create_dir` instead of `std::fs::create_dir_all`\",\n+        deprecation: None,\n+        module: \"create_dir\",\n+    },\n     Lint {\n         name: \"crosspointer_transmute\",\n         group: \"complexity\","}, {"sha": "8ed53a56ac043357ed4ad192d344eab357d99753", "filename": "tests/ui/create_dir.fixed", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/tests%2Fui%2Fcreate_dir.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/tests%2Fui%2Fcreate_dir.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcreate_dir.fixed?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+#![allow(unused_must_use)]\n+#![warn(clippy::create_dir)]\n+\n+use std::fs::create_dir_all;\n+\n+fn create_dir() {}\n+\n+fn main() {\n+    // Should be warned\n+    create_dir_all(\"foo\");\n+    create_dir_all(\"bar\").unwrap();\n+\n+    // Shouldn't be warned\n+    create_dir();\n+    std::fs::create_dir_all(\"foobar\");\n+}"}, {"sha": "19c8fc24ba23fa26ff0ba6cf1419c26b70cb2d9d", "filename": "tests/ui/create_dir.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/tests%2Fui%2Fcreate_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/tests%2Fui%2Fcreate_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcreate_dir.rs?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+#![allow(unused_must_use)]\n+#![warn(clippy::create_dir)]\n+\n+use std::fs::create_dir_all;\n+\n+fn create_dir() {}\n+\n+fn main() {\n+    // Should be warned\n+    std::fs::create_dir(\"foo\");\n+    std::fs::create_dir(\"bar\").unwrap();\n+\n+    // Shouldn't be warned\n+    create_dir();\n+    std::fs::create_dir_all(\"foobar\");\n+}"}, {"sha": "67298fc47095c98144b7994fce1fc058ebed0cb6", "filename": "tests/ui/create_dir.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/tests%2Fui%2Fcreate_dir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f/tests%2Fui%2Fcreate_dir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcreate_dir.stderr?ref=5034d47f721ff4c3a3ff2aca9ef2ef3e1d067f9f", "patch": "@@ -0,0 +1,16 @@\n+error: calling `std::fs::create_dir` where there may be a better way\n+  --> $DIR/create_dir.rs:11:5\n+   |\n+LL |     std::fs::create_dir(\"foo\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `std::fs::create_dir_all` instead: `create_dir_all(\"foo\")`\n+   |\n+   = note: `-D clippy::create-dir` implied by `-D warnings`\n+\n+error: calling `std::fs::create_dir` where there may be a better way\n+  --> $DIR/create_dir.rs:12:5\n+   |\n+LL |     std::fs::create_dir(\"bar\").unwrap();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `std::fs::create_dir_all` instead: `create_dir_all(\"bar\")`\n+\n+error: aborting due to 2 previous errors\n+"}]}