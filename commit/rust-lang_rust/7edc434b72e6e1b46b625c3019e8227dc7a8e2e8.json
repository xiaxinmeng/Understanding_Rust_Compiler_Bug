{"sha": "7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZGM0MzRiNzJlNmUxYjQ2YjYyNWMzMDE5ZTgyMjdkYzdhOGUyZTg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-27T18:40:06Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-31T17:44:58Z"}, "message": "Account for `\\xFF` and `\\u{FF}` sequences in string format errors", "tree": {"sha": "8b0f0c980ee8b58b8f79bf3ca684030ac47d2c8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b0f0c980ee8b58b8f79bf3ca684030ac47d2c8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "html_url": "https://github.com/rust-lang/rust/commit/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "433ef826f001652f13ecff3697c2233fbe1ce4e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/433ef826f001652f13ecff3697c2233fbe1ce4e2", "html_url": "https://github.com/rust-lang/rust/commit/433ef826f001652f13ecff3697c2233fbe1ce4e2"}], "stats": {"total": 108, "additions": 107, "deletions": 1}, "files": [{"sha": "3a5f0ec07e76c09692b20516c7f9a162f2c33676", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "patch": "@@ -808,12 +808,57 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt,\n                 }\n                 ('\\\\', Some((next_pos, 'n'))) |\n                 ('\\\\', Some((next_pos, 't'))) |\n+                ('\\\\', Some((next_pos, '0'))) |\n                 ('\\\\', Some((next_pos, '\\\\'))) |\n                 ('\\\\', Some((next_pos, '\\''))) |\n                 ('\\\\', Some((next_pos, '\\\"'))) => {\n                     skips.push(*next_pos);\n                     let _ = s.next();\n                 }\n+                ('\\\\', Some((_, 'x'))) if !is_raw => {\n+                    for _ in 0..3 {  // consume `\\xAB` literal\n+                        if let Some((pos, _)) = s.next() {\n+                            skips.push(pos);\n+                        } else {\n+                            break;\n+                        }\n+                    }\n+                }\n+                ('\\\\', Some((_, 'u'))) if !is_raw => {\n+                    if let Some((pos, _)) = s.next() {\n+                        skips.push(pos);\n+                    }\n+                    if let Some((next_pos, next_c)) = s.next() {\n+                        if next_c == '{' {\n+                            skips.push(next_pos);\n+                            let mut i = 0;  // consume up to 6 hexanumeric chars + closing `}`\n+                            while let (Some((next_pos, c)), true) = (s.next(), i < 7) {\n+                                if c.is_digit(16) {\n+                                    skips.push(next_pos);\n+                                } else if c == '}' {\n+                                    skips.push(next_pos);\n+                                    break;\n+                                } else {\n+                                    break;\n+                                }\n+                                i += 1;\n+                            }\n+                        } else if next_c.is_digit(16) {\n+                            skips.push(next_pos);\n+                            // We suggest adding `{` and `}` when appropriate, accept it here as if it\n+                            // were correct\n+                            let mut i = 0;  // consume up to 6 hexanumeric chars\n+                            while let (Some((next_pos, c)), _) = (s.next(), i < 6) {\n+                                if c.is_digit(16) {\n+                                    skips.push(next_pos);\n+                                } else {\n+                                    break;\n+                                }\n+                                i += 1;\n+                            }\n+                        }\n+                    }\n+                }\n                 _ if eat_ws => {  // `take_while(|c| c.is_whitespace())`\n                     eat_ws = false;\n                 }"}, {"sha": "5c25ae502ff6d8f06d95c2456d84889978a7acd4", "filename": "src/test/ui/fmt/format-string-error-2.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs?ref=7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "patch": "@@ -69,4 +69,19 @@ raw  { \\n\n     //~^^ ERROR invalid format string\n     println!(\"\\t{}\");\n     //~^ ERROR 1 positional argument in format string\n+\n+    // note: `\\x7B` is `{`\n+    println!(\"\\x7B}\\u{8} {\", 1);\n+    //~^ ERROR invalid format string: expected `'}'` but string was terminated\n+\n+    println!(\"\\x7B}\\u8 {\", 1);\n+    //~^ ERROR incorrect unicode escape sequence\n+    //~| ERROR argument never used\n+\n+    // note: raw strings don't escape `\\xFF` and `\\u{FF}` sequences\n+    println!(r#\"\\x7B}\\u{8} {\"#, 1);\n+    //~^ ERROR invalid format string: unmatched `}` found\n+\n+    println!(r#\"\\x7B}\\u8 {\"#, 1);\n+    //~^ ERROR invalid format string: unmatched `}` found\n }"}, {"sha": "ae62ed66338bcc81435d3976db6f7cba370ff33d", "filename": "src/test/ui/fmt/format-string-error-2.stderr", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7edc434b72e6e1b46b625c3019e8227dc7a8e2e8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr?ref=7edc434b72e6e1b46b625c3019e8227dc7a8e2e8", "patch": "@@ -1,3 +1,15 @@\n+error: incorrect unicode escape sequence\n+  --> $DIR/format-string-error-2.rs:77:20\n+   |\n+LL |     println!(\"/x7B}/u8 {\", 1);\n+   |                    ^^\n+   |\n+help: format of unicode escape sequences is `/u{\u2026}`\n+  --> $DIR/format-string-error-2.rs:77:20\n+   |\n+LL |     println!(\"/x7B}/u8 {\", 1);\n+   |                    ^^\n+\n error: invalid format string: expected `'}'`, found `'a'`\n   --> $DIR/format-string-error-2.rs:5:5\n    |\n@@ -139,5 +151,39 @@ error: 1 positional argument in format string, but no arguments were given\n LL |     println!(\"/t{}\");\n    |                 ^^\n \n-error: aborting due to 14 previous errors\n+error: invalid format string: expected `'}'` but string was terminated\n+  --> $DIR/format-string-error-2.rs:74:27\n+   |\n+LL |     println!(\"/x7B}/u{8} {\", 1);\n+   |                          -^ expected `'}'` in format string\n+   |                          |\n+   |                          because of this opening brace\n+   |\n+   = note: if you intended to print `{`, you can escape it using `{{`\n+\n+error: argument never used\n+  --> $DIR/format-string-error-2.rs:77:28\n+   |\n+LL |     println!(\"/x7B}/u8 {\", 1);\n+   |              ------------  ^ argument never used\n+   |              |\n+   |              formatting specifier missing\n+\n+error: invalid format string: unmatched `}` found\n+  --> $DIR/format-string-error-2.rs:82:21\n+   |\n+LL |     println!(r#\"/x7B}/u{8} {\"#, 1);\n+   |                     ^ unmatched `}` in format string\n+   |\n+   = note: if you intended to print `}`, you can escape it using `}}`\n+\n+error: invalid format string: unmatched `}` found\n+  --> $DIR/format-string-error-2.rs:85:21\n+   |\n+LL |     println!(r#\"/x7B}/u8 {\"#, 1);\n+   |                     ^ unmatched `}` in format string\n+   |\n+   = note: if you intended to print `}`, you can escape it using `}}`\n+\n+error: aborting due to 19 previous errors\n "}]}