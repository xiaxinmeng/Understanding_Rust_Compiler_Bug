{"sha": "018d4d265fb40ea4301da5dc339bff962a6faa57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOGQ0ZDI2NWZiNDBlYTQzMDFkYTVkYzMzOWJmZjk2MmE2ZmFhNTc=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-23T18:44:43Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-08T17:39:47Z"}, "message": "improve unused doc comment diagnostic reporting\n\nReport all unused attributes on a given doc comment instead of just the\nfirst one, and extend the span of sugared doc comments to encompass the\nwhole comment.", "tree": {"sha": "4d695838b5065d254d2b952bb77a51f93acce9f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d695838b5065d254d2b952bb77a51f93acce9f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/018d4d265fb40ea4301da5dc339bff962a6faa57", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlyCqOMWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdBjPB/9oI6RnJnLeD8TiQYJbbwBj4iQT\nOd4tVF/u7wtPBaYRtlSI+SD5ZlAXp7ODQVzgPImXpK7GNZIP91VOitvE9gdh2BMC\n+jx9MIafsm2/vpVHJrm89UdEex1d/gt98wg4y02c5RbfVZyiRaAPOAsP7RBchUwA\nC4rMM5aHTHaGGmwQgS7uZx6rfqKQpOmQAlvzRvKbK7nCvNt9vrAgOQ/zTcB/K2xw\n6xDi7XAmf1vnnk45cH0Rcij/ZdFi4HtYwHTBEj1t78eZoBttlBskcfm/l4V+vXwD\n6uM53n/0oAhzdw7eFFNZo2YBIri3J5sjELkovh71e2wiyKrlu1y+0l7E+yDL\n=hPiU\n-----END PGP SIGNATURE-----", "payload": "tree 4d695838b5065d254d2b952bb77a51f93acce9f3\nparent 2a65cbeea78c2c79b1030a0012cdea475104a44f\nauthor Andy Russell <arussell123@gmail.com> 1548269083 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1552066787 -0500\n\nimprove unused doc comment diagnostic reporting\n\nReport all unused attributes on a given doc comment instead of just the\nfirst one, and extend the span of sugared doc comments to encompass the\nwhole comment.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/018d4d265fb40ea4301da5dc339bff962a6faa57", "html_url": "https://github.com/rust-lang/rust/commit/018d4d265fb40ea4301da5dc339bff962a6faa57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/018d4d265fb40ea4301da5dc339bff962a6faa57/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a65cbeea78c2c79b1030a0012cdea475104a44f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a65cbeea78c2c79b1030a0012cdea475104a44f", "html_url": "https://github.com/rust-lang/rust/commit/2a65cbeea78c2c79b1030a0012cdea475104a44f"}], "stats": {"total": 73, "additions": 58, "deletions": 15}, "files": [{"sha": "284bfcd4014911f68530c7847e7e670ae2bb53e6", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/018d4d265fb40ea4301da5dc339bff962a6faa57/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018d4d265fb40ea4301da5dc339bff962a6faa57/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=018d4d265fb40ea4301da5dc339bff962a6faa57", "patch": "@@ -802,27 +802,50 @@ impl LintPass for UnusedDocComment {\n }\n \n impl UnusedDocComment {\n-    fn warn_if_doc<'a, 'tcx,\n-                   I: Iterator<Item=&'a ast::Attribute>,\n-                   C: LintContext<'tcx>>(&self, mut attrs: I, cx: &C) {\n-        if let Some(attr) = attrs.find(|a| a.is_value_str() && a.check_name(\"doc\")) {\n-            cx.struct_span_lint(UNUSED_DOC_COMMENTS, attr.span, \"doc comment not used by rustdoc\")\n-              .emit();\n+    fn warn_if_doc(&self, cx: &EarlyContext, attrs: &[ast::Attribute]) {\n+        let mut attrs = attrs.into_iter().peekable();\n+\n+        // Accumulate a single span for sugared doc comments.\n+        let mut sugared_span: Option<Span> = None;\n+\n+        while let Some(attr) = attrs.next() {\n+            if attr.is_sugared_doc {\n+                sugared_span = Some(\n+                    sugared_span.map_or_else(\n+                        || attr.span,\n+                        |span| span.with_hi(attr.span.hi()),\n+                    ),\n+                );\n+            }\n+\n+            if attrs.peek().map(|next_attr| next_attr.is_sugared_doc).unwrap_or_default() {\n+                continue;\n+            }\n+\n+            let span = sugared_span.take().unwrap_or_else(|| attr.span);\n+\n+            if attr.name() == \"doc\" {\n+                cx.struct_span_lint(\n+                    UNUSED_DOC_COMMENTS,\n+                    span,\n+                    \"doc comment not used by rustdoc\",\n+                ).emit();\n+            }\n         }\n     }\n }\n \n impl EarlyLintPass for UnusedDocComment {\n     fn check_local(&mut self, cx: &EarlyContext<'_>, decl: &ast::Local) {\n-        self.warn_if_doc(decl.attrs.iter(), cx);\n+        self.warn_if_doc(cx, &decl.attrs);\n     }\n \n     fn check_arm(&mut self, cx: &EarlyContext<'_>, arm: &ast::Arm) {\n-        self.warn_if_doc(arm.attrs.iter(), cx);\n+        self.warn_if_doc(cx, &arm.attrs);\n     }\n \n     fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &ast::Expr) {\n-        self.warn_if_doc(expr.attrs.iter(), cx);\n+        self.warn_if_doc(cx, &expr.attrs);\n     }\n }\n "}, {"sha": "e8a0e3c10d2227ab5ea57b7ccef3f9b2a9e0e028", "filename": "src/test/ui/useless_comment.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/018d4d265fb40ea4301da5dc339bff962a6faa57/src%2Ftest%2Fui%2Fuseless_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018d4d265fb40ea4301da5dc339bff962a6faa57/src%2Ftest%2Fui%2Fuseless_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuseless_comment.rs?ref=018d4d265fb40ea4301da5dc339bff962a6faa57", "patch": "@@ -4,7 +4,9 @@ fn foo() {\n     /// a //~ ERROR doc comment not used by rustdoc\n     let x = 12;\n \n-    /// b //~ doc comment not used by rustdoc\n+    /// multi-line //~ doc comment not used by rustdoc\n+    /// doc comment\n+    /// that is unused\n     match x {\n         /// c //~ ERROR doc comment not used by rustdoc\n         1 => {},\n@@ -13,6 +15,10 @@ fn foo() {\n \n     /// foo //~ ERROR doc comment not used by rustdoc\n     unsafe {}\n+\n+    #[doc = \"foo\"] //~ ERROR doc comment not used by rustdoc\n+    #[doc = \"bar\"] //~ ERROR doc comment not used by rustdoc\n+    3;\n }\n \n fn main() {"}, {"sha": "a284c08f47acee994426142f1b7512bb44a70b4b", "filename": "src/test/ui/useless_comment.stderr", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/018d4d265fb40ea4301da5dc339bff962a6faa57/src%2Ftest%2Fui%2Fuseless_comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/018d4d265fb40ea4301da5dc339bff962a6faa57/src%2Ftest%2Fui%2Fuseless_comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuseless_comment.stderr?ref=018d4d265fb40ea4301da5dc339bff962a6faa57", "patch": "@@ -13,20 +13,34 @@ LL | #![deny(unused_doc_comments)]\n error: doc comment not used by rustdoc\n   --> $DIR/useless_comment.rs:7:5\n    |\n-LL |     /// b //~ doc comment not used by rustdoc\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | /     /// multi-line //~ doc comment not used by rustdoc\n+LL | |     /// doc comment\n+LL | |     /// that is unused\n+   | |______________________^\n \n error: doc comment not used by rustdoc\n-  --> $DIR/useless_comment.rs:9:9\n+  --> $DIR/useless_comment.rs:11:9\n    |\n LL |         /// c //~ ERROR doc comment not used by rustdoc\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: doc comment not used by rustdoc\n-  --> $DIR/useless_comment.rs:14:5\n+  --> $DIR/useless_comment.rs:16:5\n    |\n LL |     /// foo //~ ERROR doc comment not used by rustdoc\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: doc comment not used by rustdoc\n+  --> $DIR/useless_comment.rs:19:5\n+   |\n+LL |     #[doc = \"foo\"] //~ ERROR doc comment not used by rustdoc\n+   |     ^^^^^^^^^^^^^^\n+\n+error: doc comment not used by rustdoc\n+  --> $DIR/useless_comment.rs:20:5\n+   |\n+LL |     #[doc = \"bar\"] //~ ERROR doc comment not used by rustdoc\n+   |     ^^^^^^^^^^^^^^\n+\n+error: aborting due to 6 previous errors\n "}]}