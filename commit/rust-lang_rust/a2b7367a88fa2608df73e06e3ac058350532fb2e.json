{"sha": "a2b7367a88fa2608df73e06e3ac058350532fb2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYjczNjdhODhmYTI2MDhkZjczZTA2ZTNhYzA1ODM1MDUzMmZiMmU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-27T23:14:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:01:58Z"}, "message": "libsyntax: De-`@mut` `HandlerT::err_count`", "tree": {"sha": "88f6ae1cd83d504d24a2bf38abe6c3e60f9734b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88f6ae1cd83d504d24a2bf38abe6c3e60f9734b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2b7367a88fa2608df73e06e3ac058350532fb2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b7367a88fa2608df73e06e3ac058350532fb2e", "html_url": "https://github.com/rust-lang/rust/commit/a2b7367a88fa2608df73e06e3ac058350532fb2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2b7367a88fa2608df73e06e3ac058350532fb2e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d347d5a76234dcbaf576620732c93dd876cc2e99", "url": "https://api.github.com/repos/rust-lang/rust/commits/d347d5a76234dcbaf576620732c93dd876cc2e99", "html_url": "https://github.com/rust-lang/rust/commit/d347d5a76234dcbaf576620732c93dd876cc2e99"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "51962aff78195791d832fc55332f6a6eb467443f", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a2b7367a88fa2608df73e06e3ac058350532fb2e/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b7367a88fa2608df73e06e3ac058350532fb2e/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=a2b7367a88fa2608df73e06e3ac058350532fb2e", "patch": "@@ -11,6 +11,7 @@\n use codemap::{Pos, Span};\n use codemap;\n \n+use std::cell::Cell;\n use std::io;\n use std::io::stdio::StdWriter;\n use std::local_data;\n@@ -64,7 +65,7 @@ impl SpanHandler {\n // (fatal, bug, unimpl) may cause immediate exit,\n // others log errors for later reporting.\n pub struct Handler {\n-    err_count: uint,\n+    err_count: Cell<uint>,\n     emit: @Emitter,\n }\n \n@@ -78,22 +79,22 @@ impl Handler {\n         self.bump_err_count();\n     }\n     pub fn bump_err_count(@mut self) {\n-        self.err_count += 1u;\n+        self.err_count.set(self.err_count.get() + 1u);\n     }\n     pub fn err_count(@mut self) -> uint {\n-        self.err_count\n+        self.err_count.get()\n     }\n     pub fn has_errors(@mut self) -> bool {\n-        self.err_count > 0u\n+        self.err_count.get()> 0u\n     }\n     pub fn abort_if_errors(@mut self) {\n         let s;\n-        match self.err_count {\n+        match self.err_count.get() {\n           0u => return,\n           1u => s = ~\"aborting due to previous error\",\n           _  => {\n             s = format!(\"aborting due to {} previous errors\",\n-                     self.err_count);\n+                     self.err_count.get());\n           }\n         }\n         self.fatal(s);\n@@ -138,7 +139,7 @@ pub fn mk_handler(emitter: Option<@Emitter>) -> @mut Handler {\n     };\n \n     @mut Handler {\n-        err_count: 0,\n+        err_count: Cell::new(0),\n         emit: emit,\n     }\n }"}]}