{"sha": "fc7d8faba87716bbcaa43c3747fb8a98dc0c041a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjN2Q4ZmFiYTg3NzE2YmJjYWE0M2MzNzQ3ZmI4YTk4ZGMwYzA0MWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-02T18:59:32Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-02T19:22:00Z"}, "message": "Handle recursive obligations without exiting the inference probe\n\nConflicts:\n\tsrc/librustc/middle/traits/select.rs", "tree": {"sha": "93f058806607737a57a80477f66004ea5ef48b4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93f058806607737a57a80477f66004ea5ef48b4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc7d8faba87716bbcaa43c3747fb8a98dc0c041a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc7d8faba87716bbcaa43c3747fb8a98dc0c041a", "html_url": "https://github.com/rust-lang/rust/commit/fc7d8faba87716bbcaa43c3747fb8a98dc0c041a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc7d8faba87716bbcaa43c3747fb8a98dc0c041a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45468f37c85adb6e1339af33c2f18770b4ac9dac", "url": "https://api.github.com/repos/rust-lang/rust/commits/45468f37c85adb6e1339af33c2f18770b4ac9dac", "html_url": "https://github.com/rust-lang/rust/commit/45468f37c85adb6e1339af33c2f18770b4ac9dac"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "a7eb883f337edc3c3033c8b7085579244fa24c5d", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fc7d8faba87716bbcaa43c3747fb8a98dc0c041a/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc7d8faba87716bbcaa43c3747fb8a98dc0c041a/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=fc7d8faba87716bbcaa43c3747fb8a98dc0c041a", "patch": "@@ -338,24 +338,21 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             }\n \n             ty::Predicate::Projection(ref data) => {\n-                let result = self.infcx.probe(|_| {\n+                self.infcx.probe(|_| {\n                     let project_obligation = obligation.with(data.clone());\n-                    project::poly_project_and_unify_type(self, &project_obligation)\n-                });\n-                match result {\n-                    Ok(Some(_subobligations)) => {\n-                        // TODO we should evaluate _subobligations, but doing so leads to an ICE\n-                        // self.evaluate_predicates_recursively(previous_stack,\n-                        //                                      subobligations.iter())\n-                        EvaluatedToAmbig\n-                    }\n-                    Ok(None) => {\n-                        EvaluatedToAmbig\n-                    }\n-                    Err(_) => {\n-                        EvaluatedToErr(Unimplemented)\n+                    match project::poly_project_and_unify_type(self, &project_obligation) {\n+                        Ok(Some(subobligations)) => {\n+                            self.evaluate_predicates_recursively(previous_stack,\n+                                                                 subobligations.iter())\n+                        }\n+                        Ok(None) => {\n+                            EvaluatedToAmbig\n+                        }\n+                        Err(_) => {\n+                            EvaluatedToErr(Unimplemented)\n+                        }\n                     }\n-                }\n+                })\n             }\n         }\n     }"}]}