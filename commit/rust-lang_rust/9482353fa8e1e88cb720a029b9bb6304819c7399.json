{"sha": "9482353fa8e1e88cb720a029b9bb6304819c7399", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ODIzNTNmYThlMWU4OGNiNzIwYTAyOWI5YmI2MzA0ODE5YzczOTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-02-28T07:57:54Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-03-08T21:59:20Z"}, "message": "Properly handle turbofishes in qualifiers", "tree": {"sha": "6438293e05f70af6106b4e421ec0afe7d586632c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6438293e05f70af6106b4e421ec0afe7d586632c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9482353fa8e1e88cb720a029b9bb6304819c7399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9482353fa8e1e88cb720a029b9bb6304819c7399", "html_url": "https://github.com/rust-lang/rust/commit/9482353fa8e1e88cb720a029b9bb6304819c7399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9482353fa8e1e88cb720a029b9bb6304819c7399/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d386481fac65e988fa4d13c1bc8d4ddb2bc490c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d386481fac65e988fa4d13c1bc8d4ddb2bc490c6", "html_url": "https://github.com/rust-lang/rust/commit/d386481fac65e988fa4d13c1bc8d4ddb2bc490c6"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "1dc085199f37f1807ebee83e3b1c1354bec68526", "filename": "crates/hir_def/src/path.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fhir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fhir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath.rs?ref=9482353fa8e1e88cb720a029b9bb6304819c7399", "patch": "@@ -44,6 +44,10 @@ pub enum ImportAlias {\n }\n \n impl ModPath {\n+    pub fn from_src_unhygienic(path: ast::Path) -> Option<ModPath> {\n+        lower::lower_path(path, &Hygiene::new_unhygienic()).map(|it| it.mod_path)\n+    }\n+\n     pub fn from_src(path: ast::Path, hygiene: &Hygiene) -> Option<ModPath> {\n         lower::lower_path(path, hygiene).map(|it| it.mod_path)\n     }"}, {"sha": "e9993a7cc9f9f28208566888df1b423ebc46cca4", "filename": "crates/ide_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=9482353fa8e1e88cb720a029b9bb6304819c7399", "patch": "@@ -242,7 +242,7 @@ mod tests {\n             }\n             \",\n             r\"\n-            use PubMod3::PubStruct;\n+            use PubMod1::PubStruct;\n \n             PubStruct\n "}, {"sha": "261178448641ceef204f9a3e7bc592e682a0a1d1", "filename": "crates/ide_assists/src/handlers/qualify_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fqualify_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fqualify_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fqualify_path.rs?ref=9482353fa8e1e88cb720a029b9bb6304819c7399", "patch": "@@ -313,7 +313,7 @@ mod tests {\n             }\n             \",\n             r\"\n-            PubMod3::PubStruct\n+            PubMod1::PubStruct\n \n             pub mod PubMod1 {\n                 pub struct PubStruct;"}, {"sha": "af49fdd2626db19f73b8aed81105e26dec50b079", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=9482353fa8e1e88cb720a029b9bb6304819c7399", "patch": "@@ -669,8 +669,8 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                ct SPECIAL_CONST (dep::test_mod::TestTrait) DEPRECATED\n                 fn weird_function() (dep::test_mod::TestTrait) -> () DEPRECATED\n+                ct SPECIAL_CONST (dep::test_mod::TestTrait) DEPRECATED\n             \"#]],\n         );\n     }"}, {"sha": "2e7a183d1c3ca0db82408f6f313a603734eba3f1", "filename": "crates/ide_db/src/helpers/import_assets.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9482353fa8e1e88cb720a029b9bb6304819c7399/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs?ref=9482353fa8e1e88cb720a029b9bb6304819c7399", "patch": "@@ -43,7 +43,7 @@ pub struct PathImportCandidate {\n #[derive(Debug)]\n pub enum Qualifier {\n     Absent,\n-    FirstSegmentUnresolved(ast::PathSegment, ast::Path),\n+    FirstSegmentUnresolved(ast::NameRef, ModPath),\n }\n \n #[derive(Debug)]\n@@ -297,8 +297,7 @@ fn path_applicable_imports(\n         Qualifier::FirstSegmentUnresolved(first_segment, qualifier) => (first_segment, qualifier),\n     };\n \n-    // TODO kb need to remove turbofish from the qualifier, maybe use the segments instead?\n-    // TODO kb sorting is changed now, return back?\n+    // TODO kb zz.syntax().ast_node() <- two options are now proposed despite the trait being imported\n     let unresolved_qualifier_string = unresolved_qualifier.to_string();\n     let unresolved_first_segment_string = unresolved_first_segment.to_string();\n \n@@ -525,12 +524,15 @@ fn path_import_candidate(\n         Some(qualifier) => match sema.resolve_path(&qualifier) {\n             None => {\n                 let qualifier_start =\n-                    qualifier.syntax().descendants().find_map(ast::PathSegment::cast)?;\n+                    qualifier.syntax().descendants().find_map(ast::NameRef::cast)?;\n                 let qualifier_start_path =\n                     qualifier_start.syntax().ancestors().find_map(ast::Path::cast)?;\n                 if sema.resolve_path(&qualifier_start_path).is_none() {\n                     ImportCandidate::Path(PathImportCandidate {\n-                        qualifier: Qualifier::FirstSegmentUnresolved(qualifier_start, qualifier),\n+                        qualifier: Qualifier::FirstSegmentUnresolved(\n+                            qualifier_start,\n+                            ModPath::from_src_unhygienic(qualifier)?,\n+                        ),\n                         name,\n                     })\n                 } else {"}]}