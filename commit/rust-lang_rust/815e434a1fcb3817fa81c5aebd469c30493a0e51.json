{"sha": "815e434a1fcb3817fa81c5aebd469c30493a0e51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNWU0MzRhMWZjYjM4MTdmYTgxYzVhZWJkNDY5YzMwNDkzYTBlNTE=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-29T23:18:55Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-29T23:25:09Z"}, "message": "Move constant write checks to temporary_assignment lint\n\nThey make more sense here", "tree": {"sha": "47fe4be7d3f8229b440852c87e0aa4dd076ab284", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47fe4be7d3f8229b440852c87e0aa4dd076ab284"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/815e434a1fcb3817fa81c5aebd469c30493a0e51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/815e434a1fcb3817fa81c5aebd469c30493a0e51", "html_url": "https://github.com/rust-lang/rust/commit/815e434a1fcb3817fa81c5aebd469c30493a0e51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/815e434a1fcb3817fa81c5aebd469c30493a0e51/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff", "html_url": "https://github.com/rust-lang/rust/commit/ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff"}], "stats": {"total": 225, "additions": 124, "deletions": 101}, "files": [{"sha": "c2cffadf6c1209ba558e7a07ba5aa782bfbbb116", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/815e434a1fcb3817fa81c5aebd469c30493a0e51/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/815e434a1fcb3817fa81c5aebd469c30493a0e51/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=815e434a1fcb3817fa81c5aebd469c30493a0e51", "patch": "@@ -98,20 +98,6 @@ fn has_no_effect(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n                     false\n                 }\n         },\n-        ExprKind::Assign(ref left, ref right) => {\n-            if has_no_effect(cx, left) {\n-                let mut left = left;\n-                while let ExprKind::Field(f, _) | ExprKind::Index(f, _) = &left.node {\n-                    left = f;\n-                }\n-                if let ExprKind::Path(qpath) = &left.node {\n-                    if let Def::Const(..) = cx.tables.qpath_def(qpath, left.hir_id) {\n-                        return has_no_effect(cx, right);\n-                    }\n-                }\n-            }\n-            false\n-        },\n         _ => false,\n     }\n }"}, {"sha": "381efd5713569be0b77d985cb9b4c6ee9167ca7a", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/815e434a1fcb3817fa81c5aebd469c30493a0e51/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/815e434a1fcb3817fa81c5aebd469c30493a0e51/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=815e434a1fcb3817fa81c5aebd469c30493a0e51", "patch": "@@ -9,6 +9,7 @@\n \n use crate::utils::is_adjusted;\n use crate::utils::span_lint;\n+use rustc::hir::def::Def;\n use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n@@ -31,9 +32,16 @@ declare_clippy_lint! {\n     \"assignments to temporaries\"\n }\n \n-fn is_temporary(expr: &Expr) -> bool {\n-    match expr.node {\n+fn is_temporary(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n+    match &expr.node {\n         ExprKind::Struct(..) | ExprKind::Tup(..) => true,\n+        ExprKind::Path(qpath) => {\n+            if let Def::Const(..) = cx.tables.qpath_def(qpath, expr.hir_id) {\n+                true\n+            } else {\n+                false\n+            }\n+        },\n         _ => false,\n     }\n }\n@@ -49,11 +57,13 @@ impl LintPass for Pass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n-        if let ExprKind::Assign(ref target, _) = expr.node {\n-            if let ExprKind::Field(ref base, _) = target.node {\n-                if is_temporary(base) && !is_adjusted(cx, base) {\n-                    span_lint(cx, TEMPORARY_ASSIGNMENT, expr.span, \"assignment to temporary\");\n-                }\n+        if let ExprKind::Assign(target, _) = &expr.node {\n+            let mut base = target;\n+            while let ExprKind::Field(f, _) | ExprKind::Index(f, _) = &base.node {\n+                base = f;\n+            }\n+            if is_temporary(cx, base) && !is_adjusted(cx, base) {\n+                span_lint(cx, TEMPORARY_ASSIGNMENT, expr.span, \"assignment to temporary\");\n             }\n         }\n     }"}, {"sha": "6b51c50dcde9456455373ea886c5381dec621e9b", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=815e434a1fcb3817fa81c5aebd469c30493a0e51", "patch": "@@ -67,21 +67,6 @@ unsafe fn unsafe_fn() -> i32 {\n     0\n }\n \n-struct A(i32);\n-struct B {\n-    field: i32,\n-}\n-struct C {\n-    b: B,\n-}\n-struct D {\n-    arr: [i32; 1],\n-}\n-const A_CONST: A = A(1);\n-const B: B = B { field: 1 };\n-const C: C = C { b: B { field: 1 } };\n-const D: D = D { arr: [1] };\n-\n fn main() {\n     let s = get_struct();\n     let s2 = get_struct();\n@@ -114,10 +99,6 @@ fn main() {\n     || x += 5;\n     let s: String = \"foo\".into();\n     FooString { s: s };\n-    A_CONST.0 = 2;\n-    B.field = 2;\n-    C.b.field = 2;\n-    D.arr[0] = 2;\n \n     // Do not warn\n     get_number();\n@@ -127,12 +108,4 @@ fn main() {\n     DropTuple(0);\n     DropEnum::Tuple(0);\n     DropEnum::Struct { field: 0 };\n-    let mut a_mut = A(1);\n-    a_mut.0 = 2;\n-    let mut b_mut = B { field: 1 };\n-    b_mut.field = 2;\n-    let mut c_mut = C { b: B { field: 1 } };\n-    c_mut.b.field = 2;\n-    let mut d_mut = D { arr: [1] };\n-    d_mut.arr[0] = 2;\n }"}, {"sha": "cc3b069f0b52ceea0f5089b63a223cd3f37ade1a", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 26, "deletions": 50, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=815e434a1fcb3817fa81c5aebd469c30493a0e51", "patch": "@@ -1,178 +1,154 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:89:5\n+  --> $DIR/no_effect.rs:74:5\n    |\n LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:90:5\n+  --> $DIR/no_effect.rs:75:5\n    |\n LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:91:5\n+  --> $DIR/no_effect.rs:76:5\n    |\n LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:92:5\n+  --> $DIR/no_effect.rs:77:5\n    |\n LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:93:5\n+  --> $DIR/no_effect.rs:78:5\n    |\n LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:94:5\n+  --> $DIR/no_effect.rs:79:5\n    |\n LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:80:5\n    |\n LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:96:5\n+  --> $DIR/no_effect.rs:81:5\n    |\n LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:97:5\n+  --> $DIR/no_effect.rs:82:5\n    |\n LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:98:5\n+  --> $DIR/no_effect.rs:83:5\n    |\n LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:99:5\n+  --> $DIR/no_effect.rs:84:5\n    |\n LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:100:5\n+  --> $DIR/no_effect.rs:85:5\n    |\n LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:101:5\n+  --> $DIR/no_effect.rs:86:5\n    |\n LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:102:5\n+  --> $DIR/no_effect.rs:87:5\n    |\n LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:103:5\n+  --> $DIR/no_effect.rs:88:5\n    |\n LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:104:5\n+  --> $DIR/no_effect.rs:89:5\n    |\n LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:105:5\n+  --> $DIR/no_effect.rs:90:5\n    |\n LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:106:5\n+  --> $DIR/no_effect.rs:91:5\n    |\n LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:108:5\n+  --> $DIR/no_effect.rs:93:5\n    |\n LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:109:5\n+  --> $DIR/no_effect.rs:94:5\n    |\n LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:110:5\n+  --> $DIR/no_effect.rs:95:5\n    |\n LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:111:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:112:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:114:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:116:5\n+  --> $DIR/no_effect.rs:101:5\n    |\n LL |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: statement with no effect\n-  --> $DIR/no_effect.rs:117:5\n-   |\n-LL |     A_CONST.0 = 2;\n-   |     ^^^^^^^^^^^^^^\n-\n-error: statement with no effect\n-  --> $DIR/no_effect.rs:118:5\n-   |\n-LL |     B.field = 2;\n-   |     ^^^^^^^^^^^^\n-\n-error: statement with no effect\n-  --> $DIR/no_effect.rs:119:5\n-   |\n-LL |     C.b.field = 2;\n-   |     ^^^^^^^^^^^^^^\n-\n-error: statement with no effect\n-  --> $DIR/no_effect.rs:120:5\n-   |\n-LL |     D.arr[0] = 2;\n-   |     ^^^^^^^^^^^^^\n-\n-error: aborting due to 29 previous errors\n+error: aborting due to 25 previous errors\n "}, {"sha": "5581f5be766de572e5f24665d28ac2bcb7006696", "filename": "tests/ui/temporary_assignment.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftemporary_assignment.rs?ref=815e434a1fcb3817fa81c5aebd469c30493a0e51", "patch": "@@ -11,10 +11,16 @@\n \n use std::ops::{Deref, DerefMut};\n \n+struct TupleStruct(i32);\n+\n struct Struct {\n     field: i32,\n }\n \n+struct MultiStruct {\n+    structure: Struct,\n+}\n+\n struct Wrapper<'a> {\n     inner: &'a mut Struct,\n }\n@@ -32,15 +38,47 @@ impl<'a> DerefMut for Wrapper<'a> {\n     }\n }\n \n+struct ArrayStruct {\n+    array: [i32; 1],\n+}\n+\n+const A: TupleStruct = TupleStruct(1);\n+const B: Struct = Struct { field: 1 };\n+const C: MultiStruct = MultiStruct {\n+    structure: Struct { field: 1 },\n+};\n+const D: ArrayStruct = ArrayStruct { array: [1] };\n+\n fn main() {\n     let mut s = Struct { field: 0 };\n     let mut t = (0, 0);\n \n     Struct { field: 0 }.field = 1;\n+    MultiStruct {\n+        structure: Struct { field: 0 },\n+    }\n+    .structure\n+    .field = 1;\n+    ArrayStruct { array: [0] }.array[0] = 1;\n     (0, 0).0 = 1;\n \n+    A.0 = 2;\n+    B.field = 2;\n+    C.structure.field = 2;\n+    D.array[0] = 2;\n+\n     // no error\n     s.field = 1;\n     t.0 = 1;\n     Wrapper { inner: &mut s }.field = 1;\n+    let mut a_mut = TupleStruct(1);\n+    a_mut.0 = 2;\n+    let mut b_mut = Struct { field: 1 };\n+    b_mut.field = 2;\n+    let mut c_mut = MultiStruct {\n+        structure: Struct { field: 1 },\n+    };\n+    c_mut.structure.field = 2;\n+    let mut d_mut = ArrayStruct { array: [1] };\n+    d_mut.array[0] = 2;\n }"}, {"sha": "13ece2858b994d197e4faf020ebc4bb082b8c12e", "filename": "tests/ui/temporary_assignment.stderr", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Ftemporary_assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/815e434a1fcb3817fa81c5aebd469c30493a0e51/tests%2Fui%2Ftemporary_assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftemporary_assignment.stderr?ref=815e434a1fcb3817fa81c5aebd469c30493a0e51", "patch": "@@ -1,16 +1,56 @@\n error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:39:5\n+  --> $DIR/temporary_assignment.rs:56:5\n    |\n LL |     Struct { field: 0 }.field = 1;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::temporary-assignment` implied by `-D warnings`\n \n error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:40:5\n+  --> $DIR/temporary_assignment.rs:57:5\n+   |\n+LL | /     MultiStruct {\n+LL | |         structure: Struct { field: 0 },\n+LL | |     }\n+LL | |     .structure\n+LL | |     .field = 1;\n+   | |______________^\n+\n+error: assignment to temporary\n+  --> $DIR/temporary_assignment.rs:62:5\n+   |\n+LL |     ArrayStruct { array: [0] }.array[0] = 1;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: assignment to temporary\n+  --> $DIR/temporary_assignment.rs:63:5\n    |\n LL |     (0, 0).0 = 1;\n    |     ^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: assignment to temporary\n+  --> $DIR/temporary_assignment.rs:65:5\n+   |\n+LL |     A.0 = 2;\n+   |     ^^^^^^^\n+\n+error: assignment to temporary\n+  --> $DIR/temporary_assignment.rs:66:5\n+   |\n+LL |     B.field = 2;\n+   |     ^^^^^^^^^^^\n+\n+error: assignment to temporary\n+  --> $DIR/temporary_assignment.rs:67:5\n+   |\n+LL |     C.structure.field = 2;\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: assignment to temporary\n+  --> $DIR/temporary_assignment.rs:68:5\n+   |\n+LL |     D.array[0] = 2;\n+   |     ^^^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n "}]}