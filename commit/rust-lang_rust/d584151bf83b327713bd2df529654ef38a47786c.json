{"sha": "d584151bf83b327713bd2df529654ef38a47786c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODQxNTFiZjgzYjMyNzcxM2JkMmRmNTI5NjU0ZWYzOGE0Nzc4NmM=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-10T02:13:13Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-16T19:20:47Z"}, "message": "fix formatting", "tree": {"sha": "39956af2930d0519a82933b5059f614e03a90c0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39956af2930d0519a82933b5059f614e03a90c0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d584151bf83b327713bd2df529654ef38a47786c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d584151bf83b327713bd2df529654ef38a47786c", "html_url": "https://github.com/rust-lang/rust/commit/d584151bf83b327713bd2df529654ef38a47786c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d584151bf83b327713bd2df529654ef38a47786c/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5bd5db1e3356512c76cdec231071c870f710ae2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5bd5db1e3356512c76cdec231071c870f710ae2", "html_url": "https://github.com/rust-lang/rust/commit/d5bd5db1e3356512c76cdec231071c870f710ae2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "423d2a7b5323eafbd8f2a9af0489f3c4b00fc4eb", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d584151bf83b327713bd2df529654ef38a47786c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d584151bf83b327713bd2df529654ef38a47786c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d584151bf83b327713bd2df529654ef38a47786c", "patch": "@@ -1993,10 +1993,10 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n     }\n \n     fn load_extern_prelude_crate_if_needed(&mut self, ident: Ident) -> Module<'a> {\n-                let crate_id = self.crate_loader.process_path_extern(ident.name, ident.span);\n-                let crate_root = self.get_module(DefId { krate: crate_id, index: CRATE_DEF_INDEX });\n-                self.populate_module_if_necessary(&crate_root);\n-                crate_root\n+        let crate_id = self.crate_loader.process_path_extern(ident.name, ident.span);\n+        let crate_root = self.get_module(DefId { krate: crate_id, index: CRATE_DEF_INDEX });\n+        self.populate_module_if_necessary(&crate_root);\n+        crate_root\n     }\n \n     fn hygienic_lexical_parent(&mut self, module: Module<'a>, span: &mut Span)"}]}