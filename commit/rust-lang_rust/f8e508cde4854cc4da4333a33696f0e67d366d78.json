{"sha": "f8e508cde4854cc4da4333a33696f0e67d366d78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZTUwOGNkZTQ4NTRjYzRkYTQzMzNhMzM2OTZmMGU2N2QzNjZkNzg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-17T13:20:42Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-21T10:27:29Z"}, "message": "Fix a recently introduces regression", "tree": {"sha": "1d56e1dadf314226a98198c28337530568be8c62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d56e1dadf314226a98198c28337530568be8c62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8e508cde4854cc4da4333a33696f0e67d366d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e508cde4854cc4da4333a33696f0e67d366d78", "html_url": "https://github.com/rust-lang/rust/commit/f8e508cde4854cc4da4333a33696f0e67d366d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8e508cde4854cc4da4333a33696f0e67d366d78/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d34ec18c7d7e574553f6347ecf08e1e1c45c13d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d", "html_url": "https://github.com/rust-lang/rust/commit/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "646a671d4a2ce50494cc15dc61324fbab8a50356", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=f8e508cde4854cc4da4333a33696f0e67d366d78", "patch": "@@ -518,7 +518,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n \n                 // Only allow statics (not consts) to refer to other statics.\n                 if self.mode == Mode::Static || self.mode == Mode::StaticMut {\n-                    if context.is_mutating_use() {\n+                    if self.mode == Mode::Static && context.is_mutating_use() {\n                         // this is not strictly necessary as miri will also bail out\n                         // For interior mutability we can't really catch this statically as that\n                         // goes through raw pointers and intermediate temporaries, so miri has"}, {"sha": "27e1a111163b15999cc7c9f34718bc6f40d4cf2b", "filename": "src/test/ui/consts/static_mut_containing_mut_ref.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref.rs?ref=f8e508cde4854cc4da4333a33696f0e67d366d78", "patch": "@@ -0,0 +1,7 @@\n+// compile-pass\n+\n+static mut STDERR_BUFFER_SPACE: [u8; 42] = [0u8; 42];\n+\n+pub static mut STDERR_BUFFER: *mut [u8] = unsafe { &mut STDERR_BUFFER_SPACE };\n+\n+fn main() {}"}, {"sha": "aa9bfb4aeab2d27be4a5d77f9decf2689d69ef11", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs?ref=f8e508cde4854cc4da4333a33696f0e67d366d78", "patch": "@@ -0,0 +1,8 @@\n+#![feature(const_let)]\n+\n+static mut STDERR_BUFFER_SPACE: u8 = 0;\n+\n+pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n+//~^ references in statics may only refer to immutable values\n+\n+fn main() {}"}, {"sha": "72923431c90ed5ef8846ba5377d3cbe4fed45b32", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stderr?ref=f8e508cde4854cc4da4333a33696f0e67d366d78", "patch": "@@ -0,0 +1,9 @@\n+error[E0017]: references in statics may only refer to immutable values\n+  --> $DIR/static_mut_containing_mut_ref2.rs:5:46\n+   |\n+LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0017`."}, {"sha": "983b5d48e60fc0a9a988dfb9b0d59f294857de38", "filename": "src/test/ui/write-to-static-mut-in-static.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.rs?ref=f8e508cde4854cc4da4333a33696f0e67d366d78", "patch": "@@ -12,10 +12,10 @@\n \n pub static mut A: u32 = 0;\n pub static mut B: () = unsafe { A = 1; };\n-//~^ ERROR cannot mutate statics in the initializer of another static\n+//~^ ERROR could not evaluate static initializer\n \n pub static mut C: u32 = unsafe { C = 1; 0 };\n-//~^ ERROR cannot mutate statics in the initializer of another static\n+//~^ ERROR cycle detected\n \n pub static D: u32 = D;\n "}, {"sha": "335f849fb2472604ee970ed46e4fa490af1d6024", "filename": "src/test/ui/write-to-static-mut-in-static.stderr", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8e508cde4854cc4da4333a33696f0e67d366d78/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwrite-to-static-mut-in-static.stderr?ref=f8e508cde4854cc4da4333a33696f0e67d366d78", "patch": "@@ -1,14 +1,28 @@\n-error: cannot mutate statics in the initializer of another static\n+error[E0080]: could not evaluate static initializer\n   --> $DIR/write-to-static-mut-in-static.rs:14:33\n    |\n LL | pub static mut B: () = unsafe { A = 1; };\n-   |                                 ^^^^^\n+   |                                 ^^^^^ tried to modify a static's initial value from another static's initializer\n \n-error: cannot mutate statics in the initializer of another static\n+error[E0391]: cycle detected when const-evaluating `C`\n   --> $DIR/write-to-static-mut-in-static.rs:17:34\n    |\n LL | pub static mut C: u32 = unsafe { C = 1; 0 };\n    |                                  ^^^^^\n+   |\n+note: ...which requires const-evaluating `C`...\n+  --> $DIR/write-to-static-mut-in-static.rs:17:1\n+   |\n+LL | pub static mut C: u32 = unsafe { C = 1; 0 };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: ...which again requires const-evaluating `C`, completing the cycle\n+note: cycle used when const-evaluating + checking `C`\n+  --> $DIR/write-to-static-mut-in-static.rs:17:1\n+   |\n+LL | pub static mut C: u32 = unsafe { C = 1; 0 };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n \n+Some errors occurred: E0080, E0391.\n+For more information about an error, try `rustc --explain E0080`."}]}