{"sha": "f4c76b193d54eeb88b2c966612679d733536efaf", "node_id": "C_kwDOAAsO6NoAKGY0Yzc2YjE5M2Q1NGVlYjg4YjJjOTY2NjEyNjc5ZDczMzUzNmVmYWY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-05T16:15:30Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-05T16:15:30Z"}, "message": "Be more careful about unresolved exprs in suggestion", "tree": {"sha": "b82cb2914d96086c45ccb2e96d1c3772fc78cec2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b82cb2914d96086c45ccb2e96d1c3772fc78cec2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4c76b193d54eeb88b2c966612679d733536efaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c76b193d54eeb88b2c966612679d733536efaf", "html_url": "https://github.com/rust-lang/rust/commit/f4c76b193d54eeb88b2c966612679d733536efaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4c76b193d54eeb88b2c966612679d733536efaf/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "203c8765ea33c65d888febe0e8219c4bb11b0d89", "url": "https://api.github.com/repos/rust-lang/rust/commits/203c8765ea33c65d888febe0e8219c4bb11b0d89", "html_url": "https://github.com/rust-lang/rust/commit/203c8765ea33c65d888febe0e8219c4bb11b0d89"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "db93cfab2c0dbd6a45508b9c35607b642cfe6c51", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f4c76b193d54eeb88b2c966612679d733536efaf/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c76b193d54eeb88b2c966612679d733536efaf/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=f4c76b193d54eeb88b2c966612679d733536efaf", "patch": "@@ -1482,25 +1482,28 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ident_name: Symbol,\n         }\n \n+        // FIXME: This really should be taking scoping, etc into account.\n         impl<'v> Visitor<'v> for LetVisitor<'v> {\n             fn visit_stmt(&mut self, ex: &'v hir::Stmt<'v>) {\n-                if let hir::StmtKind::Local(hir::Local { pat, init, .. }) = &ex.kind {\n-                    if let Binding(_, _, ident, ..) = pat.kind &&\n-                        ident.name == self.ident_name {\n-                        self.result = *init;\n-                    }\n+                if let hir::StmtKind::Local(hir::Local { pat, init, .. }) = &ex.kind\n+                    && let Binding(_, _, ident, ..) = pat.kind\n+                    && ident.name == self.ident_name\n+                {\n+                    self.result = *init;\n+                } else {\n+                    hir::intravisit::walk_stmt(self, ex);\n                 }\n-                hir::intravisit::walk_stmt(self, ex);\n             }\n         }\n \n         let mut visitor = LetVisitor { result: None, ident_name: seg1.ident.name };\n         visitor.visit_body(&body);\n \n         let parent = self.tcx.hir().get_parent_node(seg1.hir_id);\n-        if let Some(Node::Expr(call_expr)) = self.tcx.hir().find(parent) &&\n-            let Some(expr) = visitor.result {\n-            let self_ty = self.node_ty(expr.hir_id);\n+        if let Some(Node::Expr(call_expr)) = self.tcx.hir().find(parent)\n+            && let Some(expr) = visitor.result\n+            && let Some(self_ty) = self.node_ty_opt(expr.hir_id)\n+        {\n             let probe = self.lookup_probe(\n                 seg2.ident,\n                 self_ty,\n@@ -1513,7 +1516,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     sm.span_extend_while(seg1.ident.span.shrink_to_hi(), |c| c == ':').unwrap(),\n                     \"you may have meant to call an instance method\",\n                     \".\".to_string(),\n-                    Applicability::MaybeIncorrect\n+                    Applicability::MaybeIncorrect,\n                 );\n             }\n         }"}, {"sha": "fb56b394493dc7f553887891d4bd53109e93ed3d", "filename": "src/test/ui/typeck/path-to-method-sugg-unresolved-expr.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4c76b193d54eeb88b2c966612679d733536efaf/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c76b193d54eeb88b2c966612679d733536efaf/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.rs?ref=f4c76b193d54eeb88b2c966612679d733536efaf", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let page_size = page_size::get();\n+    //~^ ERROR failed to resolve: use of undeclared crate or module `page_size`\n+}"}, {"sha": "b01e30be54de0bde80173b4b4ee0cd8136e3f17d", "filename": "src/test/ui/typeck/path-to-method-sugg-unresolved-expr.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4c76b193d54eeb88b2c966612679d733536efaf/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4c76b193d54eeb88b2c966612679d733536efaf/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.stderr?ref=f4c76b193d54eeb88b2c966612679d733536efaf", "patch": "@@ -0,0 +1,9 @@\n+error[E0433]: failed to resolve: use of undeclared crate or module `page_size`\n+  --> $DIR/path-to-method-sugg-unresolved-expr.rs:2:21\n+   |\n+LL |     let page_size = page_size::get();\n+   |                     ^^^^^^^^^ use of undeclared crate or module `page_size`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}