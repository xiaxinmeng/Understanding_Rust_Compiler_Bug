{"sha": "88da6757d7fe75c853767e4615a6255e9466b67a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZGE2NzU3ZDdmZTc1Yzg1Mzc2N2U0NjE1YTYyNTVlOTQ2NmI2N2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T09:02:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T09:02:22Z"}, "message": "Auto merge of #1600 - RalfJung:rustup, r=RalfJung\n\nrustup; make panic output less dependent on stdlib internals", "tree": {"sha": "e73e8c54b134767fce7689ec990af307ee8e7b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e73e8c54b134767fce7689ec990af307ee8e7b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88da6757d7fe75c853767e4615a6255e9466b67a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88da6757d7fe75c853767e4615a6255e9466b67a", "html_url": "https://github.com/rust-lang/rust/commit/88da6757d7fe75c853767e4615a6255e9466b67a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88da6757d7fe75c853767e4615a6255e9466b67a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef4127459c46d4c0c9da70502677e7f69386c4be", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4127459c46d4c0c9da70502677e7f69386c4be", "html_url": "https://github.com/rust-lang/rust/commit/ef4127459c46d4c0c9da70502677e7f69386c4be"}, {"sha": "ddcc4f241e1e9987b050067f4303d0449774b36e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddcc4f241e1e9987b050067f4303d0449774b36e", "html_url": "https://github.com/rust-lang/rust/commit/ddcc4f241e1e9987b050067f4303d0449774b36e"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "44e9a77940d6e7842e6134c694f48d14f233e6f7", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88da6757d7fe75c853767e4615a6255e9466b67a/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/88da6757d7fe75c853767e4615a6255e9466b67a/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=88da6757d7fe75c853767e4615a6255e9466b67a", "patch": "@@ -1 +1 @@\n-8f0fa9d51ff4ad2c0869e660856cd327e79915e9\n+17cc9b6256c95c31944591aec683884fead4e3b6"}, {"sha": "fb596b1d2020c155cbbe7662cba53401cd9b7aab", "filename": "tests/run-pass/backtrace-std.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fbacktrace-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fbacktrace-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbacktrace-std.rs?ref=88da6757d7fe75c853767e4615a6255e9466b67a", "patch": "@@ -1,5 +1,5 @@\n-// normalize-stderr-test \".*/(rust|checkout)/library/\" -> \"RUSTLIB/\"\n-// normalize-stderr-test \"RUSTLIB/(.*):\\d+:\\d+ \"-> \"RUSTLIB/$1:LL:COL \"\n+// normalize-stderr-test \"at .*/(rust|checkout)/library/\" -> \"at RUSTLIB/\"\n+// normalize-stderr-test \"RUSTLIB/(.*):\\d+\"-> \"RUSTLIB/$1:LL\"\n // normalize-stderr-test \"::<.*>\" -> \"\"\n // compile-flags: -Zmiri-disable-isolation\n "}, {"sha": "45c46acc331c914f54cabc56507e6db5f17c6860", "filename": "tests/run-pass/backtrace-std.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fbacktrace-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fbacktrace-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbacktrace-std.stderr?ref=88da6757d7fe75c853767e4615a6255e9466b67a", "patch": "@@ -9,20 +9,20 @@\n    4: main\n              at $DIR/backtrace-std.rs:21\n    5: <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\n-RUSTLIB/core/src/ops/function.rs:227\n+             at RUSTLIB/core/src/ops/function.rs:LL\n    6: std::sys_common::backtrace::__rust_begin_short_backtrace\n-RUSTLIB/std/src/sys_common/backtrace.rs:125\n+             at RUSTLIB/std/src/sys_common/backtrace.rs:LL\n    7: std::rt::lang_start::{closure#0}\n-RUSTLIB/std/src/rt.rs:66\n+             at RUSTLIB/std/src/rt.rs:LL\n    8: std::ops::function::impls::call_once\n-RUSTLIB/core/src/ops/function.rs:259\n+             at RUSTLIB/core/src/ops/function.rs:LL\n    9: std::panicking::r#try::do_call\n-RUSTLIB/std/src/panicking.rs:381\n+             at RUSTLIB/std/src/panicking.rs:LL\n   10: std::panicking::r#try\n-RUSTLIB/std/src/panicking.rs:345\n+             at RUSTLIB/std/src/panicking.rs:LL\n   11: std::panic::catch_unwind\n-RUSTLIB/std/src/panic.rs:382\n+             at RUSTLIB/std/src/panic.rs:LL\n   12: std::rt::lang_start_internal\n-RUSTLIB/std/src/rt.rs:51\n+             at RUSTLIB/std/src/rt.rs:LL\n   13: std::rt::lang_start\n-RUSTLIB/std/src/rt.rs:65\n+             at RUSTLIB/std/src/rt.rs:LL"}, {"sha": "c4c04fece901c4a4c8c5ced4311eacc13cfc5e6a", "filename": "tests/run-pass/panic/catch_panic.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr?ref=88da6757d7fe75c853767e4615a6255e9466b67a", "patch": "@@ -8,21 +8,21 @@ Caught panic message (String): Hello from panic: 2\n thread 'main' panicked at 'Box<Any>', $DIR/catch_panic.rs:LL:27\n Failed to get caught panic message.\n thread 'main' panicked at 'Hello from panic: core', $DIR/catch_panic.rs:LL:27\n-Caught panic message (String): Hello from panic: core\n+Caught panic message (&str): Hello from panic: core\n thread 'main' panicked at 'Hello from panic: 5', $DIR/catch_panic.rs:LL:26\n Caught panic message (String): Hello from panic: 5\n thread 'main' panicked at 'Hello from panic: 6', $DIR/catch_panic.rs:LL:26\n Caught panic message (String): Hello from panic: 6\n thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 4', $DIR/catch_panic.rs:LL:33\n Caught panic message (String): index out of bounds: the len is 3 but the index is 4\n thread 'main' panicked at 'attempt to divide by zero', $DIR/catch_panic.rs:LL:33\n-Caught panic message (String): attempt to divide by zero\n+Caught panic message (&str): attempt to divide by zero\n thread 'main' panicked at 'align_offset: align is not a power-of-two', $LOC\n-Caught panic message (String): align_offset: align is not a power-of-two\n+Caught panic message (&str): align_offset: align is not a power-of-two\n thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:LL:29\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:LL:29\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', $LOC\n-Caught panic message (String): called `Option::unwrap()` on a `None` value\n+Caught panic message (&str): called `Option::unwrap()` on a `None` value\n Success!"}, {"sha": "08ac3a072852283a07ff1fbd226372aab10bc17e", "filename": "tests/run-pass/panic/panic1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fpanic%2Fpanic1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fpanic%2Fpanic1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fpanic1.rs?ref=88da6757d7fe75c853767e4615a6255e9466b67a", "patch": "@@ -1,9 +1,9 @@\n // rustc-env: RUST_BACKTRACE=1\n // compile-flags: -Zmiri-disable-isolation\n-// normalize-stderr-test \".*/(rust|checkout)/library/\" -> \"RUSTLIB/\"\n-// normalize-stderr-test \"RUSTLIB/(.*):\\d+:\\d+ \"-> \"RUSTLIB/$1:LL:COL \"\n+// normalize-stderr-test \"at .*/(rust|checkout)/library/.*\" -> \"at RUSTLIB/$$FILE:LL:COL\"\n // normalize-stderr-test \"::<.*>\" -> \"\"\n \n+\n fn main() {\n     std::panic!(\"panicking from libstd\");\n }"}, {"sha": "e0f1aa5dad70bb42199aa21a6e9742e1a1c99881", "filename": "tests/run-pass/panic/panic1.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fpanic%2Fpanic1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88da6757d7fe75c853767e4615a6255e9466b67a/tests%2Frun-pass%2Fpanic%2Fpanic1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fpanic1.stderr?ref=88da6757d7fe75c853767e4615a6255e9466b67a", "patch": "@@ -1,23 +1,23 @@\n thread 'main' panicked at 'panicking from libstd', $DIR/panic1.rs:8:5\n stack backtrace:\n    0: std::rt::begin_panic\n-RUSTLIB/std/src/panicking.rs:505:12\n+             at RUSTLIB/$FILE:LL:COL\n    1: main\n              at $DIR/panic1.rs:8:5\n    2: <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\n-RUSTLIB/core/src/ops/function.rs:227:5\n+             at RUSTLIB/$FILE:LL:COL\n    3: std::rt::lang_start::{closure#0}\n-RUSTLIB/std/src/rt.rs:66:18\n+             at RUSTLIB/$FILE:LL:COL\n    4: std::ops::function::impls::call_once\n-RUSTLIB/core/src/ops/function.rs:259:13\n+             at RUSTLIB/$FILE:LL:COL\n    5: std::panicking::r#try::do_call\n-RUSTLIB/std/src/panicking.rs:381:40\n+             at RUSTLIB/$FILE:LL:COL\n    6: std::panicking::r#try\n-RUSTLIB/std/src/panicking.rs:345:19\n+             at RUSTLIB/$FILE:LL:COL\n    7: std::panic::catch_unwind\n-RUSTLIB/std/src/panic.rs:382:14\n+             at RUSTLIB/$FILE:LL:COL\n    8: std::rt::lang_start_internal\n-RUSTLIB/std/src/rt.rs:51:25\n+             at RUSTLIB/$FILE:LL:COL\n    9: std::rt::lang_start\n-RUSTLIB/std/src/rt.rs:65:5\n+             at RUSTLIB/$FILE:LL:COL\n note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace."}]}