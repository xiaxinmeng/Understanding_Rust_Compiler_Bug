{"sha": "6d46a21cb3fd6d9c238fb979b5f071285f23e919", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNDZhMjFjYjNmZDZkOWMyMzhmYjk3OWI1ZjA3MTI4NWYyM2U5MTk=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-12-11T20:16:01Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-12-11T20:23:59Z"}, "message": "Simplify use of mir_opt_level\n\nRemove the unused top level option by the same name, and retain the\ndebug option.\n\nUse -Zmir-opt-level=1 as default.\n\nOne pass is enabled by default but wants to be optional:\n\n- Instcombine requires mir_opt_level > 0\n\nCopy propagation is not used by default, but used to be activated by\nexplicit -Zmir-opt-level=1. It must move one higher to be off by\ndefault:\n\n- CopyPropagation requires mir_opt_level > 1\n\nDeaggregate is not used by default, and used to be on a different level\nthan CopyPropagation:\n\n- Deaggreate requires mir_opt_level > 2", "tree": {"sha": "b4337f2fead298d262e15c3832bc74327a1660ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4337f2fead298d262e15c3832bc74327a1660ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d46a21cb3fd6d9c238fb979b5f071285f23e919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d46a21cb3fd6d9c238fb979b5f071285f23e919", "html_url": "https://github.com/rust-lang/rust/commit/6d46a21cb3fd6d9c238fb979b5f071285f23e919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d46a21cb3fd6d9c238fb979b5f071285f23e919/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd5dc057936f5d84ccd8c1d5965f60e669b589d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd5dc057936f5d84ccd8c1d5965f60e669b589d8", "html_url": "https://github.com/rust-lang/rust/commit/fd5dc057936f5d84ccd8c1d5965f60e669b589d8"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "e500c08ce6e32d32719b45962fadab5feba43767", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=6d46a21cb3fd6d9c238fb979b5f071285f23e919", "patch": "@@ -269,7 +269,6 @@ top_level_options!(\n \n         test: bool [TRACKED],\n         error_format: ErrorOutputType [UNTRACKED],\n-        mir_opt_level: usize [TRACKED],\n \n         // if Some, enable incremental compilation, using the given\n         // directory to store intermediate results\n@@ -435,7 +434,6 @@ pub fn basic_options() -> Options {\n         maybe_sysroot: None,\n         target_triple: host_triple().to_string(),\n         test: false,\n-        mir_opt_level: 1,\n         incremental: None,\n         debugging_opts: basic_debugging_options(),\n         prints: Vec::new(),\n@@ -916,8 +914,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"print layout information for each type encountered\"),\n     print_trans_items: Option<String> = (None, parse_opt_string, [UNTRACKED],\n           \"print the result of the translation item collection pass\"),\n-    mir_opt_level: Option<usize> = (None, parse_opt_uint, [TRACKED],\n-          \"set the MIR optimization level (0-3)\"),\n+    mir_opt_level: usize = (1, parse_uint, [TRACKED],\n+          \"set the MIR optimization level (0-3, default: 1)\"),\n     dump_mir: Option<String> = (None, parse_opt_string, [UNTRACKED],\n           \"dump MIR state at various points in translation\"),\n     dump_mir_dir: Option<String> = (None, parse_opt_string, [UNTRACKED],\n@@ -1322,8 +1320,6 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n \n     let debugging_opts = build_debugging_options(matches, error_format);\n \n-    let mir_opt_level = debugging_opts.mir_opt_level.unwrap_or(1);\n-\n     let mut output_types = BTreeMap::new();\n     if !debugging_opts.parse_only {\n         for list in matches.opt_strs(\"emit\") {\n@@ -1532,7 +1528,6 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n         maybe_sysroot: sysroot_opt,\n         target_triple: target,\n         test: test,\n-        mir_opt_level: mir_opt_level,\n         incremental: incremental,\n         debugging_opts: debugging_opts,\n         prints: prints,\n@@ -2475,7 +2470,7 @@ mod tests {\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n         opts = reference.clone();\n-        opts.debugging_opts.mir_opt_level = Some(1);\n+        opts.debugging_opts.mir_opt_level = 3;\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n     }\n }"}, {"sha": "d16b51adbafde996dfd61cc992da18ca0b00870a", "filename": "src/librustc_mir/transform/copy_prop.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs?ref=6d46a21cb3fd6d9c238fb979b5f071285f23e919", "patch": "@@ -65,11 +65,10 @@ impl<'tcx> MirPass<'tcx> for CopyPropagation {\n             }\n         }\n \n-        // We only run when the MIR optimization level is at least 1. This avoids messing up debug\n-        // info.\n-        match tcx.sess.opts.debugging_opts.mir_opt_level {\n-            Some(0) | None => return,\n-            _ => {}\n+        // We only run when the MIR optimization level is > 1.\n+        // This avoids a slow pass, and messing up debug info.\n+        if tcx.sess.opts.debugging_opts.mir_opt_level <= 1 {\n+            return;\n         }\n \n         loop {"}, {"sha": "ccb5c36c617f2031e6c51640de020fefc83216c2", "filename": "src/librustc_mir/transform/deaggregator.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs?ref=6d46a21cb3fd6d9c238fb979b5f071285f23e919", "patch": "@@ -23,13 +23,10 @@ impl<'tcx> MirPass<'tcx> for Deaggregator {\n         let node_id = source.item_id();\n         let node_path = tcx.item_path_str(tcx.map.local_def_id(node_id));\n         debug!(\"running on: {:?}\", node_path);\n-        // we only run when mir_opt_level > 1\n-        match tcx.sess.opts.debugging_opts.mir_opt_level {\n-            Some(0) |\n-            Some(1) |\n-            None => { return; },\n-            _ => {}\n-        };\n+        // we only run when mir_opt_level > 2\n+        if tcx.sess.opts.debugging_opts.mir_opt_level <= 2 {\n+            return;\n+        }\n \n         // Do not trigger on constants.  Could be revised in future\n         if let MirSource::Fn(_) = source {} else { return; }"}, {"sha": "3f6abb31fe9d9c78e01e5e6afca46db00c3b3e38", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d46a21cb3fd6d9c238fb979b5f071285f23e919/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=6d46a21cb3fd6d9c238fb979b5f071285f23e919", "patch": "@@ -38,7 +38,7 @@ impl<'tcx> MirPass<'tcx> for InstCombine {\n                     _: MirSource,\n                     mir: &mut Mir<'tcx>) {\n         // We only run when optimizing MIR (at any level).\n-        if tcx.sess.opts.debugging_opts.mir_opt_level == Some(0) {\n+        if tcx.sess.opts.debugging_opts.mir_opt_level == 0 {\n             return\n         }\n "}]}