{"sha": "60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3", "node_id": "C_kwDOAAsO6NoAKDYwYmUyZGU4YjdiOGExYzRlZWU3ZTA2NWI4Y2VmMzhlYTYyOWE2YTM", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-07-22T10:13:17Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-07-22T10:13:17Z"}, "message": "include a demo that more programs can be compiled", "tree": {"sha": "61e643c51c88fa50a2712e3a3d0509ee857d0821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61e643c51c88fa50a2712e3a3d0509ee857d0821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAmLaeD0ACgkQPNdIZH7v\nY1l7mg/8CMbf7M22t45uG4u1BqVqaUdhQgZLDM9+IhaWGk7qj6M0wKpZpVkgyX7y\nadPY6V8my8tNQeYES1quDSHGlFx9Lvk7YZpgmcwIIwxoL8jcIFFyixmzCsEYlKpz\nutCkJRR0l71of1zEk3RMoZ1Rmrc3yNqtmNCYQ5DeMaifsRSkbv9qnWrsWg9E6CMG\nJ0Jyi17lmjKhPIbcgFkmRauJGXUYI9G3UzM4M7W3dOkikQL3t6iCsNkJabFWBVM0\n6vuEiaV4a1oY42Hm+k7ieYmwwWlxC19sXo5RwKQeq07HmZ7JUjLXOhBoUoR7HWxE\n8kouhoFZW9sVEhlMkm2PP4SFc9Dqu/2qe89lOZ5ZKvnmCz/10+4TZxUXwVe3CA1D\nIGNJTn/Im3eTzHW1YWDFHaR0ZPJ6dq4Gi6DGLOqsNcAuweeVtZ1WoIkq8C04t0xa\npVmojbE25KIx+hBrUDk1giMsCvQ6tzExX0dmRqTv5ZkJLaXFs/Y64WzH4PDYeflG\no0wv9C7E6UnPY0q77XxEB/qDZuVSZAveaj6LOzNWgMWCqTqZkIZRngT+THuhoM2o\nXF3cht+3jZwpxbFdSPMI44VBD37n9SjfXp+/8qALpqDg7SNUM3DLgPmaY6bPqSFK\n/ikl6bLp6IARmLUGwWM11eEFK6kh0NFx0pQOfyyehKzpGpgNWQc=\n=OD+i\n-----END PGP SIGNATURE-----", "payload": "tree 61e643c51c88fa50a2712e3a3d0509ee857d0821\nparent baf9a7cb57120ec1411196214fd0d1c33fb18bf6\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1658484797 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1658484797 +0800\n\ninclude a demo that more programs can be compiled\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3", "html_url": "https://github.com/rust-lang/rust/commit/60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf9a7cb57120ec1411196214fd0d1c33fb18bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf9a7cb57120ec1411196214fd0d1c33fb18bf6", "html_url": "https://github.com/rust-lang/rust/commit/baf9a7cb57120ec1411196214fd0d1c33fb18bf6"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "9c86901b97f034ef2020dd6c348772f5d40a7f96", "filename": "src/test/ui/let-else/let-else-temporary-lifetime.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3/src%2Ftest%2Fui%2Flet-else%2Flet-else-temporary-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3/src%2Ftest%2Fui%2Flet-else%2Flet-else-temporary-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-temporary-lifetime.rs?ref=60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3", "patch": "@@ -29,6 +29,21 @@ fn main() {\n     assert_eq!(TRACKER.load(Ordering::Acquire), 1);\n     println!(\"Should have dropped \ud83d\udc46\");\n \n+    {\n+        // cf. https://github.com/rust-lang/rust/pull/99518#issuecomment-1191520030\n+        struct Foo<'a>(&'a mut u32);\n+\n+        impl<'a> Drop for Foo<'a> {\n+            fn drop(&mut self) {\n+                *self.0 = 0;\n+            }\n+        }\n+        let mut foo = 0;\n+        let Foo(0) = Foo(&mut foo) else {\n+            *&mut foo = 1;\n+            todo!()\n+        };\n+    }\n     {\n         let x = String::from(\"Hey\");\n \n@@ -61,6 +76,8 @@ fn main() {\n     }\n     {\n         // test let-else drops temps before else block\n+        // NOTE: this test has to be the last block in the `main`\n+        // body.\n         let rc = Rc::new(0);\n         let 1 = *rc.clone() else {\n             Rc::try_unwrap(rc).unwrap();"}]}