{"sha": "da534bdd074788e47b5dae76998b8f8535ea7257", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTM0YmRkMDc0Nzg4ZTQ3YjVkYWU3Njk5OGI4Zjg1MzVlYTcyNTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-14T16:14:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-14T16:14:34Z"}, "message": "internal: flatten module hierarchy\n\nIt seems that any crate can be made better by flattening the modules\ndown to a single layer?", "tree": {"sha": "9ad4abadebbc7ae942e43355735a657bd4bca430", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ad4abadebbc7ae942e43355735a657bd4bca430"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da534bdd074788e47b5dae76998b8f8535ea7257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da534bdd074788e47b5dae76998b8f8535ea7257", "html_url": "https://github.com/rust-lang/rust/commit/da534bdd074788e47b5dae76998b8f8535ea7257", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da534bdd074788e47b5dae76998b8f8535ea7257/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb67e7477a43fc91946f17c00205b7e31db00d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb67e7477a43fc91946f17c00205b7e31db00d8", "html_url": "https://github.com/rust-lang/rust/commit/9fb67e7477a43fc91946f17c00205b7e31db00d8"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "9db387d26dea36c6b11d6726905b0291d33c6e0c", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/da534bdd074788e47b5dae76998b8f8535ea7257/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da534bdd074788e47b5dae76998b8f8535ea7257/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=da534bdd074788e47b5dae76998b8f8535ea7257", "patch": "@@ -39,6 +39,7 @@ mod matching_brace;\n mod move_item;\n mod parent_module;\n mod references;\n+mod rename;\n mod fn_references;\n mod runnables;\n mod ssr;\n@@ -79,7 +80,8 @@ pub use crate::{\n     markup::Markup,\n     move_item::Direction,\n     prime_caches::PrimeCachesProgress,\n-    references::{rename::RenameError, ReferenceSearchResult},\n+    references::ReferenceSearchResult,\n+    rename::RenameError,\n     runnables::{Runnable, RunnableKind, TestId},\n     syntax_highlighting::{\n         tags::{Highlight, HlMod, HlMods, HlOperator, HlPunct, HlTag},\n@@ -591,22 +593,22 @@ impl Analysis {\n         position: FilePosition,\n         new_name: &str,\n     ) -> Cancellable<Result<SourceChange, RenameError>> {\n-        self.with_db(|db| references::rename::rename(db, position, new_name))\n+        self.with_db(|db| rename::rename(db, position, new_name))\n     }\n \n     pub fn prepare_rename(\n         &self,\n         position: FilePosition,\n     ) -> Cancellable<Result<RangeInfo<()>, RenameError>> {\n-        self.with_db(|db| references::rename::prepare_rename(db, position))\n+        self.with_db(|db| rename::prepare_rename(db, position))\n     }\n \n     pub fn will_rename_file(\n         &self,\n         file_id: FileId,\n         new_name_stem: &str,\n     ) -> Cancellable<Option<SourceChange>> {\n-        self.with_db(|db| references::rename::will_rename_file(db, file_id, new_name_stem))\n+        self.with_db(|db| rename::will_rename_file(db, file_id, new_name_stem))\n     }\n \n     pub fn structural_search_replace("}, {"sha": "945c9b9e10ed402f3cae69ada76139deb6a4e183", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da534bdd074788e47b5dae76998b8f8535ea7257/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da534bdd074788e47b5dae76998b8f8535ea7257/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=da534bdd074788e47b5dae76998b8f8535ea7257", "patch": "@@ -9,8 +9,6 @@\n //! at the index that the match starts at and its tree parent is\n //! resolved to the search element definition, we get a reference.\n \n-pub(crate) mod rename;\n-\n use hir::{PathResolution, Semantics};\n use ide_db::{\n     base_db::FileId,"}, {"sha": "41689a939e3451c6c5f32d469ab7a582a16ed0a7", "filename": "crates/ide/src/rename.rs", "status": "renamed", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/da534bdd074788e47b5dae76998b8f8535ea7257/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da534bdd074788e47b5dae76998b8f8535ea7257/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=da534bdd074788e47b5dae76998b8f8535ea7257", "patch": "@@ -1,7 +1,8 @@\n-//! Renaming functionality\n+//! Renaming functionality.\n //!\n-//! All reference and file rename requests go through here where the corresponding [`SourceChange`]s\n-//! will be calculated.\n+//! This is mostly front-end for [`ide_db::rename`], but it also includes the\n+//! tests. This module also implements a couple of magic tricks, like renaming\n+//! `self` and to `self` (to switch between associated function and method).\n use hir::{AsAssocItem, InFile, Semantics};\n use ide_db::{\n     base_db::FileId,", "previous_filename": "crates/ide/src/references/rename.rs"}]}