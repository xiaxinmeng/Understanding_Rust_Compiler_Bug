{"sha": "d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZTc5NTNkMTMyNWIxYTFmZTFjZWY1MjZkYmU4ZDIzZmEzZTAwYTE=", "commit": {"author": {"name": "Lymia Aluysia", "email": "lymia@lymiahugs.com", "date": "2018-03-18T16:21:38Z"}, "committer": {"name": "Lymia Aluysia", "email": "lymia@lymiahugs.com", "date": "2018-03-18T16:21:38Z"}, "message": "Move raw_identifiers check to the lexer.", "tree": {"sha": "08deec42d6be062a0818322402dab039e985ac4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08deec42d6be062a0818322402dab039e985ac4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEfrc19M/exUzAyXK/2y4gTJiSUfcFAlqukiYACgkQ2y4gTJiS\nUfdoDw//cNDv0nLHukF+3ecTK5dP4gYJsjjSGEku1kqBnI9I4yz5ESZW5lBHxQEa\ndHm3VUAbUUI91Srzdfc6fNZb4T4vVB9PYQlgGpVvxokUjEIMcm8HAkqZV2pfawJ1\nay6I51mmFxF5iv57eKDXmrp3ijui0TjCFM6lZ5FlHqWUB9hlo1+sDRc66BhebfPO\nzXa6CuNAGC9TmF9OCoLRyeK8aAXo8ux7I/jY22HE3OZl546zfruQREaTgQNSIIis\ntGnrcgqyxaxAjoZiCnA9WPATwoioDmpvpB5c42H+P/26Vsl6HfHXjxyCLmA9aPvu\njKjNX9OQUCvI+W+1Z+6RxDcHl+DT83ecxV85PDo1CtERzqU5+++wqi504N5VIkp0\ncLXNhkG2bxULYu43DcDbFwC3L+gwnBK62dC6UvpnZMM3VwDTar4Q7waHt3w+abTw\niAu5ShRiwYBNog+ESWBvEB7n95GlULXUK1SScUkBFhS9SWSuLJX70mKYOllatn7K\n17A65MMyztaJTKPnNID6IdKACQUD6cJzgQq841XPikhwbmW6zIZ2R4flEWvlUH6B\n1DvyudXdKbrLDeruo7EG/D8Dwx0HgXn7JOaMyFBV935lQrqBMpTD5PiUnJZpSHLW\nRWE3HS5AqkNyxVIHP6iDG/uCI4ONeM8PTOyoGdmjD5jQFYh27fY=\n=9bQa\n-----END PGP SIGNATURE-----", "payload": "tree 08deec42d6be062a0818322402dab039e985ac4e\nparent 7d5c29b9eae5857c040bf6f1b2d729596c8af3ae\nauthor Lymia Aluysia <lymia@lymiahugs.com> 1521390098 -0500\ncommitter Lymia Aluysia <lymia@lymiahugs.com> 1521390098 -0500\n\nMove raw_identifiers check to the lexer.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1", "html_url": "https://github.com/rust-lang/rust/commit/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1/comments", "author": {"login": "Lymia", "id": 483849, "node_id": "MDQ6VXNlcjQ4Mzg0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/483849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lymia", "html_url": "https://github.com/Lymia", "followers_url": "https://api.github.com/users/Lymia/followers", "following_url": "https://api.github.com/users/Lymia/following{/other_user}", "gists_url": "https://api.github.com/users/Lymia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lymia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lymia/subscriptions", "organizations_url": "https://api.github.com/users/Lymia/orgs", "repos_url": "https://api.github.com/users/Lymia/repos", "events_url": "https://api.github.com/users/Lymia/events{/privacy}", "received_events_url": "https://api.github.com/users/Lymia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Lymia", "id": 483849, "node_id": "MDQ6VXNlcjQ4Mzg0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/483849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lymia", "html_url": "https://github.com/Lymia", "followers_url": "https://api.github.com/users/Lymia/followers", "following_url": "https://api.github.com/users/Lymia/following{/other_user}", "gists_url": "https://api.github.com/users/Lymia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lymia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lymia/subscriptions", "organizations_url": "https://api.github.com/users/Lymia/orgs", "repos_url": "https://api.github.com/users/Lymia/repos", "events_url": "https://api.github.com/users/Lymia/events{/privacy}", "received_events_url": "https://api.github.com/users/Lymia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d5c29b9eae5857c040bf6f1b2d729596c8af3ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5c29b9eae5857c040bf6f1b2d729596c8af3ae", "html_url": "https://github.com/rust-lang/rust/commit/7d5c29b9eae5857c040bf6f1b2d729596c8af3ae"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "068929c8948df983ef3eb17bc2573922bebab8d1", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1", "patch": "@@ -1155,6 +1155,10 @@ impl<'a> StringReader<'a> {\n                             &format!(\"`r#{}` is not currently supported.\", ident.name)\n                         ).raise();\n                     }\n+                    if is_raw_ident {\n+                        let span = self.mk_sp(raw_start, self.pos);\n+                        self.sess.raw_identifier_spans.borrow_mut().push(span);\n+                    }\n                     token::Ident(ident, is_raw_ident)\n                 }));\n             }"}, {"sha": "4c1575cf58939d1b8851c43e73c6b43fe79b1971", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d2e7953d1325b1a1fe1cef526dbe8d23fa3e00a1", "patch": "@@ -784,7 +784,7 @@ impl<'a> Parser<'a> {\n \n     fn parse_ident_common(&mut self, recover: bool) -> PResult<'a, ast::Ident> {\n         match self.token {\n-            token::Ident(i, is_raw) => {\n+            token::Ident(i, _) => {\n                 if self.token.is_reserved_ident() {\n                     let mut err = self.expected_ident_found();\n                     if recover {\n@@ -793,9 +793,6 @@ impl<'a> Parser<'a> {\n                         return Err(err);\n                     }\n                 }\n-                if is_raw {\n-                    self.sess.raw_identifier_spans.borrow_mut().push(self.span);\n-                }\n                 self.bump();\n                 Ok(i)\n             }"}]}