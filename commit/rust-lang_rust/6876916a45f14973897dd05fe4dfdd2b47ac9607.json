{"sha": "6876916a45f14973897dd05fe4dfdd2b47ac9607", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NzY5MTZhNDVmMTQ5NzM4OTdkZDA1ZmU0ZGZkZDJiNDdhYzk2MDc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-17T13:06:20Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-18T11:53:45Z"}, "message": "rustc: Allow `return` to return from a closure.\n\nWith the old `for` gone, this behaviour is no longer conflicting with\nthat use of `return` in closures, and this allows shortcircuiting in a\nclosure.", "tree": {"sha": "9c6b013ca2585548faf82501f3e89016bc713a69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c6b013ca2585548faf82501f3e89016bc713a69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6876916a45f14973897dd05fe4dfdd2b47ac9607", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6876916a45f14973897dd05fe4dfdd2b47ac9607", "html_url": "https://github.com/rust-lang/rust/commit/6876916a45f14973897dd05fe4dfdd2b47ac9607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6876916a45f14973897dd05fe4dfdd2b47ac9607/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47c9a35747e9a15830e35924429050b820825f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/47c9a35747e9a15830e35924429050b820825f5d", "html_url": "https://github.com/rust-lang/rust/commit/47c9a35747e9a15830e35924429050b820825f5d"}], "stats": {"total": 62, "additions": 41, "deletions": 21}, "files": [{"sha": "332e63288a119de9028fa74ad00c0cc2fbf6928a", "filename": "src/librustc/middle/check_loop.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6876916a45f14973897dd05fe4dfdd2b47ac9607/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6876916a45f14973897dd05fe4dfdd2b47ac9607/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_loop.rs?ref=6876916a45f14973897dd05fe4dfdd2b47ac9607", "patch": "@@ -47,12 +47,6 @@ impl Visitor<Context> for CheckLoopVisitor {\n             }\n             ast::ExprBreak(_) => self.require_loop(\"break\", cx, e.span),\n             ast::ExprAgain(_) => self.require_loop(\"continue\", cx, e.span),\n-            ast::ExprRet(oe) => {\n-                if cx == Closure {\n-                    self.tcx.sess.span_err(e.span, \"`return` in a closure\");\n-                }\n-                visit::walk_expr_opt(self, oe, cx);\n-            }\n             _ => visit::walk_expr(self, e, cx)\n         }\n     }"}, {"sha": "f231810cbf1172a18235449a53ca92bea1d15217", "filename": "src/test/compile-fail/return-in-block-function.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/47c9a35747e9a15830e35924429050b820825f5d/src%2Ftest%2Fcompile-fail%2Freturn-in-block-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c9a35747e9a15830e35924429050b820825f5d/src%2Ftest%2Fcompile-fail%2Freturn-in-block-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Freturn-in-block-function.rs?ref=47c9a35747e9a15830e35924429050b820825f5d", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    let _x = || {\n-        return //~ ERROR: `return` in a closure\n-    };\n-}"}, {"sha": "1756d74a81e1789dedd8a0c9dd6c495179b80d03", "filename": "src/test/run-pass/return-from-closure.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6876916a45f14973897dd05fe4dfdd2b47ac9607/src%2Ftest%2Frun-pass%2Freturn-from-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6876916a45f14973897dd05fe4dfdd2b47ac9607/src%2Ftest%2Frun-pass%2Freturn-from-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freturn-from-closure.rs?ref=6876916a45f14973897dd05fe4dfdd2b47ac9607", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// just to make sure that `return` is only returning from the closure,\n+// not the surrounding function.\n+static mut calls: uint = 0;\n+\n+fn surrounding() {\n+    let return_works = |n: int| {\n+        unsafe { calls += 1 }\n+\n+        if n >= 0 { return; }\n+        fail!()\n+    };\n+\n+    return_works(10);\n+    return_works(20);\n+\n+\n+    let return_works_proc = proc(n: int) {\n+        unsafe { calls += 1 }\n+\n+        if n >= 0 { return; }\n+        fail!()\n+    };\n+\n+    return_works_proc(10);\n+}\n+\n+pub fn main() {\n+    surrounding();\n+\n+    assert_eq!(unsafe {calls}, 3);\n+}"}]}