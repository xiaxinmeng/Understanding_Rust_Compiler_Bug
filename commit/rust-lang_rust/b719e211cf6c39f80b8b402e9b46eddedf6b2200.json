{"sha": "b719e211cf6c39f80b8b402e9b46eddedf6b2200", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MTllMjExY2Y2YzM5ZjgwYjhiNDAyZTliNDZlZGRlZGY2YjIyMDA=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-07T15:48:39Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-07T15:48:39Z"}, "message": "Fix record literal completion", "tree": {"sha": "51fe240c3ae1569bfc5950f8131fbf47dccac4af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51fe240c3ae1569bfc5950f8131fbf47dccac4af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b719e211cf6c39f80b8b402e9b46eddedf6b2200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b719e211cf6c39f80b8b402e9b46eddedf6b2200", "html_url": "https://github.com/rust-lang/rust/commit/b719e211cf6c39f80b8b402e9b46eddedf6b2200", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b719e211cf6c39f80b8b402e9b46eddedf6b2200/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bea6199b34ba7282aa148d9afcf52a8f2c7d6f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bea6199b34ba7282aa148d9afcf52a8f2c7d6f5", "html_url": "https://github.com/rust-lang/rust/commit/6bea6199b34ba7282aa148d9afcf52a8f2c7d6f5"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "be6e4194fc6a114a61710e4b1a97d653f078af79", "filename": "crates/ra_ide/src/completion/complete_record_literal.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b719e211cf6c39f80b8b402e9b46eddedf6b2200/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b719e211cf6c39f80b8b402e9b46eddedf6b2200/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=b719e211cf6c39f80b8b402e9b46eddedf6b2200", "patch": "@@ -153,4 +153,29 @@ mod tests {\n         ]\n         \"###);\n     }\n+\n+    #[test]\n+    fn test_record_literal_field_in_simple_macro() {\n+        let completions = complete(\n+            r\"\n+            macro_rules! m { ($e:expr) => { $e } }\n+            struct A { the_field: u32 }\n+            fn foo() {\n+               m!(A { the<|> })\n+            }\n+            \",\n+        );\n+        assert_debug_snapshot!(completions, @r###\"\n+        [\n+            CompletionItem {\n+                label: \"the_field\",\n+                source_range: [137; 140),\n+                delete: [137; 140),\n+                insert: \"the_field\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n+        \"###);\n+    }\n }"}, {"sha": "fe97774870fcff691caa518f69226bc28d7512ba", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b719e211cf6c39f80b8b402e9b46eddedf6b2200/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b719e211cf6c39f80b8b402e9b46eddedf6b2200/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=b719e211cf6c39f80b8b402e9b46eddedf6b2200", "patch": "@@ -165,7 +165,7 @@ impl<'a> CompletionContext<'a> {\n                 self.is_param = true;\n                 return;\n             }\n-            self.classify_name_ref(original_file, name_ref);\n+            self.classify_name_ref(original_file, name_ref, offset);\n         }\n \n         // Otherwise, see if this is a declaration. We can use heuristics to\n@@ -190,13 +190,18 @@ impl<'a> CompletionContext<'a> {\n         }\n     }\n \n-    fn classify_name_ref(&mut self, original_file: &SyntaxNode, name_ref: ast::NameRef) {\n+    fn classify_name_ref(\n+        &mut self,\n+        original_file: &SyntaxNode,\n+        name_ref: ast::NameRef,\n+        offset: TextUnit,\n+    ) {\n         self.name_ref_syntax =\n             find_node_at_offset(&original_file, name_ref.syntax().text_range().start());\n         let name_range = name_ref.syntax().text_range();\n         if name_ref.syntax().parent().and_then(ast::RecordField::cast).is_some() {\n             self.record_lit_syntax =\n-                self.sema.find_node_at_offset_with_macros(&original_file, self.offset);\n+                self.sema.find_node_at_offset_with_macros(&original_file, offset);\n         }\n \n         self.impl_def = self"}]}