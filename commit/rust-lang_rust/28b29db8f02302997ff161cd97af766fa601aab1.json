{"sha": "28b29db8f02302997ff161cd97af766fa601aab1", "node_id": "C_kwDOAAsO6NoAKDI4YjI5ZGI4ZjAyMzAyOTk3ZmYxNjFjZDk3YWY3NjZmYTYwMWFhYjE", "commit": {"author": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-08-17T10:12:59Z"}, "committer": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-08-22T06:42:46Z"}, "message": "fluent: point to path containing error instead of module name\n\nExample error before:\n\nerror: name `generic_does_not_live_long_enough` does not start with the crate name\n  --> compiler/rustc_error_messages/src/lib.rs:33:17\n   |\n33 |     borrowck => \"../locales/en-US/borrowck.ftl\",\n   |     ^^^^^^^^\n   |\n   = help: prepend `borrowck_` to the slug name: `borrowck_generic_does_not_live_long_enough`\n\nafter:\n\nerror: name `generic_does_not_live_long_enough` does not start with the crate name\n  --> compiler/rustc_error_messages/src/lib.rs:33:17\n   |\n33 |     borrowck => \"../locales/en-US/borrowck.ftl\",\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: prepend `borrowck_` to the slug name: `borrowck_generic_does_not_live_long_enough`", "tree": {"sha": "5f0ff35270fa2493a008074b529a29cf1ca2bb0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f0ff35270fa2493a008074b529a29cf1ca2bb0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b29db8f02302997ff161cd97af766fa601aab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b29db8f02302997ff161cd97af766fa601aab1", "html_url": "https://github.com/rust-lang/rust/commit/28b29db8f02302997ff161cd97af766fa601aab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b29db8f02302997ff161cd97af766fa601aab1/comments", "author": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "html_url": "https://github.com/rust-lang/rust/commit/c9b1a5874d06ca6c437ca8cca2224d546e8669ec"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f7d8b494ee257f528444552127716ee296672f22", "filename": "compiler/rustc_macros/src/diagnostics/fluent.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28b29db8f02302997ff161cd97af766fa601aab1/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b29db8f02302997ff161cd97af766fa601aab1/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs?ref=28b29db8f02302997ff161cd97af766fa601aab1", "patch": "@@ -187,11 +187,11 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n         for entry in resource.entries() {\n             let span = res.ident.span();\n             if let Entry::Message(Message { id: Identifier { name }, attributes, .. }) = entry {\n-                let _ = previous_defns.entry(name.to_string()).or_insert(ident_span);\n+                let _ = previous_defns.entry(name.to_string()).or_insert(path_span);\n \n                 if name.contains('-') {\n                     Diagnostic::spanned(\n-                        ident_span,\n+                        path_span,\n                         Level::Error,\n                         format!(\"name `{name}` contains a '-' character\"),\n                     )\n@@ -212,7 +212,7 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n                     Some(rest) => Ident::new(rest, span),\n                     None => {\n                         Diagnostic::spanned(\n-                            ident_span,\n+                            path_span,\n                             Level::Error,\n                             format!(\"name `{name}` does not start with the crate name\"),\n                         )\n@@ -238,7 +238,7 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n \n                     if attr_name.contains('-') {\n                         Diagnostic::spanned(\n-                            ident_span,\n+                            path_span,\n                             Level::Error,\n                             format!(\"attribute `{attr_name}` contains a '-' character\"),\n                         )\n@@ -261,7 +261,7 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n                 match e {\n                     FluentError::Overriding { kind, id } => {\n                         Diagnostic::spanned(\n-                            ident_span,\n+                            path_span,\n                             Level::Error,\n                             format!(\"overrides existing {}: `{}`\", kind, id),\n                         )"}]}