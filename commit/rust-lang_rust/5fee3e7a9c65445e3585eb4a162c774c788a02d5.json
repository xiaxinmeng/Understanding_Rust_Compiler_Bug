{"sha": "5fee3e7a9c65445e3585eb4a162c774c788a02d5", "node_id": "C_kwDOAAsO6NoAKDVmZWUzZTdhOWM2NTQ0NWUzNTg1ZWI0YTE2MmM3NzRjNzg4YTAyZDU", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-18T23:09:59Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-18T23:12:35Z"}, "message": "Fix is_some_with tests.", "tree": {"sha": "2fb7d66021ed0d9ecfe83ca44ba76ba8bfac37ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fb7d66021ed0d9ecfe83ca44ba76ba8bfac37ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fee3e7a9c65445e3585eb4a162c774c788a02d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fee3e7a9c65445e3585eb4a162c774c788a02d5", "html_url": "https://github.com/rust-lang/rust/commit/5fee3e7a9c65445e3585eb4a162c774c788a02d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fee3e7a9c65445e3585eb4a162c774c788a02d5/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45dee47fec4b04fc642361cbf1f2f9fc0e0ad53d", "url": "https://api.github.com/repos/rust-lang/rust/commits/45dee47fec4b04fc642361cbf1f2f9fc0e0ad53d", "html_url": "https://github.com/rust-lang/rust/commit/45dee47fec4b04fc642361cbf1f2f9fc0e0ad53d"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "611f4ab38ab334d713b677b6d3a4fc75277bf4be", "filename": "library/core/src/option.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fee3e7a9c65445e3585eb4a162c774c788a02d5/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fee3e7a9c65445e3585eb4a162c774c788a02d5/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=5fee3e7a9c65445e3585eb4a162c774c788a02d5", "patch": "@@ -556,14 +556,16 @@ impl<T> Option<T> {\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(is_some_with)]\n+    ///\n     /// let x: Option<u32> = Some(2);\n-    /// assert_eq!(x.is_some_with(|x| x > 1), true);\n+    /// assert_eq!(x.is_some_with(|&x| x > 1), true);\n     ///\n     /// let x: Option<u32> = Some(0);\n-    /// assert_eq!(x.is_some_with(|x| x > 1), false);\n+    /// assert_eq!(x.is_some_with(|&x| x > 1), false);\n     ///\n     /// let x: Option<u32> = None;\n-    /// assert_eq!(x.is_some_with(|x| x > 1), false);\n+    /// assert_eq!(x.is_some_with(|&x| x > 1), false);\n     /// ```\n     #[must_use]\n     #[inline]"}, {"sha": "fbd6d419236ae110240b9eb4b91ebfd113d3d0dd", "filename": "library/core/src/result.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5fee3e7a9c65445e3585eb4a162c774c788a02d5/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fee3e7a9c65445e3585eb4a162c774c788a02d5/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=5fee3e7a9c65445e3585eb4a162c774c788a02d5", "patch": "@@ -547,14 +547,16 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(is_some_with)]\n+    ///\n     /// let x: Result<u32, &str> = Ok(2);\n-    /// assert_eq!(x.is_ok_with(|x| x > 1), true);\n+    /// assert_eq!(x.is_ok_with(|&x| x > 1), true);\n     ///\n     /// let x: Result<u32, &str> = Ok(0);\n-    /// assert_eq!(x.is_ok_with(|x| x > 1), false);\n+    /// assert_eq!(x.is_ok_with(|&x| x > 1), false);\n     ///\n     /// let x: Result<u32, &str> = Err(\"hey\");\n-    /// assert_eq!(x.is_ok_with(|x| x > 1), false);\n+    /// assert_eq!(x.is_ok_with(|&x| x > 1), false);\n     /// ```\n     #[must_use]\n     #[inline]\n@@ -589,16 +591,17 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(is_some_with)]\n     /// use std::io::{Error, ErrorKind};\n     ///\n     /// let x: Result<u32, Error> = Err(Error::new(ErrorKind::NotFound, \"!\"));\n     /// assert_eq!(x.is_err_with(|x| x.kind() == ErrorKind::NotFound), true);\n     ///\n     /// let x: Result<u32, Error> = Err(Error::new(ErrorKind::PermissionDenied, \"!\"));\n-    /// assert_eq!(x.is_ok_with(|x| x.kind() == ErrorKind::NotFound), false);\n+    /// assert_eq!(x.is_err_with(|x| x.kind() == ErrorKind::NotFound), false);\n     ///\n     /// let x: Result<u32, Error> = Ok(123);\n-    /// assert_eq!(x.is_ok_with(|x| x.kind() == ErrorKind::NotFound), false);\n+    /// assert_eq!(x.is_err_with(|x| x.kind() == ErrorKind::NotFound), false);\n     /// ```\n     #[must_use]\n     #[inline]"}]}