{"sha": "084cfc10f5bea02f6bd32856eb2c343692af25c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NGNmYzEwZjViZWEwMmY2YmQzMjg1NmViMmMzNDM2OTJhZjI1Yzk=", "commit": {"author": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-08-25T15:26:03Z"}, "committer": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-08-25T15:26:03Z"}, "message": "bigint: Add benchmarks", "tree": {"sha": "584669b5cbbb98b2890316b45318a330792b64ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/584669b5cbbb98b2890316b45318a330792b64ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/084cfc10f5bea02f6bd32856eb2c343692af25c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/084cfc10f5bea02f6bd32856eb2c343692af25c9", "html_url": "https://github.com/rust-lang/rust/commit/084cfc10f5bea02f6bd32856eb2c343692af25c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/084cfc10f5bea02f6bd32856eb2c343692af25c9/comments", "author": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc41ba167cac9f63eda4ee4c4927b7c905306d50", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc41ba167cac9f63eda4ee4c4927b7c905306d50", "html_url": "https://github.com/rust-lang/rust/commit/fc41ba167cac9f63eda4ee4c4927b7c905306d50"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "6c8011f2b9e2118ee435d5afdd9d11f2bde9e518", "filename": "src/libextra/num/bigint.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/084cfc10f5bea02f6bd32856eb2c343692af25c9/src%2Flibextra%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/084cfc10f5bea02f6bd32856eb2c343692af25c9/src%2Flibextra%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fbigint.rs?ref=084cfc10f5bea02f6bd32856eb2c343692af25c9", "patch": "@@ -1983,3 +1983,47 @@ mod bigint_tests {\n         assert_eq!(-Zero::zero::<BigInt>(), Zero::zero::<BigInt>());\n     }\n }\n+\n+#[cfg(test)]\n+mod bench {\n+    use super::*;\n+    use std::{iterator, util};\n+    use std::num::{Zero, One};\n+    use extra::test::BenchHarness;\n+\n+    fn factorial(n: uint) -> BigUint {\n+        let mut f = One::one::<BigUint>();\n+        for i in iterator::range_inclusive(1, n) {\n+            f = f * BigUint::from_uint(i);\n+        }\n+        f\n+    }\n+\n+    fn fib(n: uint) -> BigUint {\n+        let mut f0 = Zero::zero::<BigUint>();\n+        let mut f1 = One::one::<BigUint>();\n+        for _ in range(0, n) {\n+            let f2 = f0 + f1;\n+            f0 = util::replace(&mut f1, f2);\n+        }\n+        f0\n+    }\n+\n+    #[bench]\n+    fn factorial_100(bh: &mut BenchHarness) {\n+        do bh.iter { factorial(100);  }\n+    }\n+\n+    #[bench]\n+    fn fib_500(bh: &mut BenchHarness) {\n+        do bh.iter { fib(100); }\n+    }\n+\n+    #[bench]\n+    fn to_str(bh: &mut BenchHarness) {\n+        let fac = factorial(100);\n+        let fib = fib(100);\n+        do bh.iter { fac.to_str(); }\n+        do bh.iter { fib.to_str(); }\n+    }\n+}"}]}