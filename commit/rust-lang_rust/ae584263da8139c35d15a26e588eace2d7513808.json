{"sha": "ae584263da8139c35d15a26e588eace2d7513808", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNTg0MjYzZGE4MTM5YzM1ZDE1YTI2ZTU4OGVhY2UyZDc1MTM4MDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T08:19:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:42Z"}, "message": "rustdoc: Set the crate name in the top module", "tree": {"sha": "31596ae2ffb538a54ee0d084c0d1d573d36347e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31596ae2ffb538a54ee0d084c0d1d573d36347e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae584263da8139c35d15a26e588eace2d7513808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae584263da8139c35d15a26e588eace2d7513808", "html_url": "https://github.com/rust-lang/rust/commit/ae584263da8139c35d15a26e588eace2d7513808", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae584263da8139c35d15a26e588eace2d7513808/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77690baa7049cf636ff5dd6124f7b1550fe42acc", "url": "https://api.github.com/repos/rust-lang/rust/commits/77690baa7049cf636ff5dd6124f7b1550fe42acc", "html_url": "https://github.com/rust-lang/rust/commit/77690baa7049cf636ff5dd6124f7b1550fe42acc"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "faaabd654603006ac70869a8e43e790a803cf67f", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ae584263da8139c35d15a26e588eace2d7513808/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae584263da8139c35d15a26e588eace2d7513808/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=ae584263da8139c35d15a26e588eace2d7513808", "patch": "@@ -5,17 +5,19 @@ export extract;\n \n #[doc = \"Converts the Rust AST to the rustdoc document model\"]\n fn extract(\n-    crate: @ast::crate\n+    crate: @ast::crate,\n+    default_name: str\n ) -> doc::cratedoc {\n     ~{\n-        topmod: top_moddoc_from_crate(crate),\n+        topmod: top_moddoc_from_crate(crate, default_name),\n     }\n }\n \n fn top_moddoc_from_crate(\n-    crate: @ast::crate\n+    crate: @ast::crate,\n+    default_name: str\n ) -> doc::moddoc {\n-    moddoc_from_mod(crate.node.module, \"crate\", crate.node.attrs)\n+    moddoc_from_mod(crate.node.module, default_name, crate.node.attrs)\n }\n \n fn moddoc_from_mod(\n@@ -69,7 +71,7 @@ mod tests {\n     fn extract_empty_crate() {\n         let source = \"\"; // empty crate\n         let ast = parse::from_str(source);\n-        let doc = extract(ast);\n+        let doc = extract(ast, \"\");\n         // FIXME #1535: These are boxed to prevent a crash\n         assert ~doc.topmod.mods == ~doc::modlist([]);\n         assert ~doc.topmod.fns == ~doc::fnlist([]);\n@@ -79,7 +81,7 @@ mod tests {\n     fn extract_mods() {\n         let source = \"mod a { mod b { } mod c { } }\";\n         let ast = parse::from_str(source);\n-        let doc = extract(ast);\n+        let doc = extract(ast, \"\");\n         assert doc.topmod.mods[0].name == \"a\";\n         assert doc.topmod.mods[0].mods[0].name == \"b\";\n         assert doc.topmod.mods[0].mods[1].name == \"c\";\n@@ -89,7 +91,7 @@ mod tests {\n     fn extract_mods_deep() {\n         let source = \"mod a { mod b { mod c { } } }\";\n         let ast = parse::from_str(source);\n-        let doc = extract(ast);\n+        let doc = extract(ast, \"\");\n         assert doc.topmod.mods[0].mods[0].mods[0].name == \"c\";\n     }\n \n@@ -99,7 +101,7 @@ mod tests {\n             \"fn a() { } \\\n              mod b { fn c() { } }\";\n         let ast = parse::from_str(source);\n-        let doc = extract(ast);\n+        let doc = extract(ast, \"\");\n         assert doc.topmod.fns[0].name == \"a\";\n         assert doc.topmod.mods[0].fns[0].name == \"c\";\n     }\n@@ -108,7 +110,15 @@ mod tests {\n     fn extract_should_set_fn_ast_id() {\n         let source = \"fn a() { }\";\n         let ast = parse::from_str(source);\n-        let doc = extract(ast);\n+        let doc = extract(ast, \"\");\n         assert doc.topmod.fns[0].id != 0;\n     }\n+\n+    #[test]\n+    fn extract_should_use_default_crate_name_if_no_link_name_exists() {\n+        let source = \"\";\n+        let ast = parse::from_str(source);\n+        let doc = extract(ast, \"burp\");\n+        assert doc.topmod.name == \"burp\";\n+    }\n }\n\\ No newline at end of file"}]}