{"sha": "ee11bfd8a189462713ea1ede36f4796575ddf894", "node_id": "C_kwDOAAsO6NoAKGVlMTFiZmQ4YTE4OTQ2MjcxM2VhMWVkZTM2ZjQ3OTY1NzVkZGY4OTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-02T01:15:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-02T01:15:25Z"}, "message": "Auto merge of #106352 - kornelski:read_line-doc, r=scottmcm\n\nDocument read_line gotchas\n\n1. The \"You do not need to clear the buffer before appending\" advice is ambiguous, because it depends what you use this function for. For a rather common case of reading individual lines in a loop, it _is_ necessary to clear the buffer.\n\n2. The docs warn about a DoS risk. I've added a hint how to mitigate unbounded memory growth.", "tree": {"sha": "707547aa9f70f00062068b812335bdf305fc6d32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/707547aa9f70f00062068b812335bdf305fc6d32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee11bfd8a189462713ea1ede36f4796575ddf894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee11bfd8a189462713ea1ede36f4796575ddf894", "html_url": "https://github.com/rust-lang/rust/commit/ee11bfd8a189462713ea1ede36f4796575ddf894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee11bfd8a189462713ea1ede36f4796575ddf894/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11cb36c751550cf197e23440d53f04156c3a2a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11cb36c751550cf197e23440d53f04156c3a2a3", "html_url": "https://github.com/rust-lang/rust/commit/e11cb36c751550cf197e23440d53f04156c3a2a3"}, {"sha": "3a6ceeb18f7f2bf6f5c8c647d4f747fdf47bef7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6ceeb18f7f2bf6f5c8c647d4f747fdf47bef7b", "html_url": "https://github.com/rust-lang/rust/commit/3a6ceeb18f7f2bf6f5c8c647d4f747fdf47bef7b"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "de528e85368cbf5ed6b471b7411f4e3b97b53ca4", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee11bfd8a189462713ea1ede36f4796575ddf894/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee11bfd8a189462713ea1ede36f4796575ddf894/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=ee11bfd8a189462713ea1ede36f4796575ddf894", "patch": "@@ -2137,8 +2137,10 @@ pub trait BufRead: Read {\n     }\n \n     /// Read all bytes until a newline (the `0xA` byte) is reached, and append\n-    /// them to the provided buffer. You do not need to clear the buffer before\n-    /// appending.\n+    /// them to the provided `String` buffer.\n+    ///\n+    /// Previous content of the buffer will be preserved. To avoid appending to\n+    /// the buffer, you need to [`clear`] it first.\n     ///\n     /// This function will read bytes from the underlying stream until the\n     /// newline delimiter (the `0xA` byte) or EOF is found. Once found, all bytes\n@@ -2151,9 +2153,11 @@ pub trait BufRead: Read {\n     ///\n     /// This function is blocking and should be used carefully: it is possible for\n     /// an attacker to continuously send bytes without ever sending a newline\n-    /// or EOF.\n+    /// or EOF. You can use [`take`] to limit the maximum number of bytes read.\n     ///\n     /// [`Ok(0)`]: Ok\n+    /// [`clear`]: String::clear\n+    /// [`take`]: crate::io::Read::take\n     ///\n     /// # Errors\n     ///"}]}