{"sha": "b33873f5411d4ad6a3bd5a4a18dffce8a960a316", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMzg3M2Y1NDExZDRhZDZhM2JkNWE0YTE4ZGZmY2U4YTk2MGEzMTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-12T04:46:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-12T04:46:59Z"}, "message": "Auto merge of #37469 - meh:fix-term, r=alexcrichton\n\nFix terminfo database search path\n\nThis is more consistent with what every other program does, I happened to have `TERMINFO` set as `/usr/share/terminfo` but had the actual database in `~/.terminfo`, regardless of that every other terminfo/ncurses based software picked up the one in the home correctly.\n\nThis just puts the path in `TERMINFO` at the top of the search paths, and moves the home checking to the default search paths section.", "tree": {"sha": "8fde5e817fc50b5b5d981f06e9f13a8f1a89078b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fde5e817fc50b5b5d981f06e9f13a8f1a89078b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b33873f5411d4ad6a3bd5a4a18dffce8a960a316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b33873f5411d4ad6a3bd5a4a18dffce8a960a316", "html_url": "https://github.com/rust-lang/rust/commit/b33873f5411d4ad6a3bd5a4a18dffce8a960a316", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b33873f5411d4ad6a3bd5a4a18dffce8a960a316/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "391939be76be89845b9673b0c39301c0c07bbf34", "url": "https://api.github.com/repos/rust-lang/rust/commits/391939be76be89845b9673b0c39301c0c07bbf34", "html_url": "https://github.com/rust-lang/rust/commit/391939be76be89845b9673b0c39301c0c07bbf34"}, {"sha": "f9cc16652746285a765eea5db14d1a6ead04bab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9cc16652746285a765eea5db14d1a6ead04bab6", "html_url": "https://github.com/rust-lang/rust/commit/f9cc16652746285a765eea5db14d1a6ead04bab6"}], "stats": {"total": 56, "additions": 26, "deletions": 30}, "files": [{"sha": "011d06b1c0f21664275e39c54f68d7503509a230", "filename": "src/libterm/terminfo/searcher.rs", "status": "modified", "additions": 26, "deletions": 30, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/b33873f5411d4ad6a3bd5a4a18dffce8a960a316/src%2Flibterm%2Fterminfo%2Fsearcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33873f5411d4ad6a3bd5a4a18dffce8a960a316/src%2Flibterm%2Fterminfo%2Fsearcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fterminfo%2Fsearcher.rs?ref=b33873f5411d4ad6a3bd5a4a18dffce8a960a316", "patch": "@@ -26,38 +26,34 @@ pub fn get_dbpath_for_term(term: &str) -> Option<PathBuf> {\n     };\n \n     // Find search directory\n-    match env::var_os(\"TERMINFO\") {\n-        Some(dir) => dirs_to_search.push(PathBuf::from(dir)),\n-        None => {\n-            if let Some(mut homedir) = env::home_dir() {\n-                // ncurses compatibility;\n-                homedir.push(\".terminfo\");\n-                dirs_to_search.push(homedir)\n-            }\n-            match env::var(\"TERMINFO_DIRS\") {\n-                Ok(dirs) => {\n-                    for i in dirs.split(':') {\n-                        if i == \"\" {\n-                            dirs_to_search.push(PathBuf::from(\"/usr/share/terminfo\"));\n-                        } else {\n-                            dirs_to_search.push(PathBuf::from(i));\n-                        }\n-                    }\n-                }\n-                // Found nothing in TERMINFO_DIRS, use the default paths:\n-                // According to  /etc/terminfo/README, after looking at\n-                // ~/.terminfo, ncurses will search /etc/terminfo, then\n-                // /lib/terminfo, and eventually /usr/share/terminfo.\n-                // On Haiku the database can be found at /boot/system/data/terminfo\n-                Err(..) => {\n-                    dirs_to_search.push(PathBuf::from(\"/etc/terminfo\"));\n-                    dirs_to_search.push(PathBuf::from(\"/lib/terminfo\"));\n-                    dirs_to_search.push(PathBuf::from(\"/usr/share/terminfo\"));\n-                    dirs_to_search.push(PathBuf::from(\"/boot/system/data/terminfo\"));\n-                }\n+    if let Some(dir) = env::var_os(\"TERMINFO\") {\n+        dirs_to_search.push(PathBuf::from(dir));\n+    }\n+\n+    if let Ok(dirs) = env::var(\"TERMINFO_DIRS\") {\n+        for i in dirs.split(':') {\n+            if i == \"\" {\n+                dirs_to_search.push(PathBuf::from(\"/usr/share/terminfo\"));\n+            } else {\n+                dirs_to_search.push(PathBuf::from(i));\n             }\n         }\n-    };\n+    } else {\n+        // Found nothing in TERMINFO_DIRS, use the default paths:\n+        // According to  /etc/terminfo/README, after looking at\n+        // ~/.terminfo, ncurses will search /etc/terminfo, then\n+        // /lib/terminfo, and eventually /usr/share/terminfo.\n+        // On Haiku the database can be found at /boot/system/data/terminfo\n+        if let Some(mut homedir) = env::home_dir() {\n+            homedir.push(\".terminfo\");\n+            dirs_to_search.push(homedir)\n+        }\n+\n+        dirs_to_search.push(PathBuf::from(\"/etc/terminfo\"));\n+        dirs_to_search.push(PathBuf::from(\"/lib/terminfo\"));\n+        dirs_to_search.push(PathBuf::from(\"/usr/share/terminfo\"));\n+        dirs_to_search.push(PathBuf::from(\"/boot/system/data/terminfo\"));\n+    }\n \n     // Look for the terminal in all of the search directories\n     for mut p in dirs_to_search {"}]}