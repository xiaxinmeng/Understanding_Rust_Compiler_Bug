{"sha": "f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YTFhOWNkM2M3NzU3Y2EzZjhiYTU5Mjg3YjVkMzY2NDUwMDhiOWI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-23T16:46:08Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-24T14:53:56Z"}, "message": "Merge item tree traits\n\nThe Source trait isn't needed anymore since we no longer merge\nextern crate items with use items.", "tree": {"sha": "af7502e953fd01422db014cbc5b30685f9369480", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af7502e953fd01422db014cbc5b30685f9369480"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "html_url": "https://github.com/rust-lang/rust/commit/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5fd02d93cdfafeba23f50ca9c414053aaa548ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5fd02d93cdfafeba23f50ca9c414053aaa548ae", "html_url": "https://github.com/rust-lang/rust/commit/b5fd02d93cdfafeba23f50ca9c414053aaa548ae"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "a74136b8e6bd07865da5d867db5e09ce80e102fe", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "patch": "@@ -27,7 +27,7 @@ use crate::{\n         LogicOp, MatchArm, Ordering, Pat, PatId, RecordFieldPat, RecordLitField, Statement,\n     },\n     item_scope::BuiltinShadowMode,\n-    item_tree::{FileItemTreeId, ItemTree, ItemTreeSource},\n+    item_tree::{FileItemTreeId, ItemTree, ItemTreeNode},\n     path::{GenericArgs, Path},\n     type_ref::{Mutability, Rawness, TypeRef},\n     AdtId, ConstLoc, ContainerId, DefWithBodyId, EnumLoc, FunctionLoc, Intern, ModuleDefId,\n@@ -557,7 +557,7 @@ impl ExprCollector<'_> {\n         }\n     }\n \n-    fn find_inner_item<S: ItemTreeSource>(&self, id: AstId<ast::ModuleItem>) -> FileItemTreeId<S> {\n+    fn find_inner_item<S: ItemTreeNode>(&self, id: AstId<ast::ModuleItem>) -> FileItemTreeId<S> {\n         let index =\n             self.item_trees.iter().position(|(file, _)| *file == id.file_id).unwrap_or_else(|| {\n                 panic!(\"couldn't find item tree for file {:?}\", id.file_id);"}, {"sha": "a7527170388b6619bbd67f26653e9b3156147054", "filename": "crates/ra_hir_def/src/item_tree.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs?ref=f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "patch": "@@ -153,7 +153,7 @@ impl ItemTree {\n         self.inner_items.values().flatten().copied()\n     }\n \n-    pub fn source<S: ItemTreeSource>(\n+    pub fn source<S: ItemTreeNode>(\n         &self,\n         db: &dyn DefDatabase,\n         of: FileItemTreeId<S>,\n@@ -173,6 +173,10 @@ impl ItemTree {\n \n /// Trait implemented by all nodes in the item tree.\n pub trait ItemTreeNode: Clone {\n+    type Source: AstNode + Into<ast::ModuleItem>;\n+\n+    fn ast_id(&self) -> FileAstId<Self::Source>;\n+\n     /// Looks up an instance of `Self` in an item tree.\n     fn lookup(tree: &ItemTree, index: Idx<Self>) -> &Self;\n \n@@ -183,13 +187,6 @@ pub trait ItemTreeNode: Clone {\n     fn id_to_mod_item(id: FileItemTreeId<Self>) -> ModItem;\n }\n \n-/// Trait for item tree nodes that allow accessing the original AST node.\n-pub trait ItemTreeSource: ItemTreeNode {\n-    type Source: AstNode + Into<ast::ModuleItem>;\n-\n-    fn ast_id(&self) -> FileAstId<Self::Source>;\n-}\n-\n pub struct FileItemTreeId<N: ItemTreeNode> {\n     index: Idx<N>,\n     _p: PhantomData<N>,\n@@ -242,6 +239,12 @@ macro_rules! mod_items {\n \n         $(\n             impl ItemTreeNode for $typ {\n+                type Source = $ast;\n+\n+                fn ast_id(&self) -> FileAstId<Self::Source> {\n+                    self.ast_id\n+                }\n+\n                 fn lookup(tree: &ItemTree, index: Idx<Self>) -> &Self {\n                     &tree.$fld[index]\n                 }\n@@ -259,14 +262,6 @@ macro_rules! mod_items {\n                 }\n             }\n \n-            impl ItemTreeSource for $typ {\n-                type Source = $ast;\n-\n-                fn ast_id(&self) -> FileAstId<Self::Source> {\n-                    self.ast_id\n-                }\n-            }\n-\n             impl Index<Idx<$typ>> for ItemTree {\n                 type Output = $typ;\n "}, {"sha": "043b93fad555fd272ac0136455aa7215927ed955", "filename": "crates/ra_hir_def/src/src.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/crates%2Fra_hir_def%2Fsrc%2Fsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b/crates%2Fra_hir_def%2Fsrc%2Fsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fsrc.rs?ref=f9a1a9cd3c7757ca3f8ba59287b5d36645008b9b", "patch": "@@ -3,14 +3,14 @@\n use hir_expand::InFile;\n use ra_arena::map::ArenaMap;\n \n-use crate::{db::DefDatabase, item_tree::ItemTreeSource, AssocItemLoc, ItemLoc};\n+use crate::{db::DefDatabase, item_tree::ItemTreeNode, AssocItemLoc, ItemLoc};\n \n pub trait HasSource {\n     type Value;\n     fn source(&self, db: &dyn DefDatabase) -> InFile<Self::Value>;\n }\n \n-impl<N: ItemTreeSource> HasSource for AssocItemLoc<N> {\n+impl<N: ItemTreeNode> HasSource for AssocItemLoc<N> {\n     type Value = N::Source;\n \n     fn source(&self, db: &dyn DefDatabase) -> InFile<N::Source> {\n@@ -23,7 +23,7 @@ impl<N: ItemTreeSource> HasSource for AssocItemLoc<N> {\n     }\n }\n \n-impl<N: ItemTreeSource> HasSource for ItemLoc<N> {\n+impl<N: ItemTreeNode> HasSource for ItemLoc<N> {\n     type Value = N::Source;\n \n     fn source(&self, db: &dyn DefDatabase) -> InFile<N::Source> {"}]}