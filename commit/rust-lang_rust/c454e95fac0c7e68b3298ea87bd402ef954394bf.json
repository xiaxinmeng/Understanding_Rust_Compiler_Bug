{"sha": "c454e95fac0c7e68b3298ea87bd402ef954394bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NTRlOTVmYWMwYzdlNjhiMzI5OGVhODdiZDQwMmVmOTU0Mzk0YmY=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-13T23:38:36Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-23T18:40:18Z"}, "message": "Add basic test cases for closure bounds. (#3569)", "tree": {"sha": "f822a3ab3d313a9e62d553d1673638d407ced8a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f822a3ab3d313a9e62d553d1673638d407ced8a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c454e95fac0c7e68b3298ea87bd402ef954394bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c454e95fac0c7e68b3298ea87bd402ef954394bf", "html_url": "https://github.com/rust-lang/rust/commit/c454e95fac0c7e68b3298ea87bd402ef954394bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c454e95fac0c7e68b3298ea87bd402ef954394bf/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c0a0404d591958b8c31deab8d08ad6f82f8c15b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c0a0404d591958b8c31deab8d08ad6f82f8c15b", "html_url": "https://github.com/rust-lang/rust/commit/7c0a0404d591958b8c31deab8d08ad6f82f8c15b"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "c3c8467233c4ddbfc28b1b1c739d92be4b7ad544", "filename": "src/test/compile-fail/closure-bounds-cant-promote-superkind-in-struct.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-cant-promote-superkind-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-cant-promote-superkind-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-cant-promote-superkind-in-struct.rs?ref=c454e95fac0c7e68b3298ea87bd402ef954394bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct X {\n+    field: @fn:Copy(),\n+}\n+\n+fn foo(blk: @fn()) -> X {\n+    return X { field: blk }; //~ ERROR expected bounds `Copy` but found no bounds\n+}\n+\n+fn main() {\n+}"}, {"sha": "0b11da14e71a9b280128172161faefd4f7ab6267", "filename": "src/test/compile-fail/closure-bounds-copy-cant-capture-noncopyable.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-copy-cant-capture-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-copy-cant-capture-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-copy-cant-capture-noncopyable.rs?ref=c454e95fac0c7e68b3298ea87bd402ef954394bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::comm;\n+\n+// If this were legal you could use it to copy captured noncopyables.\n+// Issue (#2828)\n+\n+fn foo(blk: ~fn:Copy()) {\n+    blk();\n+}\n+\n+fn main() {\n+    let (p,c) = comm::stream();\n+    do foo {\n+        c.send(()); //~ ERROR does not fulfill `Copy`\n+    }\n+    p.recv();\n+}"}, {"sha": "cac1244a560920b3180b05f2261ad0f437b2682b", "filename": "src/test/compile-fail/closure-bounds-static-cant-capture-borrowed.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-static-cant-capture-borrowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-static-cant-capture-borrowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-static-cant-capture-borrowed.rs?ref=c454e95fac0c7e68b3298ea87bd402ef954394bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn bar(blk: &fn:'static()) {\n+}\n+\n+fn foo(x: &()) {\n+    do bar {\n+        let _ = x; //~ ERROR does not fulfill `'static`\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "a975349e7302289ce672f33226eb93d0e13093a2", "filename": "src/test/compile-fail/closure-bounds-subtype.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-subtype.rs?ref=c454e95fac0c7e68b3298ea87bd402ef954394bf", "patch": "@@ -1,3 +1,4 @@\n+\n fn take_any(_: &fn()) {\n }\n \n@@ -7,6 +8,9 @@ fn take_copyable(_: &fn:Copy()) {\n fn take_copyable_owned(_: &fn:Copy+Owned()) {\n }\n \n+fn take_const_owned(_: &fn:Const+Owned()) {\n+}\n+\n fn give_any(f: &fn()) {\n     take_any(f);\n     take_copyable(f); //~ ERROR expected bounds `Copy` but found no bounds\n@@ -29,6 +33,7 @@ fn give_copyable_owned(f: &fn:Copy+Owned()) {\n     take_any(f);\n     take_copyable(f);\n     take_copyable_owned(f);\n+    take_const_owned(f); //~ ERROR expected bounds `Owned+Const` but found bounds `Copy+Owned`\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "26bea0e514151e4e1e0da9f5e5fbeb04ba74f5e5", "filename": "src/test/run-pass/closure-bounds-can-capture-chan.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Frun-pass%2Fclosure-bounds-can-capture-chan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c454e95fac0c7e68b3298ea87bd402ef954394bf/src%2Ftest%2Frun-pass%2Fclosure-bounds-can-capture-chan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-bounds-can-capture-chan.rs?ref=c454e95fac0c7e68b3298ea87bd402ef954394bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::comm;\n+\n+fn foo(blk: ~fn:Owned()) {\n+    blk();\n+}\n+\n+fn main() {\n+    let (p,c) = comm::stream();\n+    do foo {\n+        c.send(());\n+    }\n+    p.recv();\n+}"}]}