{"sha": "0706ac0faeff6c01b8a2505736534038978164c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MDZhYzBmYWVmZjZjMDFiOGEyNTA1NzM2NTM0MDM4OTc4MTY0YzA=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-10-01T13:06:50Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-10-01T13:06:50Z"}, "message": "use the *adjusted* callee type in effect checking\n\nFixes #28776", "tree": {"sha": "0b2bebccc45abb929db9e76dac1cdbb6527f741b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b2bebccc45abb929db9e76dac1cdbb6527f741b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0706ac0faeff6c01b8a2505736534038978164c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0706ac0faeff6c01b8a2505736534038978164c0", "html_url": "https://github.com/rust-lang/rust/commit/0706ac0faeff6c01b8a2505736534038978164c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0706ac0faeff6c01b8a2505736534038978164c0/comments", "author": null, "committer": null, "parents": [{"sha": "78edd4f3a0c614c8deab030351ece9baade848cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/78edd4f3a0c614c8deab030351ece9baade848cc", "html_url": "https://github.com/rust-lang/rust/commit/78edd4f3a0c614c8deab030351ece9baade848cc"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "0bbb57afc278e0604e4e658787ef02ee3e7d4dcc", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0706ac0faeff6c01b8a2505736534038978164c0/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0706ac0faeff6c01b8a2505736534038978164c0/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=0706ac0faeff6c01b8a2505736534038978164c0", "patch": "@@ -105,6 +105,7 @@ pub mod front {\n }\n \n pub mod middle {\n+    pub mod expr_use_visitor; // STAGE0: increase glitch immunity\n     pub mod astconv_util;\n     pub mod astencode;\n     pub mod cfg;\n@@ -122,7 +123,6 @@ pub mod middle {\n     pub mod dependency_format;\n     pub mod effect;\n     pub mod entry;\n-    pub mod expr_use_visitor;\n     pub mod free_region;\n     pub mod intrinsicck;\n     pub mod infer;"}, {"sha": "8a206e3d88e4b5b9c69639519907351aed4c0aa5", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0706ac0faeff6c01b8a2505736534038978164c0/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0706ac0faeff6c01b8a2505736534038978164c0/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=0706ac0faeff6c01b8a2505736534038978164c0", "patch": "@@ -151,15 +151,15 @@ impl<'a, 'tcx, 'v> Visitor<'v> for EffectCheckVisitor<'a, 'tcx> {\n                 }\n             }\n             hir::ExprCall(ref base, _) => {\n-                let base_type = self.tcx.node_id_to_type(base.id);\n+                let base_type = self.tcx.expr_ty_adjusted(base);\n                 debug!(\"effect: call case, base type is {:?}\",\n                         base_type);\n                 if type_is_unsafe_function(base_type) {\n                     self.require_unsafe(expr.span, \"call to unsafe function\")\n                 }\n             }\n             hir::ExprUnary(hir::UnDeref, ref base) => {\n-                let base_type = self.tcx.node_id_to_type(base.id);\n+                let base_type = self.tcx.expr_ty_adjusted(base);\n                 debug!(\"effect: unary case, base type is {:?}\",\n                         base_type);\n                 if let ty::TyRawPtr(_) = base_type.sty {"}, {"sha": "ce06c8bf220ee0317c3a94c55b2bfb4c12666a56", "filename": "src/test/compile-fail/issue-28776.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0706ac0faeff6c01b8a2505736534038978164c0/src%2Ftest%2Fcompile-fail%2Fissue-28776.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0706ac0faeff6c01b8a2505736534038978164c0/src%2Ftest%2Fcompile-fail%2Fissue-28776.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28776.rs?ref=0706ac0faeff6c01b8a2505736534038978164c0", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ptr;\n+\n+fn main() {\n+    (&ptr::write)(1 as *mut _, 42); //~ ERROR E0133\n+}"}]}