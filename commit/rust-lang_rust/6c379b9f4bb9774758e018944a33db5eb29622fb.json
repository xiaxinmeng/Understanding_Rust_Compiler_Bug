{"sha": "6c379b9f4bb9774758e018944a33db5eb29622fb", "node_id": "C_kwDOAAsO6NoAKDZjMzc5YjlmNGJiOTc3NDc1OGUwMTg5NDRhMzNkYjVlYjI5NjIyZmI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-07-27T10:45:29Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-07-27T10:46:04Z"}, "message": "fix: Fix Semantics::original_ast_node not caching the resulting file", "tree": {"sha": "325f5a9a1b956920cbd47d6e544a3454bd822c0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/325f5a9a1b956920cbd47d6e544a3454bd822c0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c379b9f4bb9774758e018944a33db5eb29622fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c379b9f4bb9774758e018944a33db5eb29622fb", "html_url": "https://github.com/rust-lang/rust/commit/6c379b9f4bb9774758e018944a33db5eb29622fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c379b9f4bb9774758e018944a33db5eb29622fb/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2eebd7a50faa2578376a80ceba91bdc75d748e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2eebd7a50faa2578376a80ceba91bdc75d748e2", "html_url": "https://github.com/rust-lang/rust/commit/c2eebd7a50faa2578376a80ceba91bdc75d748e2"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a75e5cafd0bd18252854c6fb254b3c84eb988d69", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6c379b9f4bb9774758e018944a33db5eb29622fb/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c379b9f4bb9774758e018944a33db5eb29622fb/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=6c379b9f4bb9774758e018944a33db5eb29622fb", "patch": "@@ -924,7 +924,12 @@ impl<'db> SemanticsImpl<'db> {\n     }\n \n     fn original_ast_node<N: AstNode>(&self, node: N) -> Option<N> {\n-        self.wrap_node_infile(node).original_ast_node(self.db.upcast()).map(|it| it.value)\n+        self.wrap_node_infile(node).original_ast_node(self.db.upcast()).map(\n+            |InFile { file_id, value }| {\n+                self.cache(find_root(value.syntax()), file_id);\n+                value\n+            },\n+        )\n     }\n \n     fn diagnostics_display_range(&self, src: InFile<SyntaxNodePtr>) -> FileRange {"}]}