{"sha": "cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMTJhMjM2OWE0YzNhOWI5NzE5YTE0YzdmM2Y1M2I2YjU4YjllYmU=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-14T16:41:38Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-14T16:41:38Z"}, "message": "s/paths::LL/paths::LINKED_LIST\n\nAll other paths had non-abbreviated names.", "tree": {"sha": "75a90b682fa07dbc35a3084f5d789492e6b60656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75a90b682fa07dbc35a3084f5d789492e6b60656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "html_url": "https://github.com/rust-lang/rust/commit/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48a672b4eefa1cfe4dad62e37f8768e2f5a0c355", "url": "https://api.github.com/repos/rust-lang/rust/commits/48a672b4eefa1cfe4dad62e37f8768e2f5a0c355", "html_url": "https://github.com/rust-lang/rust/commit/48a672b4eefa1cfe4dad62e37f8768e2f5a0c355"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f376e28c9920e80afd42140984ab37f9bfdc9898", "filename": "src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "patch": "@@ -736,7 +736,7 @@ fn is_ref_iterable_type(cx: &LateContext, e: &Expr) -> bool {\n     let ty = cx.tcx.expr_ty(e);\n     is_iterable_array(ty) ||\n     match_type(cx, ty, &paths::VEC) ||\n-    match_type(cx, ty, &paths::LL) ||\n+    match_type(cx, ty, &paths::LINKED_LIST) ||\n     match_type(cx, ty, &paths::HASHMAP) ||\n     match_type(cx, ty, &[\"std\", \"collections\", \"hash\", \"set\", \"HashSet\"]) ||\n     match_type(cx, ty, &[\"collections\", \"vec_deque\", \"VecDeque\"]) ||"}, {"sha": "9d12d7970d1d47b02b14b52e935afb89d8bfda43", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "patch": "@@ -75,7 +75,7 @@ impl LateLintPass for TypePass {\n                                                \"`Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation.\");\n                         }\n                     }\n-                } else if match_def_path(cx, did.def_id(), &paths::LL) {\n+                } else if match_def_path(cx, did.def_id(), &paths::LINKED_LIST) {\n                     span_help_and_lint(cx,\n                                        LINKEDLIST,\n                                        ast_ty.span,"}, {"sha": "1777c31ef8c5496e1ab387a92e14f19ff373045b", "filename": "src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/src%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe/src%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fpaths.rs?ref=cd12a2369a4c3a9b9719a14c7f3f53b6b58b9ebe", "patch": "@@ -19,7 +19,7 @@ pub const HASHMAP_ENTRY: [&'static str; 5] = [\"std\", \"collections\", \"hash\", \"map\n pub const HASHMAP: [&'static str; 5] = [\"std\", \"collections\", \"hash\", \"map\", \"HashMap\"];\n pub const HASH: [&'static str; 2] = [\"hash\", \"Hash\"];\n pub const IO_PRINT: [&'static str; 3] = [\"std\", \"io\", \"_print\"];\n-pub const LL: [&'static str; 3] = [\"collections\", \"linked_list\", \"LinkedList\"];\n+pub const LINKED_LIST: [&'static str; 3] = [\"collections\", \"linked_list\", \"LinkedList\"];\n pub const MUTEX: [&'static str; 4] = [\"std\", \"sync\", \"mutex\", \"Mutex\"];\n pub const OPEN_OPTIONS: [&'static str; 3] = [\"std\", \"fs\", \"OpenOptions\"];\n pub const OPTION: [&'static str; 3] = [\"core\", \"option\", \"Option\"];"}]}