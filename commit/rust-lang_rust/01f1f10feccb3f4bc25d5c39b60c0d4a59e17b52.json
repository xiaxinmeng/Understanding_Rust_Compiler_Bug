{"sha": "01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZjFmMTBmZWNjYjNmNGJjMjVkNWMzOWI2MGMwZDRhNTllMTdiNTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-23T21:37:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-23T21:37:06Z"}, "message": "Merge #4111 #4112\n\n4111: Record definitions in `extern` blocks r=jonas-schievink a=jonas-schievink\n\nEnables completion of extern functions and statics.\r\n\r\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/3711\n\n4112: Add Launch configuration for release build r=matklad a=jonas-schievink\n\nThe debug build takes very long until I can test anything useful, with the release build it's much quicker. Add another Run configuration for it.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "1249f16d02f4be224f5154b4b163aae178be75cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1249f16d02f4be224f5154b4b163aae178be75cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeogqCCRBK7hj4Ov3rIwAAdHIIABMLjFl5pXFjYvkzIhwynbw2\nYGe4VV/0qtwTFhKFW1RQXPFC/XLEGGhbrO0uVvNcidOkxnDA4LjawMxKvZV0T4Ff\ncGm9uAEnEEWART/CRzpKVGRdqchK5egqe+cPVrTQuxfjmXiToVXaNJI92f1Q4zXc\n1WNnLCFdwGA8wv5rSbjidHRjaPbRznogCSOzLQshoD0fOlcVtYk8u8pCy1SZDCJ/\nLuAzFvCogX5i/B3rLdhlNM/AMOHQAvvGpf9exyFbHHdtpEbm6jhU+orXOAU4iQ10\nSpnT5QqD87xttikXuvSn7AyKxpBXHgOmEDK3LkSLV4imJ9WQqKqrRPe5VY+1hNQ=\n=D+8L\n-----END PGP SIGNATURE-----\n", "payload": "tree 1249f16d02f4be224f5154b4b163aae178be75cb\nparent 4f0cb81a2e4364994d23474d7738125d1cb56573\nparent 5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0\nparent 80a42a0628f7655c3299fbf4c5a15e31990b35d3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587677826 +0000\ncommitter GitHub <noreply@github.com> 1587677826 +0000\n\nMerge #4111 #4112\n\n4111: Record definitions in `extern` blocks r=jonas-schievink a=jonas-schievink\n\nEnables completion of extern functions and statics.\r\n\r\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/3711\n\n4112: Add Launch configuration for release build r=matklad a=jonas-schievink\n\nThe debug build takes very long until I can test anything useful, with the release build it's much quicker. Add another Run configuration for it.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "html_url": "https://github.com/rust-lang/rust/commit/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f0cb81a2e4364994d23474d7738125d1cb56573", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0cb81a2e4364994d23474d7738125d1cb56573", "html_url": "https://github.com/rust-lang/rust/commit/4f0cb81a2e4364994d23474d7738125d1cb56573"}, {"sha": "5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "html_url": "https://github.com/rust-lang/rust/commit/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0"}, {"sha": "80a42a0628f7655c3299fbf4c5a15e31990b35d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a42a0628f7655c3299fbf4c5a15e31990b35d3", "html_url": "https://github.com/rust-lang/rust/commit/80a42a0628f7655c3299fbf4c5a15e31990b35d3"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "3f74d75666d2a2e2450c952cd3ed31fa7ec557f4", "filename": ".vscode/launch.json", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/.vscode%2Flaunch.json", "raw_url": "https://github.com/rust-lang/rust/raw/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/.vscode%2Flaunch.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.vscode%2Flaunch.json?ref=01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "patch": "@@ -11,7 +11,7 @@\n   \"configurations\": [\n     {\n       // Used for testing the extension with the installed LSP server.\n-      \"name\": \"Run Extension\",\n+      \"name\": \"Run Installed Extension\",\n       \"type\": \"extensionHost\",\n       \"request\": \"launch\",\n       \"runtimeExecutable\": \"${execPath}\",\n@@ -30,7 +30,7 @@\n     },\n     {\n       // Used for testing the extension with a local build of the LSP server (in `target/debug`).\n-      \"name\": \"Run Extension (Dev Server)\",\n+      \"name\": \"Run Extension (Debug Build)\",\n       \"type\": \"extensionHost\",\n       \"request\": \"launch\",\n       \"runtimeExecutable\": \"${execPath}\",\n@@ -49,6 +49,27 @@\n         \"__RA_LSP_SERVER_DEBUG\": \"${workspaceFolder}/target/debug/rust-analyzer\"\n       }\n     },\n+    {\n+      // Used for testing the extension with a local build of the LSP server (in `target/release`).\n+      \"name\": \"Run Extension (Release Build)\",\n+      \"type\": \"extensionHost\",\n+      \"request\": \"launch\",\n+      \"runtimeExecutable\": \"${execPath}\",\n+      \"args\": [\n+        \"--disable-extensions\",\n+        \"--extensionDevelopmentPath=${workspaceFolder}/editors/code\"\n+      ],\n+      \"outFiles\": [\n+        \"${workspaceFolder}/editors/code/out/**/*.js\"\n+      ],\n+      \"preLaunchTask\": \"Build Extension\",\n+      \"skipFiles\": [\n+        \"<node_internals>/**/*.js\"\n+      ],\n+      \"env\": {\n+        \"__RA_LSP_SERVER_DEBUG\": \"${workspaceFolder}/target/release/rust-analyzer\"\n+      }\n+    },\n     {\n       // Used to attach LLDB to a running LSP server.\n       // NOTE: Might require root permissions. For this run:"}, {"sha": "39b011ad724c53c08e1c7aea56c9bb803553a22e", "filename": "crates/ra_hir_def/src/nameres/raw.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs?ref=01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "patch": "@@ -266,8 +266,8 @@ impl RawItemsCollector {\n                 self.add_macro(current_module, it);\n                 return;\n             }\n-            ast::ModuleItem::ExternBlock(_) => {\n-                // FIXME: add extern block\n+            ast::ModuleItem::ExternBlock(it) => {\n+                self.add_extern_block(current_module, it);\n                 return;\n             }\n         };\n@@ -278,6 +278,34 @@ impl RawItemsCollector {\n         }\n     }\n \n+    fn add_extern_block(\n+        &mut self,\n+        current_module: Option<Idx<ModuleData>>,\n+        block: ast::ExternBlock,\n+    ) {\n+        if let Some(items) = block.extern_item_list() {\n+            for item in items.extern_items() {\n+                let attrs = self.parse_attrs(&item);\n+                let visibility =\n+                    RawVisibility::from_ast_with_hygiene(item.visibility(), &self.hygiene);\n+                let (kind, name) = match item {\n+                    ast::ExternItem::FnDef(it) => {\n+                        (DefKind::Function(self.source_ast_id_map.ast_id(&it)), it.name())\n+                    }\n+                    ast::ExternItem::StaticDef(it) => {\n+                        (DefKind::Static(self.source_ast_id_map.ast_id(&it)), it.name())\n+                    }\n+                };\n+\n+                if let Some(name) = name {\n+                    let name = name.as_name();\n+                    let def = self.raw_items.defs.alloc(DefData { name, kind, visibility });\n+                    self.push_item(current_module, attrs, RawItemKind::Def(def));\n+                }\n+            }\n+        }\n+    }\n+\n     fn add_module(&mut self, current_module: Option<Idx<ModuleData>>, module: ast::Module) {\n         let name = match module.name() {\n             Some(it) => it.as_name(),"}, {"sha": "83120fa365d68dabc9c824aeec4c907df02cf6f0", "filename": "crates/ra_hir_def/src/nameres/tests.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=01f1f10feccb3f4bc25d5c39b60c0d4a59e17b52", "patch": "@@ -25,7 +25,7 @@ fn compute_crate_def_map(fixture: &str) -> Arc<CrateDefMap> {\n #[test]\n fn crate_def_map_smoke_test() {\n     let map = def_map(\n-        \"\n+        r\"\n         //- /lib.rs\n         mod foo;\n         struct S;\n@@ -45,6 +45,11 @@ fn crate_def_map_smoke_test() {\n         }\n \n         enum E { V }\n+\n+        extern {\n+            static EXT: u8;\n+            fn ext();\n+        }\n         \",\n     );\n     assert_snapshot!(map, @r###\"\n@@ -61,7 +66,9 @@ fn crate_def_map_smoke_test() {\n         \u22eecrate::foo::bar\n         \u22eeBaz: t v\n         \u22eeE: t\n+        \u22eeEXT: v\n         \u22eeU: t v\n+        \u22eeext: v\n     \"###)\n }\n "}]}