{"sha": "961ace3fc229f203c2c84f977a14f8833de47f55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MWFjZTNmYzIyOWYyMDNjMmM4NGY5NzdhMTRmODgzM2RlNDdmNTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T15:28:04Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T18:24:43Z"}, "message": "lowering: move lower_{unop,binop} -> expr.rs", "tree": {"sha": "9276fa784c17463e3e694e0019cf99042644a966", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9276fa784c17463e3e694e0019cf99042644a966"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/961ace3fc229f203c2c84f977a14f8833de47f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/961ace3fc229f203c2c84f977a14f8833de47f55", "html_url": "https://github.com/rust-lang/rust/commit/961ace3fc229f203c2c84f977a14f8833de47f55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/961ace3fc229f203c2c84f977a14f8833de47f55/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e71f6e1fbcb41572b72ea266cce53a14e8be432b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e71f6e1fbcb41572b72ea266cce53a14e8be432b", "html_url": "https://github.com/rust-lang/rust/commit/e71f6e1fbcb41572b72ea266cce53a14e8be432b"}], "stats": {"total": 68, "additions": 34, "deletions": 34}, "files": [{"sha": "480ab228d9a49a781c706e2657c094c4341e8ea4", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/961ace3fc229f203c2c84f977a14f8833de47f55/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/961ace3fc229f203c2c84f977a14f8833de47f55/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=961ace3fc229f203c2c84f977a14f8833de47f55", "patch": "@@ -4114,40 +4114,6 @@ impl<'a> LoweringContext<'a> {\n         }\n     }\n \n-    fn lower_unop(&mut self, u: UnOp) -> hir::UnOp {\n-        match u {\n-            UnOp::Deref => hir::UnDeref,\n-            UnOp::Not => hir::UnNot,\n-            UnOp::Neg => hir::UnNeg,\n-        }\n-    }\n-\n-    fn lower_binop(&mut self, b: BinOp) -> hir::BinOp {\n-        Spanned {\n-            node: match b.node {\n-                BinOpKind::Add => hir::BinOpKind::Add,\n-                BinOpKind::Sub => hir::BinOpKind::Sub,\n-                BinOpKind::Mul => hir::BinOpKind::Mul,\n-                BinOpKind::Div => hir::BinOpKind::Div,\n-                BinOpKind::Rem => hir::BinOpKind::Rem,\n-                BinOpKind::And => hir::BinOpKind::And,\n-                BinOpKind::Or => hir::BinOpKind::Or,\n-                BinOpKind::BitXor => hir::BinOpKind::BitXor,\n-                BinOpKind::BitAnd => hir::BinOpKind::BitAnd,\n-                BinOpKind::BitOr => hir::BinOpKind::BitOr,\n-                BinOpKind::Shl => hir::BinOpKind::Shl,\n-                BinOpKind::Shr => hir::BinOpKind::Shr,\n-                BinOpKind::Eq => hir::BinOpKind::Eq,\n-                BinOpKind::Lt => hir::BinOpKind::Lt,\n-                BinOpKind::Le => hir::BinOpKind::Le,\n-                BinOpKind::Ne => hir::BinOpKind::Ne,\n-                BinOpKind::Ge => hir::BinOpKind::Ge,\n-                BinOpKind::Gt => hir::BinOpKind::Gt,\n-            },\n-            span: b.span,\n-        }\n-    }\n-\n     fn lower_pat(&mut self, p: &Pat) -> P<hir::Pat> {\n         let node = match p.node {\n             PatKind::Wild => hir::PatKind::Wild,"}, {"sha": "718f51adc22c2eea887889b8461159e70214be74", "filename": "src/librustc/hir/lowering/expr.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/961ace3fc229f203c2c84f977a14f8833de47f55/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/961ace3fc229f203c2c84f977a14f8833de47f55/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs?ref=961ace3fc229f203c2c84f977a14f8833de47f55", "patch": "@@ -208,6 +208,40 @@ impl LoweringContext<'_> {\n         }\n     }\n \n+    fn lower_unop(&mut self, u: UnOp) -> hir::UnOp {\n+        match u {\n+            UnOp::Deref => hir::UnDeref,\n+            UnOp::Not => hir::UnNot,\n+            UnOp::Neg => hir::UnNeg,\n+        }\n+    }\n+\n+    fn lower_binop(&mut self, b: BinOp) -> hir::BinOp {\n+        Spanned {\n+            node: match b.node {\n+                BinOpKind::Add => hir::BinOpKind::Add,\n+                BinOpKind::Sub => hir::BinOpKind::Sub,\n+                BinOpKind::Mul => hir::BinOpKind::Mul,\n+                BinOpKind::Div => hir::BinOpKind::Div,\n+                BinOpKind::Rem => hir::BinOpKind::Rem,\n+                BinOpKind::And => hir::BinOpKind::And,\n+                BinOpKind::Or => hir::BinOpKind::Or,\n+                BinOpKind::BitXor => hir::BinOpKind::BitXor,\n+                BinOpKind::BitAnd => hir::BinOpKind::BitAnd,\n+                BinOpKind::BitOr => hir::BinOpKind::BitOr,\n+                BinOpKind::Shl => hir::BinOpKind::Shl,\n+                BinOpKind::Shr => hir::BinOpKind::Shr,\n+                BinOpKind::Eq => hir::BinOpKind::Eq,\n+                BinOpKind::Lt => hir::BinOpKind::Lt,\n+                BinOpKind::Le => hir::BinOpKind::Le,\n+                BinOpKind::Ne => hir::BinOpKind::Ne,\n+                BinOpKind::Ge => hir::BinOpKind::Ge,\n+                BinOpKind::Gt => hir::BinOpKind::Gt,\n+            },\n+            span: b.span,\n+        }\n+    }\n+\n     /// Emit an error and lower `ast::ExprKind::Let(pats, scrutinee)` into:\n     /// ```rust\n     /// match scrutinee { pats => true, _ => false }"}]}