{"sha": "9eaec139d0a71993f5b4eeef739bd565123b607e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYWVjMTM5ZDBhNzE5OTNmNWI0ZWVlZjczOWJkNTY1MTIzYjYwN2U=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-12-26T14:50:32Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-04T21:40:38Z"}, "message": "Small comment adjustments", "tree": {"sha": "545eb900593ac8a48caa77b462fc164b96701b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/545eb900593ac8a48caa77b462fc164b96701b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eaec139d0a71993f5b4eeef739bd565123b607e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eaec139d0a71993f5b4eeef739bd565123b607e", "html_url": "https://github.com/rust-lang/rust/commit/9eaec139d0a71993f5b4eeef739bd565123b607e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eaec139d0a71993f5b4eeef739bd565123b607e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caeb3d525d297af51f7c7b509fafbaa32db9ed3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/caeb3d525d297af51f7c7b509fafbaa32db9ed3e", "html_url": "https://github.com/rust-lang/rust/commit/caeb3d525d297af51f7c7b509fafbaa32db9ed3e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "1bf246a7b4f250a0dc21322c6ece0938a6359cdf", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9eaec139d0a71993f5b4eeef739bd565123b607e/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eaec139d0a71993f5b4eeef739bd565123b607e/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=9eaec139d0a71993f5b4eeef739bd565123b607e", "patch": "@@ -935,7 +935,6 @@ rustc_queries! {\n     }\n \n     Codegen {\n-        // FIXME: remove after figuring out how to make miri able to detect non-Rust function calls\n         query is_ctfe_mir_available(key: DefId) -> bool {\n             desc { |tcx| \"checking if item has ctfe mir available: `{}`\", tcx.def_path_str(key) }\n         }"}, {"sha": "a9bc11502bb90b974c6e5c36590ae139f3fb0ecb", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9eaec139d0a71993f5b4eeef739bd565123b607e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eaec139d0a71993f5b4eeef739bd565123b607e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=9eaec139d0a71993f5b4eeef739bd565123b607e", "patch": "@@ -542,6 +542,9 @@ fn inner_optimized_mir(tcx: TyCtxt<'_>, did: LocalDefId) -> Body<'_> {\n     }\n \n     match tcx.hir().body_const_context(did) {\n+        /// Run the `mir_for_ctfe` query, which depends on `mir_drops_elaborated_and_const_checked`\n+        /// which we are going to steal below. Thus we need to run `mir_for_ctfe` first, so it\n+        /// computes and caches its result.\n         Some(hir::ConstContext::ConstFn) => tcx.ensure().mir_for_ctfe(did),\n         None => {}\n         Some(other) => panic!(\"do not use `optimized_mir` for constants: {:?}\", other),"}]}