{"sha": "22254c3b480df40d4d3ca48a36a0f7672b8e19a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMjU0YzNiNDgwZGY0MGQ0ZDNjYTQ4YTM2YTBmNzY3MmI4ZTE5YTU=", "commit": {"author": {"name": "Benjamin Kircher", "email": "benjamin.kircher@gmail.com", "date": "2012-05-01T02:12:17Z"}, "committer": {"name": "Benjamin Kircher", "email": "benjamin.kircher@gmail.com", "date": "2012-05-01T02:12:17Z"}, "message": "std: Fix typo in getopts doc attribute", "tree": {"sha": "ce9a8ee1545d64abdc62ac29e2c2b29d77e69304", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce9a8ee1545d64abdc62ac29e2c2b29d77e69304"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22254c3b480df40d4d3ca48a36a0f7672b8e19a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22254c3b480df40d4d3ca48a36a0f7672b8e19a5", "html_url": "https://github.com/rust-lang/rust/commit/22254c3b480df40d4d3ca48a36a0f7672b8e19a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22254c3b480df40d4d3ca48a36a0f7672b8e19a5/comments", "author": {"login": "bkircher", "id": 536464, "node_id": "MDQ6VXNlcjUzNjQ2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/536464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkircher", "html_url": "https://github.com/bkircher", "followers_url": "https://api.github.com/users/bkircher/followers", "following_url": "https://api.github.com/users/bkircher/following{/other_user}", "gists_url": "https://api.github.com/users/bkircher/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkircher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkircher/subscriptions", "organizations_url": "https://api.github.com/users/bkircher/orgs", "repos_url": "https://api.github.com/users/bkircher/repos", "events_url": "https://api.github.com/users/bkircher/events{/privacy}", "received_events_url": "https://api.github.com/users/bkircher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkircher", "id": 536464, "node_id": "MDQ6VXNlcjUzNjQ2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/536464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkircher", "html_url": "https://github.com/bkircher", "followers_url": "https://api.github.com/users/bkircher/followers", "following_url": "https://api.github.com/users/bkircher/following{/other_user}", "gists_url": "https://api.github.com/users/bkircher/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkircher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkircher/subscriptions", "organizations_url": "https://api.github.com/users/bkircher/orgs", "repos_url": "https://api.github.com/users/bkircher/repos", "events_url": "https://api.github.com/users/bkircher/events{/privacy}", "received_events_url": "https://api.github.com/users/bkircher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e348567f77be77db01fc6d2f9184ef38adfdbf4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e348567f77be77db01fc6d2f9184ef38adfdbf4d", "html_url": "https://github.com/rust-lang/rust/commit/e348567f77be77db01fc6d2f9184ef38adfdbf4d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fe9bc25afa98b379a62ea6f7e1d4b759405532ed", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22254c3b480df40d4d3ca48a36a0f7672b8e19a5/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22254c3b480df40d4d3ca48a36a0f7672b8e19a5/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=22254c3b480df40d4d3ca48a36a0f7672b8e19a5", "patch": "@@ -4,12 +4,12 @@ Simple getopt alternative.\n Construct a vector of options, either by using reqopt, optopt, and optflag or\n by building them from components yourself, and pass them to getopts, along\n with a vector of actual arguments (not including argv[0]). You'll either get a\n-failure code back, or a match.  You'll have to verify whether the amount of\n+failure code back, or a match. You'll have to verify whether the amount of\n 'free' arguments in the match is what you expect. Use opt_* accessors to get\n argument values out of the match object.\n \n Single-character options are expected to appear on the command line with a\n-single preceeding dash; multiple-character options are expected to be\n+single preceding dash; multiple-character options are expected to be\n proceeded by two dashes. Options that expect an argument accept their argument\n following either a space or an equals sign.\n "}]}