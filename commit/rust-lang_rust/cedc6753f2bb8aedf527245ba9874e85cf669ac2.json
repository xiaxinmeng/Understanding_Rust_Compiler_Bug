{"sha": "cedc6753f2bb8aedf527245ba9874e85cf669ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZGM2NzUzZjJiYjhhZWRmNTI3MjQ1YmE5ODc0ZTg1Y2Y2NjlhYzI=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-31T22:54:43Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-02-01T01:41:38Z"}, "message": "Fix end of TtDelimited span", "tree": {"sha": "5c725ff26d031729c4bc2d0b45799f379d79e106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c725ff26d031729c4bc2d0b45799f379d79e106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cedc6753f2bb8aedf527245ba9874e85cf669ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cedc6753f2bb8aedf527245ba9874e85cf669ac2", "html_url": "https://github.com/rust-lang/rust/commit/cedc6753f2bb8aedf527245ba9874e85cf669ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cedc6753f2bb8aedf527245ba9874e85cf669ac2/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "474b324eda10440d6568ef872a7307d38e7de95b", "url": "https://api.github.com/repos/rust-lang/rust/commits/474b324eda10440d6568ef872a7307d38e7de95b", "html_url": "https://github.com/rust-lang/rust/commit/474b324eda10440d6568ef872a7307d38e7de95b"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "6e368bfa803a6cbafcba805d7be3dcc515a3264f", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cedc6753f2bb8aedf527245ba9874e85cf669ac2/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cedc6753f2bb8aedf527245ba9874e85cf669ac2/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=cedc6753f2bb8aedf527245ba9874e85cf669ac2", "patch": "@@ -755,6 +755,7 @@ mod test {\n     use ast;\n     use abi;\n     use attr::{first_attr_value_str_by_name, AttrMetaMethods};\n+    use parse;\n     use parse::parser::Parser;\n     use parse::token::{str_to_ident};\n     use print::pprust::item_to_string;\n@@ -1214,4 +1215,26 @@ mod test {\n         let doc = first_attr_value_str_by_name(item.attrs.as_slice(), \"doc\").unwrap();\n         assert_eq!(doc.get(), \"/** doc comment\\n *  with CRLF */\");\n     }\n+\n+    #[test]\n+    fn ttdelim_span() {\n+        let sess = parse::new_parse_sess();\n+        let expr = parse::parse_expr_from_source_str(\"foo\".to_string(),\n+            \"foo!( fn main() { body } )\".to_string(), vec![], &sess);\n+\n+        let tts = match expr.node {\n+            ast::ExprMac(ref mac) => {\n+                let ast::MacInvocTT(_, ref tts, _) = mac.node;\n+                tts.clone()\n+            }\n+            _ => panic!(\"not a macro\"),\n+        };\n+\n+        let span = tts.iter().rev().next().unwrap().get_span();\n+\n+        match sess.span_diagnostic.cm.span_to_snippet(span) {\n+            Some(s) => assert_eq!(&s[], \"{ body }\"),\n+            None => panic!(\"could not get snippet\"),\n+        }\n+    }\n }"}, {"sha": "8e88f5a5679856039dc1e70aa3a576cfe7f6914a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cedc6753f2bb8aedf527245ba9874e85cf669ac2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cedc6753f2bb8aedf527245ba9874e85cf669ac2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cedc6753f2bb8aedf527245ba9874e85cf669ac2", "patch": "@@ -2735,7 +2735,7 @@ impl<'a> Parser<'a> {\n                 self.open_braces.pop().unwrap();\n \n                 // Expand to cover the entire delimited token tree\n-                let span = Span { hi: self.span.hi, ..pre_span };\n+                let span = Span { hi: close_span.hi, ..pre_span };\n \n                 TtDelimited(span, Rc::new(Delimited {\n                     delim: delim,"}]}