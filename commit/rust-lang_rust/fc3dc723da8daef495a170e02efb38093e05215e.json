{"sha": "fc3dc723da8daef495a170e02efb38093e05215e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjM2RjNzIzZGE4ZGFlZjQ5NWExNzBlMDJlZmIzODA5M2UwNTIxNWU=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-06-30T16:35:28Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-06-30T19:01:48Z"}, "message": "Clarify safety comment for A|Rc::as_ptr", "tree": {"sha": "9e05aae7d5d9797b719ceffdb8ebf66984a8c50b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e05aae7d5d9797b719ceffdb8ebf66984a8c50b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc3dc723da8daef495a170e02efb38093e05215e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3dc723da8daef495a170e02efb38093e05215e", "html_url": "https://github.com/rust-lang/rust/commit/fc3dc723da8daef495a170e02efb38093e05215e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc3dc723da8daef495a170e02efb38093e05215e/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8a9c61e1a23b73c04d3058a11d1b8b2a46d635e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a9c61e1a23b73c04d3058a11d1b8b2a46d635e", "html_url": "https://github.com/rust-lang/rust/commit/d8a9c61e1a23b73c04d3058a11d1b8b2a46d635e"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "8f7b8efd811f797bf4f5605446f0f5aef54f5a11", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc3dc723da8daef495a170e02efb38093e05215e/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3dc723da8daef495a170e02efb38093e05215e/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=fc3dc723da8daef495a170e02efb38093e05215e", "patch": "@@ -592,11 +592,9 @@ impl<T: ?Sized> Rc<T> {\n     pub fn as_ptr(this: &Self) -> *const T {\n         let ptr: *mut RcBox<T> = NonNull::as_ptr(this.ptr);\n \n-        // SAFETY: This cannot go through Deref::deref.\n-        // Instead, we manually offset the pointer rather than manifesting a reference.\n-        // This is so that the returned pointer retains the same provenance as our pointer.\n-        // This is required so that e.g. `get_mut` can write through the pointer\n-        // after the Rc is recovered through `from_raw`.\n+        // SAFETY: This cannot go through Deref::deref or Rc::inner.\n+        // This is required to retain raw/mut provenance such that e.g. `get_mut` can\n+        // write through the pointer after the Rc is recovered through `from_raw`.\n         unsafe { &raw const (*ptr).value }\n     }\n "}, {"sha": "27c36f4a5693352cd13332a008a21d29f30b22a4", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc3dc723da8daef495a170e02efb38093e05215e/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3dc723da8daef495a170e02efb38093e05215e/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=fc3dc723da8daef495a170e02efb38093e05215e", "patch": "@@ -591,11 +591,9 @@ impl<T: ?Sized> Arc<T> {\n     pub fn as_ptr(this: &Self) -> *const T {\n         let ptr: *mut ArcInner<T> = NonNull::as_ptr(this.ptr);\n \n-        // SAFETY: This cannot go through Deref::deref.\n-        // Instead, we manually offset the pointer rather than manifesting a reference.\n-        // This is so that the returned pointer retains the same provenance as our pointer.\n-        // This is required so that e.g. `get_mut` can write through the pointer\n-        // after the Arc is recovered through `from_raw`.\n+        // SAFETY: This cannot go through Deref::deref or RcBoxPtr::inner.\n+        // This is required to retain raw/mut provenance such that e.g. `get_mut` can\n+        // write through the pointer after the Rc is recovered through `from_raw`.\n         unsafe { &raw const (*ptr).data }\n     }\n "}]}