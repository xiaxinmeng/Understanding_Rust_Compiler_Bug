{"sha": "bd270cbc024f56596c315061d10732ebbe16eef9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMjcwY2JjMDI0ZjU2NTk2YzMxNTA2MWQxMDczMmViYmUxNmVlZjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-19T01:52:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-19T01:52:51Z"}, "message": "Merge #6944\n\n6944: Make attribute API more private r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "eeb2a2dd4fc58f608ce7260eee1a372c03d31923", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eeb2a2dd4fc58f608ce7260eee1a372c03d31923"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd270cbc024f56596c315061d10732ebbe16eef9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf3VzzCRBK7hj4Ov3rIwAAdHIIABtE9hkmVU8xRm9ZXFunw4kQ\nhKLNjyEf3l4DPTNj+p5+SCXhj2efOH/lU67c49p2zoFCQDjWTVqrx5FYoobHM1ss\nPRULyt5W3p81vnql81+2rBbwRI3wu1BPrGSK5Jcqe2yXlZvwAVnoHNrkraxvebeZ\niDiZMoxUlhpXyR5ajVP0binquw+z3f4HrDpJFD3S68cJiKX0IJo0hChgLYVpYo6E\nWBP7W+G8nBSKL6jGQf7hZyDSkqm0CZN/N5omfXrlsEkGe8H1KCIncti6F6ZE8arb\nt0Z+fhmUUlIvY5VUO/RgD2e0aSF9MZrE2H9z3sKjI47phnoqei/f18zxH9ylwuI=\n=Efyy\n-----END PGP SIGNATURE-----\n", "payload": "tree eeb2a2dd4fc58f608ce7260eee1a372c03d31923\nparent e47e7a0143a537ef76b0f946dfc3ec56ed2e0507\nparent a2062d18926f15e330c873eab97aed4d5d308ea1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1608342771 +0000\ncommitter GitHub <noreply@github.com> 1608342771 +0000\n\nMerge #6944\n\n6944: Make attribute API more private r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd270cbc024f56596c315061d10732ebbe16eef9", "html_url": "https://github.com/rust-lang/rust/commit/bd270cbc024f56596c315061d10732ebbe16eef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd270cbc024f56596c315061d10732ebbe16eef9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47e7a0143a537ef76b0f946dfc3ec56ed2e0507", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47e7a0143a537ef76b0f946dfc3ec56ed2e0507", "html_url": "https://github.com/rust-lang/rust/commit/e47e7a0143a537ef76b0f946dfc3ec56ed2e0507"}, {"sha": "a2062d18926f15e330c873eab97aed4d5d308ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2062d18926f15e330c873eab97aed4d5d308ea1", "html_url": "https://github.com/rust-lang/rust/commit/a2062d18926f15e330c873eab97aed4d5d308ea1"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "73b17da1060cc22cdc987aff9e13cbfcb254bd0f", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bd270cbc024f56596c315061d10732ebbe16eef9/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd270cbc024f56596c315061d10732ebbe16eef9/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=bd270cbc024f56596c315061d10732ebbe16eef9", "patch": "@@ -42,7 +42,7 @@ impl From<Documentation> for String {\n \n /// Syntactical attributes, without filtering of `cfg_attr`s.\n #[derive(Default, Debug, Clone, PartialEq, Eq)]\n-pub struct RawAttrs {\n+pub(crate) struct RawAttrs {\n     entries: Option<Arc<[Attr]>>,\n }\n \n@@ -72,7 +72,7 @@ impl ops::Deref for Attrs {\n }\n \n impl RawAttrs {\n-    pub const EMPTY: Self = Self { entries: None };\n+    pub(crate) const EMPTY: Self = Self { entries: None };\n \n     pub(crate) fn new(owner: &dyn AttrsOwner, hygiene: &Hygiene) -> Self {\n         let (inner_attrs, inner_docs) = inner_attributes(owner.syntax())\n@@ -241,18 +241,6 @@ impl Attrs {\n         raw_attrs.filter(db, def.krate(db))\n     }\n \n-    pub fn merge(&self, other: Attrs) -> Attrs {\n-        match (&self.0.entries, &other.0.entries) {\n-            (None, None) => Attrs::EMPTY,\n-            (Some(entries), None) | (None, Some(entries)) => {\n-                Attrs(RawAttrs { entries: Some(entries.clone()) })\n-            }\n-            (Some(a), Some(b)) => {\n-                Attrs(RawAttrs { entries: Some(a.iter().chain(b.iter()).cloned().collect()) })\n-            }\n-        }\n-    }\n-\n     pub fn by_key(&self, key: &'static str) -> AttrQuery<'_> {\n         AttrQuery { attrs: self, key }\n     }"}]}