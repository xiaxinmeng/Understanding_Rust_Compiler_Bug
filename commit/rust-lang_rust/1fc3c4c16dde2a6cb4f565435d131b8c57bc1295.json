{"sha": "1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYzNjNGMxNmRkZTJhNmNiNGY1NjU0MzVkMTMxYjhjNTdiYzEyOTU=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2020-12-31T01:50:23Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-01-01T10:01:01Z"}, "message": "adjust const generics defaults FIXMEs to the new feature gate", "tree": {"sha": "231d41c7b6596fccb14c23934f95d3caba12e7ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/231d41c7b6596fccb14c23934f95d3caba12e7ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "html_url": "https://github.com/rust-lang/rust/commit/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "907ba75eb0b063c1da72703642e5710b91868dc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/907ba75eb0b063c1da72703642e5710b91868dc8", "html_url": "https://github.com/rust-lang/rust/commit/907ba75eb0b063c1da72703642e5710b91868dc8"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "6ac212af68e807539f9f7b665caebb0a88523bb2", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -774,7 +774,7 @@ fn validate_generic_param_order(\n                 }\n                 GenericParamKind::Type { default: None } => (),\n                 GenericParamKind::Lifetime => (),\n-                // FIXME(const_generics:defaults)\n+                // FIXME(const_generics_defaults)\n                 GenericParamKind::Const { ty: _, kw_span: _, default: _ } => (),\n             }\n             first = false;"}, {"sha": "14a56119f21e31ef8ca08020a0b567e871a58a9a", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -958,7 +958,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 ty::GenericParamDefKind::Type { has_default, .. } => {\n                     Some((param.def_id, has_default))\n                 }\n-                ty::GenericParamDefKind::Const => None, // FIXME(const_generics:defaults)\n+                ty::GenericParamDefKind::Const => None, // FIXME(const_generics_defaults)\n             })\n             .peekable();\n         let has_default = {"}, {"sha": "ac6ceafaba8c7c050fbb9fbeccab90259dcae18c", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -1834,7 +1834,7 @@ impl EncodeContext<'a, 'tcx> {\n                         EntryKind::ConstParam,\n                         true,\n                     );\n-                    // FIXME(const_generics:defaults)\n+                    // FIXME(const_generics_defaults)\n                 }\n             }\n         }"}, {"sha": "77f166889378202c3021ac9a8a30271cdda7b61a", "filename": "compiler/rustc_middle/src/ty/print/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -203,7 +203,7 @@ pub trait Printer<'tcx>: Sized {\n                                     self.tcx().type_of(param.def_id).subst(self.tcx(), substs),\n                                 )\n                     }\n-                    ty::GenericParamDefKind::Const => false, // FIXME(const_generics:defaults)\n+                    ty::GenericParamDefKind::Const => false, // FIXME(const_generics_defaults)\n                 }\n             })\n             .count();"}, {"sha": "def2a501cf475af82f57ca5805a722c5c5a8c7a7", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -443,7 +443,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n \n     fn visit_generic_param(&mut self, p: &'tcx hir::GenericParam<'tcx>) {\n         let kind = match &p.kind {\n-            // FIXME(const_generics:defaults)\n+            // FIXME(const_generics_defaults)\n             hir::GenericParamKind::Type { default, .. } if default.is_some() => {\n                 AnnotationKind::Container\n             }"}, {"sha": "0de732b2cf97e9837f48c31c64e9d7f04230c297", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -214,7 +214,7 @@ enum ResolutionError<'a> {\n     /// Error E0530: `X` bindings cannot shadow `Y`s.\n     BindingShadowsSomethingUnacceptable(&'static str, Symbol, &'a NameBinding<'a>),\n     /// Error E0128: type parameters with a default cannot use forward-declared identifiers.\n-    ForwardDeclaredTyParam, // FIXME(const_generics:defaults)\n+    ForwardDeclaredTyParam, // FIXME(const_generics_defaults)\n     /// ERROR E0770: the type of const parameters must not depend on other generic parameters.\n     ParamInTyOfConstParam(Symbol),\n     /// constant values inside of type parameter defaults must not depend on generic parameters."}, {"sha": "a3a2b8967c6062f8bea0b06526dffd45cd36a025", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -387,7 +387,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     defaults.types += has_default as usize\n                 }\n                 GenericParamDefKind::Const => {\n-                    // FIXME(const_generics:defaults)\n+                    // FIXME(const_generics_defaults)\n                 }\n             };\n         }"}, {"sha": "9a2210e4f0e8019cb0cd5b15c5fbeac4cac3906f", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -486,7 +486,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     }\n                     GenericParamDefKind::Const => {\n                         let ty = tcx.at(self.span).type_of(param.def_id);\n-                        // FIXME(const_generics:defaults)\n+                        // FIXME(const_generics_defaults)\n                         if infer_args {\n                             // No const parameters were provided, we can infer all.\n                             self.astconv.ct_infer(ty, Some(param), self.span).into()"}, {"sha": "7126b62405968fac1f7b3cecc6000f3ddb48c894", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -1376,7 +1376,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         }\n                     }\n                     GenericParamDefKind::Const => {\n-                        // FIXME(const_generics:defaults)\n+                        // FIXME(const_generics_defaults)\n                         // No const parameters were provided, we have to infer them.\n                         self.fcx.var_for_def(self.span, param)\n                     }"}, {"sha": "ab41ff372e23feaa8c8ceffb87f80b1c3cdb20e4", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -785,7 +785,7 @@ fn check_where_clauses<'tcx, 'fcx>(\n             }\n \n             GenericParamDefKind::Const => {\n-                // FIXME(const_generics:defaults)\n+                // FIXME(const_generics_defaults)\n                 fcx.tcx.mk_param_from_def(param)\n             }\n         }"}, {"sha": "2ebb1a3be4e44b5655a8ab8a9eb8790ba00c8195", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -228,7 +228,7 @@ impl Visitor<'tcx> for CollectItemTypesVisitor<'tcx> {\n                 hir::GenericParamKind::Const { .. } => {\n                     let def_id = self.tcx.hir().local_def_id(param.hir_id);\n                     self.tcx.ensure().type_of(def_id);\n-                    // FIXME(const_generics:defaults)\n+                    // FIXME(const_generics_defaults)\n                 }\n             }\n         }"}, {"sha": "2f430842f9d8e958fd8ded11085579b4557b7e64", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -612,7 +612,7 @@ impl Clean<GenericParamDef> for hir::GenericParam<'_> {\n                 GenericParamDefKind::Const {\n                     did: cx.tcx.hir().local_def_id(self.hir_id).to_def_id(),\n                     ty: ty.clean(cx),\n-                    // FIXME(const_generics_defaults): add `default` field here to the docs\n+                    // FIXME(const_generics_defaults): add `default` field here for docs\n                 },\n             ),\n         };\n@@ -1386,7 +1386,7 @@ fn clean_qpath(hir_ty: &hir::Ty<'_>, cx: &DocContext<'_>) -> Type {\n                                 if let Some(ct) = const_ {\n                                     ct_substs.insert(const_param_def_id.to_def_id(), ct.clean(cx));\n                                 }\n-                                // FIXME(const_generics:defaults)\n+                                // FIXME(const_generics_defaults)\n                                 indices.consts += 1;\n                             }\n                         }"}, {"sha": "a85e2a2f2c4f18b46383dc28672a8e998079dc32", "filename": "src/test/ui/const-generics/params-in-ct-in-ty-param-lazy-norm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/src%2Ftest%2Fui%2Fconst-generics%2Fparams-in-ct-in-ty-param-lazy-norm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc3c4c16dde2a6cb4f565435d131b8c57bc1295/src%2Ftest%2Fui%2Fconst-generics%2Fparams-in-ct-in-ty-param-lazy-norm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparams-in-ct-in-ty-param-lazy-norm.rs?ref=1fc3c4c16dde2a6cb4f565435d131b8c57bc1295", "patch": "@@ -7,7 +7,7 @@ struct Foo<T, U = [u8; std::mem::size_of::<T>()]>(T, U);\n //[full]~^ ERROR constant values inside of type parameter defaults\n //[min]~^^ ERROR generic parameters may not be used in const operations\n \n-// FIXME(const_generics:defaults): We still don't know how to we deal with type defaults.\n+// FIXME(const_generics_defaults): We still don't know how to deal with type defaults.\n struct Bar<T = [u8; N], const N: usize>(T);\n //~^ ERROR constant values inside of type parameter defaults\n //~| ERROR type parameters with a default"}]}