{"sha": "a09a4b882d415ea764f58816b963de0203c4e9f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwOWE0Yjg4MmQ0MTVlYTc2NGY1ODgxNmI5NjNkZTAyMDNjNGU5ZjA=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T02:34:59Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:35:45Z"}, "message": "Removed list::foldl() in favor of iter().fold()", "tree": {"sha": "cd54971b9542d1db381cc735e26d1495033e92d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd54971b9542d1db381cc735e26d1495033e92d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a09a4b882d415ea764f58816b963de0203c4e9f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a09a4b882d415ea764f58816b963de0203c4e9f0", "html_url": "https://github.com/rust-lang/rust/commit/a09a4b882d415ea764f58816b963de0203c4e9f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a09a4b882d415ea764f58816b963de0203c4e9f0/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "html_url": "https://github.com/rust-lang/rust/commit/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2"}], "stats": {"total": 43, "additions": 10, "deletions": 33}, "files": [{"sha": "ce6084923f91442d60a43fcf4c4e7f8ac20733f7", "filename": "src/libcollections/list.rs", "status": "modified", "additions": 10, "deletions": 33, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a09a4b882d415ea764f58816b963de0203c4e9f0/src%2Flibcollections%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09a4b882d415ea764f58816b963de0203c4e9f0/src%2Flibcollections%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flist.rs?ref=a09a4b882d415ea764f58816b963de0203c4e9f0", "patch": "@@ -53,25 +53,6 @@ impl<T> List<T> {\n     }\n }\n \n-/**\n- * Left fold\n- *\n- * Applies `f` to `u` and the first element in the list, then applies `f` to\n- * the result of the previous call and the second element, and so on,\n- * returning the accumulated result.\n- *\n- * # Arguments\n- *\n- * * list - The list to fold\n- * * z - The initial value\n- * * f - The function to apply\n- */\n-pub fn foldl<T:Clone,U>(z: T, list: @List<U>, f: |&T, &U| -> T) -> T {\n-    let mut accum: T = z;\n-    iter(list, |element| accum = f(&accum, element));\n-    accum\n-}\n-\n /**\n  * Search for an element that matches a given predicate\n  *\n@@ -258,21 +239,17 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_foldl() {\n-        fn add(a: &uint, b: &int) -> uint { return *a + (*b as uint); }\n-        let list = @List::from_vec([0, 1, 2, 3, 4]);\n-        let empty = @list::Nil::<int>;\n-        assert_eq!(list::foldl(0u, list, add), 10u);\n-        assert_eq!(list::foldl(0u, empty, add), 0u);\n-    }\n+    fn test_fold() {\n+        fn add_(a: uint, b: &uint) -> uint { a + *b }\n+        fn subtract_(a: uint, b: &uint) -> uint { a - *b }\n \n-    #[test]\n-    fn test_foldl2() {\n-        fn sub(a: &int, b: &int) -> int {\n-            *a - *b\n-        }\n-        let list = @List::from_vec([1, 2, 3, 4]);\n-        assert_eq!(list::foldl(0, list, sub), -10);\n+        let empty = Nil::<uint>;\n+        assert_eq!(empty.iter().fold(0u, add_), 0u);\n+        assert_eq!(empty.iter().fold(10u, subtract_), 10u);\n+\n+        let list = List::from_vec([0u, 1u, 2u, 3u, 4u]);\n+        assert_eq!(list.iter().fold(0u, add_), 10u);\n+        assert_eq!(list.iter().fold(10u, subtract_), 0u);\n     }\n \n     #[test]"}]}