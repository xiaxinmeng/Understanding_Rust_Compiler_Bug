{"sha": "202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "node_id": "C_kwDOAAsO6NoAKDIwMmZkYjljNTMwZmEzOWFlOTBhMjM1MzBlNDliNjc0NmIxYTRlYzQ", "commit": {"author": {"name": "lengyijun", "email": "sjtu5140809011@gmail.com", "date": "2022-06-01T15:32:26Z"}, "committer": {"name": "lengyijun", "email": "sjtu5140809011@gmail.com", "date": "2022-06-01T15:43:48Z"}, "message": "split into borrow_deref_ref.rs and borrow_deref_ref_unfixable.rs", "tree": {"sha": "a9ff76a454513e9a0ecc622da744ff85c154e7fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9ff76a454513e9a0ecc622da744ff85c154e7fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "html_url": "https://github.com/rust-lang/rust/commit/202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/comments", "author": {"login": "lengyijun", "id": 14830596, "node_id": "MDQ6VXNlcjE0ODMwNTk2", "avatar_url": "https://avatars.githubusercontent.com/u/14830596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lengyijun", "html_url": "https://github.com/lengyijun", "followers_url": "https://api.github.com/users/lengyijun/followers", "following_url": "https://api.github.com/users/lengyijun/following{/other_user}", "gists_url": "https://api.github.com/users/lengyijun/gists{/gist_id}", "starred_url": "https://api.github.com/users/lengyijun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lengyijun/subscriptions", "organizations_url": "https://api.github.com/users/lengyijun/orgs", "repos_url": "https://api.github.com/users/lengyijun/repos", "events_url": "https://api.github.com/users/lengyijun/events{/privacy}", "received_events_url": "https://api.github.com/users/lengyijun/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lengyijun", "id": 14830596, "node_id": "MDQ6VXNlcjE0ODMwNTk2", "avatar_url": "https://avatars.githubusercontent.com/u/14830596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lengyijun", "html_url": "https://github.com/lengyijun", "followers_url": "https://api.github.com/users/lengyijun/followers", "following_url": "https://api.github.com/users/lengyijun/following{/other_user}", "gists_url": "https://api.github.com/users/lengyijun/gists{/gist_id}", "starred_url": "https://api.github.com/users/lengyijun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lengyijun/subscriptions", "organizations_url": "https://api.github.com/users/lengyijun/orgs", "repos_url": "https://api.github.com/users/lengyijun/repos", "events_url": "https://api.github.com/users/lengyijun/events{/privacy}", "received_events_url": "https://api.github.com/users/lengyijun/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8430fa2a82712ac137b2bc0215301e2c189d4a2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8430fa2a82712ac137b2bc0215301e2c189d4a2e", "html_url": "https://github.com/rust-lang/rust/commit/8430fa2a82712ac137b2bc0215301e2c189d4a2e"}], "stats": {"total": 114, "additions": 92, "deletions": 22}, "files": [{"sha": "7d2198357232453732b111cd16f5983f3999e049", "filename": "tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "patch": "@@ -346,6 +346,7 @@ fn compile_test() {\n \n const RUSTFIX_COVERAGE_KNOWN_EXCEPTIONS: &[&str] = &[\n     \"assign_ops2.rs\",\n+    \"borrow_deref_ref_unfixable.rs\",\n     \"cast_size_32bit.rs\",\n     \"char_lit_as_u8.rs\",\n     \"cmp_owned/without_suggestion.rs\","}, {"sha": "bf4691c5bc97e1df47e9224ed81410895ccab254", "filename": "tests/ui/borrow_deref_ref.fixed", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_deref_ref.fixed?ref=202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "patch": "@@ -0,0 +1,59 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+\n+fn main() {}\n+\n+mod should_lint {\n+    fn one_help() {\n+        let a = &12;\n+        let b = a;\n+\n+        let b = &mut bar(&12);\n+    }\n+\n+    fn bar(x: &u32) -> &u32 {\n+        x\n+    }\n+}\n+\n+// this mod explains why we should not lint `&mut &* (&T)`\n+mod should_not_lint1 {\n+    fn foo(x: &mut &u32) {\n+        *x = &1;\n+    }\n+\n+    fn main() {\n+        let mut x = &0;\n+        foo(&mut &*x); // should not lint\n+        assert_eq!(*x, 0);\n+\n+        foo(&mut x);\n+        assert_eq!(*x, 1);\n+    }\n+}\n+\n+// similar to should_not_lint1\n+mod should_not_lint2 {\n+    struct S<'a> {\n+        a: &'a u32,\n+        b: u32,\n+    }\n+\n+    fn main() {\n+        let s = S { a: &1, b: 1 };\n+        let x = &mut &*s.a;\n+        *x = &2;\n+    }\n+}\n+\n+// this mod explains why we should not lint `& &* (&T)`\n+mod false_negative {\n+    fn foo() {\n+        let x = &12;\n+        let addr_x = &x as *const _ as usize;\n+        let addr_y = &x as *const _ as usize; // assert ok\n+        // let addr_y = &x as *const _ as usize; // assert fail\n+        assert_ne!(addr_x, addr_y);\n+    }\n+}"}, {"sha": "28c005fdbef70de82d07fb5bf3245123a51fda70", "filename": "tests/ui/borrow_deref_ref.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_deref_ref.rs?ref=202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "patch": "@@ -5,13 +5,10 @@\n fn main() {}\n \n mod should_lint {\n-    fn foo() {\n+    fn one_help() {\n         let a = &12;\n         let b = &*a;\n \n-        let s = &String::new();\n-        let x: &str = &*s;\n-\n         let b = &mut &*bar(&12);\n     }\n "}, {"sha": "d72de37c69ff538a6eda4b77be4ae22a3d0c6a43", "filename": "tests/ui/borrow_deref_ref.stderr", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_deref_ref.stderr?ref=202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "patch": "@@ -7,31 +7,16 @@ LL |         let b = &*a;\n    = note: `-D clippy::borrow-deref-ref` implied by `-D warnings`\n \n error: deref on an immutable reference\n-  --> $DIR/borrow_deref_ref.rs:13:23\n-   |\n-LL |         let x: &str = &*s;\n-   |                       ^^^\n-   |\n-help: if you would like to reborrow, try removing `&*`\n-   |\n-LL |         let x: &str = s;\n-   |                       ~\n-help: if you would like to deref, try using `&**`\n-   |\n-LL |         let x: &str = &**s;\n-   |                       ~~~~\n-\n-error: deref on an immutable reference\n-  --> $DIR/borrow_deref_ref.rs:15:22\n+  --> $DIR/borrow_deref_ref.rs:12:22\n    |\n LL |         let b = &mut &*bar(&12);\n    |                      ^^^^^^^^^^ help: if you would like to reborrow, try removing `&*`: `bar(&12)`\n \n error: deref on an immutable reference\n-  --> $DIR/borrow_deref_ref.rs:58:23\n+  --> $DIR/borrow_deref_ref.rs:55:23\n    |\n LL |         let addr_y = &&*x as *const _ as usize; // assert ok\n    |                       ^^^ help: if you would like to reborrow, try removing `&*`: `x`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "a8e2bbfef0f5aae09d2ea5058f645c955c427543", "filename": "tests/ui/borrow_deref_ref_unfixable.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_deref_ref_unfixable.rs?ref=202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "patch": "@@ -0,0 +1,10 @@\n+#![allow(dead_code, unused_variables)]\n+\n+fn main() {}\n+\n+mod should_lint {\n+    fn two_helps() {\n+        let s = &String::new();\n+        let x: &str = &*s;\n+    }\n+}"}, {"sha": "738b01e7ec1ee355cc962d74530a0f77229333d0", "filename": "tests/ui/borrow_deref_ref_unfixable.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/202fdb9c530fa39ae90a23530e49b6746b1a4ec4/tests%2Fui%2Fborrow_deref_ref_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_deref_ref_unfixable.stderr?ref=202fdb9c530fa39ae90a23530e49b6746b1a4ec4", "patch": "@@ -0,0 +1,18 @@\n+error: deref on an immutable reference\n+  --> $DIR/borrow_deref_ref_unfixable.rs:8:23\n+   |\n+LL |         let x: &str = &*s;\n+   |                       ^^^\n+   |\n+   = note: `-D clippy::borrow-deref-ref` implied by `-D warnings`\n+help: if you would like to reborrow, try removing `&*`\n+   |\n+LL |         let x: &str = s;\n+   |                       ~\n+help: if you would like to deref, try using `&**`\n+   |\n+LL |         let x: &str = &**s;\n+   |                       ~~~~\n+\n+error: aborting due to previous error\n+"}]}