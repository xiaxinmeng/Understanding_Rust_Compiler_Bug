{"sha": "e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba", "node_id": "C_kwDOAAsO6NoAKGUwNGJiY2I5YjFlOGYxM2MwOTI1MmM3YTQzMDExYTZiMGM5YjhkYmE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-10-18T12:21:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-18T12:21:31Z"}, "message": "Rollup merge of #103159 - cuviper:check_pow-final-try_opt, r=Mark-Simulacrum\n\nRemove the redundant `Some(try_opt!(..))` in `checked_pow`\n\nThe final return value doesn't need to be tried at all -- we can just\nreturn the checked option directly. The optimizer can probably figure\nthis out anyway, but there's no need to make it work here.", "tree": {"sha": "2de5aaa6755e7c08b1c02928ea717710189a03e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2de5aaa6755e7c08b1c02928ea717710189a03e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjTppLCRBK7hj4Ov3rIwAAfT8IAHDjA+F4QzRqE84Qg8rBxgoV\nUtgB+rOUmR/DkKPNiB/dhUvEzGeTilHjsPiH0Skk96lUKi8j1E9PNaTDypo5pKLL\nstOeELP6zbGbi14ica3zz29YhIQLKO6FHZWy+alkxo+LhuvYvYQl4pkm+IPrW5Na\n1z8ROP5dyhTJ2+XuQflH4/QFm2oqsfgyWUhcdcHW8lKRpbNTop56iVMW4vLQGovl\n/7qEipJZuzKfoRwCER2iNsNzX36QkoZuAmzBnq7I8UYRbDj3fyVUjRv5XC99LY4s\nv9MO/l1ZgoSwsFDnhE+k6Y+vjOR92WOeudjWTSISnBPcYCgR8zsfvpAgJtPQ40U=\n=VbCU\n-----END PGP SIGNATURE-----\n", "payload": "tree 2de5aaa6755e7c08b1c02928ea717710189a03e3\nparent ba643786b8799242184682b4caa7911756fe4046\nparent d7fd1d57ec90d43aee3caee75a9663914ccc1400\nauthor Yuki Okushi <jtitor@2k36.org> 1666095691 +0900\ncommitter GitHub <noreply@github.com> 1666095691 +0900\n\nRollup merge of #103159 - cuviper:check_pow-final-try_opt, r=Mark-Simulacrum\n\nRemove the redundant `Some(try_opt!(..))` in `checked_pow`\n\nThe final return value doesn't need to be tried at all -- we can just\nreturn the checked option directly. The optimizer can probably figure\nthis out anyway, but there's no need to make it work here.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba", "html_url": "https://github.com/rust-lang/rust/commit/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba643786b8799242184682b4caa7911756fe4046", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba643786b8799242184682b4caa7911756fe4046", "html_url": "https://github.com/rust-lang/rust/commit/ba643786b8799242184682b4caa7911756fe4046"}, {"sha": "d7fd1d57ec90d43aee3caee75a9663914ccc1400", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7fd1d57ec90d43aee3caee75a9663914ccc1400", "html_url": "https://github.com/rust-lang/rust/commit/d7fd1d57ec90d43aee3caee75a9663914ccc1400"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "81f050cb283d47bc94879ea2e77d0cf912988355", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba", "patch": "@@ -869,7 +869,7 @@ macro_rules! int_impl {\n             // Deal with the final bit of the exponent separately, since\n             // squaring the base afterwards is not necessary and may cause a\n             // needless overflow.\n-            Some(try_opt!(acc.checked_mul(base)))\n+            acc.checked_mul(base)\n         }\n \n         /// Saturating integer addition. Computes `self + rhs`, saturating at the numeric"}, {"sha": "f186b468e64cbac85b375f466f6b0d9943c8ac12", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=e04bbcb9b1e8f13c09252c7a43011a6b0c9b8dba", "patch": "@@ -990,7 +990,7 @@ macro_rules! uint_impl {\n             // squaring the base afterwards is not necessary and may cause a\n             // needless overflow.\n \n-            Some(try_opt!(acc.checked_mul(base)))\n+            acc.checked_mul(base)\n         }\n \n         /// Saturating integer addition. Computes `self + rhs`, saturating at"}]}