{"sha": "3d5a777fe19ab210aedf473678687a98023ff586", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNWE3NzdmZTE5YWIyMTBhZWRmNDczNjc4Njg3YTk4MDIzZmY1ODY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-05T01:23:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-05T01:24:57Z"}, "message": "rustc: Don't emit memset for non-structural types", "tree": {"sha": "19275e1a30f6665f3f572ca18cbee43c732c36fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19275e1a30f6665f3f572ca18cbee43c732c36fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d5a777fe19ab210aedf473678687a98023ff586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5a777fe19ab210aedf473678687a98023ff586", "html_url": "https://github.com/rust-lang/rust/commit/3d5a777fe19ab210aedf473678687a98023ff586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d5a777fe19ab210aedf473678687a98023ff586/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66a255ac9291306f3943acb2a00e159ccc15dfa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a255ac9291306f3943acb2a00e159ccc15dfa4", "html_url": "https://github.com/rust-lang/rust/commit/66a255ac9291306f3943acb2a00e159ccc15dfa4"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "8e270bb78a9c4364ebea7b6efbbe2d2d21f14ac8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3d5a777fe19ab210aedf473678687a98023ff586/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5a777fe19ab210aedf473678687a98023ff586/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=3d5a777fe19ab210aedf473678687a98023ff586", "patch": "@@ -2349,7 +2349,12 @@ fn drop_slot(cx: &@block_ctxt, slot: ValueRef, t: &ty::t) -> result {\n     let re = drop_ty(cx, llptr, t);\n     let llty = val_ty(slot);\n     let llelemty = lib::llvm::llvm::LLVMGetElementType(llty);\n-    call_bzero(cx, slot, llsize_of(llelemty), C_uint(1u));\n+    if ty::type_is_structural(bcx_tcx(cx), t) {\n+        call_bzero(cx, slot, C_uint(llsize_of_real(bcx_ccx(cx), llelemty)),\n+                   C_uint(llalign_of_real(bcx_ccx(cx), llelemty)));\n+    } else {\n+        cx.build.Store(C_null(llelemty), slot);\n+    }\n     ret re;\n }\n \n@@ -5855,7 +5860,13 @@ fn zero_alloca(cx: &@block_ctxt, llptr: ValueRef, t: ty::t) -> result {\n         bcx = call_bzero(llalign.bcx, llptr, llsz.val, llalign.val).bcx;\n     } else {\n         let llty = type_of(bcx_ccx(bcx), cx.sp, t);\n-        bcx = call_bzero(cx, llptr, llsize_of(llty), C_uint(1u)).bcx;\n+        if ty::type_is_structural(bcx_tcx(cx), t) {\n+            bcx = call_bzero(cx, llptr,\n+                             C_uint(llsize_of_real(bcx_ccx(cx), llty)),\n+                             C_uint(llalign_of_real(bcx_ccx(cx), llty))).bcx;\n+        } else {\n+            bcx.build.Store(C_null(llty), llptr);\n+        }\n     }\n     ret rslt(bcx, llptr);\n }"}]}