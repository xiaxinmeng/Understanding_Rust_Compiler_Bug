{"sha": "bf84f4e171fa0169af59881bc5d87ecc84d61523", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmODRmNGUxNzFmYTAxNjlhZjU5ODgxYmM1ZDg3ZWNjODRkNjE1MjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-14T04:07:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-14T04:07:30Z"}, "message": "Auto merge of #33749 - jseyfried:fix_call_site_span, r=nrc\n\nFix macro call site spans\n\nFix macro call site spans.\nr? @nrc", "tree": {"sha": "d8b761d077e741723110a4d5d945748fb17cac57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8b761d077e741723110a4d5d945748fb17cac57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf84f4e171fa0169af59881bc5d87ecc84d61523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf84f4e171fa0169af59881bc5d87ecc84d61523", "html_url": "https://github.com/rust-lang/rust/commit/bf84f4e171fa0169af59881bc5d87ecc84d61523", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf84f4e171fa0169af59881bc5d87ecc84d61523/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6551acc8e560d242f317f4fe4324be0962c5db75", "url": "https://api.github.com/repos/rust-lang/rust/commits/6551acc8e560d242f317f4fe4324be0962c5db75", "html_url": "https://github.com/rust-lang/rust/commit/6551acc8e560d242f317f4fe4324be0962c5db75"}, {"sha": "2477341d057aff05a8a009a7eb7a1168ccd4e277", "url": "https://api.github.com/repos/rust-lang/rust/commits/2477341d057aff05a8a009a7eb7a1168ccd4e277", "html_url": "https://github.com/rust-lang/rust/commit/2477341d057aff05a8a009a7eb7a1168ccd4e277"}], "stats": {"total": 72, "additions": 35, "deletions": 37}, "files": [{"sha": "b5e4dc63e847e575c9cbff8980bcdbe890ef40fc", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -617,22 +617,6 @@ impl<'a> ExtCtxt<'a> {\n     }\n     pub fn backtrace(&self) -> ExpnId { self.backtrace }\n \n-    /// Original span that caused the current exapnsion to happen.\n-    pub fn original_span(&self) -> Span {\n-        let mut expn_id = self.backtrace;\n-        let mut call_site = None;\n-        loop {\n-            match self.codemap().with_expn_info(expn_id, |ei| ei.map(|ei| ei.call_site)) {\n-                None => break,\n-                Some(cs) => {\n-                    call_site = Some(cs);\n-                    expn_id = cs.expn_id;\n-                }\n-            }\n-        }\n-        call_site.expect(\"missing expansion backtrace\")\n-    }\n-\n     /// Returns span for the macro which originally caused the current expansion to happen.\n     ///\n     /// Stops backtracing at include! boundary."}, {"sha": "83ddc79af84747ce9b71c2471aa2d957a3e416b9", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -236,14 +236,8 @@ fn expand_mac_invoc<T>(mac: ast::Mac, ident: Option<Ident>, attrs: Vec<ast::Attr\n                     },\n                 });\n \n-                // The span that we pass to the expanders we want to\n-                // be the root of the call stack. That's the most\n-                // relevant span and it's the actual invocation of\n-                // the macro.\n-                let mac_span = fld.cx.original_span();\n-\n                 let marked_tts = mark_tts(&tts[..], mark);\n-                Some(expandfun.expand(fld.cx, mac_span, &marked_tts))\n+                Some(expandfun.expand(fld.cx, call_site, &marked_tts))\n             }\n \n             IdentTT(ref expander, tt_span, allow_internal_unstable) => {"}, {"sha": "816c696a895660a886c2cdf6846788c8c68f7315", "filename": "src/test/compile-fail/bad-format-args.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fbad-format-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fbad-format-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-format-args.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern: requires at least a format string argument\n+// error-pattern: bad-format-args.rs:19:5: 19:15 note: in this expansion\n+\n+// error-pattern: expected token: `,`\n+// error-pattern: bad-format-args.rs:20:5: 20:19 note: in this expansion\n+// error-pattern: bad-format-args.rs:21:5: 21:22 note: in this expansion\n+\n+fn main() {\n+    format!();\n+    format!(\"\" 1);\n+    format!(\"\", 1 1);\n+}"}, {"sha": "1368702b160bff5e399b5e41e7666241ade260d5", "filename": "src/test/compile-fail/ifmt-bad-arg.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fifmt-bad-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fifmt-bad-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fifmt-bad-arg.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -50,8 +50,4 @@ fn main() {\n \n     format!(\"foo } bar\"); //~ ERROR: unmatched `}` found\n     format!(\"foo }\"); //~ ERROR: unmatched `}` found\n-\n-    format!();          //~ ERROR: requires at least a format string argument\n-    format!(\"\" 1);      //~ ERROR: expected token: `,`\n-    format!(\"\", 1 1);   //~ ERROR: expected token: `,`\n }"}, {"sha": "9d6da2a53a2227c16b3b9792a3744405b14f27c1", "filename": "src/test/compile-fail/macro-backtrace-println.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -21,11 +21,11 @@ macro_rules! myprint {\n }\n \n macro_rules! myprintln {\n-    ($fmt:expr) => (myprint!(concat!($fmt, \"\\n\"))); //~ NOTE in this expansion of myprint!\n-                                                    //~^ NOTE in this expansion of concat!\n+    ($fmt:expr) => (myprint!(concat!($fmt, \"\\n\"))); //~ ERROR invalid reference to argument `0`\n+                                                    //~| NOTE in this expansion of concat!\n+                                                    //~| NOTE in this expansion of myprint!\n }\n \n fn main() {\n-    myprintln!(\"{}\"); //~ ERROR invalid reference to argument `0`\n-                      //~^ NOTE in this expansion of\n+    myprintln!(\"{}\"); //~ NOTE in this expansion of\n }"}, {"sha": "723e936212a5b76efa3a82765c1ba03df7b906c8", "filename": "src/test/compile-fail/macros-nonfatal-errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fmacros-nonfatal-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Fmacros-nonfatal-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacros-nonfatal-errors.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -32,7 +32,6 @@ fn main() {\n \n     foo::blah!(); //~ ERROR\n \n-    format!(); //~ ERROR\n     format!(invalid); //~ ERROR\n \n     include!(invalid); //~ ERROR"}, {"sha": "e9b7ddf6d1c6cd96928f6523573e3f5d6274081a", "filename": "src/test/compile-fail/trace_macros-gate.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Ftrace_macros-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fcompile-fail%2Ftrace_macros-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrace_macros-gate.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -23,8 +23,9 @@ fn main() {\n     // of the below being caught.\n \n     macro_rules! expando {\n-        ($x: ident) => { trace_macros!($x) }\n+        ($x: ident) => { trace_macros!($x) } //~ ERROR `trace_macros` is not stable\n     }\n \n-    expando!(true); //~ ERROR `trace_macros` is not stable\n+    expando!(true); //~ NOTE in this expansion\n+                    //~^ NOTE in this expansion\n }"}, {"sha": "add0938409405d6b9cf0523c6d731e6edef51ce9", "filename": "src/test/debuginfo/function-arg-initialization.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf84f4e171fa0169af59881bc5d87ecc84d61523/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs?ref=bf84f4e171fa0169af59881bc5d87ecc84d61523", "patch": "@@ -228,7 +228,7 @@\n #![omit_gdb_pretty_printer_section]\n \n fn immediate_args(a: isize, b: bool, c: f64) {\n-    println!(\"\") // #break\n+    zzz(); // #break\n }\n \n struct BigStruct {\n@@ -243,7 +243,7 @@ struct BigStruct {\n }\n \n fn non_immediate_args(a: BigStruct, b: BigStruct) {\n-    println!(\"\") // #break\n+    zzz(); // #break\n }\n \n fn binding(a: i64, b: u64, c: f64) {\n@@ -257,7 +257,7 @@ fn assignment(mut a: u64, b: u64, c: f64) {\n }\n \n fn function_call(x: u64, y: u64, z: f64) {\n-    println!(\"Hi!\") // #break\n+    zzz(); // #break\n }\n \n fn identifier(x: u64, y: u64, z: f64) -> u64 {\n@@ -333,3 +333,5 @@ fn main() {\n     while_expr(40, 41, 42);\n     loop_expr(43, 44, 45);\n }\n+\n+fn zzz() {()}"}]}