{"sha": "ad1617bb490a57988a5d8112b698ad3fdb80e42e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMTYxN2JiNDkwYTU3OTg4YTVkODExMmI2OThhZDNmZGI4MGU0MmU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-04T18:23:38Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-14T17:03:18Z"}, "message": "traits/query/normalize: add some `debug!` logging for the result.", "tree": {"sha": "9b8054ef91eb61cc26cdc007ed444b6a2e5b5f95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b8054ef91eb61cc26cdc007ed444b6a2e5b5f95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad1617bb490a57988a5d8112b698ad3fdb80e42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad1617bb490a57988a5d8112b698ad3fdb80e42e", "html_url": "https://github.com/rust-lang/rust/commit/ad1617bb490a57988a5d8112b698ad3fdb80e42e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad1617bb490a57988a5d8112b698ad3fdb80e42e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ebd300090429ef8587b3e4026d6c268b2b23c12", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ebd300090429ef8587b3e4026d6c268b2b23c12", "html_url": "https://github.com/rust-lang/rust/commit/5ebd300090429ef8587b3e4026d6c268b2b23c12"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "0da26abc330ac17e2204c463d0859fe2009287a7", "filename": "src/librustc_trait_selection/traits/query/normalize.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad1617bb490a57988a5d8112b698ad3fdb80e42e/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad1617bb490a57988a5d8112b698ad3fdb80e42e/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fnormalize.rs?ref=ad1617bb490a57988a5d8112b698ad3fdb80e42e", "patch": "@@ -59,11 +59,22 @@ impl<'cx, 'tcx> AtExt<'tcx> for At<'cx, 'tcx> {\n             anon_depth: 0,\n         };\n \n-        let value1 = value.fold_with(&mut normalizer);\n+        let result = value.fold_with(&mut normalizer);\n+        debug!(\n+            \"normalize::<{}>: result={:?} with {} obligations\",\n+            ::std::any::type_name::<T>(),\n+            result,\n+            normalizer.obligations.len(),\n+        );\n+        debug!(\n+            \"normalize::<{}>: obligations={:?}\",\n+            ::std::any::type_name::<T>(),\n+            normalizer.obligations,\n+        );\n         if normalizer.error {\n             Err(NoSolution)\n         } else {\n-            Ok(Normalized { value: value1, obligations: normalizer.obligations })\n+            Ok(Normalized { value: result, obligations: normalizer.obligations })\n         }\n     }\n }"}]}