{"sha": "186431e178c04fed8744d81b834547700af46430", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NjQzMWUxNzhjMDRmZWQ4NzQ0ZDgxYjgzNDU0NzcwMGFmNDY0MzA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-06T20:51:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-06T20:51:15Z"}, "message": "Adjust test-texts in infer_function_return_type", "tree": {"sha": "3ee88862fa657abd670cf27816ab69e468522ce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee88862fa657abd670cf27816ab69e468522ce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/186431e178c04fed8744d81b834547700af46430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/186431e178c04fed8744d81b834547700af46430", "html_url": "https://github.com/rust-lang/rust/commit/186431e178c04fed8744d81b834547700af46430", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/186431e178c04fed8744d81b834547700af46430/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f0d02c27694f52dce637e1bfbf2a0bd28dadeac", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0d02c27694f52dce637e1bfbf2a0bd28dadeac", "html_url": "https://github.com/rust-lang/rust/commit/4f0d02c27694f52dce637e1bfbf2a0bd28dadeac"}], "stats": {"total": 156, "additions": 78, "deletions": 78}, "files": [{"sha": "520d07ae067c93c6db7c1d77519d447c3605a797", "filename": "crates/assists/src/handlers/infer_function_return_type.rs", "status": "modified", "additions": 78, "deletions": 78, "changes": 156, "blob_url": "https://github.com/rust-lang/rust/blob/186431e178c04fed8744d81b834547700af46430/crates%2Fassists%2Fsrc%2Fhandlers%2Finfer_function_return_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/186431e178c04fed8744d81b834547700af46430/crates%2Fassists%2Fsrc%2Fhandlers%2Finfer_function_return_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Finfer_function_return_type.rs?ref=186431e178c04fed8744d81b834547700af46430", "patch": "@@ -124,11 +124,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() -> <|>_ {\n-                45\n-            }\"#,\n+    45\n+}\"#,\n             r#\"fn foo() -> i32 {\n-                45\n-            }\"#,\n+    45\n+}\"#,\n         );\n     }\n \n@@ -138,11 +138,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                || -> _ {<|>45};\n-            }\"#,\n+    || -> _ {<|>45};\n+}\"#,\n             r#\"fn foo() {\n-                || -> i32 {45};\n-            }\"#,\n+    || -> i32 {45};\n+}\"#,\n         );\n     }\n \n@@ -152,11 +152,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() <|>{\n-                45\n-            }\"#,\n+    45\n+}\"#,\n             r#\"fn foo() -> i32 {\n-                45\n-            }\"#,\n+    45\n+}\"#,\n         );\n     }\n \n@@ -166,11 +166,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                || <|>45\n-            }\"#,\n+    || <|>45\n+}\"#,\n             r#\"fn foo() {\n-                || -> i32 {45}\n-            }\"#,\n+    || -> i32 {45}\n+}\"#,\n         );\n     }\n \n@@ -180,11 +180,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                45<|>\n-            }\"#,\n+    45<|>\n+}\"#,\n             r#\"fn foo() -> i32 {\n-                45\n-            }\"#,\n+    45\n+}\"#,\n         );\n     }\n \n@@ -193,19 +193,19 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                if true {\n-                    3<|>\n-                } else {\n-                    5\n-                }\n-            }\"#,\n+    if true {\n+        3<|>\n+    } else {\n+        5\n+    }\n+}\"#,\n             r#\"fn foo() -> i32 {\n-                if true {\n-                    3\n-                } else {\n-                    5\n-                }\n-            }\"#,\n+    if true {\n+        3\n+    } else {\n+        5\n+    }\n+}\"#,\n         );\n     }\n \n@@ -215,8 +215,8 @@ mod tests {\n         check_assist_not_applicable(\n             infer_function_return_type,\n             r#\"fn foo() -> i32 {\n-                ( 45<|> + 32 ) * 123\n-            }\"#,\n+    ( 45<|> + 32 ) * 123\n+}\"#,\n         );\n     }\n \n@@ -225,9 +225,9 @@ mod tests {\n         check_assist_not_applicable(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                let x = <|>3;\n-                ( 45 + 32 ) * 123\n-            }\"#,\n+    let x = <|>3;\n+    ( 45 + 32 ) * 123\n+}\"#,\n         );\n     }\n \n@@ -236,8 +236,8 @@ mod tests {\n         check_assist_not_applicable(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                (<|>)\n-            }\"#,\n+    (<|>)\n+}\"#,\n         );\n     }\n \n@@ -247,15 +247,15 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                |x: i32| {\n-                    x<|>\n-                };\n-            }\"#,\n+    |x: i32| {\n+        x<|>\n+    };\n+}\"#,\n             r#\"fn foo() {\n-                |x: i32| -> i32 {\n-                    x\n-                };\n-            }\"#,\n+    |x: i32| -> i32 {\n+        x\n+    };\n+}\"#,\n         );\n     }\n \n@@ -264,11 +264,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                |x: i32| { x<|> };\n-            }\"#,\n+    |x: i32| { x<|> };\n+}\"#,\n             r#\"fn foo() {\n-                |x: i32| -> i32 { x };\n-            }\"#,\n+    |x: i32| -> i32 { x };\n+}\"#,\n         );\n     }\n \n@@ -278,11 +278,11 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                |x: i32| x<|>;\n-            }\"#,\n+    |x: i32| x<|>;\n+}\"#,\n             r#\"fn foo() {\n-                |x: i32| -> i32 {x};\n-            }\"#,\n+    |x: i32| -> i32 {x};\n+}\"#,\n         );\n     }\n \n@@ -291,23 +291,23 @@ mod tests {\n         check_assist(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                || {\n-                    if true {\n-                        3<|>\n-                    } else {\n-                        5\n-                    }\n-                }\n-            }\"#,\n+    || {\n+        if true {\n+            3<|>\n+        } else {\n+            5\n+        }\n+    }\n+}\"#,\n             r#\"fn foo() {\n-                || -> i32 {\n-                    if true {\n-                        3\n-                    } else {\n-                        5\n-                    }\n-                }\n-            }\"#,\n+    || -> i32 {\n+        if true {\n+            3\n+        } else {\n+            5\n+        }\n+    }\n+}\"#,\n         );\n     }\n \n@@ -317,8 +317,8 @@ mod tests {\n         check_assist_not_applicable(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                || -> i32 { 3<|> }\n-            }\"#,\n+    || -> i32 { 3<|> }\n+}\"#,\n         );\n     }\n \n@@ -327,11 +327,11 @@ mod tests {\n         check_assist_not_applicable(\n             infer_function_return_type,\n             r#\"fn foo() {\n-                || -> i32 {\n-                    let x = 3<|>;\n-                    6\n-                }\n-            }\"#,\n+    || -> i32 {\n+        let x = 3<|>;\n+        6\n+    }\n+}\"#,\n         );\n     }\n }"}]}