{"sha": "c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "node_id": "C_kwDOAAsO6NoAKGM0MWI3YmJlNjk4YTUwNGI2YzY2Y2NlNzQ0YzJhOGMwMTgxYzliODU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T14:58:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T14:58:17Z"}, "message": "internal: allow macro tests to inspect parse tree", "tree": {"sha": "af6db7122b98a5e857ef3f4681d39a0e7f7272fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af6db7122b98a5e857ef3f4681d39a0e7f7272fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "html_url": "https://github.com/rust-lang/rust/commit/c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aac23f78328a6747a6e090af9a3cbe13b621def9", "url": "https://api.github.com/repos/rust-lang/rust/commits/aac23f78328a6747a6e090af9a3cbe13b621def9", "html_url": "https://github.com/rust-lang/rust/commit/aac23f78328a6747a6e090af9a3cbe13b621def9"}], "stats": {"total": 95, "additions": 53, "deletions": 42}, "files": [{"sha": "0a9ab9315727485693ad023bddac3d0653fb4e04", "filename": "crates/hir_def/src/macro_expansion_tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs?ref=c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "patch": "@@ -69,6 +69,13 @@ fn check(ra_fixture: &str, mut expect: Expect) {\n             let indent = IndentLevel::from_node(call.syntax());\n             let pp = reindent(indent, pp);\n             format_to!(expn_text, \"{}\", pp);\n+            if call.to_string().contains(\"// +tree\") {\n+                let tree = format!(\"{:#?}\", parse.syntax_node())\n+                    .split_inclusive(\"\\n\")\n+                    .map(|line| format!(\"// {}\", line))\n+                    .collect::<String>();\n+                format_to!(expn_text, \"\\n{}\", tree)\n+            }\n         }\n         let range = call.syntax().text_range();\n         let range: Range<usize> = range.into();"}, {"sha": "7c9a19613b9b1c584838471eef412f136b84a953", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "patch": "@@ -261,3 +261,49 @@ fn baz() {\n \"#]],\n     )\n }\n+\n+#[test]\n+fn test_expr_order() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($ i:expr) => { fn bar() { $ i * 3; } }\n+}\n+// +tree\n+m! { 1 + 2 }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($ i:expr) => { fn bar() { $ i * 3; } }\n+}\n+fn bar() {\n+    1+2*3;\n+}\n+// MACRO_ITEMS@0..15\n+//   FN@0..15\n+//     FN_KW@0..2 \"fn\"\n+//     NAME@2..5\n+//       IDENT@2..5 \"bar\"\n+//     PARAM_LIST@5..7\n+//       L_PAREN@5..6 \"(\"\n+//       R_PAREN@6..7 \")\"\n+//     BLOCK_EXPR@7..15\n+//       STMT_LIST@7..15\n+//         L_CURLY@7..8 \"{\"\n+//         EXPR_STMT@8..14\n+//           BIN_EXPR@8..13\n+//             BIN_EXPR@8..11\n+//               LITERAL@8..9\n+//                 INT_NUMBER@8..9 \"1\"\n+//               PLUS@9..10 \"+\"\n+//               LITERAL@10..11\n+//                 INT_NUMBER@10..11 \"2\"\n+//             STAR@11..12 \"*\"\n+//             LITERAL@12..13\n+//               INT_NUMBER@12..13 \"3\"\n+//           SEMICOLON@13..14 \";\"\n+//         R_CURLY@14..15 \"}\"\n+\n+\"#]],\n+    )\n+}"}, {"sha": "85a51588ebeb1204097ccc3c336aac463efc9de8", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41b7bbe698a504b6c66cce744c2a8c0181c9b85/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "patch": "@@ -166,48 +166,6 @@ SUBTREE $\n     );\n }\n \n-#[test]\n-fn test_expr_order() {\n-    let expanded = parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:expr) => {\n-                 fn bar() { $ i * 2; }\n-            }\n-        }\n-\"#,\n-    )\n-    .expand_items(\"foo! { 1 + 1}\");\n-\n-    let dump = format!(\"{:#?}\", expanded);\n-    assert_eq_text!(\n-        r#\"MACRO_ITEMS@0..15\n-  FN@0..15\n-    FN_KW@0..2 \"fn\"\n-    NAME@2..5\n-      IDENT@2..5 \"bar\"\n-    PARAM_LIST@5..7\n-      L_PAREN@5..6 \"(\"\n-      R_PAREN@6..7 \")\"\n-    BLOCK_EXPR@7..15\n-      STMT_LIST@7..15\n-        L_CURLY@7..8 \"{\"\n-        EXPR_STMT@8..14\n-          BIN_EXPR@8..13\n-            BIN_EXPR@8..11\n-              LITERAL@8..9\n-                INT_NUMBER@8..9 \"1\"\n-              PLUS@9..10 \"+\"\n-              LITERAL@10..11\n-                INT_NUMBER@10..11 \"1\"\n-            STAR@11..12 \"*\"\n-            LITERAL@12..13\n-              INT_NUMBER@12..13 \"2\"\n-          SEMICOLON@13..14 \";\"\n-        R_CURLY@14..15 \"}\"\"#,\n-        dump.trim()\n-    );\n-}\n \n #[test]\n fn test_match_group_with_multichar_sep() {"}]}