{"sha": "bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYzAwYzllOWMxNjJmZmZkZGY3ZThhNDU4NWFhYjEwZWNmYzlkNmQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-07-28T04:42:39Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-07-28T04:42:39Z"}, "message": "format!: use a dummy span rather than callee span for the span base for temporary variables", "tree": {"sha": "3aa4e3498cfc8dcbb74a4c1be60e3ac04bb3fb58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aa4e3498cfc8dcbb74a4c1be60e3ac04bb3fb58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d", "html_url": "https://github.com/rust-lang/rust/commit/bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1206c4b6711dc9c252a154c21b951243bf7944b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1206c4b6711dc9c252a154c21b951243bf7944b", "html_url": "https://github.com/rust-lang/rust/commit/e1206c4b6711dc9c252a154c21b951243bf7944b"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "9734bb867f1d80e0af7a8cdc6b1112d3ba2943f8", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=bbc00c9e9c162fffddf7e8a4585aab10ecfc9d6d", "patch": "@@ -20,7 +20,7 @@ use syntax::ext::build::AstBuilder;\n use syntax::parse::token;\n use syntax::ptr::P;\n use syntax::symbol::{Symbol, keywords};\n-use syntax_pos::Span;\n+use syntax_pos::{Span, DUMMY_SP};\n use syntax::tokenstream;\n \n use std::collections::{HashMap, HashSet};\n@@ -558,8 +558,10 @@ impl<'a, 'b> Context<'a, 'b> {\n         // passed to this function.\n         for (i, e) in self.args.into_iter().enumerate() {\n             let name = self.ecx.ident_of(&format!(\"__arg{}\", i));\n-            let span =\n-                Span { ctxt: e.span.ctxt.apply_mark(self.ecx.current_expansion.mark), ..e.span };\n+            let span = Span {\n+                ctxt: e.span.ctxt.apply_mark(self.ecx.current_expansion.mark),\n+                ..DUMMY_SP\n+            };\n             pats.push(self.ecx.pat_ident(span, name));\n             for ref arg_ty in self.arg_unique_types[i].iter() {\n                 locals.push(Context::format_arg(self.ecx, self.macsp, e.span, arg_ty, name));"}]}