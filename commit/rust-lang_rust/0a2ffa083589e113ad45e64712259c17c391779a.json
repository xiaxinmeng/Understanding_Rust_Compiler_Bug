{"sha": "0a2ffa083589e113ad45e64712259c17c391779a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMmZmYTA4MzU4OWUxMTNhZDQ1ZTY0NzEyMjU5YzE3YzM5MTc3OWE=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@jbeekman.nl", "date": "2015-09-21T23:10:38Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@jbeekman.nl", "date": "2015-09-21T23:54:11Z"}, "message": "Change syntax::ast_util::stmt_id to not panic on macros\n\nThis enables the Debug trait to work on syntax::ast::Stmt", "tree": {"sha": "eb41a4157af00b86c437ec4cee5fc71657a00624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb41a4157af00b86c437ec4cee5fc71657a00624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a2ffa083589e113ad45e64712259c17c391779a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2ffa083589e113ad45e64712259c17c391779a", "html_url": "https://github.com/rust-lang/rust/commit/0a2ffa083589e113ad45e64712259c17c391779a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a2ffa083589e113ad45e64712259c17c391779a/comments", "author": null, "committer": null, "parents": [{"sha": "7e8d19b24de6d06e4962c5959d00603c3239ac8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e8d19b24de6d06e4962c5959d00603c3239ac8c", "html_url": "https://github.com/rust-lang/rust/commit/7e8d19b24de6d06e4962c5959d00603c3239ac8c"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "cdddaaffc357dfb66208018b58d80505a151de42", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a2ffa083589e113ad45e64712259c17c391779a/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a2ffa083589e113ad45e64712259c17c391779a/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=0a2ffa083589e113ad45e64712259c17c391779a", "patch": "@@ -65,6 +65,7 @@ use ptr::P;\n \n use std::fmt;\n use std::rc::Rc;\n+use std::borrow::Cow;\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n // FIXME #6993: in librustc, uses of \"ident\" should be replaced\n@@ -685,7 +686,8 @@ pub type Stmt = Spanned<Stmt_>;\n impl fmt::Debug for Stmt {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         write!(f, \"stmt({}: {})\",\n-               ast_util::stmt_id(self),\n+               ast_util::stmt_id(self)\n+                   .map_or(Cow::Borrowed(\"<macro>\"),|id|Cow::Owned(id.to_string())),\n                pprust::stmt_to_string(self))\n     }\n }"}, {"sha": "a0535408cce1d1c54afe3acc90a1c8ec72bf4e9b", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0a2ffa083589e113ad45e64712259c17c391779a/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a2ffa083589e113ad45e64712259c17c391779a/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=0a2ffa083589e113ad45e64712259c17c391779a", "patch": "@@ -28,12 +28,12 @@ pub fn path_name_i(idents: &[Ident]) -> String {\n     idents.iter().map(|i| i.to_string()).collect::<Vec<String>>().join(\"::\")\n }\n \n-pub fn stmt_id(s: &Stmt) -> NodeId {\n+pub fn stmt_id(s: &Stmt) -> Option<NodeId> {\n     match s.node {\n-      StmtDecl(_, id) => id,\n-      StmtExpr(_, id) => id,\n-      StmtSemi(_, id) => id,\n-      StmtMac(..) => panic!(\"attempted to analyze unexpanded stmt\")\n+      StmtDecl(_, id) => Some(id),\n+      StmtExpr(_, id) => Some(id),\n+      StmtSemi(_, id) => Some(id),\n+      StmtMac(..) => None,\n     }\n }\n \n@@ -385,7 +385,8 @@ impl<'a, 'v, O: IdVisitingOperation> Visitor<'v> for IdVisitor<'a, O> {\n     }\n \n     fn visit_stmt(&mut self, statement: &Stmt) {\n-        self.operation.visit_id(ast_util::stmt_id(statement));\n+        self.operation\n+            .visit_id(ast_util::stmt_id(statement).expect(\"attempted to visit unexpanded stmt\"));\n         visit::walk_stmt(self, statement)\n     }\n "}]}