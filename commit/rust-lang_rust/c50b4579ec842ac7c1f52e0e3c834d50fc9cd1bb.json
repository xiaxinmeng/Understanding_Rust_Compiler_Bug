{"sha": "c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MGI0NTc5ZWM4NDJhYzdjMWY1MmUwZTNjODM0ZDUwZmM5Y2QxYmI=", "commit": {"author": {"name": "Maan2003", "email": "manmeetmann2003@gmail.com", "date": "2021-06-13T04:05:29Z"}, "committer": {"name": "Maan2003", "email": "manmeetmann2003@gmail.com", "date": "2021-06-13T04:05:29Z"}, "message": "clippy::useless_return", "tree": {"sha": "e70b18936d014aa3038c4a6283e200f0a479aeb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e70b18936d014aa3038c4a6283e200f0a479aeb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVt0Hfgx04mDvJfYh6a8CS6Y8cO0FAmDFhBMACgkQ6a8CS6Y8\ncO29cw//QzJrK5hAn65EX9JyXZTrhInhd1Zn9YGvOJGj+5IU6DjolmZNvFEnHF6+\nQ/WhmKtGiONdYL2FduDi1gz7RPM2SDNx5V1i9SqFSizYu3mv6lpRnQ77vsa6Sg2U\nT746ncBrxYracu4dDHzrg2sonJokWChGgbcpYU4LsCvw/bHjzCmSUJFeRtiPKGKV\nxtQtkQcxHxgnvI2ipyPi/U1oWdczphxZlkJwBgmmPh7vnF+avS624CrkQ7mx0Z/+\nXey6tmU6tp0IsBr5bIXWmORgO/4KIWCcfhVGZsaKaEkCpRNC1VMhAgWNyDLQHt9s\nLr8ffp0Cx30qJIsyw7sFCjfZyHCJaSr7VdYe80tfJcRioaILDEzze0lyvCPXlRki\nEreby1wHoxp1LdBJzCg8nyykTdmZJmR3XV8kDeniWlH9RmrSrrV4shcPOqsyaXVn\n+ivV6/s+XevdvkjIF35vbnLq1fgCCtr2lkEspi+03alVEjditmn+gquy3MyKeZV3\naDf5nxG/45l9Fd2KewGcpGh4/ZbfiOoZ635UcRAVPKoijaKeLJILd2dcFFkXgvXt\nSL8T8Jsn++LmHdMHHWSlpV3h0kLUU+rl6IvHuck5fsa+oHqFnoUqyIyrXSscaPRW\neuLlB0XT1wUPnLjn6Koy4SJqU8e0UgNlORVhgLLOH8qZptxhKXQ=\n=4AkO\n-----END PGP SIGNATURE-----", "payload": "tree e70b18936d014aa3038c4a6283e200f0a479aeb1\nparent 75370312fbfe072947ffdc568eebc9cb4c6108e4\nauthor Maan2003 <manmeetmann2003@gmail.com> 1623557129 +0530\ncommitter Maan2003 <manmeetmann2003@gmail.com> 1623557129 +0530\n\nclippy::useless_return\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "html_url": "https://github.com/rust-lang/rust/commit/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/comments", "author": {"login": "Maan2003", "id": 49202620, "node_id": "MDQ6VXNlcjQ5MjAyNjIw", "avatar_url": "https://avatars.githubusercontent.com/u/49202620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maan2003", "html_url": "https://github.com/Maan2003", "followers_url": "https://api.github.com/users/Maan2003/followers", "following_url": "https://api.github.com/users/Maan2003/following{/other_user}", "gists_url": "https://api.github.com/users/Maan2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maan2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maan2003/subscriptions", "organizations_url": "https://api.github.com/users/Maan2003/orgs", "repos_url": "https://api.github.com/users/Maan2003/repos", "events_url": "https://api.github.com/users/Maan2003/events{/privacy}", "received_events_url": "https://api.github.com/users/Maan2003/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Maan2003", "id": 49202620, "node_id": "MDQ6VXNlcjQ5MjAyNjIw", "avatar_url": "https://avatars.githubusercontent.com/u/49202620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maan2003", "html_url": "https://github.com/Maan2003", "followers_url": "https://api.github.com/users/Maan2003/followers", "following_url": "https://api.github.com/users/Maan2003/following{/other_user}", "gists_url": "https://api.github.com/users/Maan2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maan2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maan2003/subscriptions", "organizations_url": "https://api.github.com/users/Maan2003/orgs", "repos_url": "https://api.github.com/users/Maan2003/repos", "events_url": "https://api.github.com/users/Maan2003/events{/privacy}", "received_events_url": "https://api.github.com/users/Maan2003/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75370312fbfe072947ffdc568eebc9cb4c6108e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/75370312fbfe072947ffdc568eebc9cb4c6108e4", "html_url": "https://github.com/rust-lang/rust/commit/75370312fbfe072947ffdc568eebc9cb4c6108e4"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "bed4c49941c97e715f0ec1efa3dcf7dab5d84974", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -1000,7 +1000,7 @@ impl From<ast::LiteralKind> for Literal {\n             // FIXME: these should have actual values filled in, but unsure on perf impact\n             LiteralKind::IntNumber(lit) => {\n                 if let builtin @ Some(_) = lit.suffix().and_then(BuiltinFloat::from_suffix) {\n-                    return Literal::Float(Default::default(), builtin);\n+                    Literal::Float(Default::default(), builtin)\n                 } else if let builtin @ Some(_) =\n                     lit.suffix().and_then(|it| BuiltinInt::from_suffix(it))\n                 {"}, {"sha": "66f44202ba3c8045c09d817afab230a6e0fd1ae0", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -241,7 +241,7 @@ fn parse_macro_expansion(\n                 }\n             };\n             if is_self_replicating(&node, &call_node.value) {\n-                return ExpandResult::only_err(err);\n+                ExpandResult::only_err(err)\n             } else {\n                 ExpandResult { value: Some((parse, Arc::new(rev_token_map))), err: Some(err) }\n             }"}, {"sha": "57ae9455b478f97456873009a02b06ad9c0eaf70", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -192,7 +192,7 @@ pub(crate) fn doc_attributes(\n             ast::TupleField(it)  => sema.to_def(&it).map(|def| (def.attrs(sema.db), Definition::Field(def))),\n             ast::Macro(it)       => sema.to_def(&it).map(|def| (def.attrs(sema.db), Definition::Macro(def))),\n             // ast::Use(it) => sema.to_def(&it).map(|def| (Box::new(it) as _, def.attrs(sema.db))),\n-            _ => return None\n+            _ => None\n         }\n     }\n }"}, {"sha": "e2cec21bcc48a7e377be8eb435c52d85b5885768", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -527,9 +527,9 @@ fn highlight_name_ref_by_syntax(\n \n     match parent.kind() {\n         METHOD_CALL_EXPR => {\n-            return ast::MethodCallExpr::cast(parent)\n+            ast::MethodCallExpr::cast(parent)\n                 .and_then(|it| highlight_method_call(sema, krate, &it))\n-                .unwrap_or_else(|| SymbolKind::Function.into());\n+                .unwrap_or_else(|| SymbolKind::Function.into())\n         }\n         FIELD_EXPR => {\n             let h = HlTag::Symbol(SymbolKind::Field);"}, {"sha": "ec43c8579a5298d30ff0c190f221cfefb2b157e6", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -232,7 +232,7 @@ fn find_doc_string_in_attr(attr: &hir::Attr, it: &ast::Attr) -> Option<ast::Stri\n                     string.text().get(1..string.text().len() - 1).map_or(false, |it| it == text)\n                 })\n         }\n-        _ => return None,\n+        _ => None,\n     }\n }\n "}, {"sha": "331a6df2b9060a22c8ee221f39f4a4c430bb98ae", "filename": "crates/ide_assists/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fide_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Flib.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -47,14 +47,14 @@ impl AssistKind {\n         }\n \n         match self {\n-            AssistKind::None | AssistKind::Generate => return true,\n+            AssistKind::None | AssistKind::Generate => true,\n             AssistKind::Refactor => match other {\n                 AssistKind::RefactorExtract\n                 | AssistKind::RefactorInline\n-                | AssistKind::RefactorRewrite => return true,\n-                _ => return false,\n+                | AssistKind::RefactorRewrite => true,\n+                _ => false,\n             },\n-            _ => return false,\n+            _ => false,\n         }\n     }\n "}, {"sha": "a9e43be6260b3a8bc5cbe95003fd8fd56b1c805d", "filename": "crates/proc_macro_api/src/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -77,7 +77,7 @@ impl ProcMacroProcessSrv {\n \n         match res {\n             Some(Response::Error(err)) => {\n-                return Err(tt::ExpansionError::ExpansionError(err.message));\n+                Err(tt::ExpansionError::ExpansionError(err.message))\n             }\n             Some(res) => Ok(res.try_into().map_err(|err| {\n                 tt::ExpansionError::Unknown(format!(\"Fail to get response, reason : {:#?} \", err))"}, {"sha": "077b95ac8a8a6cd69889ab3ef6fae093c0d84a22", "filename": "crates/proc_macro_srv/src/rustc_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -539,7 +539,7 @@ impl server::Literal for Rustc {\n         } else {\n             n.parse::<u128>().unwrap().to_string()\n         };\n-        return Literal { text: n.into(), id: tt::TokenId::unspecified() };\n+        Literal { text: n.into(), id: tt::TokenId::unspecified() }\n     }\n \n     fn typed_integer(&mut self, n: &str, kind: &str) -> Self::Literal {"}, {"sha": "5991e72b5efc3632678fb0e7d82fa19c9b81821f", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -104,15 +104,15 @@ impl<'a> RequestDispatcher<'a> {\n \n         let res = crate::from_json(R::METHOD, req.params);\n         match res {\n-            Ok(params) => return Some((req.id, params)),\n+            Ok(params) => Some((req.id, params)),\n             Err(err) => {\n                 let response = lsp_server::Response::new_err(\n                     req.id,\n                     lsp_server::ErrorCode::InvalidParams as i32,\n                     err.to_string(),\n                 );\n                 self.global_state.respond(response);\n-                return None;\n+                None\n             }\n         }\n     }"}, {"sha": "1417d837977e40fc6b905eff82104f1e2b5ac1d1", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=c50b4579ec842ac7c1f52e0e3c834d50fc9cd1bb", "patch": "@@ -701,7 +701,7 @@ impl GlobalState {\n                     },\n                 );\n \n-                return Ok(());\n+                Ok(())\n             })?\n             .on::<lsp_types::notification::DidChangeWatchedFiles>(|this, params| {\n                 for change in params.changes {"}]}