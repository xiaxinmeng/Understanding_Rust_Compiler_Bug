{"sha": "bb6e5224da35fad23307ae0b5c17c7fc0eff63c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNmU1MjI0ZGEzNWZhZDIzMzA3YWUwYjVjMTdjN2ZjMGVmZjYzYzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-14T03:22:51Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-25T08:22:11Z"}, "message": "handle array types", "tree": {"sha": "6d9ce6ecf9419516068e0c2aa4f759b4b64eaf8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d9ce6ecf9419516068e0c2aa4f759b4b64eaf8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb6e5224da35fad23307ae0b5c17c7fc0eff63c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAll2/7MACgkQpp+NIls6\n19kZiA//TK0+YjAAKeFH8YShPZOL82c+Bn4kjfeNrT2Vfxu92RSkL+nWxziNre4/\nV6yVv92XbdQRIttB1deki4zKNwbKwE+se6TsB/j4Pl7AVcCFhdXP7F5CaGroadnd\nG0vJQqSlfvjpWBBaOMYWKkN95hHMw9BpLmnZ98y8nBiAOUr/tlMtFfO6Ptu0GnmE\nuW4NUMRcC6HfvXnCbS9hmO35GL/NHUAAqFTzSnl6udC6N23AJP12xLo+TRxCx2YI\nSRBCNY0AdGVG+REITwFW6HFnwbk8Z7Id/J4IhLxfmFVCyiU35sd8AaaJ6FNzVMcw\nexMPoY8rkCdTpMTc22d0T8CfglazrJmg6qzvMZpX4sAKNpzwQkatiB2Hu7Y5WQg1\nQTpYdEttDe7YQ7+uNdum50Ilo27XU1r6x0pQlXiivusDe/BS6VczIUtDDlFr6zHr\n10RKGz85MYUH1YoRHQMzqUPBx1N3Ei4gw/sePBad1H9Xr34OsyoVohr9gjyr9Xsl\nqU5NefXxzuBB7ffEQh7hGRxLs+5ykTWx2qUBakQ5gZ3AUxCq7rlNiI9y+/c6vc3E\nyRsCjpSulsWrsOUpVDXSQfjbBMoDvhvMBpfP7u54lgVNjR4OfOjJmQqbXxkmD3Ru\nLjvb73NP9Ofbni7ISudkmYdC9v3/MxyXC447dx81MQNuW94ag6w=\n=LekO\n-----END PGP SIGNATURE-----", "payload": "tree 6d9ce6ecf9419516068e0c2aa4f759b4b64eaf8e\nparent 4457a52d4f34dcc00234f1aa6047fcd5efeaf543\nauthor Ralf Jung <post@ralfj.de> 1500002571 -0700\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1500970931 +0200\n\nhandle array types\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb6e5224da35fad23307ae0b5c17c7fc0eff63c1", "html_url": "https://github.com/rust-lang/rust/commit/bb6e5224da35fad23307ae0b5c17c7fc0eff63c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb6e5224da35fad23307ae0b5c17c7fc0eff63c1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4457a52d4f34dcc00234f1aa6047fcd5efeaf543", "url": "https://api.github.com/repos/rust-lang/rust/commits/4457a52d4f34dcc00234f1aa6047fcd5efeaf543", "html_url": "https://github.com/rust-lang/rust/commit/4457a52d4f34dcc00234f1aa6047fcd5efeaf543"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "1c7070e77b1b2d33c5ed7b900f96df75c4944ce3", "filename": "src/librustc_mir/interpret/lvalue.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb6e5224da35fad23307ae0b5c17c7fc0eff63c1/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6e5224da35fad23307ae0b5c17c7fc0eff63c1/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs?ref=bb6e5224da35fad23307ae0b5c17c7fc0eff63c1", "patch": "@@ -531,7 +531,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             TyBool | TyFloat(_) | TyChar | TyStr |\n             TyRef(..) => true,\n             TyAdt(adt, _) if adt.is_box() => true,\n-            TyAdt(_, _) | TyTuple(..) | TyClosure(..) => false,\n+            TySlice(_) | TyAdt(_, _) | TyTuple(..) | TyClosure(..) | TyArray(..) => false,\n             TyParam(_) | TyInfer(_) => bug!(\"I got an incomplete type for validation\"),\n             _ => return Err(EvalError::Unimplemented(format!(\"Unimplemented type encountered when checking validity.\"))),\n         };\n@@ -622,6 +622,13 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 }\n                 Ok(())\n             }\n+            TyArray(elem_ty, len) => {\n+                for i in 0..len {\n+                    let inner_lvalue = self.lvalue_index(lvalue, ty, i as u64)?;\n+                    self.validate(inner_lvalue, elem_ty, vctx)?;\n+                }\n+                Ok(())\n+            }\n             TyFnPtr(_sig) => {\n                 // TODO: The function names here could need some improvement.\n                 let ptr = self.read_lvalue(lvalue)?.into_ptr(&mut self.memory)?.to_ptr()?;"}]}