{"sha": "e11d20711335111073826d7b553ca4839c590a04", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMWQyMDcxMTMzNTExMTA3MzgyNmQ3YjU1M2NhNDgzOWM1OTBhMDQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-04T15:36:53Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-04T16:30:36Z"}, "message": "Add either::is_left and either::is_right", "tree": {"sha": "a1210da6da1a23640dbfb368c2122c315ca49a88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1210da6da1a23640dbfb368c2122c315ca49a88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e11d20711335111073826d7b553ca4839c590a04", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e11d20711335111073826d7b553ca4839c590a04", "html_url": "https://github.com/rust-lang/rust/commit/e11d20711335111073826d7b553ca4839c590a04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e11d20711335111073826d7b553ca4839c590a04/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7e1a35f8836f78894a4499ac7bebcc76472f172", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e1a35f8836f78894a4499ac7bebcc76472f172", "html_url": "https://github.com/rust-lang/rust/commit/a7e1a35f8836f78894a4499ac7bebcc76472f172"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "f3571ea5bcf7d51d635799b4bb79506be13c3169", "filename": "src/libcore/either.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e11d20711335111073826d7b553ca4839c590a04/src%2Flibcore%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e11d20711335111073826d7b553ca4839c590a04/src%2Flibcore%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Feither.rs?ref=e11d20711335111073826d7b553ca4839c590a04", "patch": "@@ -103,6 +103,24 @@ pure fn to_result<copy T, copy U>(eith: t<T, U>) -> result::t<U, T> {\n     }\n }\n \n+/*\n+Function: is_left\n+\n+Checks whether the given value is a left\n+*/\n+pure fn is_left<T, U>(eith: t<T, U>) -> bool {\n+    alt eith { left(_) { true } _ { false } }\n+}\n+\n+/*\n+Function: is_left\n+\n+Checks whether the given value is a right\n+*/\n+pure fn is_right<T, U>(eith: t<T, U>) -> bool {\n+    alt eith { right(_) { true } _ { false } }\n+}\n+\n //\n // Local Variables:\n // mode: rust"}]}