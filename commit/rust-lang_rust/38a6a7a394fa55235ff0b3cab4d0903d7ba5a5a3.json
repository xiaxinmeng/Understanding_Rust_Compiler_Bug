{"sha": "38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YTZhN2EzOTRmYTU1MjM1ZmYwYjNjYWI0ZDA5MDNkN2JhNWE1YTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-07T13:06:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-07T13:06:42Z"}, "message": "auto merge of #6276 : brson/rust/issue-6122, r=graydon", "tree": {"sha": "64f20e13a44e5a9a42782882ce5c0858d866ab6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64f20e13a44e5a9a42782882ce5c0858d866ab6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "html_url": "https://github.com/rust-lang/rust/commit/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154f3b00e0617e379d005b3aa7f41e8f1bea7bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/154f3b00e0617e379d005b3aa7f41e8f1bea7bd8", "html_url": "https://github.com/rust-lang/rust/commit/154f3b00e0617e379d005b3aa7f41e8f1bea7bd8"}, {"sha": "3cafe905a406a2645f8bc7a2a6d50f24817faa4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cafe905a406a2645f8bc7a2a6d50f24817faa4a", "html_url": "https://github.com/rust-lang/rust/commit/3cafe905a406a2645f8bc7a2a6d50f24817faa4a"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "af433c6dd9dc863c015d0ab16c5796e5e58a3488", "filename": "src/libstd/ebml.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3/src%2Flibstd%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3/src%2Flibstd%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Febml.rs?ref=38a6a7a394fa55235ff0b3cab4d0903d7ba5a5a3", "patch": "@@ -379,6 +379,7 @@ pub mod reader {\n         fn read_int(&mut self) -> int {\n             let v = doc_as_u64(self.next_doc(EsInt)) as i64;\n             if v > (int::max_value as i64) || v < (int::min_value as i64) {\n+                debug!(\"FIXME #6122: Removing this makes this function miscompile\");\n                 fail!(fmt!(\"int %? out of range for this architecture\", v));\n             }\n             v as int"}]}