{"sha": "b1c5c26c6885588a14b39250a729fe7a7356db6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYzVjMjZjNjg4NTU4OGExNGIzOTI1MGE3MjlmZTdhNzM1NmRiNmM=", "commit": {"author": {"name": "androm3da", "email": "brian.cain@gmail.com", "date": "2015-11-25T18:46:35Z"}, "committer": {"name": "androm3da", "email": "brian.cain@gmail.com", "date": "2015-11-25T18:46:35Z"}, "message": "Updated \"while let\" example.", "tree": {"sha": "0860e8be15c970b49f03dd9462a8b11912832069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0860e8be15c970b49f03dd9462a8b11912832069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1c5c26c6885588a14b39250a729fe7a7356db6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c5c26c6885588a14b39250a729fe7a7356db6c", "html_url": "https://github.com/rust-lang/rust/commit/b1c5c26c6885588a14b39250a729fe7a7356db6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1c5c26c6885588a14b39250a729fe7a7356db6c/comments", "author": {"login": "androm3da", "id": 8779799, "node_id": "MDQ6VXNlcjg3Nzk3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8779799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/androm3da", "html_url": "https://github.com/androm3da", "followers_url": "https://api.github.com/users/androm3da/followers", "following_url": "https://api.github.com/users/androm3da/following{/other_user}", "gists_url": "https://api.github.com/users/androm3da/gists{/gist_id}", "starred_url": "https://api.github.com/users/androm3da/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/androm3da/subscriptions", "organizations_url": "https://api.github.com/users/androm3da/orgs", "repos_url": "https://api.github.com/users/androm3da/repos", "events_url": "https://api.github.com/users/androm3da/events{/privacy}", "received_events_url": "https://api.github.com/users/androm3da/received_events", "type": "User", "site_admin": false}, "committer": {"login": "androm3da", "id": 8779799, "node_id": "MDQ6VXNlcjg3Nzk3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8779799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/androm3da", "html_url": "https://github.com/androm3da", "followers_url": "https://api.github.com/users/androm3da/followers", "following_url": "https://api.github.com/users/androm3da/following{/other_user}", "gists_url": "https://api.github.com/users/androm3da/gists{/gist_id}", "starred_url": "https://api.github.com/users/androm3da/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/androm3da/subscriptions", "organizations_url": "https://api.github.com/users/androm3da/orgs", "repos_url": "https://api.github.com/users/androm3da/repos", "events_url": "https://api.github.com/users/androm3da/events{/privacy}", "received_events_url": "https://api.github.com/users/androm3da/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9a13e6ba83a5619b628c1534b1c6d566157f62", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9a13e6ba83a5619b628c1534b1c6d566157f62", "html_url": "https://github.com/rust-lang/rust/commit/1b9a13e6ba83a5619b628c1534b1c6d566157f62"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "c4f21bf3781caf06719809e15913f6d51f767a89", "filename": "src/doc/book/if-let.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b1c5c26c6885588a14b39250a729fe7a7356db6c/src%2Fdoc%2Fbook%2Fif-let.md", "raw_url": "https://github.com/rust-lang/rust/raw/b1c5c26c6885588a14b39250a729fe7a7356db6c/src%2Fdoc%2Fbook%2Fif-let.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fif-let.md?ref=b1c5c26c6885588a14b39250a729fe7a7356db6c", "patch": "@@ -58,7 +58,8 @@ if let Some(x) = option {\n ## `while let`\n \n In a similar fashion, `while let` can be used when you want to conditionally\n-loop as long as a value matches a certain pattern. It turns code like this:\n+loop over an iterator as long as a value matches a certain pattern. It turns \n+code like this:\n \n ```rust\n # let option: Option<i32> = None;\n@@ -73,8 +74,9 @@ loop {\n Into code like this:\n \n ```rust\n-# let option: Option<i32> = None;\n-while let Some(x) = option {\n+# let v: vec![1, 3, 5, 7, 9, ];\n+# let mut it: v.iter();\n+while let Some(x) = it.next() {\n     println!(\"{}\", x);\n }\n ```"}]}