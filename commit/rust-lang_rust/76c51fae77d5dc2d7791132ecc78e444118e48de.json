{"sha": "76c51fae77d5dc2d7791132ecc78e444118e48de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YzUxZmFlNzdkNWRjMmQ3NzkxMTMyZWNjNzhlNDQ0MTE4ZTQ4ZGU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-15T19:05:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-15T19:05:21Z"}, "message": "Tweak writable root API", "tree": {"sha": "1254d9c85ef4ff811d8a5c687face9d130cdf31d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1254d9c85ef4ff811d8a5c687face9d130cdf31d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76c51fae77d5dc2d7791132ecc78e444118e48de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76c51fae77d5dc2d7791132ecc78e444118e48de", "html_url": "https://github.com/rust-lang/rust/commit/76c51fae77d5dc2d7791132ecc78e444118e48de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76c51fae77d5dc2d7791132ecc78e444118e48de/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c88900fa9ecc71fdd58254d3f29b66912a56bd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c88900fa9ecc71fdd58254d3f29b66912a56bd4", "html_url": "https://github.com/rust-lang/rust/commit/8c88900fa9ecc71fdd58254d3f29b66912a56bd4"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "0cf6db40dd96dfaffb6c2301c319fca9f7a251b4", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/76c51fae77d5dc2d7791132ecc78e444118e48de/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76c51fae77d5dc2d7791132ecc78e444118e48de/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=76c51fae77d5dc2d7791132ecc78e444118e48de", "patch": "@@ -94,12 +94,12 @@ impl AnalysisHostImpl {\n         }\n     }\n     pub fn change_files(&mut self, changes: &mut dyn Iterator<Item=(FileId, Option<String>)>) {\n-        let data = self.data_mut();\n-        data.root = Arc::new(data.root.apply_changes(changes, None));\n+        self.data_mut()\n+            .root.apply_changes(changes, None);\n     }\n     pub fn set_file_resolver(&mut self, resolver: FileResolverImp) {\n-        let data = self.data_mut();\n-        data.root = Arc::new(data.root.apply_changes(&mut iter::empty(), Some(resolver)));\n+        self.data_mut()\n+            .root.apply_changes(&mut iter::empty(), Some(resolver));\n     }\n     pub fn set_crate_graph(&mut self, graph: CrateGraph) {\n         let mut visited = FxHashSet::default();\n@@ -141,7 +141,7 @@ impl Clone for AnalysisImpl {\n impl AnalysisImpl {\n     fn root(&self, file_id: FileId) -> &SourceRoot {\n         if self.data.root.contains(file_id) {\n-            return &*self.data.root;\n+            return &self.data.root;\n         }\n         &**self.data.libs.iter().find(|it| it.contains(file_id)).unwrap()\n     }\n@@ -405,7 +405,7 @@ impl AnalysisImpl {\n #[derive(Default, Clone, Debug)]\n struct WorldData {\n     crate_graph: CrateGraph,\n-    root: Arc<WritableSourceRoot>,\n+    root: WritableSourceRoot,\n     libs: Vec<Arc<ReadonlySourceRoot>>,\n }\n "}, {"sha": "42833af36da7996affcbb7f5c6679036a46d07f9", "filename": "crates/ra_analysis/src/roots.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/76c51fae77d5dc2d7791132ecc78e444118e48de/crates%2Fra_analysis%2Fsrc%2Froots.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76c51fae77d5dc2d7791132ecc78e444118e48de/crates%2Fra_analysis%2Fsrc%2Froots.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Froots.rs?ref=76c51fae77d5dc2d7791132ecc78e444118e48de", "patch": "@@ -35,10 +35,10 @@ pub(crate) struct WritableSourceRoot {\n \n impl WritableSourceRoot {\n     pub fn apply_changes(\n-        &self,\n+        &mut self,\n         changes: &mut dyn Iterator<Item=(FileId, Option<String>)>,\n         file_resolver: Option<FileResolverImp>,\n-    ) -> WritableSourceRoot {\n+    ) {\n         let db = self.db.write();\n         let mut changed = FxHashSet::default();\n         let mut removed = FxHashSet::default();\n@@ -65,9 +65,6 @@ impl WritableSourceRoot {\n         let resolver = file_resolver.unwrap_or_else(|| file_set.resolver.clone());\n         db.query(db::FileSetQuery)\n             .set((), Arc::new(db::FileSet { files, resolver }));\n-        // TODO: reconcile sasla's API with our needs\n-        // https://github.com/salsa-rs/salsa/issues/12\n-        self.clone()\n     }\n }\n "}]}