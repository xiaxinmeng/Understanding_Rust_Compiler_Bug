{"sha": "3a9fda7c7b0ef888298bffb71018e2a4dc26e877", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOWZkYTdjN2IwZWY4ODgyOThiZmZiNzEwMThlMmE0ZGMyNmU4Nzc=", "commit": {"author": {"name": "Rohan Prinja", "email": "rohan.prinja@chronus.com", "date": "2014-12-04T12:35:49Z"}, "committer": {"name": "Rohan Prinja", "email": "rohan.prinja@chronus.com", "date": "2014-12-04T12:35:49Z"}, "message": "Path has only 2 fields now\n\nSee also: https://github.com/phildawes/racer/pull/72", "tree": {"sha": "7411c8ba8adb150261996e62bd51a45ba1707b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7411c8ba8adb150261996e62bd51a45ba1707b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a9fda7c7b0ef888298bffb71018e2a4dc26e877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9fda7c7b0ef888298bffb71018e2a4dc26e877", "html_url": "https://github.com/rust-lang/rust/commit/3a9fda7c7b0ef888298bffb71018e2a4dc26e877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a9fda7c7b0ef888298bffb71018e2a4dc26e877/comments", "author": null, "committer": null, "parents": [{"sha": "e9c08c4b12b715a2d680fd35d294227e373ed52d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c08c4b12b715a2d680fd35d294227e373ed52d", "html_url": "https://github.com/rust-lang/rust/commit/e9c08c4b12b715a2d680fd35d294227e373ed52d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c3fd333a5b8ef907ff8d3b18975897adcb46bee7", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a9fda7c7b0ef888298bffb71018e2a4dc26e877/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9fda7c7b0ef888298bffb71018e2a4dc26e877/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=3a9fda7c7b0ef888298bffb71018e2a4dc26e877", "patch": "@@ -17,7 +17,7 @@ declare_lint!(CLIPPY_DLIST, Warn,\n /// Matches a type with a provided string, and returns its type parameters if successful\n pub fn match_ty_unwrap<'a>(ty: &'a Ty, segments: &[&str]) -> Option<&'a [P<Ty>]> {\n     match ty.node {\n-        TyPath(Path {segments: ref seg, ..}, _, _) => {\n+        TyPath(Path {segments: ref seg, ..}, _) => {\n             // So ast::Path isn't the full path, just the tokens that were provided.\n             // I could muck around with the maps and find the full path\n             // however the more efficient way is to simply reverse the iterators and zip them\n@@ -81,4 +81,4 @@ impl LintPass for TypePass {\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}]}