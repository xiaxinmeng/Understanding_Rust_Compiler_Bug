{"sha": "65b85a571e627da13a20c88005d191602d2374e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1Yjg1YTU3MWU2MjdkYTEzYTIwYzg4MDA1ZDE5MTYwMmQyMzc0ZTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-31T13:59:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-31T13:59:43Z"}, "message": "Rollup merge of #70555 - Centril:fix-70549, r=petrochenkov\n\nresolve, `try_resolve_as_non_binding`: use `delay_span_bug` due to parser recovery\n\nFixes #70549\n\nr? @petrochenkov", "tree": {"sha": "5c385c4dd8ef9eccb88dc4f147b82b7fd732a169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c385c4dd8ef9eccb88dc4f147b82b7fd732a169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65b85a571e627da13a20c88005d191602d2374e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeg0zPCRBK7hj4Ov3rIwAAdHIIAExYjkfeC0F1eMOG8SgQwelQ\nq852sWw44TYJbdD9BbE1g8d1NjOVJij7xI2o84WDAOTTLA+XfoR7fR07WeXfEKwW\nGUKcHTyJNZhcqEYaVQBQaMAjbVTbBhU8/l1qK7OtDEsgKcC5Kn9pabhVcHUNomHT\nfpkU8YI0EjjeqnqIwYQabyx6Dq1vMxNowT+adBYj38PgHL6YIFg6nyemBunY0hbz\nDAUOwPImyhgpx7gCxFw+70Cce3JrqA7+3zvXpln/lZmWPDwgbuxNDEoFbP2UNXoh\n/3Fu+SzilkagBzvc0J0bbrwgHGMAfd0gmMv6k+pv9k/SiJ4RDI96IzQ4qal8o08=\n=Q0Jy\n-----END PGP SIGNATURE-----\n", "payload": "tree 5c385c4dd8ef9eccb88dc4f147b82b7fd732a169\nparent cbe3266c651a252bfb53156d4ac0df1f8fb0cf9a\nparent 9f86d285378012c5c9e2621ba2b6b403e1d84422\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585663183 +0200\ncommitter GitHub <noreply@github.com> 1585663183 +0200\n\nRollup merge of #70555 - Centril:fix-70549, r=petrochenkov\n\nresolve, `try_resolve_as_non_binding`: use `delay_span_bug` due to parser recovery\n\nFixes #70549\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65b85a571e627da13a20c88005d191602d2374e8", "html_url": "https://github.com/rust-lang/rust/commit/65b85a571e627da13a20c88005d191602d2374e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65b85a571e627da13a20c88005d191602d2374e8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe3266c651a252bfb53156d4ac0df1f8fb0cf9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe3266c651a252bfb53156d4ac0df1f8fb0cf9a", "html_url": "https://github.com/rust-lang/rust/commit/cbe3266c651a252bfb53156d4ac0df1f8fb0cf9a"}, {"sha": "9f86d285378012c5c9e2621ba2b6b403e1d84422", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f86d285378012c5c9e2621ba2b6b403e1d84422", "html_url": "https://github.com/rust-lang/rust/commit/9f86d285378012c5c9e2621ba2b6b403e1d84422"}], "stats": {"total": 91, "additions": 82, "deletions": 9}, "files": [{"sha": "2b90527a825377bada77264b3f5e918aaa83aca0", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/65b85a571e627da13a20c88005d191602d2374e8/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b85a571e627da13a20c88005d191602d2374e8/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=65b85a571e627da13a20c88005d191602d2374e8", "patch": "@@ -1536,20 +1536,18 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         let is_syntactic_ambiguity = !has_sub && bm == BindingMode::ByValue(Mutability::Not);\n \n         match res {\n-            Res::Def(DefKind::Ctor(_, CtorKind::Const), _)\n-            | Res::Def(DefKind::Const, _)\n-            | Res::Def(DefKind::ConstParam, _)\n-                if is_syntactic_ambiguity =>\n-            {\n+            Res::SelfCtor(_) // See #70549.\n+            | Res::Def(\n+                DefKind::Ctor(_, CtorKind::Const) | DefKind::Const | DefKind::ConstParam,\n+                _,\n+            ) if is_syntactic_ambiguity => {\n                 // Disambiguate in favor of a unit struct/variant or constant pattern.\n                 if let Some(binding) = binding {\n                     self.r.record_use(ident, ValueNS, binding, false);\n                 }\n                 Some(res)\n             }\n-            Res::Def(DefKind::Ctor(..), _)\n-            | Res::Def(DefKind::Const, _)\n-            | Res::Def(DefKind::Static, _) => {\n+            Res::Def(DefKind::Ctor(..) | DefKind::Const | DefKind::Static, _) => {\n                 // This is unambiguously a fresh binding, either syntactically\n                 // (e.g., `IDENT @ PAT` or `ref IDENT`) or because `IDENT` resolves\n                 // to something unusable as a pattern (e.g., constructor function),\n@@ -1572,7 +1570,7 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             _ => span_bug!(\n                 ident.span,\n                 \"unexpected resolution for an identifier in pattern: {:?}\",\n-                res\n+                res,\n             ),\n         }\n     }"}, {"sha": "75c5dfb8d18b0c04afa6313e92c507f9e7766784", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65b85a571e627da13a20c88005d191602d2374e8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b85a571e627da13a20c88005d191602d2374e8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=65b85a571e627da13a20c88005d191602d2374e8", "patch": "@@ -10,6 +10,7 @@\n #![feature(bool_to_option)]\n #![feature(crate_visibility_modifier)]\n #![feature(nll)]\n+#![feature(or_patterns)]\n #![recursion_limit = \"256\"]\n \n pub use rustc_hir::def::{Namespace, PerNS};"}, {"sha": "aeccd0d9f76cafa177f4bf316a55e4fc095fc9a4", "filename": "src/test/ui/parser/issue-70549-resolve-after-recovered-self-ctor.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/65b85a571e627da13a20c88005d191602d2374e8/src%2Ftest%2Fui%2Fparser%2Fissue-70549-resolve-after-recovered-self-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b85a571e627da13a20c88005d191602d2374e8/src%2Ftest%2Fui%2Fparser%2Fissue-70549-resolve-after-recovered-self-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-70549-resolve-after-recovered-self-ctor.rs?ref=65b85a571e627da13a20c88005d191602d2374e8", "patch": "@@ -0,0 +1,18 @@\n+struct S {}\n+\n+impl S {\n+    fn foo(&mur Self) {}\n+    //~^ ERROR expected identifier, found keyword `Self`\n+    //~| ERROR expected one of `:`, `@`\n+    //~| ERROR the `Self` constructor can only be used with\n+    fn bar(&'static mur Self) {}\n+    //~^ ERROR unexpected lifetime\n+    //~| ERROR expected identifier, found keyword `Self`\n+    //~| ERROR expected one of `:`, `@`\n+    //~| ERROR the `Self` constructor can only be used with\n+\n+    fn baz(&mur Self @ _) {}\n+    //~^ ERROR expected one of `:`, `@`\n+}\n+\n+fn main() {}"}, {"sha": "421f145403623b70367271b1f10e92524bd48d35", "filename": "src/test/ui/parser/issue-70549-resolve-after-recovered-self-ctor.stderr", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/65b85a571e627da13a20c88005d191602d2374e8/src%2Ftest%2Fui%2Fparser%2Fissue-70549-resolve-after-recovered-self-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65b85a571e627da13a20c88005d191602d2374e8/src%2Ftest%2Fui%2Fparser%2Fissue-70549-resolve-after-recovered-self-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-70549-resolve-after-recovered-self-ctor.stderr?ref=65b85a571e627da13a20c88005d191602d2374e8", "patch": "@@ -0,0 +1,56 @@\n+error: expected identifier, found keyword `Self`\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:4:17\n+   |\n+LL |     fn foo(&mur Self) {}\n+   |                 ^^^^ expected identifier, found keyword\n+\n+error: expected one of `:`, `@`, or `|`, found keyword `Self`\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:4:17\n+   |\n+LL |     fn foo(&mur Self) {}\n+   |            -----^^^^\n+   |            |    |\n+   |            |    expected one of `:`, `@`, or `|`\n+   |            help: declare the type after the parameter binding: `<identifier>: <type>`\n+\n+error: unexpected lifetime `'static` in pattern\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:8:13\n+   |\n+LL |     fn bar(&'static mur Self) {}\n+   |             ^^^^^^^ help: remove the lifetime\n+\n+error: expected identifier, found keyword `Self`\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:8:25\n+   |\n+LL |     fn bar(&'static mur Self) {}\n+   |                         ^^^^ expected identifier, found keyword\n+\n+error: expected one of `:`, `@`, or `|`, found keyword `Self`\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:8:25\n+   |\n+LL |     fn bar(&'static mur Self) {}\n+   |            -------------^^^^\n+   |            |            |\n+   |            |            expected one of `:`, `@`, or `|`\n+   |            help: declare the type after the parameter binding: `<identifier>: <type>`\n+\n+error: expected one of `:`, `@`, or `|`, found keyword `Self`\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:14:17\n+   |\n+LL |     fn baz(&mur Self @ _) {}\n+   |                 ^^^^ expected one of `:`, `@`, or `|`\n+\n+error: the `Self` constructor can only be used with tuple or unit structs\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:4:17\n+   |\n+LL |     fn foo(&mur Self) {}\n+   |                 ^^^^ help: use curly brackets: `Self { /* fields */ }`\n+\n+error: the `Self` constructor can only be used with tuple or unit structs\n+  --> $DIR/issue-70549-resolve-after-recovered-self-ctor.rs:8:25\n+   |\n+LL |     fn bar(&'static mur Self) {}\n+   |                         ^^^^ help: use curly brackets: `Self { /* fields */ }`\n+\n+error: aborting due to 8 previous errors\n+"}]}