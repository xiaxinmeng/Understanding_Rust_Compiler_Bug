{"sha": "4d226e8f17d2b0eb424486b965f95e42a89389b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMjI2ZThmMTdkMmIwZWI0MjQ0ODZiOTY1Zjk1ZTQyYTg5Mzg5Yjk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-13T10:01:39Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-13T10:02:14Z"}, "message": "Hash trap message symbol nameThis saves ~7% of disk space", "tree": {"sha": "380fc74930039f43b6c1b07c839fb4da708471ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/380fc74930039f43b6c1b07c839fb4da708471ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d226e8f17d2b0eb424486b965f95e42a89389b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d226e8f17d2b0eb424486b965f95e42a89389b9", "html_url": "https://github.com/rust-lang/rust/commit/4d226e8f17d2b0eb424486b965f95e42a89389b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d226e8f17d2b0eb424486b965f95e42a89389b9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c02e6c368337bea10a57eb345bd36edbff75f87", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c02e6c368337bea10a57eb345bd36edbff75f87", "html_url": "https://github.com/rust-lang/rust/commit/1c02e6c368337bea10a57eb345bd36edbff75f87"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "5d3064906834ab2d41f6676d9ac77ae92f2cbf8d", "filename": "src/trap.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d226e8f17d2b0eb424486b965f95e42a89389b9/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d226e8f17d2b0eb424486b965f95e42a89389b9/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=4d226e8f17d2b0eb424486b965f95e42a89389b9", "patch": "@@ -1,3 +1,6 @@\n+use std::collections::hash_map::DefaultHasher;\n+use std::hash::{Hash, Hasher};\n+\n use crate::prelude::*;\n \n fn codegen_print(fx: &mut FunctionCx<'_, '_, impl cranelift_module::Backend>, msg: &str) {\n@@ -21,12 +24,15 @@ fn codegen_print(fx: &mut FunctionCx<'_, '_, impl cranelift_module::Backend>, ms\n \n     let symbol_name = fx.tcx.symbol_name(fx.instance);\n     let real_msg = format!(\"trap at {:?} ({}): {}\\0\", fx.instance, symbol_name, msg);\n+    let mut hasher = DefaultHasher::new();\n+    real_msg.hash(&mut hasher);\n+    let msg_hash = hasher.finish();\n     let mut data_ctx = DataContext::new();\n     data_ctx.define(real_msg.as_bytes().to_vec().into_boxed_slice());\n     let msg_id = fx\n         .module\n         .declare_data(\n-            &(symbol_name.name.as_str().to_string() + msg),\n+            &format!(\"__trap_{:08x}\", msg_hash),\n             Linkage::Local,\n             false,\n             false,"}]}