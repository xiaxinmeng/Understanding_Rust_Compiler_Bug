{"sha": "07e2775dff0643f0f8f66f5ecf92ab7ee163bce4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZTI3NzVkZmYwNjQzZjBmOGY2NmY1ZWNmOTJhYjdlZTE2M2JjZTQ=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-06T03:42:46Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-06T05:26:05Z"}, "message": "deque: Remove obsolete methods .each() and .eachi()", "tree": {"sha": "29fd6df0637deb1946cc260e09a9ac0a12cec870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29fd6df0637deb1946cc260e09a9ac0a12cec870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4", "html_url": "https://github.com/rust-lang/rust/commit/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4/comments", "author": null, "committer": null, "parents": [{"sha": "0ff5c17cbbef0aedfa2eb1142cbf7a87abfd1d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff5c17cbbef0aedfa2eb1142cbf7a87abfd1d05", "html_url": "https://github.com/rust-lang/rust/commit/0ff5c17cbbef0aedfa2eb1142cbf7a87abfd1d05"}], "stats": {"total": 31, "additions": 1, "deletions": 30}, "files": [{"sha": "9e19d8746a40ce7587485e282a871a8ce4c82a4a", "filename": "src/libextra/deque.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4/src%2Flibextra%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4/src%2Flibextra%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdeque.rs?ref=07e2775dff0643f0f8f66f5ecf92ab7ee163bce4", "patch": "@@ -77,16 +77,6 @@ impl<T> Deque<T> {\n         get(self.elts, idx)\n     }\n \n-    /// Iterate over the elements in the deque\n-    pub fn each(&self, f: &fn(&T) -> bool) -> bool {\n-        self.eachi(|_i, e| f(e))\n-    }\n-\n-    /// Iterate over the elements in the deque by index\n-    pub fn eachi(&self, f: &fn(uint, &T) -> bool) -> bool {\n-        uint::range(0, self.nelts, |i| f(i, self.get(i as int)))\n-    }\n-\n     /// Remove and return the first element in the deque\n     ///\n     /// Fails if the deque is empty\n@@ -514,25 +504,6 @@ mod tests {\n         test_parameterized::<RecCy>(reccy1, reccy2, reccy3, reccy4);\n     }\n \n-    #[test]\n-    fn test_eachi() {\n-        let mut deq = Deque::new();\n-        deq.add_back(1);\n-        deq.add_back(2);\n-        deq.add_back(3);\n-\n-        for deq.eachi |i, e| {\n-            assert_eq!(*e, i + 1);\n-        }\n-\n-        deq.pop_front();\n-\n-        for deq.eachi |i, e| {\n-            assert_eq!(*e, i + 2);\n-        }\n-\n-    }\n-\n     #[test]\n     fn test_with_capacity() {\n         let mut d = Deque::with_capacity(0);"}, {"sha": "b1383948bf72b221fc1fe305a4b59eaddff84829", "filename": "src/libextra/serialize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4/src%2Flibextra%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07e2775dff0643f0f8f66f5ecf92ab7ee163bce4/src%2Flibextra%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fserialize.rs?ref=07e2775dff0643f0f8f66f5ecf92ab7ee163bce4", "patch": "@@ -682,7 +682,7 @@ impl<\n > Encodable<S> for Deque<T> {\n     fn encode(&self, s: &mut S) {\n         do s.emit_seq(self.len()) |s| {\n-            for self.eachi |i, e| {\n+            for self.iter().enumerate().advance |(i, e)| {\n                 s.emit_seq_elt(i, |s| e.encode(s));\n             }\n         }"}]}