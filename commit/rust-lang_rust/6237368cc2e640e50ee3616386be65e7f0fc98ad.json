{"sha": "6237368cc2e640e50ee3616386be65e7f0fc98ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMzczNjhjYzJlNjQwZTUwZWUzNjE2Mzg2YmU2NWU3ZjBmYzk4YWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-07T01:46:33Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-07T06:40:32Z"}, "message": "plug leak: free shared type descrs recursively, as we ought to", "tree": {"sha": "9446f6db388b9067dd8923f1b62a5cf735ce8893", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9446f6db388b9067dd8923f1b62a5cf735ce8893"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6237368cc2e640e50ee3616386be65e7f0fc98ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6237368cc2e640e50ee3616386be65e7f0fc98ad", "html_url": "https://github.com/rust-lang/rust/commit/6237368cc2e640e50ee3616386be65e7f0fc98ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6237368cc2e640e50ee3616386be65e7f0fc98ad/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1b987d292cc0f4fa412d18b051ce8681256bb61", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b987d292cc0f4fa412d18b051ce8681256bb61", "html_url": "https://github.com/rust-lang/rust/commit/d1b987d292cc0f4fa412d18b051ce8681256bb61"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "080a58199705e28e2b9aad49a206e298b06e344b", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6237368cc2e640e50ee3616386be65e7f0fc98ad", "patch": "@@ -1386,7 +1386,10 @@ fn make_free_glue(bcx: @block_ctxt, v: ValueRef, t: ty::t) {\n       ty::ty_send_type. {\n         // sendable type descriptors are basically unique pointers,\n         // they must be freed.\n-        trans_shared_free(bcx, v)\n+        let ccx = bcx_ccx(bcx);\n+        let v = PointerCast(bcx, v, T_ptr(ccx.tydesc_type));\n+        Call(bcx, ccx.upcalls.free_shared_type_desc, [v]);\n+        bcx\n       }\n       ty::ty_native_fn(_, _) | ty::ty_fn(_) {\n         trans_closure::make_fn_glue(bcx, v, t, free_ty)"}, {"sha": "7cb93c84af972ad2eed406fb3d98526991b9d8a8", "filename": "src/comp/middle/trans_closure.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs?ref=6237368cc2e640e50ee3616386be65e7f0fc98ad", "patch": "@@ -736,6 +736,7 @@ fn make_opaque_cbox_free_glue(\n     }\n \n     let ccx = bcx_ccx(bcx);\n+    let tcx = bcx_tcx(bcx);\n     make_null_test(bcx, cbox) {|bcx|\n         // Load the type descr found in the cbox\n         let lltydescty = T_ptr(ccx.tydesc_type);\n@@ -763,7 +764,7 @@ fn make_opaque_cbox_free_glue(\n             trans_free_if_not_gc(bcx, cbox)\n           }\n           ty::closure_send. {\n-            let bcx = trans_shared_free(bcx, tydesc);\n+            let bcx = free_ty(bcx, tydesc, mk_tydesc_ty(tcx, ck));\n             trans_shared_free(bcx, cbox)\n           }\n         }"}, {"sha": "2b104548f904b9fdec89f94b6f14c19629911044", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=6237368cc2e640e50ee3616386be65e7f0fc98ad", "patch": "@@ -293,7 +293,9 @@ void upcall_s_free_shared_type_desc(type_desc *td)\n \n extern \"C\" CDECL void\n upcall_free_shared_type_desc(type_desc *td) {\n-    UPCALL_SWITCH_STACK(td, upcall_s_free_shared_type_desc);\n+    if (td) {\n+        UPCALL_SWITCH_STACK(td, upcall_s_free_shared_type_desc);\n+    }\n }\n \n /**********************************************************************"}, {"sha": "d87bad85bbde00a5558a06b6f951fa6c632005d9", "filename": "src/test/run-pass/sendfn-deep-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6237368cc2e640e50ee3616386be65e7f0fc98ad/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs?ref=6237368cc2e640e50ee3616386be65e7f0fc98ad", "patch": "@@ -6,7 +6,7 @@ import std::comm::send;\n \n fn main() { test05(); }\n \n-fn mk_counter<copy A>() -> sendfn(A) -> (A,uint) {\n+fn mk_counter<A:copy>() -> sendfn(A) -> (A,uint) {\n     // The only reason that the counter is generic is so that it closes\n     // over both a type descriptor and some data.\n     let v = [mutable 0u];"}]}