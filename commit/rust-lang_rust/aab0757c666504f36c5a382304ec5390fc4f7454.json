{"sha": "aab0757c666504f36c5a382304ec5390fc4f7454", "node_id": "C_kwDOAAsO6NoAKGFhYjA3NTdjNjY2NTA0ZjM2YzVhMzgyMzA0ZWM1MzkwZmM0Zjc0NTQ", "commit": {"author": {"name": "Jamie Cunliffe", "email": "Jamie.Cunliffe@arm.com", "date": "2023-01-23T13:15:53Z"}, "committer": {"name": "Jamie Cunliffe", "email": "Jamie.Cunliffe@arm.com", "date": "2023-05-22T13:27:14Z"}, "message": "Only disable folded features when it makes sense.\n\nSome features that are tied together only make sense to be folded\ntogether when enabling the feature. For example on AArch64 sve and\nneon are tied together, however it doesn't make sense to disable neon\nwhen disabling sve.", "tree": {"sha": "b0440fae8488de45359d4fb775bfe49117f5ff99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0440fae8488de45359d4fb775bfe49117f5ff99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aab0757c666504f36c5a382304ec5390fc4f7454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aab0757c666504f36c5a382304ec5390fc4f7454", "html_url": "https://github.com/rust-lang/rust/commit/aab0757c666504f36c5a382304ec5390fc4f7454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aab0757c666504f36c5a382304ec5390fc4f7454/comments", "author": {"login": "JamieCunliffe", "id": 29557119, "node_id": "MDQ6VXNlcjI5NTU3MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/29557119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JamieCunliffe", "html_url": "https://github.com/JamieCunliffe", "followers_url": "https://api.github.com/users/JamieCunliffe/followers", "following_url": "https://api.github.com/users/JamieCunliffe/following{/other_user}", "gists_url": "https://api.github.com/users/JamieCunliffe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JamieCunliffe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JamieCunliffe/subscriptions", "organizations_url": "https://api.github.com/users/JamieCunliffe/orgs", "repos_url": "https://api.github.com/users/JamieCunliffe/repos", "events_url": "https://api.github.com/users/JamieCunliffe/events{/privacy}", "received_events_url": "https://api.github.com/users/JamieCunliffe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JamieCunliffe", "id": 29557119, "node_id": "MDQ6VXNlcjI5NTU3MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/29557119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JamieCunliffe", "html_url": "https://github.com/JamieCunliffe", "followers_url": "https://api.github.com/users/JamieCunliffe/followers", "following_url": "https://api.github.com/users/JamieCunliffe/following{/other_user}", "gists_url": "https://api.github.com/users/JamieCunliffe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JamieCunliffe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JamieCunliffe/subscriptions", "organizations_url": "https://api.github.com/users/JamieCunliffe/orgs", "repos_url": "https://api.github.com/users/JamieCunliffe/repos", "events_url": "https://api.github.com/users/JamieCunliffe/events{/privacy}", "received_events_url": "https://api.github.com/users/JamieCunliffe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cca436e300db5e6429aa8f041f4dbbcfdecf1b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cca436e300db5e6429aa8f041f4dbbcfdecf1b1", "html_url": "https://github.com/rust-lang/rust/commit/4cca436e300db5e6429aa8f041f4dbbcfdecf1b1"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "a75c15ee4be90adc87e2a920edeaa9f25ea44a5e", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/aab0757c666504f36c5a382304ec5390fc4f7454/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab0757c666504f36c5a382304ec5390fc4f7454/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=aab0757c666504f36c5a382304ec5390fc4f7454", "patch": "@@ -147,6 +147,9 @@ pub fn time_trace_profiler_finish(file_name: &Path) {\n // Though note that Rust can also be build with an external precompiled version of LLVM\n // which might lead to failures if the oldest tested / supported LLVM version\n // doesn't yet support the relevant intrinsics\n+//\n+// Note: The first feature in the list that is returned is the mapping to the feature that is\n+// provided from the `s` parameter.\n pub fn to_llvm_features<'a>(sess: &Session, s: &'a str) -> SmallVec<[&'a str; 2]> {\n     let arch = if sess.target.arch == \"x86_64\" { \"x86\" } else { &*sess.target.arch };\n     match (arch, s) {\n@@ -182,6 +185,23 @@ pub fn to_llvm_features<'a>(sess: &Session, s: &'a str) -> SmallVec<[&'a str; 2]\n     }\n }\n \n+pub enum TargetFeatureFoldStrength {\n+    // The feature is only tied when enabling the feature, disabling\n+    // this feature shouldn't disable the tied feature.\n+    EnableOnly,\n+    // The feature is tied for both enabling and disabling this feature.\n+    Both,\n+}\n+\n+// Determines how the features are folded together, some features are\n+// linked a lot more than some others.\n+pub fn feature_fold_strength<'a>(feats: &SmallVec<[&'a str; 2]>) -> TargetFeatureFoldStrength {\n+    match (feats.get(0), feats.get(1)) {\n+        (Some(&\"neon\"), Some(&\"fp-armv8\")) => TargetFeatureFoldStrength::Both,\n+        _ => TargetFeatureFoldStrength::EnableOnly,\n+    }\n+}\n+\n /// Given a map from target_features to whether they are enabled or disabled,\n /// ensure only valid combinations are allowed.\n pub fn check_tied_features(\n@@ -471,11 +491,17 @@ pub(crate) fn global_llvm_features(sess: &Session, diagnostics: bool) -> Vec<Str\n             // passing requests down to LLVM. This means that all in-language\n             // features also work on the command line instead of having two\n             // different names when the LLVM name and the Rust name differ.\n-            Some(\n-                to_llvm_features(sess, feature)\n-                    .into_iter()\n-                    .map(move |f| format!(\"{}{}\", enable_disable, f)),\n-            )\n+            let llvm_features = to_llvm_features(sess, feature);\n+            Some(to_llvm_features(sess, feature).into_iter().enumerate().filter_map(\n+                move |(idx, f)| match (enable_disable, feature_fold_strength(&llvm_features)) {\n+                    ('-' | '+', TargetFeatureFoldStrength::Both)\n+                    | ('+', TargetFeatureFoldStrength::EnableOnly) => {\n+                        Some(format!(\"{}{}\", enable_disable, f))\n+                    }\n+                    _ if idx == 0 => Some(format!(\"{}{}\", enable_disable, f)),\n+                    _ => None,\n+                },\n+            ))\n         })\n         .flatten();\n     features.extend(feats);"}, {"sha": "36fd717e914e07e99e8630f145ecb3ccaaf2e0a9", "filename": "tests/codegen/tied-features-strength.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/aab0757c666504f36c5a382304ec5390fc4f7454/tests%2Fcodegen%2Ftied-features-strength.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab0757c666504f36c5a382304ec5390fc4f7454/tests%2Fcodegen%2Ftied-features-strength.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ftied-features-strength.rs?ref=aab0757c666504f36c5a382304ec5390fc4f7454", "patch": "@@ -0,0 +1,25 @@\n+// ignore-tidy-linelength\n+// revisions: ENABLE_SVE DISABLE_SVE DISABLE_NEON ENABLE_NEON\n+// compile-flags: --crate-type=rlib --target=aarch64-unknown-linux-gnu\n+// needs-llvm-components: aarch64\n+\n+// [ENABLE_SVE] compile-flags: -C target-feature=+sve\n+// ENABLE_SVE: attributes #0 = { {{.*}} \"target-features\"=\"+outline-atomics,+sve,+neon,+v8a\" }\n+\n+// [DISABLE_SVE] compile-flags: -C target-feature=-sve\n+// DISABLE_SVE: attributes #0 = { {{.*}} \"target-features\"=\"+outline-atomics,-sve,+v8a\" }\n+\n+// [DISABLE_NEON] compile-flags: -C target-feature=-neon\n+// DISABLE_NEON: attributes #0 = { {{.*}} \"target-features\"=\"+outline-atomics,-neon,-fp-armv8,+v8a\" }\n+\n+// [ENABLE_NEON] compile-flags: -C target-feature=+neon\n+// ENABLE_NEON: attributes #0 = { {{.*}} \"target-features\"=\"+outline-atomics,+neon,+fp-armv8,+v8a\" }\n+\n+\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+pub fn test() {}"}]}