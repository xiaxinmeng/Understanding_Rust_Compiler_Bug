{"sha": "a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNDJiZWFmMDEzYTAxNmE0OGViOWYxOTNiNTVlMGNiY2I4MGI2YTk=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-23T11:24:24Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-23T11:24:24Z"}, "message": "Implement const block inference", "tree": {"sha": "6445b1e3de954913766b0b53aad15ebdd100a587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6445b1e3de954913766b0b53aad15ebdd100a587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "html_url": "https://github.com/rust-lang/rust/commit/a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a780c0ab3869d92fb56ae3b2ddc7636fb169314", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a780c0ab3869d92fb56ae3b2ddc7636fb169314", "html_url": "https://github.com/rust-lang/rust/commit/0a780c0ab3869d92fb56ae3b2ddc7636fb169314"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "1b98504bb36b7e6c0945277e5bf5a8c9a1d2e70a", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "patch": "@@ -246,6 +246,10 @@ impl ExprCollector<'_> {\n                     let body = self.collect_block_opt(e.block_expr());\n                     self.alloc_expr(Expr::Async { body }, syntax_ptr)\n                 }\n+                ast::Effect::Const(_) => {\n+                    let body = self.collect_block_opt(e.block_expr());\n+                    self.alloc_expr(Expr::Const { body }, syntax_ptr)\n+                }\n             },\n             ast::Expr::BlockExpr(e) => self.collect_block(e),\n             ast::Expr::LoopExpr(e) => {"}, {"sha": "3bba30397ee7714c75bc0af70b3d8de9fa5da902", "filename": "crates/hir_def/src/expr.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fexpr.rs?ref=a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "patch": "@@ -114,6 +114,9 @@ pub enum Expr {\n     Async {\n         body: ExprId,\n     },\n+    Const {\n+        body: ExprId,\n+    },\n     Cast {\n         expr: ExprId,\n         type_ref: TypeRef,\n@@ -253,7 +256,10 @@ impl Expr {\n                     f(*expr);\n                 }\n             }\n-            Expr::TryBlock { body } | Expr::Unsafe { body } | Expr::Async { body } => f(*body),\n+            Expr::TryBlock { body }\n+            | Expr::Unsafe { body }\n+            | Expr::Async { body }\n+            | Expr::Const { body } => f(*body),\n             Expr::Loop { body, .. } => f(*body),\n             Expr::While { condition, body, .. } => {\n                 f(*condition);"}, {"sha": "744569e6ef260ae2b1bae9e3dea5819609eb2474", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "patch": "@@ -155,7 +155,7 @@ impl<'a> InferenceContext<'a> {\n                 }\n                 None => self.infer_block(statements, *tail, expected),\n             },\n-            Expr::Unsafe { body } => self.infer_expr(*body, expected),\n+            Expr::Unsafe { body } | Expr::Const { body } => self.infer_expr(*body, expected),\n             Expr::TryBlock { body } => {\n                 let _inner = self.infer_expr(*body, expected);\n                 // FIXME should be std::result::Result<{inner}, _>"}, {"sha": "a61282d5a744222e63a27e374768d50490f0d69a", "filename": "crates/hir_ty/src/tests/simple.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "patch": "@@ -1894,6 +1894,7 @@ fn effects_smoke_test() {\n             let x = unsafe { 92 };\n             let y = async { async { () }.await };\n             let z = try { () };\n+            let w = const { 92 };\n             let t = 'a: { 92 };\n         }\n \n@@ -1905,7 +1906,7 @@ fn effects_smoke_test() {\n         }\n         \"#,\n         expect![[r#\"\n-            16..136 '{     ...2 }; }': ()\n+            16..162 '{     ...2 }; }': ()\n             26..27 'x': i32\n             30..43 'unsafe { 92 }': i32\n             37..43 '{ 92 }': i32\n@@ -1921,9 +1922,13 @@ fn effects_smoke_test() {\n             99..109 'try { () }': {unknown}\n             103..109 '{ () }': ()\n             105..107 '()': ()\n-            119..120 't': i32\n-            127..133 '{ 92 }': i32\n-            129..131 '92': i32\n+            119..120 'w': i32\n+            123..135 'const { 92 }': i32\n+            129..135 '{ 92 }': i32\n+            131..133 '92': i32\n+            145..146 't': i32\n+            153..159 '{ 92 }': i32\n+            155..157 '92': i32\n         \"#]],\n     )\n }"}, {"sha": "636ce166d74a363c7468014dcf755921f136c1a7", "filename": "crates/syntax/src/ast/expr_ext.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a142beaf013a016a48eb9f193b55e0cbcb80b6a9/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=a142beaf013a016a48eb9f193b55e0cbcb80b6a9", "patch": "@@ -358,6 +358,7 @@ pub enum Effect {\n     Async(SyntaxToken),\n     Unsafe(SyntaxToken),\n     Try(SyntaxToken),\n+    Const(SyntaxToken),\n     // Very much not an effect, but we stuff it into this node anyway\n     Label(ast::Label),\n }\n@@ -373,6 +374,9 @@ impl ast::EffectExpr {\n         if let Some(token) = self.try_token() {\n             return Effect::Try(token);\n         }\n+        if let Some(token) = self.const_token() {\n+            return Effect::Const(token);\n+        }\n         if let Some(label) = self.label() {\n             return Effect::Label(label);\n         }"}]}