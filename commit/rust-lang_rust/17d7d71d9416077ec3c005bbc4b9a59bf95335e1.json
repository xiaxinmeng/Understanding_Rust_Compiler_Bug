{"sha": "17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "node_id": "C_kwDOAAsO6NoAKDE3ZDdkNzFkOTQxNjA3N2VjM2MwMDViYmM0YjlhNTliZjk1MzM1ZTE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-12-20T09:48:02Z"}, "committer": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-12-20T09:48:02Z"}, "message": "Add regression test for #80816\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>", "tree": {"sha": "afd2474be1b95be13b04e3fabcce12eae36cf308", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afd2474be1b95be13b04e3fabcce12eae36cf308"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgHhkVL0/9C9iZr1PMss4Lz7KmAH\nPO6dU/JqcK/z29OHQAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQMmQdZmRtc+rqcImYqTJ3Ieo/qGsaUBvTF9U8X/7bxb7dd8qcjrtItlTle/VSaH1gT\nkepeeVUY7Atr9fZ2IiwQE=\n-----END SSH SIGNATURE-----", "payload": "tree afd2474be1b95be13b04e3fabcce12eae36cf308\nparent 7f42e58effa3871dda6a41e250dea60cf88868ca\nauthor Yuki Okushi <jtitor@2k36.org> 1671529682 +0900\ncommitter Yuki Okushi <jtitor@2k36.org> 1671529682 +0900\n\nAdd regression test for #80816\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "html_url": "https://github.com/rust-lang/rust/commit/17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17d7d71d9416077ec3c005bbc4b9a59bf95335e1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f42e58effa3871dda6a41e250dea60cf88868ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f42e58effa3871dda6a41e250dea60cf88868ca", "html_url": "https://github.com/rust-lang/rust/commit/7f42e58effa3871dda6a41e250dea60cf88868ca"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "ead320a4fe42c66d688158928eb0ab46597bc7be", "filename": "src/test/ui/inference/issue-80816.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/17d7d71d9416077ec3c005bbc4b9a59bf95335e1/src%2Ftest%2Fui%2Finference%2Fissue-80816.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d7d71d9416077ec3c005bbc4b9a59bf95335e1/src%2Ftest%2Fui%2Finference%2Fissue-80816.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-80816.rs?ref=17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "patch": "@@ -0,0 +1,54 @@\n+#![allow(unreachable_code)]\n+\n+use std::marker::PhantomData;\n+use std::ops::Deref;\n+use std::sync::Arc;\n+\n+pub struct Guard<T> {\n+    _phantom: PhantomData<T>,\n+}\n+impl<T> Deref for Guard<T> {\n+    type Target = T;\n+    fn deref(&self) -> &T {\n+        unimplemented!()\n+    }\n+}\n+\n+pub struct DirectDeref<T>(T);\n+impl<T> Deref for DirectDeref<Arc<T>> {\n+    type Target = T;\n+    fn deref(&self) -> &T {\n+        unimplemented!()\n+    }\n+}\n+\n+pub trait Access<T> {\n+    type Guard: Deref<Target = T>;\n+    fn load(&self) -> Self::Guard {\n+        unimplemented!()\n+    }\n+}\n+impl<T, A: Access<T>, P: Deref<Target = A>> Access<T> for P {\n+    //~^ NOTE: required for `Arc<ArcSwapAny<Arc<usize>>>` to implement `Access<_>`\n+    type Guard = A::Guard;\n+}\n+impl<T> Access<T> for ArcSwapAny<T> {\n+    //~^ NOTE: multiple `impl`s satisfying `ArcSwapAny<Arc<usize>>: Access<_>` found\n+    type Guard = Guard<T>;\n+}\n+impl<T> Access<T> for ArcSwapAny<Arc<T>> {\n+    type Guard = DirectDeref<Arc<T>>;\n+}\n+\n+pub struct ArcSwapAny<T> {\n+    _phantom_arc: PhantomData<T>,\n+}\n+\n+pub fn foo() {\n+    let s: Arc<ArcSwapAny<Arc<usize>>> = unimplemented!();\n+    let guard: Guard<Arc<usize>> = s.load();\n+    //~^ ERROR: type annotations needed\n+    //~| HELP: try using a fully qualified path to specify the expected types\n+}\n+\n+fn main() {}"}, {"sha": "bd833340df4ce7fbc5eddba88592c15bc603b7a5", "filename": "src/test/ui/inference/issue-80816.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/17d7d71d9416077ec3c005bbc4b9a59bf95335e1/src%2Ftest%2Fui%2Finference%2Fissue-80816.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17d7d71d9416077ec3c005bbc4b9a59bf95335e1/src%2Ftest%2Fui%2Finference%2Fissue-80816.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-80816.stderr?ref=17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "patch": "@@ -0,0 +1,27 @@\n+error[E0283]: type annotations needed\n+  --> $DIR/issue-80816.rs:49:38\n+   |\n+LL |     let guard: Guard<Arc<usize>> = s.load();\n+   |                                      ^^^^\n+   |\n+note: multiple `impl`s satisfying `ArcSwapAny<Arc<usize>>: Access<_>` found\n+  --> $DIR/issue-80816.rs:35:1\n+   |\n+LL | impl<T> Access<T> for ArcSwapAny<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL | impl<T> Access<T> for ArcSwapAny<Arc<T>> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: required for `Arc<ArcSwapAny<Arc<usize>>>` to implement `Access<_>`\n+  --> $DIR/issue-80816.rs:31:45\n+   |\n+LL | impl<T, A: Access<T>, P: Deref<Target = A>> Access<T> for P {\n+   |                                             ^^^^^^^^^     ^\n+help: try using a fully qualified path to specify the expected types\n+   |\n+LL |     let guard: Guard<Arc<usize>> = <Arc<ArcSwapAny<Arc<usize>>> as Access<T>>::load(&s);\n+   |                                    ++++++++++++++++++++++++++++++++++++++++++++++++++ ~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0283`."}]}