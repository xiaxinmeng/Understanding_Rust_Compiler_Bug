{"sha": "f71b37bc28326e272a37b938e835d4f99113eec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MWIzN2JjMjgzMjZlMjcyYTM3YjkzOGU4MzVkNGY5OTExM2VlYzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-27T01:23:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-27T01:23:24Z"}, "message": "Auto merge of #44802 - sfackler:vecdeque-oob, r=Gankro\n\nFix capacity comparison in reserve\n\nYou can otherwise end up in a situation where you don't actually resize\nbut still call into handle_cap_increase which then corrupts head/tail.\n\nCloses #44800\n\nNot totally sure the right way to write a test for this - there are some debug asserts the old bad behavior will hit but we don't build the stdlib with debug assertions by default.\n\nr? @Gankro", "tree": {"sha": "76f1c334ca4582001db86999c23fce03ba70a04f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76f1c334ca4582001db86999c23fce03ba70a04f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f71b37bc28326e272a37b938e835d4f99113eec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f71b37bc28326e272a37b938e835d4f99113eec2", "html_url": "https://github.com/rust-lang/rust/commit/f71b37bc28326e272a37b938e835d4f99113eec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f71b37bc28326e272a37b938e835d4f99113eec2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4da74424729fd27e007dbcf6858201515f3e971", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4da74424729fd27e007dbcf6858201515f3e971", "html_url": "https://github.com/rust-lang/rust/commit/d4da74424729fd27e007dbcf6858201515f3e971"}, {"sha": "81bac74c2ddc6c39f3628a36966f4a56a1282d02", "url": "https://api.github.com/repos/rust-lang/rust/commits/81bac74c2ddc6c39f3628a36966f4a56a1282d02", "html_url": "https://github.com/rust-lang/rust/commit/81bac74c2ddc6c39f3628a36966f4a56a1282d02"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "6d64e9e303f76ca74b1bd9417398b7f33446f7f0", "filename": "src/liballoc/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f71b37bc28326e272a37b938e835d4f99113eec2/src%2Fliballoc%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f71b37bc28326e272a37b938e835d4f99113eec2/src%2Fliballoc%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec_deque.rs?ref=f71b37bc28326e272a37b938e835d4f99113eec2", "patch": "@@ -558,7 +558,7 @@ impl<T> VecDeque<T> {\n             .and_then(|needed_cap| needed_cap.checked_next_power_of_two())\n             .expect(\"capacity overflow\");\n \n-        if new_cap > self.capacity() {\n+        if new_cap > old_cap {\n             self.buf.reserve_exact(used_cap, new_cap - used_cap);\n             unsafe {\n                 self.handle_cap_increase(old_cap);"}, {"sha": "cfde6f32f666f39a103d8041fb941a823a6b53aa", "filename": "src/test/run-pass-valgrind/issue-44800.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f71b37bc28326e272a37b938e835d4f99113eec2/src%2Ftest%2Frun-pass-valgrind%2Fissue-44800.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f71b37bc28326e272a37b938e835d4f99113eec2/src%2Ftest%2Frun-pass-valgrind%2Fissue-44800.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fissue-44800.rs?ref=f71b37bc28326e272a37b938e835d4f99113eec2", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(global_allocator, alloc_system, allocator_api)]\n+extern crate alloc_system;\n+\n+use std::collections::VecDeque;\n+use alloc_system::System;\n+\n+#[global_allocator]\n+static ALLOCATOR: System = System;\n+\n+fn main() {\n+    let mut deque = VecDeque::with_capacity(32);\n+    deque.push_front(0);\n+    deque.reserve(31);\n+    deque.push_back(0);\n+}"}]}