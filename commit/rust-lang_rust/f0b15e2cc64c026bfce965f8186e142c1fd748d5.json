{"sha": "f0b15e2cc64c026bfce965f8186e142c1fd748d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYjE1ZTJjYzY0YzAyNmJmY2U5NjVmODE4NmUxNDJjMWZkNzQ4ZDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-06T10:46:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-06T10:46:06Z"}, "message": "Merge #10157\n\n10157: Add section on configuring compilation errors when using `rust-project.json` r=matklad a=dozzman\n\nWhen using `rust-project.json` to specify the project workspace, flychecks are disabled. It is not mentioned that they can be re-enabled by specifying a custom checking command using the `checkOnSave.overrideCommand` configuration. This additional section makes it clear that using `rust-project.json` disables flychecks and how to enable them either using `cargo check` (as an example) or (more likely) a custom command which emits json error messages.\r\n\r\nFurther information can be found at this forum thread:\r\n\r\nhttps://users.rust-lang.org/t/rust-analyzer-doesnt-show-cargo-check-compilation-errors-warnings-when-using-rust-project-json/64412\n\nCo-authored-by: Dorian Peake <dozzman@hotmail.co.uk>", "tree": {"sha": "7a79766769bcc3d0acf4a4fce92ef92526e2d14e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a79766769bcc3d0acf4a4fce92ef92526e2d14e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0b15e2cc64c026bfce965f8186e142c1fd748d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhNfFuCRBK7hj4Ov3rIwAALnEIAHj1uQeb5+8tvks18ao2xpS0\nHIFFbFul5xA+/NHgQgqPIP38aMzLIGY6TKFNQ6rXFiE0RUtYog5DSklYyP8QnVKF\nI5ZBjtpEbKGXWeYeqQqKJMQTZwqseL2n+SDlOfP0A5Cf02NJyb99rJnD9M7WXyW1\nGnQzF2z/JqviTSb13hIUAtSmNQHXDQtWx7/duNCFLyNdfA3FwSekxbUjoLIGlPjA\n3DP/3ybSMzLWbM4Ebt55eilYuViNCBO1Ya3fBQttLaT8bOT5Kh2YVkf8DmLGk3H5\nU0JNG9S6KYx71zND7lYL8JSRit2dpQHHD7MpU2G8oczSCKssSr57VmLD2Zs5pQ8=\n=CQoH\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a79766769bcc3d0acf4a4fce92ef92526e2d14e\nparent 0bc8e2acb85594e3ad8d1b639f452bb58ee2e31f\nparent a2bc57c28f02b219c806501d6a847dfcfccd9560\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1630925166 +0000\ncommitter GitHub <noreply@github.com> 1630925166 +0000\n\nMerge #10157\n\n10157: Add section on configuring compilation errors when using `rust-project.json` r=matklad a=dozzman\n\nWhen using `rust-project.json` to specify the project workspace, flychecks are disabled. It is not mentioned that they can be re-enabled by specifying a custom checking command using the `checkOnSave.overrideCommand` configuration. This additional section makes it clear that using `rust-project.json` disables flychecks and how to enable them either using `cargo check` (as an example) or (more likely) a custom command which emits json error messages.\r\n\r\nFurther information can be found at this forum thread:\r\n\r\nhttps://users.rust-lang.org/t/rust-analyzer-doesnt-show-cargo-check-compilation-errors-warnings-when-using-rust-project-json/64412\n\nCo-authored-by: Dorian Peake <dozzman@hotmail.co.uk>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b15e2cc64c026bfce965f8186e142c1fd748d5", "html_url": "https://github.com/rust-lang/rust/commit/f0b15e2cc64c026bfce965f8186e142c1fd748d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0b15e2cc64c026bfce965f8186e142c1fd748d5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc8e2acb85594e3ad8d1b639f452bb58ee2e31f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc8e2acb85594e3ad8d1b639f452bb58ee2e31f", "html_url": "https://github.com/rust-lang/rust/commit/0bc8e2acb85594e3ad8d1b639f452bb58ee2e31f"}, {"sha": "a2bc57c28f02b219c806501d6a847dfcfccd9560", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2bc57c28f02b219c806501d6a847dfcfccd9560", "html_url": "https://github.com/rust-lang/rust/commit/a2bc57c28f02b219c806501d6a847dfcfccd9560"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "ee42702660865e17b5c2b192d2b475144fa4a7dd", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f0b15e2cc64c026bfce965f8186e142c1fd748d5/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/f0b15e2cc64c026bfce965f8186e142c1fd748d5/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=f0b15e2cc64c026bfce965f8186e142c1fd748d5", "patch": "@@ -616,6 +616,15 @@ See https://github.com/rust-analyzer/rust-project.json-example for a small examp\n \n You can set `RA_LOG` environmental variable to `rust_analyzer=info` to inspect how rust-analyzer handles config and project loading.\n \n+Note that calls to `cargo check` are disabled when using `rust-project.json` by default, so compilation errors and warnings will no longer be sent to your LSP client. To enable these compilation errors you will need to specify explicitly what command rust-analyzer should run to perform the checks using the `checkOnSave.overrideCommand` configuration. As an example, the following configuration explicitly sets `cargo check` as the `checkOnSave` command.\n+\n+[source,json]\n+----\n+{ \"rust-analyzer.checkOnSave.overrideCommand\": [\"cargo\", \"check\", \"--message-format=json\"] }\n+----\n+\n+The `checkOnSave.overrideCommand` requires the command specified to output json error messages for rust-analyzer to consume. The `--message-format=json` flag does this for `cargo check` so whichever command you use must also output errors in this format. See the <<Configuration>> section for more information. \n+\n == Security\n \n At the moment, rust-analyzer assumes that all code is trusted."}]}