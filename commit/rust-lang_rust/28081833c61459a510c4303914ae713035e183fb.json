{"sha": "28081833c61459a510c4303914ae713035e183fb", "node_id": "C_kwDOAAsO6NoAKDI4MDgxODMzYzYxNDU5YTUxMGM0MzAzOTE0YWU3MTMwMzVlMTgzZmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-17T19:21:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-17T19:21:27Z"}, "message": "Rollup merge of #106963 - compiler-errors:scope-expr-dupe, r=michaelwoerister\n\nUse `scope_expr_id` from `ProbeCtxt`\n\nWe already store it in the `ProbeCtxt`, so just retrieve it from there.", "tree": {"sha": "174c4f337e49b1e4090903ea0efe2de12a346dfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/174c4f337e49b1e4090903ea0efe2de12a346dfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28081833c61459a510c4303914ae713035e183fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjxvU3CRBK7hj4Ov3rIwAAaiwIAJC6pDxBK6tQNpHCsUVXJlz+\nKwAuHtxXT5EaHdDoJz5/ypr/Wpvv2D2UUyFONcPi+GDUvFLvGWs8jw+m0lra0RyP\nwj+3rUNRm/XXZgbhOlUviFp/vDWQYBztXLEoIsLlm4MDIHQ/QKpLXafwITDioPCB\nhYqM8zAsJwV7XEluGh1MWDk/m/eimBTb/g7SV+AhIxLKYhnqIfn5dXw4eVX7Bh3I\n+oRMgQlj/Ua3C8rYWMWFexGiqFCJ1QYKFKfy6hPg/YA44/5LkRBWwDFOh1VAL1dR\n+MBdwEZ2ZYOhCPB2e8JjqlSRDGL8B+fJ01Huif/+eOi38gaUfxNBLscvINLVspk=\n=eL9c\n-----END PGP SIGNATURE-----\n", "payload": "tree 174c4f337e49b1e4090903ea0efe2de12a346dfe\nparent 0ed254980274c3294c775e6c70ec28a76c902665\nparent e8ebd43eeb4ff25bec7859589eba36afa26c1ed0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1673983287 +0100\ncommitter GitHub <noreply@github.com> 1673983287 +0100\n\nRollup merge of #106963 - compiler-errors:scope-expr-dupe, r=michaelwoerister\n\nUse `scope_expr_id` from `ProbeCtxt`\n\nWe already store it in the `ProbeCtxt`, so just retrieve it from there.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28081833c61459a510c4303914ae713035e183fb", "html_url": "https://github.com/rust-lang/rust/commit/28081833c61459a510c4303914ae713035e183fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28081833c61459a510c4303914ae713035e183fb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed254980274c3294c775e6c70ec28a76c902665", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ed254980274c3294c775e6c70ec28a76c902665", "html_url": "https://github.com/rust-lang/rust/commit/0ed254980274c3294c775e6c70ec28a76c902665"}, {"sha": "e8ebd43eeb4ff25bec7859589eba36afa26c1ed0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ebd43eeb4ff25bec7859589eba36afa26c1ed0", "html_url": "https://github.com/rust-lang/rust/commit/e8ebd43eeb4ff25bec7859589eba36afa26c1ed0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a2481431363ddb55088a46b1604b265c3d089686", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28081833c61459a510c4303914ae713035e183fb/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28081833c61459a510c4303914ae713035e183fb/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=28081833c61459a510c4303914ae713035e183fb", "patch": "@@ -486,7 +486,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             probe_cx.assemble_inherent_candidates();\n             match scope {\n                 ProbeScope::TraitsInScope => {\n-                    probe_cx.assemble_extension_candidates_for_traits_in_scope(scope_expr_id)\n+                    probe_cx.assemble_extension_candidates_for_traits_in_scope()\n                 }\n                 ProbeScope::AllTraits => probe_cx.assemble_extension_candidates_for_all_traits(),\n             };\n@@ -889,9 +889,9 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         }\n     }\n \n-    fn assemble_extension_candidates_for_traits_in_scope(&mut self, expr_hir_id: hir::HirId) {\n+    fn assemble_extension_candidates_for_traits_in_scope(&mut self) {\n         let mut duplicates = FxHashSet::default();\n-        let opt_applicable_traits = self.tcx.in_scope_traits(expr_hir_id);\n+        let opt_applicable_traits = self.tcx.in_scope_traits(self.scope_expr_id);\n         if let Some(applicable_traits) = opt_applicable_traits {\n             for trait_candidate in applicable_traits.iter() {\n                 let trait_did = trait_candidate.def_id;"}]}