{"sha": "8235b6f8c37ca531279c5da5663120ea4ec8e0b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMzViNmY4YzM3Y2E1MzEyNzljNWRhNTY2MzEyMGVhNGVjOGUwYjM=", "commit": {"author": {"name": "Jakub Adam Wieczorek", "email": "jakub.adam.wieczorek@gmail.com", "date": "2019-08-02T20:57:29Z"}, "committer": {"name": "Jakub Adam Wieczorek", "email": "jakub.adam.wieczorek@gmail.com", "date": "2019-08-02T21:56:34Z"}, "message": "dead_code: Properly inspect fields in struct patterns with type relative paths", "tree": {"sha": "59465172078ed57c0d0545b6f85d688067c30f5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59465172078ed57c0d0545b6f85d688067c30f5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8235b6f8c37ca531279c5da5663120ea4ec8e0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8235b6f8c37ca531279c5da5663120ea4ec8e0b3", "html_url": "https://github.com/rust-lang/rust/commit/8235b6f8c37ca531279c5da5663120ea4ec8e0b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8235b6f8c37ca531279c5da5663120ea4ec8e0b3/comments", "author": {"login": "jakubadamw", "id": 14150873, "node_id": "MDQ6VXNlcjE0MTUwODcz", "avatar_url": "https://avatars.githubusercontent.com/u/14150873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubadamw", "html_url": "https://github.com/jakubadamw", "followers_url": "https://api.github.com/users/jakubadamw/followers", "following_url": "https://api.github.com/users/jakubadamw/following{/other_user}", "gists_url": "https://api.github.com/users/jakubadamw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubadamw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubadamw/subscriptions", "organizations_url": "https://api.github.com/users/jakubadamw/orgs", "repos_url": "https://api.github.com/users/jakubadamw/repos", "events_url": "https://api.github.com/users/jakubadamw/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubadamw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubadamw", "id": 14150873, "node_id": "MDQ6VXNlcjE0MTUwODcz", "avatar_url": "https://avatars.githubusercontent.com/u/14150873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubadamw", "html_url": "https://github.com/jakubadamw", "followers_url": "https://api.github.com/users/jakubadamw/followers", "following_url": "https://api.github.com/users/jakubadamw/following{/other_user}", "gists_url": "https://api.github.com/users/jakubadamw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubadamw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubadamw/subscriptions", "organizations_url": "https://api.github.com/users/jakubadamw/orgs", "repos_url": "https://api.github.com/users/jakubadamw/repos", "events_url": "https://api.github.com/users/jakubadamw/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubadamw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf048cc115860cc110865f460f3f2b9b4308ad92", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf048cc115860cc110865f460f3f2b9b4308ad92", "html_url": "https://github.com/rust-lang/rust/commit/cf048cc115860cc110865f460f3f2b9b4308ad92"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "b58c46a4e13542e15ab521df7692a560713c1293", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8235b6f8c37ca531279c5da5663120ea4ec8e0b3/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8235b6f8c37ca531279c5da5663120ea4ec8e0b3/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=8235b6f8c37ca531279c5da5663120ea4ec8e0b3", "patch": "@@ -269,8 +269,9 @@ impl<'a, 'tcx> Visitor<'tcx> for MarkSymbolVisitor<'a, 'tcx> {\n \n     fn visit_pat(&mut self, pat: &'tcx hir::Pat) {\n         match pat.node {\n-            PatKind::Struct(hir::QPath::Resolved(_, ref path), ref fields, _) => {\n-                self.handle_field_pattern_match(pat, path.res, fields);\n+            PatKind::Struct(ref path, ref fields, _) => {\n+                let res = self.tables.qpath_res(path, pat.hir_id);\n+                self.handle_field_pattern_match(pat, res, fields);\n             }\n             PatKind::Path(ref qpath @ hir::QPath::TypeRelative(..)) => {\n                 let res = self.tables.qpath_res(qpath, pat.hir_id);"}, {"sha": "66fb8dd0deaf425239ae33c23b00898586ac883e", "filename": "src/test/ui/type-alias-enum-variants/issue-63151-dead-code-lint-fields-in-patterns.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8235b6f8c37ca531279c5da5663120ea4ec8e0b3/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fissue-63151-dead-code-lint-fields-in-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8235b6f8c37ca531279c5da5663120ea4ec8e0b3/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fissue-63151-dead-code-lint-fields-in-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fissue-63151-dead-code-lint-fields-in-patterns.rs?ref=8235b6f8c37ca531279c5da5663120ea4ec8e0b3", "patch": "@@ -0,0 +1,26 @@\n+// check-pass\n+\n+// Regression test for the issue #63151:\n+// Spurious unused field warning when matching variants under a `Self` scope\n+//\n+// This test checks that the `dead_code` lint properly inspects fields\n+// in struct patterns that use a type relative path.\n+\n+#![deny(dead_code)]\n+\n+enum Enum {\n+    Variant { field: usize }\n+}\n+\n+impl Enum {\n+    fn read_field(self) -> usize {\n+        match self {\n+            Self::Variant { field } => field\n+        }\n+    }\n+}\n+\n+fn main() {\n+    let e = Enum::Variant { field: 42 };\n+    println!(\"{}\", e.read_field());\n+}"}]}