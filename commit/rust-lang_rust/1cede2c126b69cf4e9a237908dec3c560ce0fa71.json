{"sha": "1cede2c126b69cf4e9a237908dec3c560ce0fa71", "node_id": "C_kwDOAAsO6NoAKDFjZWRlMmMxMjZiNjljZjRlOWEyMzc5MDhkZWMzYzU2MGNlMGZhNzE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-08-13T11:35:27Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-08-17T08:17:54Z"}, "message": "`is_knowable` use `Result` instead of `Option`", "tree": {"sha": "350840d76424027d504e6e95fd2d47a5a49db8d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/350840d76424027d504e6e95fd2d47a5a49db8d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cede2c126b69cf4e9a237908dec3c560ce0fa71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cede2c126b69cf4e9a237908dec3c560ce0fa71", "html_url": "https://github.com/rust-lang/rust/commit/1cede2c126b69cf4e9a237908dec3c560ce0fa71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cede2c126b69cf4e9a237908dec3c560ce0fa71/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86c6ebee8fa0a5ad1e18e375113b06bd2849b634", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c6ebee8fa0a5ad1e18e375113b06bd2849b634", "html_url": "https://github.com/rust-lang/rust/commit/86c6ebee8fa0a5ad1e18e375113b06bd2849b634"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "985600d9ebcc2228638bec7a03a42d4699858e5e", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cede2c126b69cf4e9a237908dec3c560ce0fa71/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cede2c126b69cf4e9a237908dec3c560ce0fa71/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=1cede2c126b69cf4e9a237908dec3c560ce0fa71", "patch": "@@ -404,12 +404,12 @@ fn resolve_negative_obligation<'cx, 'tcx>(\n pub fn trait_ref_is_knowable<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     trait_ref: ty::TraitRef<'tcx>,\n-) -> Option<Conflict> {\n+) -> Result<(), Conflict> {\n     debug!(\"trait_ref_is_knowable(trait_ref={:?})\", trait_ref);\n     if orphan_check_trait_ref(tcx, trait_ref, InCrate::Remote).is_ok() {\n         // A downstream or cousin crate is allowed to implement some\n         // substitution of this trait-ref.\n-        return Some(Conflict::Downstream);\n+        return Err(Conflict::Downstream);\n     }\n \n     if trait_ref_is_local_or_fundamental(tcx, trait_ref) {\n@@ -418,7 +418,7 @@ pub fn trait_ref_is_knowable<'tcx>(\n         // allowed to implement a substitution of this trait ref, which\n         // means impls could only come from dependencies of this crate,\n         // which we already know about.\n-        return None;\n+        return Ok(());\n     }\n \n     // This is a remote non-fundamental trait, so if another crate\n@@ -431,10 +431,10 @@ pub fn trait_ref_is_knowable<'tcx>(\n     // we are an owner.\n     if orphan_check_trait_ref(tcx, trait_ref, InCrate::Local).is_ok() {\n         debug!(\"trait_ref_is_knowable: orphan check passed\");\n-        None\n+        Ok(())\n     } else {\n         debug!(\"trait_ref_is_knowable: nonlocal, nonfundamental, unowned\");\n-        Some(Conflict::Upstream)\n+        Err(Conflict::Upstream)\n     }\n }\n "}, {"sha": "d67bd6292b434534556ea19f1896f3597294e377", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cede2c126b69cf4e9a237908dec3c560ce0fa71/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cede2c126b69cf4e9a237908dec3c560ce0fa71/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=1cede2c126b69cf4e9a237908dec3c560ce0fa71", "patch": "@@ -75,7 +75,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         &mut self,\n         stack: &TraitObligationStack<'o, 'tcx>,\n     ) -> SelectionResult<'tcx, SelectionCandidate<'tcx>> {\n-        if let Some(conflict) = self.is_knowable(stack) {\n+        if let Err(conflict) = self.is_knowable(stack) {\n             debug!(\"coherence stage: not knowable\");\n             if self.intercrate_ambiguity_causes.is_some() {\n                 debug!(\"evaluate_stack: intercrate_ambiguity_causes is some\");"}, {"sha": "46b50dd92f1ef7a3ed17fa20b66ccaf9b7b7657b", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cede2c126b69cf4e9a237908dec3c560ce0fa71/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cede2c126b69cf4e9a237908dec3c560ce0fa71/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=1cede2c126b69cf4e9a237908dec3c560ce0fa71", "patch": "@@ -1265,11 +1265,11 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         Ok(Some(candidate))\n     }\n \n-    fn is_knowable<'o>(&mut self, stack: &TraitObligationStack<'o, 'tcx>) -> Option<Conflict> {\n+    fn is_knowable<'o>(&mut self, stack: &TraitObligationStack<'o, 'tcx>) -> Result<(), Conflict> {\n         debug!(\"is_knowable(intercrate={:?})\", self.intercrate);\n \n         if !self.intercrate || stack.obligation.polarity() == ty::ImplPolarity::Negative {\n-            return None;\n+            return Ok(());\n         }\n \n         let obligation = &stack.obligation;"}]}