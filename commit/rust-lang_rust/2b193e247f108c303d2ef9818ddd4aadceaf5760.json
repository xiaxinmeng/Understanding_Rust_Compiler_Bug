{"sha": "2b193e247f108c303d2ef9818ddd4aadceaf5760", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMTkzZTI0N2YxMDhjMzAzZDJlZjk4MThkZGQ0YWFkY2VhZjU3NjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-14T20:29:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-14T20:29:56Z"}, "message": "Auto merge of #7462 - xFrednet:7369-branches-sharing-code-else-expr-fp, r=camsteffen\n\nFP fix and documentation for `branches_sharing_code` lint\n\nCloses rust-lang/rust-clippy#7369\n\nRelated rust-lang/rust-clippy#7452 I'm still thinking about the best way to fix this. I could simply add another visitor to ensure that the moved expressions don't modify values being used in the condition, but I'm not totally happy with this due to the complexity. I therefore only documented it for now\n\nchangelog: [`branches_sharing_code`] fixed false positive where block expressions would sometimes be ignored.", "tree": {"sha": "1c9a95cb99116b5a8a8186eec9ae077cad242494", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c9a95cb99116b5a8a8186eec9ae077cad242494"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b193e247f108c303d2ef9818ddd4aadceaf5760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b193e247f108c303d2ef9818ddd4aadceaf5760", "html_url": "https://github.com/rust-lang/rust/commit/2b193e247f108c303d2ef9818ddd4aadceaf5760", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b193e247f108c303d2ef9818ddd4aadceaf5760/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4acbff9eb05a15008d33fd7558670fc3b2338461", "url": "https://api.github.com/repos/rust-lang/rust/commits/4acbff9eb05a15008d33fd7558670fc3b2338461", "html_url": "https://github.com/rust-lang/rust/commit/4acbff9eb05a15008d33fd7558670fc3b2338461"}, {"sha": "61e280863fb68c26bb1f976acfa4a45a26d70545", "url": "https://api.github.com/repos/rust-lang/rust/commits/61e280863fb68c26bb1f976acfa4a45a26d70545", "html_url": "https://github.com/rust-lang/rust/commit/61e280863fb68c26bb1f976acfa4a45a26d70545"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "9cbcde597686e8c212c45ce95d4e28ad954624cf", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b193e247f108c303d2ef9818ddd4aadceaf5760/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b193e247f108c303d2ef9818ddd4aadceaf5760/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=2b193e247f108c303d2ef9818ddd4aadceaf5760", "patch": "@@ -120,7 +120,10 @@ declare_clippy_lint! {\n     ///\n     /// **Why is this bad?** Duplicate code is less maintainable.\n     ///\n-    /// **Known problems:** Hopefully none.\n+    /// **Known problems:**\n+    /// * The lint doesn't check if the moved expressions modify values that are beeing used in\n+    ///   the if condition. The suggestion can in that case modify the behavior of the program.\n+    ///   See [rust-clippy#7452](https://github.com/rust-lang/rust-clippy/issues/7452)\n     ///\n     /// **Example:**\n     /// ```ignore\n@@ -358,8 +361,7 @@ fn scan_block_for_eq(cx: &LateContext<'tcx>, blocks: &[&Block<'tcx>]) -> Option<\n         expr_eq &= block_expr_eq;\n     }\n \n-    let has_expr = blocks[0].expr.is_some();\n-    if has_expr && !expr_eq {\n+    if !expr_eq {\n         end_eq = 0;\n     }\n "}, {"sha": "7f42df463411d53f8371c6b29cd431ba1580f4cd", "filename": "tests/ui/branches_sharing_code/false_positives.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2b193e247f108c303d2ef9818ddd4aadceaf5760/tests%2Fui%2Fbranches_sharing_code%2Ffalse_positives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b193e247f108c303d2ef9818ddd4aadceaf5760/tests%2Fui%2Fbranches_sharing_code%2Ffalse_positives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Ffalse_positives.rs?ref=2b193e247f108c303d2ef9818ddd4aadceaf5760", "patch": "@@ -0,0 +1,28 @@\n+#![allow(dead_code)]\n+#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+\n+// ##################################\n+// # Issue clippy#7369\n+// ##################################\n+#[derive(Debug)]\n+pub struct FooBar {\n+    foo: Vec<u32>,\n+}\n+\n+impl FooBar {\n+    pub fn bar(&mut self) {\n+        if true {\n+            self.foo.pop();\n+        } else {\n+            self.baz();\n+\n+            self.foo.pop();\n+\n+            self.baz()\n+        }\n+    }\n+\n+    fn baz(&mut self) {}\n+}\n+\n+fn main() {}"}]}