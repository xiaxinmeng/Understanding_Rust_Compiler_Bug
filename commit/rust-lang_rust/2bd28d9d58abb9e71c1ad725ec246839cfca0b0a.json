{"sha": "2bd28d9d58abb9e71c1ad725ec246839cfca0b0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZDI4ZDlkNThhYmI5ZTcxYzFhZDcyNWVjMjQ2ODM5Y2ZjYTBiMGE=", "commit": {"author": {"name": "Tommaso Bianchi", "email": "tommaso4.bianchi@mail.polimi.it", "date": "2019-11-24T20:47:02Z"}, "committer": {"name": "Tommaso Bianchi", "email": "tommaso4.bianchi@mail.polimi.it", "date": "2019-12-05T17:28:29Z"}, "message": "Add regression tests", "tree": {"sha": "e789106a14d90ee48ed724969e7d78a2334089cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e789106a14d90ee48ed724969e7d78a2334089cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a", "html_url": "https://github.com/rust-lang/rust/commit/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a/comments", "author": {"login": "TommasoBianchi", "id": 10757509, "node_id": "MDQ6VXNlcjEwNzU3NTA5", "avatar_url": "https://avatars.githubusercontent.com/u/10757509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TommasoBianchi", "html_url": "https://github.com/TommasoBianchi", "followers_url": "https://api.github.com/users/TommasoBianchi/followers", "following_url": "https://api.github.com/users/TommasoBianchi/following{/other_user}", "gists_url": "https://api.github.com/users/TommasoBianchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TommasoBianchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TommasoBianchi/subscriptions", "organizations_url": "https://api.github.com/users/TommasoBianchi/orgs", "repos_url": "https://api.github.com/users/TommasoBianchi/repos", "events_url": "https://api.github.com/users/TommasoBianchi/events{/privacy}", "received_events_url": "https://api.github.com/users/TommasoBianchi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TommasoBianchi", "id": 10757509, "node_id": "MDQ6VXNlcjEwNzU3NTA5", "avatar_url": "https://avatars.githubusercontent.com/u/10757509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TommasoBianchi", "html_url": "https://github.com/TommasoBianchi", "followers_url": "https://api.github.com/users/TommasoBianchi/followers", "following_url": "https://api.github.com/users/TommasoBianchi/following{/other_user}", "gists_url": "https://api.github.com/users/TommasoBianchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TommasoBianchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TommasoBianchi/subscriptions", "organizations_url": "https://api.github.com/users/TommasoBianchi/orgs", "repos_url": "https://api.github.com/users/TommasoBianchi/repos", "events_url": "https://api.github.com/users/TommasoBianchi/events{/privacy}", "received_events_url": "https://api.github.com/users/TommasoBianchi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1fff4a4b213b3341c1ff994061b7965a5932c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1fff4a4b213b3341c1ff994061b7965a5932c70", "html_url": "https://github.com/rust-lang/rust/commit/d1fff4a4b213b3341c1ff994061b7965a5932c70"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "2934217df346e06057d94d5d723ae2a6f1a95ead", "filename": "src/test/ui/dropck/dropck_fn_type.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a/src%2Ftest%2Fui%2Fdropck%2Fdropck_fn_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a/src%2Ftest%2Fui%2Fdropck%2Fdropck_fn_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck_fn_type.rs?ref=2bd28d9d58abb9e71c1ad725ec246839cfca0b0a", "patch": "@@ -0,0 +1,20 @@\n+// run-pass\n+//! Regression test for #58311, regarding the usage of Fn types in drop impls\n+\n+// All of this Drop impls should compile.\n+\n+#[allow(dead_code)]\n+struct S<F: Fn() -> [u8; 1]>(F);\n+\n+impl<F: Fn() -> [u8; 1]> Drop for S<F> {\n+    fn drop(&mut self) {}\n+}\n+\n+#[allow(dead_code)]\n+struct P<A, F: FnOnce() -> [A; 10]>(F);\n+\n+impl<A, F: FnOnce() -> [A; 10]> Drop for P<A, F> {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "98e8e88a2599553e6c94a5e8d9ba1bce423ccba0", "filename": "src/test/ui/dropck/dropck_traits.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a/src%2Ftest%2Fui%2Fdropck%2Fdropck_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bd28d9d58abb9e71c1ad725ec246839cfca0b0a/src%2Ftest%2Fui%2Fdropck%2Fdropck_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck_traits.rs?ref=2bd28d9d58abb9e71c1ad725ec246839cfca0b0a", "patch": "@@ -0,0 +1,68 @@\n+// run-pass\n+//! Regression test for #34426, regarding HRTB in drop impls\n+\n+// All of this Drop impls should compile.\n+\n+pub trait Lifetime<'a> {}\n+impl<'a> Lifetime<'a> for i32 {}\n+\n+#[allow(dead_code)]\n+struct Foo<L>\n+where\n+    for<'a> L: Lifetime<'a>,\n+{\n+    l: L,\n+}\n+\n+impl<L> Drop for Foo<L>\n+where\n+    for<'a> L: Lifetime<'a>,\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[allow(dead_code)]\n+struct Foo2<L>\n+where\n+    for<'a> L: Lifetime<'a>,\n+{\n+    l: L,\n+}\n+\n+impl<T: for<'a> Lifetime<'a>> Drop for Foo2<T>\n+where\n+    for<'x> T: Lifetime<'x>,\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+pub trait Lifetime2<'a, 'b> {}\n+impl<'a, 'b> Lifetime2<'a, 'b> for i32 {}\n+\n+#[allow(dead_code)]\n+struct Bar<L>\n+where\n+    for<'a, 'b> L: Lifetime2<'a, 'b>,\n+{\n+    l: L,\n+}\n+\n+impl<L> Drop for Bar<L>\n+where\n+    for<'a, 'b> L: Lifetime2<'a, 'b>,\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[allow(dead_code)]\n+struct FnHolder<T: for<'a> Fn(&'a T, dyn for<'b> Lifetime2<'a, 'b>) -> u8>(T);\n+\n+impl<T: for<'a> Fn(&'a T, dyn for<'b> Lifetime2<'a, 'b>) -> u8> Drop for FnHolder<T> {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {\n+    let _foo = Foo { l: 0 };\n+\n+    let _bar = Bar { l: 0 };\n+}"}]}