{"sha": "3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmM2ExMjEwNDNmNzJhMTY2MmYwYjBhZDI0Y2EyZmQwOWY0YjRmMjc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-23T00:09:59Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-23T00:09:59Z"}, "message": "Copy body tydesc and args into obj bodies.", "tree": {"sha": "883baa23bb356abaa659d59d85cbe35e92bff836", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/883baa23bb356abaa659d59d85cbe35e92bff836"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "html_url": "https://github.com/rust-lang/rust/commit/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a642c17a1f7936728511de84f1dd65cc69d212", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a642c17a1f7936728511de84f1dd65cc69d212", "html_url": "https://github.com/rust-lang/rust/commit/a2a642c17a1f7936728511de84f1dd65cc69d212"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "25eb15129ba1bbf9d1fda0b5354678be52081f67", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "patch": "@@ -2485,12 +2485,15 @@ impure fn trans_obj(@crate_ctxt cx, &ast._obj ob, ast.def_id oid,\n         for (ty.arg a in arg_tys) {\n             append[@ty.t](obj_fields, a.ty);\n         }\n-        // Synthesize an obj body:\n+\n+        // Synthesize an obj body type.\n         let @ty.t fields_ty = ty.plain_ty(ty.ty_tup(obj_fields));\n         let TypeRef llfields_ty = type_of(bcx.fcx.ccx, fields_ty);\n         let TypeRef llobj_body_ty =\n-            T_ptr(T_box(T_struct(vec(T_tydesc(),\n+            T_ptr(T_box(T_struct(vec(T_ptr(T_tydesc()),\n                                      llfields_ty))));\n+\n+        // Malloc a box for the body.\n         auto r = trans_malloc_inner(bcx, llobj_body_ty);\n         auto box = r.val;\n         auto rc = r.bcx.build.GEP(box,\n@@ -2501,8 +2504,32 @@ impure fn trans_obj(@crate_ctxt cx, &ast._obj ob, ast.def_id oid,\n                                         C_int(abi.box_rc_field_body)));\n         r.bcx.build.Store(C_int(1), rc);\n \n-        // FIXME: Copy args into body\n+        // Store body tydesc.\n+        auto body_tydesc =\n+            r.bcx.build.GEP(body,\n+                            vec(C_int(0),\n+                                C_int(abi.obj_body_elt_tydesc)));\n+\n+        auto fields_tydesc = get_tydesc(r.bcx, fields_ty);\n+        r.bcx.build.Store(fields_tydesc, body_tydesc);\n+\n+        // Copy args into body fields.\n+        auto body_fields =\n+            r.bcx.build.GEP(body,\n+                            vec(C_int(0),\n+                                C_int(abi.obj_body_elt_fields)));\n+\n+        let int i = 0;\n+        for (ast.obj_field f in ob.fields) {\n+            auto arg = r.bcx.fcx.llargs.get(f.id);\n+            arg = r.bcx.build.Load(arg);\n+            auto field = r.bcx.build.GEP(body_fields,\n+                                         vec(C_int(0),C_int(i)));\n+            r = copy_ty(r.bcx, true, field, arg, arg_tys.(i).ty);\n+            i += 1;\n+        }\n \n+        // Store box ptr in outer pair.\n         auto p = r.bcx.build.PointerCast(box, llbox_ty);\n         r.bcx.build.Store(p, pair_box);\n     }"}]}