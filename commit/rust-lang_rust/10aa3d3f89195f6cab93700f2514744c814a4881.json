{"sha": "10aa3d3f89195f6cab93700f2514744c814a4881", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYWEzZDNmODkxOTVmNmNhYjkzNzAwZjI1MTQ3NDRjODE0YTQ4ODE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-03T00:22:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-03T00:22:00Z"}, "message": "Rollup merge of #76120 - LukasKalbertodt:add-as-slice-method-to-array, r=Mark-Simulacrum\n\nAdd `[T; N]::as_[mut_]slice`\n\nPart of me trying to populate arrays with a couple of basic useful methods, like slices already have. The ability to add methods to arrays were added in #75212.  Tracking issue: #76118\n\nThis adds:\n\n```rust\nimpl<T, const N: usize> [T; N] {\n    pub fn as_slice(&self) -> &[T];\n    pub fn as_mut_slice(&mut self) -> &mut [T];\n}\n```\n\nThese methods are like the ones on `std::array::FixedSizeArray` and in the crate `arraytools`.", "tree": {"sha": "ab6ffe562b4e9b637b5f7abf6ef7d1b47440fa93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab6ffe562b4e9b637b5f7abf6ef7d1b47440fa93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10aa3d3f89195f6cab93700f2514744c814a4881", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfUDcoCRBK7hj4Ov3rIwAAdHIIAFDNRP5BmdIIk4lXqdKUoNn2\nk24wRRghbZw9ING54/inTgVvhT3C5eOJlWnVGrnNTPj5L3iZz8vWbQjRuktgzxnm\nFcmh76vuIKCv+kMZX8EXmspN2rdP7yFOgPSXs6cGnjTCn+jzGJ7txaL7IQT6hm8x\nskqQNiBCXu1CDXdfv5i89ECl2SqOog+EQNKjX8AnZMWYmZPBiKE3q7zoldTOHUp0\n0Bw4Sxv21pGDMMDWg2VnnZLB+cQFwBMcrnOR2uNYdb+7E31RmPICkXPL6Hc3ygpJ\navXeOG27c1aJppqAp/7XylyixhGTX7m7oUnz2c/gmkuKRvA/n8g41rqr57TGGpI=\n=ir59\n-----END PGP SIGNATURE-----\n", "payload": "tree ab6ffe562b4e9b637b5f7abf6ef7d1b47440fa93\nparent 536b0c0c9051f879e473f1040f94773ed070ebe9\nparent d7afe2a223ab0a118bcdae39e8e2affbccaa61ae\nauthor Dylan DPC <dylan.dpc@gmail.com> 1599092520 +0200\ncommitter GitHub <noreply@github.com> 1599092520 +0200\n\nRollup merge of #76120 - LukasKalbertodt:add-as-slice-method-to-array, r=Mark-Simulacrum\n\nAdd `[T; N]::as_[mut_]slice`\n\nPart of me trying to populate arrays with a couple of basic useful methods, like slices already have. The ability to add methods to arrays were added in #75212.  Tracking issue: #76118\n\nThis adds:\n\n```rust\nimpl<T, const N: usize> [T; N] {\n    pub fn as_slice(&self) -> &[T];\n    pub fn as_mut_slice(&mut self) -> &mut [T];\n}\n```\n\nThese methods are like the ones on `std::array::FixedSizeArray` and in the crate `arraytools`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10aa3d3f89195f6cab93700f2514744c814a4881", "html_url": "https://github.com/rust-lang/rust/commit/10aa3d3f89195f6cab93700f2514744c814a4881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10aa3d3f89195f6cab93700f2514744c814a4881/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "536b0c0c9051f879e473f1040f94773ed070ebe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/536b0c0c9051f879e473f1040f94773ed070ebe9", "html_url": "https://github.com/rust-lang/rust/commit/536b0c0c9051f879e473f1040f94773ed070ebe9"}, {"sha": "d7afe2a223ab0a118bcdae39e8e2affbccaa61ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7afe2a223ab0a118bcdae39e8e2affbccaa61ae", "html_url": "https://github.com/rust-lang/rust/commit/d7afe2a223ab0a118bcdae39e8e2affbccaa61ae"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "f45c99c285c84c9cb301bf864b8049edefe1ef39", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=10aa3d3f89195f6cab93700f2514744c814a4881", "patch": "@@ -422,4 +422,17 @@ impl<T, const N: usize> [T; N] {\n         // and we just need to cast it to the correct type.\n         unsafe { crate::mem::transmute_copy::<_, [U; N]>(&dst) }\n     }\n+\n+    /// Returns a slice containing the entire array. Equivalent to `&s[..]`.\n+    #[unstable(feature = \"array_methods\", issue = \"76118\")]\n+    pub fn as_slice(&self) -> &[T] {\n+        self\n+    }\n+\n+    /// Returns a mutable slice containing the entire array. Equivalent to\n+    /// `&mut s[..]`.\n+    #[unstable(feature = \"array_methods\", issue = \"76118\")]\n+    pub fn as_mut_slice(&mut self) -> &mut [T] {\n+        self\n+    }\n }"}, {"sha": "4a651e5aa0ee397bdc7974690cc274c3f93373f6", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=10aa3d3f89195f6cab93700f2514744c814a4881", "patch": "@@ -1,5 +1,6 @@\n #![feature(alloc_layout_extra)]\n #![feature(array_chunks)]\n+#![feature(array_methods)]\n #![feature(array_map)]\n #![feature(bool_to_option)]\n #![feature(bound_cloned)]"}, {"sha": "b46bcfd16d28331b2cea805729627aa5dee40331", "filename": "library/core/tests/option.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Ftests%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Ftests%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Foption.rs?ref=10aa3d3f89195f6cab93700f2514744c814a4881", "patch": "@@ -1,4 +1,3 @@\n-use core::array::FixedSizeArray;\n use core::clone::Clone;\n use core::mem;\n use core::ops::DerefMut;"}, {"sha": "35598295a95151c2d9f94d39860801a732f54589", "filename": "library/core/tests/result.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Ftests%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10aa3d3f89195f6cab93700f2514744c814a4881/library%2Fcore%2Ftests%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fresult.rs?ref=10aa3d3f89195f6cab93700f2514744c814a4881", "patch": "@@ -1,4 +1,3 @@\n-use core::array::FixedSizeArray;\n use core::ops::DerefMut;\n use core::option::*;\n "}]}