{"sha": "defa61f3fb2612358b57c206c5e16da2751e6deb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZmE2MWYzZmIyNjEyMzU4YjU3YzIwNmM1ZTE2ZGEyNzUxZTZkZWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T23:16:36Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T23:16:36Z"}, "message": "Tweak field parse error recovery", "tree": {"sha": "16dda63e86fa58940291a5a176918e1e9efe92ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16dda63e86fa58940291a5a176918e1e9efe92ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/defa61f3fb2612358b57c206c5e16da2751e6deb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/defa61f3fb2612358b57c206c5e16da2751e6deb", "html_url": "https://github.com/rust-lang/rust/commit/defa61f3fb2612358b57c206c5e16da2751e6deb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/defa61f3fb2612358b57c206c5e16da2751e6deb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "html_url": "https://github.com/rust-lang/rust/commit/15bad8bbfd3125b1e94d04f274910e24d0bb63eb"}], "stats": {"total": 75, "additions": 20, "deletions": 55}, "files": [{"sha": "a2d3595b47206bcfd496becdfbac64703e7c35c9", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -2695,28 +2695,12 @@ impl<'a> Parser<'a> {\n                 break;\n             }\n \n-            let mut recovery_field = None;\n-            if let token::Ident(ident, _) = self.token {\n-                if !self.token.is_reserved_ident() {\n-                    let mut ident = ident.clone();\n-                    ident.span = self.span;\n-                    recovery_field = Some(ast::Field {\n-                        ident,\n-                        span: self.span,\n-                        expr: self.mk_expr(self.span, ExprKind::Err, ThinVec::new()),\n-                        is_shorthand: true,\n-                        attrs: ThinVec::new(),\n-                    });\n-                }\n-            }\n+            let mut parsed_field = None;\n             match self.parse_field() {\n-                Ok(f) => fields.push(f),\n+                Ok(f) => parsed_field = Some(f),\n                 Err(mut e) => {\n                     e.span_label(struct_sp, \"while parsing this struct\");\n                     e.emit();\n-                    if let Some(f) = recovery_field {\n-                        fields.push(f);\n-                    }\n \n                     // If the next token is a comma, then try to parse\n                     // what comes next as additional fields, rather than\n@@ -2732,7 +2716,10 @@ impl<'a> Parser<'a> {\n \n             match self.expect_one_of(&[token::Comma],\n                                      &[token::CloseDelim(token::Brace)]) {\n-                Ok(()) => {}\n+                Ok(()) => if let Some(f) = parsed_field {\n+                    // only include the field if there's no parse error\n+                    fields.push(f);\n+                }\n                 Err(mut e) => {\n                     e.span_label(struct_sp, \"while parsing this struct\");\n                     e.emit();"}, {"sha": "4e9453653735a45d5cfc0d2b8f37f775d795a5bf", "filename": "src/test/ui/issues/issue-52496.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52496.rs?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -7,7 +7,6 @@ fn main() {\n     let bar = 1.5f32;\n     let _ = Foo { bar.into(), bat: -1, . };\n     //~^ ERROR expected one of\n-    //~| ERROR mismatched types\n-    //~| ERROR missing field `baz` in initializer of `Foo`\n+    //~| ERROR missing fields `bar`, `baz` in initializer of `Foo`\n     //~| ERROR expected identifier, found `.`\n }"}, {"sha": "43009a15bd49a2466cba97a6fa403de17b536ffb", "filename": "src/test/ui/issues/issue-52496.stderr", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52496.stderr?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -26,23 +26,12 @@ error[E0063]: missing field `bat` in initializer of `Foo`\n LL |     let _ = Foo { bar: .5, baz: 42 };\n    |             ^^^ missing `bat`\n \n-error[E0308]: mismatched types\n-  --> $DIR/issue-52496.rs:8:19\n-   |\n-LL |     let _ = Foo { bar.into(), bat: -1, . };\n-   |                   ^^^ expected f64, found f32\n-help: you can cast an `f32` to `f64` in a lossless way\n-   |\n-LL |     let _ = Foo { bar.into().into(), bat: -1, . };\n-   |                   ^^^^^^^^^^\n-\n-error[E0063]: missing field `baz` in initializer of `Foo`\n+error[E0063]: missing fields `bar`, `baz` in initializer of `Foo`\n   --> $DIR/issue-52496.rs:8:13\n    |\n LL |     let _ = Foo { bar.into(), bat: -1, . };\n-   |             ^^^ missing `baz`\n+   |             ^^^ missing `bar`, `baz`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n \n-Some errors occurred: E0063, E0308.\n-For more information about an error, try `rustc --explain E0063`.\n+For more information about this error, try `rustc --explain E0063`."}, {"sha": "add024ea3907f8f3992f41f0b342cb076eee2da8", "filename": "src/test/ui/parser/removed-syntax-with-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.rs?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -7,5 +7,5 @@ fn main() {\n     let a = S { foo: (), bar: () };\n     let b = S { foo: () with a };\n     //~^ ERROR expected one of `,`, `.`, `?`, `}`, or an operator, found `with`\n-    //~| ERROR missing field `bar` in initializer of `main::S`\n+    //~| ERROR missing fields `bar`, `foo` in initializer of `main::S`\n }"}, {"sha": "aae29efa85e54c620a6b0493ec6c7d3dc2bd8a86", "filename": "src/test/ui/parser/removed-syntax-with-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -6,11 +6,11 @@ LL |     let b = S { foo: () with a };\n    |             |\n    |             while parsing this struct\n \n-error[E0063]: missing field `bar` in initializer of `main::S`\n+error[E0063]: missing fields `bar`, `foo` in initializer of `main::S`\n   --> $DIR/removed-syntax-with-1.rs:8:13\n    |\n LL |     let b = S { foo: () with a };\n-   |             ^ missing `bar`\n+   |             ^ missing `bar`, `foo`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f666da49696ba6499a352052288992918b6d225b", "filename": "src/test/ui/parser/removed-syntax-with-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-2.rs?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -7,6 +7,5 @@ fn main() {\n     let a = S { foo: (), bar: () };\n     let b = S { foo: (), with a };\n     //~^ ERROR expected one of `,` or `}`, found `a`\n-    //~| ERROR cannot find value `with` in this scope\n-    //~| ERROR struct `main::S` has no field named `with`\n+    //~| ERROR missing field `bar` in initializer of `main::S`\n }"}, {"sha": "7717b49d3a2c7d443c98770a5a28208776a80018", "filename": "src/test/ui/parser/removed-syntax-with-2.stderr", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/defa61f3fb2612358b57c206c5e16da2751e6deb/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-2.stderr?ref=defa61f3fb2612358b57c206c5e16da2751e6deb", "patch": "@@ -6,21 +6,12 @@ LL |     let b = S { foo: (), with a };\n    |             |\n    |             while parsing this struct\n \n-error[E0425]: cannot find value `with` in this scope\n-  --> $DIR/removed-syntax-with-2.rs:8:26\n+error[E0063]: missing field `bar` in initializer of `main::S`\n+  --> $DIR/removed-syntax-with-2.rs:8:13\n    |\n LL |     let b = S { foo: (), with a };\n-   |                          ^^^^ not found in this scope\n+   |             ^ missing `bar`\n \n-error[E0560]: struct `main::S` has no field named `with`\n-  --> $DIR/removed-syntax-with-2.rs:8:26\n-   |\n-LL |     let b = S { foo: (), with a };\n-   |                          ^^^^ `main::S` does not have this field\n-   |\n-   = note: available fields are: `foo`, `bar`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors occurred: E0425, E0560.\n-For more information about an error, try `rustc --explain E0425`.\n+For more information about this error, try `rustc --explain E0063`."}]}