{"sha": "b9517ca9f3c1d54dba369dca811ed30b291c2e17", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NTE3Y2E5ZjNjMWQ1NGRiYTM2OWRjYTgxMWVkMzBiMjkxYzJlMTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-15T15:52:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-15T16:12:58Z"}, "message": "this also fixed our 2-phase woes", "tree": {"sha": "22b5f35fca5b6289b5dd8761d1aee246f35ac5fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22b5f35fca5b6289b5dd8761d1aee246f35ac5fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9517ca9f3c1d54dba369dca811ed30b291c2e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9517ca9f3c1d54dba369dca811ed30b291c2e17", "html_url": "https://github.com/rust-lang/rust/commit/b9517ca9f3c1d54dba369dca811ed30b291c2e17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9517ca9f3c1d54dba369dca811ed30b291c2e17/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1447242bf98d7bf3e094d2e5d6029472cfdcc75d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1447242bf98d7bf3e094d2e5d6029472cfdcc75d", "html_url": "https://github.com/rust-lang/rust/commit/1447242bf98d7bf3e094d2e5d6029472cfdcc75d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d27519df48a752132cdf8c16b601f3c99249421e", "filename": "tests/run-pass/stacked-borrows/interior_mutability.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9517ca9f3c1d54dba369dca811ed30b291c2e17/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9517ca9f3c1d54dba369dca811ed30b291c2e17/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs?ref=b9517ca9f3c1d54dba369dca811ed30b291c2e17", "patch": "@@ -1,12 +1,12 @@\n #![feature(maybe_uninit, maybe_uninit_ref)]\n use std::mem::MaybeUninit;\n-use std::cell::Cell;\n-use std::cell::RefCell;\n+use std::cell::{Cell, RefCell, UnsafeCell};\n \n fn main() {\n     aliasing_mut_and_shr();\n     aliasing_frz_and_shr();\n     into_interior_mutability();\n+    unsafe_cell_2phase();\n }\n \n fn aliasing_mut_and_shr() {\n@@ -57,3 +57,12 @@ fn into_interior_mutability() {\n     let ptr = unsafe { x.get_ref() };\n     assert_eq!(ptr.1, 1);\n }\n+\n+// Two-phase borrows of the pointer returned by UnsafeCell::get() should not\n+// invalidate aliases.\n+fn unsafe_cell_2phase() { unsafe {\n+    let x = &UnsafeCell::new(vec![]);\n+    let x2 = &*x;\n+    (*x.get()).push(0);\n+    let _val = (*x2.get()).get(0);\n+} }"}]}