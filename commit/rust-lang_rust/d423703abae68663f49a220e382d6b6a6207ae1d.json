{"sha": "d423703abae68663f49a220e382d6b6a6207ae1d", "node_id": "C_kwDOAAsO6NoAKGQ0MjM3MDNhYmFlNjg2NjNmNDlhMjIwZTM4MmQ2YjZhNjIwN2FlMWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-04T16:08:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-04T16:08:09Z"}, "message": "Auto merge of #10443 - dtolnay-contrib:formerids, r=llogiq\n\nInclude former name of renamed lints in lints.json\n\nI am interested in having a programmatic way to process [`RENAMED_LINTS`](https://github.com/rust-lang/rust-clippy/blob/113c704d225c63c1a0eec29cfa9478b7537e7d73/clippy_lints/src/renamed_lints.rs#L4) for https://github.com/dtolnay/noisy-clippy/issues/15.\n\n<details>\n<summary>lints.json diff</summary>\n\n```diff\n60c60,63\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"almost_complete_letter_range\"\n>     ]\n300c303,306\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"option_and_then_some\"\n>     ]\n330c336,340\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"block_in_if_condition_expr\",\n>       \"block_in_if_condition_stmt\"\n>     ]\n450c460,463\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"box_vec\"\n>     ]\n945c958,961\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"cyclomatic_complexity\"\n>     ]\n1335c1351,1354\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"derive_hash_xor_eq\"\n>     ]\n1365c1384,1387\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"disallowed_method\"\n>     ]\n1380c1402,1405\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"blacklisted_name\"\n>     ]\n1410c1435,1438\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"disallowed_type\"\n>     ]\n1890c1918,1922\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"option_expect_used\",\n>       \"result_expect_used\"\n>     ]\n3150c3182,3185\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"zero_width_space\"\n>     ]\n4185c4220,4225\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"option_map_unwrap_or\",\n>       \"option_map_unwrap_or_else\",\n>       \"result_map_unwrap_or_else\"\n>     ]\n4290c4330,4333\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"if_let_some_result\"\n>     ]\n4710c4753,4756\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"eval_order_dependence\"\n>     ]\n4755c4801,4804\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"stutter\"\n>     ]\n5055c5104,5107\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"ref_in_deref\"\n>     ]\n5400c5452,5455\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"new_without_default_derive\"\n>     ]\n5820c5875,5878\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"logic_bug\"\n>     ]\n6330c6388,6391\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"to_string_in_display\"\n>     ]\n6525c6586,6589\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"const_static_lifetime\"\n>     ]\n7065c7129,7132\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"single_char_push_str\"\n>     ]\n8820c8887,8891\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"option_unwrap_used\",\n>       \"result_unwrap_used\"\n>     ]\n8925c8996,8999\n<     }\n---\n>     },\n>     \"former_ids\": [\n>       \"identity_conversion\"\n>     ]\n```\n</details>\n\nchangelog: Include `\"former_ids\": [\u2026]` for renamed lints in [lints.json](https://rust-lang.github.io/rust-clippy/master/lints.json)", "tree": {"sha": "f7f3965479d6a8cf6771683fe95d01d8e9ce2751", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7f3965479d6a8cf6771683fe95d01d8e9ce2751"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d423703abae68663f49a220e382d6b6a6207ae1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d423703abae68663f49a220e382d6b6a6207ae1d", "html_url": "https://github.com/rust-lang/rust/commit/d423703abae68663f49a220e382d6b6a6207ae1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d423703abae68663f49a220e382d6b6a6207ae1d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "113c704d225c63c1a0eec29cfa9478b7537e7d73", "url": "https://api.github.com/repos/rust-lang/rust/commits/113c704d225c63c1a0eec29cfa9478b7537e7d73", "html_url": "https://github.com/rust-lang/rust/commit/113c704d225c63c1a0eec29cfa9478b7537e7d73"}, {"sha": "cc6180c2f4bf53a235a139be0ba604dacda618a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6180c2f4bf53a235a139be0ba604dacda618a9", "html_url": "https://github.com/rust-lang/rust/commit/cc6180c2f4bf53a235a139be0ba604dacda618a9"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "3d0d4a52511a8365f1ca27781f51153ad499e79e", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d423703abae68663f49a220e382d6b6a6207ae1d/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d423703abae68663f49a220e382d6b6a6207ae1d/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=d423703abae68663f49a220e382d6b6a6207ae1d", "patch": "@@ -26,7 +26,7 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::Ident;\n use rustc_span::{sym, Loc, Span, Symbol};\n use serde::{ser::SerializeStruct, Serialize, Serializer};\n-use std::collections::BinaryHeap;\n+use std::collections::{BTreeSet, BinaryHeap};\n use std::fmt;\n use std::fmt::Write as _;\n use std::fs::{self, OpenOptions};\n@@ -264,6 +264,9 @@ struct LintMetadata {\n     /// This field is only used in the output and will only be\n     /// mapped shortly before the actual output.\n     applicability: Option<ApplicabilityInfo>,\n+    /// All the past names of lints which have been renamed.\n+    #[serde(skip_serializing_if = \"BTreeSet::is_empty\")]\n+    former_ids: BTreeSet<String>,\n }\n \n impl LintMetadata {\n@@ -283,6 +286,7 @@ impl LintMetadata {\n             version,\n             docs,\n             applicability: None,\n+            former_ids: BTreeSet::new(),\n         }\n     }\n }\n@@ -901,6 +905,7 @@ fn collect_renames(lints: &mut Vec<LintMetadata>) {\n                         if name == lint_name;\n                         if let Some(past_name) = k.strip_prefix(CLIPPY_LINT_GROUP_PREFIX);\n                         then {\n+                            lint.former_ids.insert(past_name.to_owned());\n                             writeln!(collected, \"* `{past_name}`\").unwrap();\n                             names.push(past_name.to_string());\n                         }"}]}