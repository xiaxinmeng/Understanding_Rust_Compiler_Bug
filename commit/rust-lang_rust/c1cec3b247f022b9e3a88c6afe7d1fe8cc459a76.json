{"sha": "c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxY2VjM2IyNDdmMDIyYjllM2E4OGM2YWZlN2QxZmU4Y2M0NTlhNzY=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-28T22:31:57Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-28T22:57:41Z"}, "message": "Exclude env vars using flag", "tree": {"sha": "87e1be2091e6e26e9dabfd919f8966aa8facc1d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e1be2091e6e26e9dabfd919f8966aa8facc1d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76", "html_url": "https://github.com/rust-lang/rust/commit/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ae1d71938e2a177f3edb60fc30991ce2c8e4536", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae1d71938e2a177f3edb60fc30991ce2c8e4536", "html_url": "https://github.com/rust-lang/rust/commit/1ae1d71938e2a177f3edb60fc30991ce2c8e4536"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "e44fdfd141696ced12d10e449c868c1125d86a2b", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76", "patch": "@@ -42,7 +42,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n         MemoryExtra::new(StdRng::seed_from_u64(config.seed.unwrap_or(0)), config.validate),\n     );\n     // Complete initialization.\n-    EnvVars::init(&mut ecx);\n+    EnvVars::init(&mut ecx, config.excluded_env_vars);\n \n     // Setup first stack-frame\n     let main_instance = ty::Instance::mono(ecx.tcx.tcx, main_id);"}, {"sha": "5a5dffa1d09b04b1a48fee875b6e95188c9f6e0e", "filename": "src/shims/env.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=c1cec3b247f022b9e3a88c6afe7d1fe8cc459a76", "patch": "@@ -15,11 +15,14 @@ pub struct EnvVars {\n impl EnvVars {\n     pub(crate) fn init<'mir, 'tcx>(\n         ecx: &mut InterpCx<'mir, 'tcx, Evaluator<'tcx>>,\n+        excluded_env_vars: Vec<String>,\n     ) {\n         if ecx.machine.communicate {\n             for (name, value) in std::env::vars() {\n-                let var_ptr = alloc_env_var(name.as_bytes(), value.as_bytes(), ecx.memory_mut());\n-                ecx.machine.env_vars.map.insert(name.into_bytes(), var_ptr);\n+                if !excluded_env_vars.contains(&name) {\n+                    let var_ptr = alloc_env_var(name.as_bytes(), value.as_bytes(), ecx.memory_mut());\n+                    ecx.machine.env_vars.map.insert(name.into_bytes(), var_ptr);\n+                }\n             }\n         }\n     }"}]}