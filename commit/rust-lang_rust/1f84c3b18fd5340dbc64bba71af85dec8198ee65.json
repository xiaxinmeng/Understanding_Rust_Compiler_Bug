{"sha": "1f84c3b18fd5340dbc64bba71af85dec8198ee65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmODRjM2IxOGZkNTM0MGRiYzY0YmJhNzFhZjg1ZGVjODE5OGVlNjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-06T14:56:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-06T14:56:25Z"}, "message": "make::use_item", "tree": {"sha": "c8b57aae006a2f9c843aef4944d4761dfa21ec97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b57aae006a2f9c843aef4944d4761dfa21ec97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f84c3b18fd5340dbc64bba71af85dec8198ee65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f84c3b18fd5340dbc64bba71af85dec8198ee65", "html_url": "https://github.com/rust-lang/rust/commit/1f84c3b18fd5340dbc64bba71af85dec8198ee65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f84c3b18fd5340dbc64bba71af85dec8198ee65/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13879afdd58f7cd9fe34843c5b09ba9c22de1e77", "url": "https://api.github.com/repos/rust-lang/rust/commits/13879afdd58f7cd9fe34843c5b09ba9c22de1e77", "html_url": "https://github.com/rust-lang/rust/commit/13879afdd58f7cd9fe34843c5b09ba9c22de1e77"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "53d6fa562084c700ec0724e43575fcbd881aabb7", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f84c3b18fd5340dbc64bba71af85dec8198ee65/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f84c3b18fd5340dbc64bba71af85dec8198ee65/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=1f84c3b18fd5340dbc64bba71af85dec8198ee65", "patch": "@@ -46,6 +46,10 @@ pub fn use_tree_list(use_trees: impl IntoIterator<Item = ast::UseTree>) -> ast::\n     ast_from_text(&format!(\"use {{{}}};\", use_trees))\n }\n \n+pub fn use_item(use_tree: ast::UseTree) -> ast::UseItem {\n+    ast_from_text(&format!(\"use {};\", use_tree.syntax()))\n+}\n+\n pub fn record_field(name: ast::NameRef, expr: Option<ast::Expr>) -> ast::RecordField {\n     return match expr {\n         Some(expr) => from_text(&format!(\"{}: {}\", name.syntax(), expr.syntax())),"}]}