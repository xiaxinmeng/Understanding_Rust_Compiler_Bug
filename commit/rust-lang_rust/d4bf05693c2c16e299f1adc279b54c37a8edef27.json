{"sha": "d4bf05693c2c16e299f1adc279b54c37a8edef27", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YmYwNTY5M2MyYzE2ZTI5OWYxYWRjMjc5YjU0YzM3YThlZGVmMjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-18T07:53:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-18T07:53:03Z"}, "message": "Auto merge of #72316 - RalfJung:rollup-70g6bln, r=RalfJung\n\nRollup of 2 pull requests\n\nSuccessful merges:\n\n - #72143 (make offset must_use)\n - #72307 (use the new interface to initialize conditional variables)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "d0387dbbcea22be75fdf28407eeb24c7a1688a69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0387dbbcea22be75fdf28407eeb24c7a1688a69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4bf05693c2c16e299f1adc279b54c37a8edef27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4bf05693c2c16e299f1adc279b54c37a8edef27", "html_url": "https://github.com/rust-lang/rust/commit/d4bf05693c2c16e299f1adc279b54c37a8edef27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4bf05693c2c16e299f1adc279b54c37a8edef27/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1baf85c7e09c3b5df645888a456dabefe5866b99", "url": "https://api.github.com/repos/rust-lang/rust/commits/1baf85c7e09c3b5df645888a456dabefe5866b99", "html_url": "https://github.com/rust-lang/rust/commit/1baf85c7e09c3b5df645888a456dabefe5866b99"}, {"sha": "2cff5d961aa67693f0500d59f5d8607efaea9fdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cff5d961aa67693f0500d59f5d8607efaea9fdd", "html_url": "https://github.com/rust-lang/rust/commit/2cff5d961aa67693f0500d59f5d8607efaea9fdd"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "22baa79dc62409cd8256674c76216bc314270790", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bf05693c2c16e299f1adc279b54c37a8edef27/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d4bf05693c2c16e299f1adc279b54c37a8edef27/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d4bf05693c2c16e299f1adc279b54c37a8edef27", "patch": "@@ -1439,9 +1439,9 @@ dependencies = [\n \n [[package]]\n name = \"hermit-abi\"\n-version = \"0.1.12\"\n+version = \"0.1.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"61565ff7aaace3525556587bd2dc31d4a07071957be715e63ce7b1eccf51a8f4\"\n+checksum = \"91780f809e750b0a89f5544be56617ff6b1227ee485bcb06ebe10cdf89bd3b71\"\n dependencies = [\n  \"compiler_builtins\",\n  \"libc\","}, {"sha": "a60380137e11e816ae84214a868143db91944af3", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=d4bf05693c2c16e299f1adc279b54c37a8edef27", "patch": "@@ -1311,6 +1311,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::pointer::offset`](../../std/primitive.pointer.html#method.offset).\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     pub fn offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Calculates the offset from a pointer, potentially wrapping.\n@@ -1327,6 +1328,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::pointer::wrapping_offset`](../../std/primitive.pointer.html#method.wrapping_offset).\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     pub fn arith_offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*` intrinsic, with"}, {"sha": "85ba5fc0638ea18fc84e80df6b152257ebfa07a2", "filename": "src/libcore/ptr/const_ptr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibcore%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibcore%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fconst_ptr.rs?ref=d4bf05693c2c16e299f1adc279b54c37a8edef27", "patch": "@@ -150,6 +150,7 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub unsafe fn offset(self, count: isize) -> *const T\n     where\n@@ -208,6 +209,7 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[stable(feature = \"ptr_wrapping_offset\", since = \"1.16.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub fn wrapping_offset(self, count: isize) -> *const T\n     where\n@@ -390,6 +392,7 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub unsafe fn add(self, count: usize) -> Self\n     where\n@@ -451,6 +454,7 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub unsafe fn sub(self, count: usize) -> Self\n     where\n@@ -506,6 +510,7 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub fn wrapping_add(self, count: usize) -> Self\n     where\n@@ -561,6 +566,7 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub fn wrapping_sub(self, count: usize) -> Self\n     where"}, {"sha": "0781d7e6cac452c63a4d7376ce73b4c07ec08848", "filename": "src/libcore/ptr/mut_ptr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibcore%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibcore%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmut_ptr.rs?ref=d4bf05693c2c16e299f1adc279b54c37a8edef27", "patch": "@@ -144,6 +144,7 @@ impl<T: ?Sized> *mut T {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub unsafe fn offset(self, count: isize) -> *mut T\n     where\n@@ -201,6 +202,7 @@ impl<T: ?Sized> *mut T {\n     /// assert_eq!(&data, &[0, 2, 0, 4, 0]);\n     /// ```\n     #[stable(feature = \"ptr_wrapping_offset\", since = \"1.16.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub fn wrapping_offset(self, count: isize) -> *mut T\n     where\n@@ -436,6 +438,7 @@ impl<T: ?Sized> *mut T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub unsafe fn add(self, count: usize) -> Self\n     where\n@@ -497,6 +500,7 @@ impl<T: ?Sized> *mut T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub unsafe fn sub(self, count: usize) -> Self\n     where\n@@ -552,6 +556,7 @@ impl<T: ?Sized> *mut T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub fn wrapping_add(self, count: usize) -> Self\n     where\n@@ -607,6 +612,7 @@ impl<T: ?Sized> *mut T {\n     /// }\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n+    #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n     pub fn wrapping_sub(self, count: usize) -> Self\n     where"}, {"sha": "077ca2a2faa7edee256365451f531ac3faf6759f", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=d4bf05693c2c16e299f1adc279b54c37a8edef27", "patch": "@@ -41,7 +41,7 @@ dlmalloc = { version = \"0.1\", features = ['rustc-dep-of-std'] }\n fortanix-sgx-abi = { version = \"0.3.2\", features = ['rustc-dep-of-std'] }\n \n [target.'cfg(all(any(target_arch = \"x86_64\", target_arch = \"aarch64\"), target_os = \"hermit\"))'.dependencies]\n-hermit-abi = { version = \"0.1.12\", features = ['rustc-dep-of-std'] }\n+hermit-abi = { version = \"0.1.13\", features = ['rustc-dep-of-std'] }\n \n [target.wasm32-wasi.dependencies]\n wasi = { version = \"0.9.0\", features = ['rustc-dep-of-std'], default-features = false }"}, {"sha": "94e3275448ae9eae17a53a215a8a27d2238b3684", "filename": "src/libstd/sys/hermit/condvar.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibstd%2Fsys%2Fhermit%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bf05693c2c16e299f1adc279b54c37a8edef27/src%2Flibstd%2Fsys%2Fhermit%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fhermit%2Fcondvar.rs?ref=d4bf05693c2c16e299f1adc279b54c37a8edef27", "patch": "@@ -12,9 +12,8 @@ impl Condvar {\n         Condvar { identifier: 0 }\n     }\n \n-    #[inline]\n     pub unsafe fn init(&mut self) {\n-        // nothing to do\n+        let _ = abi::init_queue(self.id());\n     }\n \n     pub unsafe fn notify_one(&self) {\n@@ -50,7 +49,6 @@ impl Condvar {\n         ret\n     }\n \n-    #[inline]\n     pub unsafe fn destroy(&self) {\n         let _ = abi::destroy_queue(self.id());\n     }"}]}