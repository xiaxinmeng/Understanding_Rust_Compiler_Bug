{"sha": "c5c650d670f5f191ea9667b455c15a607e550fdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YzY1MGQ2NzBmNWYxOTFlYTk2NjdiNDU1YzE1YTYwN2U1NTBmZGI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2018-03-19T05:26:41Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2018-03-19T05:26:41Z"}, "message": "Split out termination_trait_test feature gate", "tree": {"sha": "7c171b7468a5286cabe79641f3af211e9118a68c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c171b7468a5286cabe79641f3af211e9118a68c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5c650d670f5f191ea9667b455c15a607e550fdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c650d670f5f191ea9667b455c15a607e550fdb", "html_url": "https://github.com/rust-lang/rust/commit/c5c650d670f5f191ea9667b455c15a607e550fdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5c650d670f5f191ea9667b455c15a607e550fdb/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f4744d2db4e162df824d0bd0b093ba4b351545", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f4744d2db4e162df824d0bd0b093ba4b351545", "html_url": "https://github.com/rust-lang/rust/commit/c2f4744d2db4e162df824d0bd0b093ba4b351545"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "0950965233f6aed9366b51d58ab5cccf4bad9058", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=c5c650d670f5f191ea9667b455c15a607e550fdb", "patch": "@@ -432,6 +432,9 @@ declare_features! (\n     // Termination trait in main (RFC 1937)\n     (active, termination_trait, \"1.24.0\", Some(43301), None),\n \n+    // Termination trait in tests (RFC 1937)\n+    (active, termination_trait_test, \"1.24.0\", Some(48854), None),\n+\n     // Allows use of the :lifetime macro fragment specifier\n     (active, macro_lifetime_matcher, \"1.24.0\", Some(46895), None),\n "}, {"sha": "d107ab59a9ad91848cc3289d6852c6d81b89eae4", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=c5c650d670f5f191ea9667b455c15a607e550fdb", "patch": "@@ -332,7 +332,7 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n             ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n                 // If the termination trait is active, the compiler will check that the output\n                 // type implements the `Termination` trait as `libtest` enforces that.\n-                let output_matches = if cx.features.termination_trait {\n+                let output_matches = if cx.features.termination_trait_test {\n                     true\n                 } else {\n                     let no_output = match decl.output {\n@@ -359,7 +359,7 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n         match has_test_signature(cx, i) {\n             Yes => true,\n             No => {\n-                if cx.features.termination_trait {\n+                if cx.features.termination_trait_test {\n                     diag.span_err(i.span, \"functions used as tests can not have any arguments\");\n                 } else {\n                     diag.span_err(i.span, \"functions used as tests must have signature fn() -> ()\");\n@@ -388,7 +388,7 @@ fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n \n                 // If the termination trait is active, the compiler will check that the output\n                 // type implements the `Termination` trait as `libtest` enforces that.\n-                let output_matches = if cx.features.termination_trait {\n+                let output_matches = if cx.features.termination_trait_test {\n                     true\n                 } else {\n                     let no_output = match decl.output {\n@@ -416,7 +416,7 @@ fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     if has_bench_attr && !has_bench_signature {\n         let diag = cx.span_diagnostic;\n \n-        if cx.features.termination_trait {\n+        if cx.features.termination_trait_test {\n             diag.span_err(i.span, \"functions used as benches must have signature \\\n                                    `fn(&mut Bencher) -> impl Termination`\");\n         } else {"}, {"sha": "4af7e94671627c67e216ebff9e5c1620ad31fded", "filename": "src/test/compile-fail/feature-gate-termination_trait_test.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs?ref=c5c650d670f5f191ea9667b455c15a607e550fdb", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+fn main() {}\n+\n+#[cfg(test)]\n+mod tests {\n+    #[test]\n+    fn it_works() -> Result<(), ()> {\n+    //~^ ERROR functions used as tests must have signature fn() -> ()\n+        Ok(())\n+    }\n+}"}, {"sha": "11997eb6917287cb82abe42033d9f87a12f543d4", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-in-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c650d670f5f191ea9667b455c15a607e550fdb/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs?ref=c5c650d670f5f191ea9667b455c15a607e550fdb", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --test\n \n-#![feature(termination_trait)]\n+#![feature(termination_trait_test)]\n #![feature(test)]\n \n extern crate test;"}]}