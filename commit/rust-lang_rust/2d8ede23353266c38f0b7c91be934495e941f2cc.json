{"sha": "2d8ede23353266c38f0b7c91be934495e941f2cc", "node_id": "C_kwDOAAsO6NoAKDJkOGVkZTIzMzUzMjY2YzM4ZjBiN2M5MWJlOTM0NDk1ZTk0MWYyY2M", "commit": {"author": {"name": "Vincenzo Palazzo", "email": "vincenzopalazzodev@gmail.com", "date": "2023-01-15T11:58:46Z"}, "committer": {"name": "Vincenzo Palazzo", "email": "vincenzopalazzodev@gmail.com", "date": "2023-01-23T11:42:18Z"}, "message": "fix: use LocalDefId instead of HirId in trait res\n\nuse LocalDefId instead of HirId in trait resolution to simplify\nthe obligation clause resolution\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>", "tree": {"sha": "7c382e38020695a28d6fce528f5532e0041fe971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c382e38020695a28d6fce528f5532e0041fe971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8ede23353266c38f0b7c91be934495e941f2cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ede23353266c38f0b7c91be934495e941f2cc", "html_url": "https://github.com/rust-lang/rust/commit/2d8ede23353266c38f0b7c91be934495e941f2cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ede23353266c38f0b7c91be934495e941f2cc/comments", "author": {"login": "vincenzopalazzo", "id": 17150045, "node_id": "MDQ6VXNlcjE3MTUwMDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincenzopalazzo", "html_url": "https://github.com/vincenzopalazzo", "followers_url": "https://api.github.com/users/vincenzopalazzo/followers", "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}", "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions", "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs", "repos_url": "https://api.github.com/users/vincenzopalazzo/repos", "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vincenzopalazzo", "id": 17150045, "node_id": "MDQ6VXNlcjE3MTUwMDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincenzopalazzo", "html_url": "https://github.com/vincenzopalazzo", "followers_url": "https://api.github.com/users/vincenzopalazzo/followers", "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}", "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions", "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs", "repos_url": "https://api.github.com/users/vincenzopalazzo/repos", "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "298a78277e95920a24e147ecaec38ca122204c88", "url": "https://api.github.com/repos/rust-lang/rust/commits/298a78277e95920a24e147ecaec38ca122204c88", "html_url": "https://github.com/rust-lang/rust/commit/298a78277e95920a24e147ecaec38ca122204c88"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "2a79b18b829941c4a218843a84a135fc8b83a0ae", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ede23353266c38f0b7c91be934495e941f2cc/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ede23353266c38f0b7c91be934495e941f2cc/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=2d8ede23353266c38f0b7c91be934495e941f2cc", "patch": "@@ -78,7 +78,8 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n                 let send_trait = cx.tcx.get_diagnostic_item(sym::Send).unwrap();\n                 let span = decl.output.span();\n                 let infcx = cx.tcx.infer_ctxt().build();\n-                let cause = traits::ObligationCause::misc(span, hir_id);\n+                let def_id = cx.tcx.hir().local_def_id(hir_id);\n+                let cause = traits::ObligationCause::misc(span, def_id);\n                 let send_errors = traits::fully_solve_bound(&infcx, cause, cx.param_env, ret_ty, send_trait);\n                 if !send_errors.is_empty() {\n                     span_lint_and_then("}, {"sha": "b812e81cb107b35a217694df38a8fa3865889205", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ede23353266c38f0b7c91be934495e941f2cc/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ede23353266c38f0b7c91be934495e941f2cc/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=2d8ede23353266c38f0b7c91be934495e941f2cc", "patch": "@@ -371,7 +371,7 @@ fn can_change_type<'a>(cx: &LateContext<'a>, mut expr: &'a Expr<'a>, mut ty: Ty<\n                 && let output_ty = return_ty(cx, item.hir_id())\n                 && let local_def_id = cx.tcx.hir().local_def_id(item.hir_id())\n                 && Inherited::build(cx.tcx, local_def_id).enter(|inherited| {\n-                    let fn_ctxt = FnCtxt::new(inherited, cx.param_env, item.hir_id());\n+                    let fn_ctxt = FnCtxt::new(inherited, cx.param_env, local_def_id);\n                     fn_ctxt.can_coerce(ty, output_ty)\n                 }) {\n                     if has_lifetime(output_ty) && has_lifetime(ty) {"}, {"sha": "b59d52dfc4d313b9b2b8e99719aeb483ffc7bba2", "filename": "clippy_lints/src/transmute/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ede23353266c38f0b7c91be934495e941f2cc/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ede23353266c38f0b7c91be934495e941f2cc/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs?ref=2d8ede23353266c38f0b7c91be934495e941f2cc", "patch": "@@ -46,7 +46,7 @@ fn check_cast<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>, from_ty: Ty<'tcx>\n     let local_def_id = hir_id.owner.def_id;\n \n     Inherited::build(cx.tcx, local_def_id).enter(|inherited| {\n-        let fn_ctxt = FnCtxt::new(inherited, cx.param_env, hir_id);\n+        let fn_ctxt = FnCtxt::new(inherited, cx.param_env, local_def_id);\n \n         // If we already have errors, we can't be sure we can pointer cast.\n         assert!("}]}