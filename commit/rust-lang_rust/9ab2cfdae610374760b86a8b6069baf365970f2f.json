{"sha": "9ab2cfdae610374760b86a8b6069baf365970f2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYjJjZmRhZTYxMDM3NDc2MGI4NmE4YjYwNjliYWYzNjU5NzBmMmY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-07-10T18:52:59Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-06T20:35:11Z"}, "message": "added utility function", "tree": {"sha": "d52042e1e4e25af18d93c21073c7ad12f3f850f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d52042e1e4e25af18d93c21073c7ad12f3f850f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ab2cfdae610374760b86a8b6069baf365970f2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab2cfdae610374760b86a8b6069baf365970f2f", "html_url": "https://github.com/rust-lang/rust/commit/9ab2cfdae610374760b86a8b6069baf365970f2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ab2cfdae610374760b86a8b6069baf365970f2f/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc2a44daf1cf348da98de9553fccc23806e84f71", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2a44daf1cf348da98de9553fccc23806e84f71", "html_url": "https://github.com/rust-lang/rust/commit/bc2a44daf1cf348da98de9553fccc23806e84f71"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "dfac782929d9fd2436f0c829decf0248008e4ffc", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9ab2cfdae610374760b86a8b6069baf365970f2f/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ab2cfdae610374760b86a8b6069baf365970f2f/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=9ab2cfdae610374760b86a8b6069baf365970f2f", "patch": "@@ -985,13 +985,50 @@ pub fn getLast(arr: &~[Mrk]) -> uint {\n     *arr.last()\n }\n \n+// are two paths equal when compared unhygienically?\n+// since I'm using this to replace ==, it seems appropriate\n+// to compare the span, global, etc. fields as well.\n+pub fn path_name_eq(a : &ast::Path, b : &ast::Path) -> bool {\n+    (a.span == b.span)\n+    && (a.global == b.global)\n+    // NOTE: ident->name in lifetimes!\n+    && (a.rp == b.rp)\n+    // NOTE: can a type contain an ident?\n+    && (a.types == b.types)\n+    && (idents_name_eq(a.idents, b.idents))\n+}\n+\n+// are two arrays of idents equal when compared unhygienically?\n+pub fn idents_name_eq(a : &[ast::ident], b : &[ast::ident]) -> bool {\n+    if (a.len() != b.len()) {\n+        false\n+    } else {\n+        for a.iter().enumerate().advance |(idx,id)|{\n+            if (id.name != b[idx].name) {\n+                return false;\n+            }\n+        }\n+        true\n+    }\n+}\n \n #[cfg(test)]\n mod test {\n     use ast::*;\n     use super::*;\n     use std::io;\n \n+    #[test] fn idents_name_eq_test() {\n+        assert!(idents_name_eq(~[ident{name:3,ctxt:4},\n+                                 ident{name:78,ctxt:82}],\n+                               ~[ident{name:3,ctxt:104},\n+                                 ident{name:78,ctxt:182}]));\n+        assert!(!idents_name_eq(~[ident{name:3,ctxt:4},\n+                                  ident{name:78,ctxt:82}],\n+                                ~[ident{name:3,ctxt:104},\n+                                  ident{name:77,ctxt:182}]));\n+    }\n+\n     #[test] fn xorpush_test () {\n         let mut s = ~[];\n         xorPush(&mut s,14);"}]}