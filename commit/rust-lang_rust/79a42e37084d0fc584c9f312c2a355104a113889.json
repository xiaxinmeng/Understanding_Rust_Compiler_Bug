{"sha": "79a42e37084d0fc584c9f312c2a355104a113889", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YTQyZTM3MDg0ZDBmYzU4NGM5ZjMxMmMyYTM1NTEwNGExMTM4ODk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-06-20T20:26:24Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-06-27T09:36:41Z"}, "message": "linker: Create GNU_EH_FRAME header by default when producing ELFs", "tree": {"sha": "6ccd18ddd19302c09403d3bfc11faceca59c652b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ccd18ddd19302c09403d3bfc11faceca59c652b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79a42e37084d0fc584c9f312c2a355104a113889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79a42e37084d0fc584c9f312c2a355104a113889", "html_url": "https://github.com/rust-lang/rust/commit/79a42e37084d0fc584c9f312c2a355104a113889", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79a42e37084d0fc584c9f312c2a355104a113889/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "394e1b40d264aa6928811919c1124fa248e7d802", "url": "https://api.github.com/repos/rust-lang/rust/commits/394e1b40d264aa6928811919c1124fa248e7d802", "html_url": "https://github.com/rust-lang/rust/commit/394e1b40d264aa6928811919c1124fa248e7d802"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "3adaa07db91b012c054e80fa1a274fbf53db9184", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -1597,6 +1597,9 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n         cmd.arg(format!(\"--dynamic-linker={}ld.so.1\", prefix));\n     }\n \n+    // NO-OPT-OUT, OBJECT-FILES-NO, AUDIT-ORDER\n+    cmd.add_eh_frame_header();\n+\n     // NO-OPT-OUT, OBJECT-FILES-NO\n     if crt_objects_fallback {\n         cmd.no_crt_objects();"}, {"sha": "54f55c806d0350c13676056049c8aa39575077ab", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -129,6 +129,7 @@ pub trait Linker {\n     fn group_start(&mut self);\n     fn group_end(&mut self);\n     fn linker_plugin_lto(&mut self);\n+    fn add_eh_frame_header(&mut self) {}\n     fn finalize(&mut self);\n }\n \n@@ -615,6 +616,19 @@ impl<'a> Linker for GccLinker<'a> {\n             }\n         }\n     }\n+\n+    // Add the `GNU_EH_FRAME` program header which is required to locate unwinding information.\n+    // Some versions of `gcc` add it implicitly, some (e.g. `musl-gcc`) don't,\n+    // so we just always add it.\n+    fn add_eh_frame_header(&mut self) {\n+        // The condition here is \"uses ELF\" basically.\n+        if !self.sess.target.target.options.is_like_osx\n+            && !self.sess.target.target.options.is_like_windows\n+            && self.sess.target.target.target_os != \"uefi\"\n+        {\n+            self.linker_arg(\"--eh-frame-hdr\");\n+        }\n+    }\n }\n \n pub struct MsvcLinker<'a> {"}, {"sha": "39039435f5815c19ef568f95b51eb4c383be423f", "filename": "src/librustc_target/spec/cloudabi_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -7,7 +7,6 @@ pub fn opts() -> TargetOptions {\n         vec![\n             \"-Wl,-Bstatic\".to_string(),\n             \"-Wl,--no-dynamic-linker\".to_string(),\n-            \"-Wl,--eh-frame-hdr\".to_string(),\n             \"-Wl,--gc-sections\".to_string(),\n         ],\n     );"}, {"sha": "6f432dc11718d40466bb6fa6a56f43297f2eac41", "filename": "src/librustc_target/spec/fuchsia_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -6,7 +6,6 @@ pub fn opts() -> TargetOptions {\n         LinkerFlavor::Lld(LldFlavor::Ld),\n         vec![\n             \"--build-id\".to_string(),\n-            \"--eh-frame-hdr\".to_string(),\n             \"--hash-style=gnu\".to_string(),\n             \"-z\".to_string(),\n             \"max-page-size=4096\".to_string(),"}, {"sha": "b90e91d2901a8124c293b6d520be98ae3f77d3e3", "filename": "src/librustc_target/spec/linux_musl_base.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -1,15 +1,9 @@\n use crate::spec::crt_objects::{self, CrtObjectsFallback};\n-use crate::spec::{LinkerFlavor, TargetOptions};\n+use crate::spec::TargetOptions;\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();\n \n-    // At least when this was tested, the linker would not add the\n-    // `GNU_EH_FRAME` program header to executables generated, which is required\n-    // when unwinding to locate the unwinding information. I'm not sure why this\n-    // argument is *not* necessary for normal builds, but it can't hurt!\n-    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-Wl,--eh-frame-hdr\".to_string());\n-\n     base.pre_link_objects_fallback = crt_objects::pre_musl_fallback();\n     base.post_link_objects_fallback = crt_objects::post_musl_fallback();\n     base.crt_objects_fallback = Some(CrtObjectsFallback::Musl);"}, {"sha": "b3bda97c8a5707db931f06668ba9d93c626d306b", "filename": "src/librustc_target/spec/mipsel_sony_psp.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Fmipsel_sony_psp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Fmipsel_sony_psp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_sony_psp.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -6,10 +6,7 @@ const LINKER_SCRIPT: &str = include_str!(\"./mipsel_sony_psp_linker_script.ld\");\n \n pub fn target() -> TargetResult {\n     let mut pre_link_args = LinkArgs::new();\n-    pre_link_args.insert(\n-        LinkerFlavor::Lld(LldFlavor::Ld),\n-        vec![\"--eh-frame-hdr\".to_string(), \"--emit-relocs\".to_string()],\n-    );\n+    pre_link_args.insert(LinkerFlavor::Lld(LldFlavor::Ld), vec![\"--emit-relocs\".to_string()]);\n \n     Ok(Target {\n         llvm_target: \"mipsel-sony-psp\".to_string(),"}, {"sha": "3b5233a3e677df967273e2fef6238fe50c130815", "filename": "src/librustc_target/spec/x86_64_fortanix_unknown_sgx.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a42e37084d0fc584c9f312c2a355104a113889/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs?ref=79a42e37084d0fc584c9f312c2a355104a113889", "patch": "@@ -5,7 +5,6 @@ use super::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n pub fn target() -> Result<Target, String> {\n     const PRE_LINK_ARGS: &[&str] = &[\n         \"--as-needed\",\n-        \"--eh-frame-hdr\",\n         \"-z\",\n         \"noexecstack\",\n         \"-e\","}]}