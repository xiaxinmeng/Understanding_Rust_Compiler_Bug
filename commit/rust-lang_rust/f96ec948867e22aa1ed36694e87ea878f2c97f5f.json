{"sha": "f96ec948867e22aa1ed36694e87ea878f2c97f5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NmVjOTQ4ODY3ZTIyYWExZWQzNjY5NGU4N2VhODc4ZjJjOTdmNWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-08T01:03:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-08T01:03:32Z"}, "message": "tutorial: Typo", "tree": {"sha": "43a6aa16fe4dcd875b33680e69ce0de826dee6c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43a6aa16fe4dcd875b33680e69ce0de826dee6c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f96ec948867e22aa1ed36694e87ea878f2c97f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f96ec948867e22aa1ed36694e87ea878f2c97f5f", "html_url": "https://github.com/rust-lang/rust/commit/f96ec948867e22aa1ed36694e87ea878f2c97f5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f96ec948867e22aa1ed36694e87ea878f2c97f5f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5db5656ba76ff5e88e676b58a2f3659089c0739", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5db5656ba76ff5e88e676b58a2f3659089c0739", "html_url": "https://github.com/rust-lang/rust/commit/f5db5656ba76ff5e88e676b58a2f3659089c0739"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e129d41b6852edd91f7f9350a4830e6c5fd32d08", "filename": "doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f96ec948867e22aa1ed36694e87ea878f2c97f5f/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/f96ec948867e22aa1ed36694e87ea878f2c97f5f/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=f96ec948867e22aa1ed36694e87ea878f2c97f5f", "patch": "@@ -1178,7 +1178,7 @@ Rust has three competing goals that inform its view of memory:\n * Performance - high-performance low-level code tends to employ\n   a number of allocation strategies. low-performance high-level\n   code often uses a single, GC-based, heap allocation strategy\n-* Concurrency - Rust maintain memory safety guarantees even\n+* Concurrency - Rust must maintain memory safety guarantees even\n   for code running in parallel\n \n ## How performance considerations influence the memory model"}]}