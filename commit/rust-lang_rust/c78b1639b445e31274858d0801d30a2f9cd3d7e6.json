{"sha": "c78b1639b445e31274858d0801d30a2f9cd3d7e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OGIxNjM5YjQ0NWUzMTI3NDg1OGQwODAxZDMwYTJmOWNkM2Q3ZTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-25T00:03:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-25T00:03:18Z"}, "message": "fix c-stack-cdecl when used w/ i64", "tree": {"sha": "a69e306c5c37ec0bb6c71ad867cb39c0b9c08118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a69e306c5c37ec0bb6c71ad867cb39c0b9c08118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c78b1639b445e31274858d0801d30a2f9cd3d7e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c78b1639b445e31274858d0801d30a2f9cd3d7e6", "html_url": "https://github.com/rust-lang/rust/commit/c78b1639b445e31274858d0801d30a2f9cd3d7e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c78b1639b445e31274858d0801d30a2f9cd3d7e6/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d41385a69be7ef002c71bfe3ad1bac796517370d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d41385a69be7ef002c71bfe3ad1bac796517370d", "html_url": "https://github.com/rust-lang/rust/commit/d41385a69be7ef002c71bfe3ad1bac796517370d"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "0eaef300d80c60ce977d8cee34eb10ecae73cbdf", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=c78b1639b445e31274858d0801d30a2f9cd3d7e6", "patch": "@@ -3,7 +3,7 @@ import std::str;\n import middle::trans;\n import trans::decl_cdecl_fn;\n import middle::trans_common::{T_f32, T_f64, T_fn, T_bool, T_i1, T_i8, T_i32,\n-                              T_int, T_vec, T_nil, T_opaque_chan_ptr,\n+                              T_i64, T_int, T_vec, T_nil, T_opaque_chan_ptr,\n                               T_opaque_vec, T_opaque_port_ptr, T_ptr,\n                               T_size_t, T_void, T_float};\n import lib::llvm::type_names;\n@@ -28,6 +28,7 @@ type upcalls =\n      dynastack_free: ValueRef,\n      alloc_c_stack: ValueRef,\n      call_c_stack: ValueRef,\n+     call_c_stack_i64: ValueRef,\n      call_c_stack_float: ValueRef,\n      rust_personality: ValueRef};\n \n@@ -76,8 +77,11 @@ fn declare_upcalls(_tn: type_names, tydesc_type: TypeRef,\n           dynastack_free: dv(\"dynastack_free\", [T_ptr(T_i8())]),\n           alloc_c_stack: d(\"alloc_c_stack\", [T_size_t()], T_ptr(T_i8())),\n           call_c_stack: d(\"call_c_stack\",\n-                          [T_ptr(T_fn([], T_int())), T_ptr(T_i8())],\n-                          T_int()),\n+                              [T_ptr(T_fn([], T_int())), T_ptr(T_i8())],\n+                              T_int()),\n+          call_c_stack_i64: d(\"call_c_stack_i64\",\n+                              [T_ptr(T_fn([], T_int())), T_ptr(T_i8())],\n+                              T_i64()),\n           call_c_stack_float: d(\"call_c_stack_float\",\n                                 [T_ptr(T_fn([], T_int())), T_ptr(T_i8())],\n                                 T_float()),"}, {"sha": "7fe35776529e5d510dad90f3fe77d4a13c600b78", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=c78b1639b445e31274858d0801d30a2f9cd3d7e6", "patch": "@@ -3878,13 +3878,19 @@ fn trans_c_stack_native_call(bcx: @block_ctxt, f: @ast::expr,\n         ccx.upcalls.call_c_stack_float\n       }\n \n+      7 {\n+        // LLVMIntegerTypeKind\n+        let width = lib::llvm::llvm::LLVMGetIntTypeWidth(llretty);\n+        if width == 64u { ccx.upcalls.call_c_stack_i64 }\n+        else { ccx.upcalls.call_c_stack } // on 64-bit target, no diff\n+      }\n+\n       _ { ccx.upcalls.call_c_stack }\n     };\n \n     // Call and cast the return type.\n     // TODO: Invoke instead.\n-    let llrawretval = Call(bcx, upcall_fn,\n-                           [llfn, llrawargbundle]);\n+    let llrawretval = Call(bcx, upcall_fn, [llfn, llrawargbundle]);\n     let llretval;\n     if lib::llvm::llvm::LLVMGetTypeKind(llretty) as int == 11 { // pointer\n         llretval = IntToPtr(bcx, llrawretval, llretty);"}, {"sha": "d901666c6a40e26347e7181f5a7a7ffba5f75df1", "filename": "src/rt/arch/i386/ccall.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Frt%2Farch%2Fi386%2Fccall.S", "raw_url": "https://github.com/rust-lang/rust/raw/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Frt%2Farch%2Fi386%2Fccall.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fccall.S?ref=c78b1639b445e31274858d0801d30a2f9cd3d7e6", "patch": "@@ -6,13 +6,17 @@\n // slower.\n #if defined(__APPLE__) || defined(_WIN32)\n .globl _upcall_call_c_stack\n+.globl _upcall_call_c_stack_i64\n .globl _upcall_call_c_stack_float\n _upcall_call_c_stack:\n+_upcall_call_c_stack_i64:\n _upcall_call_c_stack_float:\n #else\n .globl upcall_call_c_stack\n+.globl upcall_call_c_stack_i64\n .globl upcall_call_c_stack_float\n upcall_call_c_stack:\n+upcall_call_c_stack_i64:\n upcall_call_c_stack_float:\n #endif\n     pushl %ebp"}, {"sha": "8293a23d126cf7a7a6c2a215d188c3a71ec038ea", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=c78b1639b445e31274858d0801d30a2f9cd3d7e6", "patch": "@@ -65,6 +65,7 @@ task_join\n unsupervise\n upcall_alloc_c_stack\n upcall_call_c_stack\n+upcall_call_c_stack_i64\n upcall_call_c_stack_float\n upcall_cmp_type\n upcall_dynastack_alloc"}, {"sha": "33e8b73a49596eca6ad92a3e86d2bc3171117dea", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78b1639b445e31274858d0801d30a2f9cd3d7e6/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=c78b1639b445e31274858d0801d30a2f9cd3d7e6", "patch": "@@ -0,0 +1,20 @@\n+use std;\n+import std::str;\n+\n+native \"c-stack-cdecl\" mod libc = \"\" {\n+    fn atol(x: str::sbuf) -> int;\n+    fn atoll(x: str::sbuf) -> i64;\n+}\n+\n+fn atol(s: str) -> int {\n+    ret str::as_buf(s, { |x| libc::atol(x) });\n+}\n+\n+fn atoll(s: str) -> i64 {\n+    ret str::as_buf(s, { |x| libc::atoll(x) });\n+}\n+\n+fn main() {\n+    assert atol(\"1024\") * 10 == atol(\"10240\");\n+    assert (atoll(\"11111111111111111\") * 10i64) == atoll(\"111111111111111110\");\n+}"}]}