{"sha": "c98713486579f7f18bed64c2a160f8ef89b5733f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ODcxMzQ4NjU3OWY3ZjE4YmVkNjRjMmExNjBmOGVmODliNTczM2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-02T09:21:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-02T09:21:39Z"}, "message": "auto merge of #13243 : huonw/rust/cellshow, r=thestinger\n\nstd: fix Cell's Show instance.\r\n\r\nPreviously it was printing the address of the Unsafe contained in the\r\nCell (i.e. the address of the Cell itself). This is clearly useless, and\r\nwas presumably a mistake due to writing `*&` instead of `&*`.\r\n\r\nHowever, this later expression is likely also incorrect, since it takes\r\na reference into a Cell while other user code is executing (i.e. the\r\nShow instance for the contained type), hence the contents should just be\r\ncopied out.", "tree": {"sha": "781ee81b10811610af957fc45d44b8a3f07fd986", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/781ee81b10811610af957fc45d44b8a3f07fd986"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c98713486579f7f18bed64c2a160f8ef89b5733f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c98713486579f7f18bed64c2a160f8ef89b5733f", "html_url": "https://github.com/rust-lang/rust/commit/c98713486579f7f18bed64c2a160f8ef89b5733f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c98713486579f7f18bed64c2a160f8ef89b5733f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a9ff2a2dc28e1a326a7e6e58f8195d3e125c27", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a9ff2a2dc28e1a326a7e6e58f8195d3e125c27", "html_url": "https://github.com/rust-lang/rust/commit/80a9ff2a2dc28e1a326a7e6e58f8195d3e125c27"}, {"sha": "50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "url": "https://api.github.com/repos/rust-lang/rust/commits/50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "html_url": "https://github.com/rust-lang/rust/commit/50fca0fbbb8f40714f79dbbec83bf61f34ed3945"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "eb114e895103aca49f89a243df8ea2b898284ebc", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c98713486579f7f18bed64c2a160f8ef89b5733f/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c98713486579f7f18bed64c2a160f8ef89b5733f/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=c98713486579f7f18bed64c2a160f8ef89b5733f", "patch": "@@ -61,9 +61,9 @@ impl<T:Eq + Copy> Eq for Cell<T> {\n     }\n }\n \n-impl<T: fmt::Show> fmt::Show for Cell<T> {\n+impl<T: Copy + fmt::Show> fmt::Show for Cell<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f.buf, r\"Cell \\{ value: {} \\}\", unsafe{*&self.value.get()})\n+        write!(f.buf, r\"Cell \\{ value: {} \\}\", self.get())\n     }\n }\n \n@@ -265,6 +265,17 @@ mod test {\n         assert_eq!(y.get(), (30, 40));\n     }\n \n+    #[test]\n+    fn cell_has_sensible_show() {\n+        use str::StrSlice;\n+\n+        let x = Cell::new(\"foo bar\");\n+        assert!(format!(\"{}\", x).contains(x.get()));\n+\n+        x.set(\"baz qux\");\n+        assert!(format!(\"{}\", x).contains(x.get()));\n+    }\n+\n     #[test]\n     fn double_imm_borrow() {\n         let x = RefCell::new(0);"}]}