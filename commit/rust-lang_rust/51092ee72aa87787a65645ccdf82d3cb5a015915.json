{"sha": "51092ee72aa87787a65645ccdf82d3cb5a015915", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMDkyZWU3MmFhODc3ODdhNjU2NDVjY2RmODJkM2NiNWEwMTU5MTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-31T07:34:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-31T07:34:39Z"}, "message": "Merge #2139\n\n2139: move mod_resolution to hir_def r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "31ba7c292cca19d6fdf94796d228f1424abbd3c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31ba7c292cca19d6fdf94796d228f1424abbd3c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51092ee72aa87787a65645ccdf82d3cb5a015915", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJduo6PCRBK7hj4Ov3rIwAAdHIIAELN3n2KyuLMD2cSOJfa61ZN\nFxaThRQgsoOqwVma4+iHbDf72As26HnOpkmSYHHK0UMa/Ym/Qf56FIBCxv81PnCH\nBHB2zGfeq6mMWONUEgmdKYBX9XOtZIx4HMSTt37x1GX6FrXdaHZ6ao7hUEIUfIrX\n6yPJIz+PFAHnbeUlNWXsbvYkfIeoNMywpO2iQ37IHghSGXkFQhMi0YuBdJ4M1QUg\nhcB3RP6BP6mGzPsYvv2vsEjaC0h2IszE3PLwR4qSVWziucZlWu1TRhbGFHeWlmDT\nr7WuGcMbC6nVqOXUGhhMxlRZ/JGYUE+oh0b1VpqZYXbU9Cok/RxIVXaZqNbj+5c=\n=eE+j\n-----END PGP SIGNATURE-----\n", "payload": "tree 31ba7c292cca19d6fdf94796d228f1424abbd3c6\nparent 37eaa840bb3f530fbe16ae7dd6bcdf4625d04f97\nparent 6f4d5f7339395d854e4ba2af227de851246e528f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1572507279 +0000\ncommitter GitHub <noreply@github.com> 1572507279 +0000\n\nMerge #2139\n\n2139: move mod_resolution to hir_def r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51092ee72aa87787a65645ccdf82d3cb5a015915", "html_url": "https://github.com/rust-lang/rust/commit/51092ee72aa87787a65645ccdf82d3cb5a015915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51092ee72aa87787a65645ccdf82d3cb5a015915/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37eaa840bb3f530fbe16ae7dd6bcdf4625d04f97", "url": "https://api.github.com/repos/rust-lang/rust/commits/37eaa840bb3f530fbe16ae7dd6bcdf4625d04f97", "html_url": "https://github.com/rust-lang/rust/commit/37eaa840bb3f530fbe16ae7dd6bcdf4625d04f97"}, {"sha": "6f4d5f7339395d854e4ba2af227de851246e528f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4d5f7339395d854e4ba2af227de851246e528f", "html_url": "https://github.com/rust-lang/rust/commit/6f4d5f7339395d854e4ba2af227de851246e528f"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "7c4d07de0da37d3b330da634b006114dc6102c3d", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=51092ee72aa87787a65645ccdf82d3cb5a015915", "patch": "@@ -49,7 +49,6 @@\n \n mod per_ns;\n mod collector;\n-mod mod_resolution;\n #[cfg(test)]\n mod tests;\n "}, {"sha": "ee0a4c99fe00295a392110c4bfbbe5cdc3657a57", "filename": "crates/ra_hir/src/nameres/collector.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs?ref=51092ee72aa87787a65645ccdf82d3cb5a015915", "patch": "@@ -1,6 +1,9 @@\n //! FIXME: write short doc here\n \n-use hir_def::{attr::Attr, nameres::raw};\n+use hir_def::{\n+    attr::Attr,\n+    nameres::{mod_resolution::ModDir, raw},\n+};\n use hir_expand::name;\n use ra_cfg::CfgOptions;\n use ra_db::FileId;\n@@ -12,8 +15,8 @@ use crate::{\n     db::DefDatabase,\n     ids::{AstItemDef, LocationCtx, MacroCallId, MacroCallLoc, MacroDefId, MacroFileKind},\n     nameres::{\n-        diagnostics::DefDiagnostic, mod_resolution::ModDir, Crate, CrateDefMap, CrateModuleId,\n-        ModuleData, ModuleDef, PerNs, ReachedFixedPoint, Resolution, ResolveMode,\n+        diagnostics::DefDiagnostic, Crate, CrateDefMap, CrateModuleId, ModuleData, ModuleDef,\n+        PerNs, ReachedFixedPoint, Resolution, ResolveMode,\n     },\n     Adt, AstId, Const, Enum, Function, HirFileId, MacroDef, Module, Name, Path, PathKind, Static,\n     Struct, Trait, TypeAlias, Union,"}, {"sha": "11ba8a7770d9f2af71ab311a9747fc5ee52494b7", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=51092ee72aa87787a65645ccdf82d3cb5a015915", "patch": "@@ -1,3 +1,5 @@\n //! FIXME: write short doc here\n \n+// FIXME: review privacy of submodules\n pub mod raw;\n+pub mod mod_resolution;"}, {"sha": "7d7e2779aa2045ee039c0eb78193cf7619ba6fc3", "filename": "crates/ra_hir_def/src/nameres/mod_resolution.rs", "status": "renamed", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51092ee72aa87787a65645ccdf82d3cb5a015915/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=51092ee72aa87787a65645ccdf82d3cb5a015915", "patch": "@@ -1,12 +1,13 @@\n //! This module resolves `mod foo;` declaration to file.\n+use hir_expand::name::Name;\n use ra_db::FileId;\n use ra_syntax::SmolStr;\n use relative_path::RelativePathBuf;\n \n-use crate::{db::DefDatabase, HirFileId, Name};\n+use crate::{db::DefDatabase2, HirFileId};\n \n #[derive(Clone, Debug)]\n-pub(super) struct ModDir {\n+pub struct ModDir {\n     /// `.` for `mod.rs`, `lib.rs`\n     /// `./foo` for `foo.rs`\n     /// `./foo/bar` for `mod bar { mod x; }` nested in `foo.rs`\n@@ -16,15 +17,11 @@ pub(super) struct ModDir {\n }\n \n impl ModDir {\n-    pub(super) fn root() -> ModDir {\n+    pub fn root() -> ModDir {\n         ModDir { path: RelativePathBuf::default(), root_non_dir_owner: false }\n     }\n \n-    pub(super) fn descend_into_definition(\n-        &self,\n-        name: &Name,\n-        attr_path: Option<&SmolStr>,\n-    ) -> ModDir {\n+    pub fn descend_into_definition(&self, name: &Name, attr_path: Option<&SmolStr>) -> ModDir {\n         let mut path = self.path.clone();\n         match attr_to_path(attr_path) {\n             None => path.push(&name.to_string()),\n@@ -38,9 +35,9 @@ impl ModDir {\n         ModDir { path, root_non_dir_owner: false }\n     }\n \n-    pub(super) fn resolve_declaration(\n+    pub fn resolve_declaration(\n         &self,\n-        db: &impl DefDatabase,\n+        db: &impl DefDatabase2,\n         file_id: HirFileId,\n         name: &Name,\n         attr_path: Option<&SmolStr>,", "previous_filename": "crates/ra_hir/src/nameres/mod_resolution.rs"}]}