{"sha": "dd403e4ab0ae25a27c35a803eb229416625b8e55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNDAzZTRhYjBhZTI1YTI3YzM1YTgwM2ViMjI5NDE2NjI1YjhlNTU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-10-03T04:31:21Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-10-05T19:57:48Z"}, "message": "Make re-export collection deterministic\n\nPreviously, we were using an `FxHashMap` to collect module re-exports.\nHowever, re-exports end up getting serialized into crate metadata, which\nmeans that metadata generation was non-deterministic. This resulted in\nspurious error messages changes (e.g. PR #64906) due to pretty-printing\nimplicitly depending on the order of re-exports when computing the\nproper path to show to the user.\n\nSee #65042 for a long-term strategy to detect this kind of issue", "tree": {"sha": "a5dd0036a5ca1f4b0df66c9b369bb1ec2bfa20ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5dd0036a5ca1f4b0df66c9b369bb1ec2bfa20ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd403e4ab0ae25a27c35a803eb229416625b8e55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl2Y9bwACgkQtAh+UQ6Y\nsWRBXg/9GbruDexCT+pRxfs5v1sHHfVqdm2+pUxVguW3x4auikHoSwWQp5MHI9JH\nL9xWB9gpwOzizmeHRSoB2wi2qLX0QSnCKW6x1hgYFBW+BGTkcmRhyDVBMK4jjtnG\nP58eZq2r78UzmWRjRhlhMARArTdVtcRxbsH559Io+yu2LndN3jcY6kWAbExnmq3a\nfkw7NUS3RBkxhdt/2YkqA/uYBtXHIsab63IaMCJWv9eqS2xGePXmp6SmklSMI6Yq\nb4LLHilEQYGL3+vVBwRjpThfSKRKDXXHd6Y24pkJ4g3FX2o54DUedUKv2qb5UqBE\nXrrZfz3nI6MhY8niirT/NIcE2u/5oJKGN0ITl99ot93hIgR/8807DSgtIYuOj9hB\na6djDqMaxcSrLsosCEAQ8Vxuvu5alcKA1gWoDgi0jCBHLYr6HcidK4SGbpB5S/Lz\nD7I+JBr6EngK47xxZbAMrsYPW2gI/lH+54lyApma5R+p44xQ5f8uEgcKC9UT+ehq\nqOuSk3nQko409HdURu00HnzYsQ1OMEXqfNpi5zZ+Vew2AVAKASDzHROSDKdmCi47\noEC+ZDVSdszJZIBKI0oh+u0NV27LOSwobaRHI6JE6bW9eVGaSMhzuMGoTKuwr+r1\nLVgmHFCP3FGryNMOXeeV6jUt2wRzAdkvveXGb+BlvSplHTASdWg=\n=dY+L\n-----END PGP SIGNATURE-----", "payload": "tree a5dd0036a5ca1f4b0df66c9b369bb1ec2bfa20ff\nparent 7870050796e5904a0fc85ecbe6fa6dde1cfe0c91\nauthor Aaron Hill <aa1ronham@gmail.com> 1570077081 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1570305468 -0400\n\nMake re-export collection deterministic\n\nPreviously, we were using an `FxHashMap` to collect module re-exports.\nHowever, re-exports end up getting serialized into crate metadata, which\nmeans that metadata generation was non-deterministic. This resulted in\nspurious error messages changes (e.g. PR #64906) due to pretty-printing\nimplicitly depending on the order of re-exports when computing the\nproper path to show to the user.\n\nSee #65042 for a long-term strategy to detect this kind of issue\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd403e4ab0ae25a27c35a803eb229416625b8e55", "html_url": "https://github.com/rust-lang/rust/commit/dd403e4ab0ae25a27c35a803eb229416625b8e55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd403e4ab0ae25a27c35a803eb229416625b8e55/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7870050796e5904a0fc85ecbe6fa6dde1cfe0c91", "url": "https://api.github.com/repos/rust-lang/rust/commits/7870050796e5904a0fc85ecbe6fa6dde1cfe0c91", "html_url": "https://github.com/rust-lang/rust/commit/7870050796e5904a0fc85ecbe6fa6dde1cfe0c91"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "2995ce2daefa29531e45a7a71b618efca998e4e6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd403e4ab0ae25a27c35a803eb229416625b8e55/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd403e4ab0ae25a27c35a803eb229416625b8e55/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=dd403e4ab0ae25a27c35a803eb229416625b8e55", "patch": "@@ -58,6 +58,7 @@ use std::{cmp, fmt, iter, ptr};\n use std::collections::BTreeSet;\n use rustc_data_structures::ptr_key::PtrKey;\n use rustc_data_structures::sync::Lrc;\n+use rustc_data_structures::fx::FxIndexMap;\n \n use diagnostics::{Suggestion, ImportSuggestion};\n use diagnostics::{find_span_of_binding_until_next_binding, extend_span_to_previous_binding};\n@@ -431,7 +432,7 @@ impl ModuleKind {\n     }\n }\n \n-type Resolutions<'a> = RefCell<FxHashMap<(Ident, Namespace), &'a RefCell<NameResolution<'a>>>>;\n+type Resolutions<'a> = RefCell<FxIndexMap<(Ident, Namespace), &'a RefCell<NameResolution<'a>>>>;\n \n /// One node in the tree of modules.\n pub struct ModuleData<'a> {"}]}