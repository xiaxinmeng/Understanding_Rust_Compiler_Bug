{"sha": "6e5562224ef1d67d51d529b76cf89ed14ed81ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNTU2MjIyNGVmMWQ2N2Q1MWQ1MjliNzZjZjg5ZWQxNGVkODFlY2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-26T13:47:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-26T13:47:52Z"}, "message": "remove some dead code", "tree": {"sha": "28675c9c02596be1b2a4a96234cd49343220d093", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28675c9c02596be1b2a4a96234cd49343220d093"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e5562224ef1d67d51d529b76cf89ed14ed81ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5562224ef1d67d51d529b76cf89ed14ed81ecb", "html_url": "https://github.com/rust-lang/rust/commit/6e5562224ef1d67d51d529b76cf89ed14ed81ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e5562224ef1d67d51d529b76cf89ed14ed81ecb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1c865fd5aadfa80e46a5c37ef5e0574d289a882", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c865fd5aadfa80e46a5c37ef5e0574d289a882", "html_url": "https://github.com/rust-lang/rust/commit/b1c865fd5aadfa80e46a5c37ef5e0574d289a882"}], "stats": {"total": 18, "additions": 1, "deletions": 17}, "files": [{"sha": "e962bbd31188445457cdb5954b8be5acefb0c998", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6e5562224ef1d67d51d529b76cf89ed14ed81ecb/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5562224ef1d67d51d529b76cf89ed14ed81ecb/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=6e5562224ef1d67d51d529b76cf89ed14ed81ecb", "patch": "@@ -63,7 +63,7 @@ use test_utils::tested_by;\n use crate::{\n     ModuleDef, Name, Crate, Module, SourceItemId,\n     DefDatabase, Path, PathKind, HirFileId, Trait,\n-    ids::{MacroCallId, MacroDefId},\n+    ids::MacroDefId,\n     diagnostics::DiagnosticSink,\n     nameres::diagnostics::DefDiagnostic,\n };\n@@ -84,9 +84,7 @@ pub struct CrateDefMap {\n     extern_prelude: FxHashMap<Name, ModuleDef>,\n     root: CrateModuleId,\n     modules: Arena<CrateModuleId, ModuleData>,\n-    macros: Arena<CrateMacroId, mbe::MacroRules>,\n     public_macros: FxHashMap<Name, MacroDefId>,\n-    macro_resolutions: FxHashMap<MacroCallId, (Crate, CrateMacroId)>,\n     diagnostics: Vec<DefDiagnostic>,\n }\n \n@@ -97,18 +95,6 @@ impl std::ops::Index<CrateModuleId> for CrateDefMap {\n     }\n }\n \n-impl std::ops::Index<CrateMacroId> for CrateDefMap {\n-    type Output = mbe::MacroRules;\n-    fn index(&self, id: CrateMacroId) -> &mbe::MacroRules {\n-        &self.macros[id]\n-    }\n-}\n-\n-/// An ID of a macro, **local** to a specific crate\n-#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n-pub(crate) struct CrateMacroId(RawId);\n-impl_arena_id!(CrateMacroId);\n-\n /// An ID of a module, **local** to a specific crate\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub(crate) struct CrateModuleId(RawId);\n@@ -202,9 +188,7 @@ impl CrateDefMap {\n                 prelude: None,\n                 root,\n                 modules,\n-                macros: Arena::default(),\n                 public_macros: FxHashMap::default(),\n-                macro_resolutions: FxHashMap::default(),\n                 diagnostics: Vec::new(),\n             }\n         };"}]}