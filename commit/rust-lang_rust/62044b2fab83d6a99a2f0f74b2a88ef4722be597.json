{"sha": "62044b2fab83d6a99a2f0f74b2a88ef4722be597", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMDQ0YjJmYWI4M2Q2YTk5YTJmMGY3NGIyYTg4ZWY0NzIyYmU1OTc=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-17T17:32:14Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-17T17:32:58Z"}, "message": "Remove remnants of BorrowOfPackedField", "tree": {"sha": "e4bef7ea1f5cb686a6f9193b44b60bd9287b06e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4bef7ea1f5cb686a6f9193b44b60bd9287b06e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62044b2fab83d6a99a2f0f74b2a88ef4722be597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62044b2fab83d6a99a2f0f74b2a88ef4722be597", "html_url": "https://github.com/rust-lang/rust/commit/62044b2fab83d6a99a2f0f74b2a88ef4722be597", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62044b2fab83d6a99a2f0f74b2a88ef4722be597/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dc9ff5c629753b6930ecfe9a0446538b8e25fb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc9ff5c629753b6930ecfe9a0446538b8e25fb7", "html_url": "https://github.com/rust-lang/rust/commit/7dc9ff5c629753b6930ecfe9a0446538b8e25fb7"}], "stats": {"total": 65, "additions": 22, "deletions": 43}, "files": [{"sha": "0edb79fdbc8e86d105cb1f9bd0e26ca8740198f3", "filename": "compiler/rustc_middle/src/mir/query.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/62044b2fab83d6a99a2f0f74b2a88ef4722be597/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62044b2fab83d6a99a2f0f74b2a88ef4722be597/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs?ref=62044b2fab83d6a99a2f0f74b2a88ef4722be597", "patch": "@@ -32,7 +32,6 @@ pub enum UnsafetyViolationDetails {\n     UseOfInlineAssembly,\n     InitializingTypeWith,\n     CastOfPointerToInt,\n-    BorrowOfPackedField,\n     UseOfMutableStatic,\n     UseOfExternStatic,\n     DerefOfRawPointer,\n@@ -64,11 +63,6 @@ impl UnsafetyViolationDetails {\n             CastOfPointerToInt => {\n                 (\"cast of pointer to int\", \"casting pointers to integers in constants\")\n             }\n-            BorrowOfPackedField => (\n-                \"borrow of packed field\",\n-                \"fields of packed structs might be misaligned: dereferencing a misaligned pointer \\\n-                 or even just creating a misaligned reference is undefined behavior\",\n-            ),\n             UseOfMutableStatic => (\n                 \"use of mutable static\",\n                 \"mutable statics can be mutated by multiple threads: aliasing violations or data \\"}, {"sha": "32799cbf4c7dd5ca605d5756829be63b1b9794be", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 22, "deletions": 37, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/62044b2fab83d6a99a2f0f74b2a88ef4722be597/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62044b2fab83d6a99a2f0f74b2a88ef4722be597/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=62044b2fab83d6a99a2f0f74b2a88ef4722be597", "patch": "@@ -64,38 +64,30 @@ impl<'tcx> UnsafetyVisitor<'tcx> {\n             SafetyContext::UnsafeFn if unsafe_op_in_unsafe_fn_allowed => {}\n             SafetyContext::UnsafeFn => {\n                 // unsafe_op_in_unsafe_fn is disallowed\n-                if kind == BorrowOfPackedField {\n-                    // FIXME handle borrows of packed fields\n-                } else {\n-                    struct_span_err!(\n-                        self.tcx.sess,\n-                        span,\n-                        E0133,\n-                        \"{} is unsafe and requires unsafe block\",\n-                        description,\n-                    )\n-                    .span_label(span, description)\n-                    .note(note)\n-                    .emit();\n-                }\n+                struct_span_err!(\n+                    self.tcx.sess,\n+                    span,\n+                    E0133,\n+                    \"{} is unsafe and requires unsafe block\",\n+                    description,\n+                )\n+                .span_label(span, description)\n+                .note(note)\n+                .emit();\n             }\n             SafetyContext::Safe => {\n-                if kind == BorrowOfPackedField {\n-                    // FIXME handle borrows of packed fields\n-                } else {\n-                    let fn_sugg = if unsafe_op_in_unsafe_fn_allowed { \" function or\" } else { \"\" };\n-                    struct_span_err!(\n-                        self.tcx.sess,\n-                        span,\n-                        E0133,\n-                        \"{} is unsafe and requires unsafe{} block\",\n-                        description,\n-                        fn_sugg,\n-                    )\n-                    .span_label(span, description)\n-                    .note(note)\n-                    .emit();\n-                }\n+                let fn_sugg = if unsafe_op_in_unsafe_fn_allowed { \" function or\" } else { \"\" };\n+                struct_span_err!(\n+                    self.tcx.sess,\n+                    span,\n+                    E0133,\n+                    \"{} is unsafe and requires unsafe{} block\",\n+                    description,\n+                    fn_sugg,\n+                )\n+                .span_label(span, description)\n+                .note(note)\n+                .emit();\n             }\n         }\n     }\n@@ -203,8 +195,6 @@ enum UnsafeOpKind {\n     #[allow(dead_code)] // FIXME\n     CastOfPointerToInt,\n     #[allow(dead_code)] // FIXME\n-    BorrowOfPackedField,\n-    #[allow(dead_code)] // FIXME\n     UseOfMutableStatic,\n     #[allow(dead_code)] // FIXME\n     UseOfExternStatic,\n@@ -244,11 +234,6 @@ impl UnsafeOpKind {\n             CastOfPointerToInt => {\n                 (\"cast of pointer to int\", \"casting pointers to integers in constants\")\n             }\n-            BorrowOfPackedField => (\n-                \"borrow of packed field\",\n-                \"fields of packed structs might be misaligned: dereferencing a misaligned pointer \\\n-                 or even just creating a misaligned reference is undefined behavior\",\n-            ),\n             UseOfMutableStatic => (\n                 \"use of mutable static\",\n                 \"mutable statics can be mutated by multiple threads: aliasing violations or data \\"}]}