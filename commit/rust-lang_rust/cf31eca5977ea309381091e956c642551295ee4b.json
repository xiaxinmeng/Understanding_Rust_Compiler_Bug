{"sha": "cf31eca5977ea309381091e956c642551295ee4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzFlY2E1OTc3ZWEzMDkzODEwOTFlOTU2YzY0MjU1MTI5NWVlNGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T00:30:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T00:31:26Z"}, "message": "rustdoc: Write a blank line after headers", "tree": {"sha": "a022a2cab4ab41b276013851818f0c32e7a65d05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a022a2cab4ab41b276013851818f0c32e7a65d05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf31eca5977ea309381091e956c642551295ee4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf31eca5977ea309381091e956c642551295ee4b", "html_url": "https://github.com/rust-lang/rust/commit/cf31eca5977ea309381091e956c642551295ee4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf31eca5977ea309381091e956c642551295ee4b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637f19965f1dbd2d8da2fc79009e0fc4fd069fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/637f19965f1dbd2d8da2fc79009e0fc4fd069fe8", "html_url": "https://github.com/rust-lang/rust/commit/637f19965f1dbd2d8da2fc79009e0fc4fd069fe8"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "fd46cc2b17e1a558d4cb03faa30106b0c69241ae", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cf31eca5977ea309381091e956c642551295ee4b/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf31eca5977ea309381091e956c642551295ee4b/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=cf31eca5977ea309381091e956c642551295ee4b", "patch": "@@ -35,6 +35,7 @@ fn write_markdown(\n fn write_header(ctxt: ctxt, title: str) {\n     let hashes = str::from_chars(vec::init_elt('#', ctxt.depth));\n     ctxt.w.write_line(#fmt(\"%s %s\", hashes, title));\n+    ctxt.w.write_line(\"\");\n }\n \n fn subsection(ctxt: ctxt, f: fn&()) {\n@@ -162,4 +163,14 @@ mod tests {\n         let markdown = write_markdown_str(doc);\n         assert str::contains(markdown, \"## Module `moo`\");\n     }\n+\n+    #[test]\n+    fn should_leave_blank_line_after_header() {\n+        let source = \"mod morp { }\";\n+        let ast = parse::from_str(source);\n+        let doc = extract::extract(ast, \"\");\n+        let markdown = write_markdown_str(doc);\n+        log(error, markdown);\n+        assert str::contains(markdown, \"Module `morp`\\n\");\n+    }\n }\n\\ No newline at end of file"}]}