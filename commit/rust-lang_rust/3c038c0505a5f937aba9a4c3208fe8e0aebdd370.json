{"sha": "3c038c0505a5f937aba9a4c3208fe8e0aebdd370", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMDM4YzA1MDVhNWY5MzdhYmE5YTRjMzIwOGZlOGUwYWViZGQzNzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-27T21:25:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T21:02:59Z"}, "message": "Document emscripten's unwind impl and remove unused function", "tree": {"sha": "48fa7bfe8b806909a0d2e197fdcc171b622b1a1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48fa7bfe8b806909a0d2e197fdcc171b622b1a1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c038c0505a5f937aba9a4c3208fe8e0aebdd370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c038c0505a5f937aba9a4c3208fe8e0aebdd370", "html_url": "https://github.com/rust-lang/rust/commit/3c038c0505a5f937aba9a4c3208fe8e0aebdd370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c038c0505a5f937aba9a4c3208fe8e0aebdd370/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "badfd6200ba199f7535a4e59e7802317951ec9cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/badfd6200ba199f7535a4e59e7802317951ec9cc", "html_url": "https://github.com/rust-lang/rust/commit/badfd6200ba199f7535a4e59e7802317951ec9cc"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "b3ab1117674ca9c014b508752cc988f0d3ca982a", "filename": "src/libpanic_unwind/emcc.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c038c0505a5f937aba9a4c3208fe8e0aebdd370/src%2Flibpanic_unwind%2Femcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c038c0505a5f937aba9a4c3208fe8e0aebdd370/src%2Flibpanic_unwind%2Femcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Femcc.rs?ref=3c038c0505a5f937aba9a4c3208fe8e0aebdd370", "patch": "@@ -8,6 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Unwinding for emscripten\n+//!\n+//! Whereas Rust's usual unwinding implementation for Unix platforms\n+//! calls into the libunwind APIs directly, on emscripten we instead\n+//! call into the C++ unwinding APIs. This is just an expedience since\n+//! emscripten's runtime always implements those APIs and does not\n+//! implement libunwind.\n+\n #![allow(private_no_mangle_fns)]\n \n use core::any::Any;\n@@ -55,12 +63,6 @@ unsafe extern \"C\" fn rust_eh_personality(version: c_int,\n                          context)\n }\n \n-#[lang = \"eh_unwind_resume\"]\n-#[unwind]\n-unsafe extern \"C\" fn rust_eh_unwind_resume(panic_ctx: *mut u8) -> ! {\n-    uw::_Unwind_Resume(panic_ctx as *mut uw::_Unwind_Exception);\n-}\n-\n extern {\n     fn __cxa_allocate_exception(thrown_size: libc::size_t) -> *mut libc::c_void;\n     fn __cxa_free_exception(thrown_exception: *mut libc::c_void);"}]}