{"sha": "677126cac0d59c44d7448cc1e41b1e855380c6b3", "node_id": "C_kwDOAAsO6NoAKDY3NzEyNmNhYzBkNTljNDRkNzQ0OGNjMWU0MWIxZTg1NTM4MGM2YjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-25T04:51:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-25T04:51:12Z"}, "message": "Rollup merge of #93169 - CraftSpider:rustdoc-clean-inconsistency, r=GuillaumeGomez\n\nFix inconsistency of local blanket impls\n\nWhen a blanket impl is local, go through HIR instead of middle. This fixes inconsistencies with data detected during JSON generation.\n\nExpected this change to take longer. I also tried doing the whole item through existing clean architecture, but it didn't work out trivially, and felt like it would have added more complexity than it removed.\n\nProperly fixes #83718", "tree": {"sha": "1c88d331c261627110b8f8181f8cd9823221ce6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c88d331c261627110b8f8181f8cd9823221ce6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/677126cac0d59c44d7448cc1e41b1e855380c6b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh74HACRBK7hj4Ov3rIwAA6pIIAFPjduwEbRVfhJj7OxD2Hf8T\n5Dzv0lL3Qfe1ETZ+QS373GJiU4MzOuHOYnCP18mgOnt74Mh3bDfzn5mRp3lLVdnl\ns9wvgK1HkDXCstbdY//XuruLCrjRL36j1OINcoixfMu4MaFiGKEpTs+2mmA1r4vF\nsVNMXnd471Vi53Tehu9f6/VUMQEp0QfHDaSYWk2Nf1PdjfOZho9SJJkmPK23I5ib\ngYQNJTVjJJ4is3ucjpSfPol6AmhLNoO3QQyS+seoYdFfYqUK4z6IsRP05++/pBgL\n5fd2B7FWG7hUy+Lh/DG9kEOpeNM29N8hrZszbIWa75BhOQBP+Cs3xS6JULerfIs=\n=yPZv\n-----END PGP SIGNATURE-----\n", "payload": "tree 1c88d331c261627110b8f8181f8cd9823221ce6d\nparent 8dddc8647731efb6d7f40b176bccdba5cebe46f2\nparent 92206318bc0ca743507367e492aaaa3c6660dbfb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643086272 +0100\ncommitter GitHub <noreply@github.com> 1643086272 +0100\n\nRollup merge of #93169 - CraftSpider:rustdoc-clean-inconsistency, r=GuillaumeGomez\n\nFix inconsistency of local blanket impls\n\nWhen a blanket impl is local, go through HIR instead of middle. This fixes inconsistencies with data detected during JSON generation.\n\nExpected this change to take longer. I also tried doing the whole item through existing clean architecture, but it didn't work out trivially, and felt like it would have added more complexity than it removed.\n\nProperly fixes #83718\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/677126cac0d59c44d7448cc1e41b1e855380c6b3", "html_url": "https://github.com/rust-lang/rust/commit/677126cac0d59c44d7448cc1e41b1e855380c6b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/677126cac0d59c44d7448cc1e41b1e855380c6b3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dddc8647731efb6d7f40b176bccdba5cebe46f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dddc8647731efb6d7f40b176bccdba5cebe46f2", "html_url": "https://github.com/rust-lang/rust/commit/8dddc8647731efb6d7f40b176bccdba5cebe46f2"}, {"sha": "92206318bc0ca743507367e492aaaa3c6660dbfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/92206318bc0ca743507367e492aaaa3c6660dbfb", "html_url": "https://github.com/rust-lang/rust/commit/92206318bc0ca743507367e492aaaa3c6660dbfb"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "75ee663b926c49378b437cdc98b7059d6261dde9", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/677126cac0d59c44d7448cc1e41b1e855380c6b3/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/677126cac0d59c44d7448cc1e41b1e855380c6b3/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=677126cac0d59c44d7448cc1e41b1e855380c6b3", "patch": "@@ -101,6 +101,27 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n \n                     cx.generated_synthetics.insert((ty, trait_def_id));\n \n+                    let hir_imp = impl_def_id.as_local()\n+                        .map(|local| cx.tcx.hir().expect_item(local))\n+                        .and_then(|item| if let hir::ItemKind::Impl(i) = &item.kind {\n+                            Some(i)\n+                        } else {\n+                            None\n+                        });\n+\n+                    let items = match hir_imp {\n+                        Some(imp) => imp\n+                            .items\n+                            .iter()\n+                            .map(|ii| cx.tcx.hir().impl_item(ii.id).clean(cx))\n+                            .collect::<Vec<_>>(),\n+                        None => cx.tcx\n+                            .associated_items(impl_def_id)\n+                            .in_definition_order()\n+                            .map(|x| x.clean(cx))\n+                            .collect::<Vec<_>>(),\n+                    };\n+\n                     impls.push(Item {\n                         name: None,\n                         attrs: Default::default(),\n@@ -117,12 +138,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                             // the post-inference `trait_ref`, as it's more accurate.\n                             trait_: Some(trait_ref.clean(cx)),\n                             for_: ty.clean(cx),\n-                            items: cx\n-                                .tcx\n-                                .associated_items(impl_def_id)\n-                                .in_definition_order()\n-                                .map(|x| x.clean(cx))\n-                                .collect::<Vec<_>>(),\n+                            items,\n                             polarity: ty::ImplPolarity::Positive,\n                             kind: ImplKind::Blanket(box trait_ref.self_ty().clean(cx)),\n                         }),"}, {"sha": "f9e9fe0d3cf201d7aaae3937650af957ff6c54ed", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/677126cac0d59c44d7448cc1e41b1e855380c6b3/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/677126cac0d59c44d7448cc1e41b1e855380c6b3/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=677126cac0d59c44d7448cc1e41b1e855380c6b3", "patch": "@@ -172,21 +172,8 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// the hashmap because certain items (traits and types) need to have their mappings for trait\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n-        let local_blanket_impl = match item.def_id {\n-            clean::ItemId::Blanket { impl_id, .. } => impl_id.is_local(),\n-            clean::ItemId::Auto { .. }\n-            | clean::ItemId::DefId(_)\n-            | clean::ItemId::Primitive(_, _) => false,\n-        };\n-\n         // Flatten items that recursively store other items\n-        // FIXME(CraftSpider): We skip children of local blanket implementations, as we'll have\n-        //     already seen the actual generic impl, and the generated ones don't need documenting.\n-        //     This is necessary due to the visibility, return type, and self arg of the generated\n-        //     impls not quite matching, and will no longer be necessary when the mismatch is fixed.\n-        if !local_blanket_impl {\n-            item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n-        }\n+        item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n \n         let id = item.def_id;\n         if let Some(mut new_item) = self.convert_item(item) {"}, {"sha": "a3d55b35f0018ad7fb412746efcfb21ca152ab25", "filename": "src/test/rustdoc-json/impls/blanket_with_local.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/677126cac0d59c44d7448cc1e41b1e855380c6b3/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/677126cac0d59c44d7448cc1e41b1e855380c6b3/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs?ref=677126cac0d59c44d7448cc1e41b1e855380c6b3", "patch": "@@ -3,11 +3,15 @@\n \n // @has blanket_with_local.json \"$.index[*][?(@.name=='Load')]\"\n pub trait Load {\n+    // @has - \"$.index[*][?(@.name=='load')]\"\n     fn load() {}\n+    // @has - \"$.index[*][?(@.name=='write')]\"\n+    fn write(self) {}\n }\n \n impl<P> Load for P {\n     fn load() {}\n+    fn write(self) {}\n }\n \n // @has - \"$.index[*][?(@.name=='Wrapper')]\""}]}