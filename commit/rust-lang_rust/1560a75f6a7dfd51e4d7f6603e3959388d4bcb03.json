{"sha": "1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NjBhNzVmNmE3ZGZkNTFlNGQ3ZjY2MDNlMzk1OTM4OGQ0YmNiMDM=", "commit": {"author": {"name": "Daan de Graaf", "email": "daandegraaf9@gmail.com", "date": "2018-11-30T13:55:51Z"}, "committer": {"name": "Daan de Graaf", "email": "daandegraaf9@gmail.com", "date": "2018-11-30T13:55:51Z"}, "message": "Refer to the second borrow as the \"second borrow\".", "tree": {"sha": "181a530c0ef9dfed638413084e8eb39aca2fe2c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/181a530c0ef9dfed638413084e8eb39aca2fe2c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "html_url": "https://github.com/rust-lang/rust/commit/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/comments", "author": {"login": "wildarch", "id": 8987615, "node_id": "MDQ6VXNlcjg5ODc2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8987615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wildarch", "html_url": "https://github.com/wildarch", "followers_url": "https://api.github.com/users/wildarch/followers", "following_url": "https://api.github.com/users/wildarch/following{/other_user}", "gists_url": "https://api.github.com/users/wildarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/wildarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wildarch/subscriptions", "organizations_url": "https://api.github.com/users/wildarch/orgs", "repos_url": "https://api.github.com/users/wildarch/repos", "events_url": "https://api.github.com/users/wildarch/events{/privacy}", "received_events_url": "https://api.github.com/users/wildarch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wildarch", "id": 8987615, "node_id": "MDQ6VXNlcjg5ODc2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8987615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wildarch", "html_url": "https://github.com/wildarch", "followers_url": "https://api.github.com/users/wildarch/followers", "following_url": "https://api.github.com/users/wildarch/following{/other_user}", "gists_url": "https://api.github.com/users/wildarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/wildarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wildarch/subscriptions", "organizations_url": "https://api.github.com/users/wildarch/orgs", "repos_url": "https://api.github.com/users/wildarch/repos", "events_url": "https://api.github.com/users/wildarch/events{/privacy}", "received_events_url": "https://api.github.com/users/wildarch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e90a12a8a95933604a8b609197fce61bb24a38c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e90a12a8a95933604a8b609197fce61bb24a38c", "html_url": "https://github.com/rust-lang/rust/commit/3e90a12a8a95933604a8b609197fce61bb24a38c"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "e47e95afb16434690860158a6abf674e56a296f9", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -615,7 +615,7 @@ impl<'a, 'tcx> CheckLoanCtxt<'a, 'tcx> {\n                     let new_loan_str = &new_loan.kind.to_user_str();\n                     self.bccx.cannot_reborrow_already_uniquely_borrowed(\n                         new_loan.span, \"closure\", &nl, &new_loan_msg, new_loan_str,\n-                        old_loan.span, &old_loan_msg, previous_end_span, Origin::Ast)\n+                        old_loan.span, &old_loan_msg, previous_end_span, \"\", Origin::Ast)\n                 }\n                 (..) =>\n                     self.bccx.cannot_reborrow_already_borrowed("}, {"sha": "ba26ed36c20f4a6f5749592f22c0c403395cbdeb", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -344,6 +344,13 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n \n         let first_borrow_desc;\n \n+        let explanation = self.explain_why_borrow_contains_point(context, issued_borrow, None);\n+        let second_borrow_desc = if explanation.is_explained() {\n+            \"second \"\n+        } else {\n+            \"\"\n+        };\n+\n         // FIXME: supply non-\"\" `opt_via` when appropriate\n         let mut err = match (\n             gen_borrow_kind,\n@@ -454,6 +461,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     issued_span,\n                     \"\",\n                     None,\n+                    second_borrow_desc,\n                     Origin::Mir,\n                 )\n             }\n@@ -469,6 +477,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     issued_span,\n                     \"\",\n                     None,\n+                    second_borrow_desc,\n                     Origin::Mir,\n                 )\n             }\n@@ -513,7 +522,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             );\n         }\n \n-        self.explain_why_borrow_contains_point(context, issued_borrow, None)\n+        explanation\n             .add_explanation_to_diagnostic(self.infcx.tcx, self.mir, &mut err, first_borrow_desc);\n \n         err.buffer(&mut self.errors_buffer);"}, {"sha": "477b78926084e86d0efa701f2b66ba47519bbca3", "filename": "src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -52,6 +52,12 @@ pub(in borrow_check) enum LaterUseKind {\n }\n \n impl BorrowExplanation {\n+    pub(in borrow_check) fn is_explained(&self) -> bool {\n+        match self {\n+            BorrowExplanation::Unexplained => false,\n+            _ => true,\n+        }\n+    }\n     pub(in borrow_check) fn add_explanation_to_diagnostic<'cx, 'gcx, 'tcx>(\n         &self,\n         tcx: TyCtxt<'cx, 'gcx, 'tcx>,"}, {"sha": "8566f845f23e3b922e096f9ff1e73cfb17f0c1c4", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -261,6 +261,7 @@ pub trait BorrowckErrors<'cx>: Sized + Copy {\n         old_loan_span: Span,\n         old_opt_via: &str,\n         previous_end_span: Option<Span>,\n+        second_borrow_desc: &str,\n         o: Origin,\n     ) -> DiagnosticBuilder<'cx> {\n         let mut err = struct_span_err!(\n@@ -274,7 +275,10 @@ pub trait BorrowckErrors<'cx>: Sized + Copy {\n             kind_new,\n             OGN = o\n         );\n-        err.span_label(new_loan_span, format!(\"borrow occurs here{}\", opt_via));\n+        err.span_label(\n+            new_loan_span,\n+            format!(\"{}borrow occurs here{}\", second_borrow_desc, opt_via),\n+        );\n         err.span_label(\n             old_loan_span,\n             format!(\"{} construction occurs here{}\", container_name, old_opt_via),"}, {"sha": "8a3fce3a554ebb2a900b817a31f1f599361156d1", "filename": "src/test/ui/E0501.ast.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2FE0501.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2FE0501.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0501.ast.nll.stderr?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -7,7 +7,7 @@ LL |         inside_closure(a)\n    |                        - first borrow occurs due to use of `a` in closure\n LL |     };\n LL |     outside_closure_1(a); //[ast]~ ERROR cannot borrow `*a` as mutable because previous closure requires unique access\n-   |                       ^ borrow occurs here\n+   |                       ^ second borrow occurs here\n ...\n LL |     drop(bar);\n    |          --- first borrow later used here\n@@ -21,7 +21,7 @@ LL |         inside_closure(a)\n    |                        - first borrow occurs due to use of `a` in closure\n ...\n LL |     outside_closure_2(a); //[ast]~ ERROR cannot borrow `*a` as immutable because previous closure requires unique access\n-   |                       ^ borrow occurs here\n+   |                       ^ second borrow occurs here\n ...\n LL |     drop(bar);\n    |          --- first borrow later used here"}, {"sha": "8a3fce3a554ebb2a900b817a31f1f599361156d1", "filename": "src/test/ui/E0501.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2FE0501.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2FE0501.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0501.mir.stderr?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -7,7 +7,7 @@ LL |         inside_closure(a)\n    |                        - first borrow occurs due to use of `a` in closure\n LL |     };\n LL |     outside_closure_1(a); //[ast]~ ERROR cannot borrow `*a` as mutable because previous closure requires unique access\n-   |                       ^ borrow occurs here\n+   |                       ^ second borrow occurs here\n ...\n LL |     drop(bar);\n    |          --- first borrow later used here\n@@ -21,7 +21,7 @@ LL |         inside_closure(a)\n    |                        - first borrow occurs due to use of `a` in closure\n ...\n LL |     outside_closure_2(a); //[ast]~ ERROR cannot borrow `*a` as immutable because previous closure requires unique access\n-   |                       ^ borrow occurs here\n+   |                       ^ second borrow occurs here\n ...\n LL |     drop(bar);\n    |          --- first borrow later used here"}, {"sha": "84fc69465cb4a4549c28efaca11a8c53b34fceab", "filename": "src/test/ui/borrowck/borrowck-insert-during-each.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-insert-during-each.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-insert-during-each.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-insert-during-each.nll.stderr?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -10,7 +10,7 @@ LL | |         |a| { //~ ERROR closure requires unique access to `f`\n LL | |             f.n.insert(*a);\n    | |             - first borrow occurs due to use of `f` in closure\n LL | |         })\n-   | |__________^ borrow occurs here\n+   | |__________^ second borrow occurs here\n \n error[E0500]: closure requires unique access to `f` but it is already borrowed\n   --> $DIR/borrowck-insert-during-each.rs:27:9"}, {"sha": "60163d78e78f9444b97c799c57f65d3a806a2d32", "filename": "src/test/ui/generator/yield-while-ref-reborrowed.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-ref-reborrowed.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-ref-reborrowed.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-ref-reborrowed.nll.stderr?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -7,7 +7,7 @@ LL |         let a = &mut *x;\n    |                       - first borrow occurs due to use of `x` in generator\n ...\n LL |     println!(\"{}\", x); //~ ERROR\n-   |                    ^ borrow occurs here\n+   |                    ^ second borrow occurs here\n LL |     b.resume();\n    |     - first borrow later used here\n "}, {"sha": "98a261657b1e772bf9bf617752b78095a41981b8", "filename": "src/test/ui/nll/closure-borrow-spans.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2Fnll%2Fclosure-borrow-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1560a75f6a7dfd51e4d7f6603e3959388d4bcb03/src%2Ftest%2Fui%2Fnll%2Fclosure-borrow-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-borrow-spans.stderr?ref=1560a75f6a7dfd51e4d7f6603e3959388d4bcb03", "patch": "@@ -126,7 +126,7 @@ LL |     let f = || *x = 0;\n    |             |\n    |             closure construction occurs here\n LL |     let y = &x; //~ ERROR\n-   |             ^^ borrow occurs here\n+   |             ^^ second borrow occurs here\n LL |     f.use_ref();\n    |     - first borrow later used here\n \n@@ -138,7 +138,7 @@ LL |     let f = || *x = 0;\n    |             |\n    |             closure construction occurs here\n LL |     let y = &mut x; //~ ERROR\n-   |             ^^^^^^ borrow occurs here\n+   |             ^^^^^^ second borrow occurs here\n LL |     f.use_ref();\n    |     - first borrow later used here\n "}]}