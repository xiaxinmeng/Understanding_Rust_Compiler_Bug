{"sha": "05e1f0d7691860e44e87595e8a6a572f7c14d605", "node_id": "C_kwDOAAsO6NoAKDA1ZTFmMGQ3NjkxODYwZTQ0ZTg3NTk1ZThhNmE1NzJmN2MxNGQ2MDU", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-01-13T23:31:36Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-01-13T23:38:03Z"}, "message": "Generate more precise generator names\n\nCurrently all generators are named with a `generator$N` suffix,\nregardless of where they come from. This means an `async fn` shows up as\na generator in stack traces, which can be surprising to async\nprogrammers since they should not need to know that async functions are\nimplementated using generators.\n\nThis change generators a different name depending on the generator kind,\nallowing us to tell whether the generator is the result of an async\nblock, an async closure, an async fn, or a plain generator.", "tree": {"sha": "bf9e562383f3e24ca72d7b89be1c794050df5283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf9e562383f3e24ca72d7b89be1c794050df5283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05e1f0d7691860e44e87595e8a6a572f7c14d605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05e1f0d7691860e44e87595e8a6a572f7c14d605", "html_url": "https://github.com/rust-lang/rust/commit/05e1f0d7691860e44e87595e8a6a572f7c14d605", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05e1f0d7691860e44e87595e8a6a572f7c14d605/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22e491ac7ed454d34669151a8b6464cb643c9b41", "url": "https://api.github.com/repos/rust-lang/rust/commits/22e491ac7ed454d34669151a8b6464cb643c9b41", "html_url": "https://github.com/rust-lang/rust/commit/22e491ac7ed454d34669151a8b6464cb643c9b41"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "61322a6e556ed02cd418b28793035f0dc1b649ad", "filename": "compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/05e1f0d7691860e44e87595e8a6a572f7c14d605/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05e1f0d7691860e44e87595e8a6a572f7c14d605/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs?ref=05e1f0d7691860e44e87595e8a6a572f7c14d605", "patch": "@@ -519,12 +519,18 @@ fn push_unqualified_item_name(\n             output.push_str(tcx.crate_name(def_id.krate).as_str());\n         }\n         DefPathData::ClosureExpr if tcx.generator_kind(def_id).is_some() => {\n+            let key = match tcx.generator_kind(def_id).unwrap() {\n+                hir::GeneratorKind::Async(hir::AsyncGeneratorKind::Block) => \"async_block\",\n+                hir::GeneratorKind::Async(hir::AsyncGeneratorKind::Closure) => \"async_closure\",\n+                hir::GeneratorKind::Async(hir::AsyncGeneratorKind::Fn) => \"async_fn\",\n+                hir::GeneratorKind::Gen => \"generator\",\n+            };\n             // Generators look like closures, but we want to treat them differently\n             // in the debug info.\n             if cpp_like_debuginfo(tcx) {\n-                write!(output, \"generator${}\", disambiguated_data.disambiguator).unwrap();\n+                write!(output, \"{}${}\", key, disambiguated_data.disambiguator).unwrap();\n             } else {\n-                write!(output, \"{{generator#{}}}\", disambiguated_data.disambiguator).unwrap();\n+                write!(output, \"{{{}#{}}}\", key, disambiguated_data.disambiguator).unwrap();\n             }\n         }\n         _ => match disambiguated_data.data.name() {"}, {"sha": "bb0db9d3d8514bdfa0158316329075579ec626ef", "filename": "src/test/codegen/async-fn-debug-msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05e1f0d7691860e44e87595e8a6a572f7c14d605/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05e1f0d7691860e44e87595e8a6a572f7c14d605/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs?ref=05e1f0d7691860e44e87595e8a6a572f7c14d605", "patch": "@@ -17,7 +17,7 @@ async fn async_fn_test() {\n // FIXME: No way to reliably check the filename.\n \n // CHECK-DAG:  [[ASYNC_FN:!.*]] = !DINamespace(name: \"async_fn_test\"\n-// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"generator$0\"\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"async_fn$0\"\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant0\", scope: [[GEN]],\n // For brevity, we only check the struct name and members of the last variant.\n // CHECK-SAME: file: [[FILE:![0-9]*]], line: 11,"}]}