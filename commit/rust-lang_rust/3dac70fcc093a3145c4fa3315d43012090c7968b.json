{"sha": "3dac70fcc093a3145c4fa3315d43012090c7968b", "node_id": "C_kwDOAAsO6NoAKDNkYWM3MGZjYzA5M2EzMTQ1YzRmYTMzMTVkNDMwMTIwOTBjNzk2OGI", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-05-04T06:27:12Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-05-06T02:04:30Z"}, "message": "typeck: port \"unconstrained opaque type\" diag\n\nPort the \"unconstrained opaque type\" diagnostic to using the diagnostic\nderive.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "901a04d1d4f00c1236cf9dbefb96bcfa87e7106f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/901a04d1d4f00c1236cf9dbefb96bcfa87e7106f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dac70fcc093a3145c4fa3315d43012090c7968b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dac70fcc093a3145c4fa3315d43012090c7968b", "html_url": "https://github.com/rust-lang/rust/commit/3dac70fcc093a3145c4fa3315d43012090c7968b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dac70fcc093a3145c4fa3315d43012090c7968b/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74cea9fdb9ca77d4104df5c28124817004ead6a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/74cea9fdb9ca77d4104df5c28124817004ead6a3", "html_url": "https://github.com/rust-lang/rust/commit/74cea9fdb9ca77d4104df5c28124817004ead6a3"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "80eacd41add3c7a629643cfd84bfbc950cc455a2", "filename": "compiler/rustc_error_messages/locales/en-US/typeck.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3dac70fcc093a3145c4fa3315d43012090c7968b/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/3dac70fcc093a3145c4fa3315d43012090c7968b/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl?ref=3dac70fcc093a3145c4fa3315d43012090c7968b", "patch": "@@ -90,3 +90,6 @@ typeck-add-return-type-missing-here = a return type might be missing here\n typeck-expected-default-return-type = expected `()` because of default return type\n \n typeck-expected-return-type = expected `{$expected}` because of return type\n+\n+typeck-unconstrained-opaque-type = unconstrained opaque type\n+    .note = `{$name}` must be used in combination with a concrete type within the same module"}, {"sha": "e37e0c91de46c4608f91ebc61ab5993bf3067273", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3dac70fcc093a3145c4fa3315d43012090c7968b/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dac70fcc093a3145c4fa3315d43012090c7968b/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=3dac70fcc093a3145c4fa3315d43012090c7968b", "patch": "@@ -14,6 +14,7 @@ use rustc_span::{Span, DUMMY_SP};\n \n use super::ItemCtxt;\n use super::{bad_placeholder, is_suggestable_infer_ty};\n+use crate::errors::UnconstrainedOpaqueType;\n \n /// Computes the relevant generic parameter for a potential generic const argument.\n ///\n@@ -682,13 +683,10 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Ty<'_> {\n     match locator.found {\n         Some(hidden) => hidden.ty,\n         None => {\n-            let span = tcx.def_span(def_id);\n-            let name = tcx.item_name(tcx.local_parent(def_id).to_def_id());\n-            let label = format!(\n-                \"`{}` must be used in combination with a concrete type within the same module\",\n-                name\n-            );\n-            tcx.sess.struct_span_err(span, \"unconstrained opaque type\").note(&label).emit();\n+            tcx.sess.emit_err(UnconstrainedOpaqueType {\n+                span: tcx.def_span(def_id),\n+                name: tcx.item_name(tcx.local_parent(def_id).to_def_id()),\n+            });\n             tcx.ty_error()\n         }\n     }"}, {"sha": "10c0fcd6bcec59228470c12077f180dd1e66dde1", "filename": "compiler/rustc_typeck/src/errors.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3dac70fcc093a3145c4fa3315d43012090c7968b/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dac70fcc093a3145c4fa3315d43012090c7968b/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs?ref=3dac70fcc093a3145c4fa3315d43012090c7968b", "patch": "@@ -228,3 +228,12 @@ pub enum ExpectedReturnTypeLabel<'tcx> {\n         expected: Ty<'tcx>,\n     },\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(slug = \"typeck-unconstrained-opaque-type\")]\n+#[note]\n+pub struct UnconstrainedOpaqueType {\n+    #[primary_span]\n+    pub span: Span,\n+    pub name: Symbol,\n+}"}]}