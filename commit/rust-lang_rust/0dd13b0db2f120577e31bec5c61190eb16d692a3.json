{"sha": "0dd13b0db2f120577e31bec5c61190eb16d692a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZDEzYjBkYjJmMTIwNTc3ZTMxYmVjNWM2MTE5MGViMTZkNjkyYTM=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2016-07-13T07:59:35Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2016-07-13T07:59:35Z"}, "message": "Change floating point constant to mem::transmute u64 comparison", "tree": {"sha": "04476d5460fb3bebac598612769e3ba8f26fd604", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04476d5460fb3bebac598612769e3ba8f26fd604"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dd13b0db2f120577e31bec5c61190eb16d692a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd13b0db2f120577e31bec5c61190eb16d692a3", "html_url": "https://github.com/rust-lang/rust/commit/0dd13b0db2f120577e31bec5c61190eb16d692a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dd13b0db2f120577e31bec5c61190eb16d692a3/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "html_url": "https://github.com/rust-lang/rust/commit/8907cbc0b864c6c4dca3534bf494d25a038fa7f0"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "9ed37e70a01de76e76535f71166cb6aefbb96f4f", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0dd13b0db2f120577e31bec5c61190eb16d692a3/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dd13b0db2f120577e31bec5c61190eb16d692a3/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=0dd13b0db2f120577e31bec5c61190eb16d692a3", "patch": "@@ -92,8 +92,10 @@ impl PartialEq for Constant {\n                 // we want `Fw32 == FwAny` and `FwAny == Fw64`, by transitivity we must have\n                 // `Fw32 == Fw64` so don\u2019t compare them\n                 match (ls.parse::<f64>(), rs.parse::<f64>()) {\n-                    (Ok(l), Ok(r)) => l.eq(&r) &&\n-                        (l.is_sign_positive() == r.is_sign_positive()), // needed for 0.0 != -0.0\n+                    // mem::transmute is required to catch non-matching 0.0, -0.0, and NaNs\n+                    (Ok(l), Ok(r)) => unsafe {\n+                        mem::transmute::<f64, u64>(l) == mem::transmute::<f64, u64>(r)\n+                    },\n                     _ => false,\n                 }\n             }"}]}