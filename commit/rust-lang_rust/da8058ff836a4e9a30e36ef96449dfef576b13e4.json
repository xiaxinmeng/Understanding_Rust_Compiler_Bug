{"sha": "da8058ff836a4e9a30e36ef96449dfef576b13e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhODA1OGZmODM2YTRlOWEzMGUzNmVmOTY0NDlkZmVmNTc2YjEzZTQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-03T21:43:47Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-03T21:44:15Z"}, "message": "Handle native types in calls.", "tree": {"sha": "1ed51af917456ed5c41df82d7228d0c103cadf53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ed51af917456ed5c41df82d7228d0c103cadf53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da8058ff836a4e9a30e36ef96449dfef576b13e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da8058ff836a4e9a30e36ef96449dfef576b13e4", "html_url": "https://github.com/rust-lang/rust/commit/da8058ff836a4e9a30e36ef96449dfef576b13e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da8058ff836a4e9a30e36ef96449dfef576b13e4/comments", "author": null, "committer": null, "parents": [{"sha": "fae6870d05683e372dd13ec9849dab0b55a66fb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae6870d05683e372dd13ec9849dab0b55a66fb8", "html_url": "https://github.com/rust-lang/rust/commit/fae6870d05683e372dd13ec9849dab0b55a66fb8"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "7e463ae96462ca2c0c11ec42bff52dd82a83c110", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da8058ff836a4e9a30e36ef96449dfef576b13e4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8058ff836a4e9a30e36ef96449dfef576b13e4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=da8058ff836a4e9a30e36ef96449dfef576b13e4", "patch": "@@ -1445,6 +1445,7 @@ fn make_drop_glue(@block_ctxt cx, ValueRef v, @ty.t t) -> result {\n                                        bind drop_ty(_, _, _));\n \n             } else if (ty.type_is_scalar(t) ||\n+                       ty.type_is_native(t) ||\n                        ty.type_is_nil(t)) {\n                 ret res(cx, C_nil());\n             }\n@@ -1927,7 +1928,7 @@ fn copy_ty(@block_ctxt cx,\n            ValueRef dst,\n            ValueRef src,\n            @ty.t t) -> result {\n-    if (ty.type_is_scalar(t)) {\n+    if (ty.type_is_scalar(t) || ty.type_is_native(t)) {\n         ret res(cx, cx.build.Store(src, dst));\n \n     } else if (ty.type_is_nil(t)) {\n@@ -3795,7 +3796,7 @@ fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n fn load_scalar_or_boxed(@block_ctxt cx,\n                         ValueRef v,\n                         @ty.t t) -> ValueRef {\n-    if (ty.type_is_scalar(t) || ty.type_is_boxed(t)) {\n+    if (ty.type_is_scalar(t) || ty.type_is_boxed(t) || ty.type_is_native(t)) {\n         ret cx.build.Load(v);\n     } else {\n         ret v;"}, {"sha": "c85892f2a9016c053b3f4e28e028781cd16dbdbd", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/da8058ff836a4e9a30e36ef96449dfef576b13e4/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8058ff836a4e9a30e36ef96449dfef576b13e4/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=da8058ff836a4e9a30e36ef96449dfef576b13e4", "patch": "@@ -465,6 +465,16 @@ fn type_is_scalar(@t ty) -> bool {\n     fail;\n }\n \n+// FIXME: should we just return true for native types in\n+// type_is_scalar?\n+fn type_is_native(@t ty) -> bool {\n+    alt (ty.struct) {\n+        case (ty_native) { ret true; }\n+        case (_) { ret false; }\n+    }\n+    fail;\n+}\n+\n fn type_has_dynamic_size(@t ty) -> bool {\n     alt (ty.struct) {\n         case (ty_tup(?ts)) {"}]}