{"sha": "ca48d1566ed54b7dd1718dfe877ef24711078538", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNDhkMTU2NmVkNTRiN2RkMTcxOGRmZTg3N2VmMjQ3MTEwNzg1Mzg=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-03-04T23:45:57Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-03-06T20:50:28Z"}, "message": "Add roundtrip testing and bump format version", "tree": {"sha": "a0c1eb58725e6bdde3029e874cc9a017454cedb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0c1eb58725e6bdde3029e874cc9a017454cedb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca48d1566ed54b7dd1718dfe877ef24711078538", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmBD6xQACgkQfsyTL4ss\ncx7IYRAAwUWEKy74sWy998QXKruBRfdmiGtR+Qd4+8FjujfRMU6bgkF39gfxuYX0\nduRj1pMARFjCLDrwOPGlOXYQXqaGQN0caE7CEROJZS0VJdTuaaoOLnzrswuVvZZl\nMCVOgLoa95mNeS3PBfV4TO8boKybpVH+KAE1YeM3JvAYk6BRStI/+Rn6prv/ZgfJ\nIlNkF/kQzXobBSceC1Ei491ZQRKgjLdsAI4nuZ84xbxK0kH5P5GKZtwKv/lFrVsm\nLoLDvTnaZkMquWusLHBbvUrZJ32z613y6nGUvtR3LTLHVvYZcLHOXznvH/2vPwJL\nYBO/uPe24z7ULhwB1tsnby+i0hakVhulWQmz0Dkgg4oFLnEsjk5N0EWuJiV6ZVds\n1+EHLS7++0t9FLNB5/zglufycsxDFoFdnraw5zb/txXG0LdscAApRdrxl8FRZ+R+\nQuSnUc0g60GQOQA916RQbd0B75ocBMh06cIiYhlJ3NQqt+0uZ5Xcm19+Kdkyt7Es\nMJ7DwwAMO36vpVO+/19TUPeUdQZCKInbWrA4MFlUuNtDu1a4kwPLu2Sw70qtmI0c\nngVVvTnXZTeNVlmNszDZKDI9NQNoSAs33FJjIUUifqg/3NU/DKuR16yrVNHd4EeZ\nAPmRLGw7GeJ9vDAcsr9YvEnMDmYrpDeNOqnAlYrIe1/0zQsYqdo=\n=A13J\n-----END PGP SIGNATURE-----", "payload": "tree a0c1eb58725e6bdde3029e874cc9a017454cedb9\nparent cf5246915b838b49778bc25cc68e8b1863a05362\nauthor Rune Tynan <runetynan@gmail.com> 1614901557 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1615063828 -0500\n\nAdd roundtrip testing and bump format version\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca48d1566ed54b7dd1718dfe877ef24711078538", "html_url": "https://github.com/rust-lang/rust/commit/ca48d1566ed54b7dd1718dfe877ef24711078538", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca48d1566ed54b7dd1718dfe877ef24711078538/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf5246915b838b49778bc25cc68e8b1863a05362", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf5246915b838b49778bc25cc68e8b1863a05362", "html_url": "https://github.com/rust-lang/rust/commit/cf5246915b838b49778bc25cc68e8b1863a05362"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "955f96d690308c0abb5e4934ebbe99de4b3b0280", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca48d1566ed54b7dd1718dfe877ef24711078538/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ca48d1566ed54b7dd1718dfe877ef24711078538/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ca48d1566ed54b7dd1718dfe877ef24711078538", "patch": "@@ -1,5 +1,7 @@\n # This file is automatically @generated by Cargo.\n # It is not intended for manual editing.\n+version = 3\n+\n [[package]]\n name = \"addr2line\"\n version = \"0.14.0\"\n@@ -4568,6 +4570,7 @@ name = \"rustdoc-json-types\"\n version = \"0.1.0\"\n dependencies = [\n  \"serde\",\n+ \"serde_json\",\n ]\n \n [[package]]"}, {"sha": "2302dfdc80a841cd6c1d1b868532e891aaf1179c", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca48d1566ed54b7dd1718dfe877ef24711078538/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca48d1566ed54b7dd1718dfe877ef24711078538/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=ca48d1566ed54b7dd1718dfe877ef24711078538", "patch": "@@ -242,7 +242,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n                     )\n                 })\n                 .collect(),\n-            format_version: 4,\n+            format_version: 5,\n         };\n         let mut p = self.out_path.clone();\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());"}, {"sha": "9c02d5e645bfe405b5346dcc37e877d88f986d39", "filename": "src/rustdoc-json-types/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca48d1566ed54b7dd1718dfe877ef24711078538/src%2Frustdoc-json-types%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ca48d1566ed54b7dd1718dfe877ef24711078538/src%2Frustdoc-json-types%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2FCargo.toml?ref=ca48d1566ed54b7dd1718dfe877ef24711078538", "patch": "@@ -9,3 +9,6 @@ path = \"lib.rs\"\n \n [dependencies]\n serde = { version = \"1.0\", features = [\"derive\"] }\n+\n+[dev-dependencies]\n+serde_json = \"1.0\""}, {"sha": "e898a01dfaf85420e18dfe97502291ea4bf9ab08", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ca48d1566ed54b7dd1718dfe877ef24711078538/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca48d1566ed54b7dd1718dfe877ef24711078538/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=ca48d1566ed54b7dd1718dfe877ef24711078538", "patch": "@@ -508,3 +508,47 @@ pub struct Static {\n     pub mutable: bool,\n     pub expr: String,\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn test_struct_info_roundtrip() {\n+        let s = ItemEnum::Struct(Struct {\n+            struct_type: StructType::Plain,\n+            generics: Generics {\n+                params: vec![],\n+                where_predicates: vec![]\n+            },\n+            fields_stripped: false,\n+            fields: vec![],\n+            impls: vec![],\n+        });\n+\n+        let struct_json = serde_json::to_string(&s).unwrap();\n+\n+        let de_s = serde_json::from_str(&struct_json).unwrap();\n+\n+        assert_eq!(s, de_s);\n+    }\n+\n+    #[test]\n+    fn test_union_info_roundtrip() {\n+        let u = ItemEnum::Union(Union {\n+            generics: Generics {\n+                params: vec![],\n+                where_predicates: vec![]\n+            },\n+            fields_stripped: false,\n+            fields: vec![],\n+            impls: vec![],\n+        });\n+\n+        let union_json = serde_json::to_string(&u).unwrap();\n+\n+        let de_u = serde_json::from_str(&union_json).unwrap();\n+\n+        assert_eq!(u, de_u);\n+    }\n+}"}]}