{"sha": "03148ff735c561629c7e880383d3e0d44eebf738", "node_id": "C_kwDOAAsO6NoAKDAzMTQ4ZmY3MzVjNTYxNjI5YzdlODgwMzgzZDNlMGQ0NGVlYmY3Mzg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-29T06:00:58Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-09-12T23:56:00Z"}, "message": "Make dyn-trait-method work", "tree": {"sha": "afeb0548c435cf9484aaaec033fa788ab1fc84a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afeb0548c435cf9484aaaec033fa788ab1fc84a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03148ff735c561629c7e880383d3e0d44eebf738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03148ff735c561629c7e880383d3e0d44eebf738", "html_url": "https://github.com/rust-lang/rust/commit/03148ff735c561629c7e880383d3e0d44eebf738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03148ff735c561629c7e880383d3e0d44eebf738/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2ed2dcaaedf0a96dece85a5409b3a1f30a84360", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ed2dcaaedf0a96dece85a5409b3a1f30a84360", "html_url": "https://github.com/rust-lang/rust/commit/b2ed2dcaaedf0a96dece85a5409b3a1f30a84360"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "7cee9ea3e1dc84c29655c6dcf8da9c33be7377d1", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/03148ff735c561629c7e880383d3e0d44eebf738/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03148ff735c561629c7e880383d3e0d44eebf738/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=03148ff735c561629c7e880383d3e0d44eebf738", "patch": "@@ -907,7 +907,30 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                         llargs.push(data_ptr);\n                         continue;\n                     }\n-                    _ => span_bug!(span, \"can't codegen a virtual call on {:#?}\", op),\n+                    Immediate(_) => {\n+                        let ty::Ref(_, ty, _) = op.layout.ty.kind() else {\n+                            span_bug!(span, \"can't codegen a virtual call on {:#?}\", op);\n+                        };\n+                        if !ty.is_dyn_star() {\n+                            span_bug!(span, \"can't codegen a virtual call on {:#?}\", op);\n+                        }\n+                        // FIXME(dyn-star): Make sure this is done on a &dyn* receiver\n+                        let place = op.deref(bx.cx());\n+                        let data_ptr = place.project_field(&mut bx, 0);\n+                        let meta_ptr = place.project_field(&mut bx, 1);\n+                        let meta = bx.load_operand(meta_ptr);\n+                        llfn = Some(meth::VirtualIndex::from_index(idx).get_fn(\n+                            &mut bx,\n+                            meta.immediate(),\n+                            op.layout.ty,\n+                            &fn_abi,\n+                        ));\n+                        llargs.push(data_ptr.llval);\n+                        continue;\n+                    }\n+                    _ => {\n+                        span_bug!(span, \"can't codegen a virtual call on {:#?}\", op);\n+                    }\n                 }\n             }\n "}, {"sha": "b8c4534307cc6e866a5b7fd7647ebf32c4c2c607", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/03148ff735c561629c7e880383d3e0d44eebf738/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03148ff735c561629c7e880383d3e0d44eebf738/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=03148ff735c561629c7e880383d3e0d44eebf738", "patch": "@@ -626,7 +626,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n             }\n \n             ty::Dynamic(_, _, ty::DynStar) => {\n-                let mut pointer = scalar_unit(Pointer);\n+                let mut pointer = scalar_unit(Int(dl.ptr_sized_integer(), false));\n                 pointer.valid_range_mut().start = 1;\n                 let mut vtable = scalar_unit(Pointer);\n                 vtable.valid_range_mut().start = 1;\n@@ -2544,8 +2544,21 @@ where\n                     }\n                 }\n \n-                // dyn* (both fields are usize-sized)\n-                ty::Dynamic(_, _, ty::DynStar) => TyMaybeWithLayout::Ty(tcx.types.usize),\n+                ty::Dynamic(_, _, ty::DynStar) => {\n+                    if i == 0 {\n+                        TyMaybeWithLayout::Ty(tcx.types.usize)\n+                    } else if i == 1 {\n+                        // FIXME(dyn-star) same FIXME as above applies here too\n+                        TyMaybeWithLayout::Ty(\n+                            tcx.mk_imm_ref(\n+                                tcx.lifetimes.re_static,\n+                                tcx.mk_array(tcx.types.usize, 3),\n+                            ),\n+                        )\n+                    } else {\n+                        bug!(\"no field {i} on dyn*\")\n+                    }\n+                }\n \n                 ty::Projection(_)\n                 | ty::Bound(..)"}]}