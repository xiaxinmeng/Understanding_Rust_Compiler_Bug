{"sha": "67c157b7dd4d52db0462da0b8734590ec8c7ee45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YzE1N2I3ZGQ0ZDUyZGIwNDYyZGEwYjg3MzQ1OTBlYzhjN2VlNDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-17T09:45:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-17T09:45:23Z"}, "message": "Merge #8863\n\n8863: fix: don't add extra whitespace around fields r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "beae641851dc5839f7d69472420012f920c25e8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beae641851dc5839f7d69472420012f920c25e8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67c157b7dd4d52db0462da0b8734590ec8c7ee45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgojszCRBK7hj4Ov3rIwAAgLQIABXA2mjfHjWsJAbeviz3rij2\n3vCJRT8BogxPbwr23m7fm/f7K0Z9SKQaXOeeHG0p76OrazqVNOsRCow2Znug5krW\ndQEIhHV3EjlfC5fIfBeIOgQNkK8v8jcTxCjQO0CEDSAjA/tG4RRI7E4YYtZfA+b5\noEKCWazNV/ebGX8P8sPO1UkyCwC7SwOUJstT5Wwk1u6gVFWvRkBy2vk9Iv/X/6ot\nHkRSc6Z827hk4O/DNxgb6q6Vx03JwbzZNxx3D1rRW7YZ+eVU3iowRJrYXFenlJRh\nRRvGyV15hJul7J9fLaSBUBCFpW0ArfMwi59bPLL7g8w4+0FiKV6g6k6yo+/xJY0=\n=i9SI\n-----END PGP SIGNATURE-----\n", "payload": "tree beae641851dc5839f7d69472420012f920c25e8c\nparent 72a694d5773b143086d5e3bb421d721614da0ffc\nparent 75a012361409349d0325c9232e0c8fe8d52de505\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621244723 +0000\ncommitter GitHub <noreply@github.com> 1621244723 +0000\n\nMerge #8863\n\n8863: fix: don't add extra whitespace around fields r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67c157b7dd4d52db0462da0b8734590ec8c7ee45", "html_url": "https://github.com/rust-lang/rust/commit/67c157b7dd4d52db0462da0b8734590ec8c7ee45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67c157b7dd4d52db0462da0b8734590ec8c7ee45/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72a694d5773b143086d5e3bb421d721614da0ffc", "url": "https://api.github.com/repos/rust-lang/rust/commits/72a694d5773b143086d5e3bb421d721614da0ffc", "html_url": "https://github.com/rust-lang/rust/commit/72a694d5773b143086d5e3bb421d721614da0ffc"}, {"sha": "75a012361409349d0325c9232e0c8fe8d52de505", "url": "https://api.github.com/repos/rust-lang/rust/commits/75a012361409349d0325c9232e0c8fe8d52de505", "html_url": "https://github.com/rust-lang/rust/commit/75a012361409349d0325c9232e0c8fe8d52de505"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "37a0e37a9f65ea3d2e99655e1fddfa4d5bfcbc72", "filename": "crates/ide/src/diagnostics/fixes/fill_missing_fields.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Ffill_missing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Ffill_missing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Ffill_missing_fields.rs?ref=67c157b7dd4d52db0462da0b8734590ec8c7ee45", "patch": "@@ -186,6 +186,31 @@ fn test_fn() {\n     let one = 1;\n     let s = TestStruct{ ..a };\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_fill_struct_fields_blank_line() {\n+        check_fix(\n+            r#\"\n+struct S { a: (), b: () }\n+\n+fn f() {\n+    S {\n+        $0\n+    };\n+}\n+\"#,\n+            r#\"\n+struct S { a: (), b: () }\n+\n+fn f() {\n+    S {\n+        a: (),\n+        b: (),\n+    };\n+}\n \"#,\n         );\n     }"}, {"sha": "45471da4105a6bb7218cfc02650a8b9cf3150be3", "filename": "crates/ide/src/diagnostics/fixes/remove_semicolon.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fremove_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fremove_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fremove_semicolon.rs?ref=67c157b7dd4d52db0462da0b8734590ec8c7ee45", "patch": "@@ -29,3 +29,13 @@ impl DiagnosticWithFix for RemoveThisSemicolon {\n         Some(fix(\"remove_semicolon\", \"Remove this semicolon\", source_change, semicolon))\n     }\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::diagnostics::tests::check_fix;\n+\n+    #[test]\n+    fn remove_semicolon() {\n+        check_fix(r#\"fn f() -> i32 { 92$0; }\"#, r#\"fn f() -> i32 { 92 }\"#);\n+    }\n+}"}, {"sha": "b0ef7b44adc306a785bec0e28aeb9b24db8af9a1", "filename": "crates/ide/src/diagnostics/fixes/replace_with_find_map.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Freplace_with_find_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Freplace_with_find_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Freplace_with_find_map.rs?ref=67c157b7dd4d52db0462da0b8734590ec8c7ee45", "patch": "@@ -40,3 +40,45 @@ impl DiagnosticWithFix for ReplaceFilterMapNextWithFindMap {\n         ))\n     }\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::diagnostics::tests::check_fix;\n+\n+    #[test]\n+    fn replace_with_wind_map() {\n+        check_fix(\n+            r#\"\n+//- /main.rs crate:main deps:core\n+use core::iter::Iterator;\n+use core::option::Option::{self, Some, None};\n+fn foo() {\n+    let m = [1, 2, 3].iter().$0filter_map(|x| if *x == 2 { Some (4) } else { None }).next();\n+}\n+//- /core/lib.rs crate:core\n+pub mod option {\n+    pub enum Option<T> { Some(T), None }\n+}\n+pub mod iter {\n+    pub trait Iterator {\n+        type Item;\n+        fn filter_map<B, F>(self, f: F) -> FilterMap where F: FnMut(Self::Item) -> Option<B> { FilterMap }\n+        fn next(&mut self) -> Option<Self::Item>;\n+    }\n+    pub struct FilterMap {}\n+    impl Iterator for FilterMap {\n+        type Item = i32;\n+        fn next(&mut self) -> i32 { 7 }\n+    }\n+}\n+\"#,\n+            r#\"\n+use core::iter::Iterator;\n+use core::option::Option::{self, Some, None};\n+fn foo() {\n+    let m = [1, 2, 3].iter().find_map(|x| if *x == 2 { Some (4) } else { None });\n+}\n+\"#,\n+        )\n+    }\n+}"}, {"sha": "2676ed8c981e865971e40802c3056e1054db2790", "filename": "crates/syntax/src/ast/edit_in_place.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c157b7dd4d52db0462da0b8734590ec8c7ee45/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs?ref=67c157b7dd4d52db0462da0b8734590ec8c7ee45", "patch": "@@ -378,6 +378,10 @@ impl ast::RecordExprFieldList {\n             make::tokens::single_space()\n         };\n \n+        if is_multiline {\n+            normalize_ws_between_braces(self.syntax());\n+        }\n+\n         let position = match self.fields().last() {\n             Some(last_field) => {\n                 let comma = match last_field"}]}