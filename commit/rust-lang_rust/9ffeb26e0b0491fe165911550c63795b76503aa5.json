{"sha": "9ffeb26e0b0491fe165911550c63795b76503aa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZmViMjZlMGIwNDkxZmUxNjU5MTE1NTBjNjM3OTViNzY1MDNhYTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-12T20:46:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-12T20:46:40Z"}, "message": "Rollup merge of #62274 - eddyb:const-false-unwind, r=pnkfelix\n\nrustc_mir: follow FalseUnwind's real_target edge in qualify_consts.\n\nAs far as I can tell, this was accidentally omitted from #47802.\nFixes #62272.\n\nr? @matthewjasper or @nikomatsakis", "tree": {"sha": "a446895a1b1e84eeeed0679a7ed65b6ce69ed324", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a446895a1b1e84eeeed0679a7ed65b6ce69ed324"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ffeb26e0b0491fe165911550c63795b76503aa5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdKPGwCRBK7hj4Ov3rIwAAdHIIAF+yNv68VovUeWHruYiyU9aP\nfRo2uqy4OFGKy4ST2griD8FtlWwTE/4V/F5PAd8NQjZAuIBiJy1aPArGh6F271Ah\nymK37g6sEvk4kjBFh2Mya8CNGph8UIm3Vas3Pg7u1MUjS+lSysz01irD7gMyEViW\nJB2HbVwmufT42D7ns+C09JwYSllzSUGDSzQUOgcJc8LNwskr96b49mEI8LRoGLF1\nLynyT75RMnYm+jCbcyKa6jLxMJ+/3S+iZpeuhsuHkkZhYmdTwfHJzMOi84ugUi45\nJkDu1dxwhylWsuXM57dDK+PV3wvL7STyOFm2442qP2nvgD4uWPDR+6Stv7PeUjs=\n=cXdo\n-----END PGP SIGNATURE-----\n", "payload": "tree a446895a1b1e84eeeed0679a7ed65b6ce69ed324\nparent 74ac956fad4481909885811d1c38beaf40042e3e\nparent baa9efb1786ccf62b3808375af65d6ae6ac56e98\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562964400 +0200\ncommitter GitHub <noreply@github.com> 1562964400 +0200\n\nRollup merge of #62274 - eddyb:const-false-unwind, r=pnkfelix\n\nrustc_mir: follow FalseUnwind's real_target edge in qualify_consts.\n\nAs far as I can tell, this was accidentally omitted from #47802.\nFixes #62272.\n\nr? @matthewjasper or @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ffeb26e0b0491fe165911550c63795b76503aa5", "html_url": "https://github.com/rust-lang/rust/commit/9ffeb26e0b0491fe165911550c63795b76503aa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ffeb26e0b0491fe165911550c63795b76503aa5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ac956fad4481909885811d1c38beaf40042e3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ac956fad4481909885811d1c38beaf40042e3e", "html_url": "https://github.com/rust-lang/rust/commit/74ac956fad4481909885811d1c38beaf40042e3e"}, {"sha": "baa9efb1786ccf62b3808375af65d6ae6ac56e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/baa9efb1786ccf62b3808375af65d6ae6ac56e98", "html_url": "https://github.com/rust-lang/rust/commit/baa9efb1786ccf62b3808375af65d6ae6ac56e98"}], "stats": {"total": 86, "additions": 58, "deletions": 28}, "files": [{"sha": "21b8f06d0895f066b633404a4e2d85b496feb245", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -890,6 +890,7 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n \n             let target = match body[bb].terminator().kind {\n                 TerminatorKind::Goto { target } |\n+                TerminatorKind::FalseUnwind { real_target: target, .. } |\n                 TerminatorKind::Drop { target, .. } |\n                 TerminatorKind::DropAndReplace { target, .. } |\n                 TerminatorKind::Assert { target, .. } |\n@@ -908,8 +909,7 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n                 TerminatorKind::GeneratorDrop |\n                 TerminatorKind::Yield { .. } |\n                 TerminatorKind::Unreachable |\n-                TerminatorKind::FalseEdges { .. } |\n-                TerminatorKind::FalseUnwind { .. } => None,\n+                TerminatorKind::FalseEdges { .. } => None,\n \n                 TerminatorKind::Return => {\n                     break;"}, {"sha": "1de23f2a5e94f29067fdec0b74243f195f27b6a3", "filename": "src/test/compile-fail/const-fn-error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fcompile-fail%2Fconst-fn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fcompile-fail%2Fconst-fn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-fn-error.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -6,6 +6,7 @@ const fn f(x: usize) -> usize {\n     let mut sum = 0;\n     for i in 0..x {\n         //~^ ERROR E0015\n+        //~| ERROR E0017\n         //~| ERROR E0019\n         //~| ERROR E0019\n         //~| ERROR E0080"}, {"sha": "28d9937b5e88134b0e95bbbf57023bcb81f2dc90", "filename": "src/test/compile-fail/issue-52443.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -1,10 +1,14 @@\n fn main() {\n     [(); & { loop { continue } } ]; //~ ERROR mismatched types\n     [(); loop { break }]; //~ ERROR mismatched types\n-    [(); {while true {break}; 0}]; //~ ERROR constant contains unimplemented expression type\n-    //~^ WARN denote infinite loops with\n-    [(); { for _ in 0usize.. {}; 0}]; //~ ERROR calls in constants are limited to constant functions\n+    [(); {while true {break}; 0}];\n     //~^ ERROR constant contains unimplemented expression type\n     //~| ERROR constant contains unimplemented expression type\n+    //~| WARN denote infinite loops with\n+    [(); { for _ in 0usize.. {}; 0}];\n+    //~^ ERROR calls in constants are limited to constant functions\n+    //~| ERROR references in constants may only refer to immutable values\n+    //~| ERROR constant contains unimplemented expression type\n+    //~| ERROR constant contains unimplemented expression type\n     //~| ERROR evaluation of constant value failed\n }"}, {"sha": "8fa5b0a961f9f22d8357a39499eaebe01bab40a3", "filename": "src/test/ui/consts/const-eval/infinite_loop.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -4,7 +4,9 @@ fn main() {\n     let _ = [(); {\n         //~^ WARNING Constant evaluating a complex constant, this might take some time\n         let mut n = 113383; // #20 in https://oeis.org/A006884\n-        while n != 0 { //~ ERROR constant contains unimplemented expression type\n+        while n != 0 {\n+        //~^ ERROR constant contains unimplemented expression type\n+        //~| ERROR constant contains unimplemented expression type\n             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n             //~^ ERROR evaluation of constant value failed\n         }"}, {"sha": "68e7fdb12517b0f93ab17883864fd02c6857e74a", "filename": "src/test/ui/consts/const-eval/infinite_loop.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -1,7 +1,15 @@\n+error[E0019]: constant contains unimplemented expression type\n+  --> $DIR/infinite_loop.rs:7:15\n+   |\n+LL |         while n != 0 {\n+   |               ^^^^^^\n+\n error[E0019]: constant contains unimplemented expression type\n   --> $DIR/infinite_loop.rs:7:9\n    |\n LL | /         while n != 0 {\n+LL | |\n+LL | |\n LL | |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n LL | |\n LL | |         }\n@@ -21,12 +29,12 @@ LL | |     }];\n    | |_____^\n \n error[E0080]: evaluation of constant value failed\n-  --> $DIR/infinite_loop.rs:8:20\n+  --> $DIR/infinite_loop.rs:10:20\n    |\n LL |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n    |                    ^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0019, E0080.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "2989b200b2fc416fc3b3e0d50ad69349dbb944ef", "filename": "src/test/ui/consts/const-eval/issue-52442.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -1,4 +1,5 @@\n fn main() {\n-    [();  { &loop { break } as *const _ as usize } ]; //~ ERROR unimplemented expression type\n-    //~^ ERROR it is undefined behavior to use this value\n+    [();  { &loop { break } as *const _ as usize } ];\n+    //~^ ERROR casting pointers to integers in constants is unstable\n+    //~| ERROR it is undefined behavior to use this value\n }"}, {"sha": "88c94d917fe0ecec15de3dda5ae90246d34521e1", "filename": "src/test/ui/consts/const-eval/issue-52442.stderr", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52442.stderr?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -1,8 +1,11 @@\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/issue-52442.rs:2:14\n+error[E0658]: casting pointers to integers in constants is unstable\n+  --> $DIR/issue-52442.rs:2:13\n    |\n LL |     [();  { &loop { break } as *const _ as usize } ];\n-   |              ^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/issue-52442.rs:2:11\n@@ -14,5 +17,5 @@ LL |     [();  { &loop { break } as *const _ as usize } ];\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0019, E0080.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0080, E0658.\n+For more information about an error, try `rustc --explain E0080`."}, {"sha": "b42249e57fa9a25ab5ff2a6349cc291eb7a1b400", "filename": "src/test/ui/consts/const-eval/issue-52475.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -3,7 +3,9 @@ fn main() {\n         //~^ WARNING Constant evaluating a complex constant, this might take some time\n         let mut x = &0;\n         let mut n = 0;\n-        while n < 5 { //~ ERROR constant contains unimplemented expression type\n+        while n < 5 {\n+        //~^ ERROR constant contains unimplemented expression type\n+        //~| ERROR constant contains unimplemented expression type\n             n = (n + 1) % 5; //~ ERROR evaluation of constant value failed\n             x = &0; // Materialize a new AllocId\n         }"}, {"sha": "1e83cbcff2bf1896eed213600d6492619b088b92", "filename": "src/test/ui/consts/const-eval/issue-52475.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -1,7 +1,15 @@\n+error[E0019]: constant contains unimplemented expression type\n+  --> $DIR/issue-52475.rs:6:15\n+   |\n+LL |         while n < 5 {\n+   |               ^^^^^\n+\n error[E0019]: constant contains unimplemented expression type\n   --> $DIR/issue-52475.rs:6:9\n    |\n LL | /         while n < 5 {\n+LL | |\n+LL | |\n LL | |             n = (n + 1) % 5;\n LL | |             x = &0; // Materialize a new AllocId\n LL | |         }\n@@ -21,12 +29,12 @@ LL | |     }];\n    | |_____^\n \n error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-52475.rs:7:17\n+  --> $DIR/issue-52475.rs:9:17\n    |\n LL |             n = (n + 1) % 5;\n    |                 ^^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0019, E0080.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "ad8589c73788cfc8dc6b2f463fee69185eedaa0d", "filename": "src/test/ui/consts/const-eval/issue-62272.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-62272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-62272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-62272.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -0,0 +1,9 @@\n+// run-pass\n+\n+// Tests that `loop`s unconditionally-broken-from are allowed in constants.\n+\n+const FOO: () = loop { break; };\n+\n+fn main() {\n+    [FOO; { let x; loop { x = 5; break; } x }];\n+}"}, {"sha": "36e308ade9c54323f2d8c75e1d15e5616a386adf", "filename": "src/test/ui/consts/const-labeled-break.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-labeled-break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ffeb26e0b0491fe165911550c63795b76503aa5/src%2Ftest%2Fui%2Fconsts%2Fconst-labeled-break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-labeled-break.rs?ref=9ffeb26e0b0491fe165911550c63795b76503aa5", "patch": "@@ -1,9 +1,10 @@\n+// run-pass\n+\n // Using labeled break in a while loop has caused an illegal instruction being\n // generated, and an ICE later.\n //\n // See https://github.com/rust-lang/rust/issues/51350 for more information.\n \n const CRASH: () = 'a: while break 'a {};\n-//~^ ERROR constant contains unimplemented expression type\n \n fn main() {}"}, {"sha": "2009e92235566cfd8cc89d1fce35d4c8c08ff3e3", "filename": "src/test/ui/consts/const-labeled-break.stderr", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/74ac956fad4481909885811d1c38beaf40042e3e/src%2Ftest%2Fui%2Fconsts%2Fconst-labeled-break.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74ac956fad4481909885811d1c38beaf40042e3e/src%2Ftest%2Fui%2Fconsts%2Fconst-labeled-break.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-labeled-break.stderr?ref=74ac956fad4481909885811d1c38beaf40042e3e", "patch": "@@ -1,9 +0,0 @@\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/const-labeled-break.rs:6:19\n-   |\n-LL | const CRASH: () = 'a: while break 'a {};\n-   |                   ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0019`."}]}