{"sha": "473095345b74b4d6b836d3ab2e3ace0c6719b20f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MzA5NTM0NWI3NGI0ZDZiODM2ZDNhYjJlM2FjZTBjNjcxOWIyMGY=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-05T04:12:15Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-05T04:12:15Z"}, "message": "Neaten up `fold_crate`.", "tree": {"sha": "6a02ec381ec8a6f6c2d1512b261419ee43fd092a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a02ec381ec8a6f6c2d1512b261419ee43fd092a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/473095345b74b4d6b836d3ab2e3ace0c6719b20f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/473095345b74b4d6b836d3ab2e3ace0c6719b20f", "html_url": "https://github.com/rust-lang/rust/commit/473095345b74b4d6b836d3ab2e3ace0c6719b20f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/473095345b74b4d6b836d3ab2e3ace0c6719b20f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8909f70a3249f61be10627fc6b6634dedf66f77a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8909f70a3249f61be10627fc6b6634dedf66f77a", "html_url": "https://github.com/rust-lang/rust/commit/8909f70a3249f61be10627fc6b6634dedf66f77a"}], "stats": {"total": 39, "additions": 15, "deletions": 24}, "files": [{"sha": "567175b84df1abee7cf742d20318cc2a5ec1ec3b", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 15, "deletions": 24, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/473095345b74b4d6b836d3ab2e3ace0c6719b20f/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473095345b74b4d6b836d3ab2e3ace0c6719b20f/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=473095345b74b4d6b836d3ab2e3ace0c6719b20f", "patch": "@@ -980,38 +980,29 @@ pub fn noop_fold_mod<T: Folder>(Mod {inner, items, inline}: Mod, folder: &mut T)\n \n pub fn noop_fold_crate<T: Folder>(Crate {module, attrs, span}: Crate,\n                                   folder: &mut T) -> Crate {\n-    let mut items = folder.fold_item(P(Item {\n+    let item = P(Item {\n         ident: keywords::Invalid.ident(),\n         attrs,\n         id: DUMMY_NODE_ID,\n         vis: respan(span.shrink_to_lo(), VisibilityKind::Public),\n         span,\n         node: ItemKind::Mod(module),\n         tokens: None,\n-    })).into_iter();\n-\n-    let (module, attrs, span) = match items.next() {\n-        Some(item) => {\n-            assert!(items.next().is_none(),\n-                    \"a crate cannot expand to more than one item\");\n-            item.and_then(|Item { attrs, span, node, .. }| {\n-                match node {\n-                    ItemKind::Mod(m) => (m, attrs, span),\n-                    _ => panic!(\"fold converted a module to not a module\"),\n-                }\n-            })\n+    });\n+    let items = folder.fold_item(item);\n+\n+    let len = items.len();\n+    if len == 0 {\n+        let module = Mod { inner: span, items: vec![], inline: true };\n+        Crate { module, attrs: vec![], span }\n+    } else if len == 1 {\n+        let Item { attrs, span, node, .. } = items.into_iter().next().unwrap().into_inner();\n+        match node {\n+            ItemKind::Mod(module) => Crate { module, attrs, span },\n+            _ => panic!(\"fold converted a module to not a module\"),\n         }\n-        None => (Mod {\n-            inner: span,\n-            items: vec![],\n-            inline: true,\n-        }, vec![], span)\n-    };\n-\n-    Crate {\n-        module,\n-        attrs,\n-        span,\n+    } else {\n+        panic!(\"a crate cannot expand to more than one item\");\n     }\n }\n "}]}