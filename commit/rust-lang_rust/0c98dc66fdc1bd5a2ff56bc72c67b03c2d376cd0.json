{"sha": "0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjOThkYzY2ZmRjMWJkNWEyZmY1NmJjNzJjNjdiMDNjMmQzNzZjZDA=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-03-25T16:15:45Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-03-31T14:16:37Z"}, "message": "Fix tests and AstConv -> dyn AstConv", "tree": {"sha": "df4d5159769d5608f5ed745e40968fb6ef2ef5bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4d5159769d5608f5ed745e40968fb6ef2ef5bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "html_url": "https://github.com/rust-lang/rust/commit/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff65ec7823d4ec16c4b88e53b5a76f71b27e324", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff65ec7823d4ec16c4b88e53b5a76f71b27e324", "html_url": "https://github.com/rust-lang/rust/commit/4ff65ec7823d4ec16c4b88e53b5a76f71b27e324"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "190744fe6f1d81d79376c7793c1292cbbe7bd035", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "patch": "@@ -430,7 +430,7 @@ pub fn hir_ty_to_ty<'tcx>(tcx: TyCtxt<'tcx>, hir_ty: &hir::Ty<'_>) -> Ty<'tcx> {\n     let env_node_id = tcx.hir().get_parent_item(hir_ty.hir_id);\n     let env_def_id = tcx.hir().local_def_id(env_node_id);\n     let item_cx = self::collect::ItemCtxt::new(tcx, env_def_id.to_def_id());\n-    AstConv::ast_ty_to_ty(&item_cx, hir_ty)\n+    <dyn AstConv<'_>>::ast_ty_to_ty(&item_cx, hir_ty)\n }\n \n pub fn hir_trait_to_predicates<'tcx>("}, {"sha": "c1c40afdbab55ac014b138dd3c8bc9abc2740463", "filename": "src/test/ui/in-band-lifetimes/no_introducing_in_band_in_locals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.rs?ref=0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "patch": "@@ -7,7 +7,7 @@ fn foo(x: &u32) {\n \n fn foo2(x: &u32) {}\n fn bar() {\n-    let y: fn(&'test u32) = foo2;\n+    let y: fn(&'test u32) = foo2; //~ ERROR use of undeclared lifetime\n }\n \n fn main() {}"}, {"sha": "a43b49041ec2aa4fc0cb391cf3ebc305b9d33a3e", "filename": "src/test/ui/in-band-lifetimes/no_introducing_in_band_in_locals.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.stderr?ref=0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "patch": "@@ -6,6 +6,22 @@ LL | fn foo(x: &u32) {\n LL |     let y: &'test u32 = x;\n    |             ^^^^^ undeclared lifetime\n \n-error: aborting due to previous error\n+error[E0261]: use of undeclared lifetime name `'test`\n+  --> $DIR/no_introducing_in_band_in_locals.rs:10:16\n+   |\n+LL |     let y: fn(&'test u32) = foo2;\n+   |                ^^^^^ undeclared lifetime\n+   |\n+   = note: for more information on higher-ranked polymorphism, visit https://doc.rust-lang.org/nomicon/hrtb.html\n+help: consider introducing lifetime `'test` here\n+   |\n+LL | fn bar<'test>() {\n+   |       ^^^^^^^\n+help: consider making the type lifetime-generic with a new `'test` lifetime\n+   |\n+LL |     let y: for<'test> fn(&'test u32) = foo2;\n+   |            ^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0261`."}, {"sha": "d16ba3df47b63de0fa78d120adab7aa840d5b8cd", "filename": "src/test/ui/methods/method-call-lifetime-args-unresolved.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.rs?ref=0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "patch": "@@ -1,5 +1,3 @@\n fn main() {\n     0.clone::<'a>(); //~ ERROR use of undeclared lifetime name `'a`\n-    //~^ WARNING cannot specify lifetime arguments\n-    //~| WARNING this was previously accepted\n }"}, {"sha": "93c0384fcc2663fa8ff82c4170ba356e85814022", "filename": "src/test/ui/methods/method-call-lifetime-args-unresolved.stderr", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr?ref=0c98dc66fdc1bd5a2ff56bc72c67b03c2d376cd0", "patch": "@@ -1,18 +1,3 @@\n-warning: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-unresolved.rs:2:15\n-   |\n-LL |     0.clone::<'a>();\n-   |               ^^\n-   | \n-  ::: $SRC_DIR/core/src/clone.rs:LL:COL\n-   |\n-LL |     fn clone(&self) -> Self;\n-   |              - the late bound lifetime parameter is introduced here\n-   |\n-   = note: `#[warn(late_bound_lifetime_arguments)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #42868 <https://github.com/rust-lang/rust/issues/42868>\n-\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/method-call-lifetime-args-unresolved.rs:2:15\n    |\n@@ -23,6 +8,6 @@ LL |     0.clone::<'a>();\n    |\n    = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0261`."}]}