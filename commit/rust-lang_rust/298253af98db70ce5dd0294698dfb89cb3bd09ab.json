{"sha": "298253af98db70ce5dd0294698dfb89cb3bd09ab", "node_id": "C_kwDOAAsO6NoAKDI5ODI1M2FmOThkYjcwY2U1ZGQwMjk0Njk4ZGZiODljYjNiZDA5YWI", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-10-27T21:14:48Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-10-28T21:42:47Z"}, "message": "Specialize ToString for Symbol", "tree": {"sha": "5f7a4b17e3c77d739d047db9a1ec5f48acefaaba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f7a4b17e3c77d739d047db9a1ec5f48acefaaba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/298253af98db70ce5dd0294698dfb89cb3bd09ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/298253af98db70ce5dd0294698dfb89cb3bd09ab", "html_url": "https://github.com/rust-lang/rust/commit/298253af98db70ce5dd0294698dfb89cb3bd09ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/298253af98db70ce5dd0294698dfb89cb3bd09ab/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0da281b6068a7d889ae89a9bd8991284cc9b7535", "url": "https://api.github.com/repos/rust-lang/rust/commits/0da281b6068a7d889ae89a9bd8991284cc9b7535", "html_url": "https://github.com/rust-lang/rust/commit/0da281b6068a7d889ae89a9bd8991284cc9b7535"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "7f16da52b4439d587fb3e0659400e4cecc056a0d", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/298253af98db70ce5dd0294698dfb89cb3bd09ab/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/298253af98db70ce5dd0294698dfb89cb3bd09ab/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=298253af98db70ce5dd0294698dfb89cb3bd09ab", "patch": "@@ -1901,6 +1901,13 @@ impl fmt::Display for Symbol {\n     }\n }\n \n+// takes advantage of `str::to_string` specialization\n+impl ToString for Symbol {\n+    fn to_string(&self) -> String {\n+        self.as_str().to_string()\n+    }\n+}\n+\n impl<S: Encoder> Encodable<S> for Symbol {\n     default fn encode(&self, s: &mut S) {\n         s.emit_str(self.as_str());"}]}