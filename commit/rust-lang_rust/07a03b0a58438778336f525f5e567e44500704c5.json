{"sha": "07a03b0a58438778336f525f5e567e44500704c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YTAzYjBhNTg0Mzg3NzgzMzZmNTI1ZjVlNTY3ZTQ0NTAwNzA0YzU=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-06-05T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-06-05T16:28:25Z"}, "message": "Explain that `ensure_monomorphic_enough` omission is intentional", "tree": {"sha": "0ecf0b8febf0dacd88fd723704040e0246c1442f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ecf0b8febf0dacd88fd723704040e0246c1442f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07a03b0a58438778336f525f5e567e44500704c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07a03b0a58438778336f525f5e567e44500704c5", "html_url": "https://github.com/rust-lang/rust/commit/07a03b0a58438778336f525f5e567e44500704c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07a03b0a58438778336f525f5e567e44500704c5/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "894b42c8616f352eacf54bc830c01e33b406fb8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/894b42c8616f352eacf54bc830c01e33b406fb8f", "html_url": "https://github.com/rust-lang/rust/commit/894b42c8616f352eacf54bc830c01e33b406fb8f"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "4e4166dad50e29b83c7b49c00905fe344941f659", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07a03b0a58438778336f525f5e567e44500704c5/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a03b0a58438778336f525f5e567e44500704c5/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=07a03b0a58438778336f525f5e567e44500704c5", "patch": "@@ -61,6 +61,7 @@ crate fn eval_nullary_intrinsic<'tcx>(\n             ConstValue::from_bool(tp_ty.needs_drop(tcx, param_env))\n         }\n         sym::min_align_of | sym::pref_align_of => {\n+            // Correctly handles non-monomorphic calls, so there is no need for ensure_monomorphic_enough.\n             let layout = tcx.layout_of(param_env.and(tp_ty)).map_err(|e| err_inval!(Layout(e)))?;\n             let n = match name {\n                 sym::pref_align_of => layout.align.pref.bytes(),\n@@ -74,6 +75,7 @@ crate fn eval_nullary_intrinsic<'tcx>(\n             ConstValue::from_u64(tcx.type_id_hash(tp_ty))\n         }\n         sym::variant_count => match tp_ty.kind() {\n+            // Correctly handles non-monomorphic calls, so there is no need for ensure_monomorphic_enough.\n             ty::Adt(ref adt, _) => ConstValue::from_machine_usize(adt.variants.len() as u64, &tcx),\n             ty::Projection(_)\n             | ty::Opaque(_, _)"}]}