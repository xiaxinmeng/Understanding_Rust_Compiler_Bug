{"sha": "9d764c57502c1f6badb71684b5d5b5ee081f4dda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNzY0YzU3NTAyYzFmNmJhZGI3MTY4NGI1ZDViNWVlMDgxZjRkZGE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-03T10:18:38Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-03T10:18:38Z"}, "message": "Add FIXME note about variadic syscall().", "tree": {"sha": "e6514138e045e76b8b7d7102ecd0fe76afab1129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6514138e045e76b8b7d7102ecd0fe76afab1129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d764c57502c1f6badb71684b5d5b5ee081f4dda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d764c57502c1f6badb71684b5d5b5ee081f4dda", "html_url": "https://github.com/rust-lang/rust/commit/9d764c57502c1f6badb71684b5d5b5ee081f4dda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d764c57502c1f6badb71684b5d5b5ee081f4dda/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6df54c47a7ac0a0788d68c12198f1369b559b93e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6df54c47a7ac0a0788d68c12198f1369b559b93e", "html_url": "https://github.com/rust-lang/rust/commit/6df54c47a7ac0a0788d68c12198f1369b559b93e"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "328280d459a11fba684fe8688c9419f5b83706b7", "filename": "src/shims/posix/linux/foreign_items.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d764c57502c1f6badb71684b5d5b5ee081f4dda/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d764c57502c1f6badb71684b5d5b5ee081f4dda/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs?ref=9d764c57502c1f6badb71684b5d5b5ee081f4dda", "patch": "@@ -113,6 +113,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             // Dynamically invoked syscalls\n             \"syscall\" => {\n+                // FIXME: The libc syscall() function is a variadic function.\n+                // It's valid to call it with more arguments than a syscall\n+                // needs, so none of these syscalls should use check_arg_count.\n+                // However, depending on the calling convention it might depend\n+                // on the type and size of the arguments whether a call with\n+                // the wrong number of arguments (or types) is valid or not.\n+                // So this needs to be researched first.\n                 let sys_getrandom = this\n                     .eval_libc(\"SYS_getrandom\")?\n                     .to_machine_usize(this)?;"}]}