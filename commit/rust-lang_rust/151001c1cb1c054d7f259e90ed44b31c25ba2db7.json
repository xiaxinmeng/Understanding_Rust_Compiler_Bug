{"sha": "151001c1cb1c054d7f259e90ed44b31c25ba2db7", "node_id": "C_kwDOAAsO6NoAKDE1MTAwMWMxY2IxYzA1NGQ3ZjI1OWU5MGVkNDRiMzFjMjViYTJkYjc", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-17T00:32:08Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-17T00:32:08Z"}, "message": "trivial fix for comments feedback", "tree": {"sha": "977ad8ceac89669861d6e9780437f39485283910", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/977ad8ceac89669861d6e9780437f39485283910"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/151001c1cb1c054d7f259e90ed44b31c25ba2db7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/151001c1cb1c054d7f259e90ed44b31c25ba2db7", "html_url": "https://github.com/rust-lang/rust/commit/151001c1cb1c054d7f259e90ed44b31c25ba2db7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/151001c1cb1c054d7f259e90ed44b31c25ba2db7/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e747201ad83d384a418dc2b31bf3d3024e2c2a3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e747201ad83d384a418dc2b31bf3d3024e2c2a3c", "html_url": "https://github.com/rust-lang/rust/commit/e747201ad83d384a418dc2b31bf3d3024e2c2a3c"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "357c6900a70e547c8256518532a688217cf31801", "filename": "compiler/rustc_error_messages/locales/en-US/hir_analysis.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/151001c1cb1c054d7f259e90ed44b31c25ba2db7/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fhir_analysis.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/151001c1cb1c054d7f259e90ed44b31c25ba2db7/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fhir_analysis.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fhir_analysis.ftl?ref=151001c1cb1c054d7f259e90ed44b31c25ba2db7", "patch": "@@ -136,4 +136,4 @@ hir_analysis_expected_used_symbol = expected `used`, `used(compiler)` or `used(l\n \n hir_analysis_missing_parentheses_in_range = can't call method `{$method_name}` on type `{$ty_str}`\n \n-hir_analysis_add_missing_parentheses_in_range = you must surround the range in parentheses to call the `{$func_name}` function\n+hir_analysis_add_missing_parentheses_in_range = you must surround the range in parentheses to call its `{$func_name}` function"}, {"sha": "6e9ea5d7f52fa19903d02455bcab361fed077779", "filename": "compiler/rustc_hir_analysis/src/check/method/suggest.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/151001c1cb1c054d7f259e90ed44b31c25ba2db7/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/151001c1cb1c054d7f259e90ed44b31c25ba2db7/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=151001c1cb1c054d7f259e90ed44b31c25ba2db7", "patch": "@@ -272,11 +272,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 };\n \n-                if self.suggest_range_for_iter(tcx, actual, source, span, item_name, &ty_str)\n-                    || self.suggest_constraining_numerical_ty(\n-                        tcx, actual, source, span, item_kind, item_name, &ty_str,\n-                    )\n-                {\n+                if self.suggest_wrapping_range_with_parens(\n+                    tcx, actual, source, span, item_name, &ty_str,\n+                ) || self.suggest_constraining_numerical_ty(\n+                    tcx, actual, source, span, item_kind, item_name, &ty_str,\n+                ) {\n                     return None;\n                 }\n \n@@ -1204,7 +1204,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         false\n     }\n \n-    fn suggest_range_for_iter(\n+    /// Suggest possible range with adding parentheses, for example:\n+    /// when encountering `0..1.map(|i| i + 1)` suggest `(0..1).map(|i| i + 1)`.\n+    fn suggest_wrapping_range_with_parens(\n         &self,\n         tcx: TyCtxt<'tcx>,\n         actual: Ty<'tcx>,\n@@ -1252,13 +1254,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         continue;\n                     }\n \n-                    debug!(\"lang_item: {:?}\", lang_item);\n                     let range_def_id = self.tcx.require_lang_item(lang_item.unwrap(), None);\n                     let range_ty =\n                         self.tcx.bound_type_of(range_def_id).subst(self.tcx, &[actual.into()]);\n \n-                    let pick =\n-                        self.lookup_probe(span, item_name, range_ty, expr, ProbeScope::AllTraits);\n+                    let pick = self.probe_for_name(\n+                        span,\n+                        Mode::MethodCall,\n+                        item_name,\n+                        IsSuggestion(true),\n+                        range_ty,\n+                        expr.hir_id,\n+                        ProbeScope::AllTraits,\n+                    );\n                     if pick.is_ok() {\n                         let range_span = parent_expr.span.with_hi(expr.span.hi());\n                         tcx.sess.emit_err(errors::MissingParentheseInRange {"}, {"sha": "070cd3054369b686b5f2e5cdb12ccfe78d8cd5e9", "filename": "src/test/ui/methods/issues/issue-90315.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/151001c1cb1c054d7f259e90ed44b31c25ba2db7/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/151001c1cb1c054d7f259e90ed44b31c25ba2db7/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.stderr?ref=151001c1cb1c054d7f259e90ed44b31c25ba2db7", "patch": "@@ -4,7 +4,7 @@ error[E0689]: can't call method `rev` on type `usize`\n LL |     for _i in 0..arr.len().rev() {\n    |                            ^^^ can't call method `rev` on type `usize`\n    |\n-help: you must surround the range in parentheses to call the `rev` function\n+help: you must surround the range in parentheses to call its `rev` function\n    |\n LL |     for _i in (0..arr.len()).rev() {\n    |               +            +\n@@ -15,7 +15,7 @@ error[E0689]: can't call method `rev` on type `{integer}`\n LL |     for i in 1..11.rev() {\n    |                    ^^^ can't call method `rev` on type `{integer}`\n    |\n-help: you must surround the range in parentheses to call the `rev` function\n+help: you must surround the range in parentheses to call its `rev` function\n    |\n LL |     for i in (1..11).rev() {\n    |              +     +\n@@ -26,7 +26,7 @@ error[E0689]: can't call method `rev` on type `usize`\n LL |     for i in 1..end.rev() {\n    |                     ^^^ can't call method `rev` on type `usize`\n    |\n-help: you must surround the range in parentheses to call the `rev` function\n+help: you must surround the range in parentheses to call its `rev` function\n    |\n LL |     for i in (1..end).rev() {\n    |              +      +\n@@ -37,7 +37,7 @@ error[E0689]: can't call method `rev` on type `usize`\n LL |     for i in 1..(end + 1).rev() {\n    |                           ^^^ can't call method `rev` on type `usize`\n    |\n-help: you must surround the range in parentheses to call the `rev` function\n+help: you must surround the range in parentheses to call its `rev` function\n    |\n LL |     for i in (1..(end + 1)).rev() {\n    |              +            +\n@@ -48,7 +48,7 @@ error[E0689]: can't call method `is_empty` on type `usize`\n LL |     if 1..(end + 1).is_empty() {\n    |                     ^^^^^^^^ can't call method `is_empty` on type `usize`\n    |\n-help: you must surround the range in parentheses to call the `is_empty` function\n+help: you must surround the range in parentheses to call its `is_empty` function\n    |\n LL |     if (1..(end + 1)).is_empty() {\n    |        +            +\n@@ -68,7 +68,7 @@ error[E0689]: can't call method `is_sorted` on type `usize`\n LL |     if 1..(end + 1).is_sorted() {\n    |                     ^^^^^^^^^ can't call method `is_sorted` on type `usize`\n    |\n-help: you must surround the range in parentheses to call the `is_sorted` function\n+help: you must surround the range in parentheses to call its `is_sorted` function\n    |\n LL |     if (1..(end + 1)).is_sorted() {\n    |        +            +\n@@ -88,7 +88,7 @@ error[E0689]: can't call method `take` on type `{integer}`\n LL |     let _res: i32 = 3..6.take(2).sum();\n    |                          ^^^^ can't call method `take` on type `{integer}`\n    |\n-help: you must surround the range in parentheses to call the `take` function\n+help: you must surround the range in parentheses to call its `take` function\n    |\n LL |     let _res: i32 = (3..6).take(2).sum();\n    |                     +    +\n@@ -110,7 +110,7 @@ error[E0689]: can't call method `sum` on type `{integer}`\n LL |     let _sum: i32 = 3..6.sum();\n    |                          ^^^ can't call method `sum` on type `{integer}`\n    |\n-help: you must surround the range in parentheses to call the `sum` function\n+help: you must surround the range in parentheses to call its `sum` function\n    |\n LL |     let _sum: i32 = (3..6).sum();\n    |                     +    +\n@@ -132,7 +132,7 @@ error[E0689]: can't call method `rev` on type `usize`\n LL |     for _a in a..=b.rev() {\n    |                     ^^^ can't call method `rev` on type `usize`\n    |\n-help: you must surround the range in parentheses to call the `rev` function\n+help: you must surround the range in parentheses to call its `rev` function\n    |\n LL |     for _a in (a..=b).rev() {\n    |               +     +\n@@ -143,7 +143,7 @@ error[E0689]: can't call method `contains` on type `{integer}`\n LL |     let _res = ..10.contains(3);\n    |                     ^^^^^^^^ can't call method `contains` on type `{integer}`\n    |\n-help: you must surround the range in parentheses to call the `contains` function\n+help: you must surround the range in parentheses to call its `contains` function\n    |\n LL |     let _res = (..10).contains(3);\n    |                +    +"}]}