{"sha": "688dcc68fe2a4bcd781c24b36cfd101fb20a5a50", "node_id": "C_kwDOAAsO6NoAKDY4OGRjYzY4ZmUyYTRiY2Q3ODFjMjRiMzZjZmQxMDFmYjIwYTVhNTA", "commit": {"author": {"name": "Noa", "email": "coolreader18@gmail.com", "date": "2022-05-11T02:56:20Z"}, "committer": {"name": "Noa", "email": "coolreader18@gmail.com", "date": "2022-05-13T18:28:22Z"}, "message": "Add ExitCode::exit_process example", "tree": {"sha": "364ea8904bd135ee93daeff8cd6ce6765874791b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/364ea8904bd135ee93daeff8cd6ce6765874791b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/688dcc68fe2a4bcd781c24b36cfd101fb20a5a50", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEtojRJkPnkSUwmWPDf599sXaMWc8FAmJ+o0YACgkQf599sXaM\nWc8Vxw/+NM7wuoirvryhGKHmc+kwUK6FDFxApYmmx1oiJQ5rVQxKVGztaDOcElXv\n0m64YkIrP3SrF9JuOFssjtuMmCjGGz5vPXSi5IIM5si4+5vcSYF2pn8O5a4vJqnx\nEHWFfxaCaqNTTjDTw79iNvrKz0jPT+K/zx6dJbHEskyHOXBmG961L2LItikPcy2f\nxwKIfsBDpcdZlBuaDFC2yNiR4MZh1Iue5kdoFCeZvhgVHxlgY2WCrlf7k6DBYPr0\nTe1tDFkZU2OE3+N3MiDdBxle+uQWCtrw4w6Jgert/FnrjiCKMxrliAJPPaU5bLs5\nONeYHPKEf95OWtKIjWbne4avLs/MWwMO3acBSigFKrVJhTJ9dtfeNE1P3Ly/NdPl\ngpd5n/1WX1U66P15HKgpv/+M5nnGqeX0AK1iAvRlS6Y86uRiabn7BXdP3HZ79/bi\nEE/dAPJ0o4QGufkOxWEVgrW0IwDPMohPcGVEC3YaNxxbZh4fzzFfwXfHi4mAFsBt\nGvH0uAfQKYERrKB4R4rXyAyzTHe3txORaBBpX8+ARRUtyU779pzIAnBY7ZgcybNz\noKI5xZNb7TfJZhHhYI3N6VBoh6opdCYRzyA4RziCW1IlEDHR32z02fx+82qBHIkj\nU0y9dInUypuPISNl5i5aKNvxmOFAbsj8zWv1hJGEl3bWG2REwRM=\n=QkGf\n-----END PGP SIGNATURE-----", "payload": "tree 364ea8904bd135ee93daeff8cd6ce6765874791b\nparent 0df02bb35b8719d32ac48de6bc72e1cec42646ba\nauthor Noa <coolreader18@gmail.com> 1652237780 -0500\ncommitter Noa <coolreader18@gmail.com> 1652466502 -0500\n\nAdd ExitCode::exit_process example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/688dcc68fe2a4bcd781c24b36cfd101fb20a5a50", "html_url": "https://github.com/rust-lang/rust/commit/688dcc68fe2a4bcd781c24b36cfd101fb20a5a50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/688dcc68fe2a4bcd781c24b36cfd101fb20a5a50/comments", "author": {"login": "coolreader18", "id": 33094578, "node_id": "MDQ6VXNlcjMzMDk0NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/33094578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolreader18", "html_url": "https://github.com/coolreader18", "followers_url": "https://api.github.com/users/coolreader18/followers", "following_url": "https://api.github.com/users/coolreader18/following{/other_user}", "gists_url": "https://api.github.com/users/coolreader18/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolreader18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolreader18/subscriptions", "organizations_url": "https://api.github.com/users/coolreader18/orgs", "repos_url": "https://api.github.com/users/coolreader18/repos", "events_url": "https://api.github.com/users/coolreader18/events{/privacy}", "received_events_url": "https://api.github.com/users/coolreader18/received_events", "type": "User", "site_admin": false}, "committer": {"login": "coolreader18", "id": 33094578, "node_id": "MDQ6VXNlcjMzMDk0NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/33094578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolreader18", "html_url": "https://github.com/coolreader18", "followers_url": "https://api.github.com/users/coolreader18/followers", "following_url": "https://api.github.com/users/coolreader18/following{/other_user}", "gists_url": "https://api.github.com/users/coolreader18/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolreader18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolreader18/subscriptions", "organizations_url": "https://api.github.com/users/coolreader18/orgs", "repos_url": "https://api.github.com/users/coolreader18/repos", "events_url": "https://api.github.com/users/coolreader18/events{/privacy}", "received_events_url": "https://api.github.com/users/coolreader18/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0df02bb35b8719d32ac48de6bc72e1cec42646ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/0df02bb35b8719d32ac48de6bc72e1cec42646ba", "html_url": "https://github.com/rust-lang/rust/commit/0df02bb35b8719d32ac48de6bc72e1cec42646ba"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "76fb92e54232dbd412b025d6185b479a195a0c0a", "filename": "library/std/src/process.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/688dcc68fe2a4bcd781c24b36cfd101fb20a5a50/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/688dcc68fe2a4bcd781c24b36cfd101fb20a5a50/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=688dcc68fe2a4bcd781c24b36cfd101fb20a5a50", "patch": "@@ -1741,6 +1741,29 @@ impl ExitCode {\n     /// behavior][exit#platform-specific-behavior]). `ExitCode` exists because of this; only\n     /// `ExitCode`s that are valid on all platforms can be created, so those problems don't exist\n     /// with this method.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(exitcode_exit_method)]\n+    /// # use std::process::ExitCode;\n+    /// # use std::fmt;\n+    /// # enum UhOhError { GenericProblem, Specific, WithCode { exit_code: ExitCode, _x: () } }\n+    /// # impl fmt::Display for UhOhError {\n+    /// #     fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result { unimplemented!() }\n+    /// # }\n+    /// // there's no way to gracefully recover from an UhOhError, so we just\n+    /// // print a message and exit\n+    /// fn handle_unrecoverable_error(err: UhOhError) -> ! {\n+    ///     eprintln!(\"UH OH! {err}\");\n+    ///     let code = match err {\n+    ///         UhOhError::GenericProblem => ExitCode::FAILURE,\n+    ///         UhOhError::Specific => ExitCode::from(3),\n+    ///         UhOhError::WithCode { exit_code, .. } => exit_code,\n+    ///     };\n+    ///     code.exit_process()\n+    /// }\n+    /// ```\n     #[unstable(feature = \"exitcode_exit_method\", issue = \"none\")]\n     pub fn exit_process(self) -> ! {\n         exit(self.to_i32())"}]}