{"sha": "56768235e18a8c02ace37489c4e033bde6118efb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NzY4MjM1ZTE4YThjMDJhY2UzNzQ4OWM0ZTAzM2JkZTYxMThlZmI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T18:53:05Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-11-10T00:11:06Z"}, "message": "Add a few tests around raw pointers and interior mutability", "tree": {"sha": "8904e779cb8d62ba2a97abdbedbb8d591a07d5be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8904e779cb8d62ba2a97abdbedbb8d591a07d5be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56768235e18a8c02ace37489c4e033bde6118efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56768235e18a8c02ace37489c4e033bde6118efb", "html_url": "https://github.com/rust-lang/rust/commit/56768235e18a8c02ace37489c4e033bde6118efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56768235e18a8c02ace37489c4e033bde6118efb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a90406d3b0a8aec72cb62f794ceddb026c86b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a90406d3b0a8aec72cb62f794ceddb026c86b6", "html_url": "https://github.com/rust-lang/rust/commit/38a90406d3b0a8aec72cb62f794ceddb026c86b6"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "db0bcbe2c443e8d618d57f0ac5814aca51ee064a", "filename": "src/test/ui/consts/std/cell.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fcell.rs?ref=56768235e18a8c02ace37489c4e033bde6118efb", "patch": "@@ -0,0 +1,30 @@\n+use std::cell::*;\n+\n+// not ok, because this would create a silent constant with interior mutability.\n+// the rules could be relaxed in the future\n+static FOO: Wrap<*mut u32> = Wrap(Cell::new(42).as_ptr());\n+//~^ ERROR cannot borrow a constant which may contain interior mutability\n+\n+static FOO3: Wrap<Cell<u32>> = Wrap(Cell::new(42));\n+// ok\n+static FOO4: Wrap<*mut u32> = Wrap(FOO3.0.as_ptr());\n+\n+// not ok, because the `as_ptr` call takes a reference to a type with interior mutability\n+// which is not allowed in constants\n+const FOO2: *mut u32 = Cell::new(42).as_ptr();\n+//~^ ERROR cannot borrow a constant which may contain interior mutability\n+\n+struct IMSafeTrustMe(UnsafeCell<u32>);\n+unsafe impl Send for IMSafeTrustMe {}\n+unsafe impl Sync for IMSafeTrustMe {}\n+\n+static BAR: IMSafeTrustMe = IMSafeTrustMe(UnsafeCell::new(5));\n+\n+\n+struct Wrap<T>(T);\n+unsafe impl<T> Send for Wrap<T> {}\n+unsafe impl<T> Sync for Wrap<T> {}\n+\n+static BAR_PTR: Wrap<*mut u32> = Wrap(BAR.0.get());\n+\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "f75aadff6d5ea135a4a9f6893fc1b70bd4399add", "filename": "src/test/ui/consts/std/cell.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fcell.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fcell.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fcell.stderr?ref=56768235e18a8c02ace37489c4e033bde6118efb", "patch": "@@ -0,0 +1,15 @@\n+error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n+  --> $DIR/cell.rs:5:35\n+   |\n+LL | static FOO: Wrap<*mut u32> = Wrap(Cell::new(42).as_ptr());\n+   |                                   ^^^^^^^^^^^^^\n+\n+error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n+  --> $DIR/cell.rs:14:24\n+   |\n+LL | const FOO2: *mut u32 = Cell::new(42).as_ptr();\n+   |                        ^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0492`."}, {"sha": "ce43f66a30c266cd3eb9f4874a23958eb0463512", "filename": "src/test/ui/consts/std/char.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fchar.rs?ref=56768235e18a8c02ace37489c4e033bde6118efb", "patch": "@@ -0,0 +1,9 @@\n+// run-pass\n+\n+static X: bool = 'a'.is_ascii();\n+static Y: bool = '\u00e4'.is_ascii();\n+\n+fn main() {\n+    assert!(X);\n+    assert!(!Y);\n+}\n\\ No newline at end of file"}, {"sha": "e36d5cccd5be8ab65b852f780a618f6933e6e43a", "filename": "src/test/ui/consts/std/iter.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fiter.rs?ref=56768235e18a8c02ace37489c4e033bde6118efb", "patch": "@@ -0,0 +1,9 @@\n+// run-pass\n+\n+const I: std::iter::Empty<u32> = std::iter::empty();\n+\n+fn main() {\n+    for i in I {\n+        panic!(\"magical value creation: {}\", i);\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "7598a20fc28d4bb14aad74baa35f802d3be785cc", "filename": "src/test/ui/consts/std/slice.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56768235e18a8c02ace37489c4e033bde6118efb/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fslice.rs?ref=56768235e18a8c02ace37489c4e033bde6118efb", "patch": "@@ -0,0 +1,10 @@\n+// compile-pass\n+\n+struct Wrap<T>(T);\n+unsafe impl<T> Send for Wrap<T> {}\n+unsafe impl<T> Sync for Wrap<T> {}\n+\n+static FOO: Wrap<*const u32> = Wrap([42, 44, 46].as_ptr());\n+static BAR: Wrap<*const u8> = Wrap(\"hello\".as_ptr());\n+\n+fn main() {}\n\\ No newline at end of file"}]}