{"sha": "45454f073894d9e211d086d0c5a0c91fa54f67a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NDU0ZjA3Mzg5NGQ5ZTIxMWQwODZkMGM1YTBjOTFmYTU0ZjY3YTk=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-05T16:13:59Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-05T16:36:16Z"}, "message": "Avoid mir in implicit_return", "tree": {"sha": "ea64c47267045b29bb441d64082c986a1cae9830", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea64c47267045b29bb441d64082c986a1cae9830"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45454f073894d9e211d086d0c5a0c91fa54f67a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45454f073894d9e211d086d0c5a0c91fa54f67a9", "html_url": "https://github.com/rust-lang/rust/commit/45454f073894d9e211d086d0c5a0c91fa54f67a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45454f073894d9e211d086d0c5a0c91fa54f67a9/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e5453835572784dcdcdf63a4723254507282dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5453835572784dcdcdf63a4723254507282dc7", "html_url": "https://github.com/rust-lang/rust/commit/9e5453835572784dcdcdf63a4723254507282dc7"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "b4f814e1dcccfb1894c73f14abf0ad2d268d0dcd", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/45454f073894d9e211d086d0c5a0c91fa54f67a9/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45454f073894d9e211d086d0c5a0c91fa54f67a9/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=45454f073894d9e211d086d0c5a0c91fa54f67a9", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{fn_has_unsatisfiable_preds, match_panic_def_id, snippet_opt, span_lint_and_then};\n+use crate::utils::{match_panic_def_id, snippet_opt, span_lint_and_then};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n@@ -133,19 +133,13 @@ impl<'tcx> LateLintPass<'tcx> for ImplicitReturn {\n         span: Span,\n         _: HirId,\n     ) {\n-        let def_id = cx.tcx.hir().body_owner_def_id(body.id());\n-\n-        // Building MIR for `fn`s with unsatisfiable preds results in ICE.\n-        if fn_has_unsatisfiable_preds(cx, def_id.to_def_id()) {\n+        if span.from_expansion() {\n             return;\n         }\n-\n-        let mir = cx.tcx.optimized_mir(def_id.to_def_id());\n-\n-        // checking return type through MIR, HIR is not able to determine inferred closure return types\n-        // make sure it's not a macro\n-        if !mir.return_ty().is_unit() && !span.from_expansion() {\n-            expr_match(cx, &body.value);\n+        let body = cx.tcx.hir().body(body.id());\n+        if cx.typeck_results().expr_ty(&body.value).is_unit() {\n+            return;\n         }\n+        expr_match(cx, &body.value);\n     }\n }"}]}