{"sha": "42accc99e6c4ad83876460afbda9d0adab750930", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYWNjYzk5ZTZjNGFkODM4NzY0NjBhZmJkYTlkMGFkYWI3NTA5MzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-15T14:04:12Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:29:29Z"}, "message": "let_chains: Remove ast::ExprKind::{IfLet, WhileLet} and introduce ::Let.", "tree": {"sha": "0a829cb0d212ec89c208651af89375d72e9aa870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a829cb0d212ec89c208651af89375d72e9aa870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42accc99e6c4ad83876460afbda9d0adab750930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42accc99e6c4ad83876460afbda9d0adab750930", "html_url": "https://github.com/rust-lang/rust/commit/42accc99e6c4ad83876460afbda9d0adab750930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42accc99e6c4ad83876460afbda9d0adab750930/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6884aedd5b8709c44c849d055d454db2f78042e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6884aedd5b8709c44c849d055d454db2f78042e", "html_url": "https://github.com/rust-lang/rust/commit/d6884aedd5b8709c44c849d055d454db2f78042e"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "4f2fccd20e5f5eeacd166e6efb12fd7c97f19f76", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/42accc99e6c4ad83876460afbda9d0adab750930/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42accc99e6c4ad83876460afbda9d0adab750930/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=42accc99e6c4ad83876460afbda9d0adab750930", "patch": "@@ -1032,10 +1032,9 @@ impl Expr {\n             ExprKind::Unary(..) => ExprPrecedence::Unary,\n             ExprKind::Lit(_) => ExprPrecedence::Lit,\n             ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n+            ExprKind::Let(..) => ExprPrecedence::Let,\n             ExprKind::If(..) => ExprPrecedence::If,\n-            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n             ExprKind::While(..) => ExprPrecedence::While,\n-            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n             ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n             ExprKind::Loop(..) => ExprPrecedence::Loop,\n             ExprKind::Match(..) => ExprPrecedence::Match,\n@@ -1116,26 +1115,17 @@ pub enum ExprKind {\n     Cast(P<Expr>, P<Ty>),\n     /// A type ascription (e.g., `42: usize`).\n     Type(P<Expr>, P<Ty>),\n+    /// A `let pat = expr` pseudo-expression that only occurs in the scrutinee\n+    /// of `if` / `while` expressions. (e.g., `if let 0 = x { .. }`).\n+    Let(Vec<P<Pat>>, P<Expr>),\n     /// An `if` block, with an optional `else` block.\n     ///\n     /// `if expr { block } else { expr }`\n     If(P<Expr>, P<Block>, Option<P<Expr>>),\n-    /// An `if let` expression with an optional else block\n-    ///\n-    /// `if let pat = expr { block } else { expr }`\n-    ///\n-    /// This is desugared to a `match` expression.\n-    IfLet(Vec<P<Pat>>, P<Expr>, P<Block>, Option<P<Expr>>),\n-    /// A while loop, with an optional label\n+    /// A while loop, with an optional label.\n     ///\n     /// `'label: while expr { block }`\n     While(P<Expr>, P<Block>, Option<Label>),\n-    /// A `while let` loop, with an optional label.\n-    ///\n-    /// `'label: while let pat = expr { block }`\n-    ///\n-    /// This is desugared to a combination of `loop` and `match` expressions.\n-    WhileLet(Vec<P<Pat>>, P<Expr>, P<Block>, Option<Label>),\n     /// A `for` loop, with an optional label.\n     ///\n     /// `'label: for pat in expr { block }`"}]}