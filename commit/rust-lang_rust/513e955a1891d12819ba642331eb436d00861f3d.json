{"sha": "513e955a1891d12819ba642331eb436d00861f3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxM2U5NTVhMTg5MWQxMjgxOWJhNjQyMzMxZWI0MzZkMDA4NjFmM2Q=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-22T04:05:49Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-01T22:29:30Z"}, "message": "Add field `dummy_binding` to `Resolver`.", "tree": {"sha": "a1e9fd5c830006cd48523b3fbe9749e23a6fafce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1e9fd5c830006cd48523b3fbe9749e23a6fafce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/513e955a1891d12819ba642331eb436d00861f3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/513e955a1891d12819ba642331eb436d00861f3d", "html_url": "https://github.com/rust-lang/rust/commit/513e955a1891d12819ba642331eb436d00861f3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/513e955a1891d12819ba642331eb436d00861f3d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95528d1a9839066a29cc1cb50b097d5f84633148", "url": "https://api.github.com/repos/rust-lang/rust/commits/95528d1a9839066a29cc1cb50b097d5f84633148", "html_url": "https://github.com/rust-lang/rust/commit/95528d1a9839066a29cc1cb50b097d5f84633148"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "124a748be326f2a70093941835ab73ccbbcba9a0", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/513e955a1891d12819ba642331eb436d00861f3d/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513e955a1891d12819ba642331eb436d00861f3d/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=513e955a1891d12819ba642331eb436d00861f3d", "patch": "@@ -65,7 +65,7 @@ use syntax::ast::{Item, ItemKind, ImplItem, ImplItemKind};\n use syntax::ast::{Local, Mutability, Pat, PatKind, Path};\n use syntax::ast::{PathSegment, PathParameters, QSelf, TraitItemKind, TraitRef, Ty, TyKind};\n \n-use syntax_pos::Span;\n+use syntax_pos::{Span, DUMMY_SP};\n use errors::DiagnosticBuilder;\n \n use std::cell::{Cell, RefCell};\n@@ -1052,6 +1052,7 @@ pub struct Resolver<'a> {\n     privacy_errors: Vec<PrivacyError<'a>>,\n \n     arenas: &'a ResolverArenas<'a>,\n+    dummy_binding: &'a NameBinding<'a>,\n }\n \n pub struct ResolverArenas<'a> {\n@@ -1203,6 +1204,11 @@ impl<'a> Resolver<'a> {\n             privacy_errors: Vec::new(),\n \n             arenas: arenas,\n+            dummy_binding: arenas.alloc_name_binding(NameBinding {\n+                kind: NameBindingKind::Def(Def::Err),\n+                span: DUMMY_SP,\n+                vis: ty::Visibility::Public,\n+            }),\n         }\n     }\n "}, {"sha": "f02e9b048dea76052705dbee6ad7339fea58581a", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/513e955a1891d12819ba642331eb436d00861f3d/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513e955a1891d12819ba642331eb436d00861f3d/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=513e955a1891d12819ba642331eb436d00861f3d", "patch": "@@ -27,7 +27,7 @@ use rustc::hir::def::*;\n \n use syntax::ast::{NodeId, Name};\n use syntax::util::lev_distance::find_best_match_for_name;\n-use syntax_pos::{Span, DUMMY_SP};\n+use syntax_pos::Span;\n \n use std::cell::{Cell, RefCell};\n \n@@ -442,13 +442,8 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n     // failed resolution\n     fn import_dummy_binding(&mut self, directive: &'b ImportDirective<'b>) {\n         if let SingleImport { target, .. } = directive.subclass {\n-            let dummy_binding = self.arenas.alloc_name_binding(NameBinding {\n-                kind: NameBindingKind::Def(Def::Err),\n-                span: DUMMY_SP,\n-                vis: ty::Visibility::Public,\n-            });\n+            let dummy_binding = self.dummy_binding;\n             let dummy_binding = self.import(dummy_binding, directive);\n-\n             let _ = self.try_define(directive.parent, target, ValueNS, dummy_binding.clone());\n             let _ = self.try_define(directive.parent, target, TypeNS, dummy_binding);\n         }"}]}