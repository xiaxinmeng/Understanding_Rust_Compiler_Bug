{"sha": "b2844190640fc9a69d087e30e3c3cf37cbd40142", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyODQ0MTkwNjQwZmM5YTY5ZDA4N2UzMGUzYzNjZjM3Y2JkNDAxNDI=", "commit": {"author": {"name": "Matt Peterson", "email": "ricochet1k@gmail.com", "date": "2017-12-21T15:44:44Z"}, "committer": {"name": "Matt Peterson", "email": "ricochet1k@gmail.com", "date": "2017-12-28T16:33:44Z"}, "message": "Add feature gate macro_lifetime_matcher", "tree": {"sha": "bfc74d6618ec4d607cd8aff57679fa0dc99f61b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfc74d6618ec4d607cd8aff57679fa0dc99f61b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2844190640fc9a69d087e30e3c3cf37cbd40142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2844190640fc9a69d087e30e3c3cf37cbd40142", "html_url": "https://github.com/rust-lang/rust/commit/b2844190640fc9a69d087e30e3c3cf37cbd40142", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2844190640fc9a69d087e30e3c3cf37cbd40142/comments", "author": {"login": "ricochet1k", "id": 76901, "node_id": "MDQ6VXNlcjc2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/76901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricochet1k", "html_url": "https://github.com/ricochet1k", "followers_url": "https://api.github.com/users/ricochet1k/followers", "following_url": "https://api.github.com/users/ricochet1k/following{/other_user}", "gists_url": "https://api.github.com/users/ricochet1k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricochet1k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricochet1k/subscriptions", "organizations_url": "https://api.github.com/users/ricochet1k/orgs", "repos_url": "https://api.github.com/users/ricochet1k/repos", "events_url": "https://api.github.com/users/ricochet1k/events{/privacy}", "received_events_url": "https://api.github.com/users/ricochet1k/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ricochet1k", "id": 76901, "node_id": "MDQ6VXNlcjc2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/76901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricochet1k", "html_url": "https://github.com/ricochet1k", "followers_url": "https://api.github.com/users/ricochet1k/followers", "following_url": "https://api.github.com/users/ricochet1k/following{/other_user}", "gists_url": "https://api.github.com/users/ricochet1k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricochet1k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricochet1k/subscriptions", "organizations_url": "https://api.github.com/users/ricochet1k/orgs", "repos_url": "https://api.github.com/users/ricochet1k/repos", "events_url": "https://api.github.com/users/ricochet1k/events{/privacy}", "received_events_url": "https://api.github.com/users/ricochet1k/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e838cfce03caf9394fb71c909ab9e1afa8bae282", "url": "https://api.github.com/repos/rust-lang/rust/commits/e838cfce03caf9394fb71c909ab9e1afa8bae282", "html_url": "https://github.com/rust-lang/rust/commit/e838cfce03caf9394fb71c909ab9e1afa8bae282"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "5412decd3b744d71092c7541a567e00f5f520703", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -886,8 +886,20 @@ fn is_legal_fragment_specifier(sess: &ParseSess,\n                                frag_name: &str,\n                                frag_span: Span) -> bool {\n     match frag_name {\n-        \"item\" | \"block\" | \"stmt\" | \"expr\" | \"pat\" | \"lifetime\" |\n+        \"item\" | \"block\" | \"stmt\" | \"expr\" | \"pat\" |\n         \"path\" | \"ty\" | \"ident\" | \"meta\" | \"tt\" | \"\" => true,\n+        \"lifetime\" => {\n+            if     !features.borrow().macro_lifetime_matcher\n+                && !attr::contains_name(attrs, \"allow_internal_unstable\") {\n+                let explain = feature_gate::EXPLAIN_LIFETIME_MATCHER;\n+                emit_feature_err(sess,\n+                                 \"macro_lifetime_matcher\",\n+                                 frag_span,\n+                                 GateIssue::Language,\n+                                 explain);\n+            }\n+            true\n+        },\n         \"vis\" => {\n             if     !features.borrow().macro_vis_matcher\n                 && !attr::contains_name(attrs, \"allow_internal_unstable\") {"}, {"sha": "471251b06300943f4f2a493dac9bc6785dd584cf", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -447,6 +447,9 @@ declare_features! (\n \n     // Termination trait in main (RFC 1937)\n     (active, termination_trait, \"1.24.0\", Some(43301)),\n+\n+    // Allows use of the :lifetime macro fragment specifier\n+    (active, macro_lifetime_matcher, \"1.24.0\", Some(46895)),\n );\n \n declare_features! (\n@@ -520,7 +523,7 @@ declare_features! (\n     (accepted, loop_break_value, \"1.19.0\", Some(37339)),\n     // Permits numeric fields in struct expressions and patterns.\n     (accepted, relaxed_adts, \"1.19.0\", Some(35626)),\n-    // Coerces non capturing closures to function pointers\n+   // Coerces non capturing closures to function pointers\n     (accepted, closure_to_fn_coercion, \"1.19.0\", Some(39817)),\n     // Allows attributes on struct literal fields.\n     (accepted, struct_field_attributes, \"1.20.0\", Some(38814)),\n@@ -1226,6 +1229,9 @@ pub const EXPLAIN_DERIVE_UNDERSCORE: &'static str =\n pub const EXPLAIN_VIS_MATCHER: &'static str =\n     \":vis fragment specifier is experimental and subject to change\";\n \n+pub const EXPLAIN_LIFETIME_MATCHER: &'static str =\n+    \":lifetime fragment specifier is experimental and subject to change\";\n+\n pub const EXPLAIN_PLACEMENT_IN: &'static str =\n     \"placement-in expression syntax is experimental and subject to change.\";\n "}, {"sha": "b0c9280b6ce44fb3effe9cf291f64f24296d79a7", "filename": "src/test/run-pass/macro-lifetime-used-with-bound.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-bound.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(macro_lifetime_matcher)]\n+\n macro_rules! foo {\n     ($l:lifetime, $l2:lifetime) => {\n         fn f<$l: $l2, $l2>(arg: &$l str, arg2: &$l2 str) -> &$l str {"}, {"sha": "8a2d76e17df6846ada9f4cccd751b70c167ed81e", "filename": "src/test/run-pass/macro-lifetime-used-with-labels.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-labels.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unreachable_code)]\n+#![feature(macro_lifetime_matcher)]\n \n macro_rules! x {\n     ($a:lifetime) => {"}, {"sha": "468ee2e94365723690f85f750b1467be8bb9eea1", "filename": "src/test/run-pass/macro-lifetime-used-with-static.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-lifetime-used-with-static.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(macro_lifetime_matcher)]\n+\n macro_rules! foo {\n     ($l:lifetime) => {\n         fn f(arg: &$l str) -> &$l str {"}, {"sha": "db521ca7f103fb74d101fc830bf35e9254e0f9c0", "filename": "src/test/run-pass/macro-lifetime.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Frun-pass%2Fmacro-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-lifetime.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(macro_lifetime_matcher)]\n+\n macro_rules! foo {\n     ($l:lifetime) => {\n         fn f<$l>(arg: &$l str) -> &$l str {"}, {"sha": "0d107d283cdff39818d955c902fe0e7091c2dfc1", "filename": "src/test/ui/feature-gate-macro-lifetime-matcher.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Fui%2Ffeature-gate-macro-lifetime-matcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Fui%2Ffeature-gate-macro-lifetime-matcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-macro-lifetime-matcher.rs?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that the :lifetime macro fragment cannot be used when macro_lifetime_matcher\n+// feature gate is not used.\n+\n+macro_rules! m { ($lt:lifetime) => {} }\n+//~^ ERROR :lifetime fragment specifier is experimental and subject to change\n+\n+fn main() {\n+    m!('a);\n+}"}, {"sha": "e78f7684cf2bea71203a8a569428d445209f01ef", "filename": "src/test/ui/feature-gate-macro-lifetime-matcher.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Fui%2Ffeature-gate-macro-lifetime-matcher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2844190640fc9a69d087e30e3c3cf37cbd40142/src%2Ftest%2Fui%2Ffeature-gate-macro-lifetime-matcher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-macro-lifetime-matcher.stderr?ref=b2844190640fc9a69d087e30e3c3cf37cbd40142", "patch": "@@ -0,0 +1,10 @@\n+error: :lifetime fragment specifier is experimental and subject to change (see issue #46895)\n+  --> $DIR/feature-gate-macro-lifetime-matcher.rs:14:19\n+   |\n+14 | macro_rules! m { ($lt:lifetime) => {} }\n+   |                   ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(macro_lifetime_matcher)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+"}]}