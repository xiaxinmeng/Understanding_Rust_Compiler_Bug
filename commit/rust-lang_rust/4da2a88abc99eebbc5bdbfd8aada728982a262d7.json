{"sha": "4da2a88abc99eebbc5bdbfd8aada728982a262d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYTJhODhhYmM5OWVlYmJjNWJkYmZkOGFhZGE3Mjg5ODJhMjYyZDc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-08-21T08:24:12Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-08-21T10:49:18Z"}, "message": "Expose mir-borrowck via a query.\n\n(A followup commit removes the mir::transform based entry point.)", "tree": {"sha": "05e05afa4a99c577d333c0831089563fca31688c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05e05afa4a99c577d333c0831089563fca31688c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4da2a88abc99eebbc5bdbfd8aada728982a262d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4da2a88abc99eebbc5bdbfd8aada728982a262d7", "html_url": "https://github.com/rust-lang/rust/commit/4da2a88abc99eebbc5bdbfd8aada728982a262d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4da2a88abc99eebbc5bdbfd8aada728982a262d7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "757b7ac2abd69d97ba196b76f0bbf78c377aaea9", "url": "https://api.github.com/repos/rust-lang/rust/commits/757b7ac2abd69d97ba196b76f0bbf78c377aaea9", "html_url": "https://github.com/rust-lang/rust/commit/757b7ac2abd69d97ba196b76f0bbf78c377aaea9"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "9e5d40812311d992a35a47fec8087ecfdb5fd61d", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -411,6 +411,8 @@ define_dep_nodes!( <'tcx>\n \n     [] BorrowCheckKrate,\n     [] BorrowCheck(DefId),\n+    [] MirBorrowCheck(DefId),\n+\n     [] RvalueCheck(DefId),\n     [] Reachability,\n     [] MirKeys,"}, {"sha": "26b51630d93e0d1da168020e87fdf2ac56476864", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -923,6 +923,8 @@ define_maps! { <'tcx>\n     [] coherent_trait: coherent_trait_dep_node((CrateNum, DefId)) -> (),\n \n     [] borrowck: BorrowCheck(DefId) -> (),\n+    // FIXME: shouldn't this return a `Result<(), BorrowckErrors>` instead?\n+    [] mir_borrowck: MirBorrowCheck(DefId) -> (),\n \n     /// Gets a complete map from all types to their inherent impls.\n     /// Not meant to be used directly outside of coherence."}, {"sha": "011c769519ad5fd03c44674f1a985a00ea48fba8", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -1075,6 +1075,10 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n              \"borrow checking\",\n              || borrowck::check_crate(tcx));\n \n+        time(time_passes,\n+             \"MIR borrow checking\",\n+             || for def_id in tcx.body_owners() { tcx.mir_borrowck(def_id) });\n+\n         // Avoid overwhelming user with errors if type checking failed.\n         // I'm not sure how helpful this is, to be honest, but it avoids\n         // a"}, {"sha": "366608ac699954508f941152071112f06cb31f82", "filename": "src/librustc_mir/borrow_check.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use rustc::hir::def_id::{DefId};\n+use rustc::mir::transform::{MirSource};\n+use rustc::ty::{TyCtxt};\n+use rustc::ty::maps::Providers;\n+\n+pub fn provide(providers: &mut Providers) {\n+    *providers = Providers {\n+        mir_borrowck,\n+        ..*providers\n+    };\n+}\n+\n+fn mir_borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) {\n+    let mir = tcx.mir_validated(def_id);\n+    let src = MirSource::from_local_def_id(tcx, def_id);\n+    debug!(\"run query mir_borrowck: {}\", tcx.node_path_str(src.item_id()));\n+\n+    if tcx.has_attr(def_id, \"rustc_mir_borrowck\") || tcx.sess.opts.debugging_opts.borrowck_mir {\n+        ::transform::borrow_check::borrowck_mir(tcx, src, &mir.borrow());\n+    }\n+}"}, {"sha": "7aa4679992471fa436bd11324728b22f8ebc25ed", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -45,6 +45,7 @@ extern crate core; // for NonZero\n \n mod diagnostics;\n \n+mod borrow_check;\n mod build;\n mod dataflow;\n mod hair;\n@@ -55,6 +56,7 @@ pub mod util;\n use rustc::ty::maps::Providers;\n \n pub fn provide(providers: &mut Providers) {\n+    borrow_check::provide(providers);\n     shim::provide(providers);\n     transform::provide(providers);\n }"}, {"sha": "c5333134a68618b05652df24e30b4672cdf99f84", "filename": "src/librustc_mir/transform/borrow_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Ftransform%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Ftransform%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fborrow_check.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -57,7 +57,7 @@ impl MirPass for BorrowckMir {\n     }\n }\n \n-fn borrowck_mir<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource, mir: &Mir<'tcx>)\n+pub(crate) fn borrowck_mir<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource, mir: &Mir<'tcx>)\n {\n     let id = src.item_id();\n     let def_id = tcx.hir.local_def_id(id);"}, {"sha": "2536e4e576dd2b5169f5b9b967c68acfc0224aed", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da2a88abc99eebbc5bdbfd8aada728982a262d7/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=4da2a88abc99eebbc5bdbfd8aada728982a262d7", "patch": "@@ -123,8 +123,9 @@ fn mir_validated<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> &'tcx\n }\n \n fn optimized_mir<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> &'tcx Mir<'tcx> {\n-    // Borrowck uses `mir_validated`, so we have to force it to\n+    // (Mir-)Borrowck uses `mir_validated`, so we have to force it to\n     // execute before we can steal.\n+    ty::queries::mir_borrowck::force(tcx, DUMMY_SP, def_id);\n     ty::queries::borrowck::force(tcx, DUMMY_SP, def_id);\n \n     let mut mir = tcx.mir_validated(def_id).steal();"}]}