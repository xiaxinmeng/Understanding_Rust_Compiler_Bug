{"sha": "c09dac10738791460ff4897f5b3d12b62b2be9cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwOWRhYzEwNzM4NzkxNDYwZmY0ODk3ZjViM2QxMmI2MmIyYmU5Y2M=", "commit": {"author": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-04T18:01:32Z"}, "committer": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-04T18:01:32Z"}, "message": "add partial eq bound to remove_item", "tree": {"sha": "0176f27781832a0a5368229395429184243ee926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0176f27781832a0a5368229395429184243ee926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c09dac10738791460ff4897f5b3d12b62b2be9cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c09dac10738791460ff4897f5b3d12b62b2be9cc", "html_url": "https://github.com/rust-lang/rust/commit/c09dac10738791460ff4897f5b3d12b62b2be9cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c09dac10738791460ff4897f5b3d12b62b2be9cc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf2e00e38ad404d563f03acbcf06b08813fd086", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf2e00e38ad404d563f03acbcf06b08813fd086", "html_url": "https://github.com/rust-lang/rust/commit/abf2e00e38ad404d563f03acbcf06b08813fd086"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "0825dc228d8237dd8e78f1e1ebe2a3eda776cbcf", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c09dac10738791460ff4897f5b3d12b62b2be9cc/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c09dac10738791460ff4897f5b3d12b62b2be9cc/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=c09dac10738791460ff4897f5b3d12b62b2be9cc", "patch": "@@ -1688,6 +1688,9 @@ impl<T: PartialEq> Vec<T> {\n     pub fn dedup(&mut self) {\n         self.dedup_by(|a, b| a == b)\n     }\n+}\n+\n+impl <T> Vec<T> {\n \n     /// Removes the first instance of `item` from the vector if the item exists.\n     ///\n@@ -1701,11 +1704,15 @@ impl<T: PartialEq> Vec<T> {\n     ///\n     /// assert_eq!(vec, vec![2, 3, 1]);\n     /// ```\n+\n     #[unstable(feature = \"vec_remove_item\", reason = \"recently added\", issue = \"40062\")]\n-    pub fn remove_item(&mut self, item: &T) -> Option<T> {\n+    pub fn remove_item<V>(&mut self, item: &V) -> Option<T>\n+    where T: PartialEq<V>\n+    {\n         let pos = self.iter().position(|x| *x == *item)?;\n         Some(self.remove(pos))\n     }\n+\n }\n \n ////////////////////////////////////////////////////////////////////////////////"}]}