{"sha": "71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "node_id": "C_kwDOAAsO6NoAKDcxOTI3YWQwODNmMmNjYTkzYjhkZTM4OGUyZTNiYWMwY2M3YmQzZjc", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-23T16:15:04Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-23T16:44:02Z"}, "message": "resolve: Rename some cstore methods to match queries and add comments\n\nabout costs associated with replacing them with query calls.", "tree": {"sha": "79d0638435cf32ef9f86bb9b2ab7714a751b7de6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79d0638435cf32ef9f86bb9b2ab7714a751b7de6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "html_url": "https://github.com/rust-lang/rust/commit/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99c49d95cd7d704d2226859cfdc419c930cde9c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/99c49d95cd7d704d2226859cfdc419c930cde9c6", "html_url": "https://github.com/rust-lang/rust/commit/99c49d95cd7d704d2226859cfdc419c930cde9c6"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "06a64f0db0e3232da08399f4b21785f34479d217", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "patch": "@@ -1041,13 +1041,6 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n         self.root.tables.optimized_mir.get(self, id).is_some()\n     }\n \n-    fn module_expansion(self, id: DefIndex, sess: &Session) -> ExpnId {\n-        match self.def_kind(id) {\n-            DefKind::Mod | DefKind::Enum | DefKind::Trait => self.get_expn_that_defined(id, sess),\n-            _ => panic!(\"Expected module, found {:?}\", self.local_def_id(id)),\n-        }\n-    }\n-\n     fn get_fn_has_self_parameter(self, id: DefIndex, sess: &'a Session) -> bool {\n         self.root\n             .tables"}, {"sha": "0d54f2926365424f900753872e1ad1d28b8faf21", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "patch": "@@ -537,16 +537,16 @@ impl CStore {\n         )\n     }\n \n-    pub fn get_span_untracked(&self, def_id: DefId, sess: &Session) -> Span {\n+    pub fn def_span_untracked(&self, def_id: DefId, sess: &Session) -> Span {\n         self.get_crate_data(def_id.krate).get_span(def_id.index, sess)\n     }\n \n-    pub fn def_kind(&self, def: DefId) -> DefKind {\n+    pub fn def_kind_untracked(&self, def: DefId) -> DefKind {\n         self.get_crate_data(def.krate).def_kind(def.index)\n     }\n \n-    pub fn module_expansion_untracked(&self, def_id: DefId, sess: &Session) -> ExpnId {\n-        self.get_crate_data(def_id.krate).module_expansion(def_id.index, sess)\n+    pub fn expn_that_defined_untracked(&self, def_id: DefId, sess: &Session) -> ExpnId {\n+        self.get_crate_data(def_id.krate).get_expn_that_defined(def_id.index, sess)\n     }\n \n     /// Only public-facing way to traverse all the definitions in a non-local crate."}, {"sha": "19ccb3a6484af217e1c9b4309c9987dcbd180267", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "patch": "@@ -114,13 +114,16 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         }\n \n         if !def_id.is_local() {\n-            let def_kind = self.cstore().def_kind(def_id);\n+            // Query `def_kind` is not used because query system overhead is too expensive here.\n+            let def_kind = self.cstore().def_kind_untracked(def_id);\n             if let DefKind::Mod | DefKind::Enum | DefKind::Trait = def_kind {\n                 let parent = self\n                     .tcx\n                     .opt_parent(def_id)\n                     .map(|parent_id| self.get_nearest_non_block_module(parent_id));\n-                let expn_id = self.cstore().module_expansion_untracked(def_id, &self.tcx.sess);\n+                // Query `expn_that_defined` is not used because\n+                // hashing spans in its result is expensive.\n+                let expn_id = self.cstore().expn_that_defined_untracked(def_id, &self.tcx.sess);\n                 return Some(self.new_module(\n                     parent,\n                     ModuleKind::Def(def_kind, def_id, self.tcx.item_name(def_id)),\n@@ -194,6 +197,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n     }\n \n     pub(crate) fn build_reduced_graph_external(&mut self, module: Module<'a>) {\n+        // Query `module_children` is not used because hashing spans in its result is expensive.\n         let children =\n             Vec::from_iter(self.cstore().module_children_untracked(module.def_id(), self.tcx.sess));\n         for child in children {"}, {"sha": "aabb7f880a5cdefe0d5ab591b8ae8e516acb4c4e", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71927ad083f2cca93b8de388e2e3bac0cc7bd3f7/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=71927ad083f2cca93b8de388e2e3bac0cc7bd3f7", "patch": "@@ -1871,7 +1871,8 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n     fn def_span(&self, def_id: DefId) -> Span {\n         match def_id.as_local() {\n             Some(def_id) => self.tcx.source_span(def_id),\n-            None => self.cstore().get_span_untracked(def_id, self.tcx.sess),\n+            // Query `def_span` is not used because hashing its result span is expensive.\n+            None => self.cstore().def_span_untracked(def_id, self.tcx.sess),\n         }\n     }\n "}]}