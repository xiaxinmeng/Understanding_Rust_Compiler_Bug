{"sha": "fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNzc2N2UxZWE4MjViYjRjYmFkYmIwNWMwYmZhOGZmOGE5MTAwZTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-23T21:53:08Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-26T22:24:17Z"}, "message": "review comment", "tree": {"sha": "7a4c42298b4a55a34d6c2d6493812567f608533b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a4c42298b4a55a34d6c2d6493812567f608533b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1", "html_url": "https://github.com/rust-lang/rust/commit/fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0bd090efb574cda08647ac07e1870cdafe4ac7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bd090efb574cda08647ac07e1870cdafe4ac7d", "html_url": "https://github.com/rust-lang/rust/commit/d0bd090efb574cda08647ac07e1870cdafe4ac7d"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "fbd9088797e229de6ca37636f044c326214c1deb", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=fa7767e1ea825bb4cbadbb05c0bfa8ff8a9100e1", "patch": "@@ -598,18 +598,16 @@ impl CodeMap {\n     /// If `sp` points to `\"let mut x\"`, then a span pointing at `\"let \"` will be returned.\n     pub fn span_until_non_whitespace(&self, sp: Span) -> Span {\n         if let Ok(snippet) = self.span_to_snippet(sp) {\n-            let mut offset = 0;\n-            let mut pos = 0;\n+            let mut offset = 1;\n             // get the bytes width of all the non-whitespace characters\n-            for (i, c) in snippet.chars().take_while(|c| !c.is_whitespace()).enumerate() {\n+            for c in snippet.chars().take_while(|c| !c.is_whitespace()) {\n                 offset += c.len_utf8();\n-                pos = i + 1;\n             }\n             // get the bytes width of all the whitespace characters after that\n-            for c in snippet[pos..].chars().take_while(|c| c.is_whitespace()) {\n+            for c in snippet[offset..].chars().take_while(|c| c.is_whitespace()) {\n                 offset += c.len_utf8();\n             }\n-            if offset != 0 {\n+            if offset > 1 {\n                 return sp.with_hi(BytePos(sp.lo().0 + offset as u32));\n             }\n         }"}]}