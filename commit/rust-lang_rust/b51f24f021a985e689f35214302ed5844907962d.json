{"sha": "b51f24f021a985e689f35214302ed5844907962d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MWYyNGYwMjFhOTg1ZTY4OWYzNTIxNDMwMmVkNTg0NDkwNzk2MmQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-01T19:46:30Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-01T19:46:30Z"}, "message": "Make the reasoning more explicit.", "tree": {"sha": "34130885fe826928075f3777b65e1c4b6ade1b85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34130885fe826928075f3777b65e1c4b6ade1b85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b51f24f021a985e689f35214302ed5844907962d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b51f24f021a985e689f35214302ed5844907962d", "html_url": "https://github.com/rust-lang/rust/commit/b51f24f021a985e689f35214302ed5844907962d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b51f24f021a985e689f35214302ed5844907962d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a6d5c2bebfbbbbcf3c196bd83e67681e8ecaa1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6d5c2bebfbbbbcf3c196bd83e67681e8ecaa1c", "html_url": "https://github.com/rust-lang/rust/commit/3a6d5c2bebfbbbbcf3c196bd83e67681e8ecaa1c"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "71e67dfee538bdee7f553a687eb03e3aed6e8e72", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b51f24f021a985e689f35214302ed5844907962d/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b51f24f021a985e689f35214302ed5844907962d/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=b51f24f021a985e689f35214302ed5844907962d", "patch": "@@ -44,7 +44,7 @@ rustc_index::newtype_index! {\n \n impl DepNodeIndex {\n     pub const INVALID: DepNodeIndex = DepNodeIndex::MAX;\n-    pub const DUMMY_ANON: DepNodeIndex = DepNodeIndex::from_u32(0);\n+    pub const SINGLETON_DEPENDENCYLESS_ANON_NODE: DepNodeIndex = DepNodeIndex::from_u32(0);\n }\n \n impl std::convert::From<DepNodeIndex> for QueryInvocationId {\n@@ -121,14 +121,14 @@ impl<K: DepKind> DepGraph<K> {\n         let current =\n             CurrentDepGraph::new(prev_graph_node_count, encoder, record_graph, record_stats);\n \n-        // Instantiate an *always green* node for dependency-less anonymous queries.\n+        // Instantiate a dependy-less node only once for anonymous queries.\n         let _green_node_index = current.intern_new_node(\n             profiler,\n             DepNode { kind: DepKind::NULL, hash: current.anon_id_seed.into() },\n             smallvec![],\n             Fingerprint::ZERO,\n         );\n-        debug_assert_eq!(_green_node_index, DepNodeIndex::DUMMY_ANON);\n+        debug_assert_eq!(_green_node_index, DepNodeIndex::SINGLETON_DEPENDENCYLESS_ANON_NODE);\n \n         DepGraph {\n             data: Some(Lrc::new(DepGraphData {\n@@ -300,8 +300,12 @@ impl<K: DepKind> DepGraph<K> {\n \n             let dep_node_index = match task_deps.len() {\n                 0 => {\n-                    // Dependency-less anonymous nodes can safely be replaced by a dummy node.\n-                    DepNodeIndex::DUMMY_ANON\n+                    // Because the dep-node id of anon nodes is computed from the sets of its\n+                    // dependencies we already know what the ID of this dependency-less node is\n+                    // going to be (i.e. equal to the precomputed\n+                    // `SINGLETON_DEPENDENCYLESS_ANON_NODE`). As a consequence we can skip creating\n+                    // a `StableHasher` and sending the node through interning.\n+                    DepNodeIndex::SINGLETON_DEPENDENCYLESS_ANON_NODE\n                 }\n                 1 => {\n                     // When there is only one dependency, don't bother creating a node."}]}