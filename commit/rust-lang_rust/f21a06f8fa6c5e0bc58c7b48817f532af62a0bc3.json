{"sha": "f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3", "node_id": "C_kwDOAAsO6NoAKGYyMWEwNmY4ZmE2YzVlMGJjNThjN2I0ODgxN2Y1MzJhZjYyYTBiYzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-30T20:51:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-30T20:51:03Z"}, "message": "Rollup merge of #99962 - Mark-Simulacrum:detect-ci-artifact-channel, r=jyn514\n\nDiscover channel for LLVM download\n\nr? `@jyn514`\ncc `@RalfJung`\n\nReported on Zulip: https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/No.20prebuilt.20LLVM.20for.20the.20beta.20branch.3F", "tree": {"sha": "24c9bc84721b216023f64394714d5ec09f24c3da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24c9bc84721b216023f64394714d5ec09f24c3da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi5Zm3CRBK7hj4Ov3rIwAAFdoIAI1BQ/xV27sZs/u4NDFuzzGc\nnVU2Us9IXK7B/fYv9f2Po6NiwHLezVzi0hIcAz29mxac6nPdGsVg6Oqj27zImsZx\n8LDay2sO72aNSj7k22oqpK27Dc92uvuRzC+x6HckSatILoljRgQxJFtKoJ4zCLxG\neKneh3zBjZfvI3q3FKdGrhk0u90yVkUzO7Mw67hB2k5fJ9RfWEIJk5vAfZzjIlEj\nYwqBs39iqVmoOa5l70TAfn5YpIg9jm6jN7EUo8delzbwEM+JSJh7KQijLx05b4Pr\ngE4jzf5VWtAUhL7HLhqAtwejzpsT/486lu8lDS4QDIKPqkzv5KcAeIlmzXyT/Sw=\n=AZh/\n-----END PGP SIGNATURE-----\n", "payload": "tree 24c9bc84721b216023f64394714d5ec09f24c3da\nparent b9ad36c387405ddfd51bf9b245669cc71b55b9a6\nparent d63e982cd924ed4d4fbcbb42b9614fc24a91f211\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659214263 +0200\ncommitter GitHub <noreply@github.com> 1659214263 +0200\n\nRollup merge of #99962 - Mark-Simulacrum:detect-ci-artifact-channel, r=jyn514\n\nDiscover channel for LLVM download\n\nr? `@jyn514`\ncc `@RalfJung`\n\nReported on Zulip: https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/No.20prebuilt.20LLVM.20for.20the.20beta.20branch.3F\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3", "html_url": "https://github.com/rust-lang/rust/commit/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9ad36c387405ddfd51bf9b245669cc71b55b9a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ad36c387405ddfd51bf9b245669cc71b55b9a6", "html_url": "https://github.com/rust-lang/rust/commit/b9ad36c387405ddfd51bf9b245669cc71b55b9a6"}, {"sha": "d63e982cd924ed4d4fbcbb42b9614fc24a91f211", "url": "https://api.github.com/repos/rust-lang/rust/commits/d63e982cd924ed4d4fbcbb42b9614fc24a91f211", "html_url": "https://github.com/rust-lang/rust/commit/d63e982cd924ed4d4fbcbb42b9614fc24a91f211"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "4325a237c69da6ec828a9fc9bedbf66ca25fc897", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3", "patch": "@@ -1312,6 +1312,13 @@ impl Config {\n         git\n     }\n \n+    pub(crate) fn artifact_channel(&self, commit: &str) -> String {\n+        let mut channel = self.git();\n+        channel.arg(\"show\").arg(format!(\"{}:src/ci/channel\", commit));\n+        let channel = output(&mut channel);\n+        channel.trim().to_owned()\n+    }\n+\n     /// Try to find the relative path of `bindir`, otherwise return it in full.\n     pub fn bindir_relative(&self) -> &Path {\n         let bindir = &self.bindir;\n@@ -1547,8 +1554,7 @@ fn maybe_download_rustfmt(builder: &Builder<'_>) -> Option<PathBuf> {\n \n fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n     builder.verbose(&format!(\"using downloaded stage2 artifacts from CI (commit {commit})\"));\n-    // FIXME: support downloading artifacts from the beta channel\n-    const CHANNEL: &str = \"nightly\";\n+    let channel = builder.config.artifact_channel(commit);\n     let host = builder.config.build.triple;\n     let bin_root = builder.out.join(host).join(\"ci-rustc\");\n     let rustc_stamp = bin_root.join(\".rustc-stamp\");\n@@ -1557,13 +1563,13 @@ fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n         if bin_root.exists() {\n             t!(fs::remove_dir_all(&bin_root));\n         }\n-        let filename = format!(\"rust-std-{CHANNEL}-{host}.tar.xz\");\n+        let filename = format!(\"rust-std-{channel}-{host}.tar.xz\");\n         let pattern = format!(\"rust-std-{host}\");\n         download_ci_component(builder, filename, &pattern, commit);\n-        let filename = format!(\"rustc-{CHANNEL}-{host}.tar.xz\");\n+        let filename = format!(\"rustc-{channel}-{host}.tar.xz\");\n         download_ci_component(builder, filename, \"rustc\", commit);\n         // download-rustc doesn't need its own cargo, it can just use beta's.\n-        let filename = format!(\"rustc-dev-{CHANNEL}-{host}.tar.xz\");\n+        let filename = format!(\"rustc-dev-{channel}-{host}.tar.xz\");\n         download_ci_component(builder, filename, \"rustc-dev\", commit);\n \n         builder.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustc\"));"}, {"sha": "3347246ea8f6feb2c1c37148a60db611d6a2da92", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=f21a06f8fa6c5e0bc58c7b48817f532af62a0bc3", "patch": "@@ -189,7 +189,8 @@ fn download_ci_llvm(builder: &Builder<'_>, llvm_sha: &str) {\n     } else {\n         &builder.config.stage0_metadata.config.artifacts_server\n     };\n-    let filename = format!(\"rust-dev-nightly-{}.tar.xz\", builder.build.build.triple);\n+    let channel = builder.config.artifact_channel(llvm_sha);\n+    let filename = format!(\"rust-dev-{}-{}.tar.xz\", channel, builder.build.build.triple);\n     let tarball = rustc_cache.join(&filename);\n     if !tarball.exists() {\n         let help_on_error = \"error: failed to download llvm from ci"}]}