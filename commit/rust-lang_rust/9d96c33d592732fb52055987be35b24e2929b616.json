{"sha": "9d96c33d592732fb52055987be35b24e2929b616", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkOTZjMzNkNTkyNzMyZmI1MjA1NTk4N2JlMzViMjRlMjkyOWI2MTY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-09T08:33:45Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-09T08:33:45Z"}, "message": "Inherit alignment to last else", "tree": {"sha": "bf65c0da3d4703dd2eba6a131f2adf9992fc4ad6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf65c0da3d4703dd2eba6a131f2adf9992fc4ad6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d96c33d592732fb52055987be35b24e2929b616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d96c33d592732fb52055987be35b24e2929b616", "html_url": "https://github.com/rust-lang/rust/commit/9d96c33d592732fb52055987be35b24e2929b616", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d96c33d592732fb52055987be35b24e2929b616/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac6e6dfd5d5ed5d98f1c4df0a935463c80b22987", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6e6dfd5d5ed5d98f1c4df0a935463c80b22987", "html_url": "https://github.com/rust-lang/rust/commit/ac6e6dfd5d5ed5d98f1c4df0a935463c80b22987"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "6a63e1733d97142ac1a27d6340500346ded53eb3", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d96c33d592732fb52055987be35b24e2929b616/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d96c33d592732fb52055987be35b24e2929b616/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=9d96c33d592732fb52055987be35b24e2929b616", "patch": "@@ -988,8 +988,11 @@ impl<'a> Rewrite for ControlFlow<'a> {\n \n         if let Some(else_block) = self.else_block {\n             // Since this is an else block, we should not indent for the assignment preceding\n-            // the original if, so set shape.offset to 0.\n-            let shape = Shape { offset: 0, ..shape };\n+            // the original if, so set shape.offset to shape.indent.alignment.\n+            let shape = Shape {\n+                offset: shape.indent.alignment,\n+                ..shape\n+            };\n             let mut last_in_chain = false;\n             let rewrite = match else_block.node {\n                 // If the else expression is another if-else expression, prevent it"}, {"sha": "1b45aa5d6162929f9a39bccee67a45881ae93802", "filename": "tests/source/issue-1468.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9d96c33d592732fb52055987be35b24e2929b616/tests%2Fsource%2Fissue-1468.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d96c33d592732fb52055987be35b24e2929b616/tests%2Fsource%2Fissue-1468.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1468.rs?ref=9d96c33d592732fb52055987be35b24e2929b616", "patch": "@@ -0,0 +1,27 @@\n+fn issue1468() {\n+euc_jp_decoder_functions!({\n+let trail_minus_offset = byte.wrapping_sub(0xA1);\n+// Fast-track Hiragana (60% according to Lunde)\n+// and Katakana (10% acconding to Lunde).\n+if jis0208_lead_minus_offset == 0x03 &&\n+trail_minus_offset < 0x53 {\n+// Hiragana\n+handle.write_upper_bmp(0x3041 + trail_minus_offset as u16)\n+} else if jis0208_lead_minus_offset == 0x04 &&\n+trail_minus_offset < 0x56 {\n+// Katakana\n+handle.write_upper_bmp(0x30A1 + trail_minus_offset as u16)\n+} else if trail_minus_offset > (0xFE - 0xA1) {\n+if byte < 0x80 {\n+return (DecoderResult::Malformed(1, 0),\n+unread_handle_trail.unread(),\n+handle.written());\n+}\n+return (DecoderResult::Malformed(2, 0),\n+unread_handle_trail.consumed(),\n+handle.written());\n+} else {\n+unreachable!();\n+}\n+});\n+}"}, {"sha": "518c31b625c89c1f27dee2a719190b79a9b72866", "filename": "tests/target/issue-1468.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9d96c33d592732fb52055987be35b24e2929b616/tests%2Ftarget%2Fissue-1468.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d96c33d592732fb52055987be35b24e2929b616/tests%2Ftarget%2Fissue-1468.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1468.rs?ref=9d96c33d592732fb52055987be35b24e2929b616", "patch": "@@ -0,0 +1,27 @@\n+fn issue1468() {\n+    euc_jp_decoder_functions!({\n+                                  let trail_minus_offset = byte.wrapping_sub(0xA1);\n+                                  // Fast-track Hiragana (60% according to Lunde)\n+                                  // and Katakana (10% acconding to Lunde).\n+                                  if jis0208_lead_minus_offset == 0x03 &&\n+                                     trail_minus_offset < 0x53 {\n+                                      // Hiragana\n+                                      handle.write_upper_bmp(0x3041 + trail_minus_offset as u16)\n+                                  } else if jis0208_lead_minus_offset == 0x04 &&\n+                                            trail_minus_offset < 0x56 {\n+                                      // Katakana\n+                                      handle.write_upper_bmp(0x30A1 + trail_minus_offset as u16)\n+                                  } else if trail_minus_offset > (0xFE - 0xA1) {\n+                                      if byte < 0x80 {\n+                                          return (DecoderResult::Malformed(1, 0),\n+                                                  unread_handle_trail.unread(),\n+                                                  handle.written());\n+                                      }\n+                                      return (DecoderResult::Malformed(2, 0),\n+                                              unread_handle_trail.consumed(),\n+                                              handle.written());\n+                                  } else {\n+                                      unreachable!();\n+                                  }\n+                              });\n+}"}]}