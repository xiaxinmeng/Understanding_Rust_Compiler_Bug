{"sha": "d55854d484f64e7a2b570e28ff1250112b6578e2", "node_id": "C_kwDOAAsO6NoAKGQ1NTg1NGQ0ODRmNjRlN2EyYjU3MGUyOGZmMTI1MDExMmI2NTc4ZTI", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-28T03:58:16Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-28T04:01:28Z"}, "message": "Link to std::io's platform-specific behavior disclaimer", "tree": {"sha": "9431827189c30ae93970d13c06224a222a505f71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9431827189c30ae93970d13c06224a222a505f71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d55854d484f64e7a2b570e28ff1250112b6578e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJBMxgACgkQ+boUO5X/\nbYKqQA//Y82rUtx6Tk0A1uvv1BR8gasd07tYPBoD6THKnoE1WWZtBwqiaETf79wK\nDnndx16dORka3l8UxhdxGuXuPaJZWkQwizdRQixEX/8iSwbIIA98RcrtB1BJDsai\nyeM4zxFadrnl5yMQDHQf/abP6UWwN3a7FDwwjoJLCaSP4jBTCLC8K6UpGudmnkxg\nssQGp+djz2mejldbhb4zsjCOGzrNzro4aEjBbDGsIe5QYflembyYfz4Pnpk6sjtw\n2wn4AvVhT2HJ3jr2e1wFH79UkCPKc9YL5jzYcrruQaVle0COU4PtYccYZ0x9LeM8\nj7bLpa1giWvOn4E0XtkjZ+HFPvmeoa0hbhRfQmHGyN5Z529yvqf3lJ59A30I02TM\nphEsD2XU/Y6BAgzGrEn9TTEatvECMVvFzb2ZvKI/M+WM5iSBXmPux5m1/L/ui/TS\n2aH/EzYLz53zf44bQvSZ8ZQk0MUmLgxb0hmCDR3CeDlqZqOpclpMmILjYIcOS4N4\ndDhQtfGlG1qNKKzU+3Lnit58Nx2f8nVGqNHQhS9Jd/CGuyzYIZRy8K0NHUd6KGlT\n1JzcC2Q17xxw/wodCNT+kdo5PPvQd1sS3qWK0jKeg8pycb5SougLzS617XhE517W\nc1NPX9pb9XQQh4hFoVcZlaw6DPVnH6PZ83zz1pQRUFMNhMyKFAs=\n=Tl+j\n-----END PGP SIGNATURE-----", "payload": "tree 9431827189c30ae93970d13c06224a222a505f71\nparent 3badf5c51c33f15c3934ea0e91d27f60c8605024\nauthor David Tolnay <dtolnay@gmail.com> 1648439896 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1648440088 -0700\n\nLink to std::io's platform-specific behavior disclaimer\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d55854d484f64e7a2b570e28ff1250112b6578e2", "html_url": "https://github.com/rust-lang/rust/commit/d55854d484f64e7a2b570e28ff1250112b6578e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d55854d484f64e7a2b570e28ff1250112b6578e2/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3badf5c51c33f15c3934ea0e91d27f60c8605024", "url": "https://api.github.com/repos/rust-lang/rust/commits/3badf5c51c33f15c3934ea0e91d27f60c8605024", "html_url": "https://github.com/rust-lang/rust/commit/3badf5c51c33f15c3934ea0e91d27f60c8605024"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "f03d298d8699db9f0127835ffa73a919f1def60e", "filename": "library/std/src/env.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d55854d484f64e7a2b570e28ff1250112b6578e2/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55854d484f64e7a2b570e28ff1250112b6578e2/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=d55854d484f64e7a2b570e28ff1250112b6578e2", "patch": "@@ -25,9 +25,11 @@ use crate::sys::os as os_imp;\n ///\n /// # Platform-specific behavior\n ///\n-/// This function currently corresponds to the `getcwd` function on Unix\n+/// This function [currently] corresponds to the `getcwd` function on Unix\n /// and the `GetCurrentDirectoryW` function on Windows.\n ///\n+/// [currently]: crate::io#platform-specific-behavior\n+///\n /// # Errors\n ///\n /// Returns an [`Err`] if the current working directory value is invalid.\n@@ -56,11 +58,13 @@ pub fn current_dir() -> io::Result<PathBuf> {\n ///\n /// # Platform-specific behavior\n ///\n-/// This function currently corresponds to the `chdir` function on Unix\n+/// This function [currently] corresponds to the `chdir` function on Unix\n /// and the `SetCurrentDirectoryW` function on Windows.\n ///\n /// Returns an [`Err`] if the operation fails.\n ///\n+/// [currently]: crate::io#platform-specific-behavior\n+///\n /// # Examples\n ///\n /// ```"}, {"sha": "708e4064e06f3a57921f4a8d01337a50c56d3e90", "filename": "library/std/src/time.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d55854d484f64e7a2b570e28ff1250112b6578e2/library%2Fstd%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55854d484f64e7a2b570e28ff1250112b6578e2/library%2Fstd%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime.rs?ref=d55854d484f64e7a2b570e28ff1250112b6578e2", "patch": "@@ -101,7 +101,9 @@ pub use core::time::FromFloatSecsError;\n /// ```\n ///\n /// # Underlying System calls\n-/// Currently, the following system calls are being used to get the current time using `now()`:\n+///\n+/// The following system calls are [currently] being used by `now()` to find out\n+/// the current time:\n ///\n /// |  Platform |               System call                                            |\n /// |-----------|----------------------------------------------------------------------|\n@@ -113,6 +115,7 @@ pub use core::time::FromFloatSecsError;\n /// | WASI      | [__wasi_clock_time_get (Monotonic Clock)]                            |\n /// | Windows   | [QueryPerformanceCounter]                                            |\n ///\n+/// [currently]: crate::io#platform-specific-behavior\n /// [QueryPerformanceCounter]: https://docs.microsoft.com/en-us/windows/win32/api/profileapi/nf-profileapi-queryperformancecounter\n /// [`insecure_time` usercall]: https://edp.fortanix.com/docs/api/fortanix_sgx_abi/struct.Usercalls.html#method.insecure_time\n /// [timekeeping in SGX]: https://edp.fortanix.com/docs/concepts/rust-std/#codestdtimecode\n@@ -203,7 +206,8 @@ pub struct Instant(time::Instant);\n /// For example, on Windows the time is represented in 100 nanosecond intervals whereas Linux\n /// can represent nanosecond intervals.\n ///\n-/// Currently, the following system calls are being used to get the current time using `now()`:\n+/// The following system calls are [currently] being used by `now()` to find out\n+/// the current time:\n ///\n /// |  Platform |               System call                                            |\n /// |-----------|----------------------------------------------------------------------|\n@@ -215,6 +219,7 @@ pub struct Instant(time::Instant);\n /// | WASI      | [__wasi_clock_time_get (Realtime Clock)]                             |\n /// | Windows   | [GetSystemTimePreciseAsFileTime] / [GetSystemTimeAsFileTime]         |\n ///\n+/// [currently]: crate::io#platform-specific-behavior\n /// [`insecure_time` usercall]: https://edp.fortanix.com/docs/api/fortanix_sgx_abi/struct.Usercalls.html#method.insecure_time\n /// [timekeeping in SGX]: https://edp.fortanix.com/docs/concepts/rust-std/#codestdtimecode\n /// [gettimeofday]: https://man7.org/linux/man-pages/man2/gettimeofday.2.html"}]}