{"sha": "79f0d67d2801f17c143b38926f05a40d0c22f5c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZjBkNjdkMjgwMWYxN2MxNDNiMzg5MjZmMDVhNDBkMGMyMmY1YzA=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-01-04T09:22:56Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-01-12T07:42:51Z"}, "message": "Add more tests for enum constants.\n\nThe tests have consts defined both before and after their uses in order\nto prevent bugs that depend on the order in which they are translated.", "tree": {"sha": "941daf17b2794824fd902e8a82d747ceb25105d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/941daf17b2794824fd902e8a82d747ceb25105d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f0d67d2801f17c143b38926f05a40d0c22f5c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f0d67d2801f17c143b38926f05a40d0c22f5c0", "html_url": "https://github.com/rust-lang/rust/commit/79f0d67d2801f17c143b38926f05a40d0c22f5c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f0d67d2801f17c143b38926f05a40d0c22f5c0/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "349fa1e550905577fd9545aada328fb0806cf641", "url": "https://api.github.com/repos/rust-lang/rust/commits/349fa1e550905577fd9545aada328fb0806cf641", "html_url": "https://github.com/rust-lang/rust/commit/349fa1e550905577fd9545aada328fb0806cf641"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "aa977f17e691e72d3af2e9bf03391476ddfe0989", "filename": "src/test/run-pass/const-big-enum.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-big-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-big-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-big-enum.rs?ref=79f0d67d2801f17c143b38926f05a40d0c22f5c0", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Bar(u32),\n+    Baz,\n+    Quux(u64, u16)\n+}\n+\n+const X: Foo = Baz;\n+\n+fn main() {\n+    match X {\n+        Baz => {}\n+        _ => fail\n+    }\n+    match Y {\n+        Bar(s) => assert(s == 2654435769),\n+        _ => fail\n+    }\n+    match Z {\n+        Quux(d,h) => {\n+            assert(d == 0x123456789abcdef0);\n+            assert(h == 0x1234);\n+        }\n+        _ => fail\n+    }\n+}\n+\n+const Y: Foo = Bar(2654435769);\n+const Z: Foo = Quux(0x123456789abcdef0, 0x1234);"}, {"sha": "069565aa4f858212ec0b9b00708959ddc55d0c70", "filename": "src/test/run-pass/const-newtype-enum.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-newtype-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-newtype-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-newtype-enum.rs?ref=79f0d67d2801f17c143b38926f05a40d0c22f5c0", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo = u32;\n+\n+const X: Foo = Foo(17);\n+\n+fn main() {\n+    assert(*X == 17);\n+    assert(*Y == 23);\n+}\n+\n+const Y: Foo = Foo(23);"}, {"sha": "098305bbe35e0a15f2a7aed74e2221592c296856", "filename": "src/test/run-pass/const-nullary-enum.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-nullary-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-nullary-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-nullary-enum.rs?ref=79f0d67d2801f17c143b38926f05a40d0c22f5c0", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -21,5 +21,10 @@ fn main() {\n         Bar => {}\n         Baz | Boo => fail\n     }\n+    match Y {\n+        Baz => {}\n+        Bar | Boo => fail\n+    }\n }\n \n+const Y: Foo = Baz;"}, {"sha": "2fa5a7760f6d12d552fe89c99fb53f36008cbbc0", "filename": "src/test/run-pass/const-nullary-univariant-enum.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-nullary-univariant-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f0d67d2801f17c143b38926f05a40d0c22f5c0/src%2Ftest%2Frun-pass%2Fconst-nullary-univariant-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-nullary-univariant-enum.rs?ref=79f0d67d2801f17c143b38926f05a40d0c22f5c0", "patch": "@@ -16,4 +16,7 @@ const X: Foo = Bar;\n \n fn main() {\n     assert((X as uint) == 0xDEADBEE);\n+    assert((Y as uint) == 0xDEADBEE);\n }\n+\n+const Y: Foo = Bar;"}]}