{"sha": "488ece05b59b68a7d25c1fc59388438a78bb0b52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4OGVjZTA1YjU5YjY4YTdkMjVjMWZjNTkzODg0MzhhNzhiYjBiNTI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-04T01:07:45Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-04T01:07:58Z"}, "message": "Implement &-expressions in consts. Part of #2317.", "tree": {"sha": "31f07c8930bad13792194849498e0be401c7aabc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31f07c8930bad13792194849498e0be401c7aabc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/488ece05b59b68a7d25c1fc59388438a78bb0b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/488ece05b59b68a7d25c1fc59388438a78bb0b52", "html_url": "https://github.com/rust-lang/rust/commit/488ece05b59b68a7d25c1fc59388438a78bb0b52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/488ece05b59b68a7d25c1fc59388438a78bb0b52/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e02b1b1ec8696715c08fc970b67d9eaa6c91b15e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e02b1b1ec8696715c08fc970b67d9eaa6c91b15e", "html_url": "https://github.com/rust-lang/rust/commit/e02b1b1ec8696715c08fc970b67d9eaa6c91b15e"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "0b7601f59d2cb8a9c0b5f43938da555f60126bf0", "filename": "src/rustc/middle/borrowck/preserve.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Fborrowck%2Fpreserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Fborrowck%2Fpreserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fborrowck%2Fpreserve.rs?ref=488ece05b59b68a7d25c1fc59388438a78bb0b52", "patch": "@@ -74,8 +74,16 @@ impl private_methods for &preserve_ctxt {\n             // when we borrow an rvalue, we can keep it rooted but only\n             // up to the root_ub point\n \n+            // When we're in a 'const &x = ...' context, self.root_ub is\n+            // zero and the rvalue is static, not bound to a scope.\n+            let scope_region = if self.root_ub == 0 {\n+                ty::re_static\n+            } else {\n+                ty::re_scope(self.root_ub)\n+            };\n+\n             // FIXME(#2977)--need to update trans!\n-            self.compare_scope(cmt, ty::re_scope(self.root_ub))\n+            self.compare_scope(cmt, scope_region)\n           }\n           cat_stack_upvar(cmt) {\n             self.preserve(cmt)"}, {"sha": "dbf60edca8e9421e000b5cef148ef0eddfaca956", "filename": "src/rustc/middle/check_const.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fcheck_const.rs?ref=488ece05b59b68a7d25c1fc59388438a78bb0b52", "patch": "@@ -101,8 +101,15 @@ fn check_expr(sess: session, def_map: resolve3::DefMap,\n               }\n             }\n           }\n+          expr_addr_of(m_imm, _) |\n           expr_tup(*) |\n           expr_rec(*) { }\n+          expr_addr_of(*) {\n+                sess.span_err(\n+                    e.span,\n+                    ~\"borrowed pointers in constants may only refer to \\\n+                      immutable values\");\n+          }\n           _ {\n             sess.span_err(e.span,\n                           ~\"constant contains unimplemented expression type\");"}, {"sha": "8a8e284b5c040ef84e7f62cf2ac23453c11ff048", "filename": "src/rustc/middle/trans/consts.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=488ece05b59b68a7d25c1fc59388438a78bb0b52", "patch": "@@ -130,6 +130,17 @@ fn const_expr(cx: @crate_ctxt, e: @ast::expr) -> ValueRef {\n           }\n         }\n       }\n+      ast::expr_addr_of(ast::m_imm, sub) {\n+        let cv = const_expr(cx, sub);\n+        let subty = ty::expr_ty(cx.tcx, sub),\n+        llty = type_of::type_of(cx, subty);\n+        let gv = do str::as_c_str(\"const\") |name| {\n+            llvm::LLVMAddGlobal(cx.llmod, llty, name)\n+        };\n+        llvm::LLVMSetInitializer(gv, cv);\n+        llvm::LLVMSetGlobalConstant(gv, True);\n+        gv\n+      }\n       ast::expr_tup(es) {\n         C_struct(es.map(|e| const_expr(cx, e)))\n       }"}, {"sha": "812354f97a22b5325f58195a5b811c246ef1dae0", "filename": "src/rustc/middle/typeck/rscope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Ftypeck%2Frscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Frustc%2Fmiddle%2Ftypeck%2Frscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Frscope.rs?ref=488ece05b59b68a7d25c1fc59388438a78bb0b52", "patch": "@@ -8,7 +8,7 @@ trait region_scope {\n enum empty_rscope { empty_rscope }\n impl of region_scope for empty_rscope {\n     fn anon_region() -> result<ty::region, ~str> {\n-        result::err(~\"region types are not allowed here\")\n+        result::ok(ty::re_static)\n     }\n     fn named_region(id: ast::ident) -> result<ty::region, ~str> {\n         if *id == ~\"static\" { result::ok(ty::re_static) }"}, {"sha": "1881c771203f85b9325feb427d0f1b2e4c4476e8", "filename": "src/test/run-pass/const-rec-and-tup.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Ftest%2Frun-pass%2Fconst-rec-and-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Ftest%2Frun-pass%2Fconst-rec-and-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-rec-and-tup.rs?ref=488ece05b59b68a7d25c1fc59388438a78bb0b52", "patch": "@@ -1,5 +1,5 @@\n-const x : (int,int) = (0xfeedf00dd,0xca11ab1e);\n-const y : { x: (int, int),\n+const x : (i32,i32) = (0xfeedf00dd,0xca11ab1e);\n+const y : { x: (i64, i64),\n             y: { a: float,\n                  b: float } } = { x: (0xf0f0f0f0_f0f0f0f0,\n                                       0xabababab_abababab),"}, {"sha": "2ce212c158dd27ede4998e5030744b511ab2ba65", "filename": "src/test/run-pass/const-region-ptrs.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Ftest%2Frun-pass%2Fconst-region-ptrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488ece05b59b68a7d25c1fc59388438a78bb0b52/src%2Ftest%2Frun-pass%2Fconst-region-ptrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-region-ptrs.rs?ref=488ece05b59b68a7d25c1fc59388438a78bb0b52", "patch": "@@ -0,0 +1,9 @@\n+\n+const x: &int = &10;\n+\n+const y: &{a: int, b: &int} = &{a: 15, b: x};\n+\n+fn main() {\n+    io::println(fmt!(\"x = %?\", x));\n+    io::println(fmt!(\"y = {a: %?, b: %?}\", y.a, *(y.b)));\n+}"}]}