{"sha": "fd1494e9c3928ea13820f5e91748822a19a5abea", "node_id": "C_kwDOAAsO6NoAKGZkMTQ5NGU5YzM5MjhlYTEzODIwZjVlOTE3NDg4MjJhMTlhNWFiZWE", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-11-18T01:00:53Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-11-18T01:00:53Z"}, "message": "Document non-guarantees for Hash\n\nDependence on endianness and type sizes was reported for enum discriminants in #74215 but it is a more general\nissue since for example the default implementation of `Hasher::write_usize` uses native endianness.\nAdditionally the implementations of library types are occasionally changed as their internal fields\nchange or hashing gets optimized.", "tree": {"sha": "549ddd0c96f216e5f7be274860a24fcde1157545", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549ddd0c96f216e5f7be274860a24fcde1157545"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd1494e9c3928ea13820f5e91748822a19a5abea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd1494e9c3928ea13820f5e91748822a19a5abea", "html_url": "https://github.com/rust-lang/rust/commit/fd1494e9c3928ea13820f5e91748822a19a5abea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd1494e9c3928ea13820f5e91748822a19a5abea/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "934624fe5f66ce3fb8abf0597a6deb079783335f", "url": "https://api.github.com/repos/rust-lang/rust/commits/934624fe5f66ce3fb8abf0597a6deb079783335f", "html_url": "https://github.com/rust-lang/rust/commit/934624fe5f66ce3fb8abf0597a6deb079783335f"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "44d517d6c9318e2db410bf33d74ca4036fab1a90", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fd1494e9c3928ea13820f5e91748822a19a5abea/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1494e9c3928ea13820f5e91748822a19a5abea/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=fd1494e9c3928ea13820f5e91748822a19a5abea", "patch": "@@ -164,6 +164,19 @@ mod sip;\n /// `0xFF` byte to the `Hasher` so that the values `(\"ab\", \"c\")` and `(\"a\",\n /// \"bc\")` hash differently.\n ///\n+/// ## Portability\n+///\n+/// Due to differences in endianness and type sizes data fed by `Hash` to a `Hasher`\n+/// should not be considered portable across platforms. Additionally the data passed by most\n+/// standard library types should not be considered stable between compiler versions.\n+///\n+/// This means tests shouldn't probe hard-coded hash values or data fed to a `Hasher` and\n+/// instead should check consistency with `Eq`.\n+///\n+/// Serialization formats intended to he portable between platforms or compiler versions should\n+/// either avoid encoding hashes or only rely on `Hash` and `Hasher` implementations that\n+/// provide additional guarantees.\n+///\n /// [`HashMap`]: ../../std/collections/struct.HashMap.html\n /// [`HashSet`]: ../../std/collections/struct.HashSet.html\n /// [`hash`]: Hash::hash"}]}