{"sha": "428e790d8cc83b4bbffaf037acccfd29c6ff4777", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyOGU3OTBkOGNjODNiNGJiZmZhZjAzN2FjY2NmZDI5YzZmZjQ3Nzc=", "commit": {"author": {"name": "Antti Ker\u00e4nen", "email": "detegr@gmail.com", "date": "2015-11-23T14:48:55Z"}, "committer": {"name": "Antti Ker\u00e4nen", "email": "detegr@gmail.com", "date": "2015-11-23T14:57:09Z"}, "message": "Add a note when trying to call a non-function\n\nThe note added tells the definition location of the non-function\nthat is being called. Fixes #10969", "tree": {"sha": "a6c3ca048bc6219c9d11ce3cca5f809c5833e0de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6c3ca048bc6219c9d11ce3cca5f809c5833e0de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/428e790d8cc83b4bbffaf037acccfd29c6ff4777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/428e790d8cc83b4bbffaf037acccfd29c6ff4777", "html_url": "https://github.com/rust-lang/rust/commit/428e790d8cc83b4bbffaf037acccfd29c6ff4777", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/428e790d8cc83b4bbffaf037acccfd29c6ff4777/comments", "author": {"login": "Detegr", "id": 724433, "node_id": "MDQ6VXNlcjcyNDQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/724433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Detegr", "html_url": "https://github.com/Detegr", "followers_url": "https://api.github.com/users/Detegr/followers", "following_url": "https://api.github.com/users/Detegr/following{/other_user}", "gists_url": "https://api.github.com/users/Detegr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Detegr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Detegr/subscriptions", "organizations_url": "https://api.github.com/users/Detegr/orgs", "repos_url": "https://api.github.com/users/Detegr/repos", "events_url": "https://api.github.com/users/Detegr/events{/privacy}", "received_events_url": "https://api.github.com/users/Detegr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Detegr", "id": 724433, "node_id": "MDQ6VXNlcjcyNDQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/724433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Detegr", "html_url": "https://github.com/Detegr", "followers_url": "https://api.github.com/users/Detegr/followers", "following_url": "https://api.github.com/users/Detegr/following{/other_user}", "gists_url": "https://api.github.com/users/Detegr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Detegr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Detegr/subscriptions", "organizations_url": "https://api.github.com/users/Detegr/orgs", "repos_url": "https://api.github.com/users/Detegr/repos", "events_url": "https://api.github.com/users/Detegr/events{/privacy}", "received_events_url": "https://api.github.com/users/Detegr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4891c00634f209bcc66d7f00bc507eb35a0fe6a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4891c00634f209bcc66d7f00bc507eb35a0fe6a8", "html_url": "https://github.com/rust-lang/rust/commit/4891c00634f209bcc66d7f00bc507eb35a0fe6a8"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "988d5537e5db779b253e11361e881b235ba60586", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/428e790d8cc83b4bbffaf037acccfd29c6ff4777/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/428e790d8cc83b4bbffaf037acccfd29c6ff4777/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=428e790d8cc83b4bbffaf037acccfd29c6ff4777", "patch": "@@ -231,6 +231,17 @@ fn confirm_builtin_call<'a,'tcx>(fcx: &FnCtxt<'a,'tcx>,\n                 format!(\"expected function, found `{}`\", actual)\n             }, callee_ty, None);\n \n+            if let hir::ExprCall(ref expr, _) = call_expr.node {\n+                let tcx = fcx.tcx();\n+                if let Some(pr) = tcx.def_map.borrow().get(&expr.id) {\n+                    if pr.depth == 0 {\n+                        if let Some(span) = tcx.map.span_if_local(pr.def_id()) {\n+                            tcx.sess.span_note(span, \"defined here\")\n+                        }\n+                    }\n+                }\n+            }\n+\n             // This is the \"default\" function signature, used in case of error.\n             // In that case, we check each argument against \"error\" in order to\n             // set up all the node type bindings."}]}