{"sha": "2854d1bfc23f9851f86600863f1ca191ebe45698", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTRkMWJmYzIzZjk4NTFmODY2MDA4NjNmMWNhMTkxZWJlNDU2OTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-05T19:17:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-13T11:01:19Z"}, "message": "Separate borrowck into its own crate and remove dead code as well.", "tree": {"sha": "2e94280e8a651cb0c064d7e462746aad4f6bf636", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e94280e8a651cb0c064d7e462746aad4f6bf636"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2854d1bfc23f9851f86600863f1ca191ebe45698", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2854d1bfc23f9851f86600863f1ca191ebe45698", "html_url": "https://github.com/rust-lang/rust/commit/2854d1bfc23f9851f86600863f1ca191ebe45698", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2854d1bfc23f9851f86600863f1ca191ebe45698/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de64f85c6ec8296e68d859a07ea179d3e69eeeb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/de64f85c6ec8296e68d859a07ea179d3e69eeeb4", "html_url": "https://github.com/rust-lang/rust/commit/de64f85c6ec8296e68d859a07ea179d3e69eeeb4"}], "stats": {"total": 293, "additions": 140, "deletions": 153}, "files": [{"sha": "a47d4871326dff477c93d34ca90a086ea5e57bca", "filename": "mk/crates.mk", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -53,7 +53,7 @@ TARGET_CRATES := libc std flate arena term \\\n                  serialize getopts collections test time rand \\\n                  log regex graphviz core rbml alloc rustrt \\\n                  unicode\n-RUSTC_CRATES := rustc rustc_typeck rustc_driver rustc_trans rustc_back rustc_llvm \n+RUSTC_CRATES := rustc rustc_typeck rustc_borrowck rustc_driver rustc_trans rustc_back rustc_llvm \n HOST_CRATES := syntax $(RUSTC_CRATES) rustdoc regex_macros fmt_macros\n CRATES := $(TARGET_CRATES) $(HOST_CRATES)\n TOOLS := compiletest rustdoc rustc\n@@ -67,11 +67,12 @@ DEPS_std := core libc rand alloc collections rustrt unicode \\\n \tnative:rust_builtin native:backtrace\n DEPS_graphviz := std\n DEPS_syntax := std term serialize log fmt_macros arena libc\n-DEPS_rustc_driver := arena flate getopts graphviz libc rustc rustc_back \\\n+DEPS_rustc_driver := arena flate getopts graphviz libc rustc rustc_back rustc_borrowck \\\n                      rustc_typeck log syntax serialize rustc_llvm rustc_trans\n DEPS_rustc_trans := arena flate getopts graphviz libc rustc rustc_back \\\n \t                log syntax serialize rustc_llvm\n DEPS_rustc_typeck := rustc syntax\n+DEPS_rustc_borrowck := rustc log graphviz syntax\n DEPS_rustc := syntax flate arena serialize getopts rbml \\\n               time log graphviz rustc_llvm rustc_back\n DEPS_rustc_llvm := native:rustllvm libc std\n@@ -117,9 +118,10 @@ ONLY_RLIB_unicode := 1\n DOC_CRATES := $(filter-out rustc, \\\n               $(filter-out rustc_trans, \\\n               $(filter-out rustc_typeck, \\\n+              $(filter-out rustc_borrowck, \\\n               $(filter-out rustc_driver, \\\n-              $(filter-out syntax, $(CRATES))))))\n-COMPILER_DOC_CRATES := rustc rustc_trans rustc_typeck rustc_driver syntax\n+              $(filter-out syntax, $(CRATES)))))))\n+COMPILER_DOC_CRATES := rustc rustc_trans rustc_borrowck rustc_typeck rustc_driver syntax\n \n # This macro creates some simple definitions for each crate being built, just\n # some munging of all of the parameters above."}, {"sha": "3340f9b4969ea2d7c12335e120bb9e22cba1ce38", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -21,7 +21,7 @@ $(eval $(call RUST_CRATE,coretest))\n \n TEST_TARGET_CRATES = $(filter-out core unicode,$(TARGET_CRATES)) coretest\n TEST_DOC_CRATES = $(DOC_CRATES)\n-TEST_HOST_CRATES = $(filter-out rustc_typeck rustc_trans,$(HOST_CRATES))\n+TEST_HOST_CRATES = $(filter-out rustc_typeck rustc_borrowck rustc_trans,$(HOST_CRATES))\n TEST_CRATES = $(TEST_TARGET_CRATES) $(TEST_HOST_CRATES)\n \n ######################################################################"}, {"sha": "51cb7e193ffb8e31c6473962a1e54f5c007ff94d", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -61,7 +61,6 @@ pub mod back {\n pub mod middle {\n     pub mod astconv_util;\n     pub mod astencode;\n-    pub mod borrowck;\n     pub mod cfg;\n     pub mod check_const;\n     pub mod check_static_recursion;"}, {"sha": "4244cec7534d5c05d9b76249eaf02973df7aeaec", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "renamed", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -18,18 +18,16 @@\n // 4. moves do not affect things loaned out in any way\n use self::UseError::*;\n \n-use middle::borrowck::*;\n-use middle::borrowck::LoanPathElem::*;\n-use middle::borrowck::LoanPathKind::*;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::region;\n-use middle::ty::ParameterEnvironment;\n-use middle::ty;\n-use syntax::ast::NodeId;\n+use borrowck::*;\n+use borrowck::LoanPathElem::*;\n+use borrowck::LoanPathKind::*;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::region;\n+use rustc::middle::ty;\n+use rustc::util::ppaux::Repr;\n use syntax::ast;\n use syntax::codemap::Span;\n-use util::ppaux::Repr;\n \n use std::rc::Rc;\n \n@@ -91,7 +89,7 @@ struct CheckLoanCtxt<'a, 'tcx: 'a> {\n     dfcx_loans: &'a LoanDataFlow<'a, 'tcx>,\n     move_data: move_data::FlowedMoveData<'a, 'tcx>,\n     all_loans: &'a [Loan<'tcx>],\n-    param_env: &'a ParameterEnvironment<'tcx>,\n+    param_env: &'a ty::ParameterEnvironment<'tcx>,\n }\n \n impl<'a, 'tcx> euv::Delegate<'tcx> for CheckLoanCtxt<'a, 'tcx> {\n@@ -196,12 +194,12 @@ pub fn check_loans<'a, 'b, 'c, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                      dfcx_loans: &LoanDataFlow<'b, 'tcx>,\n                                      move_data: move_data::FlowedMoveData<'c, 'tcx>,\n                                      all_loans: &[Loan<'tcx>],\n-                                     fn_id: NodeId,\n+                                     fn_id: ast::NodeId,\n                                      decl: &ast::FnDecl,\n                                      body: &ast::Block) {\n     debug!(\"check_loans(body id={})\", body.id);\n \n-    let param_env = ParameterEnvironment::for_item(bccx.tcx, fn_id);\n+    let param_env = ty::ParameterEnvironment::for_item(bccx.tcx, fn_id);\n \n     let mut clcx = CheckLoanCtxt {\n         bccx: bccx,", "previous_filename": "src/librustc/middle/borrowck/check_loans.rs"}, {"sha": "c6db5340f0f511d9e6865516368908a347b68185", "filename": "src/librustc_borrowck/borrowck/doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fdoc.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "previous_filename": "src/librustc/middle/borrowck/doc.rs"}, {"sha": "25ed518255540317738f868ad5e0c66ad5431591", "filename": "src/librustc_borrowck/borrowck/fragments.rs", "status": "renamed", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -14,16 +14,15 @@\n \n use self::Fragment::*;\n \n-use session::config;\n-use middle::borrowck::{LoanPath};\n-use middle::borrowck::LoanPathKind::{LpVar, LpUpvar, LpDowncast, LpExtend};\n-use middle::borrowck::LoanPathElem::{LpDeref, LpInterior};\n-use middle::borrowck::move_data::{InvalidMovePathIndex};\n-use middle::borrowck::move_data::{MoveData, MovePathIndex};\n-use middle::ty;\n-use middle::mem_categorization as mc;\n-use util::ppaux::{Repr, UserString};\n-\n+use borrowck::{LoanPath};\n+use borrowck::LoanPathKind::{LpVar, LpUpvar, LpDowncast, LpExtend};\n+use borrowck::LoanPathElem::{LpDeref, LpInterior};\n+use borrowck::move_data::{InvalidMovePathIndex};\n+use borrowck::move_data::{MoveData, MovePathIndex};\n+use rustc::session::config;\n+use rustc::middle::ty;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::util::ppaux::{Repr, UserString};\n use std::mem;\n use std::rc::Rc;\n use std::slice;", "previous_filename": "src/librustc/middle/borrowck/fragments.rs"}, {"sha": "01cbab6dbf42e1437a74b869364c267afaf870cf", "filename": "src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs", "status": "renamed", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -10,19 +10,18 @@\n \n //! Computes moves.\n \n-use middle::borrowck::*;\n-use middle::borrowck::LoanPathKind::*;\n-use middle::borrowck::gather_loans::move_error::MoveSpanAndPath;\n-use middle::borrowck::gather_loans::move_error::{MoveError, MoveErrorCollector};\n-use middle::borrowck::move_data::*;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::ty;\n+use borrowck::*;\n+use borrowck::LoanPathKind::*;\n+use borrowck::gather_loans::move_error::MoveSpanAndPath;\n+use borrowck::gather_loans::move_error::{MoveError, MoveErrorCollector};\n+use borrowck::move_data::*;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::ty;\n+use rustc::util::ppaux::Repr;\n+use std::rc::Rc;\n use syntax::ast;\n use syntax::codemap::Span;\n-use util::ppaux::Repr;\n-\n-use std::rc::Rc;\n \n struct GatherMoveInfo<'tcx> {\n     id: ast::NodeId,", "previous_filename": "src/librustc/middle/borrowck/gather_loans/gather_moves.rs"}, {"sha": "d7c963464631468f663a8ddbd758fd78f9c4f7e0", "filename": "src/librustc_borrowck/borrowck/gather_loans/lifetime.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -11,12 +11,12 @@\n //! This module implements the check that the lifetime of a borrow\n //! does not exceed the lifetime of the value being borrowed.\n \n-use middle::borrowck::*;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::region;\n-use middle::ty;\n-use util::ppaux::Repr;\n+use borrowck::*;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::region;\n+use rustc::middle::ty;\n+use rustc::util::ppaux::Repr;\n use syntax::ast;\n use syntax::codemap::Span;\n ", "previous_filename": "src/librustc/middle/borrowck/gather_loans/lifetime.rs"}, {"sha": "08d12f8282bdf5583ac79015a6e973e72af1b614", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "renamed", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -16,16 +16,14 @@\n // their associated scopes.  In phase two, checking loans, we will then make\n // sure that all of these loans are honored.\n \n-use middle::borrowck::*;\n-use middle::borrowck::LoanPathKind::*;\n-use middle::borrowck::move_data::MoveData;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::region;\n-use middle::ty::ParameterEnvironment;\n-use middle::ty;\n-use util::ppaux::{Repr};\n-\n+use borrowck::*;\n+use borrowck::LoanPathKind::*;\n+use borrowck::move_data::MoveData;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::region;\n+use rustc::middle::ty;\n+use rustc::util::ppaux::{Repr};\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::visit;\n@@ -51,7 +49,7 @@ pub fn gather_loans_in_fn<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n         move_error_collector: move_error::MoveErrorCollector::new(),\n     };\n \n-    let param_env = ParameterEnvironment::for_item(bccx.tcx, fn_id);\n+    let param_env = ty::ParameterEnvironment::for_item(bccx.tcx, fn_id);\n \n     {\n         let mut euv = euv::ExprUseVisitor::new(&mut glcx,", "previous_filename": "src/librustc/middle/borrowck/gather_loans/mod.rs"}, {"sha": "fbe78152a609e3f75c4f369b7bb5dcde2b90abb3", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "renamed", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -8,15 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::mem_categorization as mc;\n-use middle::borrowck::BorrowckCtxt;\n-use middle::ty;\n-\n+use borrowck::BorrowckCtxt;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::ty;\n+use rustc::util::ppaux::UserString;\n use std::cell::RefCell;\n use syntax::ast;\n use syntax::codemap;\n use syntax::print::pprust;\n-use util::ppaux::UserString;\n \n pub struct MoveErrorCollector<'tcx> {\n     errors: RefCell<Vec<MoveError<'tcx>>>", "previous_filename": "src/librustc/middle/borrowck/gather_loans/move_error.rs"}, {"sha": "c783489dab720ef58aa40c205a16966e5af154a5", "filename": "src/librustc_borrowck/borrowck/gather_loans/restrictions.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Frestrictions.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -12,14 +12,14 @@\n \n pub use self::RestrictionResult::*;\n \n-use middle::borrowck::*;\n-use middle::borrowck::LoanPathElem::*;\n-use middle::borrowck::LoanPathKind::*;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::ty;\n+use borrowck::*;\n+use borrowck::LoanPathElem::*;\n+use borrowck::LoanPathKind::*;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::ty;\n+use rustc::util::ppaux::Repr;\n use syntax::codemap::Span;\n-use util::ppaux::Repr;\n \n use std::rc::Rc;\n ", "previous_filename": "src/librustc/middle/borrowck/gather_loans/restrictions.rs"}, {"sha": "1722f9a1f75f24800c880e382e5c73a732d0de24", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "renamed", "additions": 10, "deletions": 25, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -18,16 +18,15 @@ pub use self::bckerr_code::*;\n pub use self::AliasableViolationKind::*;\n pub use self::MovedValueUseKind::*;\n \n-use middle::cfg;\n-use middle::dataflow::DataFlowContext;\n-use middle::dataflow::BitwiseOperator;\n-use middle::dataflow::DataFlowOperator;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::region;\n-use middle::ty::{mod, ParameterEnvironment, Ty};\n-use util::ppaux::{note_and_explain_region, Repr, UserString};\n-\n+use rustc::middle::cfg;\n+use rustc::middle::dataflow::DataFlowContext;\n+use rustc::middle::dataflow::BitwiseOperator;\n+use rustc::middle::dataflow::DataFlowOperator;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::region;\n+use rustc::middle::ty::{mod, Ty};\n+use rustc::util::ppaux::{note_and_explain_region, Repr, UserString};\n use std::rc::Rc;\n use std::string::String;\n use syntax::ast;\n@@ -55,8 +54,6 @@ pub mod check_loans;\n \n pub mod gather_loans;\n \n-pub mod graphviz;\n-\n pub mod move_data;\n \n #[deriving(Clone)]\n@@ -298,18 +295,6 @@ pub struct LoanPath<'tcx> {\n     ty: ty::Ty<'tcx>,\n }\n \n-impl<'tcx> LoanPath<'tcx> {\n-    pub fn eq_debug(&self, that: &LoanPath<'tcx>, tcx: &ty::ctxt<'tcx>) -> bool {\n-        let r = self.kind == that.kind;\n-        if r && self.ty != that.ty {\n-            panic!(\"eq variants ineq types: {} == {}, {} != {}\",\n-                   self.repr(tcx), that.repr(tcx),\n-                   self.ty.repr(tcx), that.ty.repr(tcx));\n-        }\n-        r\n-    }\n-}\n-\n impl<'tcx> PartialEq for LoanPath<'tcx> {\n     fn eq(&self, that: &LoanPath<'tcx>) -> bool {\n         let r = self.kind == that.kind;\n@@ -560,7 +545,7 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                                      lp: &LoanPath<'tcx>,\n                                      the_move: &move_data::Move,\n                                      moved_lp: &LoanPath<'tcx>,\n-                                     param_env: &ParameterEnvironment<'tcx>) {\n+                                     param_env: &ty::ParameterEnvironment<'tcx>) {\n         let verb = match use_kind {\n             MovedInUse => \"use\",\n             MovedInCapture => \"capture\",", "previous_filename": "src/librustc/middle/borrowck/mod.rs"}, {"sha": "681a5772849f3f0b91369372fc8dfcb73843e0d8", "filename": "src/librustc_borrowck/borrowck/move_data.rs", "status": "renamed", "additions": 12, "deletions": 43, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -13,24 +13,24 @@\n \n pub use self::MoveKind::*;\n \n+use borrowck::*;\n+use borrowck::LoanPathKind::{LpVar, LpUpvar, LpDowncast, LpExtend};\n+use borrowck::LoanPathElem::{LpInterior};\n+use rustc::middle::cfg;\n+use rustc::middle::dataflow::DataFlowContext;\n+use rustc::middle::dataflow::BitwiseOperator;\n+use rustc::middle::dataflow::DataFlowOperator;\n+use rustc::middle::expr_use_visitor as euv;\n+use rustc::middle::mem_categorization as mc;\n+use rustc::middle::ty;\n+use rustc::util::nodemap::{FnvHashMap, NodeSet};\n+use rustc::util::ppaux::Repr;\n use std::cell::RefCell;\n use std::rc::Rc;\n use std::uint;\n-use middle::borrowck::*;\n-use middle::borrowck::LoanPathKind::{LpVar, LpUpvar, LpDowncast, LpExtend};\n-use middle::borrowck::LoanPathElem::{LpInterior};\n-use middle::cfg;\n-use middle::dataflow::DataFlowContext;\n-use middle::dataflow::BitwiseOperator;\n-use middle::dataflow::DataFlowOperator;\n-use middle::expr_use_visitor as euv;\n-use middle::mem_categorization as mc;\n-use middle::ty;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::codemap::Span;\n-use util::nodemap::{FnvHashMap, NodeSet};\n-use util::ppaux::Repr;\n \n #[path=\"fragments.rs\"]\n pub mod fragments;\n@@ -220,37 +220,6 @@ fn loan_path_is_precise(loan_path: &LoanPath) -> bool {\n     }\n }\n \n-impl Move {\n-    pub fn to_string<'tcx>(&self, move_data: &MoveData<'tcx>, tcx: &ty::ctxt<'tcx>) -> String {\n-        format!(\"Move{} path: {}, id: {}, kind: {} {}\",\n-                \"{\",\n-                move_data.path_loan_path(self.path).repr(tcx),\n-                self.id,\n-                self.kind,\n-                \"}\")\n-    }\n-}\n-\n-impl Assignment {\n-    pub fn to_string<'tcx>(&self, move_data: &MoveData<'tcx>, tcx: &ty::ctxt<'tcx>) -> String {\n-        format!(\"Assignment{} path: {}, id: {} {}\",\n-                \"{\",\n-                move_data.path_loan_path(self.path).repr(tcx),\n-                self.id,\n-                \"}\")\n-    }\n-}\n-\n-impl VariantMatch {\n-    pub fn to_string<'tcx>(&self, move_data: &MoveData<'tcx>, tcx: &ty::ctxt<'tcx>) -> String {\n-        format!(\"VariantMatch{} path: {}, id: {} {}\",\n-                \"{\",\n-                move_data.path_loan_path(self.path).repr(tcx),\n-                self.id,\n-                \"}\")\n-    }\n-}\n-\n impl<'tcx> MoveData<'tcx> {\n     pub fn new() -> MoveData<'tcx> {\n         MoveData {", "previous_filename": "src/librustc/middle/borrowck/move_data.rs"}, {"sha": "36c74720be438f5a228bf49a25e309b53dc576a9", "filename": "src/librustc_borrowck/graphviz.rs", "status": "renamed", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fgraphviz.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -14,17 +14,15 @@\n \n pub use self::Variant::*;\n \n-/// For clarity, rename the graphviz crate locally to dot.\n-use graphviz as dot;\n-pub use middle::cfg::graphviz::{Node, Edge};\n-use middle::cfg::graphviz as cfg_dot;\n-\n-use middle::borrowck;\n-use middle::borrowck::{BorrowckCtxt, LoanPath};\n-use middle::cfg::{CFGIndex};\n-use middle::dataflow::{DataFlowOperator, DataFlowContext, EntryOrExit};\n-use middle::dataflow;\n-\n+pub use rustc::middle::cfg::graphviz::{Node, Edge};\n+use rustc::middle::cfg::graphviz as cfg_dot;\n+\n+use borrowck;\n+use borrowck::{BorrowckCtxt, LoanPath};\n+use dot;\n+use rustc::middle::cfg::{CFGIndex};\n+use rustc::middle::dataflow::{DataFlowOperator, DataFlowContext, EntryOrExit};\n+use rustc::middle::dataflow;\n use std::rc::Rc;\n \n #[deriving(Show)]", "previous_filename": "src/librustc/middle/borrowck/graphviz.rs"}, {"sha": "f187c0c15300d8896754215b28555570087ef834", "filename": "src/librustc_borrowck/lib.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"rustc_borrowck\"]\n+#![experimental]\n+#![crate_type = \"dylib\"]\n+#![crate_type = \"rlib\"]\n+#![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n+      html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n+      html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n+\n+#![feature(default_type_params, globs, if_let, import_shadowing, macro_rules, phase, quote)]\n+#![feature(slicing_syntax, tuple_indexing, unsafe_destructor)]\n+#![feature(rustc_diagnostic_macros)]\n+#![allow(non_camel_case_types)]\n+\n+#[phase(plugin, link)] extern crate log;\n+#[phase(plugin, link)] extern crate syntax;\n+\n+// for \"clarity\", rename the graphviz crate to dot; graphviz within `borrowck`\n+// refers to the borrowck-specific graphviz adapter traits.\n+extern crate \"graphviz\" as dot;\n+extern crate rustc;\n+\n+pub use borrowck::check_crate;\n+pub use borrowck::build_borrowck_dataflow_data_for_fn;\n+pub use borrowck::FnPartsWithCFG;\n+\n+mod borrowck;\n+\n+pub mod graphviz;\n+"}, {"sha": "6cddcaca1e45c5716447c4bc85e1ae2c79f1feb2", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -19,6 +19,7 @@ use rustc::plugin::load::Plugins;\n use rustc::plugin::registry::Registry;\n use rustc::plugin;\n use rustc::util::common::time;\n+use rustc_borrowck as borrowck;\n use rustc_trans::back::link;\n use rustc_trans::back::write;\n use rustc_trans::save;\n@@ -420,7 +421,7 @@ pub fn phase_3_run_analysis_passes<'tcx>(sess: Session,\n          middle::liveness::check_crate(&ty_cx));\n \n     time(time_passes, \"borrow checking\", (), |_|\n-         middle::borrowck::check_crate(&ty_cx));\n+         borrowck::check_crate(&ty_cx));\n \n     time(time_passes, \"rvalue checking\", (), |_|\n          middle::check_rvalues::check_crate(&ty_cx, krate));"}, {"sha": "85d9646c282111dd2f67081a11ba00eabbb2459a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -32,9 +32,10 @@ extern crate getopts;\n extern crate graphviz;\n extern crate libc;\n extern crate rustc;\n-extern crate rustc_typeck;\n extern crate rustc_back;\n+extern crate rustc_borrowck;\n extern crate rustc_trans;\n+extern crate rustc_typeck;\n #[phase(plugin, link)] extern crate log;\n #[phase(plugin, link)] extern crate syntax;\n extern crate serialize;"}, {"sha": "971379b8dd2961d732514b463d19b4a918e04045", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854d1bfc23f9851f86600863f1ca191ebe45698/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=2854d1bfc23f9851f86600863f1ca191ebe45698", "patch": "@@ -20,13 +20,13 @@ use rustc_trans::back::link;\n use driver;\n \n use rustc::middle::ty;\n-use rustc::middle::borrowck::{mod, FnPartsWithCFG};\n-use rustc::middle::borrowck::graphviz as borrowck_dot;\n use rustc::middle::cfg;\n use rustc::middle::cfg::graphviz::LabelledCFG;\n use rustc::session::Session;\n use rustc::session::config::{mod, Input};\n use rustc::util::ppaux;\n+use rustc_borrowck as borrowck;\n+use rustc_borrowck::graphviz as borrowck_dot;\n \n use syntax::ast;\n use syntax::ast_map::{mod, blocks, NodePrinter};\n@@ -565,7 +565,7 @@ fn print_flowgraph<W:io::Writer>(variants: Vec<borrowck_dot::Variant>,\n             return Ok(())\n         }\n         blocks::FnLikeCode(fn_like) => {\n-            let fn_parts = FnPartsWithCFG::from_fn_like(&fn_like, &cfg);\n+            let fn_parts = borrowck::FnPartsWithCFG::from_fn_like(&fn_like, &cfg);\n             let (bccx, analysis_data) =\n                 borrowck::build_borrowck_dataflow_data_for_fn(ty_cx, fn_parts);\n "}]}