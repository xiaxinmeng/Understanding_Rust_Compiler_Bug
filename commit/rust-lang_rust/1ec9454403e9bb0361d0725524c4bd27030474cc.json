{"sha": "1ec9454403e9bb0361d0725524c4bd27030474cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYzk0NTQ0MDNlOWJiMDM2MWQwNzI1NTI0YzRiZDI3MDMwNDc0Y2M=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-04-30T16:05:01Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-06-18T17:51:53Z"}, "message": "ErrorKind: Provide many more ErrorKinds, motivated by Unix errnos\n\nRationale for the mappings etc. is extensively discussed in the MR\n  https://github.com/rust-lang/rust/pull/79965\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "ac4d6890f24bffbd91eb785b0b2e08a99afdf187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac4d6890f24bffbd91eb785b0b2e08a99afdf187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ec9454403e9bb0361d0725524c4bd27030474cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec9454403e9bb0361d0725524c4bd27030474cc", "html_url": "https://github.com/rust-lang/rust/commit/1ec9454403e9bb0361d0725524c4bd27030474cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ec9454403e9bb0361d0725524c4bd27030474cc/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "655053ed91e8b23419176e590ba9b02965b7c8dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/655053ed91e8b23419176e590ba9b02965b7c8dc", "html_url": "https://github.com/rust-lang/rust/commit/655053ed91e8b23419176e590ba9b02965b7c8dc"}], "stats": {"total": 157, "additions": 157, "deletions": 0}, "files": [{"sha": "f07e469f52932f4f579f6023dc3ac4ee876039ef", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/1ec9454403e9bb0361d0725524c4bd27030474cc/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec9454403e9bb0361d0725524c4bd27030474cc/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=1ec9454403e9bb0361d0725524c4bd27030474cc", "patch": "@@ -105,6 +105,12 @@ pub enum ErrorKind {\n     /// The connection was reset by the remote server.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     ConnectionReset,\n+    /// The remote host is not reachable.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    HostUnreachable,\n+    /// The network containing the remote host is not reachable.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    NetworkUnreachable,\n     /// The connection was aborted (terminated) by the remote server.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     ConnectionAborted,\n@@ -119,6 +125,9 @@ pub enum ErrorKind {\n     /// local.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     AddrNotAvailable,\n+    /// The system's networking is down.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    NetworkDown,\n     /// The operation failed because a pipe was closed.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     BrokenPipe,\n@@ -129,6 +138,37 @@ pub enum ErrorKind {\n     /// requested to not occur.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     WouldBlock,\n+    /// A filesystem object is, unexpectedly, not a directory.\n+    ///\n+    /// For example, a filesystem path was specified where one of the intermediate directory\n+    /// components was, in fact, a plain file.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    NotADirectory,\n+    /// The filesystem object is, unexpectedly, a directory.\n+    ///\n+    /// A directory was specified when a non-directory was expected.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    IsADirectory,\n+    /// A non-empty directory was specified where an empty directory was expected.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    DirectoryNotEmpty,\n+    /// The filesystem or storage medium is read-only, but a write operation was attempted.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    ReadOnlyFilesystem,\n+    /// Loop in the filesystem; often, too many levels of symbolic links.\n+    ///\n+    /// There was a loop (or excessively long chain) resolving a filesystem object.\n+    ///\n+    /// On Unix this is usually the result of a symbolic link loop; or, of exceeding the\n+    /// system-specific limit on the depth of symlink traversal.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    FilesystemLoop,\n+    /// Stale network file handle\n+    ///\n+    /// With some network filesystems, notably NFS, an open file (or directory) can be invalidated\n+    /// by problems with the network or server.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    StaleNetworkFileHandle,\n     /// A parameter was incorrect.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     InvalidInput,\n@@ -158,6 +198,62 @@ pub enum ErrorKind {\n     /// [`Ok(0)`]: Ok\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     WriteZero,\n+    /// The underlying storage (typically, a filesystem) is full.\n+    ///\n+    /// This does not include out of quota errors.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    StorageFull,\n+    /// Seek on unseekable file\n+    ///\n+    /// Seeking was attempted on an open file handle which is not suitable for seeking - for\n+    /// example, on Unix, a named pipe opened with `File::new`.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    NotSeekable,\n+    /// Filesystem quota was exceeded.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    FilesystemQuotaExceeded,\n+    /// File larger than allowed or supported.\n+    ///\n+    /// This might arise from a hard limit of the underlying filesystem or file access API, or from\n+    /// an administratively imposed resource limitation.  Simple disk full, and out of quota, have\n+    /// their own errors.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    FileTooLarge,\n+    /// Resource is busy.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    ResourceBusy,\n+    /// Executable file is busy.\n+    ///\n+    /// An attempt was made to write to a file which is also in use as a running program.  (Not all\n+    /// operating systems detect this situation.)\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    ExecutableFileBusy,\n+    /// Deadlock (avoided)\n+    ///\n+    /// A file locking operation would result in deadlock.  This situation is typically detected, if\n+    /// at all, on a best-effort basis.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    Deadlock,\n+    /// Cross-device or cross-filesystem (hard) link or rename.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    CrossesDevices,\n+    /// Too many (hard) links to the same filesystem object.\n+    ///\n+    /// The filesystem does not support making so many hardlinks to the same file.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    TooManyLinks,\n+    /// Filename too long.\n+    ///\n+    /// The limit might be from the underlying filesystem or API, or an administratively imposed\n+    /// resource limit.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    FilenameTooLong,\n+    /// Program argument list too long.\n+    ///\n+    /// When trying to run an external program, a system or process limit on the size of the\n+    /// arguments would have been exceeded.\n+    #[unstable(feature = \"io_error_more\", issue = \"86442\")]\n+    ArgumentListTooLong,\n     /// This operation was interrupted.\n     ///\n     /// Interrupted operations can typically be retried.\n@@ -213,19 +309,39 @@ impl ErrorKind {\n             AddrInUse => \"address in use\",\n             AddrNotAvailable => \"address not available\",\n             AlreadyExists => \"entity already exists\",\n+            ArgumentListTooLong => \"argument list too long\",\n             BrokenPipe => \"broken pipe\",\n+            ResourceBusy => \"resource busy\",\n             ConnectionAborted => \"connection aborted\",\n             ConnectionRefused => \"connection refused\",\n             ConnectionReset => \"connection reset\",\n+            CrossesDevices => \"cross-device link or rename\",\n+            Deadlock => \"deadlock\",\n+            DirectoryNotEmpty => \"directory not empty\",\n+            ExecutableFileBusy => \"executable file busy\",\n+            FilenameTooLong => \"filename too long\",\n+            FilesystemQuotaExceeded => \"filesystem quota exceeded\",\n+            FileTooLarge => \"file too large\",\n+            HostUnreachable => \"host unreachable\",\n             Interrupted => \"operation interrupted\",\n             InvalidData => \"invalid data\",\n             InvalidInput => \"invalid input parameter\",\n+            IsADirectory => \"is a directory\",\n+            NetworkDown => \"network down\",\n+            NetworkUnreachable => \"network unreachable\",\n+            NotADirectory => \"not a directory\",\n+            StorageFull => \"no storage space\",\n             NotConnected => \"not connected\",\n             NotFound => \"entity not found\",\n             Other => \"other error\",\n             OutOfMemory => \"out of memory\",\n             PermissionDenied => \"permission denied\",\n+            ReadOnlyFilesystem => \"read-only filesystem or storage medium\",\n+            StaleNetworkFileHandle => \"stale network file handle\",\n+            FilesystemLoop => \"filesystem loop (e.g. symbolic link loop)\",\n+            NotSeekable => \"seek on unseekable file\",\n             TimedOut => \"timed out\",\n+            TooManyLinks => \"too many links\",\n             Uncategorized => \"uncategorized error\",\n             UnexpectedEof => \"unexpected end of file\",\n             Unsupported => \"unsupported\","}, {"sha": "01707fb50a7349ec72096639747562a432b7ef53", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1ec9454403e9bb0361d0725524c4bd27030474cc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec9454403e9bb0361d0725524c4bd27030474cc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=1ec9454403e9bb0361d0725524c4bd27030474cc", "patch": "@@ -135,20 +135,40 @@ pub use libc::signal;\n pub fn decode_error_kind(errno: i32) -> ErrorKind {\n     use ErrorKind::*;\n     match errno as libc::c_int {\n+        libc::E2BIG => ArgumentListTooLong,\n         libc::EADDRINUSE => AddrInUse,\n         libc::EADDRNOTAVAIL => AddrNotAvailable,\n+        libc::EBUSY => ResourceBusy,\n         libc::ECONNABORTED => ConnectionAborted,\n         libc::ECONNREFUSED => ConnectionRefused,\n         libc::ECONNRESET => ConnectionReset,\n+        libc::EDEADLK => Deadlock,\n+        libc::EDQUOT => FilesystemQuotaExceeded,\n         libc::EEXIST => AlreadyExists,\n+        libc::EFBIG => FileTooLarge,\n+        libc::EHOSTUNREACH => HostUnreachable,\n         libc::EINTR => Interrupted,\n         libc::EINVAL => InvalidInput,\n+        libc::EISDIR => IsADirectory,\n+        libc::ELOOP => FilesystemLoop,\n         libc::ENOENT => NotFound,\n         libc::ENOMEM => OutOfMemory,\n+        libc::ENOSPC => StorageFull,\n         libc::ENOSYS => Unsupported,\n+        libc::EMLINK => TooManyLinks,\n+        libc::ENAMETOOLONG => FilenameTooLong,\n+        libc::ENETDOWN => NetworkDown,\n+        libc::ENETUNREACH => NetworkUnreachable,\n         libc::ENOTCONN => NotConnected,\n+        libc::ENOTDIR => NotADirectory,\n+        libc::ENOTEMPTY => DirectoryNotEmpty,\n         libc::EPIPE => BrokenPipe,\n+        libc::EROFS => ReadOnlyFilesystem,\n+        libc::ESPIPE => NotSeekable,\n+        libc::ESTALE => StaleNetworkFileHandle,\n         libc::ETIMEDOUT => TimedOut,\n+        libc::ETXTBSY => ExecutableFileBusy,\n+        libc::EXDEV => CrossesDevices,\n \n         libc::EACCES | libc::EPERM => PermissionDenied,\n "}, {"sha": "0d0bae25c5fbb4ed1d6c348e88fb3f246b75e897", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1ec9454403e9bb0361d0725524c4bd27030474cc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec9454403e9bb0361d0725524c4bd27030474cc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=1ec9454403e9bb0361d0725524c4bd27030474cc", "patch": "@@ -90,6 +90,24 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n         | c::ERROR_RUNLEVEL_SWITCH_TIMEOUT\n         | c::ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT => return TimedOut,\n         c::ERROR_CALL_NOT_IMPLEMENTED => return Unsupported,\n+        | c::ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT => return TimedOut,\n+        c::ERROR_CALL_NOT_IMPLEMENTED => return Unsupported,\n+        c::ERROR_HOST_UNREACHABLE => return HostUnreachable,\n+        c::ERROR_NETWORK_UNREACHABLE => return NetworkUnreachable,\n+        c::ERROR_DIRECTORY => return NotADirectory,\n+        c::ERROR_DIRECTORY_NOT_SUPPORTED => return IsADirectory,\n+        c::ERROR_DIR_NOT_EMPTY => return DirectoryNotEmpty,\n+        c::ERROR_WRITE_PROTECT => return ReadOnlyFilesystem,\n+        c::ERROR_DISK_FULL\n+        | c::ERROR_HANDLE_DISK_FULL => return StorageFull,\n+        c::ERROR_SEEK_ON_DEVICE => return NotSeekable,\n+        c::ERROR_DISK_QUOTA_EXCEEDED => return FilesystemQuotaExceeded,\n+        c::ERROR_FILE_TOO_LARGE => return FileTooLarge,\n+        c::ERROR_BUSY => return ResourceBusy,\n+        c::ERROR_POSSIBLE_DEADLOCK => return Deadlock,\n+        c::ERROR_NOT_SAME_DEVICE => return CrossesDevices,\n+        c::ERROR_TOO_MANY_LINKS => return TooManyLinks,\n+        c::ERROR_FILENAME_EXCED_RANGE => return FilenameTooLong,\n         _ => {}\n     }\n \n@@ -104,6 +122,9 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n         c::WSAENOTCONN => NotConnected,\n         c::WSAEWOULDBLOCK => WouldBlock,\n         c::WSAETIMEDOUT => TimedOut,\n+        c::WSAEHOSTUNREACH => HostUnreachable,\n+        c::WSAENETDOWN => NetworkDown,\n+        c::WSAENETUNREACH => NetworkUnreachable,\n \n         _ => Uncategorized,\n     }"}]}