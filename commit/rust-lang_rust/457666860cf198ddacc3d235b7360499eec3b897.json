{"sha": "457666860cf198ddacc3d235b7360499eec3b897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NzY2Njg2MGNmMTk4ZGRhY2MzZDIzNWI3MzYwNDk5ZWVjM2I4OTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-14T06:10:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-14T06:10:08Z"}, "message": "Auto merge of #64080 - estebank:parse-format-comma, r=zackmdavis\n\nBe accurate on `format!` parse error expectations\n\nFix https://github.com/rust-lang/rust/issues/57277.", "tree": {"sha": "5a3fce00800563d579fb5711f42ce40ff954ae86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a3fce00800563d579fb5711f42ce40ff954ae86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/457666860cf198ddacc3d235b7360499eec3b897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/457666860cf198ddacc3d235b7360499eec3b897", "html_url": "https://github.com/rust-lang/rust/commit/457666860cf198ddacc3d235b7360499eec3b897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/457666860cf198ddacc3d235b7360499eec3b897/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6946a817a1345ce739acd8b12255c0a595e9b39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6946a817a1345ce739acd8b12255c0a595e9b39", "html_url": "https://github.com/rust-lang/rust/commit/a6946a817a1345ce739acd8b12255c0a595e9b39"}, {"sha": "4dec571ec69e14673b4e185e9881e4b71cd42aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dec571ec69e14673b4e185e9881e4b71cd42aaa", "html_url": "https://github.com/rust-lang/rust/commit/4dec571ec69e14673b4e185e9881e4b71cd42aaa"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "5bfbdc999174dc325fe1857b6090a597553a2292", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/457666860cf198ddacc3d235b7360499eec3b897/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/457666860cf198ddacc3d235b7360499eec3b897/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=457666860cf198ddacc3d235b7360499eec3b897", "patch": "@@ -138,15 +138,23 @@ fn parse_args<'a>(\n     }\n \n     let fmtstr = p.parse_expr()?;\n+    let mut first = true;\n     let mut named = false;\n \n     while p.token != token::Eof {\n         if !p.eat(&token::Comma) {\n-            let mut err = ecx.struct_span_err(p.token.span, \"expected token: `,`\");\n-            err.span_label(p.token.span, \"expected `,`\");\n-            p.maybe_annotate_with_ascription(&mut err, false);\n-            return Err(err);\n+            if first {\n+                // After `format!(\"\"` we always expect *only* a comma...\n+                let mut err = ecx.struct_span_err(p.token.span, \"expected token: `,`\");\n+                err.span_label(p.token.span, \"expected `,`\");\n+                p.maybe_annotate_with_ascription(&mut err, false);\n+                return Err(err);\n+            } else {\n+                // ...after that delegate to `expect` to also include the other expected tokens.\n+                return Err(p.expect(&token::Comma).err().unwrap());\n+            }\n         }\n+        first = false;\n         if p.token == token::Eof {\n             break;\n         } // accept trailing commas"}, {"sha": "dff248344a53d59d7a49c46293f8c3615582178e", "filename": "src/test/ui/codemap_tests/bad-format-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.rs?ref=457666860cf198ddacc3d235b7360499eec3b897", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n     format!(); //~ ERROR requires at least a format string argument\n     format!(\"\" 1); //~ ERROR expected token: `,`\n-    format!(\"\", 1 1); //~ ERROR expected token: `,`\n+    format!(\"\", 1 1); //~ ERROR expected one of\n }"}, {"sha": "3372ef6dea1fce2f3a62de4f5d38438cf602db76", "filename": "src/test/ui/codemap_tests/bad-format-args.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr?ref=457666860cf198ddacc3d235b7360499eec3b897", "patch": "@@ -12,11 +12,11 @@ error: expected token: `,`\n LL |     format!(\"\" 1);\n    |                ^ expected `,`\n \n-error: expected token: `,`\n+error: expected one of `,`, `.`, `?`, or an operator, found `1`\n   --> $DIR/bad-format-args.rs:4:19\n    |\n LL |     format!(\"\", 1 1);\n-   |                   ^ expected `,`\n+   |                   ^ expected one of `,`, `.`, `?`, or an operator here\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b53bfe5df03f3c16f5902667260f9499a134b799", "filename": "src/test/ui/type/ascription/issue-54516.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-54516.rs", "raw_url": "https://github.com/rust-lang/rust/raw/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-54516.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-54516.rs?ref=457666860cf198ddacc3d235b7360499eec3b897", "patch": "@@ -2,5 +2,5 @@ use std::collections::BTreeMap;\n \n fn main() {\n     println!(\"{}\", std::mem:size_of::<BTreeMap<u32, u32>>());\n-    //~^ ERROR expected token: `,`\n+    //~^ ERROR expected one of\n }"}, {"sha": "97942904a0ffa9b2919ea4d4395c42460c992a2a", "filename": "src/test/ui/type/ascription/issue-54516.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-54516.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/457666860cf198ddacc3d235b7360499eec3b897/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-54516.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-54516.stderr?ref=457666860cf198ddacc3d235b7360499eec3b897", "patch": "@@ -1,8 +1,8 @@\n-error: expected token: `,`\n+error: expected one of `!`, `,`, or `::`, found `(`\n   --> $DIR/issue-54516.rs:4:58\n    |\n LL |     println!(\"{}\", std::mem:size_of::<BTreeMap<u32, u32>>());\n-   |                            -                             ^ expected `,`\n+   |                            -                             ^ expected one of `!`, `,`, or `::` here\n    |                            |\n    |                            help: maybe write a path separator here: `::`\n    |"}]}