{"sha": "c6558c0bc71024b8aca1db317c15cdf701d917d8", "node_id": "C_kwDOAAsO6NoAKGM2NTU4YzBiYzcxMDI0YjhhY2ExZGIzMTdjMTVjZGY3MDFkOTE3ZDg", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-29T16:04:28Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-29T17:43:35Z"}, "message": "Recover keywords in bounds\n\nFor example, this fixes a error for `impl fn()` (notice the capitalization)", "tree": {"sha": "d77c9d6f4dbf6203f11908bcd14a05555432ae8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d77c9d6f4dbf6203f11908bcd14a05555432ae8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6558c0bc71024b8aca1db317c15cdf701d917d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6558c0bc71024b8aca1db317c15cdf701d917d8", "html_url": "https://github.com/rust-lang/rust/commit/c6558c0bc71024b8aca1db317c15cdf701d917d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6558c0bc71024b8aca1db317c15cdf701d917d8/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5682615bb4fdb90e3a37b810a1b7bded2a1199e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5682615bb4fdb90e3a37b810a1b7bded2a1199e", "html_url": "https://github.com/rust-lang/rust/commit/e5682615bb4fdb90e3a37b810a1b7bded2a1199e"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "b76ba8ff2d98cd6e632e7c42a7669ff16a97c3a3", "filename": "compiler/rustc_parse/src/parser/ty.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c6558c0bc71024b8aca1db317c15cdf701d917d8/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6558c0bc71024b8aca1db317c15cdf701d917d8/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs?ref=c6558c0bc71024b8aca1db317c15cdf701d917d8", "patch": "@@ -640,7 +640,13 @@ impl<'a> Parser<'a> {\n         let mut bounds = Vec::new();\n         let mut negative_bounds = Vec::new();\n \n-        while self.can_begin_bound() || self.token.is_keyword(kw::Dyn) {\n+        while self.can_begin_bound()\n+            // Continue even if we find a keyword.\n+            // This is necessary for error recover on, for example, `impl fn()`.\n+            //\n+            // The only keyword that can go after generic bounds is `where`, so stop if it's it.\n+            || (self.token.is_reserved_ident() && !self.token.is_keyword(kw::Where))\n+        {\n             if self.token.is_keyword(kw::Dyn) {\n                 // Account for `&dyn Trait + dyn Other`.\n                 self.struct_span_err(self.token.span, \"invalid `dyn` keyword\")"}, {"sha": "e0d3e0b497b3f729671daa2c9dbf77cba8ae252a", "filename": "src/test/ui/rfc-2632-const-trait-impl/without-tilde.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c6558c0bc71024b8aca1db317c15cdf701d917d8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fwithout-tilde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6558c0bc71024b8aca1db317c15cdf701d917d8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fwithout-tilde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fwithout-tilde.rs?ref=c6558c0bc71024b8aca1db317c15cdf701d917d8", "patch": "@@ -3,4 +3,5 @@\n #![feature(const_trait_impl)]\n \n struct S<T: const Tr>;\n-//~^ ERROR expected one of `!`, `(`, `,`, `=`, `>`, `?`, `for`, `~`, lifetime, or path\n+//~^ ERROR expected identifier, found keyword `const`\n+//~| ERROR expected one of `(`, `+`, `,`, `::`, `<`, `=`, or `>`, found `Tr`"}, {"sha": "243f0979509bf2a5c75d1569ad53cc441ee57c64", "filename": "src/test/ui/rfc-2632-const-trait-impl/without-tilde.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c6558c0bc71024b8aca1db317c15cdf701d917d8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fwithout-tilde.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6558c0bc71024b8aca1db317c15cdf701d917d8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fwithout-tilde.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fwithout-tilde.stderr?ref=c6558c0bc71024b8aca1db317c15cdf701d917d8", "patch": "@@ -1,8 +1,14 @@\n-error: expected one of `!`, `(`, `,`, `=`, `>`, `?`, `for`, `~`, lifetime, or path, found keyword `const`\n+error: expected identifier, found keyword `const`\n   --> $DIR/without-tilde.rs:5:13\n    |\n LL | struct S<T: const Tr>;\n-   |             ^^^^^ expected one of 10 possible tokens\n+   |             ^^^^^ expected identifier, found keyword\n \n-error: aborting due to previous error\n+error: expected one of `(`, `+`, `,`, `::`, `<`, `=`, or `>`, found `Tr`\n+  --> $DIR/without-tilde.rs:5:19\n+   |\n+LL | struct S<T: const Tr>;\n+   |                   ^^ expected one of 7 possible tokens\n+\n+error: aborting due to 2 previous errors\n "}]}