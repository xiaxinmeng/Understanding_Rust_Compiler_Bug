{"sha": "22872e508f32158a0f325ab1b3399c00de081ff7", "node_id": "C_kwDOAAsO6NoAKDIyODcyZTUwOGYzMjE1OGEwZjMyNWFiMWIzMzk5YzAwZGUwODFmZjc", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-01T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-01T00:00:00Z"}, "message": "Validate that values in switch int terminator are unique", "tree": {"sha": "d59db38416a1a7b85a796389a1131eb0bee6d6d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d59db38416a1a7b85a796389a1131eb0bee6d6d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22872e508f32158a0f325ab1b3399c00de081ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22872e508f32158a0f325ab1b3399c00de081ff7", "html_url": "https://github.com/rust-lang/rust/commit/22872e508f32158a0f325ab1b3399c00de081ff7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22872e508f32158a0f325ab1b3399c00de081ff7/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547f2ba06bc4aa93a375c54e1af3fd1216eeaf62", "url": "https://api.github.com/repos/rust-lang/rust/commits/547f2ba06bc4aa93a375c54e1af3fd1216eeaf62", "html_url": "https://github.com/rust-lang/rust/commit/547f2ba06bc4aa93a375c54e1af3fd1216eeaf62"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "cf15fc4ddc3a54fa3fe60f13453274462fbb6831", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/22872e508f32158a0f325ab1b3399c00de081ff7/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22872e508f32158a0f325ab1b3399c00de081ff7/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=22872e508f32158a0f325ab1b3399c00de081ff7", "patch": "@@ -55,6 +55,7 @@ impl<'tcx> MirPass<'tcx> for Validator {\n             reachable_blocks: traversal::reachable_as_bitset(body),\n             storage_liveness,\n             place_cache: Vec::new(),\n+            value_cache: Vec::new(),\n         }\n         .visit_body(body);\n     }\n@@ -109,6 +110,7 @@ struct TypeChecker<'a, 'tcx> {\n     reachable_blocks: BitSet<BasicBlock>,\n     storage_liveness: ResultsCursor<'a, 'tcx, MaybeStorageLive>,\n     place_cache: Vec<PlaceRef<'tcx>>,\n+    value_cache: Vec<u128>,\n }\n \n impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n@@ -398,6 +400,22 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                     self.check_edge(location, target, EdgeKind::Normal);\n                 }\n                 self.check_edge(location, targets.otherwise(), EdgeKind::Normal);\n+\n+                self.value_cache.clear();\n+                self.value_cache.extend(targets.iter().map(|(value, _)| value));\n+                let all_len = self.value_cache.len();\n+                self.value_cache.sort_unstable();\n+                self.value_cache.dedup();\n+                let has_duplicates = all_len != self.value_cache.len();\n+                if has_duplicates {\n+                    self.fail(\n+                        location,\n+                        format!(\n+                            \"duplicated values in `SwitchInt` terminator: {:?}\",\n+                            terminator.kind,\n+                        ),\n+                    );\n+                }\n             }\n             TerminatorKind::Drop { target, unwind, .. } => {\n                 self.check_edge(location, *target, EdgeKind::Normal);"}]}