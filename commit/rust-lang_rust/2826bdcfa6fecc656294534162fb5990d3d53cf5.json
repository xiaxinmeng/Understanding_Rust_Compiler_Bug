{"sha": "2826bdcfa6fecc656294534162fb5990d3d53cf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjZiZGNmYTZmZWNjNjU2Mjk0NTM0MTYyZmI1OTkwZDNkNTNjZjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T09:11:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-28T09:11:06Z"}, "message": "Rollup merge of #62759 - mark-i-m:rustc-guide-toolstate-check, r=kennytm\n\nActually add rustc-guide to toolstate, don't fail builds for the guide\n\ncc @ehuss\n\nr? @kennytm", "tree": {"sha": "2dcd4627860c3796b3b19df5796825ed9840b48d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dcd4627860c3796b3b19df5796825ed9840b48d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2826bdcfa6fecc656294534162fb5990d3d53cf5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdPWaqCRBK7hj4Ov3rIwAAdHIIAEG+aVoZPWndJzvgpv3NTSy5\nhQYktgTSZ1BuCEW1qlevHS3r3UYvTBuhCoGZxxy2nQmkt/k+kQUwGAC2IryQXRtB\nmTch1VqSbFgnKOdmjM7k1nNagl8J/4zDOVObELaGvGV34aFT7S/37q4ZNgJ6ZPI5\nsr56WqeZsX9kxxt9brktciVRrx5ciDppAwxTvc6iZDQV7tw5Jzq0xFqDGiiuJkjM\nN7QhSXXpGdz8nDv36F0NzCs+nHd/OU/siCcrYy8kKfuvSMxuKmO8/fW7xOYUqcQo\nvMQ9b5OeheCShyVLheTjpvJtWjE6Tq4P6fQWG4QFPDF63O7/PNDyYKOoui2C//I=\n=77G3\n-----END PGP SIGNATURE-----\n", "payload": "tree 2dcd4627860c3796b3b19df5796825ed9840b48d\nparent 75e23ff411d8466a513d9315b472e31d8f7fb2bc\nparent 11a3b742d8dfae9c9d4858adc5417918e13d84a5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564305066 +0200\ncommitter GitHub <noreply@github.com> 1564305066 +0200\n\nRollup merge of #62759 - mark-i-m:rustc-guide-toolstate-check, r=kennytm\n\nActually add rustc-guide to toolstate, don't fail builds for the guide\n\ncc @ehuss\n\nr? @kennytm\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2826bdcfa6fecc656294534162fb5990d3d53cf5", "html_url": "https://github.com/rust-lang/rust/commit/2826bdcfa6fecc656294534162fb5990d3d53cf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2826bdcfa6fecc656294534162fb5990d3d53cf5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75e23ff411d8466a513d9315b472e31d8f7fb2bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e23ff411d8466a513d9315b472e31d8f7fb2bc", "html_url": "https://github.com/rust-lang/rust/commit/75e23ff411d8466a513d9315b472e31d8f7fb2bc"}, {"sha": "11a3b742d8dfae9c9d4858adc5417918e13d84a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/11a3b742d8dfae9c9d4858adc5417918e13d84a5", "html_url": "https://github.com/rust-lang/rust/commit/11a3b742d8dfae9c9d4858adc5417918e13d84a5"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "4fbb8c4d2034900dda85f48c5d4afa55b2834c4f", "filename": "src/ci/docker/x86_64-gnu-tools/checkregression.py", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fcheckregression.py", "raw_url": "https://github.com/rust-lang/rust/raw/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fcheckregression.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fcheckregression.py?ref=2826bdcfa6fecc656294534162fb5990d3d53cf5", "patch": "@@ -1,9 +1,18 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n+## This script has two purposes: detect any tool that *regressed*, which is used\n+## during the week before the beta branches to reject PRs; and detect any tool\n+## that *changed* to see if we need to update the toolstate repo.\n+\n import sys\n import json\n \n+# Regressions for these tools during the beta cutoff week do not cause failure.\n+# See `status_check` in `checktools.sh` for tools that have to pass on the\n+# beta/stable branches.\n+REGRESSION_OK = [\"rustc-guide\", \"miri\", \"embedded-book\"]\n+\n if __name__ == '__main__':\n     os_name = sys.argv[1]\n     toolstate_file = sys.argv[2]\n@@ -32,7 +41,8 @@\n                 'The state of \"{}\" has {} from \"{}\" to \"{}\"'\n                 .format(tool, verb, state, new_state)\n             )\n-            regressed = True\n+            if not (verb == 'regressed' and tool in REGRESSION_OK):\n+                regressed = True\n \n     if regressed:\n         sys.exit(1)"}, {"sha": "4243effdf9b4b22074af2022a0e49feb53d62580", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=2826bdcfa6fecc656294534162fb5990d3d53cf5", "patch": "@@ -25,6 +25,7 @@ python2.7 \"$X_PY\" test --no-fail-fast \\\n     src/doc/rust-by-example \\\n     src/doc/embedded-book \\\n     src/doc/edition-guide \\\n+    src/doc/rustc-guide \\\n     src/tools/clippy \\\n     src/tools/rls \\\n     src/tools/rustfmt \\\n@@ -41,7 +42,7 @@ check_tool_failed() {\n }\n \n # This function checks that if a tool's submodule changed, the tool's state must improve\n-verify_status() {\n+verify_submodule_changed() {\n     echo \"Verifying status of $1...\"\n     if echo \"$CHANGED_FILES\" | grep -q \"^M[[:blank:]]$2$\"; then\n         echo \"This PR updated '$2', verifying if status is 'test-pass'...\"\n@@ -66,7 +67,7 @@ verify_status() {\n check_dispatch() {\n     if [ \"$1\" = submodule_changed ]; then\n         # ignore $2 (branch id)\n-        verify_status $3 $4\n+        verify_submodule_changed $3 $4\n     elif [ \"$2\" = beta ]; then\n         echo \"Requiring test passing for $3...\"\n         if check_tool_failed \"$3\"; then\n@@ -75,7 +76,12 @@ check_dispatch() {\n     fi\n }\n \n-# list all tools here\n+# List all tools here.\n+# This function gets called with \"submodule_changed\" for each PR that changed a submodule,\n+# and with \"beta_required\" for each PR that lands on beta/stable.\n+# The purpose of this function is to *reject* PRs if a tool is not \"test-pass\" and\n+# (a) the tool's submodule has been updated, or (b) we landed on beta/stable and the\n+# tool has to \"test-pass\" on that branch.\n status_check() {\n     check_dispatch $1 beta book src/doc/book\n     check_dispatch $1 beta nomicon src/doc/nomicon\n@@ -85,7 +91,10 @@ status_check() {\n     check_dispatch $1 beta rls src/tools/rls\n     check_dispatch $1 beta rustfmt src/tools/rustfmt\n     check_dispatch $1 beta clippy-driver src/tools/clippy\n-    # these tools are not required for beta to successfully branch\n+    # These tools are not required on the beta/stable branches, but they *do* cause\n+    # PRs to fail if a submodule update does not fix them.\n+    # They will still cause failure during the beta cutoff week, unless `checkregression.py`\n+    # exempts them from that.\n     check_dispatch $1 nightly miri src/tools/miri\n     check_dispatch $1 nightly embedded-book src/doc/embedded-book\n     check_dispatch $1 nightly rustc-guide src/doc/rustc-guide\n@@ -97,12 +106,14 @@ status_check() {\n status_check \"submodule_changed\"\n \n CHECK_NOT=\"$(readlink -f \"$(dirname $0)/checkregression.py\")\"\n+# This callback is called by `commit_toolstate_change`, see `repo.sh`.\n change_toolstate() {\n     # only update the history\n     if python2.7 \"$CHECK_NOT\" \"$OS\" \"$TOOLSTATE_FILE\" \"_data/latest.json\" changed; then\n         echo 'Toolstate is not changed. Not updating.'\n     else\n         if [ $SIX_WEEK_CYCLE -ge 35 ]; then\n+            # Reject any regressions during the week before beta cutoff.\n             python2.7 \"$CHECK_NOT\" \"$OS\" \"$TOOLSTATE_FILE\" \"_data/latest.json\" regressed\n         fi\n         sed -i \"1 a\\\\"}, {"sha": "145f671a8cba59f3a6e900e6bd66e307096f5d0d", "filename": "src/ci/docker/x86_64-gnu-tools/repo.sh", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh?ref=2826bdcfa6fecc656294534162fb5990d3d53cf5", "patch": "@@ -42,6 +42,13 @@ commit_toolstate_change() {\n     MESSAGE_FILE=\"$1\"\n     shift\n     for RETRY_COUNT in 1 2 3 4 5; do\n+        # Call the callback.\n+        # - If we are in the `auto` branch (pre-landing), this is called from `checktools.sh` and\n+        #   the callback is `change_toolstate` in that file. The purpose of this is to publish the\n+        #   test results (the new commit-to-toolstate mapping) in the toolstate repo.\n+        # - If we are in the `master` branch (post-landing), this is called by the CI pipeline\n+        #   and the callback is `src/tools/publish_toolstate.py`. The purpose is to publish\n+        #   the new \"current\" toolstate in the toolstate repo.\n         \"$@\"\n         # `git commit` failing means nothing to commit.\n         FAILURE=0"}, {"sha": "b8dcba3afc3a1624c897c8a27028ebc6dec8d8aa", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/2826bdcfa6fecc656294534162fb5990d3d53cf5/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=2826bdcfa6fecc656294534162fb5990d3d53cf5", "patch": "@@ -1,6 +1,12 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n+## This script publishes the new \"current\" toolstate in the toolstate repo (not to be\n+## confused with publishing the test results, which happens in\n+## `src/ci/docker/x86_64-gnu-tools/checktools.sh`).\n+## It is set as callback for `src/ci/docker/x86_64-gnu-tools/repo.sh` by the CI scripts\n+## when a new commit lands on `master` (i.e., after it passed all checks on `auto`).\n+\n import sys\n import re\n import os"}]}