{"sha": "99e1cdb46f1b26ba8b458dded654f7f6a59973bc", "node_id": "C_kwDOAAsO6NoAKDk5ZTFjZGI0NmYxYjI2YmE4YjQ1OGRkZWQ2NTRmN2Y2YTU5OTczYmM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-04-21T16:00:33Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-04-21T16:00:33Z"}, "message": "rustdoc: get rid of redundant, nested `let` lines", "tree": {"sha": "c40eb513d71b614d03e5485820bdb0c20f60c779", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c40eb513d71b614d03e5485820bdb0c20f60c779"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99e1cdb46f1b26ba8b458dded654f7f6a59973bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99e1cdb46f1b26ba8b458dded654f7f6a59973bc", "html_url": "https://github.com/rust-lang/rust/commit/99e1cdb46f1b26ba8b458dded654f7f6a59973bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99e1cdb46f1b26ba8b458dded654f7f6a59973bc/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e26ae9530b21288ea6f9ca73d8c8d895c47807c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e26ae9530b21288ea6f9ca73d8c8d895c47807c3", "html_url": "https://github.com/rust-lang/rust/commit/e26ae9530b21288ea6f9ca73d8c8d895c47807c3"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "fe227244588b4e0fb9351f8649a37aa05d4df761", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/99e1cdb46f1b26ba8b458dded654f7f6a59973bc/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e1cdb46f1b26ba8b458dded654f7f6a59973bc/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=99e1cdb46f1b26ba8b458dded654f7f6a59973bc", "patch": "@@ -1956,11 +1956,12 @@ fn document_type_layout<'a, 'cx: 'a>(\n             return Ok(());\n         }\n \n-        let variants = {\n-            let tcx = cx.tcx();\n-            let param_env = tcx.param_env(ty_def_id);\n-            let ty = tcx.type_of(ty_def_id).subst_identity();\n-            let type_layout = tcx.layout_of(param_env.and(ty));\n+        let tcx = cx.tcx();\n+        let param_env = tcx.param_env(ty_def_id);\n+        let ty = tcx.type_of(ty_def_id).subst_identity();\n+        let type_layout = tcx.layout_of(param_env.and(ty));\n+\n+        let variants =\n             if let Ok(type_layout) = type_layout &&\n                 let Variants::Multiple { variants, tag, tag_encoding, .. } =\n                     type_layout.layout.variants() &&\n@@ -1991,19 +1992,14 @@ fn document_type_layout<'a, 'cx: 'a>(\n             } else {\n                 Vec::new()\n             }\n-        };\n+        ;\n \n-        let type_layout_size = {\n-            let tcx = cx.tcx();\n-            let param_env = tcx.param_env(ty_def_id);\n-            let ty = tcx.type_of(ty_def_id).subst_identity();\n-            tcx.layout_of(param_env.and(ty)).map(|layout| {\n-                let is_unsized = layout.abi.is_unsized();\n-                let is_uninhabited = layout.abi.is_uninhabited();\n-                let size = layout.size.bytes();\n-                TypeLayoutSize { is_unsized, is_uninhabited, size }\n-            })\n-        };\n+        let type_layout_size = tcx.layout_of(param_env.and(ty)).map(|layout| {\n+            let is_unsized = layout.abi.is_unsized();\n+            let is_uninhabited = layout.abi.is_uninhabited();\n+            let size = layout.size.bytes();\n+            TypeLayoutSize { is_unsized, is_uninhabited, size }\n+        });\n \n         Ok(TypeLayout { variants, type_layout_size }.render_into(f).unwrap())\n     })"}]}