{"sha": "642414e8047521d7856e664192754d4105bb1fb1", "node_id": "C_kwDOAAsO6NoAKDY0MjQxNGU4MDQ3NTIxZDc4NTZlNjY0MTkyNzU0ZDQxMDViYjFmYjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-11T20:48:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-11T20:48:44Z"}, "message": "Rollup merge of #92895 - bjorn3:simplifications, r=jackh726\n\nRemove some unused functionality\n\n* Remove the `alt_std_name` option\n* Remove the everybody loops pass\n* Make two functions private", "tree": {"sha": "c03f568760573e649a776fb26bb6032b69222be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c03f568760573e649a776fb26bb6032b69222be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/642414e8047521d7856e664192754d4105bb1fb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiBsutCRBK7hj4Ov3rIwAAOiEIAH+NNqSEB6jqbJmi4eAbgo9Q\nlrLBNaJipr9QvZ6gbsa25uqYgU39zWuX5s5F1tKN3sZcBe4n6GHgmnT3sRCkmQMh\nPwnpEfFAysnxSsN7A+ew+O6qbwdPmgWaqXtf4CAFXubHngOp8j7hqqfnz/ks3t5M\n4knDv+QFb2YhHxFrOa336PWoUplAmRRZm51vu2ugy4fYvXUyzR4UzsS3DkJ+dYig\nyZd3MqKdgGIMp/BqUqtbwoJ53xjO723lo2ggu9iCjcgxvEOEgRW2vvBdGNaqkyzu\n6XyuuxNAIwovzZYbt5Ve05pFHk+tvn3hC8qJHBg5eBB7W+bh/YiDJ48eVB/pStk=\n=88Nu\n-----END PGP SIGNATURE-----\n", "payload": "tree c03f568760573e649a776fb26bb6032b69222be2\nparent b7c48b469173f7d468ed8e62b605f94659b60e2e\nparent 7ba4110012730bffeb4eeb857a1f8ea408bdc9cc\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644612524 +0100\ncommitter GitHub <noreply@github.com> 1644612524 +0100\n\nRollup merge of #92895 - bjorn3:simplifications, r=jackh726\n\nRemove some unused functionality\n\n* Remove the `alt_std_name` option\n* Remove the everybody loops pass\n* Make two functions private\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/642414e8047521d7856e664192754d4105bb1fb1", "html_url": "https://github.com/rust-lang/rust/commit/642414e8047521d7856e664192754d4105bb1fb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/642414e8047521d7856e664192754d4105bb1fb1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7c48b469173f7d468ed8e62b605f94659b60e2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c48b469173f7d468ed8e62b605f94659b60e2e", "html_url": "https://github.com/rust-lang/rust/commit/b7c48b469173f7d468ed8e62b605f94659b60e2e"}, {"sha": "7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "html_url": "https://github.com/rust-lang/rust/commit/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "3571517d2b258a8162ab6fc69bb0e5e658015e7e", "filename": "compiler/rustc_builtin_macros/src/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs?ref=642414e8047521d7856e664192754d4105bb1fb1", "patch": "@@ -11,7 +11,6 @@ pub fn inject(\n     mut krate: ast::Crate,\n     resolver: &mut dyn ResolverExpand,\n     sess: &Session,\n-    alt_std_name: Option<Symbol>,\n ) -> ast::Crate {\n     let edition = sess.parse_sess.edition;\n \n@@ -53,7 +52,7 @@ pub fn inject(\n                 span,\n                 ident,\n                 vec![cx.attribute(cx.meta_word(span, sym::macro_use))],\n-                ast::ItemKind::ExternCrate(alt_std_name),\n+                ast::ItemKind::ExternCrate(None),\n             ),\n         );\n     }"}, {"sha": "66e1e78b2856c8972539e349684e0e1a70a61093", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=642414e8047521d7856e664192754d4105bb1fb1", "patch": "@@ -286,8 +286,7 @@ pub fn configure_and_expand(\n     rustc_builtin_macros::register_builtin_macros(resolver);\n \n     krate = sess.time(\"crate_injection\", || {\n-        let alt_std_name = sess.opts.alt_std_name.as_ref().map(|s| Symbol::intern(s));\n-        rustc_builtin_macros::standard_library_imports::inject(krate, resolver, sess, alt_std_name)\n+        rustc_builtin_macros::standard_library_imports::inject(krate, resolver, sess)\n     });\n \n     util::check_attr_crate_type(sess, &krate.attrs, &mut resolver.lint_buffer());"}, {"sha": "f74cadfebacba748f4b38976884f0119cb1db976", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=642414e8047521d7856e664192754d4105bb1fb1", "patch": "@@ -118,7 +118,7 @@ fn get_stack_size() -> Option<usize> {\n /// Like a `thread::Builder::spawn` followed by a `join()`, but avoids the need\n /// for `'static` bounds.\n #[cfg(not(parallel_compiler))]\n-pub fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n+fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n     // SAFETY: join() is called immediately, so any closure captures are still\n     // alive.\n     match unsafe { cfg.spawn_unchecked(f) }.unwrap().join() {\n@@ -379,7 +379,7 @@ fn sysroot_candidates() -> Vec<PathBuf> {\n     }\n }\n \n-pub fn get_codegen_sysroot(maybe_sysroot: &Option<PathBuf>, backend_name: &str) -> MakeBackendFn {\n+fn get_codegen_sysroot(maybe_sysroot: &Option<PathBuf>, backend_name: &str) -> MakeBackendFn {\n     // For now we only allow this function to be called once as it'll dlopen a\n     // few things, which seems to work best if we only do that once. In\n     // general this assertion never trips due to the once guard in `get_codegen_backend`,"}, {"sha": "79962d5db891826e30cacac0389ab937d0ba8d10", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=642414e8047521d7856e664192754d4105bb1fb1", "patch": "@@ -770,7 +770,6 @@ impl Default for Options {\n             externs: Externs(BTreeMap::new()),\n             extern_dep_specs: ExternDepSpecs(BTreeMap::new()),\n             crate_name: None,\n-            alt_std_name: None,\n             libs: Vec::new(),\n             unstable_features: UnstableFeatures::Disallow,\n             debug_assertions: true,\n@@ -2382,7 +2381,6 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         unstable_features: UnstableFeatures::from_environment(crate_name.as_deref()),\n         extern_dep_specs,\n         crate_name,\n-        alt_std_name: None,\n         libs,\n         debug_assertions,\n         actually_rustdoc: false,"}, {"sha": "ae1b638c34467ec0f0542cf0895ac2cb03e88009", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642414e8047521d7856e664192754d4105bb1fb1/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=642414e8047521d7856e664192754d4105bb1fb1", "patch": "@@ -184,10 +184,6 @@ top_level_options!(\n         externs: Externs [UNTRACKED],\n         extern_dep_specs: ExternDepSpecs [UNTRACKED],\n         crate_name: Option<String> [TRACKED],\n-        /// An optional name to use as the crate for std during std injection,\n-        /// written `extern crate name as std`. Defaults to `std`. Used by\n-        /// out-of-tree drivers.\n-        alt_std_name: Option<String> [TRACKED],\n         /// Indicates how the compiler should treat unstable features.\n         unstable_features: UnstableFeatures [TRACKED],\n "}]}