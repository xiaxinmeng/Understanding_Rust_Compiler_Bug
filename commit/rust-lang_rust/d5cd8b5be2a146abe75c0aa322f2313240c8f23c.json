{"sha": "d5cd8b5be2a146abe75c0aa322f2313240c8f23c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1Y2Q4YjViZTJhMTQ2YWJlNzVjMGFhMzIyZjIzMTMyNDBjOGYyM2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-25T10:03:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-25T10:03:57Z"}, "message": "disable the new typing handler for `->`\n\nIt doesn't actually work with LSP", "tree": {"sha": "87a6a4d0aec36879f6984dad822d97d740c72bd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87a6a4d0aec36879f6984dad822d97d740c72bd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5cd8b5be2a146abe75c0aa322f2313240c8f23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5cd8b5be2a146abe75c0aa322f2313240c8f23c", "html_url": "https://github.com/rust-lang/rust/commit/d5cd8b5be2a146abe75c0aa322f2313240c8f23c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5cd8b5be2a146abe75c0aa322f2313240c8f23c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53e3bee0cfcd7541b5ee882ab4b47c9dde9780b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/53e3bee0cfcd7541b5ee882ab4b47c9dde9780b8", "html_url": "https://github.com/rust-lang/rust/commit/53e3bee0cfcd7541b5ee882ab4b47c9dde9780b8"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "16fb0726600a754b867601fe9b265a657d4d3502", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d5cd8b5be2a146abe75c0aa322f2313240c8f23c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5cd8b5be2a146abe75c0aa322f2313240c8f23c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=d5cd8b5be2a146abe75c0aa322f2313240c8f23c", "patch": "@@ -146,6 +146,15 @@ pub fn handle_on_type_formatting(\n     // `text.char_at(position) == typed_char`.\n     position.offset = position.offset - TextUnit::of_char('.');\n     let char_typed = params.ch.chars().next().unwrap_or('\\0');\n+\n+    // We have an assist that inserts ` ` after typing `->` in `fn foo() ->{`,\n+    // but it requires precise cursor positioning to work, and one can't\n+    // position the cursor with on_type formatting. So, let's just toggle this\n+    // feature off here, hoping that we'll enable it one day, \ud83d\ude3f.\n+    if char_typed == '>' {\n+        return Ok(None);\n+    }\n+\n     let edit = world.analysis().on_char_typed(position, char_typed)?;\n     let mut edit = match edit {\n         Some(it) => it,"}]}