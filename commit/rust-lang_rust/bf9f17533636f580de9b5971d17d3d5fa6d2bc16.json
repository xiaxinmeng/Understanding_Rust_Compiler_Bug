{"sha": "bf9f17533636f580de9b5971d17d3d5fa6d2bc16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmOWYxNzUzMzYzNmY1ODBkZTliNTk3MWQxN2QzZDVmYTZkMmJjMTY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-03-16T07:57:35Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-03-19T20:27:31Z"}, "message": "reviewer comments and rebase fallout", "tree": {"sha": "b5615f97d2d1da14df29fb5be78331b4945a2906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5615f97d2d1da14df29fb5be78331b4945a2906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf9f17533636f580de9b5971d17d3d5fa6d2bc16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9f17533636f580de9b5971d17d3d5fa6d2bc16", "html_url": "https://github.com/rust-lang/rust/commit/bf9f17533636f580de9b5971d17d3d5fa6d2bc16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf9f17533636f580de9b5971d17d3d5fa6d2bc16/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cf80dcce7dd4ed0e82b3c7c0adeae433c3063fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cf80dcce7dd4ed0e82b3c7c0adeae433c3063fc", "html_url": "https://github.com/rust-lang/rust/commit/0cf80dcce7dd4ed0e82b3c7c0adeae433c3063fc"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "f7fa88b61f2c9144cdac4fe80d7f7789df30f476", "filename": "Configurations.md", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bf9f17533636f580de9b5971d17d3d5fa6d2bc16/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/bf9f17533636f580de9b5971d17d3d5fa6d2bc16/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=bf9f17533636f580de9b5971d17d3d5fa6d2bc16", "patch": "@@ -1297,27 +1297,28 @@ Reorder import statements in group\n \n **Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n \n-#### `false` (default):\n+#### `true` (default):\n \n ```rust\n+use std::io;\n+use std::mem;\n+\n use dolor;\n use ipsum;\n use lorem;\n use sit;\n-use std::io;\n-use std::mem;\n ```\n \n-#### `true`:\n+#### `false`:\n \n-```rust\n-use std::io;\n-use std::mem;\n \n+```rust\n use dolor;\n use ipsum;\n use lorem;\n use sit;\n+use std::io;\n+use std::mem;\n ```\n \n See also [`reorder_imports`](#reorder_imports).\n@@ -1359,7 +1360,11 @@ Reorder `extern crate` statements in group\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-#### `true` (default):\n+#### `false` (default):\n+\n+This value has no influence beyond the effect of the [`reorder_extern_crates`](#reorder_extern_crates) option. Set [`reorder_extern_crates`](#reorder_extern_crates) to `false` if you do not want `extern crate` groups to be collapsed and ordered.\n+\n+#### `true`:\n \n **Note:** This only takes effect when [`reorder_extern_crates`](#reorder_extern_crates) is set to `true`.\n \n@@ -1373,10 +1378,6 @@ extern crate lorem;\n extern crate sit;\n ```\n \n-#### `false`:\n-\n-This value has no influence beyond the effect of the [`reorder_extern_crates`](#reorder_extern_crates) option. Set [`reorder_extern_crates`](#reorder_extern_crates) to `false` if you do not want `extern crate` groups to be collapsed and ordered.\n-\n ## `reorder_modules`\n \n Reorder `mod` declarations alphabetically in group.\n@@ -1385,7 +1386,7 @@ Reorder `mod` declarations alphabetically in group.\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-#### `true`\n+#### `true` (default)\n \n ```rust\n mod a;"}, {"sha": "4fdb7d0f47d75545a1e6067c79be8de865777f65", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf9f17533636f580de9b5971d17d3d5fa6d2bc16/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf9f17533636f580de9b5971d17d3d5fa6d2bc16/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=bf9f17533636f580de9b5971d17d3d5fa6d2bc16", "patch": "@@ -41,8 +41,8 @@ use std::time::Duration;\n use syntax::ast;\n pub use syntax::codemap::FileName;\n use syntax::codemap::{CodeMap, FilePathMapping};\n-use syntax::errors::{DiagnosticBuilder, Handler};\n use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n+use syntax::errors::{DiagnosticBuilder, Handler};\n use syntax::parse::{self, ParseSess};\n \n use checkstyle::{output_footer, output_header};"}]}