{"sha": "e62ce98009fa4fc647220570ccb12927d3992ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MmNlOTgwMDlmYTRmYzY0NzIyMDU3MGNjYjEyOTI3ZDM5OTJlY2I=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-17T14:52:35Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-17T20:57:37Z"}, "message": "nll: improve allocations", "tree": {"sha": "e8734822fa180d58a74ac349253b13f9ad461368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8734822fa180d58a74ac349253b13f9ad461368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e62ce98009fa4fc647220570ccb12927d3992ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e62ce98009fa4fc647220570ccb12927d3992ecb", "html_url": "https://github.com/rust-lang/rust/commit/e62ce98009fa4fc647220570ccb12927d3992ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e62ce98009fa4fc647220570ccb12927d3992ecb/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dceaddfbe163e2d916c904b98923342730ba970", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dceaddfbe163e2d916c904b98923342730ba970", "html_url": "https://github.com/rust-lang/rust/commit/1dceaddfbe163e2d916c904b98923342730ba970"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "495e84528a3c3266d0eb8f9b34dba6158a00248a", "filename": "src/librustc_mir/borrow_check/nll/constraint_generation.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e62ce98009fa4fc647220570ccb12927d3992ecb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62ce98009fa4fc647220570ccb12927d3992ecb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraint_generation.rs?ref=e62ce98009fa4fc647220570ccb12927d3992ecb", "patch": "@@ -141,6 +141,7 @@ impl<'cg, 'cx, 'gcx, 'tcx> Visitor<'tcx> for ConstraintGeneration<'cg, 'cx, 'gcx\n         if let Some(all_facts) = self.all_facts {\n             if let Place::Local(temp) = place {\n                 if let Some(borrow_indices) = self.borrow_set.local_map.get(temp) {\n+                    all_facts.killed.reserve(borrow_indices.len());\n                     for &borrow_index in borrow_indices {\n                         let location_index = self.location_table.mid_index(location);\n                         all_facts.killed.push((borrow_index, location_index));\n@@ -164,7 +165,9 @@ impl<'cg, 'cx, 'gcx, 'tcx> Visitor<'tcx> for ConstraintGeneration<'cg, 'cx, 'gcx\n                 self.location_table.mid_index(location),\n             ));\n \n-            for successor_block in terminator.successors() {\n+            let successor_blocks = terminator.successors();\n+            all_facts.cfg_edge.reserve(successor_blocks.size_hint().0);\n+            for successor_block in successor_blocks {\n                 all_facts.cfg_edge.push((\n                     self.location_table.mid_index(location),\n                     self.location_table"}, {"sha": "a0ccfb8dc4c49702115fdbcf2ee7979f59c248d9", "filename": "src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e62ce98009fa4fc647220570ccb12927d3992ecb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62ce98009fa4fc647220570ccb12927d3992ecb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs?ref=e62ce98009fa4fc647220570ccb12927d3992ecb", "patch": "@@ -279,9 +279,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                         pending_locations.push(target.start_location());\n                     },\n                     TerminatorKind::SwitchInt { ref targets, .. } => {\n-                        for target in targets {\n-                            pending_locations.push(target.start_location());\n-                        }\n+                        pending_locations.extend(\n+                            targets.into_iter().map(|target| target.start_location()));\n                     },\n                     TerminatorKind::Drop { target, unwind, .. } |\n                     TerminatorKind::DropAndReplace { target, unwind, .. } |\n@@ -303,9 +302,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     },\n                     TerminatorKind::FalseEdges { real_target, ref imaginary_targets, .. } => {\n                         pending_locations.push(real_target.start_location());\n-                        for target in imaginary_targets {\n-                            pending_locations.push(target.start_location());\n-                        }\n+                        pending_locations.extend(\n+                            imaginary_targets.into_iter().map(|target| target.start_location()));\n                     },\n                     _ => {},\n                 }"}, {"sha": "8d3cb7273181fdc1b68ab9473cbf853796770c7b", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e62ce98009fa4fc647220570ccb12927d3992ecb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62ce98009fa4fc647220570ccb12927d3992ecb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=e62ce98009fa4fc647220570ccb12927d3992ecb", "patch": "@@ -462,9 +462,8 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         argument_hir_ty: &hir::Ty,\n         counter: &mut usize,\n     ) -> Option<RegionName> {\n-        let search_stack: &mut Vec<(Ty<'tcx>, &hir::Ty)> = &mut Vec::new();\n-\n-        search_stack.push((argument_ty, argument_hir_ty));\n+        let search_stack: &mut Vec<(Ty<'tcx>, &hir::Ty)> =\n+            &mut vec![(argument_ty, argument_hir_ty)];\n \n         while let Some((ty, hir_ty)) = search_stack.pop() {\n             match (&ty.sty, &hir_ty.node) {"}]}