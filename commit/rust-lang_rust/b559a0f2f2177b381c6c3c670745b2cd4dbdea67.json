{"sha": "b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NTlhMGYyZjIxNzdiMzgxYzZjM2M2NzA3NDViMmNkNGRiZGVhNjc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-07-22T04:29:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-22T04:29:36Z"}, "message": "Merge pull request #1808 from topecongiro/issue-831\n\nAllow block-like rhs expression to stay on the same line with lhs", "tree": {"sha": "b299b35609fb5112ce3faa2003e52968b4031883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b299b35609fb5112ce3faa2003e52968b4031883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "html_url": "https://github.com/rust-lang/rust/commit/b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83b0feca0bc19e508b9acf21afcd601930bf05b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/83b0feca0bc19e508b9acf21afcd601930bf05b7", "html_url": "https://github.com/rust-lang/rust/commit/83b0feca0bc19e508b9acf21afcd601930bf05b7"}, {"sha": "68c6fe70fdf441b46d5b88bc344e6d68f8f0068d", "url": "https://api.github.com/repos/rust-lang/rust/commits/68c6fe70fdf441b46d5b88bc344e6d68f8f0068d", "html_url": "https://github.com/rust-lang/rust/commit/68c6fe70fdf441b46d5b88bc344e6d68f8f0068d"}], "stats": {"total": 90, "additions": 53, "deletions": 37}, "files": [{"sha": "c1d5e8ccc39fa7c25cb377ad433efa1aed195d02", "filename": "src/expr.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "patch": "@@ -377,9 +377,9 @@ where\n     // Note that this is non-conservative, but its just to see if it's even\n     // worth trying to put everything on one line.\n     let rhs_shape = try_opt!(shape.sub_width(suffix.len()));\n-    let rhs_result = rhs.rewrite(context, rhs_shape);\n+    let rhs_orig_result = rhs.rewrite(context, rhs_shape);\n \n-    if let Some(rhs_result) = rhs_result {\n+    if let Some(ref rhs_result) = rhs_orig_result {\n         // This is needed in case of line break not caused by a\n         // shortage of space, but by end-of-line comments, for example.\n         if !rhs_result.contains('\\n') {\n@@ -419,6 +419,7 @@ where\n     // We have to use multiple lines.\n \n     // Re-evaluate the rhs because we have more space now:\n+    let sep = if infix.ends_with(' ') { \" \" } else { \"\" };\n     let infix = infix.trim_right();\n     let rhs_shape = match context.config.control_style() {\n         Style::Legacy => {\n@@ -439,12 +440,24 @@ where\n         width: try_opt!(context.config.max_width().checked_sub(lhs_overhead)),\n         ..shape\n     };\n-    let lhs_result = try_opt!(lhs.rewrite(context, lhs_shape));\n+    let lhs_result = try_opt!(\n+        lhs.rewrite(context, lhs_shape)\n+            .map(|lhs_str| format!(\"{}{}{}\", prefix, lhs_str, infix))\n+    );\n+    if let Some(ref rhs_str) = rhs_orig_result {\n+        if rhs_str.lines().count() <= rhs_result.lines().count() &&\n+            rhs_str\n+                .lines()\n+                .next()\n+                .map_or(false, |first_line| first_line.ends_with('{')) &&\n+            last_line_width(&lhs_result) + sep.len() + first_line_width(rhs_str) <= shape.width\n+        {\n+            return Some(format!(\"{}{}{}{}\", lhs_result, sep, rhs_str, suffix));\n+        }\n+    }\n     Some(format!(\n-        \"{}{}{}\\n{}{}{}\",\n-        prefix,\n+        \"{}\\n{}{}{}\",\n         lhs_result,\n-        infix,\n         rhs_shape.indent.to_string(context.config),\n         rhs_result,\n         suffix\n@@ -2886,12 +2899,11 @@ pub fn rewrite_assign_rhs<S: Into<String>>(\n     shape: Shape,\n ) -> Option<String> {\n     let lhs = lhs.into();\n-    let last_line_width = last_line_width(&lhs) -\n-        if lhs.contains('\\n') {\n-            shape.indent.width()\n-        } else {\n-            0\n-        };\n+    let last_line_width = last_line_width(&lhs) - if lhs.contains('\\n') {\n+        shape.indent.width()\n+    } else {\n+        0\n+    };\n     // 1 = space between operator and rhs.\n     let orig_shape = try_opt!(shape.offset_left(last_line_width + 1));\n     let rhs = try_opt!(choose_rhs("}, {"sha": "087b5615f02891efa064c8d9e9e213c9676f6c8c", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "patch": "@@ -829,12 +829,11 @@ fn rewrite_trait_ref(\n     result_len: usize,\n ) -> Option<String> {\n     // 1 = space between generics and trait_ref\n-    let used_space = 1 + polarity_str.len() +\n-        if generics_str.contains('\\n') {\n-            last_line_width(&generics_str)\n-        } else {\n-            result_len + generics_str.len()\n-        };\n+    let used_space = 1 + polarity_str.len() + if generics_str.contains('\\n') {\n+        last_line_width(&generics_str)\n+    } else {\n+        result_len + generics_str.len()\n+    };\n     let shape = Shape::indented(offset + used_space, context.config);\n     if let Some(trait_ref_str) = trait_ref.rewrite(context, shape) {\n         if !(retry && trait_ref_str.contains('\\n')) {"}, {"sha": "2480213359359a4acf59d7e19ab8896f8bd7db47", "filename": "src/visitor.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "patch": "@@ -638,14 +638,12 @@ impl<'a> FmtVisitor<'a> {\n                 let use_item_length = items_left\n                     .iter()\n                     .take_while(|ppi| {\n-                        is_use_item(&***ppi) &&\n-                            (!reorder_imports_in_group ||\n-                                {\n-                                    let current = self.codemap.lookup_line_range(item_bound(&ppi));\n-                                    let in_same_group = current.lo < last.hi + 2;\n-                                    last = current;\n-                                    in_same_group\n-                                })\n+                        is_use_item(&***ppi) && (!reorder_imports_in_group || {\n+                            let current = self.codemap.lookup_line_range(item_bound(&ppi));\n+                            let in_same_group = current.lo < last.hi + 2;\n+                            last = current;\n+                            in_same_group\n+                        })\n                     })\n                     .count();\n                 let (use_items, rest) = items_left.split_at(use_item_length);"}, {"sha": "c2aecd26105ef6135d2f5cd0440de1c3e6c497b9", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "patch": "@@ -118,12 +118,11 @@ fn floaters() {\n     })\n     .quux();\n \n-    a +\n-        match x {\n-            true => \"yay!\",\n-            false => \"boo!\",\n-        }\n-        .bar()\n+    a + match x {\n+        true => \"yay!\",\n+        false => \"boo!\",\n+    }\n+    .bar()\n }\n \n fn is_replaced_content() -> bool {"}, {"sha": "4955817da5c9c3f9480e597b794586759dfd7487", "filename": "tests/target/chains.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "patch": "@@ -114,11 +114,10 @@ fn floaters() {\n     })\n         .quux();\n \n-    a +\n-        match x {\n-            true => \"yay!\",\n-            false => \"boo!\",\n-        }.bar()\n+    a + match x {\n+        true => \"yay!\",\n+        false => \"boo!\",\n+    }.bar()\n }\n \n fn is_replaced_content() -> bool {"}, {"sha": "1d6327c21580621fae2d95235e7ca434691390ca", "filename": "tests/target/issue-831.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/tests%2Ftarget%2Fissue-831.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b559a0f2f2177b381c6c3c670745b2cd4dbdea67/tests%2Ftarget%2Fissue-831.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-831.rs?ref=b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    let y = a.iter().any(|x| {\n+        println!(\"a\");\n+    }) || b.iter().any(|x| {\n+        println!(\"b\");\n+    }) || c.iter().any(|x| {\n+        println!(\"c\");\n+    });\n+}"}]}