{"sha": "0416f122aae296e7fa78cff64b5df683be1dfc2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MTZmMTIyYWFlMjk2ZTdmYTc4Y2ZmNjRiNWRmNjgzYmUxZGZjMmY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-16T12:03:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-16T12:03:29Z"}, "message": "Error on non-constant simd_insert/simd_extract index", "tree": {"sha": "4c805f80611c3a3b120e7c5a8ab72b2e5122da02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c805f80611c3a3b120e7c5a8ab72b2e5122da02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0416f122aae296e7fa78cff64b5df683be1dfc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0416f122aae296e7fa78cff64b5df683be1dfc2f", "html_url": "https://github.com/rust-lang/rust/commit/0416f122aae296e7fa78cff64b5df683be1dfc2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0416f122aae296e7fa78cff64b5df683be1dfc2f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49710287756b85edb5a0d82a210ab26973aec746", "url": "https://api.github.com/repos/rust-lang/rust/commits/49710287756b85edb5a0d82a210ab26973aec746", "html_url": "https://github.com/rust-lang/rust/commit/49710287756b85edb5a0d82a210ab26973aec746"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "b4269f4fafa0b47fbd98672d9eb5eefa23a402f4", "filename": "src/intrinsics/simd.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0416f122aae296e7fa78cff64b5df683be1dfc2f/src%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0416f122aae296e7fa78cff64b5df683be1dfc2f/src%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fsimd.rs?ref=0416f122aae296e7fa78cff64b5df683be1dfc2f", "patch": "@@ -121,12 +121,10 @@ pub(super) fn codegen_simd_intrinsic_call<'tcx>(\n             let idx_const = if let Some(idx_const) = crate::constant::mir_operand_get_const_val(fx, idx) {\n                 idx_const\n             } else {\n-                fx.tcx.sess.span_warn(\n-                    fx.mir.span,\n-                    \"`#[rustc_arg_required_const(..)]` is not yet supported. Calling this function will panic.\",\n+                fx.tcx.sess.span_fatal(\n+                    span,\n+                    \"Index argument for `simd_insert` is not a constant\",\n                 );\n-                crate::trap::trap_unimplemented(fx, \"`#[rustc_arg_required_const(..)]` is not yet supported.\");\n-                return;\n             };\n \n             let idx = idx_const.val.try_to_bits(Size::from_bytes(4 /* u32*/)).expect(&format!(\"kind not scalar: {:?}\", idx_const));\n@@ -145,13 +143,10 @@ pub(super) fn codegen_simd_intrinsic_call<'tcx>(\n             let idx_const = if let Some(idx_const) = crate::constant::mir_operand_get_const_val(fx, idx) {\n                 idx_const\n             } else {\n-                fx.tcx.sess.span_warn(\n-                    fx.mir.span,\n-                    \"`#[rustc_arg_required_const(..)]` is not yet supported. Calling this function will panic.\",\n+                fx.tcx.sess.span_fatal(\n+                    span,\n+                    \"Index argument for `simd_extract` is not a constant\",\n                 );\n-                let val = crate::trap::trap_unimplemented_ret_value(fx, ret.layout(), \"`#[rustc_arg_required_const(..)]` is not yet supported.\");\n-                ret.write_cvalue(fx, val);\n-                return;\n             };\n \n             let idx = idx_const.val.try_to_bits(Size::from_bytes(4 /* u32*/)).expect(&format!(\"kind not scalar: {:?}\", idx_const));"}]}