{"sha": "b060d8446767c8071197bbd49e700867722b564e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNjBkODQ0Njc2N2M4MDcxMTk3YmJkNDllNzAwODY3NzIyYjU2NGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-17T18:44:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-17T18:44:59Z"}, "message": "Merge #2029\n\n2029: Adds config option for cargo-watch `--ignore` flag r=matklad a=jrvidal\n\nI presume this is a nice-to-have to avoid spurious watching.\r\n\r\n* I don't know much about Windows, so I'm not sure if the extra args need some special escaping.\r\n* I suppose we could reuse and/or integrate with `rust-analyzer.excludeGlobs`. I find this simpler, but I'm open to suggestions.\n\nCo-authored-by: Roberto Vidal <vidal.roberto.j@gmail.com>", "tree": {"sha": "b55fba950d29f6bd041f26e78e3e56cefb649c31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55fba950d29f6bd041f26e78e3e56cefb649c31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b060d8446767c8071197bbd49e700867722b564e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdqLarCRBK7hj4Ov3rIwAAdHIIACrB4rcOAe+0kY3VDHkM/nZb\nTChN+/x//priP12gihvFha7YRWpN45utID40pY6nyy6m8jsr9nyxGvWoaw17IEld\nXq3ploFvB1pYMeLVu/wmlQ5PIiVai0zHR5BOqr3cIiE9kLa8abwHVSf2FVzhBmTc\nmVT+M5RKkbo4siGzzTOok/6viJr3iBCoAyoOiVcj18o3v3+EHV2yUuFuux84uVI6\nXmB+8Xgqz7dOIXdAdaOI0+HUIBwKuFoYhcIioaXTXTwDII8NPjxKuEN1l0ZP9kOM\nJg8U0I5tuFyvQY8zDZz+nCTAtCJrWazs2FSRjE8MNjHY9BZrMs0X3F7P5Oyg9FU=\n=bT3G\n-----END PGP SIGNATURE-----\n", "payload": "tree b55fba950d29f6bd041f26e78e3e56cefb649c31\nparent e8a7a7b19aab195d2b37a0b13abca4e006e9bbd5\nparent f4d50de2758b38208745d9594ccbcf0227d49d5b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1571337899 +0000\ncommitter GitHub <noreply@github.com> 1571337899 +0000\n\nMerge #2029\n\n2029: Adds config option for cargo-watch `--ignore` flag r=matklad a=jrvidal\n\nI presume this is a nice-to-have to avoid spurious watching.\r\n\r\n* I don't know much about Windows, so I'm not sure if the extra args need some special escaping.\r\n* I suppose we could reuse and/or integrate with `rust-analyzer.excludeGlobs`. I find this simpler, but I'm open to suggestions.\n\nCo-authored-by: Roberto Vidal <vidal.roberto.j@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b060d8446767c8071197bbd49e700867722b564e", "html_url": "https://github.com/rust-lang/rust/commit/b060d8446767c8071197bbd49e700867722b564e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b060d8446767c8071197bbd49e700867722b564e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a7a7b19aab195d2b37a0b13abca4e006e9bbd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a7a7b19aab195d2b37a0b13abca4e006e9bbd5", "html_url": "https://github.com/rust-lang/rust/commit/e8a7a7b19aab195d2b37a0b13abca4e006e9bbd5"}, {"sha": "f4d50de2758b38208745d9594ccbcf0227d49d5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4d50de2758b38208745d9594ccbcf0227d49d5b", "html_url": "https://github.com/rust-lang/rust/commit/f4d50de2758b38208745d9594ccbcf0227d49d5b"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "5b7502132f865c16ba1d9557dd9d6b13981403cc", "filename": "docs/user/README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b060d8446767c8071197bbd49e700867722b564e/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/b060d8446767c8071197bbd49e700867722b564e/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=b060d8446767c8071197bbd49e700867722b564e", "patch": "@@ -79,6 +79,7 @@ See [microsoft/vscode#72308](https://github.com/microsoft/vscode/issues/72308) f\n * `rust-analyzer.cargo-watch.command`: `cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )\n * `rust-analyzer.cargo-watch.arguments`: cargo-watch check arguments.\n   (e.g: `--features=\"shumway,pdf\"` will run as `cargo watch -x \"check --features=\"shumway,pdf\"\"` )\n+* `rust-analyzer.cargo-watch.ignore`: list of patterns for cargo-watch to ignore (will be passed as `--ignore`)\n * `rust-analyzer.trace.server`: enables internal logging\n * `rust-analyzer.trace.cargo-watch`: enables cargo-watch logging\n * `RUST_SRC_PATH`: environment variable that overwrites the sysroot"}, {"sha": "5ae0501108b0aa2ba5f5e20acc63532a57b61677", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b060d8446767c8071197bbd49e700867722b564e/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/b060d8446767c8071197bbd49e700867722b564e/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=b060d8446767c8071197bbd49e700867722b564e", "patch": "@@ -224,6 +224,11 @@\n                     \"description\": \"`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )\",\n                     \"default\": \"check\"\n                 },\n+                \"rust-analyzer.cargo-watch.ignore\": {\n+                    \"type\": \"array\",\n+                    \"description\": \"A list of patterns for cargo-watch to ignore (will be passed as `--ignore`)\",\n+                    \"default\": []\n+                },\n                 \"rust-analyzer.showWorkspaceLoadedNotification\": {\n                     \"type\": \"boolean\",\n                     \"description\": \"Controls whether rust-analyzer displays a notification when a project is loaded.\","}, {"sha": "59d4ba97a2390f9cd98b8e7f0708f87774c56024", "filename": "editors/code/src/commands/cargo_watch.ts", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b060d8446767c8071197bbd49e700867722b564e/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b060d8446767c8071197bbd49e700867722b564e/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts?ref=b060d8446767c8071197bbd49e700867722b564e", "patch": "@@ -93,10 +93,15 @@ export class CargoWatchProvider implements vscode.Disposable {\n             args = '\"' + args + '\"';\n         }\n \n+        const ignoreFlags = Server.config.cargoWatchOptions.ignore.reduce(\n+            (flags, pattern) => [...flags, '--ignore', pattern],\n+            [] as string[]\n+        );\n+\n         // Start the cargo watch with json message\n         this.cargoProcess = child_process.spawn(\n             'cargo',\n-            ['watch', '-x', args],\n+            ['watch', '-x', args, ...ignoreFlags],\n             {\n                 stdio: ['ignore', 'pipe', 'pipe'],\n                 cwd: vscode.workspace.rootPath,"}, {"sha": "49bdf7d729db5a80e676ca1f5bc6d272cb6b352a", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b060d8446767c8071197bbd49e700867722b564e/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b060d8446767c8071197bbd49e700867722b564e/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=b060d8446767c8071197bbd49e700867722b564e", "patch": "@@ -12,6 +12,7 @@ export interface CargoWatchOptions {\n     arguments: string;\n     command: string;\n     trace: CargoWatchTraceOptions;\n+    ignore: string[];\n }\n \n export class Config {\n@@ -29,7 +30,8 @@ export class Config {\n         enableOnStartup: 'ask',\n         trace: 'off',\n         arguments: '',\n-        command: ''\n+        command: '',\n+        ignore: []\n     };\n \n     private prevEnhancedTyping: null | boolean = null;\n@@ -124,6 +126,13 @@ export class Config {\n             );\n         }\n \n+        if (config.has('cargo-watch.ignore')) {\n+            this.cargoWatchOptions.ignore = config.get<string[]>(\n+                'cargo-watch.ignore',\n+                []\n+            );\n+        }\n+\n         if (config.has('lruCapacity')) {\n             this.lruCapacity = config.get('lruCapacity') as number;\n         }"}]}