{"sha": "b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "node_id": "C_kwDOAAsO6NoAKGI3MzBiYzlmMjBkOWY4ODk3MmFkMTNjY2RmODhiNTZkODE2NGFlYjM", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-06T01:47:29Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-06T10:09:50Z"}, "message": "fix miri-opt tests", "tree": {"sha": "31cec2ae1c67e41e7adcd16ee9a76d71365b13b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31cec2ae1c67e41e7adcd16ee9a76d71365b13b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "html_url": "https://github.com/rust-lang/rust/commit/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0541b4e03469ea5d3f9ce131a270d49e4a7363ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0541b4e03469ea5d3f9ce131a270d49e4a7363ff", "html_url": "https://github.com/rust-lang/rust/commit/0541b4e03469ea5d3f9ce131a270d49e4a7363ff"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "95afbbe01dbb269cc12e57060f0758c2b3f8b83f", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "patch": "@@ -577,16 +577,12 @@ impl MissingDoc {\n         let attrs = cx.tcx.hir().attrs(cx.tcx.hir().local_def_id_to_hir_id(def_id));\n         let has_doc = attrs.iter().any(has_doc);\n         if !has_doc {\n-            cx.struct_span_lint(\n-                MISSING_DOCS,\n-                cx.tcx.sess.source_map().guess_head_span(sp),\n-                |lint| {\n-                    lint.build(fluent::lint::builtin_missing_doc)\n-                        .set_arg(\"article\", article)\n-                        .set_arg(\"desc\", desc)\n-                        .emit();\n-                },\n-            );\n+            cx.struct_span_lint(MISSING_DOCS, cx.tcx.def_span(def_id), |lint| {\n+                lint.build(fluent::lint::builtin_missing_doc)\n+                    .set_arg(\"article\", article)\n+                    .set_arg(\"desc\", desc)\n+                    .emit();\n+            });\n         }\n     }\n }"}, {"sha": "028281ba4501c3b1d1ec03192a6afa6a98b442da", "filename": "src/test/mir-opt/unusual_item_types.Test-X-{constructor#0}.mir_map.0.32bit.mir", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/src%2Ftest%2Fmir-opt%2Funusual_item_types.Test-X-%7Bconstructor%230%7D.mir_map.0.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/src%2Ftest%2Fmir-opt%2Funusual_item_types.Test-X-%7Bconstructor%230%7D.mir_map.0.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funusual_item_types.Test-X-%7Bconstructor%230%7D.mir_map.0.32bit.mir?ref=b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "patch": "@@ -1,12 +1,12 @@\n // MIR for `Test::X` 0 mir_map\n \n fn Test::X(_1: usize) -> Test {\n-    let mut _0: Test;                    // return place in scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n+    let mut _0: Test;                    // return place in scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n \n     bb0: {\n-        Deinit(_0);                      // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n-        ((_0 as X).0: usize) = move _1;  // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n-        discriminant(_0) = 0;            // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n-        return;                          // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n+        Deinit(_0);                      // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n+        ((_0 as X).0: usize) = move _1;  // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n+        discriminant(_0) = 0;            // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n+        return;                          // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n     }\n }"}, {"sha": "028281ba4501c3b1d1ec03192a6afa6a98b442da", "filename": "src/test/mir-opt/unusual_item_types.Test-X-{constructor#0}.mir_map.0.64bit.mir", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/src%2Ftest%2Fmir-opt%2Funusual_item_types.Test-X-%7Bconstructor%230%7D.mir_map.0.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/src%2Ftest%2Fmir-opt%2Funusual_item_types.Test-X-%7Bconstructor%230%7D.mir_map.0.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funusual_item_types.Test-X-%7Bconstructor%230%7D.mir_map.0.64bit.mir?ref=b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "patch": "@@ -1,12 +1,12 @@\n // MIR for `Test::X` 0 mir_map\n \n fn Test::X(_1: usize) -> Test {\n-    let mut _0: Test;                    // return place in scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n+    let mut _0: Test;                    // return place in scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n \n     bb0: {\n-        Deinit(_0);                      // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n-        ((_0 as X).0: usize) = move _1;  // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n-        discriminant(_0) = 0;            // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n-        return;                          // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:13\n+        Deinit(_0);                      // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n+        ((_0 as X).0: usize) = move _1;  // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n+        discriminant(_0) = 0;            // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n+        return;                          // scope 0 at $DIR/unusual-item-types.rs:16:5: 16:6\n     }\n }"}, {"sha": "a1e37e7317b2e4b3b4a1578bc7e69dd71923cae2", "filename": "src/tools/clippy/tests/ui/crashes/ice-6252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b730bc9f20d9f88972ad13ccdf88b56d8164aeb3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6252.stderr?ref=b730bc9f20d9f88972ad13ccdf88b56d8164aeb3", "patch": "@@ -28,7 +28,7 @@ LL |     const VAL: T;\n    |     ------------ `VAL` from trait\n ...\n LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `VAL` in implementation\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `VAL` in implementation\n \n error: constant expression depends on a generic parameter\n   --> $DIR/ice-6252.rs:13:9"}]}