{"sha": "a2cb8a49498c9eab1cf5617135e7de0b3013843b", "node_id": "C_kwDOAAsO6NoAKGEyY2I4YTQ5NDk4YzllYWIxY2Y1NjE3MTM1ZTdkZTBiMzAxMzg0M2I", "commit": {"author": {"name": "Sikkema, Isaac", "email": "sikkemaic@ornl.gov", "date": "2022-09-20T14:06:50Z"}, "committer": {"name": "Sikkema, Isaac", "email": "sikkemaic@ornl.gov", "date": "2022-09-20T14:06:50Z"}, "message": "add comment explaining read permissions", "tree": {"sha": "8dd761f6a973a496a0b6192ed261eb3ddf52491c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dd761f6a973a496a0b6192ed261eb3ddf52491c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2cb8a49498c9eab1cf5617135e7de0b3013843b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cb8a49498c9eab1cf5617135e7de0b3013843b", "html_url": "https://github.com/rust-lang/rust/commit/a2cb8a49498c9eab1cf5617135e7de0b3013843b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2cb8a49498c9eab1cf5617135e7de0b3013843b/comments", "author": null, "committer": null, "parents": [{"sha": "06139e57d5c0afb1e7e8d7815d742cd2da7d5dca", "url": "https://api.github.com/repos/rust-lang/rust/commits/06139e57d5c0afb1e7e8d7815d742cd2da7d5dca", "html_url": "https://github.com/rust-lang/rust/commit/06139e57d5c0afb1e7e8d7815d742cd2da7d5dca"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "f35cc08f4fbfe61eb663c4f53bfd0b0ff8021424", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2cb8a49498c9eab1cf5617135e7de0b3013843b/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2cb8a49498c9eab1cf5617135e7de0b3013843b/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=a2cb8a49498c9eab1cf5617135e7de0b3013843b", "patch": "@@ -193,6 +193,8 @@ impl FileEncoder {\n         // shaves an instruction off those code paths (on x86 at least).\n         assert!(capacity <= usize::MAX - max_leb128_len());\n \n+        // Create the file for reading and writing, because some encoders do both\n+        // (e.g. the metadata encoder when -Zmeta-stats is enabled)\n         let file = File::options().read(true).write(true).create(true).truncate(true).open(path)?;\n \n         Ok(FileEncoder {"}]}