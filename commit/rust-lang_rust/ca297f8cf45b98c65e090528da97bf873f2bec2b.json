{"sha": "ca297f8cf45b98c65e090528da97bf873f2bec2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMjk3ZjhjZjQ1Yjk4YzY1ZTA5MDUyOGRhOTdiZjg3M2YyYmVjMmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-24T23:10:10Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-04T18:01:42Z"}, "message": "DefId{Map,Set} -> rustc::hir::def_id", "tree": {"sha": "b4458f067488e17b25cef73b43fb007ef5b3e154", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4458f067488e17b25cef73b43fb007ef5b3e154"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca297f8cf45b98c65e090528da97bf873f2bec2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca297f8cf45b98c65e090528da97bf873f2bec2b", "html_url": "https://github.com/rust-lang/rust/commit/ca297f8cf45b98c65e090528da97bf873f2bec2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca297f8cf45b98c65e090528da97bf873f2bec2b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e15bb6546955e9d2369abe4adad6acc0bbecf6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e15bb6546955e9d2369abe4adad6acc0bbecf6e", "html_url": "https://github.com/rust-lang/rust/commit/8e15bb6546955e9d2369abe4adad6acc0bbecf6e"}], "stats": {"total": 80, "additions": 32, "deletions": 48}, "files": [{"sha": "0ec8863fa69655fe6a6306a4196e57c37e4b759c", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -41,7 +41,7 @@ macro_rules! arena_types {\n                 rustc::hir::def_id::DefId,\n                 rustc::ty::subst::SubstsRef<$tcx>\n             )>,\n-            [few, decode] mir_keys: rustc::util::nodemap::DefIdSet,\n+            [few, decode] mir_keys: rustc::hir::def_id::DefIdSet,\n             [decode] specialization_graph: rustc::traits::specialization_graph::Graph,\n             [] region_scope_tree: rustc::middle::region::ScopeTree,\n             [] item_local_set: rustc::util::nodemap::ItemLocalSet,\n@@ -87,7 +87,7 @@ macro_rules! arena_types {\n                 >,\n             [few] crate_inherent_impls: rustc::ty::CrateInherentImpls,\n             [few] upstream_monomorphizations:\n-                rustc::util::nodemap::DefIdMap<\n+                rustc::hir::def_id::DefIdMap<\n                     rustc_data_structures::fx::FxHashMap<\n                         rustc::ty::subst::SubstsRef<'tcx>,\n                         rustc::hir::def_id::CrateNum\n@@ -113,10 +113,10 @@ macro_rules! arena_types {\n             >,\n             [few] get_lib_features: rustc::middle::lib_features::LibFeatures,\n             [few] defined_lib_features: rustc::middle::lang_items::LanguageItems,\n-            [few] visible_parent_map: rustc::util::nodemap::DefIdMap<rustc::hir::def_id::DefId>,\n+            [few] visible_parent_map: rustc::hir::def_id::DefIdMap<rustc::hir::def_id::DefId>,\n             [few] foreign_module: rustc::middle::cstore::ForeignModule,\n             [few] foreign_modules: Vec<rustc::middle::cstore::ForeignModule>,\n-            [few] reachable_non_generics: rustc::util::nodemap::DefIdMap<\n+            [few] reachable_non_generics: rustc::hir::def_id::DefIdMap<\n                 rustc::middle::exported_symbols::SymbolExportLevel\n             >,\n             [few] crate_variances: rustc::ty::CrateVariancesMap<'tcx>,"}, {"sha": "ebe9fc82f1b4107a9a7cb411cb745c6e65f65ad3", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,9 +1,8 @@\n use self::Namespace::*;\n \n use crate::hir;\n-use crate::hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use crate::hir::def_id::{DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use crate::ty;\n-use crate::util::nodemap::DefIdMap;\n \n use rustc_macros::HashStable;\n use rustc_span::hygiene::MacroKind;"}, {"sha": "9c2046a45547c44dc9b5ea83950b74ad2bb188d3", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -157,6 +157,8 @@ impl DefId {\n impl rustc_serialize::UseSpecializedEncodable for DefId {}\n impl rustc_serialize::UseSpecializedDecodable for DefId {}\n \n+rustc_data_structures::define_id_collections!(DefIdMap, DefIdSet, DefId);\n+\n /// A LocalDefId is equivalent to a DefId with `krate == LOCAL_CRATE`. Since\n /// we encode this information in the type, we can ensure at compile time that\n /// no DefIds from upstream crates get thrown into the mix. There are quite a"}, {"sha": "638ab01baac70d11a76982db493d60c76137b64f", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,5 +1,5 @@\n use crate::hir;\n-use crate::hir::def_id::DefId;\n+use crate::hir::def_id::{DefId, DefIdMap};\n use crate::hir::Node;\n use crate::infer::outlives::free_region_map::FreeRegionRelations;\n use crate::infer::{self, InferCtxt, InferOk, TypeVariableOrigin, TypeVariableOriginKind};\n@@ -8,7 +8,6 @@ use crate::traits::{self, PredicateObligation};\n use crate::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder, TypeVisitor};\n use crate::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n use crate::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n-use crate::util::nodemap::DefIdMap;\n use errors::DiagnosticBuilder;\n use rustc::session::config::nightly_options;\n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "c4da4d75f4de2056ef7315a6863a5874ddaa651e", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -2,8 +2,8 @@\n //! outside their scopes. This pass will also generate a set of exported items\n //! which are available for use externally when compiled as a library.\n \n+use crate::hir::def_id::DefIdSet;\n use crate::hir::HirId;\n-use crate::util::nodemap::DefIdSet;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_macros::HashStable;"}, {"sha": "200c2188ac360d9b05c9489e6a13ede6a84ef12f", "filename": "src/librustc/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,11 +1,10 @@\n use super::OverlapError;\n \n-use crate::hir::def_id::DefId;\n+use crate::hir::def_id::{DefId, DefIdMap};\n use crate::ich::{self, StableHashingContext};\n use crate::traits;\n use crate::ty::fast_reject::{self, SimplifiedType};\n use crate::ty::{self, TyCtxt, TypeFoldable};\n-use crate::util::nodemap::DefIdMap;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use syntax::ast::Ident;"}, {"sha": "5bac49ca492ecca45e34cac810f9447727c55d05", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -4,7 +4,7 @@ use crate::arena::Arena;\n use crate::dep_graph::DepGraph;\n use crate::dep_graph::{self, DepConstructor, DepNode};\n use crate::hir::def::{DefKind, Export, Res};\n-use crate::hir::def_id::{CrateNum, DefId, DefIndex, LOCAL_CRATE};\n+use crate::hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, DefIndex, LOCAL_CRATE};\n use crate::hir::map as hir_map;\n use crate::hir::map::DefPathHash;\n use crate::hir::{self, HirId, ItemKind, ItemLocalId, Node, TraitCandidate};\n@@ -46,7 +46,7 @@ use crate::ty::{ExistentialPredicate, InferTy, ParamTy, PolyFnSig, Predicate, Pr\n use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n use crate::util::common::ErrorReported;\n-use crate::util::nodemap::{DefIdMap, DefIdSet, ItemLocalMap, ItemLocalSet};\n+use crate::util::nodemap::{ItemLocalMap, ItemLocalSet};\n \n use arena::SyncDroplessArena;\n use errors::DiagnosticBuilder;"}, {"sha": "9f2df16f376af6c32fbb11568d1c18008cda1f95", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -7,7 +7,7 @@ pub use self::IntVarValue::*;\n pub use self::Variance::*;\n \n use crate::hir::def::{CtorKind, CtorOf, DefKind, ExportMap, Res};\n-use crate::hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use crate::hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use crate::hir::Node;\n use crate::hir::{map as hir_map, GlobMap, TraitMap};\n use crate::ich::Fingerprint;\n@@ -28,7 +28,6 @@ use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n use crate::ty::walk::TypeWalker;\n use crate::util::captures::Captures;\n-use crate::util::nodemap::DefIdMap;\n use arena::SyncDroplessArena;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::svh::Svh;"}, {"sha": "f8cad3437b4bc27e5c9bcc0f086e3e06a72ca3ab", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,6 +1,6 @@\n use crate::dep_graph::{self, DepNode};\n use crate::hir::def::{DefKind, Export};\n-use crate::hir::def_id::{CrateNum, DefId, DefIndex};\n+use crate::hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, DefIndex};\n use crate::hir::{self, ItemLocalId, TraitCandidate};\n use crate::infer::canonical::{self, Canonical};\n use crate::lint;\n@@ -37,7 +37,7 @@ use crate::ty::subst::SubstsRef;\n use crate::ty::util::NeedsDrop;\n use crate::ty::{self, AdtSizedConstraint, CrateInherentImpls, ParamEnvAnd, Ty, TyCtxt};\n use crate::util::common::ErrorReported;\n-use crate::util::nodemap::{DefIdMap, DefIdSet, HirIdSet};\n+use crate::util::nodemap::HirIdSet;\n use rustc_data_structures::profiling::ProfileCategory::*;\n \n use rustc_data_structures::fingerprint::Fingerprint;"}, {"sha": "a7d79b9f3414cc4ca9ae639c4db9ac9d86a8b793", "filename": "src/librustc/util/nodemap.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Futil%2Fnodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc%2Futil%2Fnodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fnodemap.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,10 +1,8 @@\n //! An efficient hash map for `NodeId`s.\n \n-use crate::hir::def_id::DefId;\n use crate::hir::{HirId, ItemLocalId};\n \n use rustc_data_structures::define_id_collections;\n \n-define_id_collections!(DefIdMap, DefIdSet, DefId);\n define_id_collections!(HirIdMap, HirIdSet, HirId);\n define_id_collections!(ItemLocalMap, ItemLocalSet, ItemLocalId);"}, {"sha": "5694bedb199377fdf6399915fe3aac7eae5757a1", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -37,7 +37,7 @@\n use rustc::arena::Arena;\n use rustc::dep_graph::DepGraph;\n use rustc::hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};\n-use rustc::hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n+use rustc::hir::def_id::{DefId, DefIdMap, DefIndex, CRATE_DEF_INDEX};\n use rustc::hir::map::{DefKey, DefPathData, Definitions};\n use rustc::hir::{self, ConstArg, GenericArg, ParamName};\n use rustc::lint;\n@@ -47,7 +47,6 @@ use rustc::session::config::nightly_options;\n use rustc::session::Session;\n use rustc::util::captures::Captures;\n use rustc::util::common::FN_OUTPUT_NAME;\n-use rustc::util::nodemap::DefIdMap;\n use rustc::{bug, span_bug};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "0edfd3457746ddd206506545f603c843c5f28271", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -13,7 +13,7 @@ use crate::llvm;\n use crate::llvm::debuginfo::{\n     DIArray, DIBuilder, DIFile, DIFlags, DILexicalBlock, DISPFlags, DIScope, DIType,\n };\n-use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdMap, LOCAL_CRATE};\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::ty::subst::{GenericArgKind, SubstsRef};\n \n@@ -24,7 +24,6 @@ use crate::value::Value;\n use rustc::mir;\n use rustc::session::config::{self, DebugInfo};\n use rustc::ty::{self, Instance, InstanceDef, ParamEnv, Ty};\n-use rustc::util::nodemap::DefIdMap;\n use rustc_codegen_ssa::debuginfo::type_names;\n use rustc_codegen_ssa::mir::debuginfo::{DebugScope, FunctionDebugContext, VariableKind};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "0f54557eaed2dbdaadd524eb8a1990409a1a7165", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -2,7 +2,7 @@ use std::collections::hash_map::Entry::*;\n use std::sync::Arc;\n \n use rustc::hir;\n-use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::Node;\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n@@ -11,7 +11,6 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::Instance;\n use rustc::ty::{SymbolName, TyCtxt};\n-use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::IndexVec;"}, {"sha": "7de829edfc860baf6a7965b48a7c12a3284fc718", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -6,7 +6,7 @@ use crate::rmeta::{self, encoder};\n \n use rustc::hir;\n use rustc::hir::def;\n-use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::map::definitions::DefPathTable;\n use rustc::hir::map::{DefKey, DefPath, DefPathHash};\n use rustc::middle::cstore::{CrateSource, CrateStore, DepKind, EncodedMetadata, NativeLibraryKind};\n@@ -16,7 +16,6 @@ use rustc::session::{CrateDisambiguator, Session};\n use rustc::ty::query::Providers;\n use rustc::ty::query::QueryConfig;\n use rustc::ty::{self, TyCtxt};\n-use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::svh::Svh;\n use rustc_parse::parser::emit_unclosed_delims;\n use rustc_parse::source_file_to_stream;"}, {"sha": "43d57e0e85fb37c291d15a0f6fa3d91353c4e92b", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -177,7 +177,7 @@\n use crate::monomorphize;\n \n use rustc::hir;\n-use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{DefId, DefIdMap, LOCAL_CRATE};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::middle::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n@@ -192,7 +192,6 @@ use rustc::ty::print::obsolete::DefPathBasedNames;\n use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc::ty::{self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc::util::common::time;\n-use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n use rustc_index::bit_set::GrowableBitSet;"}, {"sha": "9c8bcfad6da17ff413cd2188b501448f3d3ba98c", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -97,7 +97,7 @@ use std::collections::hash_map::Entry;\n use std::sync::Arc;\n \n use rustc::hir::def::DefKind;\n-use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdSet, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::middle::exported_symbols::SymbolExportLevel;\n use rustc::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, Linkage, Visibility};\n@@ -106,7 +106,6 @@ use rustc::ty::print::characteristic_def_id_of_type;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n use rustc::util::common::time;\n-use rustc::util::nodemap::DefIdSet;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::Symbol;\n "}, {"sha": "7cf94f7260fd4c281528f47345f53cfaeceaa107", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,12 +1,11 @@\n use crate::{build, shim};\n use rustc::hir;\n-use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdSet, LOCAL_CRATE};\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::mir::{BodyAndCache, ConstQualifs, MirPhase, Promoted};\n use rustc::ty::query::Providers;\n use rustc::ty::steal::Steal;\n use rustc::ty::{InstanceDef, TyCtxt, TypeFoldable};\n-use rustc::util::nodemap::DefIdSet;\n use rustc_index::vec::IndexVec;\n use rustc_span::Span;\n use std::borrow::Cow;"}, {"sha": "0d08313ae730ce48aa39625c4c59a0dc29fd873e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -23,7 +23,7 @@ use Determinacy::*;\n use errors::{Applicability, DiagnosticBuilder};\n use rustc::hir::def::Namespace::*;\n use rustc::hir::def::{self, CtorKind, CtorOf, DefKind, ExportMap, NonMacroAttrKind, PartialRes};\n-use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::map::Definitions;\n use rustc::hir::{Bool, Char, Float, Int, PrimTy, Str, Uint};\n use rustc::hir::{GlobMap, TraitMap};\n@@ -33,7 +33,6 @@ use rustc::session::Session;\n use rustc::span_bug;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, ResolverOutputs};\n-use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::ptr_key::PtrKey;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "a5afd73c28b681d038a00079a2266ca6bfaab8be", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -7,7 +7,7 @@\n \n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, LOCAL_CRATE};\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::hir::{self, GenericParamKind, LifetimeParamKind};\n@@ -16,7 +16,7 @@ use rustc::lint;\n use rustc::middle::resolve_lifetime::*;\n use rustc::session::Session;\n use rustc::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n-use rustc::util::nodemap::{DefIdMap, HirIdMap, HirIdSet};\n+use rustc::util::nodemap::{HirIdMap, HirIdSet};\n use rustc::{bug, span_bug};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::{kw, sym};"}, {"sha": "51574063093483a40ffaca0b99be6828031305f7", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -92,7 +92,7 @@ use crate::middle::lang_items;\n use crate::namespace::Namespace;\n use errors::{pluralize, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc::hir::def::{CtorOf, DefKind, Res};\n-use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LOCAL_CRATE};\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir::{self, ExprKind, GenericArg, ItemKind, Node, PatKind, QPath};\n@@ -145,7 +145,7 @@ use crate::session::config::EntryFnType;\n use crate::session::Session;\n use crate::util::captures::Captures;\n use crate::util::common::{indenter, ErrorReported};\n-use crate::util::nodemap::{DefIdMap, DefIdSet, HirIdMap};\n+use crate::util::nodemap::HirIdMap;\n use crate::TypeAndSubsts;\n \n use self::autoderef::Autoderef;"}, {"sha": "0fbc14a717374361a3c9c5d5c9ce7dca9c7b54b1", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -5,14 +5,13 @@\n use crate::check::FnCtxt;\n \n use rustc::hir;\n-use rustc::hir::def_id::{DefId, DefIndex};\n+use rustc::hir::def_id::{DefId, DefIdSet, DefIndex};\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc::infer::InferCtxt;\n use rustc::ty::adjustment::{Adjust, Adjustment, PointerCast};\n use rustc::ty::fold::{TypeFoldable, TypeFolder};\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::util::nodemap::DefIdSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "b0cbabd195853dbe9c9701ecfbd9b13bfdcb9794", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -6,11 +6,9 @@ use rustc_span::Span;\n use syntax::ast;\n \n use rustc::hir;\n-use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{DefId, DefIdSet, LOCAL_CRATE};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir::print::visibility_qualified;\n-use rustc::util::nodemap::DefIdSet;\n-\n use rustc_data_structures::fx::FxHashMap;\n \n pub fn check_crate(tcx: TyCtxt<'_>) {"}, {"sha": "784d967017db0c71be65a9a1bc4b9ef76e6cb3ef", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,10 +1,9 @@\n //! Contains information about \"passes\", used to modify crate information during the documentation\n //! process.\n \n-use rustc::hir::def_id::DefId;\n+use rustc::hir::def_id::{DefId, DefIdSet};\n use rustc::lint;\n use rustc::middle::privacy::AccessLevels;\n-use rustc::util::nodemap::DefIdSet;\n use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use std::mem;\n use std::ops::Range;"}, {"sha": "5fd97d1685ac619586f3185aca35301db55cd85f", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,4 +1,4 @@\n-use rustc::util::nodemap::DefIdSet;\n+use rustc::hir::def_id::DefIdSet;\n use rustc_span::symbol::sym;\n use std::mem;\n "}, {"sha": "167aa2ca7d23049f859dda5c02cfcf9c8646443e", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca297f8cf45b98c65e090528da97bf873f2bec2b/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=ca297f8cf45b98c65e090528da97bf873f2bec2b", "patch": "@@ -1,4 +1,4 @@\n-use rustc::util::nodemap::DefIdSet;\n+use rustc::hir::def_id::DefIdSet;\n \n use crate::clean;\n use crate::core::DocContext;"}]}