{"sha": "35903bb9aae79fd29476fd9fb63971e75bb82b0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1OTAzYmI5YWFlNzlmZDI5NDc2ZmQ5ZmI2Mzk3MWU3NWJiODJiMGE=", "commit": {"author": {"name": "Trotter Cashion", "email": "cashion@gmail.com", "date": "2016-11-10T15:48:01Z"}, "committer": {"name": "Trotter Cashion", "email": "cashion@gmail.com", "date": "2016-11-10T15:48:01Z"}, "message": "Remove `mod tests` from earlier sections\n\nThe narrative flows better if we follow what @steveklabnik is doing in\nrust-lang/book#288. Therefore, I completely copied it.", "tree": {"sha": "a07c617074d1b850a9b0058e1fac74f7f6779ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a07c617074d1b850a9b0058e1fac74f7f6779ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35903bb9aae79fd29476fd9fb63971e75bb82b0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35903bb9aae79fd29476fd9fb63971e75bb82b0a", "html_url": "https://github.com/rust-lang/rust/commit/35903bb9aae79fd29476fd9fb63971e75bb82b0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35903bb9aae79fd29476fd9fb63971e75bb82b0a/comments", "author": {"login": "trotter", "id": 413, "node_id": "MDQ6VXNlcjQxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trotter", "html_url": "https://github.com/trotter", "followers_url": "https://api.github.com/users/trotter/followers", "following_url": "https://api.github.com/users/trotter/following{/other_user}", "gists_url": "https://api.github.com/users/trotter/gists{/gist_id}", "starred_url": "https://api.github.com/users/trotter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trotter/subscriptions", "organizations_url": "https://api.github.com/users/trotter/orgs", "repos_url": "https://api.github.com/users/trotter/repos", "events_url": "https://api.github.com/users/trotter/events{/privacy}", "received_events_url": "https://api.github.com/users/trotter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trotter", "id": 413, "node_id": "MDQ6VXNlcjQxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trotter", "html_url": "https://github.com/trotter", "followers_url": "https://api.github.com/users/trotter/followers", "following_url": "https://api.github.com/users/trotter/following{/other_user}", "gists_url": "https://api.github.com/users/trotter/gists{/gist_id}", "starred_url": "https://api.github.com/users/trotter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trotter/subscriptions", "organizations_url": "https://api.github.com/users/trotter/orgs", "repos_url": "https://api.github.com/users/trotter/repos", "events_url": "https://api.github.com/users/trotter/events{/privacy}", "received_events_url": "https://api.github.com/users/trotter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c60ca06c2400eba893d1efd2407d046a395862", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c60ca06c2400eba893d1efd2407d046a395862", "html_url": "https://github.com/rust-lang/rust/commit/d9c60ca06c2400eba893d1efd2407d046a395862"}], "stats": {"total": 113, "additions": 51, "deletions": 62}, "files": [{"sha": "9cb3e5e48aceaceb98348c7f1f52be42ed97da8e", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 51, "deletions": 62, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/35903bb9aae79fd29476fd9fb63971e75bb82b0a/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/35903bb9aae79fd29476fd9fb63971e75bb82b0a/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=35903bb9aae79fd29476fd9fb63971e75bb82b0a", "patch": "@@ -36,6 +36,18 @@ mod tests {\n }\n ```\n \n+For now, let's remove the `mod` bit, and focus on just the function:\n+\n+```rust\n+# // The next line exists to trick play.rust-lang.org into running our code as a\n+# // test:\n+# // fn main\n+#\n+#[test]\n+fn it_works() {\n+}\n+```\n+\n Note the `#[test]`. This attribute indicates that this is a test function. It\n currently has no body. That's good enough to pass! We can run the tests with\n `cargo test`:\n@@ -47,7 +59,7 @@ $ cargo test\n      Running target/debug/deps/adder-941f01916ca4a642\n \n running 1 test\n-test tests::it_works ... ok\n+test it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n \n@@ -63,10 +75,10 @@ for the test we wrote, and another for documentation tests. We'll talk about\n those later. For now, see this line:\n \n ```text\n-test tests::it_works ... ok\n+test it_works ... ok\n ```\n \n-Note the `tests::it_works`. This comes from the name of our module and function:\n+Note the `it_works`. This comes from the name of our module and function:\n \n ```rust\n fn it_works() {\n@@ -87,12 +99,9 @@ and any test that does `panic!` fails. Let's make our test fail:\n # // test:\n # // fn main\n #\n-#[cfg(test)]\n-mod tests {\n-    #[test]\n-    fn it_works() {\n-        assert!(false);\n-    }\n+#[test]\n+fn it_works() {\n+    assert!(false);\n }\n ```\n \n@@ -107,17 +116,17 @@ $ cargo test\n      Running target/debug/deps/adder-941f01916ca4a642\n \n running 1 test\n-test tests::it_works ... FAILED\n+test it_works ... FAILED\n \n failures:\n \n----- tests::it_works stdout ----\n-        thread 'tests::it_works' panicked at 'assertion failed: false', src/lib.rs:5\n+---- it_works stdout ----\n+        thread 'it_works' panicked at 'assertion failed: false', src/lib.rs:5\n note: Run with `RUST_BACKTRACE=1` for a backtrace.\n \n \n failures:\n-    tests::it_works\n+    it_works\n \n test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured\n \n@@ -127,7 +136,7 @@ error: test failed\n Rust indicates that our test failed:\n \n ```text\n-test tests::it_works ... FAILED\n+test it_works ... FAILED\n ```\n \n And that's reflected in the summary line:\n@@ -165,15 +174,11 @@ We can invert our test's failure with another attribute: `should_panic`:\n # // test:\n # // fn main\n #\n-#[cfg(test)]\n-mod tests {\n-    #[test]\n-    #[should_panic]\n-    fn it_works() {\n-        assert!(false);\n-    }\n+#[test]\n+#[should_panic]\n+fn it_works() {\n+    assert!(false);\n }\n-\n ```\n \n This test will now succeed if we `panic!` and fail if we complete. Let's try it:\n@@ -185,7 +190,7 @@ $ cargo test\n      Running target/debug/deps/adder-941f01916ca4a642\n \n running 1 test\n-test tests::it_works ... ok\n+test it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n \n@@ -204,13 +209,10 @@ equality:\n # // test:\n # // fn main\n #\n-#[cfg(test)]\n-mod tests {\n-    #[test]\n-    #[should_panic]\n-    fn it_works() {\n-        assert_eq!(\"Hello\", \"world\");\n-    }\n+#[test]\n+#[should_panic]\n+fn it_works() {\n+    assert_eq!(\"Hello\", \"world\");\n }\n ```\n \n@@ -224,7 +226,7 @@ $ cargo test\n      Running target/debug/deps/adder-941f01916ca4a642\n \n running 1 test\n-test tests::it_works ... ok\n+test it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n \n@@ -246,13 +248,10 @@ of the example above would be:\n # // test:\n # // fn main\n #\n-#[cfg(test)]\n-mod tests {\n-    #[test]\n-    #[should_panic(expected = \"assertion failed\")]\n-    fn it_works() {\n-        assert_eq!(\"Hello\", \"world\");\n-    }\n+#[test]\n+#[should_panic(expected = \"assertion failed\")]\n+fn it_works() {\n+    assert_eq!(\"Hello\", \"world\");\n }\n ```\n \n@@ -267,14 +266,9 @@ pub fn add_two(a: i32) -> i32 {\n     a + 2\n }\n \n-#[cfg(test)]\n-mod tests {\n-    use super::add_two;\n-    \n-    #[test]\n-    fn it_works() {\n-        assert_eq!(4, add_two(2));\n-    }\n+#[test]\n+fn it_works() {\n+    assert_eq!(4, add_two(2));\n }\n ```\n \n@@ -295,20 +289,15 @@ pub fn add_two(a: i32) -> i32 {\n     a + 2\n }\n \n-#[cfg(test)]\n-mod tests {\n-    use super::add_two;\n-    \n-    #[test]\n-    fn it_works() {\n-        assert_eq!(4, add_two(2));\n-    }\n+#[test]\n+fn it_works() {\n+    assert_eq!(4, add_two(2));\n+}\n \n-    #[test]\n-    #[ignore]\n-    fn expensive_test() {\n-        // code that takes an hour to run\n-    }\n+#[test]\n+#[ignore]\n+fn expensive_test() {\n+    // code that takes an hour to run\n }\n ```\n \n@@ -322,8 +311,8 @@ $ cargo test\n      Running target/debug/deps/adder-941f01916ca4a642\n \n running 2 tests\n-test tests::expensive_test ... ignored\n-test tests::it_works ... ok\n+test expensive_test ... ignored\n+test it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 1 ignored; 0 measured\n \n@@ -342,7 +331,7 @@ $ cargo test -- --ignored\n      Running target/debug/deps/adder-941f01916ca4a642\n \n running 1 test\n-test tests::expensive_test ... ok\n+test expensive_test ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n "}]}