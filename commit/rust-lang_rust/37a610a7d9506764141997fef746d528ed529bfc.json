{"sha": "37a610a7d9506764141997fef746d528ed529bfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YTYxMGE3ZDk1MDY3NjQxNDE5OTdmZWY3NDZkNTI4ZWQ1MjliZmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-07T16:32:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-07T16:32:09Z"}, "message": "auto merge of #4831 : bjz/rust/incoming, r=pcwalton\n\nThis is useful for comparing more complex types that include floats.", "tree": {"sha": "ae95d69306227b4b78dc38dcf8d392c43d4573bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae95d69306227b4b78dc38dcf8d392c43d4573bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37a610a7d9506764141997fef746d528ed529bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37a610a7d9506764141997fef746d528ed529bfc", "html_url": "https://github.com/rust-lang/rust/commit/37a610a7d9506764141997fef746d528ed529bfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37a610a7d9506764141997fef746d528ed529bfc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3764cfbf57646becdeefa2996f812cbe40b016e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3764cfbf57646becdeefa2996f812cbe40b016e7", "html_url": "https://github.com/rust-lang/rust/commit/3764cfbf57646becdeefa2996f812cbe40b016e7"}, {"sha": "7651100ec104c97eea486e2576bd1f058f4ff592", "url": "https://api.github.com/repos/rust-lang/rust/commits/7651100ec104c97eea486e2576bd1f058f4ff592", "html_url": "https://github.com/rust-lang/rust/commit/7651100ec104c97eea486e2576bd1f058f4ff592"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "991953cccb7fa5d39463ec2669fc87f107a0abb8", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 46, "deletions": 9, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/37a610a7d9506764141997fef746d528ed529bfc/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a610a7d9506764141997fef746d528ed529bfc/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=37a610a7d9506764141997fef746d528ed529bfc", "patch": "@@ -14,36 +14,36 @@ use core::f32;\n use core::f64;\n use core::float;\n \n-const fuzzy_epsilon: float = 1.0e-6;\n+pub const FUZZY_EPSILON: float = 1.0e-6;\n \n-pub trait FuzzyEq {\n+pub trait FuzzyEq<Eps> {\n     pure fn fuzzy_eq(&self, other: &Self) -> bool;\n-    pure fn fuzzy_eq_eps(&self, other: &Self, epsilon: &Self) -> bool;\n+    pure fn fuzzy_eq_eps(&self, other: &Self, epsilon: &Eps) -> bool;\n }\n \n-impl float: FuzzyEq {\n+impl float: FuzzyEq<float> {\n     pure fn fuzzy_eq(&self, other: &float) -> bool {\n-        self.fuzzy_eq_eps(other, &fuzzy_epsilon)\n+        self.fuzzy_eq_eps(other, &FUZZY_EPSILON)\n     }\n \n     pure fn fuzzy_eq_eps(&self, other: &float, epsilon: &float) -> bool {\n         float::abs(*self - *other) < *epsilon\n     }\n }\n \n-impl f32: FuzzyEq {\n+impl f32: FuzzyEq<f32> {\n     pure fn fuzzy_eq(&self, other: &f32) -> bool {\n-        self.fuzzy_eq_eps(other, &(fuzzy_epsilon as f32))\n+        self.fuzzy_eq_eps(other, &(FUZZY_EPSILON as f32))\n     }\n \n     pure fn fuzzy_eq_eps(&self, other: &f32, epsilon: &f32) -> bool {\n         f32::abs(*self - *other) < *epsilon\n     }\n }\n \n-impl f64: FuzzyEq {\n+impl f64: FuzzyEq<f64> {\n     pure fn fuzzy_eq(&self, other: &f64) -> bool {\n-        self.fuzzy_eq_eps(other, &(fuzzy_epsilon as f64))\n+        self.fuzzy_eq_eps(other, &(FUZZY_EPSILON as f64))\n     }\n \n     pure fn fuzzy_eq_eps(&self, other: &f64, epsilon: &f64) -> bool {\n@@ -63,3 +63,40 @@ fn test_fuzzy_eq_eps() {\n     assert (&1.2f).fuzzy_eq_eps(&0.9, &0.5);\n     assert !(&1.5f).fuzzy_eq_eps(&0.9, &0.5);\n }\n+\n+#[test]\n+mod test_complex{\n+    use cmp::*;\n+\n+    struct Complex { r: float, i: float }\n+\n+    impl Complex: FuzzyEq<float> {\n+        pure fn fuzzy_eq(&self, other: &Complex) -> bool {\n+            self.fuzzy_eq_eps(other, &FUZZY_EPSILON)\n+        }\n+\n+        pure fn fuzzy_eq_eps(&self, other: &Complex,\n+                             epsilon: &float) -> bool {\n+            self.r.fuzzy_eq_eps(&other.r, epsilon) &&\n+            self.i.fuzzy_eq_eps(&other.i, epsilon)\n+        }\n+    }\n+\n+    #[test]\n+    fn test_fuzzy_equals() {\n+        let a = Complex {r: 0.9, i: 0.9};\n+        let b = Complex {r: 0.9, i: 0.9};\n+\n+        assert (a.fuzzy_eq(&b));\n+    }\n+\n+    #[test]\n+    fn test_fuzzy_eq_eps() {\n+        let other = Complex {r: 0.9, i: 0.9};\n+\n+        assert (&Complex {r: 0.9, i: 1.2}).fuzzy_eq_eps(&other, &0.5);\n+        assert (&Complex {r: 1.2, i: 0.9}).fuzzy_eq_eps(&other, &0.5);\n+        assert !(&Complex {r: 0.9, i: 1.5}).fuzzy_eq_eps(&other, &0.5);\n+        assert !(&Complex {r: 1.5, i: 0.9}).fuzzy_eq_eps(&other, &0.5);\n+    }\n+}"}, {"sha": "ca720c27d77ad88d64529d202f1d60c5b03145b8", "filename": "src/test/run-pass/trait-inheritance-num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37a610a7d9506764141997fef746d528ed529bfc/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a610a7d9506764141997fef746d528ed529bfc/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs?ref=37a610a7d9506764141997fef746d528ed529bfc", "patch": "@@ -18,7 +18,7 @@ use std::cmp::FuzzyEq;\n \n pub trait NumExt: Num Eq Ord {}\n \n-pub trait FloatExt: NumExt FuzzyEq {}\n+pub trait FloatExt: NumExt FuzzyEq<Self> {}\n \n fn greater_than_one<T:NumExt>(n: &T) -> bool { *n > from_int(1) }\n fn greater_than_one_float<T:FloatExt>(n: &T) -> bool { *n > from_int(1) }"}, {"sha": "ecedaac8daaabe7ccf1bdd96ff701845d965b35d", "filename": "src/test/run-pass/trait-inheritance-num2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37a610a7d9506764141997fef746d528ed529bfc/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a610a7d9506764141997fef746d528ed529bfc/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs?ref=37a610a7d9506764141997fef746d528ed529bfc", "patch": "@@ -94,7 +94,7 @@ pub impl i64: IntegerExt {}\n pub impl int: IntegerExt {}\n \n \n-pub trait FloatExt: NumExt FuzzyEq {}\n+pub trait FloatExt: NumExt FuzzyEq<Self> {}\n \n pub impl f32: FloatExt {}\n pub impl f64: FloatExt {}"}]}