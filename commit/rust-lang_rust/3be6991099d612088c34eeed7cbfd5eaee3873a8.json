{"sha": "3be6991099d612088c34eeed7cbfd5eaee3873a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZTY5OTEwOTlkNjEyMDg4YzM0ZWVlZDdjYmZkNWVhZWUzODczYTg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-09T22:02:26Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-10T01:06:30Z"}, "message": "Give custom derive spans an expansion ID", "tree": {"sha": "04f163aa662bab8d90c51b501a7949224fc1fc63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04f163aa662bab8d90c51b501a7949224fc1fc63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3be6991099d612088c34eeed7cbfd5eaee3873a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3be6991099d612088c34eeed7cbfd5eaee3873a8", "html_url": "https://github.com/rust-lang/rust/commit/3be6991099d612088c34eeed7cbfd5eaee3873a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3be6991099d612088c34eeed7cbfd5eaee3873a8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7265b938425135702fb2aea9874afca1d3b4c5be", "url": "https://api.github.com/repos/rust-lang/rust/commits/7265b938425135702fb2aea9874afca1d3b4c5be", "html_url": "https://github.com/rust-lang/rust/commit/7265b938425135702fb2aea9874afca1d3b4c5be"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "096f6dfd5d8d86cbae0dc18d3c8a640ec70d1c04", "filename": "src/libsyntax_ext/deriving/mod.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3be6991099d612088c34eeed7cbfd5eaee3873a8/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3be6991099d612088c34eeed7cbfd5eaee3873a8/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs?ref=3be6991099d612088c34eeed7cbfd5eaee3873a8", "patch": "@@ -90,10 +90,10 @@ fn allow_unstable(cx: &mut ExtCtxt, span: Span, attr_name: &str) -> Span {\n }\n \n pub fn expand_derive(cx: &mut ExtCtxt,\n-                 span: Span,\n-                 mitem: &MetaItem,\n-                 annotatable: Annotatable)\n-                 -> Vec<Annotatable> {\n+                     span: Span,\n+                     mitem: &MetaItem,\n+                     annotatable: Annotatable)\n+                     -> Vec<Annotatable> {\n     debug!(\"expand_derive: span = {:?}\", span);\n     debug!(\"expand_derive: mitem = {:?}\", mitem);\n     debug!(\"expand_derive: annotatable input  = {:?}\", annotatable);\n@@ -235,8 +235,21 @@ pub fn expand_derive(cx: &mut ExtCtxt,\n         let titem = cx.meta_list_item_word(titem.span, titem.name().unwrap());\n         let mitem = cx.meta_list(titem.span, derive, vec![titem]);\n         let item = Annotatable::Item(item);\n+\n+        let span = Span {\n+            expn_id: cx.codemap().record_expansion(codemap::ExpnInfo {\n+                call_site: mitem.span,\n+                callee: codemap::NameAndSpan {\n+                    format: codemap::MacroAttribute(Symbol::intern(&format!(\"derive({})\", tname))),\n+                    span: None,\n+                    allow_internal_unstable: false,\n+                },\n+            }),\n+            ..mitem.span\n+        };\n+\n         if let SyntaxExtension::CustomDerive(ref ext) = *ext {\n-            return ext.expand(cx, mitem.span, &mitem, item);\n+            return ext.expand(cx, span, &mitem, item);\n         } else {\n             unreachable!()\n         }\n@@ -285,8 +298,8 @@ pub fn expand_derive(cx: &mut ExtCtxt,\n             expn_id: cx.codemap().record_expansion(codemap::ExpnInfo {\n                 call_site: titem.span,\n                 callee: codemap::NameAndSpan {\n-                    format: codemap::MacroAttribute(Symbol::intern(&format!(\"derive({})\", tname))),\n-                    span: Some(titem.span),\n+                    format: codemap::MacroAttribute(name),\n+                    span: None,\n                     allow_internal_unstable: true,\n                 },\n             }),"}]}