{"sha": "630d85f8d15f6182988889020dc22f7756a9149c", "node_id": "C_kwDOAAsO6NoAKDYzMGQ4NWY4ZDE1ZjYxODI5ODg4ODkwMjBkYzIyZjc3NTZhOTE0OWM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-26T18:40:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-26T18:40:39Z"}, "message": "Merge #11826\n\n11826: Revert \"Emit #[must_use] in Generate new assist\" r=lnicola a=lnicola\n\nCC https://github.com/rust-analyzer/rust-analyzer/pull/11737#issuecomment-1079740305\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "21a450d040ac82e277623c253c3485e54dc60baa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21a450d040ac82e277623c253c3485e54dc60baa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/630d85f8d15f6182988889020dc22f7756a9149c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiP14nCRBK7hj4Ov3rIwAAdDAIAFQj6q9g4NDXLCyP105KLqRh\nfszQC3DdwvBot5a2BHzvP7LFh6VAzIpgDyfMuX2scx7K+AF5VA7OMa3osJR1XqPu\nTnbvc/GEZpUEWN2yqeqT2ufKDlNRyn4ONwS1IWI+BIVd66Gx+qtaqK2tNYLHnt1E\njgOHUYVtPMNbY+rTrl5DH4qvrDTUy0UstnQgU4SzOe4HVRNmqMZcS5h3FTVi53ON\n+tno8LLExyDVuN5oO00RFRSGSIkHxo4KBdmfn2w6GjEPIMDINWGnXLAcAKVwCq/T\ngUnfm7ADPUic+Yz60Snb9lR5/5VnxdPzSh5SAhTq81VKDGAcBZb/8THbqpaHWlo=\n=Bk5V\n-----END PGP SIGNATURE-----\n", "payload": "tree 21a450d040ac82e277623c253c3485e54dc60baa\nparent e30747dfa885d3e4e4cd0b5efcd740ea037a524c\nparent 03cb7d944815ca4397a53ede7804a17ede7ff791\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648320039 +0000\ncommitter GitHub <noreply@github.com> 1648320039 +0000\n\nMerge #11826\n\n11826: Revert \"Emit #[must_use] in Generate new assist\" r=lnicola a=lnicola\n\nCC https://github.com/rust-analyzer/rust-analyzer/pull/11737#issuecomment-1079740305\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/630d85f8d15f6182988889020dc22f7756a9149c", "html_url": "https://github.com/rust-lang/rust/commit/630d85f8d15f6182988889020dc22f7756a9149c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/630d85f8d15f6182988889020dc22f7756a9149c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "html_url": "https://github.com/rust-lang/rust/commit/e30747dfa885d3e4e4cd0b5efcd740ea037a524c"}, {"sha": "03cb7d944815ca4397a53ede7804a17ede7ff791", "url": "https://api.github.com/repos/rust-lang/rust/commits/03cb7d944815ca4397a53ede7804a17ede7ff791", "html_url": "https://github.com/rust-lang/rust/commit/03cb7d944815ca4397a53ede7804a17ede7ff791"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "6a1f710f6d5f3009c38495acd027ab399d5e0c30", "filename": "crates/ide_assists/src/handlers/generate_new.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/630d85f8d15f6182988889020dc22f7756a9149c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/630d85f8d15f6182988889020dc22f7756a9149c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=630d85f8d15f6182988889020dc22f7756a9149c", "patch": "@@ -23,7 +23,6 @@ use crate::{\n // }\n //\n // impl<T: Clone> Ctx<T> {\n-//     #[must_use]\n //     fn $0new(data: T) -> Self { Self { data } }\n // }\n // ```\n@@ -55,13 +54,7 @@ pub(crate) fn generate_new(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n             .format(\", \");\n         let fields = field_list.fields().filter_map(|f| f.name()).format(\", \");\n \n-        format_to!(\n-            buf,\n-            \"    #[must_use]\\n    {}fn new({}) -> Self {{ Self {{ {} }} }}\",\n-            vis,\n-            params,\n-            fields\n-        );\n+        format_to!(buf, \"    {}fn new({}) -> Self {{ Self {{ {} }} }}\", vis, params, fields);\n \n         let start_offset = impl_def\n             .and_then(|impl_def| find_impl_block_start(impl_def, &mut buf))\n@@ -97,7 +90,6 @@ struct Foo {$0}\n struct Foo {}\n \n impl Foo {\n-    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -111,7 +103,6 @@ struct Foo<T: Clone> {$0}\n struct Foo<T: Clone> {}\n \n impl<T: Clone> Foo<T> {\n-    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -125,7 +116,6 @@ struct Foo<'a, T: Foo<'a>> {$0}\n struct Foo<'a, T: Foo<'a>> {}\n \n impl<'a, T: Foo<'a>> Foo<'a, T> {\n-    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -139,7 +129,6 @@ struct Foo { baz: String $0}\n struct Foo { baz: String }\n \n impl Foo {\n-    #[must_use]\n     fn $0new(baz: String) -> Self { Self { baz } }\n }\n \"#,\n@@ -153,7 +142,6 @@ struct Foo { baz: String, qux: Vec<i32> $0}\n struct Foo { baz: String, qux: Vec<i32> }\n \n impl Foo {\n-    #[must_use]\n     fn $0new(baz: String, qux: Vec<i32>) -> Self { Self { baz, qux } }\n }\n \"#,\n@@ -171,7 +159,6 @@ struct Foo { pub baz: String, pub qux: Vec<i32> $0}\n struct Foo { pub baz: String, pub qux: Vec<i32> }\n \n impl Foo {\n-    #[must_use]\n     fn $0new(baz: String, qux: Vec<i32>) -> Self { Self { baz, qux } }\n }\n \"#,\n@@ -191,7 +178,6 @@ impl Foo {}\n struct Foo {}\n \n impl Foo {\n-    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -209,7 +195,6 @@ impl Foo {\n struct Foo {}\n \n impl Foo {\n-    #[must_use]\n     fn $0new() -> Self { Self {  } }\n \n     fn qux(&self) {}\n@@ -233,7 +218,6 @@ impl Foo {\n struct Foo {}\n \n impl Foo {\n-    #[must_use]\n     fn $0new() -> Self { Self {  } }\n \n     fn qux(&self) {}\n@@ -256,7 +240,6 @@ pub struct Foo {$0}\n pub struct Foo {}\n \n impl Foo {\n-    #[must_use]\n     pub fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -270,7 +253,6 @@ pub(crate) struct Foo {$0}\n pub(crate) struct Foo {}\n \n impl Foo {\n-    #[must_use]\n     pub(crate) fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -366,7 +348,6 @@ pub struct Source<T> {\n }\n \n impl<T> Source<T> {\n-    #[must_use]\n     pub fn $0new(file_id: HirFileId, ast: T) -> Self { Self { file_id, ast } }\n \n     pub fn map<F: FnOnce(T) -> U, U>(self, f: F) -> Source<U> {"}, {"sha": "282374b3cf3b398ea42dba24b115a654049ac990", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/630d85f8d15f6182988889020dc22f7756a9149c/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/630d85f8d15f6182988889020dc22f7756a9149c/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=630d85f8d15f6182988889020dc22f7756a9149c", "patch": "@@ -1139,7 +1139,6 @@ struct Ctx<T: Clone> {\n }\n \n impl<T: Clone> Ctx<T> {\n-    #[must_use]\n     fn $0new(data: T) -> Self { Self { data } }\n }\n \"#####,"}]}