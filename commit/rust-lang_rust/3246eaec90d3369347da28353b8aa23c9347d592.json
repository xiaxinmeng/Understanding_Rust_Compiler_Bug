{"sha": "3246eaec90d3369347da28353b8aa23c9347d592", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNDZlYWVjOTBkMzM2OTM0N2RhMjgzNTNiOGFhMjNjOTM0N2Q1OTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-12T08:30:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-12T08:30:56Z"}, "message": "Auto merge of #30678 - Amanieu:no_elf_tls, r=alexcrichton\n\nI also re-enabled the use of `#[thread_local]` on AArch64. It was originally disabled in the PR that introduced AArch64 (#19790), but the reasons for this were not explained. `#[thread_local]` seems to work fine in my tests on AArch64, so I don't think this should be an issue.\n\ncc @alexcrichton @akiss77", "tree": {"sha": "94befa244a5d184bd361c458636536eb3c1f1ab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94befa244a5d184bd361c458636536eb3c1f1ab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3246eaec90d3369347da28353b8aa23c9347d592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3246eaec90d3369347da28353b8aa23c9347d592", "html_url": "https://github.com/rust-lang/rust/commit/3246eaec90d3369347da28353b8aa23c9347d592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3246eaec90d3369347da28353b8aa23c9347d592/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6cb2791ce8a88402de896e2377e33b7479faad0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6cb2791ce8a88402de896e2377e33b7479faad0", "html_url": "https://github.com/rust-lang/rust/commit/d6cb2791ce8a88402de896e2377e33b7479faad0"}, {"sha": "e304fb43a3533d9ed79be91e217270747ca50edf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e304fb43a3533d9ed79be91e217270747ca50edf", "html_url": "https://github.com/rust-lang/rust/commit/e304fb43a3533d9ed79be91e217270747ca50edf"}], "stats": {"total": 50, "additions": 5, "deletions": 45}, "files": [{"sha": "7542d91ce6d50afdd9edf90c2660544c16a777e8", "filename": "mk/crates.mk", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3246eaec90d3369347da28353b8aa23c9347d592/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/3246eaec90d3369347da28353b8aa23c9347d592/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=3246eaec90d3369347da28353b8aa23c9347d592", "patch": "@@ -175,9 +175,5 @@ endef\n \n $(foreach crate,$(TOOLS),$(eval $(call RUST_TOOL,$(crate))))\n \n-ifdef CFG_DISABLE_ELF_TLS\n-RUSTFLAGS_std := --cfg no_elf_tls\n-endif\n-\n CRATEFILE_libc := $(SREL)src/liblibc/src/lib.rs\n RUSTFLAGS_libc := --cfg stdbuild"}, {"sha": "51abab6609a86c52997e73b576723a21a4204833", "filename": "src/librustc_back/target/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs?ref=3246eaec90d3369347da28353b8aa23c9347d592", "patch": "@@ -11,8 +11,7 @@\n use target::Target;\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n-    base.has_elf_tls = false;\n+    let base = super::linux_base::opts();\n     Target {\n         llvm_target: \"aarch64-unknown-linux-gnu\".to_string(),\n         target_endian: \"little\".to_string(),"}, {"sha": "9791520e9339bbd8ad6908b74e70256abbf83673", "filename": "src/librustc_back/target/android_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs?ref=3246eaec90d3369347da28353b8aa23c9347d592", "patch": "@@ -17,5 +17,6 @@ pub fn opts() -> TargetOptions {\n     base.pre_link_args.push(\"-Wl,--allow-multiple-definition\".to_string());\n     base.is_like_android = true;\n     base.position_independent_executables = true;\n+    base.has_elf_tls = false;\n     base\n }"}, {"sha": "732f1a353a8bd719c1f363e5fec3c02c9837765d", "filename": "src/librustc_back/target/arm_linux_androideabi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs?ref=3246eaec90d3369347da28353b8aa23c9347d592", "patch": "@@ -13,7 +13,6 @@ use target::Target;\n pub fn target() -> Target {\n     let mut base = super::android_base::opts();\n     base.features = \"+v7\".to_string();\n-    base.has_elf_tls = false;\n \n     Target {\n         llvm_target: \"arm-linux-androideabi\".to_string(),"}, {"sha": "dc0bc6dfe024559ed6586ac04001950e4b732035", "filename": "src/libstd/thread/scoped_tls.rs", "status": "modified", "additions": 3, "deletions": 38, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibstd%2Fthread%2Fscoped_tls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3246eaec90d3369347da28353b8aa23c9347d592/src%2Flibstd%2Fthread%2Fscoped_tls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fscoped_tls.rs?ref=3246eaec90d3369347da28353b8aa23c9347d592", "patch": "@@ -87,32 +87,9 @@ macro_rules! scoped_thread_local {\n            issue = \"0\")]\n #[macro_export]\n #[allow_internal_unstable]\n-#[cfg(no_elf_tls)]\n macro_rules! __scoped_thread_local_inner {\n     ($t:ty) => {{\n-        static _KEY: $crate::thread::__ScopedKeyInner<$t> =\n-            $crate::thread::__ScopedKeyInner::new();\n-        fn _getit() -> &'static $crate::thread::__ScopedKeyInner<$t> { &_KEY }\n-        $crate::thread::ScopedKey::new(_getit)\n-    }}\n-}\n-\n-#[doc(hidden)]\n-#[unstable(feature = \"thread_local_internals\",\n-           reason = \"should not be necessary\",\n-           issue = \"0\")]\n-#[macro_export]\n-#[allow_internal_unstable]\n-#[cfg(not(no_elf_tls))]\n-macro_rules! __scoped_thread_local_inner {\n-    ($t:ty) => {{\n-        #[cfg_attr(not(any(windows,\n-                           target_os = \"android\",\n-                           target_os = \"ios\",\n-                           target_os = \"netbsd\",\n-                           target_os = \"openbsd\",\n-                           target_arch = \"aarch64\")),\n-                   thread_local)]\n+        #[cfg_attr(target_thread_local, thread_local)]\n         static _KEY: $crate::thread::__ScopedKeyInner<$t> =\n             $crate::thread::__ScopedKeyInner::new();\n         fn _getit() -> &'static $crate::thread::__ScopedKeyInner<$t> { &_KEY }\n@@ -221,13 +198,7 @@ impl<T> ScopedKey<T> {\n     }\n }\n \n-#[cfg(not(any(windows,\n-              target_os = \"android\",\n-              target_os = \"ios\",\n-              target_os = \"netbsd\",\n-              target_os = \"openbsd\",\n-              target_arch = \"aarch64\",\n-              no_elf_tls)))]\n+#[cfg(target_thread_local)]\n #[doc(hidden)]\n mod imp {\n     use cell::Cell;\n@@ -246,13 +217,7 @@ mod imp {\n     }\n }\n \n-#[cfg(any(windows,\n-          target_os = \"android\",\n-          target_os = \"ios\",\n-          target_os = \"netbsd\",\n-          target_os = \"openbsd\",\n-          target_arch = \"aarch64\",\n-          no_elf_tls))]\n+#[cfg(not(target_thread_local))]\n #[doc(hidden)]\n mod imp {\n     use cell::Cell;"}]}