{"sha": "17856e8d56ea516a3bd369cca53d74ef269d4c2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ODU2ZThkNTZlYTUxNmEzYmQzNjljY2E1M2Q3NGVmMjY5ZDRjMmI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-03-13T22:13:46Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-03-13T22:13:46Z"}, "message": "Merge pull request #859 from solidsnack/master\n\nWrite non-output to stderr when there is output", "tree": {"sha": "a5ac5fc2bc7e1c5b8aaf6186e3fbc44494e0ed35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5ac5fc2bc7e1c5b8aaf6186e3fbc44494e0ed35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17856e8d56ea516a3bd369cca53d74ef269d4c2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17856e8d56ea516a3bd369cca53d74ef269d4c2b", "html_url": "https://github.com/rust-lang/rust/commit/17856e8d56ea516a3bd369cca53d74ef269d4c2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17856e8d56ea516a3bd369cca53d74ef269d4c2b/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fddb9814988f8e83003351c803ae09cd945cf4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fddb9814988f8e83003351c803ae09cd945cf4c", "html_url": "https://github.com/rust-lang/rust/commit/3fddb9814988f8e83003351c803ae09cd945cf4c"}, {"sha": "867b5074aa2d01ba72a2de89865fb7a7aa25a76a", "url": "https://api.github.com/repos/rust-lang/rust/commits/867b5074aa2d01ba72a2de89865fb7a7aa25a76a", "html_url": "https://github.com/rust-lang/rust/commit/867b5074aa2d01ba72a2de89865fb7a7aa25a76a"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "062c60e10659858f4d20c93f0d3cc316e4842d58", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/17856e8d56ea516a3bd369cca53d74ef269d4c2b/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17856e8d56ea516a3bd369cca53d74ef269d4c2b/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=17856e8d56ea516a3bd369cca53d74ef269d4c2b", "patch": "@@ -28,6 +28,15 @@ use std::str::FromStr;\n \n use getopts::{Matches, Options};\n \n+macro_rules! msg {\n+    ($($arg:tt)*) => (\n+        match writeln!(&mut ::std::io::stderr(), $($arg)* ) {\n+            Ok(_) => {},\n+            Err(x) => panic!(\"Unable to write to stderr: {}\", x),\n+        }\n+    )\n+}\n+\n /// Rustfmt operations.\n enum Operation {\n     /// Format files and their child modules.\n@@ -203,7 +212,7 @@ fn execute() -> i32 {\n                 path = path_tmp;\n             };\n             if let Some(path) = path.as_ref() {\n-                println!(\"Using rustfmt config file {}\", path.display());\n+                msg!(\"Using rustfmt config file {}\", path.display());\n             }\n             for file in files {\n                 // Check the file directory if the config-path could not be read or not provided\n@@ -213,9 +222,9 @@ fn execute() -> i32 {\n                                                                        for {}\",\n                                                                       file.display()));\n                     if let Some(path) = path_tmp.as_ref() {\n-                        println!(\"Using rustfmt config file {} for {}\",\n-                                 path.display(),\n-                                 file.display());\n+                        msg!(\"Using rustfmt config file {} for {}\",\n+                             path.display(),\n+                             file.display());\n                     }\n                     config = config_tmp;\n                 }"}]}