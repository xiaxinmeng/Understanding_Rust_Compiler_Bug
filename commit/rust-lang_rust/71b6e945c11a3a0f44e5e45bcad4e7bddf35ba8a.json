{"sha": "71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYjZlOTQ1YzExYTNhMGY0NGU1ZTQ1YmNhZDRlN2JkZGYzNWJhOGE=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-25T06:46:33Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:58Z"}, "message": "glue::trans_struct_drop -> adt", "tree": {"sha": "4017ccc738d00713d6e5902a8eb42aac8b41157d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4017ccc738d00713d6e5902a8eb42aac8b41157d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a", "html_url": "https://github.com/rust-lang/rust/commit/71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "html_url": "https://github.com/rust-lang/rust/commit/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "d38a04785b99b5a107359fa1c001af4915ed56ac", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=71b6e945c11a3a0f44e5e45bcad4e7bddf35ba8a", "patch": "@@ -19,6 +19,7 @@ use back::link::*;\n use driver::session;\n use lib;\n use lib::llvm::{llvm, ValueRef, TypeRef, True};\n+use middle::trans::adt;\n use middle::trans::base::*;\n use middle::trans::callee;\n use middle::trans::closure;\n@@ -447,10 +448,10 @@ pub fn make_free_glue(bcx: block, v: ValueRef, t: ty::t) {\n         match ty::ty_dtor(bcx.tcx(), did) {\n             ty::NoDtor => bcx,\n             ty::LegacyDtor(ref dt_id) => {\n-                trans_struct_drop(bcx, v, *dt_id, did, substs, false)\n+                trans_struct_drop(bcx, t, v, *dt_id, did, substs, false)\n             }\n             ty::TraitDtor(ref dt_id) => {\n-                trans_struct_drop(bcx, v, *dt_id, did, substs, true)\n+                trans_struct_drop(bcx, t, v, *dt_id, did, substs, true)\n             }\n         }\n       }\n@@ -460,6 +461,7 @@ pub fn make_free_glue(bcx: block, v: ValueRef, t: ty::t) {\n }\n \n pub fn trans_struct_drop(bcx: block,\n+                         t: ty::t,\n                          v0: ValueRef,\n                          dtor_did: ast::def_id,\n                          class_did: ast::def_id,\n@@ -500,11 +502,12 @@ pub fn trans_struct_drop(bcx: block,\n         Call(bcx, dtor_addr, args);\n \n         // Drop the fields\n+        let repr = adt::represent_type(bcx.ccx(), t);\n         let field_tys =\n             ty::struct_mutable_fields(bcx.tcx(), class_did,\n                                               substs);\n         for vec::eachi(field_tys) |i, fld| {\n-            let llfld_a = GEPi(bcx, v0, struct_field(i));\n+            let llfld_a = adt::trans_GEP(bcx, &repr, v0, 0, i);\n             bcx = drop_ty(bcx, llfld_a, fld.mt.ty);\n         }\n \n@@ -534,10 +537,10 @@ pub fn make_drop_glue(bcx: block, v0: ValueRef, t: ty::t) {\n         let tcx = bcx.tcx();\n         match ty::ty_dtor(tcx, did) {\n           ty::TraitDtor(dtor) => {\n-            trans_struct_drop(bcx, v0, dtor, did, substs, true)\n+            trans_struct_drop(bcx, t, v0, dtor, did, substs, true)\n           }\n           ty::LegacyDtor(dtor) => {\n-            trans_struct_drop(bcx, v0, dtor, did, substs, false)\n+            trans_struct_drop(bcx, t, v0, dtor, did, substs, false)\n           }\n           ty::NoDtor => {\n             // No dtor? Just the default case"}]}