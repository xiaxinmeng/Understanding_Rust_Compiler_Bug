{"sha": "bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "node_id": "C_kwDOAAsO6NoAKGJkMTQ2YzcyYWMyZmFmNmJiZjE4OWFkOTJkMDZlMGJjZDZjYzkyZmM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-26T18:22:32Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-27T17:02:17Z"}, "message": "Explicitly reject negative and reservation drop impls", "tree": {"sha": "3dd93051ad801fdc2d4a61ee2944480f7c401772", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dd93051ad801fdc2d4a61ee2944480f7c401772"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "html_url": "https://github.com/rust-lang/rust/commit/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce22733b973355573efd1e6294e585460e90e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce22733b973355573efd1e6294e585460e90e17", "html_url": "https://github.com/rust-lang/rust/commit/6ce22733b973355573efd1e6294e585460e90e17"}], "stats": {"total": 102, "additions": 74, "deletions": 28}, "files": [{"sha": "4c4af9b6908dc3f0d058926f208c361a562783f0", "filename": "compiler/rustc_hir_analysis/messages.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_hir_analysis%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_hir_analysis%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fmessages.ftl?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -276,3 +276,7 @@ hir_analysis_const_specialize = cannot specialize on const impl with non-const i\n hir_analysis_static_specialize = cannot specialize on `'static` lifetime\n \n hir_analysis_missing_tilde_const = missing `~const` qualifier for specialization\n+\n+hir_analysis_drop_impl_negative = negative `Drop` impls are not supported\n+\n+hir_analysis_drop_impl_reservation = reservation `Drop` impls are not supported"}, {"sha": "703e389a838a2294d968342a0968e9d49cb3a6b8", "filename": "compiler/rustc_hir_analysis/src/check/dropck.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -1,14 +1,16 @@\n // FIXME(@lcnr): Move this module out of `rustc_hir_analysis`.\n //\n // We don't do any drop checking during hir typeck.\n-use crate::hir::def_id::{DefId, LocalDefId};\n use rustc_errors::{struct_span_err, ErrorGuaranteed};\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::util::IgnoreRegions;\n use rustc_middle::ty::{self, Predicate, Ty, TyCtxt};\n \n+use crate::errors;\n+use crate::hir::def_id::{DefId, LocalDefId};\n+\n /// This function confirms that the `Drop` implementation identified by\n /// `drop_impl_did` is not any more specialized than the type it is\n /// attached to (Issue #8142).\n@@ -27,6 +29,19 @@ use rustc_middle::ty::{self, Predicate, Ty, TyCtxt};\n ///    cannot do `struct S<T>; impl<T:Clone> Drop for S<T> { ... }`).\n ///\n pub fn check_drop_impl(tcx: TyCtxt<'_>, drop_impl_did: DefId) -> Result<(), ErrorGuaranteed> {\n+    match tcx.impl_polarity(drop_impl_did) {\n+        ty::ImplPolarity::Positive => {}\n+        ty::ImplPolarity::Negative => {\n+            return Err(tcx.sess.emit_err(errors::DropImplPolarity::Negative {\n+                span: tcx.def_span(drop_impl_did),\n+            }));\n+        }\n+        ty::ImplPolarity::Reservation => {\n+            return Err(tcx.sess.emit_err(errors::DropImplPolarity::Reservation {\n+                span: tcx.def_span(drop_impl_did),\n+            }));\n+        }\n+    }\n     let dtor_self_type = tcx.type_of(drop_impl_did).subst_identity();\n     let dtor_predicates = tcx.predicates_of(drop_impl_did);\n     match dtor_self_type.kind() {"}, {"sha": "ba3039272f5f8a892b72f3d52796b71ed1b4d149", "filename": "compiler/rustc_hir_analysis/src/errors.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -815,3 +815,17 @@ pub(crate) struct MissingTildeConst {\n     #[primary_span]\n     pub span: Span,\n }\n+\n+#[derive(Diagnostic)]\n+pub(crate) enum DropImplPolarity {\n+    #[diag(hir_analysis_drop_impl_negative)]\n+    Negative {\n+        #[primary_span]\n+        span: Span,\n+    },\n+    #[diag(hir_analysis_drop_impl_reservation)]\n+    Reservation {\n+        #[primary_span]\n+        span: Span,\n+    },\n+}"}, {"sha": "e5b2d342452f33a5edd59a0933af3c1711e39bb3", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -360,16 +360,16 @@ impl<'tcx> TyCtxt<'tcx> {\n         let ty = self.type_of(adt_did).subst_identity();\n         let mut dtor_candidate = None;\n         self.for_each_relevant_impl(drop_trait, ty, |impl_did| {\n-            let Some(item_id) = self.associated_item_def_ids(impl_did).first() else {\n-                self.sess.delay_span_bug(self.def_span(impl_did), \"Drop impl without drop function\");\n-                return;\n-            };\n-\n             if validate(self, impl_did).is_err() {\n                 // Already `ErrorGuaranteed`, no need to delay a span bug here.\n                 return;\n             }\n \n+            let Some(item_id) = self.associated_item_def_ids(impl_did).first() else {\n+                self.sess.delay_span_bug(self.def_span(impl_did), \"Drop impl without drop function\");\n+                return;\n+            };\n+\n             if let Some((old_item_id, _)) = dtor_candidate {\n                 self.sess\n                     .struct_span_err(self.def_span(item_id), \"multiple drop impls found\")"}, {"sha": "3704a1a5a392c0113b0a29827aa2a62bb4768feb", "filename": "tests/ui/consts/const-block-const-bound.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fconsts%2Fconst-block-const-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fconsts%2Fconst-block-const-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fconst-block-const-bound.rs?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -11,15 +11,9 @@ impl Drop for UnconstDrop {\n     fn drop(&mut self) {}\n }\n \n-struct NonDrop;\n-\n-impl !Drop for NonDrop {}\n-\n fn main() {\n     const {\n         f(UnconstDrop);\n         //~^ ERROR can't drop\n-        f(NonDrop);\n-        //~^ ERROR can't drop\n     }\n }"}, {"sha": "caf24e7afcf456d4ad1bc8d499771c9fdcfde4ab", "filename": "tests/ui/consts/const-block-const-bound.stderr", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fconsts%2Fconst-block-const-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fconsts%2Fconst-block-const-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fconst-block-const-bound.stderr?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't drop `UnconstDrop` in const contexts\n-  --> $DIR/const-block-const-bound.rs:20:9\n+  --> $DIR/const-block-const-bound.rs:16:9\n    |\n LL |         f(UnconstDrop);\n    |         ^^^^^^^^^^^^^^ the trait `~const Destruct` is not implemented for `UnconstDrop`\n@@ -12,20 +12,6 @@ LL |         &f(UnconstDrop);\n LL |         &mut f(UnconstDrop);\n    |         ++++\n \n-error[E0277]: can't drop `NonDrop` in const contexts\n-  --> $DIR/const-block-const-bound.rs:22:9\n-   |\n-LL |         f(NonDrop);\n-   |         ^^^^^^^^^^ the trait `~const Destruct` is not implemented for `NonDrop`\n-   |\n-   = note: the trait bound `NonDrop: ~const Destruct` is not satisfied\n-help: consider borrowing here\n-   |\n-LL |         &f(NonDrop);\n-   |         +\n-LL |         &mut f(NonDrop);\n-   |         ++++\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "ae63632b55efd6caf225d42eb36396ab7a250e6b", "filename": "tests/ui/dropck/negative.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Fnegative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Fnegative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fnegative.rs?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -0,0 +1,7 @@\n+#![feature(negative_impls)]\n+\n+struct NonDrop;\n+impl !Drop for NonDrop {}\n+//~^ ERROR negative `Drop` impls are not supported\n+\n+fn main() {}"}, {"sha": "d613e30b5ea59f5e835d1919b29b8cfc6252f6a2", "filename": "tests/ui/dropck/negative.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Fnegative.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Fnegative.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fnegative.stderr?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -0,0 +1,8 @@\n+error: negative `Drop` impls are not supported\n+  --> $DIR/negative.rs:4:1\n+   |\n+LL | impl !Drop for NonDrop {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "f7199d4ec44074d63c02aaf3e228e9f31f2746ea", "filename": "tests/ui/dropck/reservation.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Freservation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Freservation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Freservation.rs?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -0,0 +1,10 @@\n+#![feature(rustc_attrs)]\n+\n+struct ReservedDrop;\n+#[rustc_reservation_impl = \"message\"]\n+impl Drop for ReservedDrop {\n+//~^ ERROR reservation `Drop` impls are not supported\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "19325d6ed4401775a382d95443c465453495e958", "filename": "tests/ui/dropck/reservation.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Freservation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc/tests%2Fui%2Fdropck%2Freservation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Freservation.stderr?ref=bd146c72ac2faf6bbf189ad92d06e0bcd6cc92fc", "patch": "@@ -0,0 +1,8 @@\n+error: reservation `Drop` impls are not supported\n+  --> $DIR/reservation.rs:5:1\n+   |\n+LL | impl Drop for ReservedDrop {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}