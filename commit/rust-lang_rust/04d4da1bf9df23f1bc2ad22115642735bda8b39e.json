{"sha": "04d4da1bf9df23f1bc2ad22115642735bda8b39e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZDRkYTFiZjlkZjIzZjFiYzJhZDIyMTE1NjQyNzM1YmRhOGIzOWU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-24T09:30:30Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-06-27T12:00:34Z"}, "message": "Update CodeMap tests after changing FileMap construction.", "tree": {"sha": "a2eb2ca8b81a4478c389a7e4d61dda4b851e93a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2eb2ca8b81a4478c389a7e4d61dda4b851e93a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04d4da1bf9df23f1bc2ad22115642735bda8b39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04d4da1bf9df23f1bc2ad22115642735bda8b39e", "html_url": "https://github.com/rust-lang/rust/commit/04d4da1bf9df23f1bc2ad22115642735bda8b39e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04d4da1bf9df23f1bc2ad22115642735bda8b39e/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "095a339bec62e81e38727d16cc8f275c6818061e", "url": "https://api.github.com/repos/rust-lang/rust/commits/095a339bec62e81e38727d16cc8f275c6818061e", "html_url": "https://github.com/rust-lang/rust/commit/095a339bec62e81e38727d16cc8f275c6818061e"}], "stats": {"total": 71, "additions": 10, "deletions": 61}, "files": [{"sha": "2aa2564b09740164ec13db445f22d7f3eb5e7212", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 10, "deletions": 61, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/04d4da1bf9df23f1bc2ad22115642735bda8b39e/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04d4da1bf9df23f1bc2ad22115642735bda8b39e/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=04d4da1bf9df23f1bc2ad22115642735bda8b39e", "patch": "@@ -1012,51 +1012,16 @@ impl FilePathMapping {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use std::borrow::Cow;\n     use rustc_data_structures::sync::Lrc;\n \n-    #[test]\n-    fn t1 () {\n-        let cm = CodeMap::new(FilePathMapping::empty());\n-        let fm = cm.new_filemap(PathBuf::from(\"blork.rs\").into(),\n-                                \"first line.\\nsecond line\".to_string());\n-        fm.next_line(BytePos(0));\n-        // Test we can get lines with partial line info.\n-        assert_eq!(fm.get_line(0), Some(Cow::from(\"first line.\")));\n-        // TESTING BROKEN BEHAVIOR: line break declared before actual line break.\n-        fm.next_line(BytePos(10));\n-        assert_eq!(fm.get_line(1), Some(Cow::from(\".\")));\n-        fm.next_line(BytePos(12));\n-        assert_eq!(fm.get_line(2), Some(Cow::from(\"second line\")));\n-    }\n-\n-    #[test]\n-    #[should_panic]\n-    fn t2 () {\n-        let cm = CodeMap::new(FilePathMapping::empty());\n-        let fm = cm.new_filemap(PathBuf::from(\"blork.rs\").into(),\n-                                \"first line.\\nsecond line\".to_string());\n-        // TESTING *REALLY* BROKEN BEHAVIOR:\n-        fm.next_line(BytePos(0));\n-        fm.next_line(BytePos(10));\n-        fm.next_line(BytePos(2));\n-    }\n-\n     fn init_code_map() -> CodeMap {\n         let cm = CodeMap::new(FilePathMapping::empty());\n-        let fm1 = cm.new_filemap(PathBuf::from(\"blork.rs\").into(),\n-                                 \"first line.\\nsecond line\".to_string());\n-        let fm2 = cm.new_filemap(PathBuf::from(\"empty.rs\").into(),\n-                                 \"\".to_string());\n-        let fm3 = cm.new_filemap(PathBuf::from(\"blork2.rs\").into(),\n-                                 \"first line.\\nsecond line\".to_string());\n-\n-        fm1.next_line(BytePos(0));\n-        fm1.next_line(BytePos(12));\n-        fm2.next_line(fm2.start_pos);\n-        fm3.next_line(fm3.start_pos);\n-        fm3.next_line(fm3.start_pos + BytePos(12));\n-\n+        cm.new_filemap(PathBuf::from(\"blork.rs\").into(),\n+                       \"first line.\\nsecond line\".to_string());\n+        cm.new_filemap(PathBuf::from(\"empty.rs\").into(),\n+                       \"\".to_string());\n+        cm.new_filemap(PathBuf::from(\"blork2.rs\").into(),\n+                       \"first line.\\nsecond line\".to_string());\n         cm\n     }\n \n@@ -1109,26 +1074,10 @@ mod tests {\n     fn init_code_map_mbc() -> CodeMap {\n         let cm = CodeMap::new(FilePathMapping::empty());\n         // \u20ac is a three byte utf8 char.\n-        let fm1 =\n-            cm.new_filemap(PathBuf::from(\"blork.rs\").into(),\n-                           \"fir\u20acst \u20ac\u20ac\u20ac\u20ac line.\\nsecond line\".to_string());\n-        let fm2 = cm.new_filemap(PathBuf::from(\"blork2.rs\").into(),\n-                                 \"first line\u20ac\u20ac.\\n\u20ac second line\".to_string());\n-\n-        fm1.next_line(BytePos(0));\n-        fm1.next_line(BytePos(28));\n-        fm2.next_line(fm2.start_pos);\n-        fm2.next_line(fm2.start_pos + BytePos(20));\n-\n-        fm1.record_multibyte_char(BytePos(3), 3);\n-        fm1.record_multibyte_char(BytePos(9), 3);\n-        fm1.record_multibyte_char(BytePos(12), 3);\n-        fm1.record_multibyte_char(BytePos(15), 3);\n-        fm1.record_multibyte_char(BytePos(18), 3);\n-        fm2.record_multibyte_char(fm2.start_pos + BytePos(10), 3);\n-        fm2.record_multibyte_char(fm2.start_pos + BytePos(13), 3);\n-        fm2.record_multibyte_char(fm2.start_pos + BytePos(18), 3);\n-\n+        cm.new_filemap(PathBuf::from(\"blork.rs\").into(),\n+                       \"fir\u20acst \u20ac\u20ac\u20ac\u20ac line.\\nsecond line\".to_string());\n+        cm.new_filemap(PathBuf::from(\"blork2.rs\").into(),\n+                       \"first line\u20ac\u20ac.\\n\u20ac second line\".to_string());\n         cm\n     }\n "}]}