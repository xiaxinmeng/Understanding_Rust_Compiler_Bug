{"sha": "437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzN2M2NmNjZTViMTNlMThmYTdhZTA5YTRiYjdmYTlkODZiMDFlYzM=", "commit": {"author": {"name": "Lin Clark", "email": "lclark@mozilla.com", "date": "2016-12-01T02:32:14Z"}, "committer": {"name": "Lin Clark", "email": "lclark@mozilla.com", "date": "2017-01-05T17:17:27Z"}, "message": "Add error explanation for E0328.", "tree": {"sha": "bec5b95ec7bd1d24892cf80fc5e12cf114f27c97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bec5b95ec7bd1d24892cf80fc5e12cf114f27c97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3", "html_url": "https://github.com/rust-lang/rust/commit/437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3/comments", "author": {"login": "linclark", "id": 105464, "node_id": "MDQ6VXNlcjEwNTQ2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/105464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linclark", "html_url": "https://github.com/linclark", "followers_url": "https://api.github.com/users/linclark/followers", "following_url": "https://api.github.com/users/linclark/following{/other_user}", "gists_url": "https://api.github.com/users/linclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/linclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linclark/subscriptions", "organizations_url": "https://api.github.com/users/linclark/orgs", "repos_url": "https://api.github.com/users/linclark/repos", "events_url": "https://api.github.com/users/linclark/events{/privacy}", "received_events_url": "https://api.github.com/users/linclark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "linclark", "id": 105464, "node_id": "MDQ6VXNlcjEwNTQ2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/105464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linclark", "html_url": "https://github.com/linclark", "followers_url": "https://api.github.com/users/linclark/followers", "following_url": "https://api.github.com/users/linclark/following{/other_user}", "gists_url": "https://api.github.com/users/linclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/linclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linclark/subscriptions", "organizations_url": "https://api.github.com/users/linclark/orgs", "repos_url": "https://api.github.com/users/linclark/repos", "events_url": "https://api.github.com/users/linclark/events{/privacy}", "received_events_url": "https://api.github.com/users/linclark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74e5b7d96af721b98474f6d4982b5eb594cd022c", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e5b7d96af721b98474f6d4982b5eb594cd022c", "html_url": "https://github.com/rust-lang/rust/commit/74e5b7d96af721b98474f6d4982b5eb594cd022c"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "1a87a5e709b21bfc97fc18ca173095bdcd34b4fd", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=437c66cce5b13e18fa7ae09a4bb7fa9d86b01ec3", "patch": "@@ -3087,6 +3087,29 @@ impl Foo for Bar {\n ```\n \"##,\n \n+E0328: r##\"\n+The Unsize trait should not be implemented directly. All implementations of\n+Unsize are provided automatically by the compiler.\n+\n+Here's an example of this error:\n+\n+```compile_fail,E0328\n+#![feature(unsize)]\n+\n+use std::marker::Unsize;\n+\n+pub struct MyType;\n+\n+impl<T> Unsize<T> for MyType {}\n+```\n+\n+If you are defining your own smart pointer type and would like to enable\n+conversion from a sized to an unsized type with the [DST coercion system]\n+(https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md), use\n+[`CoerceUnsized`](https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html)\n+instead.\n+\"##,\n+\n E0329: r##\"\n An attempt was made to access an associated constant through either a generic\n type parameter or `Self`. This is not supported yet. An example causing this\n@@ -4195,7 +4218,6 @@ register_diagnostics! {\n //  E0249,\n //  E0319, // trait impls for defaulted traits allowed just for structs/enums\n     E0320, // recursive overflow during dropck\n-    E0328, // cannot implement Unsize explicitly\n //  E0372, // coherence not object safe\n     E0377, // the trait `CoerceUnsized` may only be implemented for a coercion\n            // between structures with the same definition"}]}