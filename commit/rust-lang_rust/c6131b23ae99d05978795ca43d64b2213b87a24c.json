{"sha": "c6131b23ae99d05978795ca43d64b2213b87a24c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MTMxYjIzYWU5OWQwNTk3ODc5NWNhNDNkNjRiMjIxM2I4N2EyNGM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-27T09:49:08Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-07-04T10:53:12Z"}, "message": "rename hir::map::opt_local_def_id*", "tree": {"sha": "9f876127a579b3ee2834d90446b0e287425677ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f876127a579b3ee2834d90446b0e287425677ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6131b23ae99d05978795ca43d64b2213b87a24c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6131b23ae99d05978795ca43d64b2213b87a24c", "html_url": "https://github.com/rust-lang/rust/commit/c6131b23ae99d05978795ca43d64b2213b87a24c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6131b23ae99d05978795ca43d64b2213b87a24c/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37d7e1f22a9da3f31c117d0def02c5ea8e23a096", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d7e1f22a9da3f31c117d0def02c5ea8e23a096", "html_url": "https://github.com/rust-lang/rust/commit/37d7e1f22a9da3f31c117d0def02c5ea8e23a096"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "48ef4acca47aa4e73ab96483409ab8de7a6be3ca", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=c6131b23ae99d05978795ca43d64b2213b87a24c", "patch": "@@ -220,7 +220,7 @@ impl<'hir> Map<'hir> {\n     }\n \n     pub fn def_path_from_hir_id(&self, id: HirId) -> Option<DefPath> {\n-        self.opt_local_def_id_from_hir_id(id).map(|def_id| {\n+        self.opt_local_def_id(id).map(|def_id| {\n             self.def_path(def_id)\n         })\n     }\n@@ -232,7 +232,7 @@ impl<'hir> Map<'hir> {\n \n     #[inline]\n     pub fn local_def_id_from_node_id(&self, node: NodeId) -> DefId {\n-        self.opt_local_def_id(node).unwrap_or_else(|| {\n+        self.opt_local_def_id_from_node_id(node).unwrap_or_else(|| {\n             let hir_id = self.node_to_hir_id(node);\n             bug!(\"local_def_id_from_node_id: no entry for `{}`, which has a map of `{:?}`\",\n                  node, self.find_entry(hir_id))\n@@ -248,13 +248,13 @@ impl<'hir> Map<'hir> {\n     }\n \n     #[inline]\n-    pub fn opt_local_def_id_from_hir_id(&self, hir_id: HirId) -> Option<DefId> {\n+    pub fn opt_local_def_id(&self, hir_id: HirId) -> Option<DefId> {\n         let node_id = self.hir_to_node_id(hir_id);\n         self.definitions.opt_local_def_id(node_id)\n     }\n \n     #[inline]\n-    pub fn opt_local_def_id(&self, node: NodeId) -> Option<DefId> {\n+    pub fn opt_local_def_id_from_node_id(&self, node: NodeId) -> Option<DefId> {\n         self.definitions.opt_local_def_id(node)\n     }\n "}, {"sha": "dfdf560d419060a39ef922a31d3a5ba0cc192a93", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=c6131b23ae99d05978795ca43d64b2213b87a24c", "patch": "@@ -1217,7 +1217,7 @@ impl<'l, 'tcx, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n         let access = access_from!(self.save_ctxt, root_item, hir_id);\n \n         // The parent `DefId` of a given use tree is always the enclosing item.\n-        let parent = self.save_ctxt.tcx.hir().opt_local_def_id(id)\n+        let parent = self.save_ctxt.tcx.hir().opt_local_def_id_from_node_id(id)\n             .and_then(|id| self.save_ctxt.tcx.parent(id))\n             .map(id_from_def_id);\n \n@@ -1367,7 +1367,7 @@ impl<'l, 'tcx, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tcx, '\n                 let name_span = item.ident.span;\n                 if !self.span.filter_generated(name_span) {\n                     let span = self.span_from_span(name_span);\n-                    let parent = self.save_ctxt.tcx.hir().opt_local_def_id(item.id)\n+                    let parent = self.save_ctxt.tcx.hir().opt_local_def_id_from_node_id(item.id)\n                         .and_then(|id| self.save_ctxt.tcx.parent(id))\n                         .map(id_from_def_id);\n                     self.dumper.import("}, {"sha": "8982405ea5d79fccc22124e32eb8e0ce62fac1e1", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=c6131b23ae99d05978795ca43d64b2213b87a24c", "patch": "@@ -1193,7 +1193,7 @@ fn id_from_def_id(id: DefId) -> rls_data::Id {\n }\n \n fn id_from_node_id(id: NodeId, scx: &SaveContext<'_, '_>) -> rls_data::Id {\n-    let def_id = scx.tcx.hir().opt_local_def_id(id);\n+    let def_id = scx.tcx.hir().opt_local_def_id_from_node_id(id);\n     def_id.map(|id| id_from_def_id(id)).unwrap_or_else(|| {\n         // Create a *fake* `DefId` out of a `NodeId` by subtracting the `NodeId`\n         // out of the maximum u32 value. This will work unless you have *billions*"}, {"sha": "fa5faaf3ff56828264c2f6bd0c2b62be1ad0906f", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6131b23ae99d05978795ca43d64b2213b87a24c/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=c6131b23ae99d05978795ca43d64b2213b87a24c", "patch": "@@ -66,12 +66,12 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n     }\n \n     fn stability(&self, id: hir::HirId) -> Option<attr::Stability> {\n-        self.cx.tcx.hir().opt_local_def_id_from_hir_id(id)\n+        self.cx.tcx.hir().opt_local_def_id(id)\n             .and_then(|def_id| self.cx.tcx.lookup_stability(def_id)).cloned()\n     }\n \n     fn deprecation(&self, id: hir::HirId) -> Option<attr::Deprecation> {\n-        self.cx.tcx.hir().opt_local_def_id_from_hir_id(id)\n+        self.cx.tcx.hir().opt_local_def_id(id)\n             .and_then(|def_id| self.cx.tcx.lookup_deprecation(def_id))\n     }\n "}]}