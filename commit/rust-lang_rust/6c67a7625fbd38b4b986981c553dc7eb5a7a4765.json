{"sha": "6c67a7625fbd38b4b986981c553dc7eb5a7a4765", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNjdhNzYyNWZiZDM4YjRiOTg2OTgxYzU1M2RjN2ViNWE3YTQ3NjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-02T10:05:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-02T10:05:43Z"}, "message": "pre_exec: expand docs", "tree": {"sha": "1b3268b02fb4bc6c32ab7535d7819d29ff015b86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3268b02fb4bc6c32ab7535d7819d29ff015b86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c67a7625fbd38b4b986981c553dc7eb5a7a4765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c67a7625fbd38b4b986981c553dc7eb5a7a4765", "html_url": "https://github.com/rust-lang/rust/commit/6c67a7625fbd38b4b986981c553dc7eb5a7a4765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c67a7625fbd38b4b986981c553dc7eb5a7a4765/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbbf8a7ff932b599227b27d34e9b015374f5b37a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbbf8a7ff932b599227b27d34e9b015374f5b37a", "html_url": "https://github.com/rust-lang/rust/commit/cbbf8a7ff932b599227b27d34e9b015374f5b37a"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "55824dc4c059f98a72bd4f80b1efbbfd1f10c18f", "filename": "src/libstd/sys/redox/ext/process.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6c67a7625fbd38b4b986981c553dc7eb5a7a4765/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c67a7625fbd38b4b986981c553dc7eb5a7a4765/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fprocess.rs?ref=6c67a7625fbd38b4b986981c553dc7eb5a7a4765", "patch": "@@ -48,7 +48,8 @@ pub trait CommandExt {\n     /// This also means that all resources such as file descriptors and\n     /// memory-mapped regions got duplicated. It is your responsibility to make\n     /// sure that the closure does not violate library invariants by making\n-    /// invalid use of these duplicates.\n+    /// invalid use of these duplicates.  Moreover, POSIX demands that you only\n+    /// perform operations that are explicitly documented as async-signal-safe.\n     ///\n     /// When this closure is run, aspects such as the stdio file descriptors and\n     /// working directory have successfully been changed, so output to these\n@@ -60,8 +61,8 @@ pub trait CommandExt {\n     /// Schedules a closure to be run just before the `exec` function is\n     /// invoked.\n     ///\n-    /// This method should be unsafe, so it got deprecated in favor of the\n-    /// unsafe [`pre_exec`].\n+    /// This method is stable and usable, but it should be unsafe. To fix\n+    /// that, it got deprecated in favor of the unsafe [`pre_exec`].\n     ///\n     /// [`pre_exec`]: #tymethod.pre_exec\n     #[stable(feature = \"process_exec\", since = \"1.15.0\")]"}, {"sha": "ac0abc761ffb5846ef091f9a046d6ccd008b6dbb", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6c67a7625fbd38b4b986981c553dc7eb5a7a4765/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c67a7625fbd38b4b986981c553dc7eb5a7a4765/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=6c67a7625fbd38b4b986981c553dc7eb5a7a4765", "patch": "@@ -48,7 +48,8 @@ pub trait CommandExt {\n     /// This also means that all resources such as file descriptors and\n     /// memory-mapped regions got duplicated. It is your responsibility to make\n     /// sure that the closure does not violate library invariants by making\n-    /// invalid use of these duplicates.\n+    /// invalid use of these duplicates.  Moreover, POSIX demands that you only\n+    /// perform operations that are explicitly documented as async-signal-safe.\n     ///\n     /// When this closure is run, aspects such as the stdio file descriptors and\n     /// working directory have successfully been changed, so output to these\n@@ -60,8 +61,8 @@ pub trait CommandExt {\n     /// Schedules a closure to be run just before the `exec` function is\n     /// invoked.\n     ///\n-    /// This method should be unsafe, so it got deprecated in favor of the\n-    /// unsafe [`pre_exec`].\n+    /// This method is stable and usable, but it should be unsafe. To fix\n+    /// that, it got deprecated in favor of the unsafe [`pre_exec`].\n     ///\n     /// [`pre_exec`]: #tymethod.pre_exec\n     #[stable(feature = \"process_exec\", since = \"1.15.0\")]"}]}