{"sha": "1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExOTBmN2NkZjdhNjJlMjVjOWE4ZWFmNThlMDkwNjg0OTY5MmJmMmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-12T08:40:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-12T08:40:17Z"}, "message": "Auto merge of #57532 - Centril:stabilize-2175, r=varkor\n\nStabilize #![feature(if_while_or_patterns)]\n\nr? @varkor\n\nPer https://github.com/rust-lang/rust/issues/56212#issue-384085857.\nLeading `|` is also accepted per the comment in the stabilization proposal.", "tree": {"sha": "ded178d6a40bf214117f545d8c3f614b6b438d56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded178d6a40bf214117f545d8c3f614b6b438d56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "html_url": "https://github.com/rust-lang/rust/commit/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17", "html_url": "https://github.com/rust-lang/rust/commit/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17"}, {"sha": "561483e4e84405f832ada8f9435cd8c471139afb", "url": "https://api.github.com/repos/rust-lang/rust/commits/561483e4e84405f832ada8f9435cd8c471139afb", "html_url": "https://github.com/rust-lang/rust/commit/561483e4e84405f832ada8f9435cd8c471139afb"}], "stats": {"total": 62, "additions": 18, "deletions": 44}, "files": [{"sha": "9395da60b3886f0d1debb676f1dfcf445e25f2bf", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "patch": "@@ -24,7 +24,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(unicode_internals)]\n #![feature(step_trait)]\n #![feature(slice_concat_ext)]\n-#![feature(if_while_or_patterns)]\n+#![cfg_attr(stage0, feature(if_while_or_patterns))]\n #![feature(try_from)]\n #![feature(reverse_bits)]\n #![cfg_attr(stage0, feature(underscore_imports))]"}, {"sha": "45b3ba604c62f8e5bfa2c54810ef916fb26174fc", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "patch": "@@ -384,9 +384,6 @@ declare_features! (\n     // Infer static outlives requirements (RFC 2093).\n     (active, infer_static_outlives_requirements, \"1.26.0\", Some(54185), None),\n \n-    // Multiple patterns with `|` in `if let` and `while let`.\n-    (active, if_while_or_patterns, \"1.26.0\", Some(48215), None),\n-\n     // Allows macro invocations in `extern {}` blocks.\n     (active, macros_in_extern, \"1.27.0\", Some(49476), None),\n \n@@ -688,6 +685,8 @@ declare_features! (\n     (accepted, min_const_unsafe_fn, \"1.33.0\", Some(55607), None),\n     // `#[cfg_attr(predicate, multiple, attributes, here)]`\n     (accepted, cfg_attr_multi, \"1.33.0\", Some(54881), None),\n+    // Top level or-patterns (`p | q`) in `if let` and `while let`.\n+    (accepted, if_while_or_patterns, \"1.33.0\", Some(48215), None),\n );\n \n // If you change this, please modify `src/doc/unstable-book` as well. You must\n@@ -1701,12 +1700,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             ast::ExprKind::TryBlock(_) => {\n                 gate_feature_post!(&self, try_blocks, e.span, \"`try` expression is experimental\");\n             }\n-            ast::ExprKind::IfLet(ref pats, ..) | ast::ExprKind::WhileLet(ref pats, ..) => {\n-                if pats.len() > 1 {\n-                    gate_feature_post!(&self, if_while_or_patterns, e.span,\n-                                    \"multiple patterns in `if let` and `while let` are unstable\");\n-                }\n-            }\n             ast::ExprKind::Block(_, opt_label) => {\n                 if let Some(label) = opt_label {\n                     gate_feature_post!(&self, label_break_value, label.ident.span,"}, {"sha": "b90eeaca54b9777ad09f3a4b02538971318de24f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "patch": "@@ -3660,8 +3660,6 @@ impl<'a> Parser<'a> {\n         maybe_whole!(self, NtArm, |x| x);\n \n         let attrs = self.parse_outer_attributes()?;\n-        // Allow a '|' before the pats (RFC 1925)\n-        self.eat(&token::BinOp(token::Or));\n         let pats = self.parse_pats()?;\n         let guard = if self.eat_keyword(keywords::If) {\n             Some(Guard::If(self.parse_expr()?))\n@@ -3768,6 +3766,9 @@ impl<'a> Parser<'a> {\n \n     /// Parse patterns, separated by '|' s\n     fn parse_pats(&mut self) -> PResult<'a, Vec<P<Pat>>> {\n+        // Allow a '|' before the pats (RFC 1925 + RFC 2530)\n+        self.eat(&token::BinOp(token::Or));\n+\n         let mut pats = Vec::new();\n         loop {\n             pats.push(self.parse_top_level_pat()?);"}, {"sha": "22f04c58f3b3c3c35865633f3420fe405efd7deb", "filename": "src/test/run-pass/rfcs/rfc-2175-or-if-while-let/basic.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Ftest%2Frun-pass%2Frfcs%2Frfc-2175-or-if-while-let%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1190f7cdf7a62e25c9a8eaf58e0906849692bf2b/src%2Ftest%2Frun-pass%2Frfcs%2Frfc-2175-or-if-while-let%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfcs%2Frfc-2175-or-if-while-let%2Fbasic.rs?ref=1190f7cdf7a62e25c9a8eaf58e0906849692bf2b", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n #![allow(dead_code)]\n-#![feature(if_while_or_patterns)]\n \n enum E {\n     V(u8),\n@@ -19,4 +18,16 @@ fn main() {\n         assert_eq!(x, 10);\n         e = W;\n     }\n+\n+    // Accept leading `|`:\n+\n+    let mut e = V(10);\n+\n+    if let | V(x) | U(x) = e {\n+        assert_eq!(x, 10);\n+    }\n+    while let | V(x) | U(x) = e {\n+        assert_eq!(x, 10);\n+        e = W;\n+    }\n }"}, {"sha": "233185f92e3f50bc5d19d847f74db55678b895ab", "filename": "src/test/ui/feature-gates/feature-gate-if_while_or_patterns.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-if_while_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-if_while_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-if_while_or_patterns.rs?ref=0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17", "patch": "@@ -1,8 +0,0 @@\n-fn main() {\n-    if let 0 | 1 = 0 { //~ ERROR multiple patterns in `if let` and `while let` are unstable\n-        ;\n-    }\n-    while let 0 | 1 = 1 { //~ ERROR multiple patterns in `if let` and `while let` are unstable\n-        break;\n-    }\n-}"}, {"sha": "ff991819a92186a9aa1c8cf008ae72c5e0c7753e", "filename": "src/test/ui/feature-gates/feature-gate-if_while_or_patterns.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-if_while_or_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-if_while_or_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-if_while_or_patterns.stderr?ref=0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17", "patch": "@@ -1,23 +0,0 @@\n-error[E0658]: multiple patterns in `if let` and `while let` are unstable (see issue #48215)\n-  --> $DIR/feature-gate-if_while_or_patterns.rs:2:5\n-   |\n-LL | /     if let 0 | 1 = 0 { //~ ERROR multiple patterns in `if let` and `while let` are unstable\n-LL | |         ;\n-LL | |     }\n-   | |_____^\n-   |\n-   = help: add #![feature(if_while_or_patterns)] to the crate attributes to enable\n-\n-error[E0658]: multiple patterns in `if let` and `while let` are unstable (see issue #48215)\n-  --> $DIR/feature-gate-if_while_or_patterns.rs:5:5\n-   |\n-LL | /     while let 0 | 1 = 1 { //~ ERROR multiple patterns in `if let` and `while let` are unstable\n-LL | |         break;\n-LL | |     }\n-   | |_____^\n-   |\n-   = help: add #![feature(if_while_or_patterns)] to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}]}