{"sha": "23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYmNlYTQyNDllOGM1Y2Y3MmZhNzYzYzAyMDc5YjM1ZDRlYjhjMmQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-03-07T22:05:52Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-03-07T22:17:10Z"}, "message": "Add help suggesting `matches` to `let_chains` lint", "tree": {"sha": "deb6b24e7a5b2f02900424661c68483d861b26c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/deb6b24e7a5b2f02900424661c68483d861b26c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "html_url": "https://github.com/rust-lang/rust/commit/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e62a54334445cd806bfc7bb9a7a41b63413fbedc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e62a54334445cd806bfc7bb9a7a41b63413fbedc", "html_url": "https://github.com/rust-lang/rust/commit/e62a54334445cd806bfc7bb9a7a41b63413fbedc"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "e13e9bdf96b1046e36ad1b589e20810070195821", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "patch": "@@ -639,7 +639,11 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n         };\n     }\n     gate_all!(if_let_guard, \"`if let` guards are experimental\");\n-    gate_all!(let_chains, \"`let` expressions in this position are experimental\");\n+    gate_all!(\n+        let_chains,\n+        \"`let` expressions in this position are experimental\",\n+        \"you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\"\n+    );\n     gate_all!(\n         async_closure,\n         \"async closures are unstable\","}, {"sha": "2b71026dc4bd52a88664e622b8ea4312d9abce13", "filename": "src/test/ui/rfc-2294-if-let-guard/feature-gate.stderr", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr?ref=23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "patch": "@@ -33,6 +33,7 @@ LL |         () if (let 0 = 1) => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:14:18\n@@ -42,6 +43,7 @@ LL |         () if (((let 0 = 1))) => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:18:23\n@@ -51,6 +53,7 @@ LL |         () if true && let 0 = 1 => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:22:15\n@@ -60,6 +63,7 @@ LL |         () if let 0 = 1 && true => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:26:16\n@@ -69,6 +73,7 @@ LL |         () if (let 0 = 1) && true => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:30:24\n@@ -78,6 +83,7 @@ LL |         () if true && (let 0 = 1) => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:34:16\n@@ -87,6 +93,7 @@ LL |         () if (let 0 = 1) && (let 0 = 1) => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:34:31\n@@ -96,6 +103,7 @@ LL |         () if (let 0 = 1) && (let 0 = 1) => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:40:15\n@@ -105,6 +113,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:40:28\n@@ -114,6 +123,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:40:42\n@@ -123,6 +133,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:40:55\n@@ -132,6 +143,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:40:68\n@@ -141,6 +153,7 @@ LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 =\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:52:15\n@@ -150,6 +163,7 @@ LL |         () if let Range { start: _, end: _ } = (true..true) && false => {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:68:16\n@@ -159,6 +173,7 @@ LL |     use_expr!((let 0 = 1 && 0 == 0));\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:71:16\n@@ -168,6 +183,7 @@ LL |     use_expr!((let 0 = 1));\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error: `let` expressions are not supported here\n   --> $DIR/feature-gate.rs:10:16"}, {"sha": "96131b38db923fe4715664016f904a0e81103579", "filename": "src/test/ui/rfc-2497-if-let-chains/feature-gate.stderr", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23bcea4249e8c5cf72fa763c02079b35d4eb8c2d/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr?ref=23bcea4249e8c5cf72fa763c02079b35d4eb8c2d", "patch": "@@ -15,6 +15,7 @@ LL |     if (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:18:11\n@@ -24,6 +25,7 @@ LL |     if (((let 0 = 1))) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:22:16\n@@ -33,6 +35,7 @@ LL |     if true && let 0 = 1 {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:26:8\n@@ -42,6 +45,7 @@ LL |     if let 0 = 1 && true {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:30:9\n@@ -51,6 +55,7 @@ LL |     if (let 0 = 1) && true {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:34:17\n@@ -60,6 +65,7 @@ LL |     if true && (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:38:9\n@@ -69,6 +75,7 @@ LL |     if (let 0 = 1) && (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:38:24\n@@ -78,6 +85,7 @@ LL |     if (let 0 = 1) && (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:8\n@@ -87,6 +95,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:21\n@@ -96,6 +105,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:35\n@@ -105,6 +115,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:48\n@@ -114,6 +125,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:61\n@@ -123,6 +135,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:56:8\n@@ -132,6 +145,7 @@ LL |     if let Range { start: _, end: _ } = (true..true) && false {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:64:12\n@@ -141,6 +155,7 @@ LL |     while (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:68:14\n@@ -150,6 +165,7 @@ LL |     while (((let 0 = 1))) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:72:19\n@@ -159,6 +175,7 @@ LL |     while true && let 0 = 1 {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:76:11\n@@ -168,6 +185,7 @@ LL |     while let 0 = 1 && true {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:80:12\n@@ -177,6 +195,7 @@ LL |     while (let 0 = 1) && true {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:84:20\n@@ -186,6 +205,7 @@ LL |     while true && (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:88:12\n@@ -195,6 +215,7 @@ LL |     while (let 0 = 1) && (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:88:27\n@@ -204,6 +225,7 @@ LL |     while (let 0 = 1) && (let 0 = 1) {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:11\n@@ -213,6 +235,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:24\n@@ -222,6 +245,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:38\n@@ -231,6 +255,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:51\n@@ -240,6 +265,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:64\n@@ -249,6 +275,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:106:11\n@@ -258,6 +285,7 @@ LL |     while let Range { start: _, end: _ } = (true..true) && false {}\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:131:20\n@@ -267,6 +295,7 @@ LL |     #[cfg(FALSE)] (let 0 = 1);\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:114:17\n@@ -276,6 +305,7 @@ LL |     noop_expr!((let 0 = 1));\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:123:16\n@@ -285,6 +315,7 @@ LL |     use_expr!((let 0 = 1 && 0 == 0));\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:127:16\n@@ -294,6 +325,7 @@ LL |     use_expr!((let 0 = 1));\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n+   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`\n \n error: invalid parentheses around `let` expression in `if let`\n   --> $DIR/feature-gate.rs:14:8"}]}