{"sha": "8f811fe12f20e6f969490d2db9e05319d6856721", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmODExZmUxMmYyMGU2Zjk2OTQ5MGQyZGI5ZTA1MzE5ZDY4NTY3MjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-31T09:16:50Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-31T09:16:50Z"}, "message": "update README", "tree": {"sha": "300627a227826189ee33ac694ac8f6e50be96716", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/300627a227826189ee33ac694ac8f6e50be96716"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f811fe12f20e6f969490d2db9e05319d6856721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f811fe12f20e6f969490d2db9e05319d6856721", "html_url": "https://github.com/rust-lang/rust/commit/8f811fe12f20e6f969490d2db9e05319d6856721", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f811fe12f20e6f969490d2db9e05319d6856721/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd256448d5483bb8ad6200aada68639a14ae9543", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd256448d5483bb8ad6200aada68639a14ae9543", "html_url": "https://github.com/rust-lang/rust/commit/cd256448d5483bb8ad6200aada68639a14ae9543"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "a905c2aeffb72f2f2a8603481173ed5477866d21", "filename": "README.md", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8f811fe12f20e6f969490d2db9e05319d6856721/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8f811fe12f20e6f969490d2db9e05319d6856721/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8f811fe12f20e6f969490d2db9e05319d6856721", "patch": "@@ -114,7 +114,7 @@ Several `-Z` flags are relevant for miri:\n \n Since the heart of Miri (the main interpreter engine) lives in rustc, working on\n Miri will often require using a locally built rustc. This includes getting a\n-trace of the execution, as distributed rustc has `trace!` disabled.\n+trace of the execution, as distributed rustc has `debug!` and `trace!` disabled.\n \n The first-time setup for a local rustc looks as follows:\n ```\n@@ -130,14 +130,28 @@ rustup override set custom\n ```\n The `build` step can take 30 minutes and more.\n \n-Now you can `cargo build` Miri, and you can `cargo test --tests`.  (`--tests`\n-is needed to skip doctests because we have not built rustdoc for your custom\n-toolchain.) You can also set `RUST_LOG=rustc_mir::interpret=trace` as\n-environment variable to get a step-by-step trace.\n+Now you can `cargo build` Miri, and you can `cargo test` it.  But the key point\n+is, you can now run Miri with a trace of all execution steps:\n+\n+```sh\n+MIRI_LOG=debug cargo run tests/run-pass/vecs.rs\n+```\n+\n+Setting `MIRI_LOG` like this will configure logging for miri itself as well as\n+the `rustc::mir::interpret` and `rustc_mir::interpret` modules in rustc.  You\n+can also do more targeted configuration, e.g. to debug the stacked borrows\n+implementation:\n+\n+```sh\n+MIRI_LOG=miri::stacked_borrows=trace,rustc_mir::interpret=debug cargo run tests/run-pass/vecs.rs\n+```\n+\n+In addition, you can set `MIRI_BACKTRACE=1` to get a backtrace of where an\n+evaluation error was originally created.\n \n If you changed something in rustc and want to re-build, run\n ```\n-./x.py build src/rustc --keep-stage 0\n+./x.py --keep-stage 0 build src/rustc\n ```\n This avoids rebuilding the entire stage 0, which can save a lot of time.\n "}]}