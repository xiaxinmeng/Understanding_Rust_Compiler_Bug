{"sha": "7677d1f771525606af256e2972cb7116d8fde99f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NzdkMWY3NzE1MjU2MDZhZjI1NmUyOTcyY2I3MTE2ZDhmZGU5OWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-27T20:18:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-27T20:18:25Z"}, "message": "const_prop: only call error_to_const_error if we are actually showing something", "tree": {"sha": "cbf8c5e1e8583b34491e2a3777a64f10ce5f68c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbf8c5e1e8583b34491e2a3777a64f10ce5f68c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7677d1f771525606af256e2972cb7116d8fde99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7677d1f771525606af256e2972cb7116d8fde99f", "html_url": "https://github.com/rust-lang/rust/commit/7677d1f771525606af256e2972cb7116d8fde99f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7677d1f771525606af256e2972cb7116d8fde99f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53df91a9b24ad999e7ca896447af6f5f74fe43bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/53df91a9b24ad999e7ca896447af6f5f74fe43bc", "html_url": "https://github.com/rust-lang/rust/commit/53df91a9b24ad999e7ca896447af6f5f74fe43bc"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "5aa487d9016635ef1cc290b3cbd08fe07543c868", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7677d1f771525606af256e2972cb7116d8fde99f/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7677d1f771525606af256e2972cb7116d8fde99f/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=7677d1f771525606af256e2972cb7116d8fde99f", "patch": "@@ -519,6 +519,9 @@ pub fn const_variant_index<'tcx>(\n     ecx.read_discriminant(op).unwrap().1\n }\n \n+/// Turn an interpreter error into something to report to the user.\n+/// As a side-effect, if RUSTC_CTFE_BACKTRACE is set, this prints the backtrace.\n+/// Should be called only if the error is actually going to to be reported!\n pub fn error_to_const_error<'mir, 'tcx>(\n     ecx: &InterpCx<'mir, 'tcx, CompileTimeInterpreter<'mir, 'tcx>>,\n     mut error: InterpErrorInfo<'tcx>,"}, {"sha": "f261fdc268b5b3da6d262427a0ff4d2610dd903f", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7677d1f771525606af256e2972cb7116d8fde99f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7677d1f771525606af256e2972cb7116d8fde99f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=7677d1f771525606af256e2972cb7116d8fde99f", "patch": "@@ -237,9 +237,8 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n         let r = match f(self) {\n             Ok(val) => Some(val),\n             Err(error) => {\n-                let diagnostic = error_to_const_error(&self.ecx, error);\n                 use rustc::mir::interpret::InterpError::*;\n-                match diagnostic.error {\n+                match error.kind {\n                     Exit(_) => bug!(\"the CTFE program cannot exit\"),\n                     Unsupported(_)\n                     | UndefinedBehavior(_)\n@@ -248,6 +247,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                         // Ignore these errors.\n                     }\n                     Panic(_) => {\n+                        let diagnostic = error_to_const_error(&self.ecx, error);\n                         diagnostic.report_as_lint(\n                             self.ecx.tcx,\n                             \"this expression will panic at runtime\","}]}