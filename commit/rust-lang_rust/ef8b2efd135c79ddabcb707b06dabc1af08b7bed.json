{"sha": "ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOGIyZWZkMTM1Yzc5ZGRhYmNiNzA3YjA2ZGFiYzFhZjA4YjdiZWQ=", "commit": {"author": {"name": "David Wood", "email": "devel@dtwood.uk", "date": "2017-12-23T01:32:55Z"}, "committer": {"name": "David Wood", "email": "devel@dtwood.uk", "date": "2017-12-23T01:32:55Z"}, "message": "Fix off-by-one error in assert_eq! line wrapping\n\nIf two really long conditions are checked for equality, they wouldn't be split\ninto multiple lines if the last condition is the one to push the line past the\nwidth limit.\n\nFix the off-by-one error that caused this, and add a test-case for it.", "tree": {"sha": "05083819b920ed0fe658c51f03704220bc63d0dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05083819b920ed0fe658c51f03704220bc63d0dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "html_url": "https://github.com/rust-lang/rust/commit/ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/comments", "author": {"login": "dtwood", "id": 1207240, "node_id": "MDQ6VXNlcjEyMDcyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1207240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtwood", "html_url": "https://github.com/dtwood", "followers_url": "https://api.github.com/users/dtwood/followers", "following_url": "https://api.github.com/users/dtwood/following{/other_user}", "gists_url": "https://api.github.com/users/dtwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtwood/subscriptions", "organizations_url": "https://api.github.com/users/dtwood/orgs", "repos_url": "https://api.github.com/users/dtwood/repos", "events_url": "https://api.github.com/users/dtwood/events{/privacy}", "received_events_url": "https://api.github.com/users/dtwood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtwood", "id": 1207240, "node_id": "MDQ6VXNlcjEyMDcyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1207240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtwood", "html_url": "https://github.com/dtwood", "followers_url": "https://api.github.com/users/dtwood/followers", "following_url": "https://api.github.com/users/dtwood/following{/other_user}", "gists_url": "https://api.github.com/users/dtwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtwood/subscriptions", "organizations_url": "https://api.github.com/users/dtwood/orgs", "repos_url": "https://api.github.com/users/dtwood/repos", "events_url": "https://api.github.com/users/dtwood/events{/privacy}", "received_events_url": "https://api.github.com/users/dtwood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e343521276897715e3bab70133cdf27eb0853c0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e343521276897715e3bab70133cdf27eb0853c0e", "html_url": "https://github.com/rust-lang/rust/commit/e343521276897715e3bab70133cdf27eb0853c0e"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "45dabaf7f88a33d6754737cd6083a427c08b007a", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "patch": "@@ -2081,7 +2081,7 @@ where\n                     {\n                         let one_line_before = all_simple_before\n                             && definitive_tactic(\n-                                &item_vec[..num_args_before - 1],\n+                                &item_vec[..num_args_before],\n                                 ListTactic::HorizontalVertical,\n                                 Separator::Comma,\n                                 nested_shape.width,\n@@ -2140,8 +2140,8 @@ fn maybe_get_args_offset<T: ToExpr>(callee_str: &str, args: &[&T]) -> Option<(bo\n         .iter()\n         .find(|&&(s, _)| s == callee_str)\n     {\n-        let all_simple_before = num_args_before >= 1 && args.len() >= num_args_before\n-            && is_every_args_simple(&args[..num_args_before]);\n+        let all_simple_before =\n+            args.len() >= num_args_before && is_every_args_simple(&args[..num_args_before]);\n \n         let all_simple_after =\n             args.len() >= num_args_before + 1 && is_every_args_simple(&args[num_args_before + 1..]);"}, {"sha": "4862c4f107d5509c0b6a7d1fe099ce3da7625714", "filename": "tests/source/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "patch": "@@ -272,6 +272,7 @@ fn special_case_macros() {\n \n     assert_eq!(left, right, \"Ahoy there, {}!\", target);\n     assert_eq!(left, right, \"Arr! Batten down the hatches, we got '{}' but not '{}' (we expected '{}')\", result, input, expected);\n+    assert_eq!(first_realllllllllllly_long_variable_that_doesnt_fit_one_one_line, second_reallllllllllly_long_variable_that_doesnt_fit_one_one_line, \"Arr! Batten down the hatches, we got '{}' but not '{}' (we expected '{}')\", result, input, expected);\n     assert_eq!(left + 42, right, \"Arr! Batten down the hatches, we got '{}' but not '{}' (we expected '{}')\", result, input, expected);\n     assert_eq!(left, right, \"{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}\", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26);\n "}, {"sha": "933fe000c9fb860a44de149fafe8d05e99a7ef67", "filename": "tests/target/macros.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef8b2efd135c79ddabcb707b06dabc1af08b7bed/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=ef8b2efd135c79ddabcb707b06dabc1af08b7bed", "patch": "@@ -734,6 +734,12 @@ fn special_case_macros() {\n         \"Arr! Batten down the hatches, we got '{}' but not '{}' (we expected '{}')\",\n         result, input, expected\n     );\n+    assert_eq!(\n+        first_realllllllllllly_long_variable_that_doesnt_fit_one_one_line,\n+        second_reallllllllllly_long_variable_that_doesnt_fit_one_one_line,\n+        \"Arr! Batten down the hatches, we got '{}' but not '{}' (we expected '{}')\",\n+        result, input, expected\n+    );\n     assert_eq!(\n         left + 42,\n         right,"}]}