{"sha": "32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZWQ1YWNmOTg5ZWQ4NDM2OTRmMWViYzkzNjEwZmU4YjdlMmNiM2Y=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-06-08T23:21:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-08T23:21:02Z"}, "message": "Rollup merge of #51391 - estebank:docspan, r=GuillaumeGomez\n\nUse spans pointing at the inside of a rustdoc attribute\n\nFollow up to #51111.\n\nPoint to the link in a rustdoc attribute where intralink resolution failed, instead of the full rustdoc attribute's span.\n\nr? @GuillaumeGomez cc @kennytm", "tree": {"sha": "314f9cf33cd2b02e942e2347656bddaeaec15ed6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/314f9cf33cd2b02e942e2347656bddaeaec15ed6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbGw9eCRBK7hj4Ov3rIwAAdHIIAEjG3U3Q9GEnZ31BqqHxM8xP\n66m1ygf2fAOC0KuyeTvA0lb5R1BxpKLAywvSM/Q8qLSA4sLbDuZmE2meXuCPNBb8\nLcfLUUfEg4qOJVFrobx1yHrLTzOEa/Scnve6gJKjuwiv4no24mP8F4l803OtLb8z\nd0oSdbhTG5ul+B8U9dBrfb8iMjSkfPdYpVD3/G4X1MWcWbtSQmANSnBmyIbaQINx\n+8XQXXWj+2+PVf//nQXpghjlkzsq8QgPztnqvv/X79HshyhIQUz8nQhN4OLNa5Ba\nK0VLXRL2bZkoPwLp8BIojmaQMMkjgvsbvnIm+DlSKFXKBTxuzXM9O76p8zc84VU=\n=h4yC\n-----END PGP SIGNATURE-----\n", "payload": "tree 314f9cf33cd2b02e942e2347656bddaeaec15ed6\nparent 4b176b2ce21f23d751202533cd55e7e104778e62\nparent 31bb50b6b949aa19fc6d5ed76a4d458e8a5af8a6\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1528500062 -0600\ncommitter GitHub <noreply@github.com> 1528500062 -0600\n\nRollup merge of #51391 - estebank:docspan, r=GuillaumeGomez\n\nUse spans pointing at the inside of a rustdoc attribute\n\nFollow up to #51111.\n\nPoint to the link in a rustdoc attribute where intralink resolution failed, instead of the full rustdoc attribute's span.\n\nr? @GuillaumeGomez cc @kennytm\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "html_url": "https://github.com/rust-lang/rust/commit/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b176b2ce21f23d751202533cd55e7e104778e62", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b176b2ce21f23d751202533cd55e7e104778e62", "html_url": "https://github.com/rust-lang/rust/commit/4b176b2ce21f23d751202533cd55e7e104778e62"}, {"sha": "31bb50b6b949aa19fc6d5ed76a4d458e8a5af8a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/31bb50b6b949aa19fc6d5ed76a4d458e8a5af8a6", "html_url": "https://github.com/rust-lang/rust/commit/31bb50b6b949aa19fc6d5ed76a4d458e8a5af8a6"}], "stats": {"total": 220, "additions": 177, "deletions": 43}, "files": [{"sha": "3f883eab172db57aa737066a5408409a1ee4b2bc", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 46, "deletions": 16, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "patch": "@@ -1251,30 +1251,60 @@ fn resolution_failure(\n     link_range: Option<Range<usize>>,\n ) {\n     let sp = span_of_attrs(attrs);\n-    let mut diag = cx.sess()\n-        .struct_span_warn(sp, &format!(\"[{}] cannot be resolved, ignoring it...\", path_str));\n+    let msg = format!(\"`[{}]` cannot be resolved, ignoring it...\", path_str);\n \n-    if let Some(link_range) = link_range {\n+    let code_dox = sp.to_src(cx);\n+\n+    let doc_comment_padding = 3;\n+    let mut diag = if let Some(link_range) = link_range {\n         // blah blah blah\\nblah\\nblah [blah] blah blah\\nblah blah\n         //                       ^    ~~~~~~\n         //                       |    link_range\n         //                       last_new_line_offset\n \n-        let last_new_line_offset = dox[..link_range.start].rfind('\\n').map_or(0, |n| n + 1);\n-        let line = dox[last_new_line_offset..].lines().next().unwrap_or(\"\");\n-\n-        // Print the line containing the `link_range` and manually mark it with '^'s\n-        diag.note(&format!(\n-            \"the link appears in this line:\\n\\n{line}\\n{indicator: <before$}{indicator:^<found$}\",\n-            line=line,\n-            indicator=\"\",\n-            before=link_range.start - last_new_line_offset,\n-            found=link_range.len(),\n-        ));\n-    } else {\n+        let mut diag;\n+        if dox.lines().count() == code_dox.lines().count() {\n+            let line_offset = dox[..link_range.start].lines().count();\n+            // The span starts in the `///`, so we don't have to account for the leading whitespace\n+            let code_dox_len = if line_offset <= 1 {\n+                doc_comment_padding\n+            } else {\n+                // The first `///`\n+                doc_comment_padding +\n+                    // Each subsequent leading whitespace and `///`\n+                    code_dox.lines().skip(1).take(line_offset - 1).fold(0, |sum, line| {\n+                        sum + doc_comment_padding + line.len() - line.trim().len()\n+                    })\n+            };\n \n-    }\n+            // Extract the specific span\n+            let sp = sp.from_inner_byte_pos(\n+                link_range.start + code_dox_len,\n+                link_range.end + code_dox_len,\n+            );\n \n+            diag = cx.sess().struct_span_warn(sp, &msg);\n+            diag.span_label(sp, \"cannot be resolved, ignoring\");\n+        } else {\n+            diag = cx.sess().struct_span_warn(sp, &msg);\n+\n+            let last_new_line_offset = dox[..link_range.start].rfind('\\n').map_or(0, |n| n + 1);\n+            let line = dox[last_new_line_offset..].lines().next().unwrap_or(\"\");\n+\n+            // Print the line containing the `link_range` and manually mark it with '^'s\n+            diag.note(&format!(\n+                \"the link appears in this line:\\n\\n{line}\\n\\\n+                 {indicator: <before$}{indicator:^<found$}\",\n+                line=line,\n+                indicator=\"\",\n+                before=link_range.start - last_new_line_offset,\n+                found=link_range.len(),\n+            ));\n+        }\n+        diag\n+    } else {\n+        cx.sess().struct_span_warn(sp, &msg)\n+    };\n     diag.emit();\n }\n "}, {"sha": "d6bc275b57a6a2e05420c996eea31b437362e0cf", "filename": "src/test/rustdoc-ui/intra-links-warning.rs", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs?ref=32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "patch": "@@ -10,10 +10,48 @@\n \n // compile-pass\n \n-//! Test with [Foo::baz], [Bar::foo], ...\n-//!\n-//! and [Uniooon::X].\n+       //! Test with [Foo::baz], [Bar::foo], ...\n+     //! , [Uniooon::X] and [Qux::Z].\n+       //!\n+      //! , [Uniooon::X] and [Qux::Z].\n \n+       /// [Qux:Y]\n pub struct Foo {\n     pub bar: usize,\n }\n+\n+/// Foo\n+/// bar [BarA] bar\n+/// baz\n+pub fn a() {}\n+\n+/**\n+ * Foo\n+ * bar [BarB] bar\n+ * baz\n+ */\n+pub fn b() {}\n+\n+/** Foo\n+\n+bar [BarC] bar\n+baz\n+\n+    let bar_c_1 = 0;\n+    let bar_c_2 = 0;\n+    let g = [bar_c_1];\n+    let h = g[bar_c_2];\n+\n+*/\n+pub fn c() {}\n+\n+#[doc = \"Foo\\nbar [BarD] bar\\nbaz\"]\n+pub fn d() {}\n+\n+macro_rules! f {\n+    ($f:expr) => {\n+        #[doc = $f]\n+        pub fn f() {}\n+    }\n+}\n+f!(\"Foo\\nbar [BarF] bar\\nbaz\");"}, {"sha": "52adba5679fe0eb67a2996c57d958fc280694c05", "filename": "src/test/rustdoc-ui/intra-links-warning.stderr", "status": "modified", "additions": 90, "deletions": 24, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32ed5acf989ed843694f1ebc93610fe8b7e2cb3f/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr?ref=32ed5acf989ed843694f1ebc93610fe8b7e2cb3f", "patch": "@@ -1,39 +1,105 @@\n-warning: [Foo::baz] cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:13:1\n+warning: `[Foo::baz]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:13:23\n    |\n-13 | / //! Test with [Foo::baz], [Bar::foo], ...\n-14 | | //!\n-15 | | //! and [Uniooon::X].\n-   | |_____________________^\n+13 |        //! Test with [Foo::baz], [Bar::foo], ...\n+   |                       ^^^^^^^^ cannot be resolved, ignoring\n+\n+warning: `[Bar::foo]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:13:35\n+   |\n+13 |        //! Test with [Foo::baz], [Bar::foo], ...\n+   |                                   ^^^^^^^^ cannot be resolved, ignoring\n+\n+warning: `[Uniooon::X]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:14:13\n+   |\n+14 |      //! , [Uniooon::X] and [Qux::Z].\n+   |             ^^^^^^^^^^ cannot be resolved, ignoring\n+\n+warning: `[Qux::Z]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:14:30\n+   |\n+14 |      //! , [Uniooon::X] and [Qux::Z].\n+   |                              ^^^^^^ cannot be resolved, ignoring\n+\n+warning: `[Uniooon::X]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:16:14\n+   |\n+16 |       //! , [Uniooon::X] and [Qux::Z].\n+   |              ^^^^^^^^^^ cannot be resolved, ignoring\n+\n+warning: `[Qux::Z]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:16:31\n+   |\n+16 |       //! , [Uniooon::X] and [Qux::Z].\n+   |                               ^^^^^^ cannot be resolved, ignoring\n+\n+warning: `[Qux:Y]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:18:13\n+   |\n+18 |        /// [Qux:Y]\n+   |             ^^^^^ cannot be resolved, ignoring\n+\n+warning: `[BarA]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:24:10\n+   |\n+24 | /// bar [BarA] bar\n+   |          ^^^^ cannot be resolved, ignoring\n+\n+warning: `[BarB]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:28:1\n+   |\n+28 | / /**\n+29 | |  * Foo\n+30 | |  * bar [BarB] bar\n+31 | |  * baz\n+32 | |  */\n+   | |___^\n+   |\n+   = note: the link appears in this line:\n+           \n+            bar [BarB] bar\n+                 ^^^^\n+\n+warning: `[BarC]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:35:1\n+   |\n+35 | / /** Foo\n+36 | |\n+37 | | bar [BarC] bar\n+38 | | baz\n+...  |\n+44 | |\n+45 | | */\n+   | |__^\n    |\n    = note: the link appears in this line:\n            \n-            Test with [Foo::baz], [Bar::foo], ...\n-                       ^^^^^^^^\n+           bar [BarC] bar\n+                ^^^^\n \n-warning: [Bar::foo] cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:13:1\n+warning: `[BarD]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:48:1\n    |\n-13 | / //! Test with [Foo::baz], [Bar::foo], ...\n-14 | | //!\n-15 | | //! and [Uniooon::X].\n-   | |_____________________^\n+48 | #[doc = \"Foo/nbar [BarD] bar/nbaz\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the link appears in this line:\n            \n-            Test with [Foo::baz], [Bar::foo], ...\n-                                   ^^^^^^^^\n+           bar [BarD] bar\n+                ^^^^\n \n-warning: [Uniooon::X] cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:13:1\n+warning: `[BarF]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:53:9\n    |\n-13 | / //! Test with [Foo::baz], [Bar::foo], ...\n-14 | | //!\n-15 | | //! and [Uniooon::X].\n-   | |_____________________^\n+53 |         #[doc = $f]\n+   |         ^^^^^^^^^^^\n+...\n+57 | f!(\"Foo/nbar [BarF] bar/nbaz\");\n+   | ------------------------------- in this macro invocation\n    |\n    = note: the link appears in this line:\n            \n-            and [Uniooon::X].\n-                 ^^^^^^^^^^\n+           bar [BarF] bar\n+                ^^^^\n "}]}