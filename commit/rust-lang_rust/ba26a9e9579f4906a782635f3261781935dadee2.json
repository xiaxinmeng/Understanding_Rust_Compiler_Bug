{"sha": "ba26a9e9579f4906a782635f3261781935dadee2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMjZhOWU5NTc5ZjQ5MDZhNzgyNjM1ZjMyNjE3ODE5MzVkYWRlZTI=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-25T17:41:25Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:12:45Z"}, "message": "Fix assertion in `shrink` to use `capacity()` instead", "tree": {"sha": "9486235d592c77c14870f18a382d9fa3a3296a6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9486235d592c77c14870f18a382d9fa3a3296a6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba26a9e9579f4906a782635f3261781935dadee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba26a9e9579f4906a782635f3261781935dadee2", "html_url": "https://github.com/rust-lang/rust/commit/ba26a9e9579f4906a782635f3261781935dadee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba26a9e9579f4906a782635f3261781935dadee2/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42a8547038bde637d050b1b2688c540b04baed9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a8547038bde637d050b1b2688c540b04baed9e", "html_url": "https://github.com/rust-lang/rust/commit/42a8547038bde637d050b1b2688c540b04baed9e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3bf481a291c53eb45d1c898b2df1e4b9dc14178a", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba26a9e9579f4906a782635f3261781935dadee2/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba26a9e9579f4906a782635f3261781935dadee2/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=ba26a9e9579f4906a782635f3261781935dadee2", "patch": "@@ -548,7 +548,7 @@ impl<T, A: AllocRef> RawVec<T, A> {\n         amount: usize,\n         placement: ReallocPlacement,\n     ) -> Result<(), TryReserveError> {\n-        assert!(amount <= self.cap, \"Tried to shrink to a larger capacity\");\n+        assert!(amount <= self.capacity(), \"Tried to shrink to a larger capacity\");\n \n         let mut memory = if let Some(mem) = self.current_memory() { mem } else { return Ok(()) };\n         let new_size = amount * mem::size_of::<T>();"}]}