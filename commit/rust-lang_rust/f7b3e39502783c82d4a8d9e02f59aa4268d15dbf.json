{"sha": "f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "node_id": "C_kwDOAAsO6NoAKGY3YjNlMzk1MDI3ODNjODJkNGE4ZDllMDJmNTlhYTQyNjhkMTVkYmY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-07T05:11:40Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-09T04:25:45Z"}, "message": "Simplify `tls::enter_context`.", "tree": {"sha": "ec181e78c1795cb42e8d5cfcea8225894ce839f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec181e78c1795cb42e8d5cfcea8225894ce839f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "html_url": "https://github.com/rust-lang/rust/commit/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef934d9b632b8ac00276558824664c104b92b5f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef934d9b632b8ac00276558824664c104b92b5f0", "html_url": "https://github.com/rust-lang/rust/commit/ef934d9b632b8ac00276558824664c104b92b5f0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "bc6d7c209971c84f9c5d78f72c1bb9cfb9bd2083", "filename": "compiler/rustc_interface/src/callbacks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs?ref=f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "patch": "@@ -38,7 +38,7 @@ fn track_diagnostic(diagnostic: &mut Diagnostic, f: &mut dyn FnMut(&mut Diagnost\n \n             // Diagnostics are tracked, we can ignore the dependency.\n             let icx = tls::ImplicitCtxt { task_deps: TaskDepsRef::Ignore, ..icx.clone() };\n-            return tls::enter_context(&icx, move |_| (*f)(diagnostic));\n+            return tls::enter_context(&icx, move || (*f)(diagnostic));\n         }\n \n         // In any other case, invoke diagnostics anyway."}, {"sha": "304c32574566fd25e9f2e796f8bf538ac60f3b44", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "patch": "@@ -748,7 +748,7 @@ impl<'tcx> QueryContext<'tcx> {\n         F: FnOnce(TyCtxt<'tcx>) -> R,\n     {\n         let icx = ty::tls::ImplicitCtxt::new(self.gcx);\n-        ty::tls::enter_context(&icx, |_| f(icx.tcx))\n+        ty::tls::enter_context(&icx, || f(icx.tcx))\n     }\n }\n "}, {"sha": "2e82efba1924efa0bde696ae7f02c133bcbd2a97", "filename": "compiler/rustc_middle/src/dep_graph/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs?ref=f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "patch": "@@ -55,7 +55,7 @@ impl rustc_query_system::dep_graph::DepKind for DepKind {\n         ty::tls::with_context(|icx| {\n             let icx = ty::tls::ImplicitCtxt { task_deps, ..icx.clone() };\n \n-            ty::tls::enter_context(&icx, |_| op())\n+            ty::tls::enter_context(&icx, op)\n         })\n     }\n "}, {"sha": "4d1ddf0c7f1633a9030458118443cc92404079c4", "filename": "compiler/rustc_middle/src/ty/context/tls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext%2Ftls.rs?ref=f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "patch": "@@ -110,9 +110,9 @@ unsafe fn downcast<'a, 'tcx>(context: *const ()) -> &'a ImplicitCtxt<'a, 'tcx> {\n #[inline]\n pub fn enter_context<'a, 'tcx, F, R>(context: &ImplicitCtxt<'a, 'tcx>, f: F) -> R\n where\n-    F: FnOnce(&ImplicitCtxt<'a, 'tcx>) -> R,\n+    F: FnOnce() -> R,\n {\n-    tlv::with_tlv(erase(context), || f(&context))\n+    tlv::with_tlv(erase(context), f)\n }\n \n /// Allows access to the current `ImplicitCtxt` in a closure if one is available."}, {"sha": "49309db564ea8a361edbc80287d3d4a68a1ea345", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b3e39502783c82d4a8d9e02f59aa4268d15dbf/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=f7b3e39502783c82d4a8d9e02f59aa4268d15dbf", "patch": "@@ -124,7 +124,7 @@ impl QueryContext for QueryCtxt<'_> {\n             };\n \n             // Use the `ImplicitCtxt` while we execute the query.\n-            tls::enter_context(&new_icx, |_| {\n+            tls::enter_context(&new_icx, || {\n                 rustc_data_structures::stack::ensure_sufficient_stack(compute)\n             })\n         })"}]}