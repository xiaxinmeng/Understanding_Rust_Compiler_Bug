{"sha": "f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YmY5NGE0Yjk0MDc0ZWIzNDRlNDk1ZGZiNGRhYjRiZWM2YmMyMGU=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-05-08T17:30:02Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-05-08T17:30:02Z"}, "message": "Use matches!", "tree": {"sha": "34eed0506628adbea0d54ad6c4aac91404f140fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34eed0506628adbea0d54ad6c4aac91404f140fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "html_url": "https://github.com/rust-lang/rust/commit/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b60970fd2050f844e3e52fcfd1724a8c527a11af", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60970fd2050f844e3e52fcfd1724a8c527a11af", "html_url": "https://github.com/rust-lang/rust/commit/b60970fd2050f844e3e52fcfd1724a8c527a11af"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "3e5f38d0d5bb3e752270ef3743003b47095413fb", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "patch": "@@ -731,10 +731,7 @@ impl Ty {\n     }\n \n     pub fn is_never(&self) -> bool {\n-        match self {\n-            Ty::Apply(ApplicationTy { ctor: TypeCtor::Never, .. }) => true,\n-            _ => false,\n-        }\n+        matches!(self, Ty::Apply(ApplicationTy { ctor: TypeCtor::Never, .. }))\n     }\n \n     /// If this is a `dyn Trait` type, this returns the `Trait` part."}]}