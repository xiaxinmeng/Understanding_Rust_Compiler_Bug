{"sha": "1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNWQzMGZmMTY2MmViOTQ4MzliZDFjZjJlMGNiNTdjYzZmYWM0ZTQ=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T02:51:13Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T02:51:13Z"}, "message": "Replace simple is_named with matches macro", "tree": {"sha": "24626ba0730b35a7515251ef094e3e4cb25bf5dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24626ba0730b35a7515251ef094e3e4cb25bf5dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4", "html_url": "https://github.com/rust-lang/rust/commit/1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b700443e781b8b54f88177247ceefcc03155b440", "url": "https://api.github.com/repos/rust-lang/rust/commits/b700443e781b8b54f88177247ceefcc03155b440", "html_url": "https://github.com/rust-lang/rust/commit/b700443e781b8b54f88177247ceefcc03155b440"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "4d446c7073b0584889955cdb8bfd8073d0cf7e0f", "filename": "crates/ra_hir_def/src/item_scope.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs?ref=1f5d30ff1662eb94839bd1cf2e0cb57cc6fac4e4", "patch": "@@ -18,15 +18,6 @@ pub(crate) enum ImportType {\n     Named,\n }\n \n-impl ImportType {\n-    fn is_named(&self) -> bool {\n-        match self {\n-            ImportType::Glob => false,\n-            ImportType::Named => true,\n-        }\n-    }\n-}\n-\n #[derive(Debug, Default)]\n pub struct PerNsGlobImports {\n     types: FxHashSet<(LocalModuleId, Name)>,\n@@ -200,7 +191,7 @@ impl ItemScope {\n                     }\n                     (Some(_), Some(_))\n                         if $glob_imports.$field.contains(&$lookup)\n-                            && $def_import_type.is_named() =>\n+                            && matches!($def_import_type, ImportType::Named) =>\n                     {\n                         mark::hit!(import_shadowed);\n                         $glob_imports.$field.remove(&$lookup);"}]}