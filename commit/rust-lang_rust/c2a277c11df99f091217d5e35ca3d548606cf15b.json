{"sha": "c2a277c11df99f091217d5e35ca3d548606cf15b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYTI3N2MxMWRmOTlmMDkxMjE3ZDVlMzVjYTNkNTQ4NjA2Y2YxNWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-19T22:58:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-19T22:58:35Z"}, "message": "Rollup merge of #79123 - CDirkx:128-bits, r=Mark-Simulacrum\n\nAdd u128 and i128 integer tests\n\nAdd the missing integer tests for u128 and i128 for completeness with the other integer types.", "tree": {"sha": "b9b3e3995c937d3ae951c13cfb777e37cb3ad3f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9b3e3995c937d3ae951c13cfb777e37cb3ad3f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2a277c11df99f091217d5e35ca3d548606cf15b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJftvibCRBK7hj4Ov3rIwAAdHIIAJTywunl6V8A2hPx+gqBo0EN\n6khvsKOB4XfukLqhM1PyXOdLT+xMEY3c+1cH4RzhLafFYcRC0GoVQD5h6zmjPQds\nct4ohZQRGuVHM4AbOe4Zkszdw6f/NGuddxfmIsyydl3TsI2ey6CA5+S6rXszlz4X\ni3K1KjfQ2d5SiT04tnHWVAM5U4iWzDbntG09bjfriHOC1ZKysjcc4Jms9Fu8YBYK\ntUbQ4cOm7g91yZbavGstLqfZWCK/SLApxYk6st9HZNy0KFBma8ILO4BH34mrNCVy\nh0qylOSHQXzEdS6vTr+qmLVisVrpNIVaieKd6TcxvKJNIt59UiJMdSr4Y9Kmfv4=\n=7KOI\n-----END PGP SIGNATURE-----\n", "payload": "tree b9b3e3995c937d3ae951c13cfb777e37cb3ad3f8\nparent 138e96d222b5ac638e62d513a8e303e96ee79c44\nparent 65540865266bd5e45c5dc91e7e148dee22b89045\nauthor Dylan DPC <dylan.dpc@gmail.com> 1605826715 +0100\ncommitter GitHub <noreply@github.com> 1605826715 +0100\n\nRollup merge of #79123 - CDirkx:128-bits, r=Mark-Simulacrum\n\nAdd u128 and i128 integer tests\n\nAdd the missing integer tests for u128 and i128 for completeness with the other integer types.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a277c11df99f091217d5e35ca3d548606cf15b", "html_url": "https://github.com/rust-lang/rust/commit/c2a277c11df99f091217d5e35ca3d548606cf15b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2a277c11df99f091217d5e35ca3d548606cf15b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "138e96d222b5ac638e62d513a8e303e96ee79c44", "url": "https://api.github.com/repos/rust-lang/rust/commits/138e96d222b5ac638e62d513a8e303e96ee79c44", "html_url": "https://github.com/rust-lang/rust/commit/138e96d222b5ac638e62d513a8e303e96ee79c44"}, {"sha": "65540865266bd5e45c5dc91e7e148dee22b89045", "url": "https://api.github.com/repos/rust-lang/rust/commits/65540865266bd5e45c5dc91e7e148dee22b89045", "html_url": "https://github.com/rust-lang/rust/commit/65540865266bd5e45c5dc91e7e148dee22b89045"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "72c0b225991f6bf116a020b6f8edf69d744bad81", "filename": "library/core/tests/num/i128.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi128.rs?ref=c2a277c11df99f091217d5e35ca3d548606cf15b", "patch": "@@ -0,0 +1 @@\n+int_module!(i128, i128);"}, {"sha": "90c476567844eae873e13efd4dacd8d4091c4bf1", "filename": "library/core/tests/num/int_macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fint_macros.rs?ref=c2a277c11df99f091217d5e35ca3d548606cf15b", "patch": "@@ -131,9 +131,9 @@ macro_rules! int_module {\n                 assert_eq!(B.rotate_left(0), B);\n                 assert_eq!(C.rotate_left(0), C);\n                 // Rotating by a multiple of word size should also have no effect\n-                assert_eq!(A.rotate_left(64), A);\n-                assert_eq!(B.rotate_left(64), B);\n-                assert_eq!(C.rotate_left(64), C);\n+                assert_eq!(A.rotate_left(128), A);\n+                assert_eq!(B.rotate_left(128), B);\n+                assert_eq!(C.rotate_left(128), C);\n             }\n \n             #[test]"}, {"sha": "012ab4ea5c573a669ad352c2320947a273b2f56d", "filename": "library/core/tests/num/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fmod.rs?ref=c2a277c11df99f091217d5e35ca3d548606cf15b", "patch": "@@ -11,6 +11,7 @@ use core::str::FromStr;\n #[macro_use]\n mod int_macros;\n \n+mod i128;\n mod i16;\n mod i32;\n mod i64;\n@@ -19,6 +20,7 @@ mod i8;\n #[macro_use]\n mod uint_macros;\n \n+mod u128;\n mod u16;\n mod u32;\n mod u64;"}, {"sha": "716d1836f2c0ef17ef234aed869fd45f0b5df2f9", "filename": "library/core/tests/num/u128.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fu128.rs?ref=c2a277c11df99f091217d5e35ca3d548606cf15b", "patch": "@@ -0,0 +1 @@\n+uint_module!(u128, u128);"}, {"sha": "445f8fb350eebe24db114f45012111427efa29f1", "filename": "library/core/tests/num/uint_macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a277c11df99f091217d5e35ca3d548606cf15b/library%2Fcore%2Ftests%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fuint_macros.rs?ref=c2a277c11df99f091217d5e35ca3d548606cf15b", "patch": "@@ -96,9 +96,9 @@ macro_rules! uint_module {\n                 assert_eq!(B.rotate_left(0), B);\n                 assert_eq!(C.rotate_left(0), C);\n                 // Rotating by a multiple of word size should also have no effect\n-                assert_eq!(A.rotate_left(64), A);\n-                assert_eq!(B.rotate_left(64), B);\n-                assert_eq!(C.rotate_left(64), C);\n+                assert_eq!(A.rotate_left(128), A);\n+                assert_eq!(B.rotate_left(128), B);\n+                assert_eq!(C.rotate_left(128), C);\n             }\n \n             #[test]"}]}