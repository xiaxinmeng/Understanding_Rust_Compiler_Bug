{"sha": "d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1Y2NmNjhhMTA3NmYwZWMxNGU4NmNmYmFjYjZjYmU3ZjVmYzkyM2E=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-17T11:38:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-18T17:33:55Z"}, "message": "fix mplace_access_checked with forced alignment", "tree": {"sha": "ff14d104c72c58b8666d21c81c29264e8d98aa05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff14d104c72c58b8666d21c81c29264e8d98aa05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a", "html_url": "https://github.com/rust-lang/rust/commit/d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "563ab4a106928a9f9a27618ad6598fd255dc3555", "url": "https://api.github.com/repos/rust-lang/rust/commits/563ab4a106928a9f9a27618ad6598fd255dc3555", "html_url": "https://github.com/rust-lang/rust/commit/563ab4a106928a9f9a27618ad6598fd255dc3555"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ef603b51554c249c622d9b4099e17ffd12b47547", "filename": "compiler/rustc_mir/src/interpret/place.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs?ref=d5ccf68a1076f0ec14e86cfbacb6cbe7f5fc923a", "patch": "@@ -374,8 +374,9 @@ where\n             .size_and_align_of_mplace(&place)?\n             .unwrap_or((place.layout.size, place.layout.align.abi));\n         assert!(place.mplace.align <= align, \"dynamic alignment less strict than static one?\");\n-        // Check (stricter) dynamic alignment, unless forced otherwise.\n-        place.mplace.align = force_align.unwrap_or(align);\n+        let align = force_align.unwrap_or(align);\n+        // Record new (stricter, unless forced) alignment requirement in place.\n+        place.mplace.align = align;\n         // When dereferencing a pointer, it must be non-null, aligned, and live.\n         if let Some(ptr) = self.memory.check_ptr_access(place.ptr, size, align)? {\n             place.mplace.ptr = ptr.into();"}]}