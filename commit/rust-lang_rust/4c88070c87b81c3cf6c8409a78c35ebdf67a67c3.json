{"sha": "4c88070c87b81c3cf6c8409a78c35ebdf67a67c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjODgwNzBjODdiODFjM2NmNmM4NDA5YTc4YzM1ZWJkZjY3YTY3YzM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-11T12:48:25Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-15T14:54:06Z"}, "message": "Use mem::replace instead of rewriting it", "tree": {"sha": "33c2badac7cd7c94c21466cf27cfce18b6b3594b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33c2badac7cd7c94c21466cf27cfce18b6b3594b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c88070c87b81c3cf6c8409a78c35ebdf67a67c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c88070c87b81c3cf6c8409a78c35ebdf67a67c3", "html_url": "https://github.com/rust-lang/rust/commit/4c88070c87b81c3cf6c8409a78c35ebdf67a67c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c88070c87b81c3cf6c8409a78c35ebdf67a67c3/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02a24c8e2fd370041a24b7d93e8c3710b7b76015", "url": "https://api.github.com/repos/rust-lang/rust/commits/02a24c8e2fd370041a24b7d93e8c3710b7b76015", "html_url": "https://github.com/rust-lang/rust/commit/02a24c8e2fd370041a24b7d93e8c3710b7b76015"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "63b238faff61521d81c3bb4448753c337b77b188", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c88070c87b81c3cf6c8409a78c35ebdf67a67c3/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c88070c87b81c3cf6c8409a78c35ebdf67a67c3/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=4c88070c87b81c3cf6c8409a78c35ebdf67a67c3", "patch": "@@ -504,10 +504,9 @@ impl<'a, 'ast> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast> {\n \n                 visit::walk_fn_ret_ty(this, &declaration.output);\n \n-                let previous_state = this.in_func_body;\n                 // Ignore errors in function bodies if this is rustdoc\n                 // Be sure not to set this until the function signature has been resolved.\n-                this.in_func_body = true;\n+                let previous_state = replace(&mut this.in_func_body, true);\n                 // Resolve the function body, potentially inside the body of an async closure\n                 match fn_kind {\n                     FnKind::Fn(.., body) => walk_list!(this, visit_block, body),\n@@ -1175,9 +1174,8 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         impl_items: &'ast [P<AssocItem>],\n     ) {\n         debug!(\"resolve_implementation\");\n-        let old_ignore = self.in_func_body;\n         // Never ignore errors in trait implementations.\n-        self.in_func_body = false;\n+        let old_ignore = replace(&mut self.in_func_body, false);\n         // If applicable, create a rib for the type parameters.\n         self.with_generic_param_rib(generics, ItemRibKind(HasGenericParams::Yes), |this| {\n             // Dummy self type for better errors if `Self` is used in the trait path."}]}