{"sha": "0468c134f4d1fd72452a55a8a09eeaf93b70e557", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NjhjMTM0ZjRkMWZkNzI0NTJhNTVhOGEwOWVlYWY5M2I3MGU1NTc=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-05-31T10:33:45Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-05-31T10:33:45Z"}, "message": "snuggle where", "tree": {"sha": "55cdf5c249093f9dacdf0847df96341852f60658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55cdf5c249093f9dacdf0847df96341852f60658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0468c134f4d1fd72452a55a8a09eeaf93b70e557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0468c134f4d1fd72452a55a8a09eeaf93b70e557", "html_url": "https://github.com/rust-lang/rust/commit/0468c134f4d1fd72452a55a8a09eeaf93b70e557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0468c134f4d1fd72452a55a8a09eeaf93b70e557/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8536c288f206445395375cfd06932ef74cf9877d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8536c288f206445395375cfd06932ef74cf9877d", "html_url": "https://github.com/rust-lang/rust/commit/8536c288f206445395375cfd06932ef74cf9877d"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "872d736f15f070ab03589ddd68653121caa36f04", "filename": "src/items.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0468c134f4d1fd72452a55a8a09eeaf93b70e557/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0468c134f4d1fd72452a55a8a09eeaf93b70e557/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=0468c134f4d1fd72452a55a8a09eeaf93b70e557", "patch": "@@ -651,9 +651,15 @@ pub fn format_impl(\n         };\n \n         let mut option = WhereClauseOption::snuggled(&ref_and_type);\n-        if items.is_empty() && generics.where_clause.predicates.len() == 1 {\n-            option.compress_where();\n+        let snippet = context.snippet(item.span);\n+        let open_pos = snippet.find_uncommented(\"{\")? + 1;\n+        if !contains_comment(&snippet[open_pos..])\n+            && items.is_empty()\n+            && generics.where_clause.predicates.len() == 1\n+        {\n             option.suppress_comma();\n+            option.snuggle();\n+            option.compress_where();\n         }\n \n         let mut where_clause_str = rewrite_where_clause(\n@@ -1386,9 +1392,9 @@ fn format_tuple_struct(\n         // We need to put the where clause on a new line, but we didn't\n         // know that earlier, so the where clause will not be indented properly.\n         result.push('\\n');\n-        result\n-            .push_str(&(offset.block_only() + (context.config.tab_spaces() - 1))\n-                .to_string(context.config));\n+        result.push_str(\n+            &(offset.block_only() + (context.config.tab_spaces() - 1)).to_string(context.config),\n+        );\n     }\n     result.push_str(&where_clause_str);\n \n@@ -2147,6 +2153,10 @@ impl WhereClauseOption {\n     pub fn compress_where(&mut self) {\n         self.compress_where = true\n     }\n+\n+    pub fn snuggle(&mut self) {\n+        self.snuggle = true\n+    }\n }\n \n fn rewrite_args("}]}