{"sha": "fc5f73de45478058aa6d61e328733224cfa16efa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNWY3M2RlNDU0NzgwNThhYTZkNjFlMzI4NzMzMjI0Y2ZhMTZlZmE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-19T18:42:06Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-19T19:05:17Z"}, "message": "Move `AttrsOwnerNode` to syntax and make it public", "tree": {"sha": "18be45e538cfd9a31800fbdeb3edcf85d638863b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18be45e538cfd9a31800fbdeb3edcf85d638863b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc5f73de45478058aa6d61e328733224cfa16efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc5f73de45478058aa6d61e328733224cfa16efa", "html_url": "https://github.com/rust-lang/rust/commit/fc5f73de45478058aa6d61e328733224cfa16efa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc5f73de45478058aa6d61e328733224cfa16efa/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc21640a65b5caef8dbbc9e85e9616b843847fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc21640a65b5caef8dbbc9e85e9616b843847fb4", "html_url": "https://github.com/rust-lang/rust/commit/fc21640a65b5caef8dbbc9e85e9616b843847fb4"}], "stats": {"total": 66, "additions": 33, "deletions": 33}, "files": [{"sha": "d2e09dbb6d99bdcb12b67e7ee135afa9c57b8c59", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fc5f73de45478058aa6d61e328733224cfa16efa/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc5f73de45478058aa6d61e328733224cfa16efa/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=fc5f73de45478058aa6d61e328733224cfa16efa", "patch": "@@ -6,7 +6,7 @@ use either::Either;\n use hir::{HasAttrs, InFile, Semantics};\n use ide_db::{call_info::ActiveParameter, defs::Definition, SymbolKind};\n use syntax::{\n-    ast::{self, AstNode, AttrsOwner, DocCommentsOwner},\n+    ast::{self, AstNode, AttrsOwner, AttrsOwnerNode, DocCommentsOwner},\n     match_ast, AstToken, NodeOrToken, SyntaxNode, SyntaxToken, TextRange, TextSize,\n };\n \n@@ -89,36 +89,6 @@ const RUSTDOC_FENCE_TOKENS: &[&'static str] = &[\n     \"edition2021\",\n ];\n \n-// Basically an owned dyn AttrsOwner without extra Boxing\n-struct AttrsOwnerNode {\n-    node: SyntaxNode,\n-}\n-\n-impl AttrsOwnerNode {\n-    fn new<N: DocCommentsOwner>(node: N) -> Self {\n-        AttrsOwnerNode { node: node.syntax().clone() }\n-    }\n-}\n-\n-impl AttrsOwner for AttrsOwnerNode {}\n-impl AstNode for AttrsOwnerNode {\n-    fn can_cast(_: syntax::SyntaxKind) -> bool\n-    where\n-        Self: Sized,\n-    {\n-        false\n-    }\n-    fn cast(_: SyntaxNode) -> Option<Self>\n-    where\n-        Self: Sized,\n-    {\n-        None\n-    }\n-    fn syntax(&self) -> &SyntaxNode {\n-        &self.node\n-    }\n-}\n-\n fn doc_attributes<'node>(\n     sema: &Semantics<RootDatabase>,\n     node: &'node SyntaxNode,"}, {"sha": "7f472d4dbed653ef4d5f30ecf75586a2a1df12c6", "filename": "crates/syntax/src/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc5f73de45478058aa6d61e328733224cfa16efa/crates%2Fsyntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc5f73de45478058aa6d61e328733224cfa16efa/crates%2Fsyntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast.rs?ref=fc5f73de45478058aa6d61e328733224cfa16efa", "patch": "@@ -20,8 +20,8 @@ pub use self::{\n     expr_ext::{ArrayExprKind, BinOp, Effect, ElseBranch, LiteralKind, PrefixOp, RangeOp},\n     generated::{nodes::*, tokens::*},\n     node_ext::{\n-        AttrKind, FieldKind, Macro, NameLike, NameOrNameRef, PathSegmentKind, SelfParamKind,\n-        SlicePatComponents, StructKind, TypeBoundKind, VisibilityKind,\n+        AttrKind, AttrsOwnerNode, FieldKind, Macro, NameLike, NameOrNameRef, PathSegmentKind,\n+        SelfParamKind, SlicePatComponents, StructKind, TypeBoundKind, VisibilityKind,\n     },\n     token_ext::*,\n     traits::*,"}, {"sha": "01f580a4094185bbc1dbb8d1ded1f1f67607c9fc", "filename": "crates/syntax/src/ast/node_ext.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fc5f73de45478058aa6d61e328733224cfa16efa/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc5f73de45478058aa6d61e328733224cfa16efa/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=fc5f73de45478058aa6d61e328733224cfa16efa", "patch": "@@ -90,6 +90,36 @@ impl NameOwner for Macro {\n \n impl AttrsOwner for Macro {}\n \n+/// Basically an owned `dyn AttrsOwner` without extra boxing.\n+pub struct AttrsOwnerNode {\n+    node: SyntaxNode,\n+}\n+\n+impl AttrsOwnerNode {\n+    pub fn new<N: AttrsOwner>(node: N) -> Self {\n+        AttrsOwnerNode { node: node.syntax().clone() }\n+    }\n+}\n+\n+impl AttrsOwner for AttrsOwnerNode {}\n+impl AstNode for AttrsOwnerNode {\n+    fn can_cast(_: SyntaxKind) -> bool\n+    where\n+        Self: Sized,\n+    {\n+        false\n+    }\n+    fn cast(_: SyntaxNode) -> Option<Self>\n+    where\n+        Self: Sized,\n+    {\n+        None\n+    }\n+    fn syntax(&self) -> &SyntaxNode {\n+        &self.node\n+    }\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum AttrKind {\n     Inner,"}]}