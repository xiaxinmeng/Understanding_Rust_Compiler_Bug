{"sha": "fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZTM1MDdiNzFmOTc3YWQ1YWI3ZWYzNGVhYmFiMWVhNGZiNGJiNmE=", "commit": {"author": {"name": "Vincent Esche", "email": "regexident@gmail.com", "date": "2021-08-01T14:34:51Z"}, "committer": {"name": "Vincent Esche", "email": "regexident@gmail.com", "date": "2021-08-01T17:12:04Z"}, "message": "Make `LoadCargoConfig`, `fn load_workspace_at` & `fn load_workspace` public again", "tree": {"sha": "fe93e7a47b73bb8040328372d1d0e3e77dcbfe93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe93e7a47b73bb8040328372d1d0e3e77dcbfe93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "html_url": "https://github.com/rust-lang/rust/commit/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a/comments", "author": {"login": "regexident", "id": 138017, "node_id": "MDQ6VXNlcjEzODAxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/138017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regexident", "html_url": "https://github.com/regexident", "followers_url": "https://api.github.com/users/regexident/followers", "following_url": "https://api.github.com/users/regexident/following{/other_user}", "gists_url": "https://api.github.com/users/regexident/gists{/gist_id}", "starred_url": "https://api.github.com/users/regexident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regexident/subscriptions", "organizations_url": "https://api.github.com/users/regexident/orgs", "repos_url": "https://api.github.com/users/regexident/repos", "events_url": "https://api.github.com/users/regexident/events{/privacy}", "received_events_url": "https://api.github.com/users/regexident/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regexident", "id": 138017, "node_id": "MDQ6VXNlcjEzODAxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/138017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regexident", "html_url": "https://github.com/regexident", "followers_url": "https://api.github.com/users/regexident/followers", "following_url": "https://api.github.com/users/regexident/following{/other_user}", "gists_url": "https://api.github.com/users/regexident/gists{/gist_id}", "starred_url": "https://api.github.com/users/regexident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regexident/subscriptions", "organizations_url": "https://api.github.com/users/regexident/orgs", "repos_url": "https://api.github.com/users/regexident/repos", "events_url": "https://api.github.com/users/regexident/events{/privacy}", "received_events_url": "https://api.github.com/users/regexident/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a793a0098dde3b83d27d56b280ac83ff9788a94e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a793a0098dde3b83d27d56b280ac83ff9788a94e", "html_url": "https://github.com/rust-lang/rust/commit/a793a0098dde3b83d27d56b280ac83ff9788a94e"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "2f65a1dad07f2792591707bb607c81e1b8a2a29c", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "patch": "@@ -1,6 +1,6 @@\n //! Various batch processing tasks, intended primarily for debugging.\n \n-pub(crate) mod load_cargo;\n+pub mod load_cargo;\n mod analysis_stats;\n mod diagnostics;\n mod progress_report;"}, {"sha": "dee92911e3f470aa32d7ec51f718ca8a06be1ba9", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "patch": "@@ -14,13 +14,17 @@ use vfs::{loader::Handle, AbsPath, AbsPathBuf};\n \n use crate::reload::{ProjectFolders, SourceRootConfig};\n \n-pub(crate) struct LoadCargoConfig {\n-    pub(crate) load_out_dirs_from_check: bool,\n-    pub(crate) with_proc_macro: bool,\n-    pub(crate) prefill_caches: bool,\n+// Note: Since this type is used by external tools that use rust-analyzer as a library\n+// what otherwise would be `pub(crate)` has to be `pub` here instead.\n+pub struct LoadCargoConfig {\n+    pub load_out_dirs_from_check: bool,\n+    pub with_proc_macro: bool,\n+    pub prefill_caches: bool,\n }\n \n-pub(crate) fn load_workspace_at(\n+// Note: Since this function is used by external tools that use rust-analyzer as a library\n+// what otherwise would be `pub(crate)` has to be `pub` here instead.\n+pub fn load_workspace_at(\n     root: &Path,\n     cargo_config: &CargoConfig,\n     load_config: &LoadCargoConfig,\n@@ -33,7 +37,12 @@ pub(crate) fn load_workspace_at(\n     load_workspace(workspace, cargo_config, load_config, progress)\n }\n \n-fn load_workspace(\n+// Note: Since this function is used by external tools that use rust-analyzer as a library\n+// what otherwise would be `pub(crate)` has to be `pub` here instead.\n+//\n+// The reason both, `load_workspace_at` and `load_workspace` are `pub` is that some of\n+// these tools need access to `ProjectWorkspace`, too, which `load_workspace_at` hides.\n+pub fn load_workspace(\n     mut ws: ProjectWorkspace,\n     cargo_config: &CargoConfig,\n     load_config: &LoadCargoConfig,"}]}