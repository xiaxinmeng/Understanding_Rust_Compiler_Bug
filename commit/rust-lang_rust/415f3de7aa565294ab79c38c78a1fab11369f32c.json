{"sha": "415f3de7aa565294ab79c38c78a1fab11369f32c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNWYzZGU3YWE1NjUyOTRhYjc5YzM4Yzc4YTFmYWIxMTM2OWYzMmM=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-12-14T20:34:02Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-12-15T18:56:55Z"}, "message": "Stabilize std::char::{encode_utf8, encode_utf16}", "tree": {"sha": "c957b1a41e703a22d3cf0b9bcab84a600cbc4adc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c957b1a41e703a22d3cf0b9bcab84a600cbc4adc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/415f3de7aa565294ab79c38c78a1fab11369f32c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/415f3de7aa565294ab79c38c78a1fab11369f32c", "html_url": "https://github.com/rust-lang/rust/commit/415f3de7aa565294ab79c38c78a1fab11369f32c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/415f3de7aa565294ab79c38c78a1fab11369f32c/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "html_url": "https://github.com/rust-lang/rust/commit/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "c14ae6e08987357b19c3e26fd568e37a4f3d8d23", "filename": "src/libcore/char.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/415f3de7aa565294ab79c38c78a1fab11369f32c/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/415f3de7aa565294ab79c38c78a1fab11369f32c/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=415f3de7aa565294ab79c38c78a1fab11369f32c", "patch": "@@ -327,9 +327,9 @@ pub trait CharExt {\n     fn len_utf8(self) -> usize;\n     #[stable(feature = \"core\", since = \"1.6.0\")]\n     fn len_utf16(self) -> usize;\n-    #[unstable(feature = \"unicode\", issue = \"27784\")]\n+    #[stable(feature = \"unicode_encode_char\", since = \"1.15.0\")]\n     fn encode_utf8(self, dst: &mut [u8]) -> &mut str;\n-    #[unstable(feature = \"unicode\", issue = \"27784\")]\n+    #[stable(feature = \"unicode_encode_char\", since = \"1.15.0\")]\n     fn encode_utf16(self, dst: &mut [u16]) -> &mut [u16];\n }\n "}, {"sha": "b6a502e8c1a58c22908035bbbf6c002132283541", "filename": "src/libstd_unicode/char.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/415f3de7aa565294ab79c38c78a1fab11369f32c/src%2Flibstd_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/415f3de7aa565294ab79c38c78a1fab11369f32c/src%2Flibstd_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fchar.rs?ref=415f3de7aa565294ab79c38c78a1fab11369f32c", "patch": "@@ -448,8 +448,6 @@ impl char {\n     /// In both of these examples, '\u00df' takes two bytes to encode.\n     ///\n     /// ```\n-    /// #![feature(unicode)]\n-    ///\n     /// let mut b = [0; 2];\n     ///\n     /// let result = '\u00df'.encode_utf8(&mut b);\n@@ -474,9 +472,7 @@ impl char {\n     ///\n     /// assert!(result.is_err());\n     /// ```\n-    #[unstable(feature = \"unicode\",\n-               reason = \"pending decision about Iterator/Writer/Reader\",\n-               issue = \"27784\")]\n+    #[stable(feature = \"unicode_encode_char\", since = \"1.15.0\")]\n     #[inline]\n     pub fn encode_utf8(self, dst: &mut [u8]) -> &mut str {\n         C::encode_utf8(self, dst)\n@@ -495,8 +491,6 @@ impl char {\n     /// In both of these examples, '\ud835\udd4a' takes two `u16`s to encode.\n     ///\n     /// ```\n-    /// #![feature(unicode)]\n-    ///\n     /// let mut b = [0; 2];\n     ///\n     /// let result = '\ud835\udd4a'.encode_utf16(&mut b);\n@@ -519,9 +513,7 @@ impl char {\n     ///\n     /// assert!(result.is_err());\n     /// ```\n-    #[unstable(feature = \"unicode\",\n-               reason = \"pending decision about Iterator/Writer/Reader\",\n-               issue = \"27784\")]\n+    #[stable(feature = \"unicode_encode_char\", since = \"1.15.0\")]\n     #[inline]\n     pub fn encode_utf16(self, dst: &mut [u16]) -> &mut [u16] {\n         C::encode_utf16(self, dst)"}]}