{"sha": "dce670c73c4e77a00cb6e3073318faac92969956", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZTY3MGM3M2M0ZTc3YTAwY2I2ZTMwNzMzMThmYWFjOTI5Njk5NTY=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-05-27T11:09:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-27T11:09:17Z"}, "message": "Rollup merge of #4119 - BO41:non_ascii_literal, r=flip1995\n\nImprove non ascii literal\n\nThis PR improves the example of the [non_ascii_literal](https://rust-lang.github.io/rust-clippy/master/index.html#non_ascii_literal) lint.\nIt also makes it auto-fixable.\n\nPlease review. This is my first PR to this project.\n(Thanks @flip1995 for the help :)\n\nchangelog: none\nfixes #4117", "tree": {"sha": "1068c78ea8b7923aeb4091c24b84393bd15e9a40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1068c78ea8b7923aeb4091c24b84393bd15e9a40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dce670c73c4e77a00cb6e3073318faac92969956", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc68VdCRBK7hj4Ov3rIwAAdHIIAAIk1N2SOmFCUmAmH+gUpDD1\nwxn1l09TvereRV7BKkHEFu3mpFa1aasYClZ21jArF98SfIriakOxdG/9PoubLeIo\naFEFgtZWEAvhwIu9LTiY5Zw4a76SD1cq8n4xruG4VuPEsD0J8h7sFvEQX3REC1sp\n7SokHLgj6SlqwsQy4MfPjx7634+rZwl2PrK/GLb2TPRl7MDT1Mcve4nwceJQWTQo\nKfZGRAJP03194hh4Zg+HtecJ23Oqa4B/1aKbeHhN3+A3LN6kpI99LOPdLDXcAiEk\nYJCruSJu5IgvSxeEpTUKXaNdlNvxDq04zqZZ4N+vYYwm98yVvv8T/h0k+z93fps=\n=WO3/\n-----END PGP SIGNATURE-----\n", "payload": "tree 1068c78ea8b7923aeb4091c24b84393bd15e9a40\nparent f0a767352bdf0a7c49bce5623826ddd1ec968316\nparent 36c8aaba8f9b525aaf37adec52592f4302cb8e12\nauthor Philipp Krones <hello@philkrones.com> 1558955357 +0200\ncommitter GitHub <noreply@github.com> 1558955357 +0200\n\nRollup merge of #4119 - BO41:non_ascii_literal, r=flip1995\n\nImprove non ascii literal\n\nThis PR improves the example of the [non_ascii_literal](https://rust-lang.github.io/rust-clippy/master/index.html#non_ascii_literal) lint.\nIt also makes it auto-fixable.\n\nPlease review. This is my first PR to this project.\n(Thanks @flip1995 for the help :)\n\nchangelog: none\nfixes #4117\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dce670c73c4e77a00cb6e3073318faac92969956", "html_url": "https://github.com/rust-lang/rust/commit/dce670c73c4e77a00cb6e3073318faac92969956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dce670c73c4e77a00cb6e3073318faac92969956/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0a767352bdf0a7c49bce5623826ddd1ec968316", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0a767352bdf0a7c49bce5623826ddd1ec968316", "html_url": "https://github.com/rust-lang/rust/commit/f0a767352bdf0a7c49bce5623826ddd1ec968316"}, {"sha": "36c8aaba8f9b525aaf37adec52592f4302cb8e12", "url": "https://api.github.com/repos/rust-lang/rust/commits/36c8aaba8f9b525aaf37adec52592f4302cb8e12", "html_url": "https://github.com/rust-lang/rust/commit/36c8aaba8f9b525aaf37adec52592f4302cb8e12"}], "stats": {"total": 50, "additions": 23, "deletions": 27}, "files": [{"sha": "15c74eff73b16aa3dcadd22f792d314636b16c85", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/dce670c73c4e77a00cb6e3073318faac92969956/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dce670c73c4e77a00cb6e3073318faac92969956/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=dce670c73c4e77a00cb6e3073318faac92969956", "patch": "@@ -1,7 +1,8 @@\n-use crate::utils::{is_allowed, snippet, span_help_and_lint};\n+use crate::utils::{is_allowed, snippet, span_lint_and_sugg};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n+use rustc_errors::Applicability;\n use syntax::ast::LitKind;\n use syntax::source_map::Span;\n use unicode_normalization::UnicodeNormalization;\n@@ -34,7 +35,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// let x = \"H\u00e4?\"\n+    /// let x = String::from(\"\u20ac\");\n+    /// ```\n+    /// Could be written as:\n+    /// ```rust\n+    /// let x = String::from(\"\\u{20ac}\");\n     /// ```\n     pub NON_ASCII_LITERAL,\n     pedantic,\n@@ -87,43 +92,40 @@ fn escape<T: Iterator<Item = char>>(s: T) -> String {\n fn check_str(cx: &LateContext<'_, '_>, span: Span, id: HirId) {\n     let string = snippet(cx, span, \"\");\n     if string.contains('\\u{200B}') {\n-        span_help_and_lint(\n+        span_lint_and_sugg(\n             cx,\n             ZERO_WIDTH_SPACE,\n             span,\n             \"zero-width space detected\",\n-            &format!(\n-                \"Consider replacing the string with:\\n\\\"{}\\\"\",\n-                string.replace(\"\\u{200B}\", \"\\\\u{200B}\")\n-            ),\n+            \"consider replacing the string with\",\n+            string.replace(\"\\u{200B}\", \"\\\\u{200B}\"),\n+            Applicability::MachineApplicable,\n         );\n     }\n     if string.chars().any(|c| c as u32 > 0x7F) {\n-        span_help_and_lint(\n+        span_lint_and_sugg(\n             cx,\n             NON_ASCII_LITERAL,\n             span,\n             \"literal non-ASCII character detected\",\n-            &format!(\n-                \"Consider replacing the string with:\\n\\\"{}\\\"\",\n-                if is_allowed(cx, UNICODE_NOT_NFC, id) {\n-                    escape(string.chars())\n-                } else {\n-                    escape(string.nfc())\n-                }\n-            ),\n+            \"consider replacing the string with\",\n+            if is_allowed(cx, UNICODE_NOT_NFC, id) {\n+                escape(string.chars())\n+            } else {\n+                escape(string.nfc())\n+            },\n+            Applicability::MachineApplicable,\n         );\n     }\n     if is_allowed(cx, NON_ASCII_LITERAL, id) && string.chars().zip(string.nfc()).any(|(a, b)| a != b) {\n-        span_help_and_lint(\n+        span_lint_and_sugg(\n             cx,\n             UNICODE_NOT_NFC,\n             span,\n             \"non-nfc unicode sequence detected\",\n-            &format!(\n-                \"Consider replacing the string with:\\n\\\"{}\\\"\",\n-                string.nfc().collect::<String>()\n-            ),\n+            \"consider replacing the string with\",\n+            string.nfc().collect::<String>(),\n+            Applicability::MachineApplicable,\n         );\n     }\n }"}, {"sha": "641680431a2cb2ccc6a6441688559f6e6d63fb32", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dce670c73c4e77a00cb6e3073318faac92969956/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dce670c73c4e77a00cb6e3073318faac92969956/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=dce670c73c4e77a00cb6e3073318faac92969956", "patch": "@@ -5,8 +5,6 @@ LL |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::zero-width-space` implied by `-D warnings`\n-   = help: Consider replacing the string with:\n-           \"\"Here >/u{200B}< is a ZWS, and /u{200B}another\"\"\n \n error: non-nfc unicode sequence detected\n   --> $DIR/unicode.rs:9:12\n@@ -15,8 +13,6 @@ LL |     print!(\"\u0300a\u0300h?\");\n    |            ^^^^^\n    |\n    = note: `-D clippy::unicode-not-nfc` implied by `-D warnings`\n-   = help: Consider replacing the string with:\n-           \"\"\u0300\u00e0h?\"\"\n \n error: literal non-ASCII character detected\n   --> $DIR/unicode.rs:15:12\n@@ -25,8 +21,6 @@ LL |     print!(\"\u00dcben!\");\n    |            ^^^^^^^\n    |\n    = note: `-D clippy::non-ascii-literal` implied by `-D warnings`\n-   = help: Consider replacing the string with:\n-           \"\"/u{dc}ben!\"\"\n \n error: aborting due to 3 previous errors\n "}]}