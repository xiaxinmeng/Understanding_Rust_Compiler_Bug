{"sha": "520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMGU4YjAwMWVmN2M0OWRjZjFhZDhmMWY3ODE3ZjJiMTZhZDcwOWI=", "commit": {"author": {"name": "Clar Fon", "email": "them@lightdark.xyz", "date": "2018-12-19T21:33:53Z"}, "committer": {"name": "Clar Fon", "email": "them@lightdark.xyz", "date": "2019-01-22T22:45:11Z"}, "message": "Move TrustedRandomAccess into Zip module", "tree": {"sha": "bb69ea14d459883aba43b80b9fad5bdc7c641296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb69ea14d459883aba43b80b9fad5bdc7c641296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "html_url": "https://github.com/rust-lang/rust/commit/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c44e1f08553af4309d16ab098522e57a057fabc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c44e1f08553af4309d16ab098522e57a057fabc", "html_url": "https://github.com/rust-lang/rust/commit/3c44e1f08553af4309d16ab098522e57a057fabc"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "f2bedf390e3bcf4594da42fb7b626d0c36f204ae", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "patch": "@@ -1,6 +1,5 @@\n use cmp;\n use fmt;\n-use iter_private::TrustedRandomAccess;\n use ops::Try;\n use usize;\n use intrinsics;\n@@ -11,6 +10,7 @@ mod zip;\n \n pub use self::zip::Zip;\n pub(super) use self::zip::ZipImpl;\n+pub(crate) use self::zip::TrustedRandomAccess;\n \n /// A double-ended iterator with the direction inverted.\n ///"}, {"sha": "6a0a7d8b12cdfa98467358d1ba29a6edc85e4af5", "filename": "src/libcore/iter/adapters/zip.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs?ref=520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "patch": "@@ -1,5 +1,4 @@\n use cmp;\n-use iter_private::TrustedRandomAccess;\n use super::super::{Iterator, DoubleEndedIterator, ExactSizeIterator, FusedIterator, TrustedLen};\n \n /// An iterator that iterates two other iterators simultaneously.\n@@ -259,3 +258,20 @@ impl<A, B> FusedIterator for Zip<A, B>\n unsafe impl<A, B> TrustedLen for Zip<A, B>\n     where A: TrustedLen, B: TrustedLen,\n {}\n+\n+/// An iterator whose items are random-accessible efficiently\n+///\n+/// # Safety\n+///\n+/// The iterator's .len() and size_hint() must be exact.\n+/// `.len()` must be cheap to call.\n+///\n+/// .get_unchecked() must return distinct mutable references for distinct\n+/// indices (if applicable), and must return a valid reference if index is in\n+/// 0..self.len().\n+pub(crate) unsafe trait TrustedRandomAccess : ExactSizeIterator {\n+    unsafe fn get_unchecked(&mut self, i: usize) -> Self::Item;\n+    /// Returns `true` if getting an iterator element may have\n+    /// side effects. Remember to take inner iterators into account.\n+    fn may_have_side_effect() -> bool;\n+}"}, {"sha": "1f390d7e0a925e7b74b2b99bff15b9abd1871cec", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "patch": "@@ -354,6 +354,7 @@ pub use self::adapters::Flatten;\n pub use self::adapters::Copied;\n \n use self::adapters::{flatten_compat, ChainState, ZipImpl};\n+pub(crate) use self::adapters::TrustedRandomAccess;\n \n mod range;\n mod sources;"}, {"sha": "c8cd72371e74880e17ec4e1c049e6c609480bae1", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "patch": "@@ -219,7 +219,6 @@ pub mod task;\n pub mod alloc;\n \n // note: does not need to be public\n-mod iter_private;\n mod tuple;\n mod unit;\n "}, {"sha": "d062da0c247adfb9ccb517365d94ddfb5ea4bc0c", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "patch": "@@ -34,7 +34,6 @@ use result::Result::{Ok, Err};\n use ptr;\n use mem;\n use marker::{Copy, Send, Sync, Sized, self};\n-use iter_private::TrustedRandomAccess;\n \n #[unstable(feature = \"slice_internals\", issue = \"0\",\n            reason = \"exposed from core to be reused in std; use the memchr crate\")]"}, {"sha": "ac920185636549b5eadc80504d1ddc2cb5f80c2a", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=520e8b001ef7c49dcf1ad8f1f7817f2b16ad709b", "patch": "@@ -9,8 +9,7 @@ use self::pattern::{Searcher, ReverseSearcher, DoubleEndedSearcher};\n \n use char;\n use fmt;\n-use iter::{Map, Cloned, FusedIterator, TrustedLen, Filter};\n-use iter_private::TrustedRandomAccess;\n+use iter::{Map, Cloned, FusedIterator, TrustedLen, TrustedRandomAccess, Filter};\n use slice::{self, SliceIndex, Split as SliceSplit};\n use mem;\n "}]}