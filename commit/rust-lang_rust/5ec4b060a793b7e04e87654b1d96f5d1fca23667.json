{"sha": "5ec4b060a793b7e04e87654b1d96f5d1fca23667", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYzRiMDYwYTc5M2I3ZTA0ZTg3NjU0YjFkOTZmNWQxZmNhMjM2Njc=", "commit": {"author": {"name": "Henry Boisdequin", "email": "65845077+henryboisdequin@users.noreply.github.com", "date": "2021-02-16T08:50:36Z"}, "committer": {"name": "Henry Boisdequin", "email": "65845077+henryboisdequin@users.noreply.github.com", "date": "2021-02-16T08:50:36Z"}, "message": "make `visit_projection` take a `PlaceRef`", "tree": {"sha": "635245a6f54666c9a69f2053da18e30b7ecad627", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/635245a6f54666c9a69f2053da18e30b7ecad627"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ec4b060a793b7e04e87654b1d96f5d1fca23667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ec4b060a793b7e04e87654b1d96f5d1fca23667", "html_url": "https://github.com/rust-lang/rust/commit/5ec4b060a793b7e04e87654b1d96f5d1fca23667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ec4b060a793b7e04e87654b1d96f5d1fca23667/comments", "author": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "html_url": "https://github.com/rust-lang/rust/commit/30c5125fbe86f48a547a23917dcafab1b3f3ac7e"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "289629d921545b87bd0167257e0ae8b66d14ee58", "filename": "compiler/rustc_codegen_ssa/src/mir/analyze.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs?ref=5ec4b060a793b7e04e87654b1d96f5d1fca23667", "patch": "@@ -199,7 +199,7 @@ impl<Bx: BuilderMethods<'a, 'tcx>> LocalAnalyzer<'mir, 'a, 'tcx, Bx> {\n             }\n \n             self.visit_local(&place_ref.local, context, location);\n-            self.visit_projection(place_ref.local, place_ref.projection, context, location);\n+            self.visit_projection(*place_ref, context, location);\n         }\n     }\n }"}, {"sha": "66dd278b578402773ed65dad641fca77670a37cf", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=5ec4b060a793b7e04e87654b1d96f5d1fca23667", "patch": "@@ -998,12 +998,11 @@ macro_rules! visit_place_fns {\n     () => {\n         fn visit_projection(\n             &mut self,\n-            local: Local,\n-            projection: &[PlaceElem<'tcx>],\n+            place_ref: PlaceRef<'tcx>,\n             context: PlaceContext,\n             location: Location,\n         ) {\n-            self.super_projection(local, projection, context, location);\n+            self.super_projection(place_ref.local, place_ref.projection, context, location);\n         }\n \n         fn visit_projection_elem(\n@@ -1033,7 +1032,7 @@ macro_rules! visit_place_fns {\n \n             self.visit_local(&place.local, context, location);\n \n-            self.visit_projection(place.local, &place.projection, context, location);\n+            self.visit_projection(place.as_ref(), context, location);\n         }\n \n         fn super_projection("}, {"sha": "2d20f0d9547c1b75586deb3f8e017d5de1120815", "filename": "compiler/rustc_mir/src/dataflow/impls/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fimpls%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fimpls%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fimpls%2Fliveness.rs?ref=5ec4b060a793b7e04e87654b1d96f5d1fca23667", "patch": "@@ -95,7 +95,7 @@ where\n \n         // We purposefully do not call `super_place` here to avoid calling `visit_local` for this\n         // place with one of the `Projection` variants of `PlaceContext`.\n-        self.visit_projection(local, projection, context, location);\n+        self.visit_projection(place.as_ref(), context, location);\n \n         match DefUse::for_place(context) {\n             // Treat derefs as a use of the base local. `*p = 4` is not a def of `p` but a use."}, {"sha": "aaf2c83d1d936d8d62481e88315e0592f11f97be", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ec4b060a793b7e04e87654b1d96f5d1fca23667/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=5ec4b060a793b7e04e87654b1d96f5d1fca23667", "patch": "@@ -508,12 +508,7 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                         }\n                     };\n                     self.visit_local(&reborrowed_place_ref.local, ctx, location);\n-                    self.visit_projection(\n-                        reborrowed_place_ref.local,\n-                        reborrowed_place_ref.projection,\n-                        ctx,\n-                        location,\n-                    );\n+                    self.visit_projection(reborrowed_place_ref, ctx, location);\n                     return;\n                 }\n             }\n@@ -526,12 +521,7 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                         Mutability::Mut => PlaceContext::MutatingUse(MutatingUseContext::AddressOf),\n                     };\n                     self.visit_local(&reborrowed_place_ref.local, ctx, location);\n-                    self.visit_projection(\n-                        reborrowed_place_ref.local,\n-                        reborrowed_place_ref.projection,\n-                        ctx,\n-                        location,\n-                    );\n+                    self.visit_projection(reborrowed_place_ref, ctx, location);\n                     return;\n                 }\n             }"}]}