{"sha": "968b66ad40c3925aaf34bf90740dfb3377c8d786", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2OGI2NmFkNDBjMzkyNWFhZjM0YmY5MDc0MGRmYjMzNzdjOGQ3ODY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-10-03T20:59:38Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-10-03T20:59:38Z"}, "message": "rustc: Implement C stack stdcall", "tree": {"sha": "9518f777a21495a828e48e9aa4c788d9038f754b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9518f777a21495a828e48e9aa4c788d9038f754b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/968b66ad40c3925aaf34bf90740dfb3377c8d786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/968b66ad40c3925aaf34bf90740dfb3377c8d786", "html_url": "https://github.com/rust-lang/rust/commit/968b66ad40c3925aaf34bf90740dfb3377c8d786", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/968b66ad40c3925aaf34bf90740dfb3377c8d786/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9be0dc1250aaf657d9c50d4f98aacb73a9aa832c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9be0dc1250aaf657d9c50d4f98aacb73a9aa832c", "html_url": "https://github.com/rust-lang/rust/commit/9be0dc1250aaf657d9c50d4f98aacb73a9aa832c"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "460bccb308730e559917c1242d52a5863745e581", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -54,7 +54,8 @@ fn visit_item(e: env, i: @ast::item) {\n     alt i.node {\n       ast::item_native_mod(m) {\n         if m.abi != ast::native_abi_rust && m.abi != ast::native_abi_cdecl &&\n-                m.abi != ast::native_abi_c_stack_cdecl {\n+                m.abi != ast::native_abi_c_stack_cdecl &&\n+                m.abi != ast::native_abi_c_stack_stdcall {\n             ret;\n         }\n         let cstore = e.sess.get_cstore();"}, {"sha": "3158b623439e973b75b39c9405ad71d7319386d6", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -264,6 +264,7 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n           'l' { abi = ast::native_abi_llvm; }\n           's' { abi = ast::native_abi_x86stdcall; }\n           'C' { abi = ast::native_abi_c_stack_cdecl; }\n+          'S' { abi = ast::native_abi_c_stack_stdcall; }\n         }\n         let func = parse_ty_fn(st, sd);\n         ret ty::mk_native_fn(st.tcx, abi, func.args, func.ty);"}, {"sha": "55c3b2bc5b71be12737b6c9b0b350c524e0cb815", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -148,6 +148,7 @@ fn enc_sty(w: io::writer, cx: @ctxt, st: ty::sty) {\n           native_abi_llvm. { w.write_char('l'); }\n           native_abi_x86stdcall. { w.write_char('s'); }\n           native_abi_c_stack_cdecl. { w.write_char('C'); }\n+          native_abi_c_stack_stdcall. { w.write_char('S'); }\n         }\n         enc_ty_fn(w, cx, args, out, return_val, []);\n       }"}, {"sha": "eaa38712dab4533ec39e1f5b9027e91b84ec1a20", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -5741,7 +5741,8 @@ pure fn native_abi_requires_pair(abi: ast::native_abi) -> bool {\n         ast::native_abi_rust. | ast::native_abi_cdecl. |\n         ast::native_abi_llvm. | ast::native_abi_rust_intrinsic. |\n         ast::native_abi_x86stdcall. { ret true; }\n-        ast::native_abi_c_stack_cdecl. { ret false; }\n+        ast::native_abi_c_stack_cdecl. |\n+        ast::native_abi_c_stack_stdcall. { ret false; }\n     }\n }\n \n@@ -5809,6 +5810,13 @@ fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n         ccx.item_symbols.insert(id, name);\n         ret;\n       }\n+      ast::native_abi_c_stack_stdcall. {\n+        let llfn = decl_fn(ccx.llmod, name, lib::llvm::LLVMX86StdcallCallConv,\n+                           T_fn([], T_int()));\n+        ccx.item_ids.insert(id, llfn);\n+        ccx.item_symbols.insert(id, name);\n+        ret;\n+      }\n     }\n \n     let path = path;"}, {"sha": "52aa6cb31d929583f2bf56f4d45ff6b421f80663", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -420,6 +420,7 @@ tag native_abi {\n     native_abi_rust_intrinsic;\n     native_abi_x86stdcall;\n     native_abi_c_stack_cdecl;\n+    native_abi_c_stack_stdcall;\n }\n \n type native_mod ="}, {"sha": "5e9d49d833ce05c79194e47e9759c3490e23063c", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -2014,6 +2014,8 @@ fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n             abi = ast::native_abi_x86stdcall;\n         } else if str::eq(t, \"c-stack-cdecl\") {\n             abi = ast::native_abi_c_stack_cdecl;\n+        } else if str::eq(t, \"c-stack-stdcall\") {\n+            abi = ast::native_abi_c_stack_stdcall;\n         } else {\n             p.fatal(\"unsupported abi: \" + t);\n         }"}, {"sha": "555cd7fddeea39b5345a0df623f0bbc2a34ff9d2", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968b66ad40c3925aaf34bf90740dfb3377c8d786/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=968b66ad40c3925aaf34bf90740dfb3377c8d786", "patch": "@@ -411,6 +411,9 @@ fn print_item(s: ps, item: @ast::item) {\n           ast::native_abi_c_stack_cdecl. {\n             word_nbsp(s, \"\\\"c-stack-cdecl\\\"\");\n           }\n+          ast::native_abi_c_stack_stdcall. {\n+            word_nbsp(s, \"\\\"c-stack-stdcall\\\"\");\n+          }\n         }\n         word_nbsp(s, \"mod\");\n         word_nbsp(s, item.ident);"}]}