{"sha": "80b5f98d038346f9d4283b19fb117534d289e60f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYjVmOThkMDM4MzQ2ZjlkNDI4M2IxOWZiMTE3NTM0ZDI4OWU2MGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-01-25T20:56:30Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-01-25T20:56:30Z"}, "message": "remove outdated text", "tree": {"sha": "aee805c7934b70817d016f619e8cf4f53eabe495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aee805c7934b70817d016f619e8cf4f53eabe495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80b5f98d038346f9d4283b19fb117534d289e60f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80b5f98d038346f9d4283b19fb117534d289e60f", "html_url": "https://github.com/rust-lang/rust/commit/80b5f98d038346f9d4283b19fb117534d289e60f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80b5f98d038346f9d4283b19fb117534d289e60f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c0c2af3dc15cfa5dfab4d8327262bc04d120ce0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c0c2af3dc15cfa5dfab4d8327262bc04d120ce0", "html_url": "https://github.com/rust-lang/rust/commit/1c0c2af3dc15cfa5dfab4d8327262bc04d120ce0"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "8e6d63d55dfcc8a8080f20cf67775f3bb3edef4e", "filename": "src/librustc/dep_graph/README.md", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/80b5f98d038346f9d4283b19fb117534d289e60f/src%2Flibrustc%2Fdep_graph%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/80b5f98d038346f9d4283b19fb117534d289e60f/src%2Flibrustc%2Fdep_graph%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2FREADME.md?ref=80b5f98d038346f9d4283b19fb117534d289e60f", "patch": "@@ -422,24 +422,3 @@ to see something like:\n That first edge looks suspicious to you. So you set\n `RUST_FORBID_DEP_GRAPH_EDGE` to `Hir&foo -> Collect&bar`, re-run, and\n then observe the backtrace. Voila, bug fixed!\n-\n-### Inlining of HIR nodes\n-\n-For the time being, at least, we still sometimes \"inline\" HIR nodes\n-from other crates into the current HIR map. This creates a weird\n-scenario where the same logical item (let's call it `X`) has two\n-def-ids: the original def-id `X` and a new, inlined one `X'`. `X'` is\n-in the current crate, but it's not like other HIR nodes: in\n-particular, when we restart compilation, it will not be available to\n-hash. Therefore, we do not want `Hir(X')` nodes appearing in our\n-graph.  Instead, we want a \"read\" of `Hir(X')` to be represented as a\n-read of `MetaData(X)`, since the metadata for `X` is where the inlined\n-representation originated in the first place.\n-\n-To achieve this, the HIR map will detect if the def-id originates in\n-an inlined node and add a dependency to a suitable `MetaData` node\n-instead. If you are reading a HIR node and are not sure if it may be\n-inlined or not, you can use `tcx.map.read(node_id)` and it will detect\n-whether the node is inlined or not and do the right thing.  You can\n-also use `tcx.map.is_inlined_def_id()` and\n-`tcx.map.is_inlined_node_id()` to test."}]}