{"sha": "386a144e51d0b162928f95c4474c67944d7ebacb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NmExNDRlNTFkMGIxNjI5MjhmOTVjNDQ3NGM2Nzk0NGQ3ZWJhY2I=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-03-26T19:53:17Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-04-10T22:48:16Z"}, "message": "book: 'x' is already taken, so use something else", "tree": {"sha": "c35ffdb00106e1ebf44a163aac34205914a69c22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35ffdb00106e1ebf44a163aac34205914a69c22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/386a144e51d0b162928f95c4474c67944d7ebacb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/386a144e51d0b162928f95c4474c67944d7ebacb", "html_url": "https://github.com/rust-lang/rust/commit/386a144e51d0b162928f95c4474c67944d7ebacb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/386a144e51d0b162928f95c4474c67944d7ebacb/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c897ac04e2ebda378fd9e38f6ec0878ae3a2baf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c897ac04e2ebda378fd9e38f6ec0878ae3a2baf7", "html_url": "https://github.com/rust-lang/rust/commit/c897ac04e2ebda378fd9e38f6ec0878ae3a2baf7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ae83a930a187ce78053bf0895b979f58f6c526ea", "filename": "src/doc/trpl/method-syntax.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/386a144e51d0b162928f95c4474c67944d7ebacb/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/386a144e51d0b162928f95c4474c67944d7ebacb/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md?ref=386a144e51d0b162928f95c4474c67944d7ebacb", "patch": "@@ -4,15 +4,15 @@ Functions are great, but if you want to call a bunch of them on some data, it\n can be awkward. Consider this code:\n \n ```{rust,ignore}\n-baz(bar(foo(x)));\n+baz(bar(foo)));\n ```\n \n We would read this left-to right, and so we see \"baz bar foo.\" But this isn't the\n order that the functions would get called in, that's inside-out: \"foo bar baz.\"\n Wouldn't it be nice if we could do this instead?\n \n ```{rust,ignore}\n-x.foo().bar().baz();\n+foo.bar().baz();\n ```\n \n Luckily, as you may have guessed with the leading question, you can! Rust provides\n@@ -47,8 +47,8 @@ This will print `12.566371`.\n We've made a struct that represents a circle. We then write an `impl` block,\n and inside it, define a method, `area`. Methods take a  special first\n parameter, of which there are three variants: `self`, `&self`, and `&mut self`.\n-You can think of this first parameter as being the `x` in `x.foo()`. The three\n-variants correspond to the three kinds of thing `x` could be: `self` if it's\n+You can think of this first parameter as being the `foo` in `foo.bar()`. The three\n+variants correspond to the three kinds of things `foo` could be: `self` if it's\n just a value on the stack, `&self` if it's a reference, and `&mut self` if it's\n a mutable reference. We should default to using `&self`, as you should prefer\n borrowing over taking ownership, as well as taking immutable references"}]}