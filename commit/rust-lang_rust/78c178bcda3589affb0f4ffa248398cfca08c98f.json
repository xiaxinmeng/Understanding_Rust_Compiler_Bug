{"sha": "78c178bcda3589affb0f4ffa248398cfca08c98f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YzE3OGJjZGEzNTg5YWZmYjBmNGZmYTI0ODM5OGNmY2EwOGM5OGY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-21T07:57:30Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-21T07:57:35Z"}, "message": "traits/fulfill: add a couple FIXME comments about potential optimizations.", "tree": {"sha": "63682bffc1b734d4291f0258f3edba23dfd46feb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63682bffc1b734d4291f0258f3edba23dfd46feb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78c178bcda3589affb0f4ffa248398cfca08c98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78c178bcda3589affb0f4ffa248398cfca08c98f", "html_url": "https://github.com/rust-lang/rust/commit/78c178bcda3589affb0f4ffa248398cfca08c98f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78c178bcda3589affb0f4ffa248398cfca08c98f/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40f73e74d3d84a1f0ae89a933fa31078850a1b20", "url": "https://api.github.com/repos/rust-lang/rust/commits/40f73e74d3d84a1f0ae89a933fa31078850a1b20", "html_url": "https://github.com/rust-lang/rust/commit/40f73e74d3d84a1f0ae89a933fa31078850a1b20"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "9eddeba50c1ad157cb5e7bf6e4c423f69951d685", "filename": "src/librustc_trait_selection/traits/fulfill.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78c178bcda3589affb0f4ffa248398cfca08c98f/src%2Flibrustc_trait_selection%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78c178bcda3589affb0f4ffa248398cfca08c98f/src%2Flibrustc_trait_selection%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ffulfill.rs?ref=78c178bcda3589affb0f4ffa248398cfca08c98f", "patch": "@@ -73,6 +73,9 @@ pub struct FulfillmentContext<'tcx> {\n #[derive(Clone, Debug)]\n pub struct PendingPredicateObligation<'tcx> {\n     pub obligation: PredicateObligation<'tcx>,\n+    // FIXME(eddyb) look into whether this could be a `SmallVec`.\n+    // Judging by the comment in `process_obligation`, the 1-element case\n+    // is common so this could be a `SmallVec<[TyOrConstInferVar<'tcx>; 1]>`.\n     pub stalled_on: Vec<TyOrConstInferVar<'tcx>>,\n }\n \n@@ -538,6 +541,8 @@ fn trait_ref_type_vars<'a, 'tcx>(\n         // FIXME(eddyb) walk over `GenericArg` to support const infer vars.\n         .input_types()\n         .map(|ty| selcx.infcx().resolve_vars_if_possible(&ty))\n+        // FIXME(eddyb) try using `maybe_walk` to skip *all* subtrees that\n+        // don't contain inference variables, not just the outermost level.\n         // FIXME(eddyb) use `has_infer_types_or_const`.\n         .filter(|ty| ty.has_infer_types())\n         .flat_map(|ty| ty.walk())"}]}