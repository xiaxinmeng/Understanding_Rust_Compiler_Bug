{"sha": "9c022e3013b0210de0c54b2cf89ba8459c11b66d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMDIyZTMwMTNiMDIxMGRlMGM1NGIyY2Y4OWJhODQ1OWMxMWI2NmQ=", "commit": {"author": {"name": "Arpad Borsos", "email": "swatinem@swatinem.de", "date": "2021-04-08T16:55:28Z"}, "committer": {"name": "Arpad Borsos", "email": "swatinem@swatinem.de", "date": "2021-04-08T16:55:28Z"}, "message": "Move CI to rust-cache Action", "tree": {"sha": "83486a829b451a6a207f1c3c9011fa1b39da2ed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83486a829b451a6a207f1c3c9011fa1b39da2ed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c022e3013b0210de0c54b2cf89ba8459c11b66d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZNNjbpmzULCa7LeL/HvKd4JLMpgFAmBvNaAACgkQ/HvKd4JL\nMph88RAAkzDR13L6dh0Geu3vSqQ93QeSjuRJN2+whzp5uUWqpV6UWc9ga2JTG59Y\n11FYg+waS4RV+qJ/rKULVdFrbR7M5cqOnqRYpSIWSzCjxCsYAycZFShsW/W527lZ\nUg27LrHvTqd5N81yOm4nZyUS7CE0ra+znfvtj6t2U61YJmQ6pPWbd+Sxf2JEbCRZ\n+h97ajRIWz/GxI6/xVr6SHLS9HGP3prlIquunsaYpDHIFOmchdNqbF7zioOoSgEk\njzNrJiQ47N/AFbGsi+NK7CewgcHlWVHB266fuMPX7EqsRD1LQMS/z750moK0zCFj\nt3jL7iBZ7gFPl21a+LTyxQ+xXAYvCKYecC1v20/CRuXRmJTKy7BdhqfDDZrgw6xt\nL+c0N1oFaLSRhBgSwvYWeaziaY1qx4lWqxUNEnmpxXP0ZRvQS8ZK/TdLMJj2k5B6\niLIYwM1AYx1CK4ztAJgYU+phdtkTJUNfR+6fRhRH2KYQHto+87Z7/BcX1UdpG5wX\naNOrDiY/JRKefMFxlbo1TMmFSbqYaGp+zkuQO2snWN74QfSoPeLBzCFhX3OyEEMQ\nG9umUjo0W7ahfxsMmheM9fs6syse8Z4R43LX0HDq1u5jQAW1e1dqU9VKXP9f+1nM\n9Bah/Qnqm/I1FvZxNf8nFX/wnnOd5vc4o2RdmIzTMunh+97jRDU=\n=tQJ3\n-----END PGP SIGNATURE-----", "payload": "tree 83486a829b451a6a207f1c3c9011fa1b39da2ed1\nparent 94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc\nauthor Arpad Borsos <swatinem@swatinem.de> 1617900928 +0200\ncommitter Arpad Borsos <swatinem@swatinem.de> 1617900928 +0200\n\nMove CI to rust-cache Action\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c022e3013b0210de0c54b2cf89ba8459c11b66d", "html_url": "https://github.com/rust-lang/rust/commit/9c022e3013b0210de0c54b2cf89ba8459c11b66d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c022e3013b0210de0c54b2cf89ba8459c11b66d/comments", "author": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "html_url": "https://github.com/rust-lang/rust/commit/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc"}], "stats": {"total": 121, "additions": 4, "deletions": 117}, "files": [{"sha": "9a21ea1fdf3872288eca6816e6ca51193034eb7a", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 4, "deletions": 31, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9c022e3013b0210de0c54b2cf89ba8459c11b66d/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/9c022e3013b0210de0c54b2cf89ba8459c11b66d/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=9c022e3013b0210de0c54b2cf89ba8459c11b66d", "patch": "@@ -42,14 +42,6 @@ jobs:\n       if: matrix.os == 'windows-latest'\n       run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n \n-    # Work around https://github.com/actions/cache/issues/403 by using GNU tar\n-    # instead of BSD tar.\n-    - name: Install GNU tar\n-      if: matrix.os == 'macos-latest'\n-      run: |\n-        brew install gnu-tar\n-        echo PATH=\"/usr/local/opt/gnu-tar/libexec/gnubin:$PATH\" >> $GITHUB_ENV\n-\n     - name: Install Rust toolchain\n       uses: actions-rs/toolchain@v1\n       with:\n@@ -58,29 +50,15 @@ jobs:\n         override: true\n         components: rustfmt, rust-src\n \n-    - name: Cache cargo directories\n-      uses: actions/cache@v2\n-      with:\n-        path: |\n-          ~/.cargo/registry\n-          ~/.cargo/git\n-        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n-\n-    - name: Cache cargo target dir\n-      uses: actions/cache@v2\n-      with:\n-        path: target\n-        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}\n+    - name: Cache Dependencies\n+      uses: Swatinem/rust-cache@v1\n \n     - name: Compile\n       run: cargo test --no-run --locked\n \n     - name: Test\n       run: cargo test\n \n-    - name: Prepare cache\n-      run: cargo xtask pre-cache\n-\n   # Weird targets to catch non-portable code\n   rust-cross:\n     name: Rust Cross\n@@ -103,13 +81,8 @@ jobs:\n     - name: Install Rust targets\n       run: rustup target add ${{ env.targets }}\n \n-    - name: Cache cargo directories\n-      uses: actions/cache@v2\n-      with:\n-        path: |\n-          ~/.cargo/registry\n-          ~/.cargo/git\n-        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n+    - name: Cache Dependencies\n+      uses: Swatinem/rust-cache@v1\n \n     - name: Check\n       run: |"}, {"sha": "34e447c2f76d44ce363fa3cff41672625a1167b5", "filename": "xtask/src/flags.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9c022e3013b0210de0c54b2cf89ba8459c11b66d/xtask%2Fsrc%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c022e3013b0210de0c54b2cf89ba8459c11b66d/xtask%2Fsrc%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fflags.rs?ref=9c022e3013b0210de0c54b2cf89ba8459c11b66d", "patch": "@@ -28,7 +28,6 @@ xflags::xflags! {\n         }\n \n         cmd fuzz-tests {}\n-        cmd pre-cache {}\n \n         cmd release {\n             optional --dry-run\n@@ -63,7 +62,6 @@ pub enum XtaskCmd {\n     Help(Help),\n     Install(Install),\n     FuzzTests(FuzzTests),\n-    PreCache(PreCache),\n     Release(Release),\n     Promote(Promote),\n     Dist(Dist),\n@@ -91,9 +89,6 @@ pub struct Lint;\n #[derive(Debug)]\n pub struct FuzzTests;\n \n-#[derive(Debug)]\n-pub struct PreCache;\n-\n #[derive(Debug)]\n pub struct Release {\n     pub dry_run: bool,"}, {"sha": "0dbbde27597a53d6d0f4407d1527f2cd385990d8", "filename": "xtask/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c022e3013b0210de0c54b2cf89ba8459c11b66d/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c022e3013b0210de0c54b2cf89ba8459c11b66d/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=9c022e3013b0210de0c54b2cf89ba8459c11b66d", "patch": "@@ -18,7 +18,6 @@ mod install;\n mod release;\n mod dist;\n mod metrics;\n-mod pre_cache;\n \n use anyhow::{bail, Result};\n use std::{\n@@ -41,7 +40,6 @@ fn main() -> Result<()> {\n         }\n         flags::XtaskCmd::Install(cmd) => cmd.run(),\n         flags::XtaskCmd::FuzzTests(_) => run_fuzzer(),\n-        flags::XtaskCmd::PreCache(cmd) => cmd.run(),\n         flags::XtaskCmd::Release(cmd) => cmd.run(),\n         flags::XtaskCmd::Promote(cmd) => cmd.run(),\n         flags::XtaskCmd::Dist(flags) => {"}, {"sha": "b456224fd692c4a5d9791b7236b1d6a055c59f56", "filename": "xtask/src/pre_cache.rs", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc/xtask%2Fsrc%2Fpre_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc/xtask%2Fsrc%2Fpre_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fpre_cache.rs?ref=94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "patch": "@@ -1,79 +0,0 @@\n-use std::{\n-    fs::FileType,\n-    path::{Path, PathBuf},\n-};\n-\n-use anyhow::Result;\n-use xshell::rm_rf;\n-\n-use crate::flags;\n-\n-impl flags::PreCache {\n-    /// Cleans the `./target` dir after the build such that only\n-    /// dependencies are cached on CI.\n-    pub(crate) fn run(self) -> Result<()> {\n-        let slow_tests_cookie = Path::new(\"./target/.slow_tests_cookie\");\n-        if !slow_tests_cookie.exists() {\n-            panic!(\"slow tests were skipped on CI!\")\n-        }\n-        rm_rf(slow_tests_cookie)?;\n-\n-        for path in read_dir(\"./target/debug\", FileType::is_file)? {\n-            // Can't delete yourself on windows :-(\n-            if !path.ends_with(\"xtask.exe\") {\n-                rm_rf(&path)?\n-            }\n-        }\n-\n-        rm_rf(\"./target/.rustc_info.json\")?;\n-\n-        let to_delete = read_dir(\"./crates\", FileType::is_dir)?\n-            .into_iter()\n-            .map(|path| path.file_name().unwrap().to_string_lossy().replace('-', \"_\"))\n-            .collect::<Vec<_>>();\n-\n-        for &dir in [\"./target/debug/deps\", \"target/debug/.fingerprint\"].iter() {\n-            for path in read_dir(dir, |_file_type| true)? {\n-                if path.ends_with(\"xtask.exe\") {\n-                    continue;\n-                }\n-                let file_name = path.file_name().unwrap().to_string_lossy();\n-                let (stem, _) = match rsplit_once(&file_name, '-') {\n-                    Some(it) => it,\n-                    None => {\n-                        rm_rf(path)?;\n-                        continue;\n-                    }\n-                };\n-                let stem = stem.replace('-', \"_\");\n-                if to_delete.contains(&stem) {\n-                    rm_rf(path)?;\n-                }\n-            }\n-        }\n-\n-        Ok(())\n-    }\n-}\n-fn read_dir(path: impl AsRef<Path>, cond: impl Fn(&FileType) -> bool) -> Result<Vec<PathBuf>> {\n-    read_dir_impl(path.as_ref(), &cond)\n-}\n-\n-fn read_dir_impl(path: &Path, cond: &dyn Fn(&FileType) -> bool) -> Result<Vec<PathBuf>> {\n-    let mut res = Vec::new();\n-    for entry in path.read_dir()? {\n-        let entry = entry?;\n-        let file_type = entry.file_type()?;\n-        if cond(&file_type) {\n-            res.push(entry.path())\n-        }\n-    }\n-    Ok(res)\n-}\n-\n-fn rsplit_once(haystack: &str, delim: char) -> Option<(&str, &str)> {\n-    let mut split = haystack.rsplitn(2, delim);\n-    let suffix = split.next()?;\n-    let prefix = split.next()?;\n-    Some((prefix, suffix))\n-}"}]}