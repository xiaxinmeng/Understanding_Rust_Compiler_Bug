{"sha": "6fa061c5f96120e631678e3f449566f786397014", "node_id": "C_kwDOAAsO6NoAKDZmYTA2MWM1Zjk2MTIwZTYzMTY3OGUzZjQ0OTU2NmY3ODYzOTcwMTQ", "commit": {"author": {"name": "Matthew Woodcraft", "email": "matthew@woodcraft.me.uk", "date": "2022-04-16T20:58:36Z"}, "committer": {"name": "Matthew Woodcraft", "email": "matthew@woodcraft.me.uk", "date": "2022-04-16T20:58:36Z"}, "message": "Document rounding for floating-point primitive operations\n\nState that the four primitive operations honour IEEE 754 roundTiesToEven.\n\nDocumenting under \"Primitive Type f32\"; f64 refers to that.", "tree": {"sha": "fcdd5c2c4cd2e3edd85b1cb26cdc906bfd553c0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcdd5c2c4cd2e3edd85b1cb26cdc906bfd553c0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fa061c5f96120e631678e3f449566f786397014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa061c5f96120e631678e3f449566f786397014", "html_url": "https://github.com/rust-lang/rust/commit/6fa061c5f96120e631678e3f449566f786397014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fa061c5f96120e631678e3f449566f786397014/comments", "author": {"login": "mattheww", "id": 395747, "node_id": "MDQ6VXNlcjM5NTc0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/395747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattheww", "html_url": "https://github.com/mattheww", "followers_url": "https://api.github.com/users/mattheww/followers", "following_url": "https://api.github.com/users/mattheww/following{/other_user}", "gists_url": "https://api.github.com/users/mattheww/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattheww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattheww/subscriptions", "organizations_url": "https://api.github.com/users/mattheww/orgs", "repos_url": "https://api.github.com/users/mattheww/repos", "events_url": "https://api.github.com/users/mattheww/events{/privacy}", "received_events_url": "https://api.github.com/users/mattheww/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattheww", "id": 395747, "node_id": "MDQ6VXNlcjM5NTc0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/395747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattheww", "html_url": "https://github.com/mattheww", "followers_url": "https://api.github.com/users/mattheww/followers", "following_url": "https://api.github.com/users/mattheww/following{/other_user}", "gists_url": "https://api.github.com/users/mattheww/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattheww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattheww/subscriptions", "organizations_url": "https://api.github.com/users/mattheww/orgs", "repos_url": "https://api.github.com/users/mattheww/repos", "events_url": "https://api.github.com/users/mattheww/events{/privacy}", "received_events_url": "https://api.github.com/users/mattheww/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fa9789f596dd7639e1a242d466637b53179f4d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fa9789f596dd7639e1a242d466637b53179f4d1", "html_url": "https://github.com/rust-lang/rust/commit/2fa9789f596dd7639e1a242d466637b53179f4d1"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "2d4d773dcadb9c7bf28218fa331e5a0aef6478ff", "filename": "library/core/src/primitive_docs.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6fa061c5f96120e631678e3f449566f786397014/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa061c5f96120e631678e3f449566f786397014/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprimitive_docs.rs?ref=6fa061c5f96120e631678e3f449566f786397014", "patch": "@@ -982,6 +982,19 @@ mod prim_tuple {}\n ///   it is considered infectious as almost all calculations where one of the\n ///   operands is NaN will also result in NaN.\n ///\n+/// When the number resulting from a primitive operation (addition,\n+/// subtraction, multiplication, or division) on this type is not exactly\n+/// representable as `f32`, it is rounded according to the roundTiesToEven\n+/// direction defined in IEEE 754-2008. That means:\n+///\n+/// - The result is the representable value closest to the true value, if there\n+///   is a unique closest representable value.\n+/// - If the true value is exactly half-way between two representable values,\n+///   the result is the one with an even least-significant binary digit.\n+/// - If the true value's magnitude is \u2265 `f32::MAX` + 2<sup>(`f32::MAX_EXP` \u2212\n+///   `f32::MANTISSA_DIGITS` \u2212 1)</sup>, the result is \u221e or \u2212\u221e (preserving the\n+///   true value's sign).\n+///\n /// For more information on floating point numbers, see [Wikipedia][wikipedia].\n ///\n /// *[See also the `std::f32::consts` module](crate::f32::consts).*"}, {"sha": "2d4d773dcadb9c7bf28218fa331e5a0aef6478ff", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6fa061c5f96120e631678e3f449566f786397014/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa061c5f96120e631678e3f449566f786397014/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=6fa061c5f96120e631678e3f449566f786397014", "patch": "@@ -982,6 +982,19 @@ mod prim_tuple {}\n ///   it is considered infectious as almost all calculations where one of the\n ///   operands is NaN will also result in NaN.\n ///\n+/// When the number resulting from a primitive operation (addition,\n+/// subtraction, multiplication, or division) on this type is not exactly\n+/// representable as `f32`, it is rounded according to the roundTiesToEven\n+/// direction defined in IEEE 754-2008. That means:\n+///\n+/// - The result is the representable value closest to the true value, if there\n+///   is a unique closest representable value.\n+/// - If the true value is exactly half-way between two representable values,\n+///   the result is the one with an even least-significant binary digit.\n+/// - If the true value's magnitude is \u2265 `f32::MAX` + 2<sup>(`f32::MAX_EXP` \u2212\n+///   `f32::MANTISSA_DIGITS` \u2212 1)</sup>, the result is \u221e or \u2212\u221e (preserving the\n+///   true value's sign).\n+///\n /// For more information on floating point numbers, see [Wikipedia][wikipedia].\n ///\n /// *[See also the `std::f32::consts` module](crate::f32::consts).*"}]}