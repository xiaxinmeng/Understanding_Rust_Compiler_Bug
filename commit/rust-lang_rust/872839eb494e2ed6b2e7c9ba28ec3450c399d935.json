{"sha": "872839eb494e2ed6b2e7c9ba28ec3450c399d935", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MjgzOWViNDk0ZTJlZDZiMmU3YzliYTI4ZWMzNDUwYzM5OWQ5MzU=", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2021-06-17T11:11:40Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2021-06-17T11:11:40Z"}, "message": "Early return from `inject_profiler_runtime`", "tree": {"sha": "ccab2cf6a3e90afa5d144f139a90efae156c2241", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccab2cf6a3e90afa5d144f139a90efae156c2241"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872839eb494e2ed6b2e7c9ba28ec3450c399d935", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1ycQ10Ou2Tzw/6ueaKZbzZ0on/4FAmDLLgcACgkQaKZbzZ0o\nn/60Fw//ao/A/h6mdpkLe0T6HGkkKC3qbeSaQE8LA4Cg01xk5e2PpnnW/QHbMKfk\n+xYKukjHtYXY2z4xILWqc9/rTy1godZuqKAhlIL9laUlfkh4Gs9NhsQ6ofw+SiVD\nxKV1o/DGRLNEAGbF4WeuoEuCykNTtocK1zBiGi2z0oLQA4eE1NHMEtpIV2nfGwhb\neLNrHoeNC730A8DiIB/my0VMiBVW+N/nveE5hF+GnhSNWhBDo3ZsXBA6IXeQlLa6\nOgTQEnVYWGNivR4KgWuKOMY6R8iKr1Ek0IanYlhWHvvjO46URQqKvhUSjP2sqZJB\n9lHurVs/m4AWkGhDNIPXXxB4r3RGn5vntCkdE0epM87Pok4nyg0g9FhDlzuSUQEt\nOqGsuoMhROX0wW1ndFs5S/SRozoWRVM/SSQn9PcMoQUt0PBJe0wAQPtj0ZI7hMuH\nRaoYXTNxbed5LG6gRNTJqwrkNsr5HWBuxqW85B4iQjW68/7g+ERvImky007Xs8w4\nWImw0irnhyOlikXSqD3mIBxe+AlrTb7Cd5y0vZNNDgAuKIdgJXhKYKgL4nHOeHbp\nx2SbFBeS/xLUCAPHrQ4tw86YiaTujitwk5RgzpgHNpe5iMbT2ztiDNOvna8wNKqt\nUywmM1a5KRuQ1WiFR47jxIRSDRqcxvUsYS1jMCEwwWFoIvrQ5dk=\n=IQg/\n-----END PGP SIGNATURE-----", "payload": "tree ccab2cf6a3e90afa5d144f139a90efae156c2241\nparent 93c636211ca4b0b7745d6d4ca82587a27ddc59a8\nauthor Alan Egerton <eggyal@gmail.com> 1623928300 +0100\ncommitter Alan Egerton <eggyal@gmail.com> 1623928300 +0100\n\nEarly return from `inject_profiler_runtime`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872839eb494e2ed6b2e7c9ba28ec3450c399d935", "html_url": "https://github.com/rust-lang/rust/commit/872839eb494e2ed6b2e7c9ba28ec3450c399d935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872839eb494e2ed6b2e7c9ba28ec3450c399d935/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c636211ca4b0b7745d6d4ca82587a27ddc59a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c636211ca4b0b7745d6d4ca82587a27ddc59a8", "html_url": "https://github.com/rust-lang/rust/commit/93c636211ca4b0b7745d6d4ca82587a27ddc59a8"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "dbf36c5d397ea6a773955d85d49e1dae9628c694", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/872839eb494e2ed6b2e7c9ba28ec3450c399d935/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872839eb494e2ed6b2e7c9ba28ec3450c399d935/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=872839eb494e2ed6b2e7c9ba28ec3450c399d935", "patch": "@@ -769,32 +769,32 @@ impl<'a> CrateLoader<'a> {\n     }\n \n     fn inject_profiler_runtime(&mut self, krate: &ast::Crate) {\n-        if self.sess.instrument_coverage()\n-            || self.sess.opts.debugging_opts.profile\n-            || self.sess.opts.cg.profile_generate.enabled()\n+        let profiler_runtime = &self.sess.opts.debugging_opts.profiler_runtime;\n+\n+        if !(profiler_runtime.is_some()\n+            && (self.sess.instrument_coverage()\n+                || self.sess.opts.debugging_opts.profile\n+                || self.sess.opts.cg.profile_generate.enabled()))\n         {\n-            if let Some(name) =\n-                self.sess.opts.debugging_opts.profiler_runtime.as_deref().map(Symbol::intern)\n-            {\n-                info!(\"loading profiler\");\n-\n-                if name == sym::profiler_builtins\n-                    && self.sess.contains_name(&krate.attrs, sym::no_core)\n-                {\n-                    self.sess.err(\n-                        \"`profiler_builtins` crate (required by compiler options) \\\n-                                is not compatible with crate attribute `#![no_core]`\",\n-                    );\n-                }\n+            return;\n+        }\n \n-                let cnum = self.resolve_crate(name, DUMMY_SP, CrateDepKind::Implicit, None);\n-                let data = self.cstore.get_crate_data(cnum);\n+        info!(\"loading profiler\");\n \n-                // Sanity check the loaded crate to ensure it is indeed a profiler runtime\n-                if !data.is_profiler_runtime() {\n-                    self.sess.err(&format!(\"the crate `{}` is not a profiler runtime\", name));\n-                }\n-            }\n+        let name = Symbol::intern(profiler_runtime.as_ref().unwrap());\n+        if name == sym::profiler_builtins && self.sess.contains_name(&krate.attrs, sym::no_core) {\n+            self.sess.err(\n+                \"`profiler_builtins` crate (required by compiler options) \\\n+                        is not compatible with crate attribute `#![no_core]`\",\n+            );\n+        }\n+\n+        let cnum = self.resolve_crate(name, DUMMY_SP, CrateDepKind::Implicit, None);\n+        let data = self.cstore.get_crate_data(cnum);\n+\n+        // Sanity check the loaded crate to ensure it is indeed a profiler runtime\n+        if !data.is_profiler_runtime() {\n+            self.sess.err(&format!(\"the crate `{}` is not a profiler runtime\", name));\n         }\n     }\n "}]}