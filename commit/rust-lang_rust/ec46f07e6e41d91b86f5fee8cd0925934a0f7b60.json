{"sha": "ec46f07e6e41d91b86f5fee8cd0925934a0f7b60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNDZmMDdlNmU0MWQ5MWI4NmY1ZmVlOGNkMDkyNTkzNGEwZjdiNjA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-30T05:09:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-30T05:45:01Z"}, "message": "Add a task spawning benchmark\n\nThis is the kind of workload that the test runner generates - lots of tiny\nlittle tasks - and currently it leaves the CPU underutilized.", "tree": {"sha": "a5b87c9ea373152f5a3364b5392fc3e92e4ca189", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5b87c9ea373152f5a3364b5392fc3e92e4ca189"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec46f07e6e41d91b86f5fee8cd0925934a0f7b60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec46f07e6e41d91b86f5fee8cd0925934a0f7b60", "html_url": "https://github.com/rust-lang/rust/commit/ec46f07e6e41d91b86f5fee8cd0925934a0f7b60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec46f07e6e41d91b86f5fee8cd0925934a0f7b60/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6657e729de2d4544d4f014091ef05878937895dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6657e729de2d4544d4f014091ef05878937895dc", "html_url": "https://github.com/rust-lang/rust/commit/6657e729de2d4544d4f014091ef05878937895dc"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "0c63661ebae917d7bf6983d189521a01953db268", "filename": "src/test/bench/task-perf-spawnalot.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ec46f07e6e41d91b86f5fee8cd0925934a0f7b60/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec46f07e6e41d91b86f5fee8cd0925934a0f7b60/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs?ref=ec46f07e6e41d91b86f5fee8cd0925934a0f7b60", "patch": "@@ -0,0 +1,29 @@\n+use std;\n+import std::vec;\n+import std::task;\n+import std::uint;\n+import std::str;\n+\n+fn f(n: uint) {\n+    let i = 0u;\n+    while i < n {\n+        task::join(spawn g());\n+        i += 1u;\n+    }\n+}\n+\n+fn g() {}\n+\n+fn main(args: vec[str]) {\n+\n+    let n = if vec::len(args) < 2u {\n+        10u\n+    } else {\n+        uint::parse_buf(str::bytes(args.(1)), 10u)\n+    };\n+    let i = 0u;\n+    while i < n {\n+        spawn f(n);\n+        i += 1u;\n+    }\n+}\n\\ No newline at end of file"}]}