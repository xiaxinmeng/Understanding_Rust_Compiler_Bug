{"sha": "b10dc1af0661c68155c49f508fe7a26a2ea02083", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMGRjMWFmMDY2MWM2ODE1NWM0OWY1MDhmZTdhMjZhMmVhMDIwODM=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-01-23T09:25:03Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-02-16T02:04:10Z"}, "message": "Move semver to std and finish rustpkg", "tree": {"sha": "739a5d4a077e0faecba6a4b1378426bdcfa320f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/739a5d4a077e0faecba6a4b1378426bdcfa320f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b10dc1af0661c68155c49f508fe7a26a2ea02083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b10dc1af0661c68155c49f508fe7a26a2ea02083", "html_url": "https://github.com/rust-lang/rust/commit/b10dc1af0661c68155c49f508fe7a26a2ea02083", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b10dc1af0661c68155c49f508fe7a26a2ea02083/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2192d11cd197a983f3ceb58aad98786c1b9f890d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2192d11cd197a983f3ceb58aad98786c1b9f890d", "html_url": "https://github.com/rust-lang/rust/commit/2192d11cd197a983f3ceb58aad98786c1b9f890d"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "da13145b9f60f2ce87d5ef412fbe7304d031fa45", "filename": "src/libcore/core.rc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=b10dc1af0661c68155c49f508fe7a26a2ea02083", "patch": "@@ -169,8 +169,6 @@ pub mod reflect;\n pub mod condition;\n pub mod logging;\n pub mod util;\n-pub mod semver;\n-\n \n /* Reexported core operators */\n "}, {"sha": "bb858f9070d05c6120c08052c4af4f0957d4fa1c", "filename": "src/librustpkg/rustpkg.rc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibrustpkg%2Frustpkg.rc", "raw_url": "https://github.com/rust-lang/rust/raw/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibrustpkg%2Frustpkg.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Frustpkg.rc?ref=b10dc1af0661c68155c49f508fe7a26a2ea02083", "patch": "@@ -33,7 +33,7 @@ use send_map::linear::LinearMap;\n use rustc::metadata::filesearch;\n use rustc::driver::{driver, session};\n use syntax::{ast, attr, codemap, diagnostic, parse, visit};\n-use semver::Version;\n+use std::semver;\n \n mod usage;\n mod util;\n@@ -43,7 +43,7 @@ use util::Package;\n struct PackageScript {\n     id: ~str,\n     name: ~str,\n-    vers: Version,\n+    vers: semver::Version,\n     crates: ~[~str],\n     deps: ~[(~str, Option<~str>)],\n     input: driver::input,\n@@ -222,8 +222,7 @@ impl PackageScript {\n     }\n \n     // Build the bootstrap and run a command\n-    // FIXME: Use workcache to only compile the script when changed\n-    // FIXME: Use JIT once it works, it should be faster\n+    // FIXME (#4432): Use workcache to only compile the script when changed\n     fn run(cmd: ~str) -> int {\n         let work_dir = self.work_dir();\n         let input = self.input;"}, {"sha": "150098cb57dffb61392f3f4035b7b1e401f93cae", "filename": "src/librustpkg/util.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibrustpkg%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibrustpkg%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Futil.rs?ref=b10dc1af0661c68155c49f508fe7a26a2ea02083", "patch": "@@ -15,14 +15,14 @@ use rustc::driver::{driver, session};\n use syntax::ast_util::*;\n use syntax::{ast, attr, codemap, diagnostic, fold, parse, visit};\n use codemap::span;\n-use semver::Version;\n+use std::semver;\n use std::{json, term, sort, getopts};\n use getopts::groups::getopts;\n use Listener;\n \n pub struct Package {\n     id: ~str,\n-    vers: Version,\n+    vers: semver::Version,\n     bins: ~[~str],\n     libs: ~[~str],\n }\n@@ -488,7 +488,7 @@ pub fn ready_crate(sess: session::Session,\n     @fold.fold_crate(*crate)\n }\n \n-pub fn parse_vers(vers: ~str) -> result::Result<Version, ~str> {\n+pub fn parse_vers(vers: ~str) -> result::Result<semver::Version, ~str> {\n     match semver::parse(vers) {\n         Some(vers) => result::Ok(vers),\n         None => result::Err(~\"could not parse version: invalid\")\n@@ -1023,7 +1023,7 @@ pub fn exe_suffix() -> ~str { ~\".exe\" }\n pub fn exe_suffix() -> ~str { ~\"\" }\n \n \n-// FIXME: Use workcache to only compile when needed\n+// FIXME (#4432): Use workcache to only compile when needed\n pub fn compile_crate(sysroot: Option<Path>, crate: &Path, dir: &Path,\n                      flags: ~[~str], cfgs: ~[~str], opt: bool,\n                      test: bool) -> bool {\n@@ -1040,7 +1040,7 @@ pub fn compile_str(sysroot: Option<Path>, code: ~str, dir: &Path,\n \n #[cfg(windows)]\n pub fn link_exe(_src: &Path, _dest: &Path) -> bool {\n-    /* FIXME: Investigate how to do this on win32\n+    /* FIXME (#1768): Investigate how to do this on win32\n        Node wraps symlinks by having a .bat,\n        but that won't work with minGW. */\n "}, {"sha": "9de336437d292648ad67c81d894f478dbba656b3", "filename": "src/libstd/semver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibstd%2Fsemver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibstd%2Fsemver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsemver.rs?ref=b10dc1af0661c68155c49f508fe7a26a2ea02083", "patch": "@@ -17,7 +17,7 @@ use uint;\n use str;\n use to_str::ToStr;\n use char;\n-use cmp;\n+use core::cmp;\n \n pub struct Version {\n     major: uint,"}, {"sha": "b0756104fe5324a4a582e30341bbdeef0cf51987", "filename": "src/libstd/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/b10dc1af0661c68155c49f508fe7a26a2ea02083/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=b10dc1af0661c68155c49f508fe7a26a2ea02083", "patch": "@@ -99,6 +99,7 @@ pub mod rl;\n pub mod workcache;\n pub mod bigint;\n pub mod stats;\n+pub mod semver;\n \n #[cfg(unicode)]\n mod unicode;"}]}