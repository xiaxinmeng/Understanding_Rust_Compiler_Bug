{"sha": "bec32eb4ff6d9f19a02441269916dec5cb348927", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYzMyZWI0ZmY2ZDlmMTlhMDI0NDEyNjk5MTZkZWM1Y2IzNDg5Mjc=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-09T15:15:15Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-20T20:18:21Z"}, "message": "trans: noop drops don't need their lvalue in an alloca.", "tree": {"sha": "58193dd849b81f7ff70a2bf320977e37f24a342e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58193dd849b81f7ff70a2bf320977e37f24a342e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bec32eb4ff6d9f19a02441269916dec5cb348927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bec32eb4ff6d9f19a02441269916dec5cb348927", "html_url": "https://github.com/rust-lang/rust/commit/bec32eb4ff6d9f19a02441269916dec5cb348927", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bec32eb4ff6d9f19a02441269916dec5cb348927/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb9cb4dbca6eab5b7a50934fe7385e1a99d9dc62", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9cb4dbca6eab5b7a50934fe7385e1a99d9dc62", "html_url": "https://github.com/rust-lang/rust/commit/eb9cb4dbca6eab5b7a50934fe7385e1a99d9dc62"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "65581d43f8820ca21fa13da1d6dddad1aee0e1bd", "filename": "src/librustc_trans/mir/analyze.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bec32eb4ff6d9f19a02441269916dec5cb348927/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec32eb4ff6d9f19a02441269916dec5cb348927/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs?ref=bec32eb4ff6d9f19a02441269916dec5cb348927", "patch": "@@ -18,6 +18,7 @@ use rustc::mir::repr::TerminatorKind;\n use rustc::mir::visit::{Visitor, LvalueContext};\n use rustc::mir::traversal;\n use common::{self, Block, BlockAndBuilder};\n+use glue;\n use super::rvalue;\n \n pub fn lvalue_temps<'bcx,'tcx>(bcx: Block<'bcx,'tcx>,\n@@ -138,13 +139,21 @@ impl<'mir, 'bcx, 'tcx> Visitor<'tcx> for TempAnalyzer<'mir, 'bcx, 'tcx> {\n                     LvalueContext::Consume => {\n                     }\n                     LvalueContext::Store |\n-                    LvalueContext::Drop |\n                     LvalueContext::Inspect |\n                     LvalueContext::Borrow { .. } |\n                     LvalueContext::Slice { .. } |\n                     LvalueContext::Projection => {\n                         self.mark_as_lvalue(temp.index());\n                     }\n+                    LvalueContext::Drop => {\n+                        let ty = self.mir.temp_decls[index as usize].ty;\n+                        let ty = self.bcx.monomorphize(&ty);\n+\n+                        // Only need the lvalue if we're actually dropping it.\n+                        if glue::type_needs_drop(self.bcx.tcx(), ty) {\n+                            self.mark_as_lvalue(index as usize);\n+                        }\n+                    }\n                 }\n             }\n             _ => {"}, {"sha": "4591fa28578118c9ad3e3571e790209e411823ee", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bec32eb4ff6d9f19a02441269916dec5cb348927/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec32eb4ff6d9f19a02441269916dec5cb348927/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=bec32eb4ff6d9f19a02441269916dec5cb348927", "patch": "@@ -196,13 +196,16 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             }\n \n             mir::TerminatorKind::Drop { ref location, target, unwind } => {\n-                let lvalue = self.trans_lvalue(&bcx, location);\n-                let ty = lvalue.ty.to_ty(bcx.tcx());\n+                let ty = mir.lvalue_ty(bcx.tcx(), location).to_ty(bcx.tcx());\n+                let ty = bcx.monomorphize(&ty);\n+\n                 // Double check for necessity to drop\n                 if !glue::type_needs_drop(bcx.tcx(), ty) {\n                     funclet_br(self, bcx, target);\n                     return;\n                 }\n+\n+                let lvalue = self.trans_lvalue(&bcx, location);\n                 let drop_fn = glue::get_drop_glue(bcx.ccx(), ty);\n                 let drop_ty = glue::get_drop_glue_type(bcx.tcx(), ty);\n                 let llvalue = if drop_ty != ty {"}]}