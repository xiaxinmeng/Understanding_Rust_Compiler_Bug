{"sha": "00d54c879bfb6adb5b7a611af6bd522499d07a1d", "node_id": "C_kwDOAAsO6NoAKDAwZDU0Yzg3OWJmYjZhZGI1YjdhNjExYWY2YmQ1MjI0OTlkMDdhMWQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-06T16:49:43Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-06T16:49:43Z"}, "message": "Label non_exhaustive on privacy errors", "tree": {"sha": "b71b82fc793b3e7f5c89117cfa550cc792aa80b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b71b82fc793b3e7f5c89117cfa550cc792aa80b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00d54c879bfb6adb5b7a611af6bd522499d07a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00d54c879bfb6adb5b7a611af6bd522499d07a1d", "html_url": "https://github.com/rust-lang/rust/commit/00d54c879bfb6adb5b7a611af6bd522499d07a1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00d54c879bfb6adb5b7a611af6bd522499d07a1d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf7ada217c8ac63367b184afd9fffaff30f6ed44", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7ada217c8ac63367b184afd9fffaff30f6ed44", "html_url": "https://github.com/rust-lang/rust/commit/cf7ada217c8ac63367b184afd9fffaff30f6ed44"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "bb473d62a7bbc0126e181c112cb7faac10681225", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/00d54c879bfb6adb5b7a611af6bd522499d07a1d/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d54c879bfb6adb5b7a611af6bd522499d07a1d/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=00d54c879bfb6adb5b7a611af6bd522499d07a1d", "patch": "@@ -1607,7 +1607,13 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         let mut err =\n             struct_span_err!(self.tcx.sess, ident.span, E0603, \"{} `{}` is private\", descr, ident);\n         err.span_label(ident.span, &format!(\"private {}\", descr));\n-        if let Some(span) = ctor_fields_span {\n+\n+        if let Some(def_id) = res.opt_def_id()\n+            && !def_id.is_local()\n+            && let Some(attr) = self.tcx.get_attr(def_id, sym::non_exhaustive)\n+        {\n+            err.span_label(attr.span, format!(\"the {nonimport_descr} is `#[non_exhaustive]`\"));\n+        } else if let Some(span) = ctor_fields_span {\n             err.span_label(span, \"a constructor is private if any of the fields is private\");\n             if let Res::Def(_, d) = res && let Some(fields) = self.field_visibility_spans.get(&d) {\n                 err.multipart_suggestion_verbose("}, {"sha": "36154fe51a4e6de95739037b00c135da91816d48", "filename": "tests/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/00d54c879bfb6adb5b7a611af6bd522499d07a1d/tests%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00d54c879bfb6adb5b7a611af6bd522499d07a1d/tests%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=00d54c879bfb6adb5b7a611af6bd522499d07a1d", "patch": "@@ -10,10 +10,10 @@ error[E0603]: tuple struct constructor `TupleStruct` is private\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n    |                                ^^^^^^^^^^^ private tuple struct constructor\n    |\n-  ::: $DIR/auxiliary/structs.rs:12:24\n+  ::: $DIR/auxiliary/structs.rs:11:1\n    |\n-LL | pub struct TupleStruct(pub u16, pub u16);\n-   |                        ---------------- a constructor is private if any of the fields is private\n+LL | #[non_exhaustive]\n+   | ----------------- the tuple struct constructor is `#[non_exhaustive]`\n    |\n note: the tuple struct constructor `TupleStruct` is defined here\n   --> $DIR/auxiliary/structs.rs:12:1\n@@ -27,6 +27,11 @@ error[E0603]: unit struct `UnitStruct` is private\n LL |     let us_explicit = structs::UnitStruct;\n    |                                ^^^^^^^^^^ private unit struct\n    |\n+  ::: $DIR/auxiliary/structs.rs:8:1\n+   |\n+LL | #[non_exhaustive]\n+   | ----------------- the unit struct is `#[non_exhaustive]`\n+   |\n note: the unit struct `UnitStruct` is defined here\n   --> $DIR/auxiliary/structs.rs:9:1\n    |"}, {"sha": "551ecb5acf2768c7deff30e36f1721c029dd264d", "filename": "tests/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/00d54c879bfb6adb5b7a611af6bd522499d07a1d/tests%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00d54c879bfb6adb5b7a611af6bd522499d07a1d/tests%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=00d54c879bfb6adb5b7a611af6bd522499d07a1d", "patch": "@@ -4,6 +4,11 @@ error[E0603]: tuple variant `Tuple` is private\n LL |     let variant_tuple = NonExhaustiveVariants::Tuple(640);\n    |                                                ^^^^^ private tuple variant\n    |\n+  ::: $DIR/auxiliary/variants.rs:5:5\n+   |\n+LL |     #[non_exhaustive] Tuple(u32),\n+   |     ----------------- the tuple variant is `#[non_exhaustive]`\n+   |\n note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n    |\n@@ -16,6 +21,11 @@ error[E0603]: unit variant `Unit` is private\n LL |     let variant_unit = NonExhaustiveVariants::Unit;\n    |                                               ^^^^ private unit variant\n    |\n+  ::: $DIR/auxiliary/variants.rs:4:5\n+   |\n+LL |     #[non_exhaustive] Unit,\n+   |     ----------------- the unit variant is `#[non_exhaustive]`\n+   |\n note: the unit variant `Unit` is defined here\n   --> $DIR/auxiliary/variants.rs:4:23\n    |\n@@ -28,6 +38,11 @@ error[E0603]: unit variant `Unit` is private\n LL |         NonExhaustiveVariants::Unit => \"\",\n    |                                ^^^^ private unit variant\n    |\n+  ::: $DIR/auxiliary/variants.rs:4:5\n+   |\n+LL |     #[non_exhaustive] Unit,\n+   |     ----------------- the unit variant is `#[non_exhaustive]`\n+   |\n note: the unit variant `Unit` is defined here\n   --> $DIR/auxiliary/variants.rs:4:23\n    |\n@@ -40,6 +55,11 @@ error[E0603]: tuple variant `Tuple` is private\n LL |         NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n    |                                ^^^^^ private tuple variant\n    |\n+  ::: $DIR/auxiliary/variants.rs:5:5\n+   |\n+LL |     #[non_exhaustive] Tuple(u32),\n+   |     ----------------- the tuple variant is `#[non_exhaustive]`\n+   |\n note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n    |\n@@ -52,6 +72,11 @@ error[E0603]: tuple variant `Tuple` is private\n LL |     if let NonExhaustiveVariants::Tuple(fe_tpl) = variant_struct {\n    |                                   ^^^^^ private tuple variant\n    |\n+  ::: $DIR/auxiliary/variants.rs:5:5\n+   |\n+LL |     #[non_exhaustive] Tuple(u32),\n+   |     ----------------- the tuple variant is `#[non_exhaustive]`\n+   |\n note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n    |"}]}