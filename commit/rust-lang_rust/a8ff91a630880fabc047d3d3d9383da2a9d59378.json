{"sha": "a8ff91a630880fabc047d3d3d9383da2a9d59378", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZmY5MWE2MzA4ODBmYWJjMDQ3ZDNkM2Q5MzgzZGEyYTlkNTkzNzg=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-30T02:02:53Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-31T04:16:56Z"}, "message": "Removing interior mut on vectors, round 1\n\nfind ./ -type f -name \"*.rs\" -exec sed -i \"s/let mut\\(.*\\)\\[mut[ ]\\?/let\nmut\\1\\[/g\" {} \\;", "tree": {"sha": "413576a928ac8967da95cb56b007823e5c3f5d39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413576a928ac8967da95cb56b007823e5c3f5d39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8ff91a630880fabc047d3d3d9383da2a9d59378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ff91a630880fabc047d3d3d9383da2a9d59378", "html_url": "https://github.com/rust-lang/rust/commit/a8ff91a630880fabc047d3d3d9383da2a9d59378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8ff91a630880fabc047d3d3d9383da2a9d59378/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8ae4403e3d10ca8304b4a1bd90ac7cade5d713", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d8ae4403e3d10ca8304b4a1bd90ac7cade5d713", "html_url": "https://github.com/rust-lang/rust/commit/7d8ae4403e3d10ca8304b4a1bd90ac7cade5d713"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "0963c8bbcd2dee48a8065d5a7c19d3831f8f660e", "filename": "src/libcore/run.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Flibcore%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Flibcore%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frun.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -289,7 +289,7 @@ pub fn start_program(prog: &str, args: &[~str]) -> Program {\n \n fn read_all(rd: io::Reader) -> ~str {\n     let buf = io::with_bytes_writer(|wr| {\n-        let mut bytes = [mut 0, ..4096];\n+        let mut bytes = [0, ..4096];\n         while !rd.eof() {\n             let nread = rd.read(bytes, bytes.len());\n             wr.write(bytes.view(0, nread));\n@@ -387,7 +387,7 @@ pub fn readclose(fd: c_int) -> ~str {\n         let file = os::fdopen(fd);\n         let reader = io::FILE_reader(file, false);\n         let buf = io::with_bytes_writer(|writer| {\n-            let mut bytes = [mut 0, ..4096];\n+            let mut bytes = [0, ..4096];\n             while !reader.eof() {\n                 let nread = reader.read(bytes, bytes.len());\n                 writer.write(bytes.view(0, nread));"}, {"sha": "1069129e9163a545ca1c5f9f89234b089b4ad905", "filename": "src/librustdoc/markdown_writer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Flibrustdoc%2Fmarkdown_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Flibrustdoc%2Fmarkdown_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_writer.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -156,7 +156,7 @@ fn readclose(fd: libc::c_int) -> ~str {\n         let file = os::fdopen(fd);\n         let reader = io::FILE_reader(file, false);\n         let buf = io::with_bytes_writer(|writer| {\n-            let mut bytes = [mut 0, ..4096];\n+            let mut bytes = [0, ..4096];\n             while !reader.eof() {\n                 let nread = reader.read(bytes, bytes.len());\n                 writer.write(bytes.view(0, nread));"}, {"sha": "cc5244b8050b7d127c5a5db1d487d7c0226ebe1f", "filename": "src/test/compile-fail/assign-super.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fassign-super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fassign-super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassign-super.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn main() {\n-    let mut x: ~[mut int] = ~[mut 3];\n+    let mut x: ~[mut int] = ~[3];\n     let y: ~[int] = ~[3];\n     x = y; //~ ERROR values differ in mutability\n }\n\\ No newline at end of file"}, {"sha": "ded47fc9f7fe268c49fcd0f1a283cad887ab63c9", "filename": "src/test/compile-fail/borrowck-assign-comp-idx.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp-idx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp-idx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp-idx.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -11,7 +11,7 @@\n type point = { x: int, y: int };\n \n fn a() {\n-    let mut p = ~[mut 1];\n+    let mut p = ~[1];\n \n     // Create an immutable pointer into p's contents:\n     let _q: &int = &p[0]; //~ NOTE loan of mutable vec content granted here\n@@ -25,7 +25,7 @@ fn b() {\n     // here we alias the mutable vector into an imm slice and try to\n     // modify the original:\n \n-    let mut p = ~[mut 1];\n+    let mut p = ~[1];\n \n     do borrow(p) { //~ NOTE loan of mutable vec content granted here\n         p[0] = 5; //~ ERROR assigning to mutable vec content prohibited due to outstanding loan\n@@ -35,7 +35,7 @@ fn b() {\n fn c() {\n     // Legal because the scope of the borrow does not include the\n     // modification:\n-    let mut p = ~[mut 1];\n+    let mut p = ~[1];\n     borrow(p, ||{});\n     p[0] = 5;\n }"}, {"sha": "e9dd047d5c63ff888e8563e705723be9b0e00686", "filename": "src/test/compile-fail/issue-2548.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -33,7 +33,7 @@ fn main() {\n     {\n         let mut res = foo(x);\n \n-        let mut v = ~[mut];\n+        let mut v = ~[];\n         v = move ~[mut (move res)] + v; //~ ERROR instantiating a type parameter with an incompatible type (needs `copy`, got `&static`, missing `copy`)\n         assert (v.len() == 2);\n     }"}, {"sha": "88c76fb31a1ff86add6c2cb20cda0b0f0b369b21", "filename": "src/test/compile-fail/issue-2969.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fissue-2969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fissue-2969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2969.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -12,7 +12,7 @@\n fn main()\n {\n // See #2969 -- error message should be improved\n-   let mut x = [mut 1, 2, 4];\n+   let mut x = [1, 2, 4];\n    let v : &int = &x[2];\n    x[2] = 6;\n    assert *v == 6;"}, {"sha": "de2be1a1e7940c42ec983b940f0b477b9f394950", "filename": "src/test/compile-fail/issue-3243.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fissue-3243.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ff91a630880fabc047d3d3d9383da2a9d59378/src%2Ftest%2Fcompile-fail%2Fissue-3243.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3243.rs?ref=a8ff91a630880fabc047d3d3d9383da2a9d59378", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-test\n fn function() -> &[mut int] {\n-    let mut x: &static/[mut int] = &[mut 1,2,3];\n+    let mut x: &static/[mut int] = &[1,2,3];\n     x[0] = 12345;\n     x //~ ERROR bad\n }"}]}