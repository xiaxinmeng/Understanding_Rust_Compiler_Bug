{"sha": "2fc3b3a48fef92f9c38d936eed14453a640df0ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYzNiM2E0OGZlZjkyZjljMzhkOTM2ZWVkMTQ0NTNhNjQwZGYwZWM=", "commit": {"author": {"name": "Joseph Crail", "email": "jbcrail@gmail.com", "date": "2014-04-29T04:54:27Z"}, "committer": {"name": "Joseph Crail", "email": "jbcrail@gmail.com", "date": "2014-05-07T03:34:19Z"}, "message": "Add documentation for Bitv.", "tree": {"sha": "90f9df7d4ab41601da1b0d1875c62ee1400ee207", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90f9df7d4ab41601da1b0d1875c62ee1400ee207"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fc3b3a48fef92f9c38d936eed14453a640df0ec", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fc3b3a48fef92f9c38d936eed14453a640df0ec", "html_url": "https://github.com/rust-lang/rust/commit/2fc3b3a48fef92f9c38d936eed14453a640df0ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fc3b3a48fef92f9c38d936eed14453a640df0ec/comments", "author": {"login": "jbcrail", "id": 6038, "node_id": "MDQ6VXNlcjYwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/6038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbcrail", "html_url": "https://github.com/jbcrail", "followers_url": "https://api.github.com/users/jbcrail/followers", "following_url": "https://api.github.com/users/jbcrail/following{/other_user}", "gists_url": "https://api.github.com/users/jbcrail/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbcrail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbcrail/subscriptions", "organizations_url": "https://api.github.com/users/jbcrail/orgs", "repos_url": "https://api.github.com/users/jbcrail/repos", "events_url": "https://api.github.com/users/jbcrail/events{/privacy}", "received_events_url": "https://api.github.com/users/jbcrail/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbcrail", "id": 6038, "node_id": "MDQ6VXNlcjYwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/6038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbcrail", "html_url": "https://github.com/jbcrail", "followers_url": "https://api.github.com/users/jbcrail/followers", "following_url": "https://api.github.com/users/jbcrail/following{/other_user}", "gists_url": "https://api.github.com/users/jbcrail/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbcrail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbcrail/subscriptions", "organizations_url": "https://api.github.com/users/jbcrail/orgs", "repos_url": "https://api.github.com/users/jbcrail/repos", "events_url": "https://api.github.com/users/jbcrail/events{/privacy}", "received_events_url": "https://api.github.com/users/jbcrail/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b299231d1252d8ac74bc0b1650731ec5c2c0fdb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b299231d1252d8ac74bc0b1650731ec5c2c0fdb7", "html_url": "https://github.com/rust-lang/rust/commit/b299231d1252d8ac74bc0b1650731ec5c2c0fdb7"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "871584b669e75a079f7175104ade16ed5c8ffb53", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2fc3b3a48fef92f9c38d936eed14453a640df0ec/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fc3b3a48fef92f9c38d936eed14453a640df0ec/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=2fc3b3a48fef92f9c38d936eed14453a640df0ec", "patch": "@@ -225,6 +225,32 @@ enum BitvVariant { Big(BigBitv), Small(SmallBitv) }\n enum Op {Union, Intersect, Assign, Difference}\n \n /// The bitvector type\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// use collections::bitv::Bitv;\n+///\n+/// let mut bv = Bitv::new(10, false);\n+///\n+/// // insert all primes less than 10\n+/// bv.set(2, true);\n+/// bv.set(3, true);\n+/// bv.set(5, true);\n+/// bv.set(7, true);\n+/// println!(\"{}\", bv.to_str());\n+/// println!(\"total bits set to true: {}\", bv.iter().count(|x| x));\n+///\n+/// // flip all values in bitvector, producing non-primes less than 10\n+/// bv.negate();\n+/// println!(\"{}\", bv.to_str());\n+/// println!(\"total bits set to true: {}\", bv.iter().count(|x| x));\n+///\n+/// // reset bitvector to empty\n+/// bv.clear();\n+/// println!(\"{}\", bv.to_str());\n+/// println!(\"total bits set to true: {}\", bv.iter().count(|x| x));\n+/// ```\n #[deriving(Clone)]\n pub struct Bitv {\n     /// Internal representation of the bit vector (small or large)\n@@ -264,10 +290,11 @@ impl Bitv {\n           }\n         }\n     }\n-\n }\n \n impl Bitv {\n+    /// Creates an empty Bitv that holds `nbits` elements, setting each element\n+    /// to `init`.\n     pub fn new(nbits: uint, init: bool) -> Bitv {\n         let rep = if nbits < uint::BITS {\n             Small(SmallBitv::new(if init {(1<<nbits)-1} else {0}))\n@@ -419,6 +446,21 @@ impl Bitv {\n       }\n     }\n \n+    /// Returns an iterator over the elements of the vector in order.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```rust\n+    /// use collections::bitv::Bitv;\n+    /// let mut bv = Bitv::new(10, false);\n+    /// bv.set(1, true);\n+    /// bv.set(2, true);\n+    /// bv.set(3, true);\n+    /// bv.set(5, true);\n+    /// bv.set(8, true);\n+    /// // Count bits set to 1; result should be 5\n+    /// println!(\"{}\", bv.iter().count(|x| x));\n+    /// ```\n     #[inline]\n     pub fn iter<'a>(&'a self) -> Bits<'a> {\n         Bits {bitv: self, next_idx: 0, end_idx: self.nbits}"}]}