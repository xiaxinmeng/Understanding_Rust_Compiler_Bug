{"sha": "66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YmI5NzhhYjY1ZjdjN2UxZDZjMzllMjc1YmFmOGViMjJiMWEwNGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T12:16:29Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T12:16:29Z"}, "message": "improve hir::PatKind::Slice docs", "tree": {"sha": "2249aedcc8da22f97d16e5588dd6b98dd710bb9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2249aedcc8da22f97d16e5588dd6b98dd710bb9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d", "html_url": "https://github.com/rust-lang/rust/commit/66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d848ce0ddf4f20bd6fbae70ad126640247f61a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/d848ce0ddf4f20bd6fbae70ad126640247f61a56", "html_url": "https://github.com/rust-lang/rust/commit/d848ce0ddf4f20bd6fbae70ad126640247f61a56"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "6b354b01518eab02d9d6e90279c61f0f4a97f69a", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=66bb978ab65f7c7e1d6c39e275baf8eb22b1a04d", "patch": "@@ -1048,8 +1048,15 @@ pub enum PatKind {\n     /// A range pattern (e.g., `1..=2` or `1..2`).\n     Range(P<Expr>, P<Expr>, RangeEnd),\n \n-    /// `[a, b, ..i, y, z]` is represented as:\n-    ///     `PatKind::Slice(box [a, b], Some(i), box [y, z])`.\n+    /// A slice pattern, `[before_0, ..., before_n, (slice, after_0, ..., after_n)?]`.\n+    ///\n+    /// Here, `slice` is lowered from the syntax `($binding_mode $ident @)? ..`.\n+    /// If `slice` exists, then `after` can be non-empty.\n+    ///\n+    /// The representation for e.g., `[a, b, .., c, d]` is:\n+    /// ```\n+    /// PatKind::Slice([Binding(a), Binding(b)], Some(Wild), [Binding(c), Binding(d)])\n+    /// ```\n     Slice(HirVec<P<Pat>>, Option<P<Pat>>, HirVec<P<Pat>>),\n }\n "}]}