{"sha": "159236a63b64fec9aec6e1d36ee4e1c811747240", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTIzNmE2M2I2NGZlYzlhZWM2ZTFkMzZlZTRlMWM4MTE3NDcyNDA=", "commit": {"author": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2015-01-18T06:39:01Z"}, "committer": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2015-01-18T06:54:24Z"}, "message": "rustdoc: Handle associated types on inlined impls\n\nFix #21348", "tree": {"sha": "d0c48456a9b59128ff2c9a2419a527fc87d1fb41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0c48456a9b59128ff2c9a2419a527fc87d1fb41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/159236a63b64fec9aec6e1d36ee4e1c811747240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/159236a63b64fec9aec6e1d36ee4e1c811747240", "html_url": "https://github.com/rust-lang/rust/commit/159236a63b64fec9aec6e1d36ee4e1c811747240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/159236a63b64fec9aec6e1d36ee4e1c811747240/comments", "author": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8224e0ed3d65748df4e3a89a1076ffae629e2acb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8224e0ed3d65748df4e3a89a1076ffae629e2acb", "html_url": "https://github.com/rust-lang/rust/commit/8224e0ed3d65748df4e3a89a1076ffae629e2acb"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "21e0fee33ddaff5c7acd235ba2eaaf325353e904", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/159236a63b64fec9aec6e1d36ee4e1c811747240/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159236a63b64fec9aec6e1d36ee4e1c811747240/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=159236a63b64fec9aec6e1d36ee4e1c811747240", "patch": "@@ -319,9 +319,21 @@ fn build_impl(cx: &DocContext, tcx: &ty::ctxt,\n                 };\n                 Some(item)\n             }\n-            ty::TypeTraitItem(_) => {\n-                // FIXME(pcwalton): Implement.\n-                None\n+            ty::TypeTraitItem(ref assoc_ty) => {\n+                let did = assoc_ty.def_id;\n+                let type_scheme = ty::lookup_item_type(tcx, did);\n+                // Not sure the choice of ParamSpace actually matters here, because an\n+                // associated type won't have generics on the LHS\n+                let typedef = (type_scheme, subst::ParamSpace::TypeSpace).clean(cx);\n+                Some(clean::Item {\n+                    name: Some(assoc_ty.name.clean(cx)),\n+                    inner: clean::TypedefItem(typedef),\n+                    source: clean::Span::empty(),\n+                    attrs: vec![],\n+                    visibility: None,\n+                    stability: stability::lookup(tcx, did).clean(cx),\n+                    def_id: did\n+                })\n             }\n         }\n     }).collect();"}, {"sha": "0d82efbdbdeabd8e875c4d12009060489c5f17b7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/159236a63b64fec9aec6e1d36ee4e1c811747240/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159236a63b64fec9aec6e1d36ee4e1c811747240/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=159236a63b64fec9aec6e1d36ee4e1c811747240", "patch": "@@ -2520,14 +2520,14 @@ impl Clean<Item> for ty::AssociatedType {\n             source: DUMMY_SP.clean(cx),\n             name: Some(self.name.clean(cx)),\n             attrs: Vec::new(),\n-            // FIXME(#18048): this is wrong, but cross-crate associated types are broken\n-            // anyway, for the time being.\n             inner: AssociatedTypeItem(TyParam {\n                 name: self.name.clean(cx),\n                 did: ast::DefId {\n                     krate: 0,\n                     node: ast::DUMMY_NODE_ID\n                 },\n+                // FIXME(#20727): bounds are missing and need to be filled in from the\n+                // predicates on the trait itself\n                 bounds: vec![],\n                 default: None,\n             }),\n@@ -2559,6 +2559,16 @@ impl Clean<Item> for ast::Typedef {\n     }\n }\n \n+impl<'a> Clean<Typedef> for (ty::TypeScheme<'a>, ParamSpace) {\n+    fn clean(&self, cx: &DocContext) -> Typedef {\n+        let (ref ty_scheme, ps) = *self;\n+        Typedef {\n+            type_: ty_scheme.ty.clean(cx),\n+            generics: (&ty_scheme.generics, ps).clean(cx)\n+        }\n+    }\n+}\n+\n fn lang_struct(cx: &DocContext, did: Option<ast::DefId>,\n                t: ty::Ty, name: &str,\n                fallback: fn(Box<Type>) -> Type) -> Type {"}]}