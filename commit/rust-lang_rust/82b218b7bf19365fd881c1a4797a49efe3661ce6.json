{"sha": "82b218b7bf19365fd881c1a4797a49efe3661ce6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYjIxOGI3YmYxOTM2NWZkODgxYzFhNDc5N2E0OWVmZTM2NjFjZTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-03T05:59:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-03T05:59:44Z"}, "message": "remove needless refs", "tree": {"sha": "9a83dcf6f98dd12031110ece9cf0b394efe35350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a83dcf6f98dd12031110ece9cf0b394efe35350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82b218b7bf19365fd881c1a4797a49efe3661ce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82b218b7bf19365fd881c1a4797a49efe3661ce6", "html_url": "https://github.com/rust-lang/rust/commit/82b218b7bf19365fd881c1a4797a49efe3661ce6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82b218b7bf19365fd881c1a4797a49efe3661ce6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ffbf29b799d4d2897d84f9902230e138b3c540", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ffbf29b799d4d2897d84f9902230e138b3c540", "html_url": "https://github.com/rust-lang/rust/commit/48ffbf29b799d4d2897d84f9902230e138b3c540"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "61ea35dd7fe7c5f203b2dc48a62cd712233dcc14", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/82b218b7bf19365fd881c1a4797a49efe3661ce6/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b218b7bf19365fd881c1a4797a49efe3661ce6/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=82b218b7bf19365fd881c1a4797a49efe3661ce6", "patch": "@@ -806,10 +806,10 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 let subty = self.infer_pat(*pat, expectation, default_bm);\n                 Ty::apply_one(TypeCtor::Ref(*mutability), subty)\n             }\n-            Pat::TupleStruct { path: ref p, args: ref subpats } => {\n+            Pat::TupleStruct { path: p, args: subpats } => {\n                 self.infer_tuple_struct_pat(p.as_ref(), subpats, expected, default_bm)\n             }\n-            Pat::Record { path: ref p, args: ref fields } => {\n+            Pat::Record { path: p, args: fields } => {\n                 self.infer_record_pat(p.as_ref(), fields, expected, default_bm, pat)\n             }\n             Pat::Path(path) => {"}]}