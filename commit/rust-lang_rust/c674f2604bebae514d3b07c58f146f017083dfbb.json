{"sha": "c674f2604bebae514d3b07c58f146f017083dfbb", "node_id": "C_kwDOAAsO6NoAKGM2NzRmMjYwNGJlYmFlNTE0ZDNiMDdjNThmMTQ2ZjAxNzA4M2RmYmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-02T22:38:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-02T22:38:36Z"}, "message": "Auto merge of #2312 - RalfJung:misc, r=RalfJung\n\nput call to stacked borrows end_call in a more sensible place\n\nThis looks like a refactoring accident.", "tree": {"sha": "17a73da8261c30808eb54b24d06afbf7105e5aa3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17a73da8261c30808eb54b24d06afbf7105e5aa3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c674f2604bebae514d3b07c58f146f017083dfbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c674f2604bebae514d3b07c58f146f017083dfbb", "html_url": "https://github.com/rust-lang/rust/commit/c674f2604bebae514d3b07c58f146f017083dfbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c674f2604bebae514d3b07c58f146f017083dfbb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9925ff7f490ba04424c228f2c43eb59d33c1389", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9925ff7f490ba04424c228f2c43eb59d33c1389", "html_url": "https://github.com/rust-lang/rust/commit/c9925ff7f490ba04424c228f2c43eb59d33c1389"}, {"sha": "dcdf4fb6f62245200031fa8f84c19e188e8363df", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdf4fb6f62245200031fa8f84c19e188e8363df", "html_url": "https://github.com/rust-lang/rust/commit/dcdf4fb6f62245200031fa8f84c19e188e8363df"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "4681a3d3821460a6dbb9f5d183cfae83400418b7", "filename": "README.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c674f2604bebae514d3b07c58f146f017083dfbb/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/c674f2604bebae514d3b07c58f146f017083dfbb/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=c674f2604bebae514d3b07c58f146f017083dfbb", "patch": "@@ -65,9 +65,9 @@ in your program, and cannot run all programs:\n   not support networking. System API support varies between targets; if you run\n   on Windows it is a good idea to use `--target x86_64-unknown-linux-gnu` to get\n   better support.\n-* Weak memory emulation may produce weak behaivours unobservable by compiled\n-  programs running on real hardware when `SeqCst` fences are used, and it cannot\n-  produce all behaviors possibly observable on real hardware.\n+* Weak memory emulation may [produce weak behaivours](https://github.com/rust-lang/miri/issues/2301)\n+  unobservable by compiled programs running on real hardware when `SeqCst` fences are used, and it\n+  cannot produce all behaviors possibly observable on real hardware.\n \n [rust]: https://www.rust-lang.org/\n [mir]: https://github.com/rust-lang/rfcs/blob/master/text/1211-mir.md\n@@ -192,8 +192,9 @@ randomness that is used to determine allocation base addresses. The following\n snippet calls Miri in a loop with different values for the seed:\n \n ```\n-for seed in $({ echo obase=16; seq 0 255; } | bc); do\n-  MIRIFLAGS=-Zmiri-seed=$seed cargo miri test || { echo \"Last seed: $seed\"; break; };\n+for SEED in $({ echo obase=16; seq 0 255; } | bc); do\n+  echo \"Trying seed: $SEED\"\n+  MIRIFLAGS=-Zmiri-seed=$SEED cargo miri test || { echo \"Failing seed: $SEED\"; break; };\n done\n ```\n "}, {"sha": "716d4bd5b90c3bdb39a10b6833f70dc6a313ecf3", "filename": "src/machine.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c674f2604bebae514d3b07c58f146f017083dfbb/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c674f2604bebae514d3b07c58f146f017083dfbb/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=c674f2604bebae514d3b07c58f146f017083dfbb", "patch": "@@ -930,7 +930,10 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         unwinding: bool,\n     ) -> InterpResult<'tcx, StackPopJump> {\n         let timing = frame.extra.timing.take();\n-        let res = ecx.handle_stack_pop(frame.extra, unwinding);\n+        if let Some(stacked_borrows) = &ecx.machine.stacked_borrows {\n+            stacked_borrows.borrow_mut().end_call(frame.extra.call_id);\n+        }\n+        let res = ecx.handle_stack_pop_unwind(frame.extra, unwinding);\n         if let Some(profiler) = ecx.machine.profiler.as_ref() {\n             profiler.finish_recording_interval_event(timing.unwrap());\n         }"}, {"sha": "2ef0a741d52fb53c41d00e488319315a7dfac710", "filename": "src/shims/panic.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c674f2604bebae514d3b07c58f146f017083dfbb/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c674f2604bebae514d3b07c58f146f017083dfbb/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=c674f2604bebae514d3b07c58f146f017083dfbb", "patch": "@@ -115,17 +115,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(())\n     }\n \n-    fn handle_stack_pop(\n+    fn handle_stack_pop_unwind(\n         &mut self,\n         mut extra: FrameData<'tcx>,\n         unwinding: bool,\n     ) -> InterpResult<'tcx, StackPopJump> {\n         let this = self.eval_context_mut();\n-\n-        trace!(\"handle_stack_pop(extra = {:?}, unwinding = {})\", extra, unwinding);\n-        if let Some(stacked_borrows) = &this.machine.stacked_borrows {\n-            stacked_borrows.borrow_mut().end_call(extra.call_id);\n-        }\n+        trace!(\"handle_stack_pop_unwind(extra = {:?}, unwinding = {})\", extra, unwinding);\n \n         // We only care about `catch_panic` if we're unwinding - if we're doing a normal\n         // return, then we don't need to do anything special."}]}