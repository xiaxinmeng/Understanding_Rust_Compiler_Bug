{"sha": "bc5a139baa928b8a440e9053a3d7e0d4cc932f98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNWExMzliYWE5MjhiOGE0NDBlOTA1M2EzZDdlMGQ0Y2M5MzJmOTg=", "commit": {"author": {"name": "Cody P Schafer", "email": "dev@codyps.com", "date": "2014-11-18T23:56:12Z"}, "committer": {"name": "Cody P Schafer", "email": "dev@codyps.com", "date": "2014-11-20T21:00:12Z"}, "message": "rustdoc: avoid supplying a bad default sysroot so the librustc code can calculate it properly", "tree": {"sha": "3586937fd5d74e6a021e2cf3622ce613155831cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3586937fd5d74e6a021e2cf3622ce613155831cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc5a139baa928b8a440e9053a3d7e0d4cc932f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc5a139baa928b8a440e9053a3d7e0d4cc932f98", "html_url": "https://github.com/rust-lang/rust/commit/bc5a139baa928b8a440e9053a3d7e0d4cc932f98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc5a139baa928b8a440e9053a3d7e0d4cc932f98/comments", "author": {"login": "jmesmon", "id": 103437, "node_id": "MDQ6VXNlcjEwMzQzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/103437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmesmon", "html_url": "https://github.com/jmesmon", "followers_url": "https://api.github.com/users/jmesmon/followers", "following_url": "https://api.github.com/users/jmesmon/following{/other_user}", "gists_url": "https://api.github.com/users/jmesmon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmesmon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmesmon/subscriptions", "organizations_url": "https://api.github.com/users/jmesmon/orgs", "repos_url": "https://api.github.com/users/jmesmon/repos", "events_url": "https://api.github.com/users/jmesmon/events{/privacy}", "received_events_url": "https://api.github.com/users/jmesmon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jmesmon", "id": 103437, "node_id": "MDQ6VXNlcjEwMzQzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/103437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmesmon", "html_url": "https://github.com/jmesmon", "followers_url": "https://api.github.com/users/jmesmon/followers", "following_url": "https://api.github.com/users/jmesmon/following{/other_user}", "gists_url": "https://api.github.com/users/jmesmon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmesmon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmesmon/subscriptions", "organizations_url": "https://api.github.com/users/jmesmon/orgs", "repos_url": "https://api.github.com/users/jmesmon/repos", "events_url": "https://api.github.com/users/jmesmon/events{/privacy}", "received_events_url": "https://api.github.com/users/jmesmon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29cc7c2adf0bdbe00fc65ff0a7393668eead7a22", "url": "https://api.github.com/repos/rust-lang/rust/commits/29cc7c2adf0bdbe00fc65ff0a7393668eead7a22", "html_url": "https://github.com/rust-lang/rust/commit/29cc7c2adf0bdbe00fc65ff0a7393668eead7a22"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "b040a4bfd2a09f4076562c4e96e179c48711f5a7", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc5a139baa928b8a440e9053a3d7e0d4cc932f98/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5a139baa928b8a440e9053a3d7e0d4cc932f98/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=bc5a139baa928b8a440e9053a3d7e0d4cc932f98", "patch": "@@ -18,7 +18,6 @@ use rustc_trans::back::link;\n use syntax::{ast, ast_map, codemap, diagnostic};\n \n use std::cell::RefCell;\n-use std::os;\n use std::collections::{HashMap, HashSet};\n use arena::TypedArena;\n \n@@ -89,7 +88,7 @@ pub fn run_core(libs: Vec<Path>, cfgs: Vec<String>, externs: Externs,\n     let warning_lint = lint::builtin::WARNINGS.name_lower();\n \n     let sessopts = config::Options {\n-        maybe_sysroot: Some(os::self_exe_path().unwrap().dir_path()),\n+        maybe_sysroot: None,\n         addl_lib_search_paths: RefCell::new(libs),\n         crate_types: vec!(config::CrateTypeRlib),\n         lint_opts: vec!((warning_lint, lint::Allow)),"}]}