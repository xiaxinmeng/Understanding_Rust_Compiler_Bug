{"sha": "e07df9c9df149b48ef7e035ddaa5ba5a22cb719c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwN2RmOWM5ZGYxNDliNDhlZjdlMDM1ZGRhYTViYTVhMjJjYjcxOWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-11T02:33:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-11T02:33:16Z"}, "message": "Rollup merge of #62425 - cyphar:linux-cloexec-use-fcntl, r=alexcrichton\n\nfiledesc: don't use ioctl(FIOCLEX) on Linux\n\nAll `ioctl(2)`s will fail on `O_PATH` file descriptors on Linux (because\nthey use `&empty_fops` as a security measure against `O_PATH` descriptors\naffecting the backing file).\n\nAs a result, `File::try_clone()` and various other methods would always\nfail with `-EBADF` on `O_PATH` file descriptors. The solution is to simply\nuse `F_SETFD` (as is used on other unices) which works on `O_PATH`\ndescriptors because it operates through the `fnctl(2)` layer and not\nthrough `ioctl(2)`s.\n\nSince this code is usually only used in strange error paths (a broken or\nancient kernel), the extra overhead of one syscall shouldn't cause any\ndramas. Most other systems programming languages also use the fnctl(2)\nso this brings us in line with them.\n\nFixes: rust-lang/rust#62314\nSigned-off-by: Aleksa Sarai <cyphar@cyphar.com>", "tree": {"sha": "e8337056581fac31db4eecd91d442f5c3d36ac8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8337056581fac31db4eecd91d442f5c3d36ac8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e07df9c9df149b48ef7e035ddaa5ba5a22cb719c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdJp/sCRBK7hj4Ov3rIwAAdHIIAIvOm9IRkovWcKczyGH0xvwo\nQLZdNM8utkdh0eCerAUMBpKTixMBsFocju/CBHf4tNljkGoD5fwJ6N3E1CQkk3DJ\nSy+Eu4OIUTYLVgmIz8d0vYT7sBla1e5ia5VcLKdwPfSP5A0rMGo7U6unkcHvOeD+\nj9n9KkOGIjKnfvSPsJYRwJTVOxbP/jvScTRs7f9ne4JVs0B+a9o4fU/ZSNKkh3bn\ntiFR1Hb0sCTBe7SYIsrODd6p3kDqond5/PshLT2EmEkdhdd2atz8yPZC9FtLrE9F\ndB91XhMP8nX9OvNWzKdahnXHYIANO3P8RnGvRr8i1b+qzlURY9ZVHZnZ8USWC/4=\n=Zjxs\n-----END PGP SIGNATURE-----\n", "payload": "tree e8337056581fac31db4eecd91d442f5c3d36ac8e\nparent 8fe7ed02d5a88839ec832d36899822d431725942\nparent 6031a07a464eae202cc43fbb15fada094171488d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562812396 +0200\ncommitter GitHub <noreply@github.com> 1562812396 +0200\n\nRollup merge of #62425 - cyphar:linux-cloexec-use-fcntl, r=alexcrichton\n\nfiledesc: don't use ioctl(FIOCLEX) on Linux\n\nAll `ioctl(2)`s will fail on `O_PATH` file descriptors on Linux (because\nthey use `&empty_fops` as a security measure against `O_PATH` descriptors\naffecting the backing file).\n\nAs a result, `File::try_clone()` and various other methods would always\nfail with `-EBADF` on `O_PATH` file descriptors. The solution is to simply\nuse `F_SETFD` (as is used on other unices) which works on `O_PATH`\ndescriptors because it operates through the `fnctl(2)` layer and not\nthrough `ioctl(2)`s.\n\nSince this code is usually only used in strange error paths (a broken or\nancient kernel), the extra overhead of one syscall shouldn't cause any\ndramas. Most other systems programming languages also use the fnctl(2)\nso this brings us in line with them.\n\nFixes: rust-lang/rust#62314\nSigned-off-by: Aleksa Sarai <cyphar@cyphar.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e07df9c9df149b48ef7e035ddaa5ba5a22cb719c", "html_url": "https://github.com/rust-lang/rust/commit/e07df9c9df149b48ef7e035ddaa5ba5a22cb719c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e07df9c9df149b48ef7e035ddaa5ba5a22cb719c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe7ed02d5a88839ec832d36899822d431725942", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe7ed02d5a88839ec832d36899822d431725942", "html_url": "https://github.com/rust-lang/rust/commit/8fe7ed02d5a88839ec832d36899822d431725942"}, {"sha": "6031a07a464eae202cc43fbb15fada094171488d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6031a07a464eae202cc43fbb15fada094171488d", "html_url": "https://github.com/rust-lang/rust/commit/6031a07a464eae202cc43fbb15fada094171488d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0cecdd7ffa0b78624b20e486758876121edf0f15", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e07df9c9df149b48ef7e035ddaa5ba5a22cb719c/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e07df9c9df149b48ef7e035ddaa5ba5a22cb719c/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=e07df9c9df149b48ef7e035ddaa5ba5a22cb719c", "patch": "@@ -175,6 +175,7 @@ impl FileDesc {\n                   target_os = \"emscripten\",\n                   target_os = \"fuchsia\",\n                   target_os = \"l4re\",\n+                  target_os = \"linux\",\n                   target_os = \"haiku\")))]\n     pub fn set_cloexec(&self) -> io::Result<()> {\n         unsafe {\n@@ -187,6 +188,7 @@ impl FileDesc {\n               target_os = \"emscripten\",\n               target_os = \"fuchsia\",\n               target_os = \"l4re\",\n+              target_os = \"linux\",\n               target_os = \"haiku\"))]\n     pub fn set_cloexec(&self) -> io::Result<()> {\n         unsafe {"}]}