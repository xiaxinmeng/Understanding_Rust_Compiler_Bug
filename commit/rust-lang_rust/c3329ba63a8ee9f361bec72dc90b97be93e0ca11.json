{"sha": "c3329ba63a8ee9f361bec72dc90b97be93e0ca11", "node_id": "C_kwDOAAsO6NoAKGMzMzI5YmE2M2E4ZWU5ZjM2MWJlYzcyZGM5MGI5N2JlOTNlMGNhMTE", "commit": {"author": {"name": "Keith T. Star", "email": "uberfoo@me.com", "date": "2022-12-12T23:22:01Z"}, "committer": {"name": "Keith T. Star", "email": "uberfoo@me.com", "date": "2022-12-12T23:22:01Z"}, "message": "Minor grammar nit.", "tree": {"sha": "c7df1079aff06f20cd96eca1e5de3920f719a6a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7df1079aff06f20cd96eca1e5de3920f719a6a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3329ba63a8ee9f361bec72dc90b97be93e0ca11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3329ba63a8ee9f361bec72dc90b97be93e0ca11", "html_url": "https://github.com/rust-lang/rust/commit/c3329ba63a8ee9f361bec72dc90b97be93e0ca11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3329ba63a8ee9f361bec72dc90b97be93e0ca11/comments", "author": {"login": "uberFoo", "id": 363700, "node_id": "MDQ6VXNlcjM2MzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/363700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uberFoo", "html_url": "https://github.com/uberFoo", "followers_url": "https://api.github.com/users/uberFoo/followers", "following_url": "https://api.github.com/users/uberFoo/following{/other_user}", "gists_url": "https://api.github.com/users/uberFoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/uberFoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uberFoo/subscriptions", "organizations_url": "https://api.github.com/users/uberFoo/orgs", "repos_url": "https://api.github.com/users/uberFoo/repos", "events_url": "https://api.github.com/users/uberFoo/events{/privacy}", "received_events_url": "https://api.github.com/users/uberFoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "uberFoo", "id": 363700, "node_id": "MDQ6VXNlcjM2MzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/363700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uberFoo", "html_url": "https://github.com/uberFoo", "followers_url": "https://api.github.com/users/uberFoo/followers", "following_url": "https://api.github.com/users/uberFoo/following{/other_user}", "gists_url": "https://api.github.com/users/uberFoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/uberFoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uberFoo/subscriptions", "organizations_url": "https://api.github.com/users/uberFoo/orgs", "repos_url": "https://api.github.com/users/uberFoo/repos", "events_url": "https://api.github.com/users/uberFoo/events{/privacy}", "received_events_url": "https://api.github.com/users/uberFoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37d7de337903a558dbeb1e82c844fe915ab8ff25", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d7de337903a558dbeb1e82c844fe915ab8ff25", "html_url": "https://github.com/rust-lang/rust/commit/37d7de337903a558dbeb1e82c844fe915ab8ff25"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4a8302ee404c109117d56b4e43ee7c7b8ad4f73c", "filename": "library/core/src/borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3329ba63a8ee9f361bec72dc90b97be93e0ca11/library%2Fcore%2Fsrc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3329ba63a8ee9f361bec72dc90b97be93e0ca11/library%2Fcore%2Fsrc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fborrow.rs?ref=c3329ba63a8ee9f361bec72dc90b97be93e0ca11", "patch": "@@ -26,7 +26,7 @@\n /// to be modified, it can additionally implement [`BorrowMut<T>`].\n ///\n /// Further, when providing implementations for additional traits, it needs\n-/// to be considered whether they should behave identical to those of the\n+/// to be considered whether they should behave identically to those of the\n /// underlying type as a consequence of acting as a representation of that\n /// underlying type. Generic code typically uses `Borrow<T>` when it relies\n /// on the identical behavior of these additional trait implementations."}]}