{"sha": "8ec32175fa8825b8cc547038776fe7b36b8ad90d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzMyMTc1ZmE4ODI1YjhjYzU0NzAzODc3NmZlN2IzNmI4YWQ5MGQ=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2019-12-27T00:56:09Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-01-07T17:48:16Z"}, "message": "Remove useless parameters in func call", "tree": {"sha": "c7c75ffb8f615eb99bbe47322e1a0f24242ef8a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7c75ffb8f615eb99bbe47322e1a0f24242ef8a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec32175fa8825b8cc547038776fe7b36b8ad90d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec32175fa8825b8cc547038776fe7b36b8ad90d", "html_url": "https://github.com/rust-lang/rust/commit/8ec32175fa8825b8cc547038776fe7b36b8ad90d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec32175fa8825b8cc547038776fe7b36b8ad90d/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c41988323cd4c3d211e494fd3e143caf11f8cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c41988323cd4c3d211e494fd3e143caf11f8cd", "html_url": "https://github.com/rust-lang/rust/commit/96c41988323cd4c3d211e494fd3e143caf11f8cd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "108f453a9bcf3fcb99d601cd51808bffdc0ce595", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ec32175fa8825b8cc547038776fe7b36b8ad90d/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec32175fa8825b8cc547038776fe7b36b8ad90d/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=8ec32175fa8825b8cc547038776fe7b36b8ad90d", "patch": "@@ -267,7 +267,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Matches {\n             check_wild_err_arm(cx, ex, arms);\n             check_wild_enum_match(cx, ex, arms);\n             check_match_as_ref(cx, ex, arms, expr);\n-            check_pats_wild_match(cx, ex, arms, expr);\n+            check_pats_wild_match(cx, arms);\n         }\n         if let ExprKind::Match(ref ex, ref arms, _) = expr.kind {\n             check_match_ref_pats(cx, ex, arms, expr);\n@@ -686,7 +686,7 @@ fn check_match_as_ref(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_>],\n     }\n }\n \n-fn check_pats_wild_match(cx: &LateContext<'_, '_>, _ex: &Expr, arms: &[Arm], _expr: &Expr) {\n+fn check_pats_wild_match(cx: &LateContext<'_, '_>, arms: &[Arm]) {\n     for arm in arms {\n         if let PatKind::Or(ref fields) = arm.pat.kind {\n             // look for multiple fields where one at least matches Wild pattern"}]}