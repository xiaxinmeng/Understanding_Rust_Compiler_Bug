{"sha": "a3e54b59f9779b800d067645d59e92bdc3ce53c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZTU0YjU5Zjk3NzliODAwZDA2NzY0NWQ1OWU5MmJkYzNjZTUzYzE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-08T01:07:26Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-08T01:07:26Z"}, "message": "Do not suggest adding type param when `use` is already suggested\n\nFix #70365, cc #70572.", "tree": {"sha": "68545d0c6854228724b54d04e0df59b97e27c0fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68545d0c6854228724b54d04e0df59b97e27c0fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3e54b59f9779b800d067645d59e92bdc3ce53c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3e54b59f9779b800d067645d59e92bdc3ce53c1", "html_url": "https://github.com/rust-lang/rust/commit/a3e54b59f9779b800d067645d59e92bdc3ce53c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3e54b59f9779b800d067645d59e92bdc3ce53c1/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b543afca9b90ad6e4689b6d613ab51f9d3ba15e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b543afca9b90ad6e4689b6d613ab51f9d3ba15e7", "html_url": "https://github.com/rust-lang/rust/commit/b543afca9b90ad6e4689b6d613ab51f9d3ba15e7"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "525a0955c0a72b2af17d21c2c1dcd6abeb67e0cb", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a3e54b59f9779b800d067645d59e92bdc3ce53c1/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3e54b59f9779b800d067645d59e92bdc3ce53c1/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=a3e54b59f9779b800d067645d59e92bdc3ce53c1", "patch": "@@ -2480,8 +2480,7 @@ impl<'a> Resolver<'a> {\n             let (span, found_use) = UsePlacementFinder::check(krate, node_id);\n             if !candidates.is_empty() {\n                 diagnostics::show_candidates(&mut err, span, &candidates, better, found_use);\n-            }\n-            if let Some((span, msg, sugg, appl)) = suggestion {\n+            } else if let Some((span, msg, sugg, appl)) = suggestion {\n                 err.span_suggestion(span, msg, sugg, appl);\n             }\n             err.emit();"}, {"sha": "45ca00f55ab596598b61c54ecaae4cf7e267b246", "filename": "src/test/ui/privacy/privacy-ns1.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3e54b59f9779b800d067645d59e92bdc3ce53c1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3e54b59f9779b800d067645d59e92bdc3ce53c1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr?ref=a3e54b59f9779b800d067645d59e92bdc3ce53c1", "patch": "@@ -63,10 +63,6 @@ LL | use foo2::Bar;\n    |\n LL | use foo3::Bar;\n    |\n-help: you might be missing a type parameter\n-   |\n-LL | fn test_glob3<Bar>() {\n-   |              ^^^^^\n \n error[E0107]: wrong number of const arguments: expected 0, found 1\n   --> $DIR/privacy-ns1.rs:35:17"}, {"sha": "22aad3b0a9f584a0e021ee6ceba95464c20f3276", "filename": "src/test/ui/suggestions/no-extern-crate-in-type.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3e54b59f9779b800d067645d59e92bdc3ce53c1/src%2Ftest%2Fui%2Fsuggestions%2Fno-extern-crate-in-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3e54b59f9779b800d067645d59e92bdc3ce53c1/src%2Ftest%2Fui%2Fsuggestions%2Fno-extern-crate-in-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fno-extern-crate-in-type.stderr?ref=a3e54b59f9779b800d067645d59e92bdc3ce53c1", "patch": "@@ -8,10 +8,6 @@ help: possible candidate is found in another module, you can import it into scop\n    |\n LL | use foo::Foo;\n    |\n-help: you might be missing a type parameter\n-   |\n-LL | type Output<Foo> = Option<Foo>;\n-   |            ^^^^^\n \n error: aborting due to previous error\n "}]}