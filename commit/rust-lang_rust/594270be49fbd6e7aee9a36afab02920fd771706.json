{"sha": "594270be49fbd6e7aee9a36afab02920fd771706", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NDI3MGJlNDlmYmQ2ZTdhZWU5YTM2YWZhYjAyOTIwZmQ3NzE3MDY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-27T22:35:21Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-27T22:35:21Z"}, "message": "tt muncher time", "tree": {"sha": "66f2939b3de226438530e7ca7959042eb4740031", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66f2939b3de226438530e7ca7959042eb4740031"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/594270be49fbd6e7aee9a36afab02920fd771706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/594270be49fbd6e7aee9a36afab02920fd771706", "html_url": "https://github.com/rust-lang/rust/commit/594270be49fbd6e7aee9a36afab02920fd771706", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/594270be49fbd6e7aee9a36afab02920fd771706/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9c6ea4dd2c1a3b71fe50469627b0b518350896", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9c6ea4dd2c1a3b71fe50469627b0b518350896", "html_url": "https://github.com/rust-lang/rust/commit/ab9c6ea4dd2c1a3b71fe50469627b0b518350896"}], "stats": {"total": 84, "additions": 57, "deletions": 27}, "files": [{"sha": "246a3270a6513018f3dce03314daaa2bfa97d217", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 55, "deletions": 27, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/594270be49fbd6e7aee9a36afab02920fd771706/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594270be49fbd6e7aee9a36afab02920fd771706/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=594270be49fbd6e7aee9a36afab02920fd771706", "patch": "@@ -109,42 +109,70 @@ const fn attr(\n }\n \n macro_rules! attrs {\n-    [$($($mac:ident!),+;)? $($key:literal),*] => {\n-        &[\"allow\", \"cfg\", \"cfg_attr\", \"deny\", \"forbid\", \"warn\", $($($mac!()),+,)? $($key),*] as _\n-    }\n-}\n-macro_rules! item_attrs {\n-    () => {\n-        \"deprecated\"\n+    [@ { item $($tt:tt)* } {$($acc:tt)*}] => {\n+        attrs!(@ { $($tt)* } { $($acc)*, \"deprecated\", \"doc\", \"dochidden\", \"docalias\", \"must_use\", \"no_mangle\" })\n+    };\n+    [@ { adt $($tt:tt)* } {$($acc:tt)*}] => {\n+        attrs!(@ { $($tt)* } { $($acc)*, \"derive\", \"repr\" })\n+    };\n+    [@ { linkable $($tt:tt)* } {$($acc:tt)*}] => {\n+        attrs!(@ { $($tt)* } { $($acc)*, \"export_name\", \"link_name\", \"link_section\" }) };\n+    [@ { $ty:ident $($tt:tt)* } {$($acc:tt)*}] => { compile_error!(concat!(\"unknown attr subtype \", stringify!($ty)))\n+    };\n+    [@ { $lit:literal $($tt:tt)*} {$($acc:tt)*}] => {\n+        attrs!(@ { $($tt)* } { $($acc)*, $lit })\n+    };\n+    [@ {$($tt:tt)+} {$($tt2:tt)*}] => {\n+        compile_error!(concat!(\"Unexpected input \", stringify!($($tt)+)))\n+    };\n+    [@ {} {$($tt:tt)*}] => { &[$($tt)*] as _ };\n+    [$($tt:tt),*] => {\n+        attrs!(@ { $($tt)* } { \"allow\", \"cfg\", \"cfg_attr\", \"deny\", \"forbid\", \"warn\" })\n     };\n }\n \n+#[rustfmt::skip]\n static KIND_TO_ATTRIBUTES: Lazy<FxHashMap<SyntaxKind, &[&str]>> = Lazy::new(|| {\n     std::array::IntoIter::new([\n-        (SyntaxKind::SOURCE_FILE, attrs!(item_attrs!;\"crate_name\")),\n-        (SyntaxKind::MODULE, attrs!(item_attrs!;)),\n-        (SyntaxKind::ITEM_LIST, attrs!(item_attrs!;)),\n-        (SyntaxKind::MACRO_RULES, attrs!(item_attrs!;)),\n-        (SyntaxKind::MACRO_DEF, attrs!(item_attrs!;)),\n-        (SyntaxKind::EXTERN_CRATE, attrs!(item_attrs!;)),\n-        (SyntaxKind::USE, attrs!(item_attrs!;)),\n-        (SyntaxKind::FN, attrs!(item_attrs!;\"cold\", \"must_use\")),\n-        (SyntaxKind::TYPE_ALIAS, attrs!(item_attrs!;)),\n-        (SyntaxKind::STRUCT, attrs!(item_attrs!;\"must_use\")),\n-        (SyntaxKind::ENUM, attrs!(item_attrs!;\"must_use\")),\n-        (SyntaxKind::UNION, attrs!(item_attrs!;\"must_use\")),\n-        (SyntaxKind::CONST, attrs!(item_attrs!;)),\n-        (SyntaxKind::STATIC, attrs!(item_attrs!;)),\n-        (SyntaxKind::TRAIT, attrs!(item_attrs!; \"must_use\")),\n-        (SyntaxKind::IMPL, attrs!(item_attrs!;\"automatically_derived\")),\n-        (SyntaxKind::ASSOC_ITEM_LIST, attrs!(item_attrs!;)),\n-        (SyntaxKind::EXTERN_BLOCK, attrs!(item_attrs!;)),\n-        (SyntaxKind::EXTERN_ITEM_LIST, attrs!(item_attrs!;)),\n+        (\n+            SyntaxKind::SOURCE_FILE,\n+            attrs!(\n+                item,\n+                \"crate_name\", \"feature\", \"no_implicit_prelude\", \"no_main\", \"no_std\",\n+                \"recursion_limit\", \"type_length_limit\", \"windows_subsystem\"\n+            ),\n+        ),\n+        (SyntaxKind::MODULE, attrs!(item, \"no_implicit_prelude\", \"path\")),\n+        (SyntaxKind::ITEM_LIST, attrs!(item, \"no_implicit_prelude\")),\n+        (SyntaxKind::MACRO_RULES, attrs!(item, \"macro_export\", \"macro_use\")),\n+        (SyntaxKind::MACRO_DEF, attrs!(item)),\n+        (SyntaxKind::EXTERN_CRATE, attrs!(item, \"macro_use\", \"no_link\")),\n+        (SyntaxKind::USE, attrs!(item)),\n+        (SyntaxKind::TYPE_ALIAS, attrs!(item)),\n+        (SyntaxKind::STRUCT, attrs!(item, adt, \"non_exhaustive\")),\n+        (SyntaxKind::ENUM, attrs!(item, adt, \"non_exhaustive\")),\n+        (SyntaxKind::UNION, attrs!(item, adt)),\n+        (SyntaxKind::CONST, attrs!(item)),\n+        (\n+            SyntaxKind::FN,\n+            attrs!(\n+                item, linkable,\n+                \"cold\", \"ignore\", \"inline\", \"must_use\", \"panic_handler\", \"proc_macro\",\n+                \"proc_macro_derive\", \"proc_macro_attribute\", \"should_panic\", \"target_feature\",\n+                \"test\", \"track_caller\"\n+            ),\n+        ),\n+        (SyntaxKind::STATIC, attrs!(item, linkable, \"global_allocator\", \"used\")),\n+        (SyntaxKind::TRAIT, attrs!(item, \"must_use\")),\n+        (SyntaxKind::IMPL, attrs!(item, \"automatically_derived\")),\n+        (SyntaxKind::ASSOC_ITEM_LIST, attrs!(item)),\n+        (SyntaxKind::EXTERN_BLOCK, attrs!(item, \"link\")),\n+        (SyntaxKind::EXTERN_ITEM_LIST, attrs!(item, \"link\")),\n         (SyntaxKind::MACRO_CALL, attrs!()),\n         (SyntaxKind::SELF_PARAM, attrs!()),\n         (SyntaxKind::PARAM, attrs!()),\n         (SyntaxKind::RECORD_FIELD, attrs!()),\n-        (SyntaxKind::VARIANT, attrs!()),\n+        (SyntaxKind::VARIANT, attrs!(\"non_exhaustive\")),\n         (SyntaxKind::TYPE_PARAM, attrs!()),\n         (SyntaxKind::CONST_PARAM, attrs!()),\n         (SyntaxKind::LIFETIME_PARAM, attrs!()),"}, {"sha": "c213e47929b6be3662b36b6b0959085b581f37f8", "filename": "crates/ide_completion/src/completions/attribute/derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/594270be49fbd6e7aee9a36afab02920fd771706/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594270be49fbd6e7aee9a36afab02920fd771706/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs?ref=594270be49fbd6e7aee9a36afab02920fd771706", "patch": "@@ -1,3 +1,4 @@\n+//! Completion for derives\n use itertools::Itertools;\n use rustc_hash::FxHashSet;\n use syntax::ast;"}, {"sha": "8815e5867fe4f59e982f266930f60cdfbfb32146", "filename": "crates/ide_completion/src/completions/attribute/lint.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/594270be49fbd6e7aee9a36afab02920fd771706/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594270be49fbd6e7aee9a36afab02920fd771706/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Flint.rs?ref=594270be49fbd6e7aee9a36afab02920fd771706", "patch": "@@ -1,3 +1,4 @@\n+//! Completion for lints\n use syntax::ast;\n \n use crate::{"}]}