{"sha": "4be73c2b7f85b75be69bbe99ed4b1f82659a11c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZTczYzJiN2Y4NWI3NWJlNjliYmU5OWVkNGIxZjgyNjU5YTExYzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-05T09:15:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-05T09:15:35Z"}, "message": "AbsPath", "tree": {"sha": "a8390ab63e3038a99b88ff179abb6034bc35f25a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8390ab63e3038a99b88ff179abb6034bc35f25a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4be73c2b7f85b75be69bbe99ed4b1f82659a11c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4be73c2b7f85b75be69bbe99ed4b1f82659a11c9", "html_url": "https://github.com/rust-lang/rust/commit/4be73c2b7f85b75be69bbe99ed4b1f82659a11c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4be73c2b7f85b75be69bbe99ed4b1f82659a11c9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2f42260c35689647c30966a6ac8447a91c8871", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2f42260c35689647c30966a6ac8447a91c8871", "html_url": "https://github.com/rust-lang/rust/commit/6c2f42260c35689647c30966a6ac8447a91c8871"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "04f7eb7412e0bc3c4678d3aebd663e4e6c1a2b45", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4be73c2b7f85b75be69bbe99ed4b1f82659a11c9/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4be73c2b7f85b75be69bbe99ed4b1f82659a11c9/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=4be73c2b7f85b75be69bbe99ed4b1f82659a11c9", "patch": "@@ -134,12 +134,12 @@ impl PackageData {\n \n impl CargoWorkspace {\n     pub fn from_cargo_metadata(\n-        cargo_toml: &Path,\n+        cargo_toml: &AbsPath,\n         cargo_features: &CargoConfig,\n     ) -> Result<CargoWorkspace> {\n         let mut meta = MetadataCommand::new();\n         meta.cargo_path(ra_toolchain::cargo());\n-        meta.manifest_path(cargo_toml);\n+        meta.manifest_path(cargo_toml.to_path_buf());\n         if cargo_features.all_features {\n             meta.features(CargoOpt::AllFeatures);\n         } else if cargo_features.no_default_features {\n@@ -150,7 +150,7 @@ impl CargoWorkspace {\n             meta.features(CargoOpt::SomeFeatures(cargo_features.features.clone()));\n         }\n         if let Some(parent) = cargo_toml.parent() {\n-            meta.current_dir(parent);\n+            meta.current_dir(parent.to_path_buf());\n         }\n         if let Some(target) = cargo_features.target.as_ref() {\n             meta.other_options(vec![String::from(\"--filter-platform\"), target.clone()]);"}]}