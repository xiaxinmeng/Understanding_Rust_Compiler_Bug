{"sha": "4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZWNiNThhNjRmZDNkMGEwZGE1Y2JlYTRhNzczMjc5OTZjYmU0NGE=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-11-13T23:32:36Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-11-14T11:59:35Z"}, "message": "introduce benchmarks of HashSet operations", "tree": {"sha": "0eaf1df1090833002a4e3539eefd9ac2337d64e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eaf1df1090833002a4e3539eefd9ac2337d64e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "html_url": "https://github.com/rust-lang/rust/commit/4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2491ee4e6c74451371aee8f4a2a5786d7a35406", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2491ee4e6c74451371aee8f4a2a5786d7a35406", "html_url": "https://github.com/rust-lang/rust/commit/a2491ee4e6c74451371aee8f4a2a5786d7a35406"}], "stats": {"total": 73, "additions": 52, "deletions": 21}, "files": [{"sha": "18502ded308c73f924e04122b327c27d8d7c8129", "filename": "src/liballoc/benches/btree/set.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Fliballoc%2Fbenches%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Fliballoc%2Fbenches%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fbtree%2Fset.rs?ref=4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "patch": "@@ -1,7 +1,7 @@\n use std::collections::BTreeSet;\n \n use rand::{thread_rng, Rng};\n-use test::{black_box, Bencher};\n+use test::Bencher;\n \n fn random(n: usize) -> BTreeSet<usize> {\n     let mut rng = thread_rng();\n@@ -31,7 +31,6 @@ fn pos(n: usize) -> BTreeSet<i32> {\n     set\n }\n \n-\n fn stagger(n1: usize, factor: usize) -> [BTreeSet<u32>; 2] {\n     let n2 = n1 * factor;\n     let mut sets = [BTreeSet::new(), BTreeSet::new()];\n@@ -52,10 +51,7 @@ macro_rules! set_bench {\n             let sets = $sets;\n \n             // measure\n-            b.iter(|| {\n-                let x = sets[0].$set_func(&sets[1]).$result_func();\n-                black_box(x);\n-            })\n+            b.iter(|| sets[0].$set_func(&sets[1]).$result_func())\n         }\n     };\n }"}, {"sha": "25425c5968e25f0ba086130d1c1e5595fe1e488a", "filename": "src/libstd/benches/hash/map.rs", "status": "renamed", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbenches%2Fhash%2Fmap.rs?ref=4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "patch": "@@ -1,11 +1,10 @@\n #![cfg(test)]\n \n use test::Bencher;\n+use std::collections::HashMap;\n \n #[bench]\n fn new_drop(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     b.iter(|| {\n         let m: HashMap<i32, i32> = HashMap::new();\n         assert_eq!(m.len(), 0);\n@@ -14,8 +13,6 @@ fn new_drop(b: &mut Bencher) {\n \n #[bench]\n fn new_insert_drop(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     b.iter(|| {\n         let mut m = HashMap::new();\n         m.insert(0, 0);\n@@ -25,8 +22,6 @@ fn new_insert_drop(b: &mut Bencher) {\n \n #[bench]\n fn grow_by_insertion(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     let mut m = HashMap::new();\n \n     for i in 1..1001 {\n@@ -43,8 +38,6 @@ fn grow_by_insertion(b: &mut Bencher) {\n \n #[bench]\n fn find_existing(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     let mut m = HashMap::new();\n \n     for i in 1..1001 {\n@@ -60,8 +53,6 @@ fn find_existing(b: &mut Bencher) {\n \n #[bench]\n fn find_nonexisting(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     let mut m = HashMap::new();\n \n     for i in 1..1001 {\n@@ -77,8 +68,6 @@ fn find_nonexisting(b: &mut Bencher) {\n \n #[bench]\n fn hashmap_as_queue(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     let mut m = HashMap::new();\n \n     for i in 1..1001 {\n@@ -96,8 +85,6 @@ fn hashmap_as_queue(b: &mut Bencher) {\n \n #[bench]\n fn get_remove_insert(b: &mut Bencher) {\n-    use super::map::HashMap;\n-\n     let mut m = HashMap::new();\n \n     for i in 1..1001 {", "previous_filename": "src/libstd/collections/hash/bench.rs"}, {"sha": "42401a21b766d1e588cfe511dbc22b5bcccbcf68", "filename": "src/libstd/benches/hash/mod.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbenches%2Fhash%2Fmod.rs?ref=4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "patch": "@@ -0,0 +1,2 @@\n+mod map;\n+mod set_ops;"}, {"sha": "1a4c4a66ee9e0ec8632f16ed152e185f69b64d50", "filename": "src/libstd/benches/hash/set_ops.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Fhash%2Fset_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Fhash%2Fset_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbenches%2Fhash%2Fset_ops.rs?ref=4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "patch": "@@ -0,0 +1,42 @@\n+use std::collections::HashSet;\n+use test::Bencher;\n+\n+#[bench]\n+fn set_difference(b: &mut Bencher) {\n+    let small: HashSet<_> = (0..10).collect();\n+    let large: HashSet<_> = (0..100).collect();\n+\n+    b.iter(|| small.difference(&large).count());\n+}\n+\n+#[bench]\n+fn set_is_subset(b: &mut Bencher) {\n+    let small: HashSet<_> = (0..10).collect();\n+    let large: HashSet<_> = (0..100).collect();\n+\n+    b.iter(|| small.is_subset(&large));\n+}\n+\n+#[bench]\n+fn set_intersection(b: &mut Bencher) {\n+    let small: HashSet<_> = (0..10).collect();\n+    let large: HashSet<_> = (0..100).collect();\n+\n+    b.iter(|| small.intersection(&large).count());\n+}\n+\n+#[bench]\n+fn set_symmetric_difference(b: &mut Bencher) {\n+    let small: HashSet<_> = (0..10).collect();\n+    let large: HashSet<_> = (0..100).collect();\n+\n+    b.iter(|| small.symmetric_difference(&large).count());\n+}\n+\n+#[bench]\n+fn set_union(b: &mut Bencher) {\n+    let small: HashSet<_> = (0..10).collect();\n+    let large: HashSet<_> = (0..100).collect();\n+\n+    b.iter(|| small.union(&large).count());\n+}"}, {"sha": "4d1cf7fab7b7b45e609dae8acae7e2f654c8cf08", "filename": "src/libstd/benches/lib.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbenches%2Flib.rs?ref=4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "patch": "@@ -0,0 +1,5 @@\n+#![feature(test)]\n+\n+extern crate test;\n+\n+mod hash;"}, {"sha": "348820af54bffabcb2e7c8e32a84dd5b8124a7c5", "filename": "src/libstd/collections/hash/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fcollections%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4decb58a64fd3d0a0da5cbea4a77327996cbe44a/src%2Flibstd%2Fcollections%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmod.rs?ref=4decb58a64fd3d0a0da5cbea4a77327996cbe44a", "patch": "@@ -1,5 +1,4 @@\n //! Unordered containers, implemented as hash-tables\n \n-mod bench;\n pub mod map;\n pub mod set;"}]}