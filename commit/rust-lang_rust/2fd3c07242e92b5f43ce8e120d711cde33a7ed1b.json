{"sha": "2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZDNjMDcyNDJlOTJiNWY0M2NlOGUxMjBkNzExY2RlMzNhN2VkMWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-20T19:46:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-20T19:46:05Z"}, "message": "auto merge of #9278 : alexcrichton/rust/ndebug, r=brson\n\nMany people will be very confused that their debug! statements aren't working\r\nwhen they first use rust only to learn that they should have been building with\r\n`--cfg debug` the entire time. This inverts the meaning of the flag to instead\r\nof enabling debug statements, now it disables debug statements.\r\n\r\nThis way the default behavior is a bit more reasonable, and requires less\r\nend-user configuration. Furthermore, this turns on debug by default when\r\nbuilding the rustc compiler.", "tree": {"sha": "d327eb1e50242cc36b671589ad9bae9bebe300aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d327eb1e50242cc36b671589ad9bae9bebe300aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "html_url": "https://github.com/rust-lang/rust/commit/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff0aaaf138071ba2656c4c7bddc5267bb3f10e2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0aaaf138071ba2656c4c7bddc5267bb3f10e2e", "html_url": "https://github.com/rust-lang/rust/commit/ff0aaaf138071ba2656c4c7bddc5267bb3f10e2e"}, {"sha": "833a64d76e1d3ecca5f66469b1a8ec7c97a1c9d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/833a64d76e1d3ecca5f66469b1a8ec7c97a1c9d9", "html_url": "https://github.com/rust-lang/rust/commit/833a64d76e1d3ecca5f66469b1a8ec7c97a1c9d9"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "ebcd5c7960344cb8c6a38c4fca70fed841976de8", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -102,9 +102,9 @@ endif\n \n ifdef CFG_ENABLE_DEBUG\n   $(info cfg: enabling more debugging (CFG_ENABLE_DEBUG))\n-  CFG_RUSTC_FLAGS += --cfg debug\n   CFG_GCCISH_CFLAGS += -DRUST_DEBUG\n else\n+  CFG_RUSTC_FLAGS += --cfg ndebug\n   CFG_GCCISH_CFLAGS += -DRUST_NDEBUG\n endif\n "}, {"sha": "a65c0c22142cecaf2149ea9ddb5f4a02ff93da32", "filename": "RELEASES.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/RELEASES.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/RELEASES.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.txt?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -10,8 +10,8 @@ Version 0.8 (October 2013)\n       * Many trait inheritance bugs fixed.\n       * Owned and borrowed trait objects work more reliably.\n       * `copy` is no longer a keyword. It has been replaced by the `Clone` trait.\n-      * rustc no longer emits code for the `debug!` macro unless it is passed\n-        `--cfg debug`\n+      * rustc can omit emission of code for the `debug!` macro if it is passed\n+        `--cfg ndebug`\n       * mod.rs is now \"blessed\". When loading `mod foo;`, rustc will now look\n         for foo.rs, then foo/mod.rs, and will generate an error when both are\n         present."}, {"sha": "2b024057403ab1c29f4f6713d8bf170af1f9ae84", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/configure", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -373,7 +373,7 @@ opt optimize-cxx 1 \"build optimized C++ code\"\n opt optimize-llvm 1 \"build optimized LLVM\"\n opt optimize-tests 1 \"build tests with optimizations\"\n opt llvm-assertions 1 \"build LLVM with assertions\"\n-opt debug 0 \"build with extra debug fun\"\n+opt debug 1 \"build with extra debug fun\"\n opt ratchet-bench 0 \"ratchet benchmarks\"\n opt fast-make 0 \"use .gitmodules as timestamp for submodule deps\"\n opt manage-submodules 1 \"let the build manage the git submodules\""}, {"sha": "e941e4f7956d7615950ed4c4b9e8322f104d27b2", "filename": "doc/rust.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -3428,8 +3428,8 @@ sign (`=`) followed by the log level, from 1 to 4, inclusive. Level 1\n is the error level, 2 is warning, 3 info, and 4 debug. You can also\n use the symbolic constants `error`, `warn`, `info`, and `debug`.  Any\n logs less than or equal to the specified level will be output. If not\n-specified then log level 4 is assumed.  However, debug messages are\n-only available if `--cfg=debug` is passed to `rustc`.\n+specified then log level 4 is assumed.  Debug messages can be omitted\n+by passing `--cfg ndebug` to `rustc`.\n \n As an example, to see all the logs generated by the compiler, you would set\n `RUST_LOG` to `rustc`, which is the crate name (as specified in its `link`"}, {"sha": "14b06bf047ee12f53f5842902ab613b30d45d1df", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -575,7 +575,7 @@ TEST_SREQ$(1)_T_$(2)_H_$(3) = \\\n \n # The tests select when to use debug configuration on their own;\n # remove directive, if present, from CFG_RUSTC_FLAGS (issue #7898).\n-CTEST_RUSTC_FLAGS := $$(subst --cfg debug,,$$(CFG_RUSTC_FLAGS))\n+CTEST_RUSTC_FLAGS := $$(subst --cfg ndebug,,$$(CFG_RUSTC_FLAGS))\n \n # The tests can not be optimized while the rest of the compiler is optimized, so\n # filter out the optimization (if any) from rustc and then figure out if we need"}, {"sha": "82d452bc7342317dce94f8555cd23314d961d0e4", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -715,7 +715,7 @@ pub fn std_macros() -> @str {\n     macro_rules! warn ( ($($arg:tt)*) => (log!(2u32, $($arg)*)) )\n     macro_rules! info ( ($($arg:tt)*) => (log!(3u32, $($arg)*)) )\n     macro_rules! debug( ($($arg:tt)*) => (\n-        if cfg!(debug) { log!(4u32, $($arg)*) }\n+        if cfg!(not(ndebug)) { log!(4u32, $($arg)*) }\n     ))\n \n     macro_rules! log2(\n@@ -730,7 +730,7 @@ pub fn std_macros() -> @str {\n     macro_rules! warn2 ( ($($arg:tt)*) => (log2!(2u32, $($arg)*)) )\n     macro_rules! info2 ( ($($arg:tt)*) => (log2!(3u32, $($arg)*)) )\n     macro_rules! debug2( ($($arg:tt)*) => (\n-        if cfg!(debug) { log2!(4u32, $($arg)*) }\n+        if cfg!(not(ndebug)) { log2!(4u32, $($arg)*) }\n     ))\n \n     macro_rules! fail("}, {"sha": "1aae5ce29c0f83d160b1acb51ecc2fa30178e0b2", "filename": "src/test/run-pass/conditional-debug-macro-off.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -9,9 +9,10 @@\n // except according to those terms.\n \n // xfail-fast exec-env directive doesn't work for check-fast\n+// compile-flags: --cfg ndebug\n // exec-env:RUST_LOG=conditional-debug-macro-off=4\n \n fn main() {\n     // only fails if debug! evaluates its argument.\n     debug!({ if true { fail!() } });\n-}\n\\ No newline at end of file\n+}"}, {"sha": "2fe6d179348fe595099575ed98e46b650a536b4c", "filename": "src/test/run-pass/conditional-debug-macro-on.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd3c07242e92b5f43ce8e120d711cde33a7ed1b/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs?ref=2fd3c07242e92b5f43ce8e120d711cde33a7ed1b", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // xfail-fast compile-flags directive doesn't work for check-fast\n-// compile-flags: --cfg debug\n // exec-env:RUST_LOG=conditional-debug-macro-on=4\n \n fn main() {\n@@ -18,4 +17,4 @@ fn main() {\n     debug!({ if true { return; } });\n \n     fail!();\n-}\n\\ No newline at end of file\n+}"}]}