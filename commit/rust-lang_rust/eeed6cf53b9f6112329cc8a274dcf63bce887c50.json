{"sha": "eeed6cf53b9f6112329cc8a274dcf63bce887c50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZWQ2Y2Y1M2I5ZjYxMTIzMjljYzhhMjc0ZGNmNjNiY2U4ODdjNTA=", "commit": {"author": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-01-21T20:48:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T08:46:27Z"}, "message": "fix recursive watch", "tree": {"sha": "8c94f012ea5ecfc3a899ce2a3b165e68ab9f8d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c94f012ea5ecfc3a899ce2a3b165e68ab9f8d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeed6cf53b9f6112329cc8a274dcf63bce887c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeed6cf53b9f6112329cc8a274dcf63bce887c50", "html_url": "https://github.com/rust-lang/rust/commit/eeed6cf53b9f6112329cc8a274dcf63bce887c50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeed6cf53b9f6112329cc8a274dcf63bce887c50/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a1afad3eda7d8c5635de6e7f524ed943cecc22b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a1afad3eda7d8c5635de6e7f524ed943cecc22b", "html_url": "https://github.com/rust-lang/rust/commit/2a1afad3eda7d8c5635de6e7f524ed943cecc22b"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "b370c5fbcd16408ab6f296b02da038a93f80ca0f", "filename": "crates/ra_vfs/src/io/watcher.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eeed6cf53b9f6112329cc8a274dcf63bce887c50/crates%2Fra_vfs%2Fsrc%2Fio%2Fwatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeed6cf53b9f6112329cc8a274dcf63bce887c50/crates%2Fra_vfs%2Fsrc%2Fio%2Fwatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fio%2Fwatcher.rs?ref=eeed6cf53b9f6112329cc8a274dcf63bce887c50", "patch": "@@ -91,9 +91,14 @@ impl Watcher {\n             match res {\n                 Ok(entry) => {\n                     if entry.path().is_dir() {\n-                        match self.watcher.watch(dir, RecursiveMode::NonRecursive) {\n-                            Ok(()) => log::debug!(\"watching \\\"{}\\\"\", dir.display()),\n-                            Err(e) => log::warn!(\"could not watch \\\"{}\\\": {}\", dir.display(), e),\n+                        match self\n+                            .watcher\n+                            .watch(entry.path(), RecursiveMode::NonRecursive)\n+                        {\n+                            Ok(()) => log::debug!(\"watching \\\"{}\\\"\", entry.path().display()),\n+                            Err(e) => {\n+                                log::warn!(\"could not watch \\\"{}\\\": {}\", entry.path().display(), e)\n+                            }\n                         }\n                     }\n                     if emit_for_contents && entry.depth() > 0 {"}]}