{"sha": "b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4OWFmZTJhZjdiZGQ5YjY1ODM2YjI3OGM2ZTAzMjJhOGY5MWZiMDc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-06T12:06:56Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-08T02:53:21Z"}, "message": "Update docs and tests for #[deriving(Show)].", "tree": {"sha": "e1f20a58f236e294304ae9d1bf58a014b85f77a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1f20a58f236e294304ae9d1bf58a014b85f77a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "html_url": "https://github.com/rust-lang/rust/commit/b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a8b3ae22fbf514d6dc920abebe478e95c38e3ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a8b3ae22fbf514d6dc920abebe478e95c38e3ad", "html_url": "https://github.com/rust-lang/rust/commit/6a8b3ae22fbf514d6dc920abebe478e95c38e3ad"}], "stats": {"total": 110, "additions": 106, "deletions": 4}, "files": [{"sha": "bae8f562af526f7ea947ac949bfe090702f22894", "filename": "src/doc/rust.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -1969,13 +1969,14 @@ impl<T: Eq> Eq for Foo<T> {\n Supported traits for `deriving` are:\n \n * Comparison traits: `Eq`, `TotalEq`, `Ord`, `TotalOrd`.\n-* Serialization: `Encodable`, `Decodable`. These require `extra`.\n+* Serialization: `Encodable`, `Decodable`. These require `serialize`.\n * `Clone` and `DeepClone`, to perform (deep) copies.\n * `IterBytes`, to iterate over the bytes in a data type.\n * `Rand`, to create a random instance of a data type.\n * `Default`, to create an empty instance of a data type.\n * `Zero`, to create an zero instance of a numeric data type.\n-* `FromPrimitive`, to create an instance from a numeric primitve.\n+* `FromPrimitive`, to create an instance from a numeric primitive.\n+* `Show`, to format a value using the `{}` formatter.\n \n ### Stability\n One can indicate the stability of an API using the following attributes:"}, {"sha": "a5426c20619e044c19b6516407e38d5b6d3a5e26", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -2523,7 +2523,7 @@ enum ABC { A, B, C }\n \n The full list of derivable traits is `Eq`, `TotalEq`, `Ord`,\n `TotalOrd`, `Encodable` `Decodable`, `Clone`, `DeepClone`,\n-`IterBytes`, `Rand`, `Default`, `Zero`, and `ToStr`.\n+`IterBytes`, `Rand`, `Default`, `Zero`, `FromPrimitive` and `Show`.\n \n # Crates and the module system\n "}, {"sha": "7acaa761bb21531a4a49ed22209257a49f7aa20b", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -118,7 +118,8 @@ def write_file(name, string):\n for (trait, supers, errs) in [('Rand', [], 1),\n                               ('Clone', [], 1), ('DeepClone', ['Clone'], 1),\n                               ('Eq', [], 2), ('Ord', [], 8),\n-                              ('TotalEq', [], 1), ('TotalOrd', ['TotalEq'], 1)]:\n+                              ('TotalEq', [], 1), ('TotalOrd', ['TotalEq'], 1),\n+                              ('Show', [], 1)]:\n     traits[trait] = (ALL, supers, errs)\n \n for (trait, (types, super_traits, error_count)) in traits.items():"}, {"sha": "582c95b746b7a45cce817b83be675de4b65b8389", "filename": "src/test/compile-fail/deriving-span-Show-enum-struct-variant.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum-struct-variant.rs?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This file was auto-generated using 'src/etc/generate-keyword-span-tests.py'\n+\n+#[feature(struct_variant)];\n+extern mod extra;\n+\n+\n+struct Error;\n+\n+#[deriving(Show)]\n+enum Enum {\n+   A {\n+     x: Error //~ ERROR\n+   }\n+}\n+\n+fn main() {}"}, {"sha": "92efe01fa3863120457a732d95a17cbd3ff3396c", "filename": "src/test/compile-fail/deriving-span-Show-enum.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum.rs?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This file was auto-generated using 'src/etc/generate-keyword-span-tests.py'\n+\n+#[feature(struct_variant)];\n+extern mod extra;\n+\n+\n+struct Error;\n+\n+#[deriving(Show)]\n+enum Enum {\n+   A(\n+     Error //~ ERROR\n+     )\n+}\n+\n+fn main() {}"}, {"sha": "7eff82f9d13ff39548d55a7c60a99a10ed50417a", "filename": "src/test/compile-fail/deriving-span-Show-struct.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-struct.rs?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This file was auto-generated using 'src/etc/generate-keyword-span-tests.py'\n+\n+#[feature(struct_variant)];\n+extern mod extra;\n+\n+\n+struct Error;\n+\n+#[deriving(Show)]\n+struct Struct {\n+    x: Error //~ ERROR\n+}\n+\n+fn main() {}"}, {"sha": "600a0400350dbea8ace9f00b164dcf8e9b380d74", "filename": "src/test/compile-fail/deriving-span-Show-tuple-struct.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b89afe2af7bdd9b65836b278c6e0322a8f91fb07/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-tuple-struct.rs?ref=b89afe2af7bdd9b65836b278c6e0322a8f91fb07", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This file was auto-generated using 'src/etc/generate-keyword-span-tests.py'\n+\n+#[feature(struct_variant)];\n+extern mod extra;\n+\n+\n+struct Error;\n+\n+#[deriving(Show)]\n+struct Struct(\n+    Error //~ ERROR\n+);\n+\n+fn main() {}"}]}