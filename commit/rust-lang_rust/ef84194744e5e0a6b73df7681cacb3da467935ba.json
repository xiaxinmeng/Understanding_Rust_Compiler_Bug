{"sha": "ef84194744e5e0a6b73df7681cacb3da467935ba", "node_id": "C_kwDOAAsO6NoAKGVmODQxOTQ3NDRlNWUwYTZiNzNkZjc2ODFjYWNiM2RhNDY3OTM1YmE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-11T11:55:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-11T11:55:42Z"}, "message": "Rollup merge of #108711 - Nilstrieb:nt-note, r=petrochenkov\n\nAdd note when matching token with nonterminal\n\nThe current error message is _really_ confusing. The implementation is slightly hacky, but not that much more hacky than all this nonterminal stuff..\n\nr? ``@petrochenkov``", "tree": {"sha": "1ac60db8f8bb53ba97965ab0dfef914c0fc36c13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ac60db8f8bb53ba97965ab0dfef914c0fc36c13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef84194744e5e0a6b73df7681cacb3da467935ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkDGw+CRBK7hj4Ov3rIwAA6W0IAAfejp8rc18D6wsQ/8IO+PXb\n+9/IPcV1DRaC6/Elzs3PStLa4DR6Yd8gwwLcIRAEU4+MS6Irh8aCIrlS7o07gDig\n2RVxNCEpUmlBftLp50C0v9ogY3vHM6JuHE02g0i/XITknNzKBr8V527VnnkPXgaA\neBHQ1goGh0Xl+p0enzfaY+dmSu6Xgoh5ZIvZ0ovuTfWOxNrBx1G/IvpHrTlOPe2J\nm1xaVi/l67SwssykM5qJRL6wYS8dJ1BG8fFmkPPRgDqiX2jLmBA2pegnwROc78EE\nMMRn0Dyg2SR/nWn4vL6IWu8wroigtdtyM0IEmct43Q3ZQQXZP24VeUHyEACKNnA=\n=F3Vu\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ac60db8f8bb53ba97965ab0dfef914c0fc36c13\nparent 8596751f3b8f8824db2c9d3e136b1dc38b9a2fad\nparent 3dee4630ba1fe9de0aa03e920dfe993a6d357945\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678535742 +0100\ncommitter GitHub <noreply@github.com> 1678535742 +0100\n\nRollup merge of #108711 - Nilstrieb:nt-note, r=petrochenkov\n\nAdd note when matching token with nonterminal\n\nThe current error message is _really_ confusing. The implementation is slightly hacky, but not that much more hacky than all this nonterminal stuff..\n\nr? ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef84194744e5e0a6b73df7681cacb3da467935ba", "html_url": "https://github.com/rust-lang/rust/commit/ef84194744e5e0a6b73df7681cacb3da467935ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef84194744e5e0a6b73df7681cacb3da467935ba/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8596751f3b8f8824db2c9d3e136b1dc38b9a2fad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8596751f3b8f8824db2c9d3e136b1dc38b9a2fad", "html_url": "https://github.com/rust-lang/rust/commit/8596751f3b8f8824db2c9d3e136b1dc38b9a2fad"}, {"sha": "3dee4630ba1fe9de0aa03e920dfe993a6d357945", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dee4630ba1fe9de0aa03e920dfe993a6d357945", "html_url": "https://github.com/rust-lang/rust/commit/3dee4630ba1fe9de0aa03e920dfe993a6d357945"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "b1d9cea277397102a427e9b93a20e1e557e83e63", "filename": "compiler/rustc_expand/src/mbe/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ef84194744e5e0a6b73df7681cacb3da467935ba/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef84194744e5e0a6b73df7681cacb3da467935ba/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fdiagnostics.rs?ref=ef84194744e5e0a6b73df7681cacb3da467935ba", "patch": "@@ -1,19 +1,18 @@\n-use std::borrow::Cow;\n-\n use crate::base::{DummyResult, ExtCtxt, MacResult};\n use crate::expand::{parse_ast_fragment, AstFragmentKind};\n use crate::mbe::{\n     macro_parser::{MatcherLoc, NamedParseResult, ParseResult::*, TtParser},\n     macro_rules::{try_match_macro, Tracker},\n };\n-use rustc_ast::token::{self, Token};\n+use rustc_ast::token::{self, Token, TokenKind};\n use rustc_ast::tokenstream::TokenStream;\n use rustc_ast_pretty::pprust;\n use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, DiagnosticMessage};\n use rustc_parse::parser::{Parser, Recovery};\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n+use std::borrow::Cow;\n \n use super::macro_rules::{parser_from_cx, NoopTracker};\n \n@@ -63,6 +62,13 @@ pub(super) fn failed_to_match_macro<'cx>(\n         err.note(format!(\"while trying to match {remaining_matcher}\"));\n     }\n \n+    if let MatcherLoc::Token { token: expected_token } = &remaining_matcher\n+        && (matches!(expected_token.kind, TokenKind::Interpolated(_))\n+            || matches!(token.kind, TokenKind::Interpolated(_)))\n+    {\n+        err.note(\"captured metavariables except for `$tt`, `$ident` and `$lifetime` cannot be compared to other tokens\");\n+    }\n+\n     // Check whether there's a missing comma in this macro call, like `println!(\"{}\" a);`\n     if let Some((arg, comma_span)) = arg.add_comma() {\n         for lhs in lhses {"}, {"sha": "762ecc3207fa558b3789c2d9d83b5652d57c7f25", "filename": "tests/ui/macros/nonterminal-matching.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef84194744e5e0a6b73df7681cacb3da467935ba/tests%2Fui%2Fmacros%2Fnonterminal-matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef84194744e5e0a6b73df7681cacb3da467935ba/tests%2Fui%2Fmacros%2Fnonterminal-matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fnonterminal-matching.stderr?ref=ef84194744e5e0a6b73df7681cacb3da467935ba", "patch": "@@ -18,6 +18,7 @@ LL |     macro n(a $nt_item b) {\n ...\n LL | complex_nonterminal!(enum E {});\n    | ------------------------------- in this macro invocation\n+   = note: captured metavariables except for `$tt`, `$ident` and `$lifetime` cannot be compared to other tokens\n    = note: this error originates in the macro `complex_nonterminal` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}]}