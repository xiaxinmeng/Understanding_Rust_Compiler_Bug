{"sha": "808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "node_id": "C_kwDOAAsO6NoAKDgwOGYxOTdlZDQwY2UwZGVkOWUyMmFkODgwNmU0NGM3MjgzZWY3Yjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-30T21:38:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-30T21:38:26Z"}, "message": "Rollup merge of #102490 - compiler-errors:closure-body-impl-lifetime, r=cjgillot\n\nGenerate synthetic region from `impl` even in closure body within an associated fn\n\nFixes #102209", "tree": {"sha": "b08c4997e70d1c1545cae5d8eded88a9a08e838d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b08c4997e70d1c1545cae5d8eded88a9a08e838d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjN2HSCRBK7hj4Ov3rIwAA1AQIAHCZbM3pdpReurqZJ7nT7rq5\nwujI3KiOAW+H+FteqhaJErJKIP3Ne74CUSQFvHH5mqpSJTPL2PLU8WtFpob8xXHQ\nl9Ha9lR7SqMOYT0c2E8BIWPK7guvp9D4s3mKgeOhIhaDN9oIoTqWFLb89U6oqPBi\n3tY3UPpT3OmyGw0qhLE8meKnOQcy19MsXy9pda2+mbhqY8f5exNT4n/qQFbVY0R5\npO3MgKamZpk7oMWIt5v6QZFjT+Y0euvEXO1fq1xuds+YGJpQNThSNv7VoagyzbKB\nJ6vbGdT6BQUW3LE/zQ2RSmLhcusLUtGfJM8d6ez9xwWTEhMGJlk1nEoy9NjoQxM=\n=KSOR\n-----END PGP SIGNATURE-----\n", "payload": "tree b08c4997e70d1c1545cae5d8eded88a9a08e838d\nparent 05b9f0e36082b874b08922ef72210167fb9ecef2\nparent c1c3dacc7870584a7d11b853da8c5956878c6c65\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1664573906 +0200\ncommitter GitHub <noreply@github.com> 1664573906 +0200\n\nRollup merge of #102490 - compiler-errors:closure-body-impl-lifetime, r=cjgillot\n\nGenerate synthetic region from `impl` even in closure body within an associated fn\n\nFixes #102209\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "html_url": "https://github.com/rust-lang/rust/commit/808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b9f0e36082b874b08922ef72210167fb9ecef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b9f0e36082b874b08922ef72210167fb9ecef2", "html_url": "https://github.com/rust-lang/rust/commit/05b9f0e36082b874b08922ef72210167fb9ecef2"}, {"sha": "c1c3dacc7870584a7d11b853da8c5956878c6c65", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c3dacc7870584a7d11b853da8c5956878c6c65", "html_url": "https://github.com/rust-lang/rust/commit/c1c3dacc7870584a7d11b853da8c5956878c6c65"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "4d251cf7ac752ddbe89cfbbc6ee34e1e4d39b842", "filename": "compiler/rustc_borrowck/src/diagnostics/region_name.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs?ref=808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "patch": "@@ -864,15 +864,13 @@ impl<'tcx> MirBorrowckCtxt<'_, 'tcx> {\n         };\n \n         let tcx = self.infcx.tcx;\n-        let body_parent_did = tcx.opt_parent(self.mir_def_id().to_def_id())?;\n-        if tcx.parent(region.def_id) != body_parent_did\n-            || tcx.def_kind(body_parent_did) != DefKind::Impl\n-        {\n+        let region_parent = tcx.parent(region.def_id);\n+        if tcx.def_kind(region_parent) != DefKind::Impl {\n             return None;\n         }\n \n         let mut found = false;\n-        tcx.fold_regions(tcx.type_of(body_parent_did), |r: ty::Region<'tcx>, _| {\n+        tcx.fold_regions(tcx.type_of(region_parent), |r: ty::Region<'tcx>, _| {\n             if *r == ty::ReEarlyBound(region) {\n                 found = true;\n             }"}, {"sha": "37628bff7df4bd1a9df91d38b4602a91e09fc21f", "filename": "src/test/ui/borrowck/issue-102209.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.rs?ref=808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "patch": "@@ -0,0 +1,28 @@\n+use std::marker::PhantomData;\n+\n+pub struct NfaBuilder<'brand> {\n+    brand: PhantomData<&'brand mut &'brand mut ()>,\n+}\n+\n+impl NfaBuilder<'_> {\n+    pub fn with<R, F: FnOnce(NfaBuilder<'_>) -> R>(f: F) -> R {\n+        Brand::with(|brand| {\n+            f(Self { brand: brand.lt })\n+            //~^ ERROR lifetime may not live long enough\n+            //~| ERROR lifetime may not live long enough\n+        })\n+    }\n+}\n+\n+#[derive(Clone, Copy)]\n+pub struct Brand<'brand> {\n+    lt: PhantomData<&'brand mut &'brand mut ()>,\n+}\n+\n+impl Brand<'_> {\n+    pub fn with<R, F: FnOnce(Brand<'_>) -> R>(f: F) -> R {\n+        f(Self { lt: PhantomData })\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "351de8217b2348ba37ef9e91c402f0767d0a1e1f", "filename": "src/test/ui/borrowck/issue-102209.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/808f197ed40ce0ded9e22ad8806e44c7283ef7b9/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.stderr?ref=808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "patch": "@@ -0,0 +1,22 @@\n+error: lifetime may not live long enough\n+  --> $DIR/issue-102209.rs:10:29\n+   |\n+LL | impl NfaBuilder<'_> {\n+   |                 -- lifetime `'2` appears in the `impl`'s self type\n+LL |     pub fn with<R, F: FnOnce(NfaBuilder<'_>) -> R>(f: F) -> R {\n+LL |         Brand::with(|brand| {\n+   |                      ----- has type `Brand<'1>`\n+LL |             f(Self { brand: brand.lt })\n+   |                             ^^^^^^^^ this usage requires that `'1` must outlive `'2`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/issue-102209.rs:10:29\n+   |\n+LL | impl NfaBuilder<'_> {\n+   |                 -- lifetime `'1` appears in the `impl`'s self type\n+...\n+LL |             f(Self { brand: brand.lt })\n+   |                             ^^^^^^^^ this usage requires that `'1` must outlive `'static`\n+\n+error: aborting due to 2 previous errors\n+"}]}