{"sha": "b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOWU1ZGFhODliNmRiZmU5M2I5ZGI3YTY2YjY3MGNhNmQxYjVmNGE=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-03-13T22:45:39Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-03-14T11:00:19Z"}, "message": "Split rustdoc summary lines in a smarter way\n\nPreviously it would fail on a trivial case like\n\n    /// Summary line\n    /// <trailing space>\n    /// Regular content\n\nCompliant markdown preprocessor would render that as two separate paragraphs, but our summary line\nextractor would interpret both lines as the same paragraph and include both into the short summary.", "tree": {"sha": "5e65e09163b20bfdb4106b96bd043b7d99f750d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e65e09163b20bfdb4106b96bd043b7d99f750d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "html_url": "https://github.com/rust-lang/rust/commit/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb69abad8ffbce840e7dc7038ddea434dc987f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb69abad8ffbce840e7dc7038ddea434dc987f1", "html_url": "https://github.com/rust-lang/rust/commit/9eb69abad8ffbce840e7dc7038ddea434dc987f1"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "85c04d76394a5112f3444a03a224c0b8c1455e35", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "patch": "@@ -407,7 +407,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> io::Result<String> {\n                         ty: shortty(item),\n                         name: item.name.clone().unwrap(),\n                         path: fqp[..fqp.len() - 1].connect(\"::\"),\n-                        desc: shorter(item.doc_value()).to_string(),\n+                        desc: shorter(item.doc_value()),\n                         parent: Some(did),\n                     });\n                 },\n@@ -876,7 +876,7 @@ impl DocFolder for Cache {\n                         ty: shortty(&item),\n                         name: s.to_string(),\n                         path: path.connect(\"::\").to_string(),\n-                        desc: shorter(item.doc_value()).to_string(),\n+                        desc: shorter(item.doc_value()),\n                         parent: parent,\n                     });\n                 }\n@@ -1467,13 +1467,14 @@ fn full_path(cx: &Context, item: &clean::Item) -> String {\n     return s\n }\n \n-fn shorter<'a>(s: Option<&'a str>) -> &'a str {\n+fn shorter<'a>(s: Option<&'a str>) -> String {\n     match s {\n-        Some(s) => match s.find(\"\\n\\n\") {\n-            Some(pos) => &s[..pos],\n-            None => s,\n-        },\n-        None => \"\"\n+        Some(s) => s.lines().take_while(|line|{\n+            (*line).chars().any(|chr|{\n+                !chr.is_whitespace()\n+            })\n+        }).collect::<Vec<_>>().connect(\"\\n\"),\n+        None => \"\".to_string()\n     }\n }\n \n@@ -1603,7 +1604,7 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                     </tr>\n                 \",\n                 *myitem.name.as_ref().unwrap(),\n-                Markdown(shorter(myitem.doc_value())),\n+                Markdown(&shorter(myitem.doc_value())[..]),\n                 class = shortty(myitem),\n                 href = item_path(myitem),\n                 title = full_path(cx, myitem),"}]}