{"sha": "efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZDM5M2Q2MTM3YjA2NzE1ZGJkM2EzZTE4YmZkN2FlNGJkOWJiNmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-03T21:59:15Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-11T04:48:28Z"}, "message": "Remove dead code", "tree": {"sha": "d41e395c2a259dc58c93a2891836ffa18ec3692a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d41e395c2a259dc58c93a2891836ffa18ec3692a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b", "html_url": "https://github.com/rust-lang/rust/commit/efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fde2a54f47a84f34add6994c6c90100d83247fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fde2a54f47a84f34add6994c6c90100d83247fb", "html_url": "https://github.com/rust-lang/rust/commit/9fde2a54f47a84f34add6994c6c90100d83247fb"}], "stats": {"total": 37, "additions": 0, "deletions": 37}, "files": [{"sha": "f5eebd3bb8809ba52dfa15cb0d72adceca5e94eb", "filename": "src/comp/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b/src%2Fcomp%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b/src%2Fcomp%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans%2Fbase.rs?ref=efd393d6137b06715dbd3a3e18bfd7ae4bd9bb6b", "patch": "@@ -4826,43 +4826,6 @@ fn fill_fn_pair(bcx: @block_ctxt, pair: ValueRef, llfn: ValueRef,\n     Store(bcx, llenvblobptr, env_cell);\n }\n \n-// Returns the number of type parameters that the given native function has.\n-fn native_fn_ty_param_count(cx: @crate_ctxt, id: ast::node_id) -> uint {\n-    let count;\n-    let native_item =\n-        // invariant?!\n-        alt cx.ast_map.find(id) {\n-          some(ast_map::node_native_item(i, _)) { i }\n-         _ { cx.sess.bug(\"native_fn_ty_param_count \\\n-                          given a non-native item\"); } };\n-    alt native_item.node {\n-      ast::native_item_fn(_, tps) {\n-        count = vec::len::<ast::ty_param>(tps);\n-      }\n-    }\n-    ret count;\n-}\n-\n-\n-// TODO: precondition\n-fn native_fn_wrapper_type(cx: @crate_ctxt, sp: span,\n-                          param_bounds: [ty::param_bounds],\n-                          x: ty::t) -> TypeRef {\n-    alt ty::get(x).struct {\n-      ty::ty_fn({inputs: args, output: out, _}) {\n-        ret type_of_fn(cx, args, out, param_bounds);\n-      }\n-      _ { cx.sess.span_bug(sp, \"native_fn_wrapper_type got ill-typed\\\n-              thing\"); }\n-    }\n-}\n-\n-fn raw_native_fn_type(ccx: @crate_ctxt, args: [ty::arg],\n-                      ret_ty: ty::t) -> TypeRef {\n-    check type_has_static_size(ccx, ret_ty);\n-    ret T_fn(type_of_explicit_args(ccx, args), type_of(ccx, ret_ty));\n-}\n-\n fn link_name(i: @ast::native_item) -> str {\n     alt attr::get_meta_item_value_str_by_name(i.attrs, \"link_name\") {\n       none { ret i.ident; }"}]}