{"sha": "35275076f52d53c3dcd9dee85d92a2059a663225", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Mjc1MDc2ZjUyZDUzYzNkY2Q5ZGVlODVkOTJhMjA1OWE2NjMyMjU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-03-08T10:59:08Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-03-08T10:59:08Z"}, "message": "Remove unneeded `T: Send + Sync` bounds from `Arc`.\n\nThe requirement `T: Send + Sync` only matters if the `Arc` crosses\nthread boundaries, and that is adequately controlled by the impls of\n`Send`/`Sync` for `Arc` itself. If `T` doesn't satisfy the bounds, then\nthe `Arc` cannot cross thread boundaries and so everything is still\nsafe (`Arc` just acts like an expensive `Rc`).", "tree": {"sha": "4e53f9025fffb3d35ea8fde533fd12073da19365", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e53f9025fffb3d35ea8fde533fd12073da19365"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35275076f52d53c3dcd9dee85d92a2059a663225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35275076f52d53c3dcd9dee85d92a2059a663225", "html_url": "https://github.com/rust-lang/rust/commit/35275076f52d53c3dcd9dee85d92a2059a663225", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35275076f52d53c3dcd9dee85d92a2059a663225/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d30609ffd782c941f38d62caaed8beb6fde965db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d30609ffd782c941f38d62caaed8beb6fde965db", "html_url": "https://github.com/rust-lang/rust/commit/d30609ffd782c941f38d62caaed8beb6fde965db"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ce25f907ec2cc4cb84c4d6c3666c8c18cb41ddc4", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/35275076f52d53c3dcd9dee85d92a2059a663225/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35275076f52d53c3dcd9dee85d92a2059a663225/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=35275076f52d53c3dcd9dee85d92a2059a663225", "patch": "@@ -265,7 +265,7 @@ impl<T> Deref for Arc<T> {\n     }\n }\n \n-impl<T: Send + Sync + Clone> Arc<T> {\n+impl<T: Clone> Arc<T> {\n     /// Make a mutable reference from the given `Arc<T>`.\n     ///\n     /// This is also referred to as a copy-on-write operation because the inner data is cloned if\n@@ -300,7 +300,7 @@ impl<T: Send + Sync + Clone> Arc<T> {\n \n #[unsafe_destructor]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Sync + Send> Drop for Arc<T> {\n+impl<T> Drop for Arc<T> {\n     /// Drops the `Arc<T>`.\n     ///\n     /// This will decrement the strong reference count. If the strong reference count becomes zero\n@@ -367,7 +367,7 @@ impl<T: Sync + Send> Drop for Arc<T> {\n \n #[unstable(feature = \"alloc\",\n            reason = \"Weak pointers may not belong in this module.\")]\n-impl<T: Sync + Send> Weak<T> {\n+impl<T> Weak<T> {\n     /// Upgrades a weak reference to a strong reference.\n     ///\n     /// Upgrades the `Weak<T>` reference to an `Arc<T>`, if possible.\n@@ -406,7 +406,7 @@ impl<T: Sync + Send> Weak<T> {\n \n #[unstable(feature = \"alloc\",\n            reason = \"Weak pointers may not belong in this module.\")]\n-impl<T: Sync + Send> Clone for Weak<T> {\n+impl<T> Clone for Weak<T> {\n     /// Makes a clone of the `Weak<T>`.\n     ///\n     /// This increases the weak reference count.\n@@ -430,7 +430,7 @@ impl<T: Sync + Send> Clone for Weak<T> {\n \n #[unsafe_destructor]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Sync + Send> Drop for Weak<T> {\n+impl<T> Drop for Weak<T> {\n     /// Drops the `Weak<T>`.\n     ///\n     /// This will decrement the weak reference count."}]}