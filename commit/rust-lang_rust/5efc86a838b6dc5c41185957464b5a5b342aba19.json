{"sha": "5efc86a838b6dc5c41185957464b5a5b342aba19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZmM4NmE4MzhiNmRjNWM0MTE4NTk1NzQ2NGI1YTViMzQyYWJhMTk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-03T15:28:22Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-04T01:12:00Z"}, "message": "expose a method for converting `hir::Ty` to `Ty<'tcx>`\n\nAlso, remove a lot of `pub` things from `librustc_typeck`.", "tree": {"sha": "d15e68e72bd0eb0e299394efc88ec1b0a8a046bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15e68e72bd0eb0e299394efc88ec1b0a8a046bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5efc86a838b6dc5c41185957464b5a5b342aba19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5efc86a838b6dc5c41185957464b5a5b342aba19", "html_url": "https://github.com/rust-lang/rust/commit/5efc86a838b6dc5c41185957464b5a5b342aba19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5efc86a838b6dc5c41185957464b5a5b342aba19/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed1f26ddda15b2bcf613a257e813e8b02ee14dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1f26ddda15b2bcf613a257e813e8b02ee14dff", "html_url": "https://github.com/rust-lang/rust/commit/ed1f26ddda15b2bcf613a257e813e8b02ee14dff"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "b0b57aee5b2537c1652ef0e7dc7b72e26f7795cd", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efc86a838b6dc5c41185957464b5a5b342aba19/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efc86a838b6dc5c41185957464b5a5b342aba19/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=5efc86a838b6dc5c41185957464b5a5b342aba19", "patch": "@@ -965,10 +965,6 @@ impl<'gcx, 'tcx, 'exprs, E> CoerceMany<'gcx, 'tcx, 'exprs, E>\n         }\n     }\n \n-    pub fn is_empty(&self) -> bool {\n-        self.pushed == 0\n-    }\n-\n     /// Return the \"expected type\" with which this coercion was\n     /// constructed.  This represents the \"downward propagated\" type\n     /// that was given to us at the start of typing whatever construct"}, {"sha": "7d1a6894a822270d03d2e51db550352ab15733b1", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efc86a838b6dc5c41185957464b5a5b342aba19/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efc86a838b6dc5c41185957464b5a5b342aba19/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=5efc86a838b6dc5c41185957464b5a5b342aba19", "patch": "@@ -116,7 +116,7 @@ pub fn provide(providers: &mut Providers) {\n /// `ItemCtxt` is parameterized by a `DefId` that it uses to satisfy\n /// `get_type_parameter_bounds` requests, drawing the information from\n /// the AST (`hir::Generics`), recursively.\n-struct ItemCtxt<'a,'tcx:'a> {\n+pub struct ItemCtxt<'a,'tcx:'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     item_def_id: DefId,\n }\n@@ -180,7 +180,7 @@ impl<'a, 'tcx> Visitor<'tcx> for CollectItemTypesVisitor<'a, 'tcx> {\n // Utility types and common code for the above passes.\n \n impl<'a, 'tcx> ItemCtxt<'a, 'tcx> {\n-    fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>, item_def_id: DefId)\n+    pub fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>, item_def_id: DefId)\n            -> ItemCtxt<'a,'tcx> {\n         ItemCtxt {\n             tcx: tcx,\n@@ -190,7 +190,7 @@ impl<'a, 'tcx> ItemCtxt<'a, 'tcx> {\n }\n \n impl<'a,'tcx> ItemCtxt<'a,'tcx> {\n-    fn to_ty(&self, ast_ty: &hir::Ty) -> Ty<'tcx> {\n+    pub fn to_ty(&self, ast_ty: &hir::Ty) -> Ty<'tcx> {\n         AstConv::ast_ty_to_ty(self, ast_ty)\n     }\n }"}, {"sha": "8bfa38f765ebd501665fdea2f3830c822a5e9ef5", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5efc86a838b6dc5c41185957464b5a5b342aba19/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efc86a838b6dc5c41185957464b5a5b342aba19/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=5efc86a838b6dc5c41185957464b5a5b342aba19", "patch": "@@ -122,14 +122,14 @@ use std::iter;\n // registered before they are used.\n pub mod diagnostics;\n \n-pub mod check;\n-pub mod check_unused;\n+mod check;\n+mod check_unused;\n mod astconv;\n-pub mod collect;\n+mod collect;\n mod constrained_type_params;\n mod impl_wf_check;\n-pub mod coherence;\n-pub mod variance;\n+mod coherence;\n+mod variance;\n \n pub struct TypeAndSubsts<'tcx> {\n     pub substs: &'tcx Substs<'tcx>,\n@@ -337,4 +337,16 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>)\n     }\n }\n \n+/// A quasi-deprecated helper used in rustdoc and save-analysis to get\n+/// the type from a HIR node.\n+pub fn hir_ty_to_ty<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, hir_ty: &hir::Ty) -> Ty<'tcx> {\n+    // In case there are any projections etc, find the \"environment\"\n+    // def-id that will be used to determine the traits/predicates in\n+    // scope.  This is derived from the enclosing item-like thing.\n+    let env_node_id = tcx.hir.get_parent(hir_ty.id);\n+    let env_def_id = tcx.hir.local_def_id(env_node_id);\n+    let item_cx = self::collect::ItemCtxt::new(tcx, env_def_id);\n+    item_cx.to_ty(hir_ty)\n+}\n+\n __build_diagnostic_array! { librustc_typeck, DIAGNOSTICS }"}]}