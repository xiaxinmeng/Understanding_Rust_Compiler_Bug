{"sha": "41ac87dd38e47fef2de46045ea9c1cb2eba93a8a", "node_id": "C_kwDOAAsO6NoAKDQxYWM4N2RkMzhlNDdmZWYyZGU0NjA0NWVhOWMxY2IyZWJhOTNhOGE", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-25T14:42:01Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-25T14:42:01Z"}, "message": "Don't set RUSTC in the bootstrap build script\n\nWe no longer use this for anything since https://github.com/rust-lang/rust/pull/98483/files#diff-7eddc76f1be9eca2599a9ae58c65ffe247fbdff9b02ef687439894cab9afe749L781.\nRemove it, so that we spuriously rebuild bootstrap fewer times on Windows (where PATH changes often).", "tree": {"sha": "9091d80033c41c33aea24c8a2d64401b7419cf84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9091d80033c41c33aea24c8a2d64401b7419cf84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41ac87dd38e47fef2de46045ea9c1cb2eba93a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41ac87dd38e47fef2de46045ea9c1cb2eba93a8a", "html_url": "https://github.com/rust-lang/rust/commit/41ac87dd38e47fef2de46045ea9c1cb2eba93a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41ac87dd38e47fef2de46045ea9c1cb2eba93a8a/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4652f5eb25b76c24fc40b7267d87a07d5876901f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4652f5eb25b76c24fc40b7267d87a07d5876901f", "html_url": "https://github.com/rust-lang/rust/commit/4652f5eb25b76c24fc40b7267d87a07d5876901f"}], "stats": {"total": 36, "additions": 0, "deletions": 36}, "files": [{"sha": "cd1f418028c62c97e55bec1d05abb5797f02dc4f", "filename": "src/bootstrap/build.rs", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/41ac87dd38e47fef2de46045ea9c1cb2eba93a8a/src%2Fbootstrap%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41ac87dd38e47fef2de46045ea9c1cb2eba93a8a/src%2Fbootstrap%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild.rs?ref=41ac87dd38e47fef2de46045ea9c1cb2eba93a8a", "patch": "@@ -1,43 +1,7 @@\n-use env::consts::{EXE_EXTENSION, EXE_SUFFIX};\n use std::env;\n-use std::ffi::OsString;\n-use std::path::PathBuf;\n-\n-/// Given an executable called `name`, return the filename for the\n-/// executable for a particular target.\n-pub fn exe(name: &PathBuf) -> PathBuf {\n-    if EXE_EXTENSION != \"\" && name.extension() != Some(EXE_EXTENSION.as_ref()) {\n-        let mut name: OsString = name.clone().into();\n-        name.push(EXE_SUFFIX);\n-        name.into()\n-    } else {\n-        name.clone()\n-    }\n-}\n \n fn main() {\n     let host = env::var(\"HOST\").unwrap();\n     println!(\"cargo:rerun-if-changed=build.rs\");\n-    println!(\"cargo:rerun-if-env-changed=RUSTC\");\n     println!(\"cargo:rustc-env=BUILD_TRIPLE={}\", host);\n-\n-    // This may not be a canonicalized path.\n-    let mut rustc = PathBuf::from(env::var_os(\"RUSTC\").unwrap());\n-\n-    if rustc.is_relative() {\n-        println!(\"cargo:rerun-if-env-changed=PATH\");\n-        for dir in env::split_paths(&env::var_os(\"PATH\").unwrap_or_default()) {\n-            let absolute = dir.join(&exe(&rustc));\n-            if absolute.exists() {\n-                rustc = absolute;\n-                break;\n-            }\n-        }\n-    }\n-    assert!(rustc.is_absolute());\n-\n-    // FIXME: if the path is not utf-8, this is going to break. Unfortunately\n-    // Cargo doesn't have a way for us to specify non-utf-8 paths easily, so\n-    // we'll need to invent some encoding scheme if this becomes a problem.\n-    println!(\"cargo:rustc-env=RUSTC={}\", rustc.to_str().unwrap());\n }"}]}