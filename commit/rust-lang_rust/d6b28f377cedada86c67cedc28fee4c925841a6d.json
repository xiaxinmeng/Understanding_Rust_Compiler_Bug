{"sha": "d6b28f377cedada86c67cedc28fee4c925841a6d", "node_id": "C_kwDOAAsO6NoAKGQ2YjI4ZjM3N2NlZGFkYTg2YzY3Y2VkYzI4ZmVlNGM5MjU4NDFhNmQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T15:49:34Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T16:00:08Z"}, "message": "add test +  don't warn on `Res::SelfTy`", "tree": {"sha": "2659d2d34c14a7d5e2851f2566b8dc84b0e99ea9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2659d2d34c14a7d5e2851f2566b8dc84b0e99ea9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6b28f377cedada86c67cedc28fee4c925841a6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b28f377cedada86c67cedc28fee4c925841a6d", "html_url": "https://github.com/rust-lang/rust/commit/d6b28f377cedada86c67cedc28fee4c925841a6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6b28f377cedada86c67cedc28fee4c925841a6d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "html_url": "https://github.com/rust-lang/rust/commit/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "207d2870c5c79e7ace349152543cb7e562c7838d", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6b28f377cedada86c67cedc28fee4c925841a6d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b28f377cedada86c67cedc28fee4c925841a6d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=d6b28f377cedada86c67cedc28fee4c925841a6d", "patch": "@@ -863,6 +863,9 @@ impl<'a, 'tcx> FindInferSourceVisitor<'a, 'tcx> {\n                                         // See the `need_type_info/type-alias.rs` test for\n                                         // some examples.\n                                     }\n+                                    // There cannot be inference variables in the self type,\n+                                    // so there's nothing for us to do here.\n+                                    Res::SelfTy { .. } => {}\n                                     _ => warn!(\n                                         \"unexpected path: def={:?} substs={:?} path={:?}\",\n                                         def, substs, path,"}, {"sha": "72e0e74f3234233e6e498dc4fde58ff6eec662e3", "filename": "src/test/ui/inference/need_type_info/concrete-impl.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.rs?ref=d6b28f377cedada86c67cedc28fee4c925841a6d", "patch": "@@ -0,0 +1,16 @@\n+trait Ambiguous<A> {\n+    fn method() {}\n+}\n+\n+struct One;\n+struct Two;\n+struct Struct;\n+\n+impl Ambiguous<One> for Struct {}\n+impl Ambiguous<Two> for Struct {}\n+\n+fn main() {\n+    <Struct as Ambiguous<_>>::method();\n+    //~^ ERROR type annotations needed\n+    //~| ERROR type annotations needed\n+}"}, {"sha": "b79d34affa249ecf2ccf3084b2cfc7d06d22f33b", "filename": "src/test/ui/inference/need_type_info/concrete-impl.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.stderr?ref=d6b28f377cedada86c67cedc28fee4c925841a6d", "patch": "@@ -0,0 +1,33 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/concrete-impl.rs:13:5\n+   |\n+LL |     <Struct as Ambiguous<_>>::method();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `Self` declared on the trait `Ambiguous`\n+   |\n+help: consider specifying the generic argument\n+   |\n+LL |     <Struct as Ambiguous::<_>>::method();\n+   |                         ~~~~~\n+\n+error[E0283]: type annotations needed\n+  --> $DIR/concrete-impl.rs:13:5\n+   |\n+LL |     <Struct as Ambiguous<_>>::method();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `Self` declared on the trait `Ambiguous`\n+   |\n+note: multiple `impl`s satisfying `Struct: Ambiguous<_>` found\n+  --> $DIR/concrete-impl.rs:9:1\n+   |\n+LL | impl Ambiguous<One> for Struct {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | impl Ambiguous<Two> for Struct {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider specifying the generic argument\n+   |\n+LL |     <Struct as Ambiguous::<_>>::method();\n+   |                         ~~~~~\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0282, E0283.\n+For more information about an error, try `rustc --explain E0282`."}, {"sha": "768a8cc377823440dd893a66e42e06b5eaa08537", "filename": "src/test/ui/inference/need_type_info/self-ty-in-path.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fself-ty-in-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fself-ty-in-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fself-ty-in-path.rs?ref=d6b28f377cedada86c67cedc28fee4c925841a6d", "patch": "@@ -0,0 +1,13 @@\n+// Test that we don't ICE when encountering a `Self` in a path.\n+struct TestErr<T>(T);\n+\n+impl<T> TestErr<T> {\n+    fn func_a<U>() {}\n+\n+    fn func_b() {\n+        Self::func_a();\n+        //~^ ERROR type annotations needed\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "04b521dbdb3609c6c2c3efad581646c99e363b3c", "filename": "src/test/ui/inference/need_type_info/self-ty-in-path.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fself-ty-in-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6b28f377cedada86c67cedc28fee4c925841a6d/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fself-ty-in-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fself-ty-in-path.stderr?ref=d6b28f377cedada86c67cedc28fee4c925841a6d", "patch": "@@ -0,0 +1,14 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/self-ty-in-path.rs:8:9\n+   |\n+LL |         Self::func_a();\n+   |         ^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the associated function `func_a`\n+   |\n+help: consider specifying the generic argument\n+   |\n+LL |         Self::func_a::<U>();\n+   |                     +++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}