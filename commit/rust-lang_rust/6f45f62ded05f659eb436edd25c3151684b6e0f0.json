{"sha": "6f45f62ded05f659eb436edd25c3151684b6e0f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNDVmNjJkZWQwNWY2NTllYjQzNmVkZDI1YzMxNTE2ODRiNmUwZjA=", "commit": {"author": {"name": "asquared31415", "email": "34665709+asquared31415@users.noreply.github.com", "date": "2021-07-21T21:47:37Z"}, "committer": {"name": "asquared31415", "email": "34665709+asquared31415@users.noreply.github.com", "date": "2021-08-04T17:38:17Z"}, "message": "Proper characters in labels, ignore comments", "tree": {"sha": "c89d92b13420a3ee7712476115e59a1aa470f88a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c89d92b13420a3ee7712476115e59a1aa470f88a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f45f62ded05f659eb436edd25c3151684b6e0f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f45f62ded05f659eb436edd25c3151684b6e0f0", "html_url": "https://github.com/rust-lang/rust/commit/6f45f62ded05f659eb436edd25c3151684b6e0f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f45f62ded05f659eb436edd25c3151684b6e0f0/comments", "author": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "committer": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8f8631b0d41fefb855999ddf0fcaf6757bf11b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8f8631b0d41fefb855999ddf0fcaf6757bf11b", "html_url": "https://github.com/rust-lang/rust/commit/1f8f8631b0d41fefb855999ddf0fcaf6757bf11b"}], "stats": {"total": 71, "additions": 46, "deletions": 25}, "files": [{"sha": "79f3554fdc8d552a39fd6a2593739f35c7d0dec7", "filename": "compiler/rustc_builtin_macros/src/asm.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6f45f62ded05f659eb436edd25c3151684b6e0f0/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f45f62ded05f659eb436edd25c3151684b6e0f0/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs?ref=6f45f62ded05f659eb436edd25c3151684b6e0f0", "patch": "@@ -495,16 +495,21 @@ fn expand_preparsed_asm(\n             // A semicolon might not actually be specified as a separator for all targets, but it seems like LLVM accepts it always\n             let statements = template_str.split(|c| matches!(c, '\\n' | ';'));\n             for statement in statements {\n+                // If there's a comment, trim it from the statement\n+                let statement = statement.find(\"//\").map_or(statement, |idx| &statement[..idx]);\n                 let mut start_idx = 0;\n                 for (idx, _) in statement.match_indices(':') {\n                     let possible_label = statement[start_idx..idx].trim();\n                     let mut chars = possible_label.chars();\n                     if let Some(c) = chars.next() {\n-                        // A label starts with an alphabetic character and continues with alphanumeric characters\n-                        if c.is_alphabetic() {\n-                            if chars.all(char::is_alphanumeric) {\n-                                found_labels.push(possible_label);\n-                            }\n+                        // A label starts with an alphabetic character or . or _ and continues with alphanumeric characters, _, or $\n+                        if (c.is_alphabetic() || matches!(c, '.' | '_'))\n+                            && chars.all(|c| c.is_alphanumeric() || matches!(c, '_' | '$'))\n+                        {\n+                            found_labels.push(possible_label);\n+                        } else {\n+                            // If we encounter a non-label, there cannot be any further labels, so stop checking\n+                            break;\n                         }\n                     }\n "}, {"sha": "feabafdefb77a6f85da3be349b2a8093f9b46c8e", "filename": "src/test/ui/asm/named_asm_labels.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6f45f62ded05f659eb436edd25c3151684b6e0f0/src%2Ftest%2Fui%2Fasm%2Fnamed_asm_labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f45f62ded05f659eb436edd25c3151684b6e0f0/src%2Ftest%2Fui%2Fasm%2Fnamed_asm_labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnamed_asm_labels.rs?ref=6f45f62ded05f659eb436edd25c3151684b6e0f0", "patch": "@@ -61,8 +61,9 @@ fn main() {\n         // should not trigger lint, but may be invalid asm\n         asm!(\"ab cd: nop\");\n \n-        // Only `blah:` should trigger\n-        asm!(\"1bar: blah: nop\"); //~ ERROR do not use named labels\n+        // `blah:` does not trigger because labels need to be at the start\n+        // of the statement, and there was already a non-label\n+        asm!(\"1bar: blah: nop\");\n \n         // Only `blah1:` should trigger\n         asm!(\"blah1: 2bar: nop\"); //~ ERROR do not use named labels\n@@ -88,6 +89,21 @@ fn main() {\n         // Intentionally breaking span finding\n         // equivalent to \"ABC: nop\"\n         asm!(\"\\x41\\x42\\x43\\x3A\\x20\\x6E\\x6F\\x70\"); //~ ERROR do not use named labels\n+\n+        // Non-label colons - should pass\n+        // (most of these are stolen from other places)\n+        asm!(\"{:l}\", in(reg) 0i64);\n+        asm!(\"{:e}\", in(reg) 0f32);\n+        asm!(\"mov rax, qword ptr fs:[0]\");\n+\n+        // Comments\n+        asm!(\n+            r\"\n+            ab: nop // ab: does foo\n+            // cd: nop\n+            \"\n+        );\n+        //~^^^^ ERROR do not use named labels\n     }\n }\n "}, {"sha": "b3f9b93dc9d9c7fd787705ffc9966cf944a5f6df", "filename": "src/test/ui/asm/named_asm_labels.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6f45f62ded05f659eb436edd25c3151684b6e0f0/src%2Ftest%2Fui%2Fasm%2Fnamed_asm_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f45f62ded05f659eb436edd25c3151684b6e0f0/src%2Ftest%2Fui%2Fasm%2Fnamed_asm_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnamed_asm_labels.stderr?ref=6f45f62ded05f659eb436edd25c3151684b6e0f0", "patch": "@@ -207,16 +207,7 @@ LL |             nop ; blah4: nop\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:65:21\n-   |\n-LL |         asm!(\"1bar: blah: nop\");\n-   |                     ^^^^\n-   |\n-   = help: Only GAS local labels of the form `N:` where N is a number may be used in inline asm\n-   = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n-\n-error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:68:15\n+  --> $DIR/named_asm_labels.rs:69:15\n    |\n LL |         asm!(\"blah1: 2bar: nop\");\n    |               ^^^^^\n@@ -225,7 +216,7 @@ LL |         asm!(\"blah1: 2bar: nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:71:15\n+  --> $DIR/named_asm_labels.rs:72:15\n    |\n LL |         asm!(\"def: def: nop\");\n    |               ^^^\n@@ -234,7 +225,7 @@ LL |         asm!(\"def: def: nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:72:15\n+  --> $DIR/named_asm_labels.rs:73:15\n    |\n LL |         asm!(\"def: nop\\ndef: nop\");\n    |               ^^^\n@@ -243,7 +234,7 @@ LL |         asm!(\"def: nop\\ndef: nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:73:15\n+  --> $DIR/named_asm_labels.rs:74:15\n    |\n LL |         asm!(\"def: nop; def: nop\");\n    |               ^^^\n@@ -252,7 +243,7 @@ LL |         asm!(\"def: nop; def: nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:81:15\n+  --> $DIR/named_asm_labels.rs:82:15\n    |\n LL |         asm!(\"fooo\\u{003A} nop\");\n    |               ^^^^^^^^^^^^^^^^\n@@ -261,7 +252,7 @@ LL |         asm!(\"fooo\\u{003A} nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:82:15\n+  --> $DIR/named_asm_labels.rs:83:15\n    |\n LL |         asm!(\"foooo\\x3A nop\");\n    |               ^^^^^^^^^^^^^\n@@ -270,7 +261,7 @@ LL |         asm!(\"foooo\\x3A nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:85:15\n+  --> $DIR/named_asm_labels.rs:86:15\n    |\n LL |         asm!(\"fooooo:\\u{000A} nop\");\n    |               ^^^^^^\n@@ -279,7 +270,7 @@ LL |         asm!(\"fooooo:\\u{000A} nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:86:15\n+  --> $DIR/named_asm_labels.rs:87:15\n    |\n LL |         asm!(\"foooooo:\\x0A nop\");\n    |               ^^^^^^^\n@@ -288,13 +279,22 @@ LL |         asm!(\"foooooo:\\x0A nop\");\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n error: do not use named labels in inline assembly\n-  --> $DIR/named_asm_labels.rs:90:14\n+  --> $DIR/named_asm_labels.rs:91:14\n    |\n LL |         asm!(\"\\x41\\x42\\x43\\x3A\\x20\\x6E\\x6F\\x70\");\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Only GAS local labels of the form `N:` where N is a number may be used in inline asm\n    = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n \n+error: do not use named labels in inline assembly\n+  --> $DIR/named_asm_labels.rs:102:13\n+   |\n+LL |             ab: nop // ab: does foo\n+   |             ^^\n+   |\n+   = help: Only GAS local labels of the form `N:` where N is a number may be used in inline asm\n+   = note: See the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\n+\n error: aborting due to 33 previous errors\n "}]}