{"sha": "9e54ce865c67af65370e1ec3822742a22fd20dfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNTRjZTg2NWM2N2FmNjUzNzBlMWVjMzgyMjc0MmEyMmZkMjBkZmU=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-06-07T21:31:17Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-06-07T21:31:17Z"}, "message": "Reuse `is_expr_identity_function` for `filter_map_identity`", "tree": {"sha": "52eb19ee0d575c5eb0b622c4d0f299d46a6f57c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52eb19ee0d575c5eb0b622c4d0f299d46a6f57c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e54ce865c67af65370e1ec3822742a22fd20dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e54ce865c67af65370e1ec3822742a22fd20dfe", "html_url": "https://github.com/rust-lang/rust/commit/9e54ce865c67af65370e1ec3822742a22fd20dfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e54ce865c67af65370e1ec3822742a22fd20dfe/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb3b58cfccdfbc4f95a2f03dc800aa87fd3fdd2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb3b58cfccdfbc4f95a2f03dc800aa87fd3fdd2c", "html_url": "https://github.com/rust-lang/rust/commit/bb3b58cfccdfbc4f95a2f03dc800aa87fd3fdd2c"}], "stats": {"total": 64, "additions": 29, "deletions": 35}, "files": [{"sha": "d1b5e945dfdaa83a85b5ce13d776b0d438b88579", "filename": "clippy_lints/src/methods/filter_map_identity.rs", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9e54ce865c67af65370e1ec3822742a22fd20dfe/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e54ce865c67af65370e1ec3822742a22fd20dfe/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs?ref=9e54ce865c67af65370e1ec3822742a22fd20dfe", "patch": "@@ -1,6 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::{is_expr_path_def_path, is_trait_method, path_to_local_id, paths};\n-use if_chain::if_chain;\n+use clippy_utils::{is_expr_identity_function, is_trait_method};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n@@ -9,32 +8,15 @@ use rustc_span::{source_map::Span, sym};\n use super::FILTER_MAP_IDENTITY;\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, filter_map_arg: &hir::Expr<'_>, filter_map_span: Span) {\n-    if is_trait_method(cx, expr, sym::Iterator) {\n-        let apply_lint = |message: &str| {\n-            span_lint_and_sugg(\n-                cx,\n-                FILTER_MAP_IDENTITY,\n-                filter_map_span.with_hi(expr.span.hi()),\n-                message,\n-                \"try\",\n-                \"flatten()\".to_string(),\n-                Applicability::MachineApplicable,\n-            );\n-        };\n-\n-        if_chain! {\n-            if let hir::ExprKind::Closure(_, _, body_id, _, _) = filter_map_arg.kind;\n-            let body = cx.tcx.hir().body(body_id);\n-\n-            if let hir::PatKind::Binding(_, binding_id, ..) = body.params[0].pat.kind;\n-            if path_to_local_id(&body.value, binding_id);\n-            then {\n-                apply_lint(\"called `filter_map(|x| x)` on an `Iterator`\");\n-            }\n-        }\n-\n-        if is_expr_path_def_path(cx, filter_map_arg, &paths::CONVERT_IDENTITY) {\n-            apply_lint(\"called `filter_map(std::convert::identity)` on an `Iterator`\");\n-        }\n+    if is_trait_method(cx, expr, sym::Iterator) && is_expr_identity_function(cx, filter_map_arg) {\n+        span_lint_and_sugg(\n+            cx,\n+            FILTER_MAP_IDENTITY,\n+            filter_map_span.with_hi(expr.span.hi()),\n+            \"use of `filter_map` with an identity function\",\n+            \"try\",\n+            \"flatten()\".to_string(),\n+            Applicability::MachineApplicable,\n+        );\n     }\n }"}, {"sha": "a5860aa49b3bb7f909aeee04e130285188fd0ae8", "filename": "tests/ui/filter_map_identity.fixed", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e54ce865c67af65370e1ec3822742a22fd20dfe/tests%2Fui%2Ffilter_map_identity.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9e54ce865c67af65370e1ec3822742a22fd20dfe/tests%2Fui%2Ffilter_map_identity.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_identity.fixed?ref=9e54ce865c67af65370e1ec3822742a22fd20dfe", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(unused_imports)]\n+#![allow(unused_imports, clippy::needless_return)]\n #![warn(clippy::filter_map_identity)]\n \n fn main() {\n@@ -13,4 +13,7 @@ fn main() {\n     use std::convert::identity;\n     let iterator = vec![Some(1), None, Some(2)].into_iter();\n     let _ = iterator.flatten();\n+\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.flatten();\n }"}, {"sha": "7e998b9cdf7010f4cd6e1fa84af582a3450dd6eb", "filename": "tests/ui/filter_map_identity.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e54ce865c67af65370e1ec3822742a22fd20dfe/tests%2Fui%2Ffilter_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e54ce865c67af65370e1ec3822742a22fd20dfe/tests%2Fui%2Ffilter_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_identity.rs?ref=9e54ce865c67af65370e1ec3822742a22fd20dfe", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(unused_imports)]\n+#![allow(unused_imports, clippy::needless_return)]\n #![warn(clippy::filter_map_identity)]\n \n fn main() {\n@@ -13,4 +13,7 @@ fn main() {\n     use std::convert::identity;\n     let iterator = vec![Some(1), None, Some(2)].into_iter();\n     let _ = iterator.filter_map(identity);\n+\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.filter_map(|x| return x);\n }"}, {"sha": "43c9fdca4fbe0251b54e6e6c70f4ab2fe3873eb8", "filename": "tests/ui/filter_map_identity.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9e54ce865c67af65370e1ec3822742a22fd20dfe/tests%2Fui%2Ffilter_map_identity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9e54ce865c67af65370e1ec3822742a22fd20dfe/tests%2Fui%2Ffilter_map_identity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_identity.stderr?ref=9e54ce865c67af65370e1ec3822742a22fd20dfe", "patch": "@@ -1,22 +1,28 @@\n-error: called `filter_map(|x| x)` on an `Iterator`\n+error: use of `filter_map` with an identity function\n   --> $DIR/filter_map_identity.rs:8:22\n    |\n LL |     let _ = iterator.filter_map(|x| x);\n    |                      ^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n    |\n    = note: `-D clippy::filter-map-identity` implied by `-D warnings`\n \n-error: called `filter_map(std::convert::identity)` on an `Iterator`\n+error: use of `filter_map` with an identity function\n   --> $DIR/filter_map_identity.rs:11:22\n    |\n LL |     let _ = iterator.filter_map(std::convert::identity);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n \n-error: called `filter_map(std::convert::identity)` on an `Iterator`\n+error: use of `filter_map` with an identity function\n   --> $DIR/filter_map_identity.rs:15:22\n    |\n LL |     let _ = iterator.filter_map(identity);\n    |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n \n-error: aborting due to 3 previous errors\n+error: use of `filter_map` with an identity function\n+  --> $DIR/filter_map_identity.rs:18:22\n+   |\n+LL |     let _ = iterator.filter_map(|x| return x);\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n+\n+error: aborting due to 4 previous errors\n "}]}