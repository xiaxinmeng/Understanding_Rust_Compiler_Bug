{"sha": "c3ee03011962d53f44d9d0faf26260f914191cfc", "node_id": "C_kwDOAAsO6NoAKGMzZWUwMzAxMTk2MmQ1M2Y0NGQ5ZDBmYWYyNjI2MGY5MTQxOTFjZmM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-26T10:22:37Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-26T10:22:37Z"}, "message": "Fix passing and returning vector types", "tree": {"sha": "02d10ad56eebda5a3e2914b8954cd2a7dca3b08d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02d10ad56eebda5a3e2914b8954cd2a7dca3b08d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3ee03011962d53f44d9d0faf26260f914191cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ee03011962d53f44d9d0faf26260f914191cfc", "html_url": "https://github.com/rust-lang/rust/commit/c3ee03011962d53f44d9d0faf26260f914191cfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3ee03011962d53f44d9d0faf26260f914191cfc/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eed1f754151965c4f9f7eef877801043101b83e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/eed1f754151965c4f9f7eef877801043101b83e1", "html_url": "https://github.com/rust-lang/rust/commit/eed1f754151965c4f9f7eef877801043101b83e1"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "ab4045d11a6636d007bbfaf7469bd7bedeaf96df", "filename": "example/std_example.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c3ee03011962d53f44d9d0faf26260f914191cfc/example%2Fstd_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ee03011962d53f44d9d0faf26260f914191cfc/example%2Fstd_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fstd_example.rs?ref=c3ee03011962d53f44d9d0faf26260f914191cfc", "patch": "@@ -1,4 +1,4 @@\n-#![feature(core_intrinsics, generators, generator_trait, is_sorted)]\n+#![feature(core_intrinsics, generators, generator_trait, is_sorted, repr_simd)]\n \n #[cfg(target_arch = \"x86_64\")]\n use std::arch::x86_64::*;\n@@ -153,12 +153,20 @@ fn main() {\n \n         enum Never {}\n     }\n+\n+    foo(I64X2(0, 0));\n }\n \n fn panic(_: u128) {\n     panic!();\n }\n \n+#[repr(simd)]\n+struct I64X2(i64, i64);\n+\n+#[allow(improper_ctypes_definitions)]\n+extern \"C\" fn foo(_a: I64X2) {}\n+\n #[cfg(target_arch = \"x86_64\")]\n #[target_feature(enable = \"sse2\")]\n unsafe fn test_simd() {"}, {"sha": "cd24106257a7440b0291a99ac2fdd97c1ff7c271", "filename": "src/value_and_place.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3ee03011962d53f44d9d0faf26260f914191cfc/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ee03011962d53f44d9d0faf26260f914191cfc/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=c3ee03011962d53f44d9d0faf26260f914191cfc", "patch": "@@ -165,6 +165,9 @@ impl<'tcx> CValue<'tcx> {\n             CValueInner::ByRef(ptr, None) => {\n                 let clif_ty = match layout.abi {\n                     Abi::Scalar(scalar) => scalar_to_clif_type(fx.tcx, scalar),\n+                    Abi::Vector { element, count } => scalar_to_clif_type(fx.tcx, element)\n+                        .by(u32::try_from(count).unwrap())\n+                        .unwrap(),\n                     _ => unreachable!(\"{:?}\", layout.ty),\n                 };\n                 let mut flags = MemFlags::new();"}]}