{"sha": "1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ODFiMTU0ZWUzZTg4ZTU3YzU3MTg5NWFkMWViN2Q4ZTFlYmUwZDg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T05:47:22Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T10:13:55Z"}, "message": "Rollup merge of #53967 - froydnj:cmake-python-executable, r=alexcrichton\n\npropagate build.python into cmake\n\nIf a suitable value of Python is not on `PATH`, one can still invoke x.py\nmanually, which propagates `BOOTSTRAP_PYTHON` into the bootstrap\nenvironment.  But building LLVM will abort with error messages about not\nbeing able to find Python, and instructions to set `PYTHON_EXECUTABLE`,\nbecause nothing is done with `BOOTSTRAP_PYTHON` when invoking cmake.\nSetting `build.python` in config.toml had no effect in this scenario,\neither\n\nTo fix this, let's provide `PYTHON_EXECUTABLE` when invoking cmake; for\nthe \"normal\" case of Python in `PATH`, this doesn't alter any behavior.\nFor more unusual cases, however, this ensures cmake finds Python\nproperly.  (This change also ensures there are no differences between\nwhat bootstrap is using, and what cmake uses, which may be useful for\nconsistency's sake.)", "tree": {"sha": "dee82baceeb360dece8c71fd1d52934fbcd7f33c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dee82baceeb360dece8c71fd1d52934fbcd7f33c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluST2MACgkQ/vbIBR0O\nATy8+BAAiyd1lxDAemoI1OrXsuNKtkIuusm23zSnjXep1mQ6VShHwH4tDYshCdoX\nOhwV3MWZEKwZWdYPP+FfRCvQUukJaWJQM5YtgV9FnupHMr33Gs/i4/QSDxFqnlet\nbbyk3Hzwzie8+uYomVbyB/55duddktO5lwhXy9u2MscRfI0LFBoZOxFubrxClpnY\ns6YPZsJK/yqRtyzZask9/m78bURsSS031dZzo2hld7WM10Fz9bN9Wa43YHwIGgha\nn8kTOJ7kWyG4uk+tFSRn/MI3P/zJx6JEy+GEsUGWkBDCnKxlgQ16GorpWC8gQ95E\nMkfQJ2ZGYnayd6Fi2k9PGdMeM1XuasusBu5bakOrl+tyKw7jQ3JGa4y7/NyLyKtg\nKVVAobZOYvnFUEWpLB31o/gZ7o2xZrNxQMcg+wmSnQVdVLGD/ZtTn0+y5/gPIAaU\nP4a8inLwFoqnePI729o0HUveDY7qc72ne1FgE1gPADJ8ZVyqpGdNPVQmDrw65OEl\nYNvDGGGPcjH12pOwGpuQ//pP+j1ndCrBCrTPcCxqnokkdx70fia9K9/c6h41GZSE\nCWVFbgODzs7+TJr8co7kDPm5vQdAn+5fW9SVKeMPZMTWhX1ut02OfjAFl1/bAlvj\n7vc7rDryb/6zfGQF4n2RbZJsZ3Zun49zM7T6sw51YxOSycCx2kc=\n=AqZ1\n-----END PGP SIGNATURE-----", "payload": "tree dee82baceeb360dece8c71fd1d52934fbcd7f33c\nparent 776b90cee204ddfdb868d16ef37d571fec9002c8\nparent 62cd02d7fc9b0f830536801cadf4484488bd802d\nauthor kennytm <kennytm@gmail.com> 1536299242 +0800\ncommitter kennytm <kennytm@gmail.com> 1536315235 +0800\n\nRollup merge of #53967 - froydnj:cmake-python-executable, r=alexcrichton\n\npropagate build.python into cmake\n\nIf a suitable value of Python is not on `PATH`, one can still invoke x.py\nmanually, which propagates `BOOTSTRAP_PYTHON` into the bootstrap\nenvironment.  But building LLVM will abort with error messages about not\nbeing able to find Python, and instructions to set `PYTHON_EXECUTABLE`,\nbecause nothing is done with `BOOTSTRAP_PYTHON` when invoking cmake.\nSetting `build.python` in config.toml had no effect in this scenario,\neither\n\nTo fix this, let's provide `PYTHON_EXECUTABLE` when invoking cmake; for\nthe \"normal\" case of Python in `PATH`, this doesn't alter any behavior.\nFor more unusual cases, however, this ensures cmake finds Python\nproperly.  (This change also ensures there are no differences between\nwhat bootstrap is using, and what cmake uses, which may be useful for\nconsistency's sake.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8", "html_url": "https://github.com/rust-lang/rust/commit/1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776b90cee204ddfdb868d16ef37d571fec9002c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/776b90cee204ddfdb868d16ef37d571fec9002c8", "html_url": "https://github.com/rust-lang/rust/commit/776b90cee204ddfdb868d16ef37d571fec9002c8"}, {"sha": "62cd02d7fc9b0f830536801cadf4484488bd802d", "url": "https://api.github.com/repos/rust-lang/rust/commits/62cd02d7fc9b0f830536801cadf4484488bd802d", "html_url": "https://github.com/rust-lang/rust/commit/62cd02d7fc9b0f830536801cadf4484488bd802d"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "caf38d766f54effb2e96b65b7c9d92b24d80b265", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=1681b154ee3e88e57c571895ad1eb7d8e1ebe0d8", "patch": "@@ -239,6 +239,10 @@ impl Step for Llvm {\n             cfg.define(\"LLVM_NATIVE_BUILD\", builder.llvm_out(builder.config.build).join(\"build\"));\n         }\n \n+        if let Some(ref python) = builder.config.python {\n+            cfg.define(\"PYTHON_EXECUTABLE\", python);\n+        }\n+\n         configure_cmake(builder, target, &mut cfg, false);\n \n         // FIXME: we don't actually need to build all LLVM tools and all LLVM"}]}