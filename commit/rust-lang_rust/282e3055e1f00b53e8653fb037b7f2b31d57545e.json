{"sha": "282e3055e1f00b53e8653fb037b7f2b31d57545e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MmUzMDU1ZTFmMDBiNTNlODY1M2ZiMDM3YjdmMmIzMWQ1NzU0NWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T09:40:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T09:40:21Z"}, "message": "Only run ranlib when necessary", "tree": {"sha": "8d6534e9c759006c3552c22e382d2d6e5d5888f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d6534e9c759006c3552c22e382d2d6e5d5888f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/282e3055e1f00b53e8653fb037b7f2b31d57545e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/282e3055e1f00b53e8653fb037b7f2b31d57545e", "html_url": "https://github.com/rust-lang/rust/commit/282e3055e1f00b53e8653fb037b7f2b31d57545e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/282e3055e1f00b53e8653fb037b7f2b31d57545e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daad966be73fabe13d6704476e1581ac555a281e", "url": "https://api.github.com/repos/rust-lang/rust/commits/daad966be73fabe13d6704476e1581ac555a281e", "html_url": "https://github.com/rust-lang/rust/commit/daad966be73fabe13d6704476e1581ac555a281e"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "3cd650a755dfb541e3973a28ce4da385c19de2f7", "filename": "src/archive.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/282e3055e1f00b53e8653fb037b7f2b31d57545e/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/282e3055e1f00b53e8653fb037b7f2b31d57545e/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=282e3055e1f00b53e8653fb037b7f2b31d57545e", "patch": "@@ -220,14 +220,16 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         // Finalize archive\n         std::mem::drop(builder);\n \n-        // Run ranlib to be able to link the archive\n-        let status = std::process::Command::new(\"ranlib\")\n-            .arg(self.config.dst)\n-            .status()\n-            .expect(\"Couldn't run ranlib\");\n-\n-        if !status.success() {\n-            self.config.sess.fatal(&format!(\"Ranlib exited with code {:?}\", status.code()));\n+        if self.update_symbols {\n+            // Run ranlib to be able to link the archive\n+            let status = std::process::Command::new(\"ranlib\")\n+                .arg(self.config.dst)\n+                .status()\n+                .expect(\"Couldn't run ranlib\");\n+\n+            if !status.success() {\n+                self.config.sess.fatal(&format!(\"Ranlib exited with code {:?}\", status.code()));\n+            }\n         }\n     }\n }"}]}