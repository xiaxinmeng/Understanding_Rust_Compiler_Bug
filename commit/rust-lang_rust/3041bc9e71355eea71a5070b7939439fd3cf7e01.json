{"sha": "3041bc9e71355eea71a5070b7939439fd3cf7e01", "node_id": "C_kwDOAAsO6NoAKDMwNDFiYzllNzEzNTVlZWE3MWE1MDcwYjc5Mzk0MzlmZDNjZjdlMDE", "commit": {"author": {"name": "Nathan Whitaker", "email": "nathan.whitaker01@gmail.com", "date": "2022-10-14T03:13:52Z"}, "committer": {"name": "Nathan Whitaker", "email": "nathan.whitaker01@gmail.com", "date": "2022-10-16T22:13:01Z"}, "message": "Don't consider `Let` exprs terminating scopes", "tree": {"sha": "39b3ddb341189b1ebbfeafe05b3db3277b3fec43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39b3ddb341189b1ebbfeafe05b3db3277b3fec43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3041bc9e71355eea71a5070b7939439fd3cf7e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3041bc9e71355eea71a5070b7939439fd3cf7e01", "html_url": "https://github.com/rust-lang/rust/commit/3041bc9e71355eea71a5070b7939439fd3cf7e01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3041bc9e71355eea71a5070b7939439fd3cf7e01/comments", "author": {"login": "nathanwhit", "id": 17734409, "node_id": "MDQ6VXNlcjE3NzM0NDA5", "avatar_url": "https://avatars.githubusercontent.com/u/17734409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwhit", "html_url": "https://github.com/nathanwhit", "followers_url": "https://api.github.com/users/nathanwhit/followers", "following_url": "https://api.github.com/users/nathanwhit/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwhit/subscriptions", "organizations_url": "https://api.github.com/users/nathanwhit/orgs", "repos_url": "https://api.github.com/users/nathanwhit/repos", "events_url": "https://api.github.com/users/nathanwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwhit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanwhit", "id": 17734409, "node_id": "MDQ6VXNlcjE3NzM0NDA5", "avatar_url": "https://avatars.githubusercontent.com/u/17734409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwhit", "html_url": "https://github.com/nathanwhit", "followers_url": "https://api.github.com/users/nathanwhit/followers", "following_url": "https://api.github.com/users/nathanwhit/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwhit/subscriptions", "organizations_url": "https://api.github.com/users/nathanwhit/orgs", "repos_url": "https://api.github.com/users/nathanwhit/repos", "events_url": "https://api.github.com/users/nathanwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwhit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf286a82e236e065c67909657e3a35d1511d1864", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf286a82e236e065c67909657e3a35d1511d1864", "html_url": "https://github.com/rust-lang/rust/commit/bf286a82e236e065c67909657e3a35d1511d1864"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "ff32329e431b699eccdd4b7c393a0b9de36de9e5", "filename": "compiler/rustc_hir_analysis/src/check/region.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3041bc9e71355eea71a5070b7939439fd3cf7e01/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3041bc9e71355eea71a5070b7939439fd3cf7e01/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fregion.rs?ref=3041bc9e71355eea71a5070b7939439fd3cf7e01", "patch": "@@ -252,9 +252,13 @@ fn resolve_expr<'tcx>(visitor: &mut RegionResolutionVisitor<'tcx>, expr: &'tcx h\n             ) => {\n                 // For shortcircuiting operators, mark the RHS as a terminating\n                 // scope since it only executes conditionally.\n-                terminating(r.hir_id.local_id);\n-            }\n \n+                // `Let` expressions (in a let-chain) shouldn't be terminating, as their temporaries\n+                // should live beyond the immediate expression\n+                if !matches!(r.kind, hir::ExprKind::Let(_)) {\n+                    terminating(r.hir_id.local_id);\n+                }\n+            }\n             hir::ExprKind::If(_, ref then, Some(ref otherwise)) => {\n                 terminating(then.hir_id.local_id);\n                 terminating(otherwise.hir_id.local_id);"}, {"sha": "42385216ae7656d1f135c0a33013b7ab451180ad", "filename": "src/test/ui/drop/drop_order.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3041bc9e71355eea71a5070b7939439fd3cf7e01/src%2Ftest%2Fui%2Fdrop%2Fdrop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3041bc9e71355eea71a5070b7939439fd3cf7e01/src%2Ftest%2Fui%2Fdrop%2Fdrop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fdrop_order.rs?ref=3041bc9e71355eea71a5070b7939439fd3cf7e01", "patch": "@@ -129,10 +129,10 @@ impl DropOrderCollector {\n         // take the \"else\" branch\n         if self.option_loud_drop(6).is_some() // 2\n             && self.option_loud_drop(5).is_some() // 1\n-            && let None = self.option_loud_drop(7) { // 3\n+            && let None = self.option_loud_drop(8) { // 4\n             unreachable!();\n         } else {\n-            self.print(8); // 4\n+            self.print(7); // 3\n         }\n \n         // let exprs interspersed"}, {"sha": "6401a8d14810005df90692b2486d8b7fffa0e435", "filename": "src/test/ui/drop/issue-100276.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3041bc9e71355eea71a5070b7939439fd3cf7e01/src%2Ftest%2Fui%2Fdrop%2Fissue-100276.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3041bc9e71355eea71a5070b7939439fd3cf7e01/src%2Ftest%2Fui%2Fdrop%2Fissue-100276.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fissue-100276.rs?ref=3041bc9e71355eea71a5070b7939439fd3cf7e01", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+// compile-flags: -Z validate-mir\n+#![feature(let_chains)]\n+\n+fn let_chains(entry: std::io::Result<std::fs::DirEntry>) {\n+    if let Ok(entry) = entry\n+        && let Some(s) = entry.file_name().to_str()\n+        && s.contains(\"\")\n+    {}\n+}\n+\n+fn main() {}"}, {"sha": "6471553e93fd1168ecac4a52a49e608eb3ae041c", "filename": "src/test/ui/mir/mir_let_chains_drop_order.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3041bc9e71355eea71a5070b7939439fd3cf7e01/src%2Ftest%2Fui%2Fmir%2Fmir_let_chains_drop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3041bc9e71355eea71a5070b7939439fd3cf7e01/src%2Ftest%2Fui%2Fmir%2Fmir_let_chains_drop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir_let_chains_drop_order.rs?ref=3041bc9e71355eea71a5070b7939439fd3cf7e01", "patch": "@@ -12,7 +12,7 @@ use std::panic;\n pub struct DropLogger<'a, T> {\n     extra: T,\n     id: usize,\n-    log: &'a panic::AssertUnwindSafe<RefCell<Vec<usize>>>\n+    log: &'a panic::AssertUnwindSafe<RefCell<Vec<usize>>>,\n }\n \n impl<'a, T> Drop for DropLogger<'a, T> {\n@@ -55,9 +55,9 @@ fn main() {\n             else {\n                 // 10 is not constructed\n                 d(10, None)\n-            }\n+            },\n         );\n-        assert_eq!(get(), vec![3, 8, 7, 1, 2]);\n+        assert_eq!(get(), vec![8, 7, 1, 3, 2]);\n     }\n     assert_eq!(get(), vec![0, 4, 6, 9, 5]);\n \n@@ -89,5 +89,5 @@ fn main() {\n             panic::panic_any(InjectedFailure)\n         );\n     });\n-    assert_eq!(get(), vec![14, 19, 20, 17, 15, 11, 18, 16, 12, 13]);\n+    assert_eq!(get(), vec![20, 17, 15, 11, 19, 18, 16, 12, 14, 13]);\n }"}]}