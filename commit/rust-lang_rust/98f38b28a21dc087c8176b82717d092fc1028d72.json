{"sha": "98f38b28a21dc087c8176b82717d092fc1028d72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZjM4YjI4YTIxZGMwODdjODE3NmI4MjcxN2QwOTJmYzEwMjhkNzI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-17T21:41:30Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-17T21:41:30Z"}, "message": "Correct E0392 diagnostic", "tree": {"sha": "76416ecc25855ad30726d2864a88dea7ae6db2fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76416ecc25855ad30726d2864a88dea7ae6db2fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98f38b28a21dc087c8176b82717d092fc1028d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98f38b28a21dc087c8176b82717d092fc1028d72", "html_url": "https://github.com/rust-lang/rust/commit/98f38b28a21dc087c8176b82717d092fc1028d72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98f38b28a21dc087c8176b82717d092fc1028d72/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ed6f1461dd0d89c85a334f8d8ce7957611f2dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed6f1461dd0d89c85a334f8d8ce7957611f2dfe", "html_url": "https://github.com/rust-lang/rust/commit/6ed6f1461dd0d89c85a334f8d8ce7957611f2dfe"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "37be1c3b5b7fa015d8fc54c5b063ef8955f68154", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/98f38b28a21dc087c8176b82717d092fc1028d72/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98f38b28a21dc087c8176b82717d092fc1028d72/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=98f38b28a21dc087c8176b82717d092fc1028d72", "patch": "@@ -938,17 +938,20 @@ fn check_variances_for_type_defn<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                         .map(|(index, _)| Parameter(index as u32))\n                         .collect();\n \n-    identify_constrained_generic_params(tcx,\n-                                     &ty_predicates,\n-                                     None,\n-                                     &mut constrained_parameters);\n+    identify_constrained_generic_params(\n+        tcx,\n+        &ty_predicates,\n+        None,\n+        &mut constrained_parameters,\n+    );\n \n     for (index, _) in variances.iter().enumerate() {\n         if constrained_parameters.contains(&Parameter(index as u32)) {\n             continue;\n         }\n \n         let param = &hir_generics.params[index];\n+\n         match param.name {\n             hir::ParamName::Error => { }\n             _ => report_bivariance(tcx, param.span, param.name.ident().name),\n@@ -1123,7 +1126,7 @@ fn error_392<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, span: Span, param_name: ast:\n                        -> DiagnosticBuilder<'tcx> {\n     let mut err = struct_span_err!(tcx.sess, span, E0392,\n                   \"parameter `{}` is never used\", param_name);\n-    err.span_label(span, \"unused type parameter\");\n+    err.span_label(span, \"unused parameter\");\n     err\n }\n "}]}