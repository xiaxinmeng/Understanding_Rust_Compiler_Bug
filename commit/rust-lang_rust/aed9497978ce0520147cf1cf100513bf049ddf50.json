{"sha": "aed9497978ce0520147cf1cf100513bf049ddf50", "node_id": "C_kwDOAAsO6NoAKGFlZDk0OTc5NzhjZTA1MjAxNDdjZjFjZjEwMDUxM2JmMDQ5ZGRmNTA", "commit": {"author": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-11-22T09:12:50Z"}, "committer": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-11-29T07:00:51Z"}, "message": "add test and stderr", "tree": {"sha": "89f356b77aed5df23668d5114874c19c92afecb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89f356b77aed5df23668d5114874c19c92afecb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aed9497978ce0520147cf1cf100513bf049ddf50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aed9497978ce0520147cf1cf100513bf049ddf50", "html_url": "https://github.com/rust-lang/rust/commit/aed9497978ce0520147cf1cf100513bf049ddf50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aed9497978ce0520147cf1cf100513bf049ddf50/comments", "author": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "committer": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f1385fdd75af35ea888eeb68dc3631d7637a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/96f1385fdd75af35ea888eeb68dc3631d7637a2b", "html_url": "https://github.com/rust-lang/rust/commit/96f1385fdd75af35ea888eeb68dc3631d7637a2b"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "92facbbf034152c0d610eadc0edb525ec8baa8f8", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -7,7 +7,7 @@ use rustc_ast::ast::RangeLimits;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -82,21 +82,19 @@ declare_clippy_lint! {\n     \"indexing/slicing usage\"\n }\n \n+impl_lint_pass!(IndexingSlicing => [INDEXING_SLICING, OUT_OF_BOUNDS_INDEXING]);\n+\n #[derive(Copy, Clone)]\n pub struct IndexingSlicing {\n     suppress_lint_in_const: bool,\n }\n \n impl IndexingSlicing {\n     pub fn new(suppress_lint_in_const: bool) -> Self {\n-        Self {\n-            suppress_lint_in_const,\n-        }\n+        Self { suppress_lint_in_const }\n     }\n }\n \n-declare_lint_pass!(IndexingSlicing => [INDEXING_SLICING, OUT_OF_BOUNDS_INDEXING]);\n-\n impl<'tcx> LateLintPass<'tcx> for IndexingSlicing {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n         if self.suppress_lint_in_const && cx.tcx.hir().is_inside_const_context(expr.hir_id) {\n@@ -204,7 +202,7 @@ fn to_const_range(cx: &LateContext<'_>, range: higher::Range<'_>, array_size: u1\n             } else {\n                 Some(x)\n             }\n-        }\n+        },\n         Some(_) => None,\n         None => Some(array_size),\n     };"}, {"sha": "3b5bac644ef5e84532b1ec0d2273807f95a6fcce", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -685,8 +685,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(inherent_impl::MultipleInherentImpl));\n     store.register_late_pass(|_| Box::new(neg_cmp_op_on_partial_ord::NoNegCompOpForPartialOrd));\n     store.register_late_pass(|_| Box::new(unwrap::Unwrap));\n-    store.register_late_pass(|_| Box::new(indexing_slicing::IndexingSlicing));\n-    store.register_late_pass(|_| Box::new(indexing_slicing::IndexingSlicing::new(suppress_lint_in_const)));\n+    store.register_late_pass(move |_| Box::new(indexing_slicing::IndexingSlicing::new(suppress_lint_in_const)));\n     store.register_late_pass(|_| Box::new(non_copy_const::NonCopyConst));\n     store.register_late_pass(|_| Box::new(ptr_offset_with_cast::PtrOffsetWithCast));\n     store.register_late_pass(|_| Box::new(redundant_clone::RedundantClone));"}, {"sha": "4a0e135db835cdaad2a61b65a6089cd7387ee0b4", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -406,7 +406,7 @@ define_Conf! {\n     ///\n     /// Whether to allow mixed uninlined format args, e.g. `format!(\"{} {}\", a, foo.bar)`\n     (allow_mixed_uninlined_format_args: bool = true),\n-    /// Lint: SUPPRESS_LINT\n+    /// Lint: INDEXING_SLICING\n     ///\n     /// Whether to suppress lint in const function\n     (suppress_lint_in_const: bool = true),"}, {"sha": "fd459ff5ac54c6bd76e4dc2c96c7e33e48e83022", "filename": "tests/ui-toml/suppress_lint_in_const/clippy.toml", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Fsuppress_lint_in_const%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Fsuppress_lint_in_const%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fsuppress_lint_in_const%2Fclippy.toml?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -0,0 +1 @@\n+suppress-lint-in-const = false\n\\ No newline at end of file"}, {"sha": "e5f4ca7cc902cc766bf94dceb3a9040879f065c3", "filename": "tests/ui-toml/suppress_lint_in_const/test.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Fsuppress_lint_in_const%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Fsuppress_lint_in_const%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fsuppress_lint_in_const%2Ftest.rs?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -0,0 +1,15 @@\n+#![warn(clippy::indexing_slicing)]\n+\n+/// An opaque integer representation\n+pub struct Integer<'a> {\n+    /// The underlying data\n+    value: &'a [u8],\n+}\n+impl<'a> Integer<'a> {\n+    // Check whether `self` holds a negative number or not\n+    pub const fn is_negative(&self) -> bool {\n+        self.value[0] & 0b1000_0000 != 0\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "b4f6fe0c024b1c1e02bd784961e537a31e7477e5", "filename": "tests/ui-toml/suppress_lint_in_const/test.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Fsuppress_lint_in_const%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Fsuppress_lint_in_const%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fsuppress_lint_in_const%2Ftest.stderr?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -0,0 +1,11 @@\n+error: indexing may panic\n+  --> $DIR/test.rs:11:9\n+   |\n+LL |         self.value[0] & 0b1000_0000 != 0\n+   |         ^^^^^^^^^^^^^\n+   |\n+   = help: consider using `.get(n)` or `.get_mut(n)` instead\n+   = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}, {"sha": "521af13fe03d1dce0f0c8c3d8966775735767f41", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aed9497978ce0520147cf1cf100513bf049ddf50/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=aed9497978ce0520147cf1cf100513bf049ddf50", "patch": "@@ -35,6 +35,7 @@ error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown fie\n            pass-by-value-size-limit\n            single-char-binding-names-threshold\n            standard-macro-braces\n+           suppress-lint-in-const\n            third-party\n            too-large-for-stack\n            too-many-arguments-threshold"}]}