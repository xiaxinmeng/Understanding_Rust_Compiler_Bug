{"sha": "0de71b0e3acaed1042fb173262916644111463c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZTcxYjBlM2FjYWVkMTA0MmZiMTczMjYyOTE2NjQ0MTExNDYzYzU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-03-10T20:55:25Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-03-10T21:01:26Z"}, "message": "Move links to the end of each chapter on adding_lints", "tree": {"sha": "9b81c976d6e8d25dee337c65d1fe4d38a1d42a0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b81c976d6e8d25dee337c65d1fe4d38a1d42a0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0de71b0e3acaed1042fb173262916644111463c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXmatGLoofN5+9u4rsJhshcDi2qEFAl5oACYACgkQsJhshcDi\n2qGlhA//QV46Xx0gv7Ak9H/J70+sYVY0kpxNHhTkRqdczWDWPyX9ouL6Zc9h2npt\ncL51n9+D3yWwxpjMPnkdZDsGSGfL4ccIEj83pfuefVPUanlvFIq7wD4AS7eK4qRr\nLYyOWv3K5XMntC4mdnSA5yjQDA/WaZsX67XcpqYkml18TFjcosaMC6SbaITI174+\nYUf4WMDL9dq3Z834vaNg/3yy3zTAmnk3TevNAV4By1Q9Nwu4/YsQXYQ/HERojBRs\nnYfIVL6lJY1ER9orILMdyktaMNiHLmmLYWdYuKKzuGybvBUGvPzZaZTgJPSnYAm6\n4Fw1s7EUjp+O8rcGyi10BcnSmnpSh/xVNRQc7Gn0UzqOhDRtBjzhu8cjtQYdPrQ4\nlSZHxsJkFXMdANMnoww4v77dhZxf5I1XvEtVORaOdUoUdICfoTQGSe9DSS9+Zr6V\nBNeL3KLWgtFXRXC5FWpM7xRIbISpo5CA2uNJG3J/1y3Gr4MpIQ8XUsiAqkQtTt83\neUvmq4OPxiGfpsIS2/ivP5Pfa9hpAqu8yijRPPwfF0ikYY1208CuVkx6HYgslvy6\nURw5p3K6d95gYTeoiWoTARLWgFQZFEwv8IQ101bWslJXM7ywdtWcoqJULTR6AyWb\nESM9so7VmSGhz7Rb9YQijaMOZAY4nFYrxBRpxstNDF2srCcCurU=\n=S1+b\n-----END PGP SIGNATURE-----", "payload": "tree 9b81c976d6e8d25dee337c65d1fe4d38a1d42a0a\nparent 19e72a24ae43084d8bb2b14ad3ff88391e1148d9\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1583873725 +0900\ncommitter Yuki Okushi <huyuumi.dev@gmail.com> 1583874086 +0900\n\nMove links to the end of each chapter on adding_lints\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0de71b0e3acaed1042fb173262916644111463c5", "html_url": "https://github.com/rust-lang/rust/commit/0de71b0e3acaed1042fb173262916644111463c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0de71b0e3acaed1042fb173262916644111463c5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19e72a24ae43084d8bb2b14ad3ff88391e1148d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e72a24ae43084d8bb2b14ad3ff88391e1148d9", "html_url": "https://github.com/rust-lang/rust/commit/19e72a24ae43084d8bb2b14ad3ff88391e1148d9"}], "stats": {"total": 67, "additions": 39, "deletions": 28}, "files": [{"sha": "1d78a27820a677d07fb421a0ae6dd4965e1f2fbd", "filename": "doc/adding_lints.md", "status": "modified", "additions": 39, "deletions": 28, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/0de71b0e3acaed1042fb173262916644111463c5/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/0de71b0e3acaed1042fb173262916644111463c5/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=0de71b0e3acaed1042fb173262916644111463c5", "patch": "@@ -107,13 +107,15 @@ our lint, we need to commit the generated `.stderr` files, too.\n \n If the lint you are working on is making use of structured suggestions, the\n test file should include a `// run-rustfix` comment at the top. This will\n-additionally run [rustfix](https://github.com/rust-lang-nursery/rustfix) for\n-that test. Rustfix will apply the suggestions from the lint to the code of the\n-test file and compare that to the contents of a `.fixed` file.\n+additionally run [rustfix] for that test. Rustfix will apply the suggestions\n+from the lint to the code of the test file and compare that to the contents of\n+a `.fixed` file.\n \n Use `tests/ui/update-all-references.sh` to automatically generate the\n `.fixed` file after running the tests.\n \n+[rustfix]: https://github.com/rust-lang/rustfix\n+\n ## Edition 2018 tests\n \n Some features require the 2018 edition to work (e.g. `async_await`), but\n@@ -167,10 +169,10 @@ declare_clippy_lint! {\n * The section of lines prefixed with `///` constitutes the lint documentation\n   section. This is the default documentation style and will be displayed\n   [like this][example_lint_page].\n-* `FOO_FUNCTIONS` is the name of our lint. Be sure to follow the [lint naming\n-  guidelines][lint_naming] here when naming your lint. In short, the name should\n-  state the thing that is being checked for and read well when used with\n-  `allow`/`warn`/`deny`.\n+* `FOO_FUNCTIONS` is the name of our lint. Be sure to follow the\n+  [lint naming guidelines][lint_naming] here when naming your lint.\n+  In short, the name should state the thing that is being checked for and\n+  read well when used with `allow`/`warn`/`deny`.\n * `pedantic` sets the lint level to `Allow`.\n   The exact mapping can be found [here][category_level_mapping]\n * The last part should be a text that explains what exactly is wrong with the\n@@ -200,7 +202,10 @@ automate everything. We will have to register our lint pass manually in the\n store.register_early_pass(|| box foo_functions::FooFunctions);\n ```\n \n-[example lint page]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n+[declare_clippy_lint]: https://github.com/rust-lang/rust-clippy/blob/557f6848bd5b7183f55c1e1522a326e9e1df6030/clippy_lints/src/lib.rs#L60\n+[example_lint_page]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n+[lint_naming]: https://rust-lang.github.io/rfcs/0344-conventions-galore.html#lints\n+[category_level_mapping]: https://github.com/rust-lang/rust-clippy/blob/557f6848bd5b7183f55c1e1522a326e9e1df6030/clippy_lints/src/lib.rs#L110\n \n ## Lint passes\n \n@@ -220,6 +225,9 @@ Since we don't need type information for checking the function name, we used\n `--pass=early` when running the new lint automation and all the imports were\n added accordingly.\n \n+[early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html\n+[late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.LateLintPass.html\n+\n ## Emitting a lint\n \n With UI tests and the lint declaration in place, we can start working on the\n@@ -265,13 +273,16 @@ impl EarlyLintPass for FooFunctions {\n \n Running our UI test should now produce output that contains the lint message.\n \n+[check_fn]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html#method.check_fn\n+[diagnostics]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/diagnostics.rs\n+\n ## Adding the lint logic\n \n Writing the logic for your lint will most likely be different from our example,\n so this section is kept rather short.\n \n Using the [`check_fn`][check_fn] method gives us access to [`FnKind`][fn_kind]\n-that has the `FnKind::Fn` variant. It provides access to the name of the\n+that has the [`FnKind::Fn`] variant. It provides access to the name of the\n function/method via an [`Ident`][ident].\n \n With that we can expand our `check_fn` method to:\n@@ -323,6 +334,10 @@ implementation is not violating any Clippy lints itself.\n That should be it for the lint implementation. Running `cargo test` should now\n pass.\n \n+[fn_kind]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/visit/enum.FnKind.html\n+[`FnKind::Fn`]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/visit/enum.FnKind.html#variant.Fn\n+[ident]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/symbol/struct.Ident.html\n+\n ## Author lint\n \n If you have trouble implementing your lint, there is also the internal `author`\n@@ -340,6 +355,8 @@ see the generated code in the output below.\n If the command was executed successfully, you can copy the code over to where\n you are implementing your lint.\n \n+[author_example]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=9a12cb60e5c6ad4e3003ac6d5e63cf55\n+\n ## Documentation\n \n The final thing before submitting our PR is to add some documentation to our\n@@ -373,11 +390,13 @@ declare_clippy_lint! {\n Once your lint is merged, this documentation will show up in the [lint\n list][lint_list].\n \n+[lint_list]: https://rust-lang.github.io/rust-clippy/master/index.html\n+\n ## Running rustfmt\n \n-[Rustfmt](https://github.com/rust-lang/rustfmt) is a tool for formatting Rust\n-code according to style guidelines. Your code has to be formatted by `rustfmt`\n-before a PR can be merged. Clippy uses nightly `rustfmt` in the CI.\n+[Rustfmt] is a tool for formatting Rust code according to style guidelines.\n+Your code has to be formatted by `rustfmt` before a PR can be merged.\n+Clippy uses nightly `rustfmt` in the CI.\n \n It can be installed via `rustup`:\n \n@@ -388,12 +407,16 @@ rustup component add rustfmt --toolchain=nightly\n Use `cargo dev fmt` to format the whole codebase. Make sure that `rustfmt` is\n installed for the nightly toolchain.\n \n+[Rustfmt]: https://github.com/rust-lang/rustfmt\n+\n ## Debugging\n \n If you want to debug parts of your lint implementation, you can use the [`dbg!`]\n macro anywhere in your code. Running the tests should then include the debug\n output in the `stdout` part.\n \n+[`dbg!`]: https://doc.rust-lang.org/std/macro.dbg.html\n+\n ## PR Checklist\n \n Before submitting your PR make sure you followed all of the basic requirements:\n@@ -437,26 +460,14 @@ documentation currently. This is unfortunate, but in most cases you can probably\n get away with copying things from existing similar lints. If you are stuck,\n don't hesitate to ask on [Discord] or in the issue/PR.\n \n-[lint_list]: https://rust-lang.github.io/rust-clippy/master/index.html\n-[lint_naming]: https://rust-lang.github.io/rfcs/0344-conventions-galore.html#lints\n-[category_level_mapping]: https://github.com/rust-lang/rust-clippy/blob/bd23cb89ec0ea63403a17d3fc5e50c88e38dd54f/clippy_lints/src/lib.rs#L43\n-[declare_clippy_lint]: https://github.com/rust-lang/rust-clippy/blob/a71acac1da7eaf667ab90a1d65d10e5cc4b80191/clippy_lints/src/lib.rs#L39\n-[check_fn]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html#method.check_fn\n-[early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html\n-[late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.LateLintPass.html\n-[fn_kind]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/visit/enum.FnKind.html\n-[diagnostics]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/diagnostics.rs\n [utils]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/mod.rs\n-[ident]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/symbol/struct.Ident.html\n-[span]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/struct.Span.html\n-[applicability]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/enum.Applicability.html\n [if_chain]: https://docs.rs/if_chain/*/if_chain/\n-[ty]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/sty/index.html\n-[ast]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/index.html\n [from_expansion]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/struct.Span.html#method.from_expansion\n [in_external_macro]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/fn.in_external_macro.html\n-[author_example]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=9a12cb60e5c6ad4e3003ac6d5e63cf55\n+[span]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/struct.Span.html\n+[applicability]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/enum.Applicability.html\n [rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/\n [nightly_docs]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/\n+[ast]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/index.html\n+[ty]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/sty/index.html\n [Discord]: https://discord.gg/rust-lang\n-[`dbg`!]: https://doc.rust-lang.org/std/macro.dbg.html"}]}