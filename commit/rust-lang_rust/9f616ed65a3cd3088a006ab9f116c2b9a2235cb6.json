{"sha": "9f616ed65a3cd3088a006ab9f116c2b9a2235cb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNjE2ZWQ2NWEzY2QzMDg4YTAwNmFiOWYxMTZjMmI5YTIyMzVjYjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-22T13:48:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-22T13:48:43Z"}, "message": "Merge #2644\n\n2644: More compact profiling display r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "bbb71537c3c45985d1e309f351ed598d9e21498e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb71537c3c45985d1e309f351ed598d9e21498e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f616ed65a3cd3088a006ab9f116c2b9a2235cb6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/3Q7CRBK7hj4Ov3rIwAAdHIIALMSIXLwzdPMtR3RBn7t63bC\nK6Q+ttqKv0sLr7Si2qLfjlSfj/OE6pOIDYuMQ2u41pbAu/RGOhalnVjhzy/odoQz\nYAELEfdke+PGsYdnyJbbMPTyfFHNOrw67gV0TCEHl4d6FJa/WT7u4/lgpceW2f0w\njZjE4JcQqQ6kpZfxNnSfh0SGksa+LOy74xYoecQqdJeX+ymYfrGX93zdF+xGXz97\nJ8OBHsur9tc+bzT1tWtocNFfuXFXT0rgAC9sve1WgvQ6ZrjpcFNHJ/8XXxBmCUgH\nnsHzHz929fvnuT3QTA+2jt1r0d+Md/O8qskqQBPgubZ1p6JBRXYac6pTvtbLcmA=\n=oA+h\n-----END PGP SIGNATURE-----\n", "payload": "tree bbb71537c3c45985d1e309f351ed598d9e21498e\nparent db850cf976ff2d291fecab8c1b5b876f4c747dc0\nparent 08df35537574d242f5f09b0f21eef14a5d0eb4ac\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1577022523 +0000\ncommitter GitHub <noreply@github.com> 1577022523 +0000\n\nMerge #2644\n\n2644: More compact profiling display r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f616ed65a3cd3088a006ab9f116c2b9a2235cb6", "html_url": "https://github.com/rust-lang/rust/commit/9f616ed65a3cd3088a006ab9f116c2b9a2235cb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f616ed65a3cd3088a006ab9f116c2b9a2235cb6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db850cf976ff2d291fecab8c1b5b876f4c747dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/db850cf976ff2d291fecab8c1b5b876f4c747dc0", "html_url": "https://github.com/rust-lang/rust/commit/db850cf976ff2d291fecab8c1b5b876f4c747dc0"}, {"sha": "08df35537574d242f5f09b0f21eef14a5d0eb4ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/08df35537574d242f5f09b0f21eef14a5d0eb4ac", "html_url": "https://github.com/rust-lang/rust/commit/08df35537574d242f5f09b0f21eef14a5d0eb4ac"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f260c40a321c6a6a201c0d93e383ee8595eff3a2", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f616ed65a3cd3088a006ab9f116c2b9a2235cb6/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f616ed65a3cd3088a006ab9f116c2b9a2235cb6/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=9f616ed65a3cd3088a006ab9f116c2b9a2235cb6", "patch": "@@ -217,7 +217,7 @@ fn print(\n     total: Option<Duration>,\n ) {\n     let mut last = 0;\n-    let indent = repeat(\"    \").take(lvl + 1).collect::<String>();\n+    let indent = repeat(\"    \").take(lvl).collect::<String>();\n     // We output hierarchy for long calls, but sum up all short calls\n     let mut short = Vec::new();\n     let mut accounted_for = Duration::default();\n@@ -227,7 +227,7 @@ fn print(\n         }\n         accounted_for += duration;\n         if duration >= longer_than {\n-            writeln!(out, \"{} {:6}ms - {}\", indent, duration.as_millis(), msg)\n+            writeln!(out, \"{}{:5}ms - {}\", indent, duration.as_millis(), msg)\n                 .expect(\"printing profiling info to stdout\");\n \n             print(lvl + 1, &msgs[last..i], out, longer_than, Some(duration));\n@@ -245,14 +245,14 @@ fn print(\n             count += 1;\n             total_duration += *time;\n         });\n-        writeln!(out, \"{} {:6}ms - {} ({} calls)\", indent, total_duration.as_millis(), msg, count)\n+        writeln!(out, \"{}{:5}ms - {} ({} calls)\", indent, total_duration.as_millis(), msg, count)\n             .expect(\"printing profiling info to stdout\");\n     }\n \n     if let Some(total) = total {\n         if let Some(unaccounted) = total.checked_sub(accounted_for) {\n             if unaccounted >= longer_than && last > 0 {\n-                writeln!(out, \"{} {:6}ms - ???\", indent, unaccounted.as_millis())\n+                writeln!(out, \"{}{:5}ms - ???\", indent, unaccounted.as_millis())\n                     .expect(\"printing profiling info to stdout\");\n             }\n         }"}]}