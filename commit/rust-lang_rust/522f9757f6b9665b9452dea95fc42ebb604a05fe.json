{"sha": "522f9757f6b9665b9452dea95fc42ebb604a05fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMmY5NzU3ZjZiOTY2NWI5NDUyZGVhOTVmYzQyZWJiNjA0YTA1ZmU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-08-30T09:12:07Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-08-30T09:49:49Z"}, "message": "Fix handling of +whole-archive native link modifier.", "tree": {"sha": "5eb63cf08df4b15055ec11f5524b5f47d9d22af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eb63cf08df4b15055ec11f5524b5f47d9d22af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/522f9757f6b9665b9452dea95fc42ebb604a05fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/522f9757f6b9665b9452dea95fc42ebb604a05fe", "html_url": "https://github.com/rust-lang/rust/commit/522f9757f6b9665b9452dea95fc42ebb604a05fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/522f9757f6b9665b9452dea95fc42ebb604a05fe/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbb0fe9d803f7fa8688b33306266a6b054c2c3f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb0fe9d803f7fa8688b33306266a6b054c2c3f4", "html_url": "https://github.com/rust-lang/rust/commit/dbb0fe9d803f7fa8688b33306266a6b054c2c3f4"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "2e4cef39cfea58afb644e6bf1ba54357e47b5d97", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/522f9757f6b9665b9452dea95fc42ebb604a05fe/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522f9757f6b9665b9452dea95fc42ebb604a05fe/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=522f9757f6b9665b9452dea95fc42ebb604a05fe", "patch": "@@ -36,6 +36,7 @@ use regex::Regex;\n use tempfile::Builder as TempFileBuilder;\n \n use std::ffi::OsString;\n+use std::lazy::OnceCell;\n use std::path::{Path, PathBuf};\n use std::process::{ExitStatus, Output, Stdio};\n use std::{ascii, char, env, fmt, fs, io, mem, str};\n@@ -2001,7 +2002,7 @@ fn add_local_native_libraries(\n     let relevant_libs =\n         codegen_results.crate_info.used_libraries.iter().filter(|l| relevant_lib(sess, l));\n \n-    let search_path = archive_search_paths(sess);\n+    let search_path = OnceCell::new();\n     let mut last = (NativeLibKind::Unspecified, None);\n     for lib in relevant_libs {\n         let name = match lib.name {\n@@ -2023,7 +2024,11 @@ fn add_local_native_libraries(\n             }\n             NativeLibKind::Static { bundle: None | Some(true), .. }\n             | NativeLibKind::Static { whole_archive: Some(true), .. } => {\n-                cmd.link_whole_staticlib(name, verbatim, &search_path);\n+                cmd.link_whole_staticlib(\n+                    name,\n+                    verbatim,\n+                    &search_path.get_or_init(|| archive_search_paths(sess)),\n+                );\n             }\n             NativeLibKind::Static { .. } => cmd.link_staticlib(name, verbatim),\n             NativeLibKind::RawDylib => {\n@@ -2116,6 +2121,7 @@ fn add_upstream_rust_crates<'a, B: ArchiveBuilder<'a>>(\n     }\n \n     let mut compiler_builtins = None;\n+    let search_path = OnceCell::new();\n \n     for &cnum in deps.iter() {\n         if group_start == Some(cnum) {\n@@ -2149,16 +2155,35 @@ fn add_upstream_rust_crates<'a, B: ArchiveBuilder<'a>>(\n                 // external build system already has the native dependencies defined, and it\n                 // will provide them to the linker itself.\n                 if sess.opts.debugging_opts.link_native_libraries {\n-                    // Skip if this library is the same as the last.\n                     let mut last = None;\n                     for lib in &codegen_results.crate_info.native_libraries[&cnum] {\n-                        if lib.name.is_some()\n-                            && relevant_lib(sess, lib)\n-                            && matches!(lib.kind, NativeLibKind::Static { bundle: Some(false), .. })\n-                            && last != lib.name\n-                        {\n-                            cmd.link_staticlib(lib.name.unwrap(), lib.verbatim.unwrap_or(false));\n-                            last = lib.name;\n+                        if !relevant_lib(sess, lib) {\n+                            // Skip libraries if they are disabled by `#[link(cfg=...)]`\n+                            continue;\n+                        }\n+\n+                        // Skip if this library is the same as the last.\n+                        if last == lib.name {\n+                            continue;\n+                        }\n+\n+                        if let Some(static_lib_name) = lib.name {\n+                            if let NativeLibKind::Static { bundle: Some(false), whole_archive } =\n+                                lib.kind\n+                            {\n+                                let verbatim = lib.verbatim.unwrap_or(false);\n+                                if whole_archive == Some(true) {\n+                                    cmd.link_whole_staticlib(\n+                                        static_lib_name,\n+                                        verbatim,\n+                                        search_path.get_or_init(|| archive_search_paths(sess)),\n+                                    );\n+                                } else {\n+                                    cmd.link_staticlib(static_lib_name, verbatim);\n+                                }\n+\n+                                last = lib.name;\n+                            }\n                         }\n                     }\n                 }"}, {"sha": "634286770d1f92ccb45a27cfc815d02dcff298e2", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/522f9757f6b9665b9452dea95fc42ebb604a05fe/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522f9757f6b9665b9452dea95fc42ebb604a05fe/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=522f9757f6b9665b9452dea95fc42ebb604a05fe", "patch": "@@ -3,6 +3,7 @@\n #![feature(box_patterns)]\n #![feature(try_blocks)]\n #![feature(in_band_lifetimes)]\n+#![feature(once_cell)]\n #![feature(nll)]\n #![feature(associated_type_bounds)]\n #![recursion_limit = \"256\"]"}]}