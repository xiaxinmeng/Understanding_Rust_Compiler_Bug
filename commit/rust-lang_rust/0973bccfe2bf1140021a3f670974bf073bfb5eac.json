{"sha": "0973bccfe2bf1140021a3f670974bf073bfb5eac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NzNiY2NmZTJiZjExNDAwMjFhM2Y2NzA5NzRiZjA3M2JmYjVlYWM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-03-20T19:38:57Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-03-20T19:38:57Z"}, "message": "Fail when there's an error starting a process. Close #1778.", "tree": {"sha": "de02fc86e59dad62d5d13f6122bd2dc816ecf976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de02fc86e59dad62d5d13f6122bd2dc816ecf976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0973bccfe2bf1140021a3f670974bf073bfb5eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0973bccfe2bf1140021a3f670974bf073bfb5eac", "html_url": "https://github.com/rust-lang/rust/commit/0973bccfe2bf1140021a3f670974bf073bfb5eac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0973bccfe2bf1140021a3f670974bf073bfb5eac/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3712a287d07402930de18aafebe1912eb056da8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3712a287d07402930de18aafebe1912eb056da8", "html_url": "https://github.com/rust-lang/rust/commit/d3712a287d07402930de18aafebe1912eb056da8"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "693832fca9d7a528787e2ab790864c5f96c2a1a0", "filename": "src/libcore/run.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0973bccfe2bf1140021a3f670974bf073bfb5eac/src%2Flibcore%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0973bccfe2bf1140021a3f670974bf073bfb5eac/src%2Flibcore%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frun.rs?ref=0973bccfe2bf1140021a3f670974bf073bfb5eac", "patch": "@@ -161,8 +161,10 @@ Spawns a process and waits for it to terminate\n The process id\n \"]\n fn run_program(prog: str, args: [str]) -> int {\n-    ret waitpid(spawn_process(prog, args, none, none,\n-                              0i32, 0i32, 0i32));\n+    let pid = spawn_process(prog, args, none, none,\n+                            0i32, 0i32, 0i32);\n+    if pid == -1 as pid_t { fail; }\n+    ret waitpid(pid);\n }\n \n #[doc =\"\n@@ -190,7 +192,7 @@ fn start_program(prog: str, args: [str]) -> program {\n                       pipe_input.in, pipe_output.out,\n                       pipe_err.out);\n \n-    if pid == -1i32 { fail; }\n+    if pid == -1 as pid_t { fail; }\n     libc::close(pipe_input.in);\n     libc::close(pipe_output.out);\n     libc::close(pipe_err.out);"}]}