{"sha": "d42a3913333e99bbe64af019a5dc494f25a8f005", "node_id": "C_kwDOAAsO6NoAKGQ0MmEzOTEzMzMzZTk5YmJlNjRhZjAxOWE1ZGM0OTRmMjVhOGYwMDU", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-11-08T04:37:28Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2021-11-13T13:28:37Z"}, "message": "Change paths for `dist` command to match the components they generate\n\nBefore, you could have the confusing situation where the command to\ngenerate a component had no relation to the name of that component (e.g.\nthe `rustc` component was generated with `src/librustc`). This changes\nthe name to make them match up.", "tree": {"sha": "53f8ccc42d2f63edbd672c9d6a47f34a42aa93c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53f8ccc42d2f63edbd672c9d6a47f34a42aa93c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d42a3913333e99bbe64af019a5dc494f25a8f005", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d42a3913333e99bbe64af019a5dc494f25a8f005", "html_url": "https://github.com/rust-lang/rust/commit/d42a3913333e99bbe64af019a5dc494f25a8f005", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d42a3913333e99bbe64af019a5dc494f25a8f005/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e018ce194ab16125747220676dd8a20aecd5196", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e018ce194ab16125747220676dd8a20aecd5196", "html_url": "https://github.com/rust-lang/rust/commit/3e018ce194ab16125747220676dd8a20aecd5196"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "fd015e1cd43028bd0f896020d83446df7902beb2", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d42a3913333e99bbe64af019a5dc494f25a8f005/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d42a3913333e99bbe64af019a5dc494f25a8f005/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=d42a3913333e99bbe64af019a5dc494f25a8f005", "patch": "@@ -287,7 +287,7 @@ jobs:\n             os: ubuntu-latest-xl\n           - name: dist-x86_64-apple\n             env:\n-              SCRIPT: \"./x.py dist --exclude src/doc --exclude extended && ./x.py dist --target=x86_64-apple-darwin src/doc && ./x.py dist extended\"\n+              SCRIPT: \"./x.py dist --exclude rust-docs --exclude extended && ./x.py dist --target=x86_64-apple-darwin rust-docs && ./x.py dist extended\"\n               RUST_CONFIGURE_ARGS: \"--host=x86_64-apple-darwin --target=x86_64-apple-darwin,aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7"}, {"sha": "2bc7ffb0c50c75aab91f34528484b66f4e497aec", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=d42a3913333e99bbe64af019a5dc494f25a8f005", "patch": "@@ -10,6 +10,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - `llvm-libunwind` now accepts `in-tree` (formerly true), `system` or `no` (formerly false) [#77703](https://github.com/rust-lang/rust/pull/77703)\n - The options `infodir`, `localstatedir`, and `gpg-password-file` are no longer allowed in config.toml. Previously, they were ignored without warning. Note that `infodir` and `localstatedir` are still accepted by `./configure`, with a warning. [#82451](https://github.com/rust-lang/rust/pull/82451)\n - Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n+- Change the names for `dist` commmands to match the component they generate. [#90684](https://github.com/rust-lang/rust/pull/90684)\n \n ### Non-breaking changes\n "}, {"sha": "09ea84a083eb2c4770b0ebfe9452c654df7339b1", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=d42a3913333e99bbe64af019a5dc494f25a8f005", "patch": "@@ -64,7 +64,7 @@ impl Step for Docs {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let default = run.builder.config.docs;\n-        run.path(\"src/doc\").default_condition(default)\n+        run.path(\"rust-docs\").default_condition(default)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -275,7 +275,7 @@ impl Step for Mingw {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.never()\n+        run.path(\"rust-mingw\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -316,7 +316,7 @@ impl Step for Rustc {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/librustc\")\n+        run.path(\"rustc\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -572,7 +572,7 @@ impl Step for Std {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"library/std\")\n+        run.path(\"rust-std\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -686,7 +686,7 @@ impl Step for Analysis {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let default = should_build_extended_tool(&run.builder, \"analysis\");\n-        run.path(\"analysis\").default_condition(default)\n+        run.path(\"rust-analysis\").default_condition(default)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -821,7 +821,7 @@ impl Step for Src {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src\")\n+        run.path(\"rust-src\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -874,7 +874,7 @@ impl Step for PlainSourceTarball {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        run.path(\"src\").default_condition(builder.config.rust_dist_src)\n+        run.path(\"rustc-src\").default_condition(builder.config.rust_dist_src)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -2120,7 +2120,7 @@ impl Step for BuildManifest {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/tools/build-manifest\")\n+        run.path(\"build-manifest\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -2152,7 +2152,7 @@ impl Step for ReproducibleArtifacts {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"reproducible\")\n+        run.path(\"reproducible-artifacts\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "efc83c6ccab1f06acad476209c1ec40043887638", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile?ref=d42a3913333e99bbe64af019a5dc494f25a8f005", "patch": "@@ -125,7 +125,7 @@ ENV RUST_CONFIGURE_ARGS \\\n ENV SCRIPT ../src/ci/pgo.sh python3 ../x.py dist \\\n     --host $HOSTS --target $HOSTS \\\n     --include-default-paths \\\n-    src/tools/build-manifest\n+    build-manifest\n ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=clang\n \n # This is the only builder which will create source tarballs"}, {"sha": "96af401369e947b16cb2710750e2ee5b9563e305", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d42a3913333e99bbe64af019a5dc494f25a8f005/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=d42a3913333e99bbe64af019a5dc494f25a8f005", "patch": "@@ -452,7 +452,7 @@ jobs:\n           # tier 2 targets produced by this builder.\n           - name: dist-x86_64-apple\n             env:\n-              SCRIPT: ./x.py dist --exclude src/doc --exclude extended && ./x.py dist --target=x86_64-apple-darwin src/doc && ./x.py dist extended\n+              SCRIPT: ./x.py dist --exclude rust-docs --exclude extended && ./x.py dist --target=x86_64-apple-darwin rust-docs && ./x.py dist extended\n               RUST_CONFIGURE_ARGS: --host=x86_64-apple-darwin --target=x86_64-apple-darwin,aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7"}]}