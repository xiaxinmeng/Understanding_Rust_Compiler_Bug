{"sha": "a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYWIwNjk4Y2NmN2U1M2E4MGU4ZWIwNDRiYWQ3ZGI5YjE1NDQ1Mzk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-20T06:53:58Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-21T01:01:06Z"}, "message": "identity_conversion: make it use a rustfix test", "tree": {"sha": "f70a191bd56cff783b9d706972a0301c77a43c35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f70a191bd56cff783b9d706972a0301c77a43c35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "html_url": "https://github.com/rust-lang/rust/commit/a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbfb9a49e3a0d35817c1eb80ef2825cf636a3ea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbfb9a49e3a0d35817c1eb80ef2825cf636a3ea4", "html_url": "https://github.com/rust-lang/rust/commit/bbfb9a49e3a0d35817c1eb80ef2825cf636a3ea4"}], "stats": {"total": 82, "additions": 71, "deletions": 11}, "files": [{"sha": "dd3fc56e98bcf2b668a2c8fe372cedc7ef8f36b2", "filename": "tests/ui/identity_conversion.fixed", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/tests%2Fui%2Fidentity_conversion.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/tests%2Fui%2Fidentity_conversion.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.fixed?ref=a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "patch": "@@ -0,0 +1,58 @@\n+// run-rustfix\n+\n+#![deny(clippy::identity_conversion)]\n+\n+fn test_generic<T: Copy>(val: T) -> T {\n+    let _ = val;\n+    val\n+}\n+\n+fn test_generic2<T: Copy + Into<i32> + Into<U>, U: From<T>>(val: T) {\n+    // ok\n+    let _: i32 = val.into();\n+    let _: U = val.into();\n+    let _ = U::from(val);\n+}\n+\n+fn test_questionmark() -> Result<(), ()> {\n+    {\n+        let _: i32 = 0i32;\n+        Ok(Ok(()))\n+    }??;\n+    Ok(())\n+}\n+\n+fn test_issue_3913() -> Result<(), std::io::Error> {\n+    use std::fs;\n+    use std::path::Path;\n+\n+    let path = Path::new(\".\");\n+    for _ in fs::read_dir(path)? {}\n+\n+    Ok(())\n+}\n+\n+fn main() {\n+    test_generic(10i32);\n+    test_generic2::<i32, i32>(10i32);\n+    test_questionmark().unwrap();\n+    test_issue_3913().unwrap();\n+\n+    let _: String = \"foo\".into();\n+    let _: String = From::from(\"foo\");\n+    let _ = String::from(\"foo\");\n+    #[allow(clippy::identity_conversion)]\n+    {\n+        let _: String = \"foo\".into();\n+        let _ = String::from(\"foo\");\n+        let _ = \"\".lines().into_iter();\n+    }\n+\n+    let _: String = \"foo\".to_string();\n+    let _: String = \"foo\".to_string();\n+    let _ = \"foo\".to_string();\n+    let _ = format!(\"A: {:04}\", 123);\n+    let _ = \"\".lines();\n+    let _ = vec![1, 2, 3].into_iter();\n+    let _: String = format!(\"Hello {}\", \"world\");\n+}"}, {"sha": "875ed7db373b6000d0ca4c14af50fcbe480aa084", "filename": "tests/ui/identity_conversion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/tests%2Fui%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/tests%2Fui%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.rs?ref=a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+\n #![deny(clippy::identity_conversion)]\n \n fn test_generic<T: Copy>(val: T) -> T {"}, {"sha": "3cabe53bf2b787cbc11d061a09264d3bc639e018", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a2ab0698ccf7e53a80e8eb044bad7db9b1544539/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "patch": "@@ -1,65 +1,65 @@\n error: identical conversion\n-  --> $DIR/identity_conversion.rs:4:13\n+  --> $DIR/identity_conversion.rs:6:13\n    |\n LL |     let _ = T::from(val);\n    |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`\n    |\n note: lint level defined here\n-  --> $DIR/identity_conversion.rs:1:9\n+  --> $DIR/identity_conversion.rs:3:9\n    |\n LL | #![deny(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:5:5\n+  --> $DIR/identity_conversion.rs:7:5\n    |\n LL |     val.into()\n    |     ^^^^^^^^^^ help: consider removing `.into()`: `val`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:17:22\n+  --> $DIR/identity_conversion.rs:19:22\n    |\n LL |         let _: i32 = 0i32.into();\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:49:21\n+  --> $DIR/identity_conversion.rs:51:21\n    |\n LL |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:50:21\n+  --> $DIR/identity_conversion.rs:52:21\n    |\n LL |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:51:13\n+  --> $DIR/identity_conversion.rs:53:13\n    |\n LL |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:52:13\n+  --> $DIR/identity_conversion.rs:54:13\n    |\n LL |     let _ = String::from(format!(\"A: {:04}\", 123));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!(\"A: {:04}\", 123)`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:53:13\n+  --> $DIR/identity_conversion.rs:55:13\n    |\n LL |     let _ = \"\".lines().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:54:13\n+  --> $DIR/identity_conversion.rs:56:13\n    |\n LL |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:55:21\n+  --> $DIR/identity_conversion.rs:57:21\n    |\n LL |     let _: String = format!(\"Hello {}\", \"world\").into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`"}]}