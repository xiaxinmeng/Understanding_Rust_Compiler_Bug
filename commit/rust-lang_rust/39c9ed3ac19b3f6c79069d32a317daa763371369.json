{"sha": "39c9ed3ac19b3f6c79069d32a317daa763371369", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YzllZDNhYzE5YjNmNmM3OTA2OWQzMmEzMTdkYWE3NjMzNzEzNjk=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-10-07T22:35:41Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-10-18T02:06:55Z"}, "message": "Prepare erase_regions MutVisitor to have projections interned", "tree": {"sha": "db4883499881cb07a42969dec81dd12e6c066e94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db4883499881cb07a42969dec81dd12e6c066e94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39c9ed3ac19b3f6c79069d32a317daa763371369", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl2pHj8ACgkQiMlBzaHU\nZDKKvg/+M9UtrGH3vBE0+TrlTqGd3PAHRmtFR5TI27iM+iTzteUy/rmaf5dGT4IA\nwpCCvpOrSraf8VlX/4AWboGkaY6vykVvxxFQs7uP2gFyJDMJjUJvlSSDFqIJNlur\nQw+DwaxcPKONR6zoIYQPeXknBWf+AuYMfls0Q5aSAzMWkHim2LJB16m7qE1Qwdaq\n81ezXv5ibvQP+HCX4X/ITaJPZ2GUvkFJPClvrMRYw6kaKlC2bP3ud1CRIlYhEYPm\nVFIgpoqXGsfJrjnvqeHpPjS/8DXIzHsT7nx0SMp0l3dWfzxvCW1+JeUP6U3THWgr\nZzWL5Kh+rzhcEAJEYZXQWi6jRftvyqQ6pBoX3AxkGOS0b8gUDWZlCPvv0t7p/yu2\noOwoEwpvDd7xPzIWay8HBqeNW6q1N8UIira95NJb4Bnt/uVnx81UTi7blzf9Wy+4\nOSkGJ/k9FgCt9GWDC3KzR+CouMCyxCQVRtcfVsJoO70L/Q0LraoApr8zyci/bSXO\nskJFCXnJAKFYZWZIdz2KZlF+UXxorUblrCGFjtaiRM/V0GIAPpNBqmaeIJyRf39f\nJgPl5M8k4fMgscR4dHGfZ1CMVmaClAkxb4HD/5pUgxPoOwSE1dggHcujQXeT8p3C\n+WFaPpc1RcZvbd0PngZs0dVuMKoGhHDHfqW81T0kqOJMGE8I8wU=\n=OtZ+\n-----END PGP SIGNATURE-----", "payload": "tree db4883499881cb07a42969dec81dd12e6c066e94\nparent 0fc063f15936761024183a3bb3790684d5de3bd3\nauthor Santiago Pastorino <spastorino@gmail.com> 1570487741 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1571364415 -0400\n\nPrepare erase_regions MutVisitor to have projections interned\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39c9ed3ac19b3f6c79069d32a317daa763371369", "html_url": "https://github.com/rust-lang/rust/commit/39c9ed3ac19b3f6c79069d32a317daa763371369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39c9ed3ac19b3f6c79069d32a317daa763371369/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fc063f15936761024183a3bb3790684d5de3bd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fc063f15936761024183a3bb3790684d5de3bd3", "html_url": "https://github.com/rust-lang/rust/commit/0fc063f15936761024183a3bb3790684d5de3bd3"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "132149d5d43377edacbc01c5b0c10e67e2e8da41", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/39c9ed3ac19b3f6c79069d32a317daa763371369/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39c9ed3ac19b3f6c79069d32a317daa763371369/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=39c9ed3ac19b3f6c79069d32a317daa763371369", "patch": "@@ -7,7 +7,7 @@\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::mir::*;\n-use rustc::mir::visit::{MutVisitor, TyContext};\n+use rustc::mir::visit::{MutVisitor, PlaceContext, TyContext};\n use crate::transform::{MirPass, MirSource};\n \n struct EraseRegionsVisitor<'tcx> {\n@@ -38,6 +38,25 @@ impl MutVisitor<'tcx> for EraseRegionsVisitor<'tcx> {\n     fn visit_substs(&mut self, substs: &mut SubstsRef<'tcx>, _: Location) {\n         *substs = self.tcx.erase_regions(substs);\n     }\n+\n+    fn visit_place(\n+        &mut self,\n+        place: &mut Place<'tcx>,\n+        context: PlaceContext,\n+        location: Location,\n+    ) {\n+        self.visit_place_base(&mut place.base, context, location);\n+\n+        let new_projection: Vec<_> = place.projection.iter().map(|elem|\n+            if let PlaceElem::Field(field, ty) = elem {\n+                PlaceElem::Field(*field, self.tcx.erase_regions(ty))\n+            } else {\n+                elem.clone()\n+            }\n+        ).collect();\n+\n+        place.projection = new_projection.into_boxed_slice();\n+    }\n }\n \n pub struct EraseRegions;"}]}