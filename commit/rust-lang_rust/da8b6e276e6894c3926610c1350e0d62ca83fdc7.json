{"sha": "da8b6e276e6894c3926610c1350e0d62ca83fdc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhOGI2ZTI3NmU2ODk0YzM5MjY2MTBjMTM1MGUwZDYyY2E4M2ZkYzc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-11T12:15:36Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-13T14:42:59Z"}, "message": "rustc: remove redundant fn_id's from CodeExtentData.", "tree": {"sha": "79fee4874c5c3e16a010c525345556955405ad42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79fee4874c5c3e16a010c525345556955405ad42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da8b6e276e6894c3926610c1350e0d62ca83fdc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da8b6e276e6894c3926610c1350e0d62ca83fdc7", "html_url": "https://github.com/rust-lang/rust/commit/da8b6e276e6894c3926610c1350e0d62ca83fdc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da8b6e276e6894c3926610c1350e0d62ca83fdc7/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2da080e779b4e6f4359c031824c3bdcedad452fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2da080e779b4e6f4359c031824c3bdcedad452fd", "html_url": "https://github.com/rust-lang/rust/commit/2da080e779b4e6f4359c031824c3bdcedad452fd"}], "stats": {"total": 49, "additions": 19, "deletions": 30}, "files": [{"sha": "6d6520adc4ef4d97ae493291e53f37ebb01488b7", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=da8b6e276e6894c3926610c1350e0d62ca83fdc7", "patch": "@@ -441,9 +441,8 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a, 'tcx>> for ::middle::region::\n             CodeExtentData::DestructionScope(node_id) => {\n                 node_id.hash_stable(hcx, hasher);\n             }\n-            CodeExtentData::CallSiteScope { fn_id, body_id } |\n-            CodeExtentData::ParameterScope { fn_id, body_id } => {\n-                fn_id.hash_stable(hcx, hasher);\n+            CodeExtentData::CallSiteScope(body_id) |\n+            CodeExtentData::ParameterScope(body_id) => {\n                 body_id.hash_stable(hcx, hasher);\n             }\n             CodeExtentData::Remainder(block_remainder) => {"}, {"sha": "009dfbd5402bde0597abd38f67e9ba6ff4f20012", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=da8b6e276e6894c3926610c1350e0d62ca83fdc7", "patch": "@@ -153,10 +153,10 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 };\n                 let scope_decorated_tag = match *scope {\n                     region::CodeExtentData::Misc(_) => tag,\n-                    region::CodeExtentData::CallSiteScope { .. } => {\n+                    region::CodeExtentData::CallSiteScope(_) => {\n                         \"scope of call-site for function\"\n                     }\n-                    region::CodeExtentData::ParameterScope { .. } => {\n+                    region::CodeExtentData::ParameterScope(_) => {\n                         \"scope of function body\"\n                     }\n                     region::CodeExtentData::DestructionScope(_) => {"}, {"sha": "2940d250dd387ffe0ac89dab10ea7e19960f2773", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=da8b6e276e6894c3926610c1350e0d62ca83fdc7", "patch": "@@ -107,11 +107,11 @@ pub enum CodeExtentData {\n \n     // extent of the call-site for a function or closure (outlives\n     // the parameters as well as the body).\n-    CallSiteScope { fn_id: ast::NodeId, body_id: ast::NodeId },\n+    CallSiteScope(hir::BodyId),\n \n     // extent of parameters passed to a function or closure (they\n     // outlive its body)\n-    ParameterScope { fn_id: ast::NodeId, body_id: ast::NodeId },\n+    ParameterScope(hir::BodyId),\n \n     // extent of destructors for temporaries of node-id\n     DestructionScope(ast::NodeId),\n@@ -157,8 +157,8 @@ impl CodeExtentData {\n             // precise extent denoted by `self`.\n             CodeExtentData::Remainder(br) => br.block,\n             CodeExtentData::DestructionScope(node_id) => node_id,\n-            CodeExtentData::CallSiteScope { fn_id: _, body_id } |\n-            CodeExtentData::ParameterScope { fn_id: _, body_id } => body_id,\n+            CodeExtentData::CallSiteScope(body_id) |\n+            CodeExtentData::ParameterScope(body_id) => body_id.node_id,\n         }\n     }\n \n@@ -169,8 +169,8 @@ impl CodeExtentData {\n         match hir_map.find(self.node_id()) {\n             Some(hir_map::NodeBlock(ref blk)) => {\n                 match *self {\n-                    CodeExtentData::CallSiteScope { .. } |\n-                    CodeExtentData::ParameterScope { .. } |\n+                    CodeExtentData::CallSiteScope(_) |\n+                    CodeExtentData::ParameterScope(_) |\n                     CodeExtentData::Misc(_) |\n                     CodeExtentData::DestructionScope(_) => Some(blk.span),\n \n@@ -627,10 +627,7 @@ impl<'tcx> RegionMaps<'tcx> {\n             self.root_body.unwrap()\n         });\n \n-        tcx.intern_code_extent(CodeExtentData::CallSiteScope {\n-            fn_id: tcx.hir.body_owner(body_id),\n-            body_id: body_id.node_id\n-        })\n+        tcx.intern_code_extent(CodeExtentData::CallSiteScope(body_id))\n     }\n \n     /// Assuming that the provided region was defined within this `RegionMaps`,\n@@ -651,10 +648,7 @@ impl<'tcx> RegionMaps<'tcx> {\n         let param_owner_id = tcx.hir.as_local_node_id(param_owner).unwrap();\n         let body_id = tcx.hir.body_owned_by(param_owner_id);\n \n-        tcx.intern_code_extent(CodeExtentData::CallSiteScope {\n-            fn_id: tcx.hir.body_owner(body_id),\n-            body_id: body_id.node_id\n-        })\n+        tcx.intern_code_extent(CodeExtentData::CallSiteScope(body_id))\n     }\n }\n \n@@ -1172,9 +1166,9 @@ impl<'a, 'tcx> Visitor<'tcx> for RegionResolutionVisitor<'a, 'tcx> {\n         self.cx.root_id = Some(body_id.node_id);\n \n         self.cx.parent = Some(self.new_code_extent(\n-            CodeExtentData::CallSiteScope { fn_id: owner_id, body_id: body_id.node_id }));\n+            CodeExtentData::CallSiteScope(body_id)));\n         self.cx.parent = Some(self.new_code_extent(\n-            CodeExtentData::ParameterScope { fn_id: owner_id, body_id: body_id.node_id }));\n+            CodeExtentData::ParameterScope(body_id)));\n \n         // The arguments and `self` are parented to the fn.\n         self.cx.var_parent = self.cx.parent.take();"}, {"sha": "39ab2abcc0e9c61b2d8c1263eab0d481556f3f9a", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=da8b6e276e6894c3926610c1350e0d62ca83fdc7", "patch": "@@ -656,17 +656,13 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     pub fn call_site_extent(self, fn_id: ast::NodeId) -> CodeExtent<'gcx> {\n-        self.intern_code_extent(CodeExtentData::CallSiteScope {\n-            fn_id,\n-            body_id: self.hir.body_owned_by(fn_id).node_id\n-        })\n+        self.intern_code_extent(CodeExtentData::CallSiteScope(\n+            self.hir.body_owned_by(fn_id)))\n     }\n \n     pub fn parameter_extent(self, fn_id: ast::NodeId) -> CodeExtent<'gcx> {\n-        self.intern_code_extent(CodeExtentData::ParameterScope {\n-            fn_id,\n-            body_id: self.hir.body_owned_by(fn_id).node_id\n-        })\n+        self.intern_code_extent(CodeExtentData::ParameterScope(\n+            self.hir.body_owned_by(fn_id)))\n     }\n \n     pub fn intern_code_extent(self, data: CodeExtentData) -> CodeExtent<'gcx> {"}, {"sha": "56ce4727d5f5864aceb5d4239602f0070b1d2e5b", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8b6e276e6894c3926610c1350e0d62ca83fdc7/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=da8b6e276e6894c3926610c1350e0d62ca83fdc7", "patch": "@@ -416,7 +416,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n         // We want `scopes[1]`, which is the `ParameterScope`.\n         assert!(self.scopes.len() >= 2);\n         assert!(match *self.scopes[1].extent {\n-            CodeExtentData::ParameterScope { .. } => true,\n+            CodeExtentData::ParameterScope(_) => true,\n             _ => false,\n         });\n         self.scopes[1].extent"}]}