{"sha": "5356a8b1575514ba2a51d54e0e5565d9c001bd18", "node_id": "C_kwDOAAsO6NoAKDUzNTZhOGIxNTc1NTE0YmEyYTUxZDU0ZTBlNTU2NWQ5YzAwMWJkMTg", "commit": {"author": {"name": "gftea", "email": "ckq614@gmail.com", "date": "2023-01-30T19:03:44Z"}, "committer": {"name": "gftea", "email": "ckq614@gmail.com", "date": "2023-01-30T19:03:50Z"}, "message": "trim trailing whitespaces (#14044)", "tree": {"sha": "aaae8af9e804a3652f69795329eae21e07d5ab7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaae8af9e804a3652f69795329eae21e07d5ab7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5356a8b1575514ba2a51d54e0e5565d9c001bd18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5356a8b1575514ba2a51d54e0e5565d9c001bd18", "html_url": "https://github.com/rust-lang/rust/commit/5356a8b1575514ba2a51d54e0e5565d9c001bd18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5356a8b1575514ba2a51d54e0e5565d9c001bd18/comments", "author": {"login": "gftea", "id": 1705787, "node_id": "MDQ6VXNlcjE3MDU3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1705787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gftea", "html_url": "https://github.com/gftea", "followers_url": "https://api.github.com/users/gftea/followers", "following_url": "https://api.github.com/users/gftea/following{/other_user}", "gists_url": "https://api.github.com/users/gftea/gists{/gist_id}", "starred_url": "https://api.github.com/users/gftea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gftea/subscriptions", "organizations_url": "https://api.github.com/users/gftea/orgs", "repos_url": "https://api.github.com/users/gftea/repos", "events_url": "https://api.github.com/users/gftea/events{/privacy}", "received_events_url": "https://api.github.com/users/gftea/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gftea", "id": 1705787, "node_id": "MDQ6VXNlcjE3MDU3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1705787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gftea", "html_url": "https://github.com/gftea", "followers_url": "https://api.github.com/users/gftea/followers", "following_url": "https://api.github.com/users/gftea/following{/other_user}", "gists_url": "https://api.github.com/users/gftea/gists{/gist_id}", "starred_url": "https://api.github.com/users/gftea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gftea/subscriptions", "organizations_url": "https://api.github.com/users/gftea/orgs", "repos_url": "https://api.github.com/users/gftea/repos", "events_url": "https://api.github.com/users/gftea/events{/privacy}", "received_events_url": "https://api.github.com/users/gftea/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75676ebe86703efbdaf00c5586ed6208bbd7ad9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/75676ebe86703efbdaf00c5586ed6208bbd7ad9b", "html_url": "https://github.com/rust-lang/rust/commit/75676ebe86703efbdaf00c5586ed6208bbd7ad9b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "dcca3d323e82b70a1be818862857bdb3ea0a1b98", "filename": "crates/ide/src/file_structure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5356a8b1575514ba2a51d54e0e5565d9c001bd18/crates%2Fide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5356a8b1575514ba2a51d54e0e5565d9c001bd18/crates%2Fide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffile_structure.rs?ref=5356a8b1575514ba2a51d54e0e5565d9c001bd18", "patch": "@@ -160,9 +160,9 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n                 let label = match target_trait {\n                     None => format!(\"impl {}\", target_type.syntax().text()),\n                     Some(t) => {\n-                        format!(\"impl {}{} for {}\", \n-                            it.excl_token().map(|x| x.to_string()).unwrap_or_default(), \n-                            t.syntax().text(), \n+                        format!(\"impl {}{} for {}\",\n+                            it.excl_token().map(|x| x.to_string()).unwrap_or_default(),\n+                            t.syntax().text(),\n                             target_type.syntax().text(),\n                         )\n                     }"}]}