{"sha": "04dac4285aefc2fb18ad07b1e40f6771e0763aea", "node_id": "C_kwDOAAsO6NoAKDA0ZGFjNDI4NWFlZmMyZmIxOGFkMDdiMWU0MGY2NzcxZTA3NjNhZWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-09T06:25:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-09T06:25:47Z"}, "message": "Rollup merge of #105455 - lcnr:correct-reveal-in-validate, r=jackh726\n\nuse the correct `Reveal` during validation\n\nsupersedes #105454. Deals with https://github.com/rust-lang/rust/issues/105009#issuecomment-1342395333, not closing #105009 as the ICE may leak into beta\n\nThe issue was the following:\n- we optimize the mir, using `Reveal::All`\n- some optimization relies on the hidden type of an opaque type\n- we then validate using `Reveal::UserFacing` again which is not able to observe the hidden type\n\nr? `@jackh726`", "tree": {"sha": "796b1b354041013db7a9123f620a3f115f5882b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/796b1b354041013db7a9123f620a3f115f5882b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04dac4285aefc2fb18ad07b1e40f6771e0763aea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjktTrCRBK7hj4Ov3rIwAAHsUIABQLB22BP1mr24BG6uET+E6U\nF3hCJNOu4Au/+wv4dqwnIM19LfoUrV8fFfPRLTwpxZJEIa2gEnh+QKsI8YykuHlT\njezqVRzt8zohyVtdXT1CO/KPNMS8WZ+q7kUzB3hgDNZGvAGh1SI1VUyMmCJL6gjY\n3yhp+CSxgs8/CjAwH1R/wzMnaVR1x/QvZeGqBK6qGXqExPQ5HspPuQ4hp7Sodq9n\niAydzdsAcpsEK/wGYGWQHGXzBFOxTkC4vuddUh36rQEvNzthQlh6hiuxnjcD6PST\nkaAWVjvUFkLqj9Qnxetfzw1cl2r2JXZ+RYtg+ox5AllmZboNtM64yYbzSfc5VrA=\n=Osnw\n-----END PGP SIGNATURE-----\n", "payload": "tree 796b1b354041013db7a9123f620a3f115f5882b3\nparent 6111a7345be5f50b7170aa6ec69a5d823878cb27\nparent e73ef59cb6d806d9f5405237383d65bf02095127\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670567147 +0100\ncommitter GitHub <noreply@github.com> 1670567147 +0100\n\nRollup merge of #105455 - lcnr:correct-reveal-in-validate, r=jackh726\n\nuse the correct `Reveal` during validation\n\nsupersedes #105454. Deals with https://github.com/rust-lang/rust/issues/105009#issuecomment-1342395333, not closing #105009 as the ICE may leak into beta\n\nThe issue was the following:\n- we optimize the mir, using `Reveal::All`\n- some optimization relies on the hidden type of an opaque type\n- we then validate using `Reveal::UserFacing` again which is not able to observe the hidden type\n\nr? `@jackh726`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04dac4285aefc2fb18ad07b1e40f6771e0763aea", "html_url": "https://github.com/rust-lang/rust/commit/04dac4285aefc2fb18ad07b1e40f6771e0763aea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04dac4285aefc2fb18ad07b1e40f6771e0763aea/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6111a7345be5f50b7170aa6ec69a5d823878cb27", "url": "https://api.github.com/repos/rust-lang/rust/commits/6111a7345be5f50b7170aa6ec69a5d823878cb27", "html_url": "https://github.com/rust-lang/rust/commit/6111a7345be5f50b7170aa6ec69a5d823878cb27"}, {"sha": "e73ef59cb6d806d9f5405237383d65bf02095127", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73ef59cb6d806d9f5405237383d65bf02095127", "html_url": "https://github.com/rust-lang/rust/commit/e73ef59cb6d806d9f5405237383d65bf02095127"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "5c9263dc5e35d1f252f55dc3fc5d28f5591de84b", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04dac4285aefc2fb18ad07b1e40f6771e0763aea/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04dac4285aefc2fb18ad07b1e40f6771e0763aea/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=04dac4285aefc2fb18ad07b1e40f6771e0763aea", "patch": "@@ -2,6 +2,7 @@\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_index::bit_set::BitSet;\n+use rustc_infer::traits::Reveal;\n use rustc_middle::mir::interpret::Scalar;\n use rustc_middle::mir::visit::NonUseContext::VarDebugInfo;\n use rustc_middle::mir::visit::{PlaceContext, Visitor};\n@@ -44,8 +45,11 @@ impl<'tcx> MirPass<'tcx> for Validator {\n             return;\n         }\n         let def_id = body.source.def_id();\n-        let param_env = tcx.param_env(def_id);\n         let mir_phase = self.mir_phase;\n+        let param_env = match mir_phase.reveal() {\n+            Reveal::UserFacing => tcx.param_env(def_id),\n+            Reveal::All => tcx.param_env_reveal_all_normalized(def_id),\n+        };\n \n         let always_live_locals = always_storage_live_locals(body);\n         let storage_liveness = MaybeStorageLive::new(always_live_locals)"}, {"sha": "5ba053820e09acd84d32a70727db56edf4a7497e", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/04dac4285aefc2fb18ad07b1e40f6771e0763aea/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04dac4285aefc2fb18ad07b1e40f6771e0763aea/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=04dac4285aefc2fb18ad07b1e40f6771e0763aea", "patch": "@@ -6,6 +6,7 @@\n use super::{BasicBlock, Constant, Field, Local, SwitchTargets, UserTypeProjection};\n \n use crate::mir::coverage::{CodeRegion, CoverageKind};\n+use crate::traits::Reveal;\n use crate::ty::adjustment::PointerCast;\n use crate::ty::subst::SubstsRef;\n use crate::ty::{self, List, Ty};\n@@ -100,6 +101,13 @@ impl MirPhase {\n             MirPhase::Runtime(RuntimePhase::Optimized) => \"runtime-optimized\",\n         }\n     }\n+\n+    pub fn reveal(&self) -> Reveal {\n+        match *self {\n+            MirPhase::Built | MirPhase::Analysis(_) => Reveal::UserFacing,\n+            MirPhase::Runtime(_) => Reveal::All,\n+        }\n+    }\n }\n \n /// See [`MirPhase::Analysis`]."}, {"sha": "cd6c5bf271935a8b13b76fc8a992e44179f0da9e", "filename": "src/test/ui/mir/validate/issue-95978-validator-lifetime-comparison.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/04dac4285aefc2fb18ad07b1e40f6771e0763aea/src%2Ftest%2Fui%2Fmir%2Fvalidate%2Fissue-95978-validator-lifetime-comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04dac4285aefc2fb18ad07b1e40f6771e0763aea/src%2Ftest%2Fui%2Fmir%2Fvalidate%2Fissue-95978-validator-lifetime-comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fvalidate%2Fissue-95978-validator-lifetime-comparison.rs?ref=04dac4285aefc2fb18ad07b1e40f6771e0763aea", "previous_filename": "src/test/ui/mir/issue-95978-validator-lifetime-comparison.rs"}, {"sha": "3852daf245eb059ca78a4376d5b2833c4372ed3e", "filename": "src/test/ui/mir/validate/needs-reveal-all.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/04dac4285aefc2fb18ad07b1e40f6771e0763aea/src%2Ftest%2Fui%2Fmir%2Fvalidate%2Fneeds-reveal-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04dac4285aefc2fb18ad07b1e40f6771e0763aea/src%2Ftest%2Fui%2Fmir%2Fvalidate%2Fneeds-reveal-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fvalidate%2Fneeds-reveal-all.rs?ref=04dac4285aefc2fb18ad07b1e40f6771e0763aea", "patch": "@@ -0,0 +1,52 @@\n+// Regression test for #105009. the issue here was that even after the `RevealAll` pass,\n+// `validate` still used `Reveal::UserFacing`. This meant that it now ends up comparing\n+// opaque types with their revealed version, resulting in an ICE.\n+//\n+// We're using these flags to run the `RevealAll` pass while making it less likely to\n+// accidentally removing the assignment from `Foo<fn_ptr>` to `Foo<fn_def>`.\n+\n+// compile-flags: -Zinline_mir=yes -Zmir-opt-level=0 -Zvalidate-mir\n+// run-pass\n+\n+use std::hint::black_box;\n+\n+trait Func {\n+    type Ret: Id;\n+}\n+\n+trait Id {\n+    type Assoc;\n+}\n+impl Id for u32 {\n+    type Assoc = u32;\n+}\n+impl Id for i32 {\n+    type Assoc = i32;\n+}\n+\n+impl<F: FnOnce() -> R, R: Id> Func for F {\n+    type Ret = R;\n+}\n+\n+fn bar() -> impl Copy + Id {\n+    0u32\n+}\n+\n+struct Foo<T: Func> {\n+    _func: T,\n+    value: Option<<<T as Func>::Ret as Id>::Assoc>,\n+}\n+\n+fn main() {\n+    let mut fn_def = black_box(Foo {\n+        _func: bar,\n+        value: None,\n+    });\n+    let fn_ptr = black_box(Foo {\n+        _func: bar as fn() -> _,\n+        value: None,\n+    });\n+\n+    fn_def.value = fn_ptr.value;\n+    black_box(fn_def);\n+}"}]}