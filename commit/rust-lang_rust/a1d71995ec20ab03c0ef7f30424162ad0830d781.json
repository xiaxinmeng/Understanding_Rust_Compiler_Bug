{"sha": "a1d71995ec20ab03c0ef7f30424162ad0830d781", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZDcxOTk1ZWMyMGFiMDNjMGVmN2YzMDQyNDE2MmFkMDgzMGQ3ODE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-02T23:52:14Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-03T05:11:46Z"}, "message": "Rename istr-stuff to str in rustc. Issue #855", "tree": {"sha": "8dd7fb8545b3a9506959bd18e2044301284c7594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dd7fb8545b3a9506959bd18e2044301284c7594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1d71995ec20ab03c0ef7f30424162ad0830d781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d71995ec20ab03c0ef7f30424162ad0830d781", "html_url": "https://github.com/rust-lang/rust/commit/a1d71995ec20ab03c0ef7f30424162ad0830d781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1d71995ec20ab03c0ef7f30424162ad0830d781/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1555e2ca88d3c300e1c92cdc4cbc5bf84de86cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1555e2ca88d3c300e1c92cdc4cbc5bf84de86cd", "html_url": "https://github.com/rust-lang/rust/commit/f1555e2ca88d3c300e1c92cdc4cbc5bf84de86cd"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "742e82c5341b9407e9bad5492ed194447dba5032", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=a1d71995ec20ab03c0ef7f30424162ad0830d781", "patch": "@@ -193,7 +193,7 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n         }\n       }\n       'c' { ret ty::mk_char(st.tcx); }\n-      'S' { ret ty::mk_istr(st.tcx); }\n+      'S' { ret ty::mk_str(st.tcx); }\n       't' {\n         assert (next(st) as char == '[');\n         let def = parse_def(st, sd);"}, {"sha": "a81f910a9469f710e182bd00e62886196beeee21", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=a1d71995ec20ab03c0ef7f30424162ad0830d781", "patch": "@@ -2244,7 +2244,7 @@ fn trans_crate_lit(cx: &@crate_ctxt, lit: &ast::lit) -> ValueRef {\n \n fn trans_lit(cx: &@block_ctxt, lit: &ast::lit) -> result {\n     alt lit.node {\n-      ast::lit_str(s) { ret tvec::trans_istr(cx, s); }\n+      ast::lit_str(s) { ret tvec::trans_str(cx, s); }\n       _ { ret rslt(cx, trans_crate_lit(bcx_ccx(cx), lit)); }\n     }\n }\n@@ -5465,7 +5465,7 @@ fn create_main_wrapper(ccx: &@crate_ctxt, sp: &span, main_llfn: ValueRef,\n \n     fn create_main(ccx: &@crate_ctxt, sp: &span, main_llfn: ValueRef,\n                    takes_argv: bool) -> ValueRef {\n-        let unit_ty = ty::mk_istr(ccx.tcx);\n+        let unit_ty = ty::mk_str(ccx.tcx);\n         let vecarg_ty: ty::arg =\n             {mode: ty::mo_val,\n              ty: ty::mk_vec(ccx.tcx, {ty: unit_ty, mut: ast::imm})};"}, {"sha": "03daddb0a080886e726fe3f91d59588e9a805686", "filename": "src/comp/middle/trans_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Ftrans_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Ftrans_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_vec.rs?ref=a1d71995ec20ab03c0ef7f30424162ad0830d781", "patch": "@@ -121,10 +121,10 @@ fn trans_vec(bcx: &@block_ctxt, args: &[@ast::expr], id: ast::node_id) ->\n     }\n     ret rslt(bcx, vptr);\n }\n-fn trans_istr(bcx: &@block_ctxt, s: str) -> result {\n+fn trans_str(bcx: &@block_ctxt, s: str) -> result {\n     let veclen = std::str::byte_len(s) + 1u; // +1 for \\0\n     let {bcx: bcx, val: sptr, _} =\n-        alloc(bcx, ty::mk_istr(bcx_tcx(bcx)), veclen);\n+        alloc(bcx, ty::mk_str(bcx_tcx(bcx)), veclen);\n \n     let llcstr = C_cstr(bcx_ccx(bcx), s);\n     let bcx ="}, {"sha": "180b082a36b82144777661eccbf4bbe388f3ee76", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=a1d71995ec20ab03c0ef7f30424162ad0830d781", "patch": "@@ -67,7 +67,7 @@ export mk_fn;\n export mk_imm_box;\n export mk_mut_ptr;\n export mk_int;\n-export mk_istr;\n+export mk_str;\n export mk_vec;\n export mk_mach;\n export mk_native;\n@@ -331,7 +331,7 @@ const idx_f64: uint = 14u;\n \n const idx_char: uint = 15u;\n \n-const idx_istr: uint = 16u;\n+const idx_str: uint = 16u;\n \n const idx_type: uint = 17u;\n \n@@ -529,7 +529,7 @@ fn mk_mach(_cx: &ctxt, tm: &ast::ty_mach) -> t {\n \n fn mk_char(_cx: &ctxt) -> t { ret idx_char; }\n \n-fn mk_istr(_cx: &ctxt) -> t { ret idx_istr; }\n+fn mk_str(_cx: &ctxt) -> t { ret idx_str; }\n \n fn mk_tag(cx: &ctxt, did: &ast::def_id, tys: &[t]) -> t {\n     ret gen_ty(cx, ty_tag(did, tys));"}, {"sha": "0174c1f8c3ef9e4baedd6311cacbb4d406dd1bc2", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d71995ec20ab03c0ef7f30424162ad0830d781/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=a1d71995ec20ab03c0ef7f30424162ad0830d781", "patch": "@@ -326,7 +326,7 @@ fn ast_ty_to_ty(tcx: &ty::ctxt, getter: &ty_getter, ast_ty: &@ast::ty) ->\n       ast::ty_float. { typ = ty::mk_float(tcx); }\n       ast::ty_machine(tm) { typ = ty::mk_mach(tcx, tm); }\n       ast::ty_char. { typ = ty::mk_char(tcx); }\n-      ast::ty_str. { typ = ty::mk_istr(tcx); }\n+      ast::ty_str. { typ = ty::mk_str(tcx); }\n       ast::ty_box(mt) {\n         typ = ty::mk_box(tcx, ast_mt_to_mt(tcx, getter, mt));\n       }\n@@ -1298,7 +1298,7 @@ fn gather_locals(ccx: &@crate_ctxt, f: &ast::_fn, id: &ast::node_id,\n // AST fragment checking\n fn check_lit(ccx: @crate_ctxt, lit: &@ast::lit) -> ty::t {\n     alt lit.node {\n-      ast::lit_str(_) { ret ty::mk_istr(ccx.tcx); }\n+      ast::lit_str(_) { ret ty::mk_str(ccx.tcx); }\n       ast::lit_char(_) { ret ty::mk_char(ccx.tcx); }\n       ast::lit_int(_) { ret ty::mk_int(ccx.tcx); }\n       ast::lit_float(_) { ret ty::mk_float(ccx.tcx); }\n@@ -1853,7 +1853,7 @@ fn check_expr_with_unifier(fcx: &@fn_ctxt, expr: &@ast::expr, unify: &unifier,\n         bot = true;\n         alt expr_opt {\n           none. {/* do nothing */ }\n-          some(e) { check_expr_with(fcx, e, ty::mk_istr(tcx)); }\n+          some(e) { check_expr_with(fcx, e, ty::mk_str(tcx)); }\n         }\n         write::bot_ty(tcx, id);\n       }"}]}