{"sha": "21f8326cec03848368e02936a032103aa24cf6d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZjgzMjZjZWMwMzg0ODM2OGUwMjkzNmEwMzIxMDNhYTI0Y2Y2ZDI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-09-11T20:47:33Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-09-11T20:47:33Z"}, "message": "Provide suggestion for missing fields in patterns", "tree": {"sha": "7ea59c4dd393a16af87ae4f1e5f73cc06de37ae7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ea59c4dd393a16af87ae4f1e5f73cc06de37ae7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21f8326cec03848368e02936a032103aa24cf6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21f8326cec03848368e02936a032103aa24cf6d2", "html_url": "https://github.com/rust-lang/rust/commit/21f8326cec03848368e02936a032103aa24cf6d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21f8326cec03848368e02936a032103aa24cf6d2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d778203da2157f47af6d1f7ba5f44eb933ee2df1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d778203da2157f47af6d1f7ba5f44eb933ee2df1", "html_url": "https://github.com/rust-lang/rust/commit/d778203da2157f47af6d1f7ba5f44eb933ee2df1"}], "stats": {"total": 134, "additions": 96, "deletions": 38}, "files": [{"sha": "bae0a7e611af6396618991ef9cfe52dd2e5d8ba9", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 49, "deletions": 9, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/21f8326cec03848368e02936a032103aa24cf6d2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f8326cec03848368e02936a032103aa24cf6d2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=21f8326cec03848368e02936a032103aa24cf6d2", "patch": "@@ -1121,7 +1121,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             if no_accessible_unmentioned_fields {\n                 unmentioned_err = Some(self.error_no_accessible_fields(pat, &fields));\n             } else {\n-                unmentioned_err = Some(self.error_unmentioned_fields(pat, &unmentioned_fields));\n+                unmentioned_err =\n+                    Some(self.error_unmentioned_fields(pat, &unmentioned_fields, &fields));\n             }\n         }\n         match (inexistent_fields_err, unmentioned_err) {\n@@ -1376,6 +1377,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         &self,\n         pat: &Pat<'_>,\n         unmentioned_fields: &[(&ty::FieldDef, Ident)],\n+        fields: &'tcx [hir::FieldPat<'tcx>],\n     ) -> DiagnosticBuilder<'tcx> {\n         let field_names = if unmentioned_fields.len() == 1 {\n             format!(\"field `{}`\", unmentioned_fields[0].1)\n@@ -1395,14 +1397,52 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             field_names\n         );\n         err.span_label(pat.span, format!(\"missing {}\", field_names));\n-        if self.tcx.sess.teach(&err.get_code().unwrap()) {\n-            err.note(\n-                \"This error indicates that a pattern for a struct fails to specify a \\\n-                 sub-pattern for every one of the struct's fields. Ensure that each field \\\n-                 from the struct's definition is mentioned in the pattern, or use `..` to \\\n-                 ignore unwanted fields.\",\n-            );\n-        }\n+        let len = unmentioned_fields.len();\n+        let (prefix, postfix, sp) = match fields {\n+            [] => match &pat.kind {\n+                PatKind::Struct(path, [], false) => {\n+                    (\" { \", \" }\", path.span().shrink_to_hi().until(pat.span.shrink_to_hi()))\n+                }\n+                _ => return err,\n+            },\n+            [.., field] => (\n+                match pat.kind {\n+                    PatKind::Struct(_, [_, ..], _) => \", \",\n+                    _ => \"\",\n+                },\n+                \"\",\n+                field.span.shrink_to_hi(),\n+            ),\n+        };\n+        err.span_suggestion(\n+            sp,\n+            &format!(\n+                \"include the missing field{} in the pattern\",\n+                if len == 1 { \"\" } else { \"s\" },\n+            ),\n+            format!(\n+                \"{}{}{}\",\n+                prefix,\n+                unmentioned_fields\n+                    .iter()\n+                    .map(|(_, name)| name.to_string())\n+                    .collect::<Vec<_>>()\n+                    .join(\", \"),\n+                postfix,\n+            ),\n+            Applicability::MachineApplicable,\n+        );\n+        err.span_suggestion(\n+            sp,\n+            &format!(\n+                \"if you don't care about {} missing field{}, you can explicitely ignore {}\",\n+                if len == 1 { \"this\" } else { \"these\" },\n+                if len == 1 { \"\" } else { \"s\" },\n+                if len == 1 { \"it\" } else { \"them\" },\n+            ),\n+            format!(\"{}..{}\", prefix, postfix),\n+            Applicability::MachineApplicable,\n+        );\n         err\n     }\n "}, {"sha": "11402f014842d2d0a2a36dc0ed61ebaf1e1cf63b", "filename": "src/test/ui/error-codes/E0027-teach.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d778203da2157f47af6d1f7ba5f44eb933ee2df1/src%2Ftest%2Fui%2Ferror-codes%2FE0027-teach.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d778203da2157f47af6d1f7ba5f44eb933ee2df1/src%2Ftest%2Fui%2Ferror-codes%2FE0027-teach.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027-teach.rs?ref=d778203da2157f47af6d1f7ba5f44eb933ee2df1", "patch": "@@ -1,15 +0,0 @@\n-// compile-flags: -Z teach\n-\n-struct Dog {\n-    name: String,\n-    age: u32,\n-}\n-\n-fn main() {\n-    let d = Dog { name: \"Rusty\".to_string(), age: 8 };\n-\n-    match d {\n-        Dog { age: x } => {}\n-        //~^ ERROR pattern does not mention field `name`\n-    }\n-}"}, {"sha": "aa4cb9d4d18d9a6e7034c1e01596af24cd1d0aa7", "filename": "src/test/ui/error-codes/E0027-teach.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d778203da2157f47af6d1f7ba5f44eb933ee2df1/src%2Ftest%2Fui%2Ferror-codes%2FE0027-teach.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d778203da2157f47af6d1f7ba5f44eb933ee2df1/src%2Ftest%2Fui%2Ferror-codes%2FE0027-teach.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027-teach.stderr?ref=d778203da2157f47af6d1f7ba5f44eb933ee2df1", "patch": "@@ -1,11 +0,0 @@\n-error[E0027]: pattern does not mention field `name`\n-  --> $DIR/E0027-teach.rs:12:9\n-   |\n-LL |         Dog { age: x } => {}\n-   |         ^^^^^^^^^^^^^^ missing field `name`\n-   |\n-   = note: This error indicates that a pattern for a struct fails to specify a sub-pattern for every one of the struct's fields. Ensure that each field from the struct's definition is mentioned in the pattern, or use `..` to ignore unwanted fields.\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0027`."}, {"sha": "8d08e178934807125a85140a0807a5edc7123287", "filename": "src/test/ui/error-codes/E0027.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Ferror-codes%2FE0027.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Ferror-codes%2FE0027.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027.rs?ref=21f8326cec03848368e02936a032103aa24cf6d2", "patch": "@@ -7,7 +7,9 @@ fn main() {\n     let d = Dog { name: \"Rusty\".to_string(), age: 8 };\n \n     match d {\n-        Dog { age: x } => {}\n-        //~^ ERROR pattern does not mention field `name`\n+        Dog { age: x } => {} //~ ERROR pattern does not mention field `name`\n+    }\n+    match d {\n+        Dog {} => {} //~ ERROR pattern does not mention fields `name`, `age`\n     }\n }"}, {"sha": "c09f1ff1f2a8ce335d0e7314b9b699e72e028d7d", "filename": "src/test/ui/error-codes/E0027.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr?ref=21f8326cec03848368e02936a032103aa24cf6d2", "patch": "@@ -3,7 +3,31 @@ error[E0027]: pattern does not mention field `name`\n    |\n LL |         Dog { age: x } => {}\n    |         ^^^^^^^^^^^^^^ missing field `name`\n+   |\n+help: include the missing field in the pattern\n+   |\n+LL |         Dog { age: x, name } => {}\n+   |                     ^^^^^^\n+help: if you don't care about this missing field, you can explicitely ignore it\n+   |\n+LL |         Dog { age: x, .. } => {}\n+   |                     ^^^^\n+\n+error[E0027]: pattern does not mention fields `name`, `age`\n+  --> $DIR/E0027.rs:13:9\n+   |\n+LL |         Dog {} => {}\n+   |         ^^^^^^ missing fields `name`, `age`\n+   |\n+help: include the missing fields in the pattern\n+   |\n+LL |         Dog { name, age } => {}\n+   |             ^^^^^^^^^^^^^\n+help: if you don't care about these missing fields, you can explicitely ignore them\n+   |\n+LL |         Dog { .. } => {}\n+   |             ^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0027`."}, {"sha": "b913b929079c6ad119192b292c4cc9101a982d08", "filename": "src/test/ui/structs/struct-field-cfg.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr?ref=21f8326cec03848368e02936a032103aa24cf6d2", "patch": "@@ -17,6 +17,15 @@ error[E0027]: pattern does not mention field `present`\n    |\n LL |     let Foo { #[cfg(any())] present: () } = foo;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `present`\n+   |\n+help: include the missing field in the pattern\n+   |\n+LL |     let Foo { present } = foo;\n+   |             ^^^^^^^^^^^\n+help: if you don't care about this missing field, you can explicitely ignore it\n+   |\n+LL |     let Foo { .. } = foo;\n+   |             ^^^^^^\n \n error[E0026]: struct `Foo` does not have a field named `absent`\n   --> $DIR/struct-field-cfg.rs:16:42"}, {"sha": "f3e9ce76f1e2abf55d9b24e67ebe0e7e1edb593f", "filename": "src/test/ui/structs/struct-pat-derived-error.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21f8326cec03848368e02936a032103aa24cf6d2/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr?ref=21f8326cec03848368e02936a032103aa24cf6d2", "patch": "@@ -15,6 +15,15 @@ error[E0027]: pattern does not mention fields `b`, `c`\n    |\n LL |         let A { x, y } = self.d;\n    |             ^^^^^^^^^^ missing fields `b`, `c`\n+   |\n+help: include the missing fields in the pattern\n+   |\n+LL |         let A { x, y, b, c } = self.d;\n+   |                     ^^^^^^\n+help: if you don't care about these missing fields, you can explicitely ignore them\n+   |\n+LL |         let A { x, y, .. } = self.d;\n+   |                     ^^^^\n \n error: aborting due to 3 previous errors\n "}]}