{"sha": "29516c3129dbea594ea9b68f9bdf665dda909f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NTE2YzMxMjlkYmVhNTk0ZWE5YjY4ZjliZGY2NjVkZGE5MDlmNDQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-01T09:22:37Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-01T09:22:37Z"}, "message": "improve out of bounds error message", "tree": {"sha": "8868b49e8d616a3e7065ea906ea8fc80e8218966", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8868b49e8d616a3e7065ea906ea8fc80e8218966"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29516c3129dbea594ea9b68f9bdf665dda909f44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXTqldAAoJEFbW7qD8Z6xGgisP/2dNknPJn7Gogsgm4rgsn0vq\nMWg1gblYby4tAuK4jZFpn+MXfh/n9NqdxktxgYwwsBOqcA5v0W3HnQm1odxcc1Kx\nu5V/7CChiB5b0CqVf1Yv/z+ZOrK/7GN6nFLFlGEO7QZa9gZ3U+qSlqAKoAryxDxH\nQfm3rhI6LjVvSdfb0xW1FdQmmq0zAKxSYpjC0t/glDoKExuQ4EAXHNupTEffAvCg\nFl1qJxKJ+gyn0/iHNZALIG8Szc+axqOP0+KoFRuvbFrv8NFsmMig2X4fMDq+qK13\nJymC5uxSgNWL9+DrxRIC5bBD7GNA+/ThCsZI8H1IKs90BP8woGq7P5qz97Cb3MAi\nd3WoLSb4NALz8eKii1F1fe11eSje4h728Bj2NOrKKRl3QY0HD8ED8EvYZAloITjJ\n0mhzONoceMPgnb3tSuTWTci1hE4fpXJ8uJu4Noqg3xYUl3ZRd2qR3rUzLEafiRDb\nQpYIKqkJ//xCJ56e9C0SNNXbMsSdyVr8jAfT5xJ6N2jZakyGFwn5GfrUJMU0+eyr\nFrXS/wdPrD8XACkSeCooV0dsbNFNSwup0XI+tQHdtU6cUtE+R7LCtvO/opDrQW9x\nATd0TsiA6d1d6nUZ1YO/eYyL/qWX/s6iX/Arc2mvEZ78XR855+q3Os0m/kf04WKx\n6351WhUcz7eExo5x479J\n=hDA7\n-----END PGP SIGNATURE-----", "payload": "tree 8868b49e8d616a3e7065ea906ea8fc80e8218966\nparent 12c2e5fab27daaff5dada1fbc18d0b193a488ecd\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464772957 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464772957 +0200\n\nimprove out of bounds error message"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29516c3129dbea594ea9b68f9bdf665dda909f44", "html_url": "https://github.com/rust-lang/rust/commit/29516c3129dbea594ea9b68f9bdf665dda909f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29516c3129dbea594ea9b68f9bdf665dda909f44/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12c2e5fab27daaff5dada1fbc18d0b193a488ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/12c2e5fab27daaff5dada1fbc18d0b193a488ecd", "html_url": "https://github.com/rust-lang/rust/commit/12c2e5fab27daaff5dada1fbc18d0b193a488ecd"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "7d252658ba2d69d655335474c811d157f543d056", "filename": "src/error.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29516c3129dbea594ea9b68f9bdf665dda909f44/src%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29516c3129dbea594ea9b68f9bdf665dda909f44/src%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ferror.rs?ref=29516c3129dbea594ea9b68f9bdf665dda909f44", "patch": "@@ -1,16 +1,17 @@\n use std::error::Error;\n use std::fmt;\n use rustc::mir::repr as mir;\n+use memory::Pointer;\n \n #[derive(Clone, Debug)]\n pub enum EvalError {\n     DanglingPointerDeref,\n     InvalidBool,\n     InvalidDiscriminant,\n     PointerOutOfBounds {\n-        offset: usize,\n+        ptr: Pointer,\n         size: usize,\n-        len: usize,\n+        allocation_size: usize,\n     },\n     ReadPointerAsBytes,\n     ReadBytesAsPointer,\n@@ -53,7 +54,10 @@ impl Error for EvalError {\n impl fmt::Display for EvalError {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match *self {\n-            EvalError::PointerOutOfBounds { offset, size, len } => write!(f, \"pointer offset ({} + {}) outside bounds ({}) of allocation\", offset, size, len),\n+            EvalError::PointerOutOfBounds { ptr, size, allocation_size } => {\n+                write!(f, \"memory access of {}..{} outside bounds of allocation {} which has size {}\",\n+                       ptr.offset, ptr.offset + size, ptr.alloc_id, allocation_size)\n+            },\n             _ => write!(f, \"{}\", self.description()),\n         }\n     }"}, {"sha": "6cae30d39434e2bc582bec4c22727bfba431c2c4", "filename": "src/memory.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29516c3129dbea594ea9b68f9bdf665dda909f44/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29516c3129dbea594ea9b68f9bdf665dda909f44/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=29516c3129dbea594ea9b68f9bdf665dda909f44", "patch": "@@ -181,9 +181,9 @@ impl Memory {\n         let alloc = self.get(ptr.alloc_id)?;\n         if ptr.offset + size > alloc.bytes.len() {\n             return Err(EvalError::PointerOutOfBounds {\n-                offset: ptr.offset,\n+                ptr: ptr,\n                 size: size,\n-                len: alloc.bytes.len(),\n+                allocation_size: alloc.bytes.len(),\n             });\n         }\n         Ok(&alloc.bytes[ptr.offset..ptr.offset + size])\n@@ -193,9 +193,9 @@ impl Memory {\n         let alloc = self.get_mut(ptr.alloc_id)?;\n         if ptr.offset + size > alloc.bytes.len() {\n             return Err(EvalError::PointerOutOfBounds {\n-                offset: ptr.offset,\n+                ptr: ptr,\n                 size: size,\n-                len: alloc.bytes.len(),\n+                allocation_size: alloc.bytes.len(),\n             });\n         }\n         Ok(&mut alloc.bytes[ptr.offset..ptr.offset + size])"}, {"sha": "0cadd76cccf34e864b18ffdf46273c840759d502", "filename": "tests/compile-fail/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29516c3129dbea594ea9b68f9bdf665dda909f44/tests%2Fcompile-fail%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29516c3129dbea594ea9b68f9bdf665dda909f44/tests%2Fcompile-fail%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ferrors.rs?ref=29516c3129dbea594ea9b68f9bdf665dda909f44", "patch": "@@ -36,7 +36,7 @@ fn undefined_byte_read() -> u8 {\n #[miri_run]\n fn out_of_bounds_read() -> u8 {\n     let v: Vec<u8> = vec![1, 2];\n-    unsafe { *v.get_unchecked(5) } //~ ERROR: pointer offset (5 + 1) outside bounds (2) of allocation\n+    unsafe { *v.get_unchecked(5) } //~ ERROR: memory access of 5..6 outside bounds of allocation 11 which has size 2\n }\n \n #[miri_run]"}]}