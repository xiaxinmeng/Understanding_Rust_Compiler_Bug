{"sha": "226d79c30aed5c0fb58c99047f88f98ac2eed689", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNmQ3OWMzMGFlZDVjMGZiNThjOTkwNDdmODhmOThhYzJlZWQ2ODk=", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2018-09-01T23:55:53Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2018-09-02T00:14:39Z"}, "message": "tidy: Avoid \"let ref mut = ...\"\n\nThis also eliminates a clippy warning.", "tree": {"sha": "3b9aad7680d98c7be34248bc11c679327a3e89c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b9aad7680d98c7be34248bc11c679327a3e89c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/226d79c30aed5c0fb58c99047f88f98ac2eed689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/226d79c30aed5c0fb58c99047f88f98ac2eed689", "html_url": "https://github.com/rust-lang/rust/commit/226d79c30aed5c0fb58c99047f88f98ac2eed689", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/226d79c30aed5c0fb58c99047f88f98ac2eed689/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd20cdf7e07d87cd346f6b71d0a46311b79218ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd20cdf7e07d87cd346f6b71d0a46311b79218ab", "html_url": "https://github.com/rust-lang/rust/commit/cd20cdf7e07d87cd346f6b71d0a46311b79218ab"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "52913d7cfba3ae887a05ffb609a678e629d477fc", "filename": "src/tools/tidy/src/pal.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/226d79c30aed5c0fb58c99047f88f98ac2eed689/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/226d79c30aed5c0fb58c99047f88f98ac2eed689/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs?ref=226d79c30aed5c0fb58c99047f88f98ac2eed689", "patch": "@@ -88,22 +88,22 @@ const EXCEPTION_PATHS: &[&str] = &[\n ];\n \n pub fn check(path: &Path, bad: &mut bool) {\n-    let ref mut contents = String::new();\n+    let mut contents = String::new();\n     // Sanity check that the complex parsing here works\n-    let ref mut saw_target_arch = false;\n-    let ref mut saw_cfg_bang = false;\n+    let mut saw_target_arch = false;\n+    let mut saw_cfg_bang = false;\n     super::walk(path, &mut super::filter_dirs, &mut |file| {\n         let filestr = file.to_string_lossy().replace(\"\\\\\", \"/\");\n         if !filestr.ends_with(\".rs\") { return }\n \n         let is_exception_path = EXCEPTION_PATHS.iter().any(|s| filestr.contains(&**s));\n         if is_exception_path { return }\n \n-        check_cfgs(contents, &file, bad, saw_target_arch, saw_cfg_bang);\n+        check_cfgs(&mut contents, &file, bad, &mut saw_target_arch, &mut saw_cfg_bang);\n     });\n \n-    assert!(*saw_target_arch);\n-    assert!(*saw_cfg_bang);\n+    assert!(saw_target_arch);\n+    assert!(saw_cfg_bang);\n }\n \n fn check_cfgs(contents: &mut String, file: &Path,"}]}