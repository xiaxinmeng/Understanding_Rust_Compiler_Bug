{"sha": "2504c8d1ee4f904d3ecd95ec19cbed22ed046295", "node_id": "C_kwDOAAsO6NoAKDI1MDRjOGQxZWU0ZjkwNGQzZWNkOTVlYzE5Y2JlZDIyZWQwNDYyOTU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-22T04:20:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-22T04:20:58Z"}, "message": "Rollup merge of #106113 - krasimirgg:llvm-16-ext-tyid, r=nikic\n\nllvm-wrapper: adapt for LLVM API change\n\nNo functional changes intended.\n\nThe LLVM commit https://github.com/llvm/llvm-project/commit/e6b02214c68df2c9f826e02310c9352ac652e456 added `TargetExtTyID` to the `TypeID` enum. This adapts `RustWrapper` accordingly.", "tree": {"sha": "cf5aac25f2e0a6e1f4d36e3d3b6dab52c33c1234", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf5aac25f2e0a6e1f4d36e3d3b6dab52c33c1234"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2504c8d1ee4f904d3ecd95ec19cbed22ed046295", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzLmqCRBK7hj4Ov3rIwAA4S8IAGDomunVHoXxFl18xOkgzIjT\npvwE5EdNmSKXyGW9vCsg7Z7YVUL5KzRdNCaPriMY2KiIsm48ZwKKzDvP/M9qI6Lk\nT4ZeMEHc4f1T1dAuTDeFsQAmpj8hKi92sDAU9rLjHVh3eTvvDx/6iI1rBv587TAT\nH4uVF9AldX96gNvYfy/BkR8j/Jc09AGK0+mDsMWDrS/DGKMczhsy6pYS8n8eO7TZ\n04zJqc7IVfYZDgNviA6H5nKBQ9C2lWV4vqS1BPxvyJrcKrk5tAMUBXLvBtfASmar\nTkaznb1WHoKb0mfUuWTjRA7ogjgKtjI0GBgERE4Ieb6Cdp7O9BI3DH9VQFmXkQY=\n=Mq+J\n-----END PGP SIGNATURE-----\n", "payload": "tree cf5aac25f2e0a6e1f4d36e3d3b6dab52c33c1234\nparent bdcfa6c9aa9117f9727cc9fde42eeefc2794a233\nparent 799fa60c07784bb033d1e1bcdcc7f671ea47d617\nauthor Michael Goulet <michael@errs.io> 1674361258 -0500\ncommitter GitHub <noreply@github.com> 1674361258 -0500\n\nRollup merge of #106113 - krasimirgg:llvm-16-ext-tyid, r=nikic\n\nllvm-wrapper: adapt for LLVM API change\n\nNo functional changes intended.\n\nThe LLVM commit https://github.com/llvm/llvm-project/commit/e6b02214c68df2c9f826e02310c9352ac652e456 added `TargetExtTyID` to the `TypeID` enum. This adapts `RustWrapper` accordingly.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2504c8d1ee4f904d3ecd95ec19cbed22ed046295", "html_url": "https://github.com/rust-lang/rust/commit/2504c8d1ee4f904d3ecd95ec19cbed22ed046295", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2504c8d1ee4f904d3ecd95ec19cbed22ed046295/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdcfa6c9aa9117f9727cc9fde42eeefc2794a233", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdcfa6c9aa9117f9727cc9fde42eeefc2794a233", "html_url": "https://github.com/rust-lang/rust/commit/bdcfa6c9aa9117f9727cc9fde42eeefc2794a233"}, {"sha": "799fa60c07784bb033d1e1bcdcc7f671ea47d617", "url": "https://api.github.com/repos/rust-lang/rust/commits/799fa60c07784bb033d1e1bcdcc7f671ea47d617", "html_url": "https://github.com/rust-lang/rust/commit/799fa60c07784bb033d1e1bcdcc7f671ea47d617"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "87b0e1273eb7761ed06ab0390704af2ae8c2b645", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2504c8d1ee4f904d3ecd95ec19cbed22ed046295/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2504c8d1ee4f904d3ecd95ec19cbed22ed046295/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=2504c8d1ee4f904d3ecd95ec19cbed22ed046295", "patch": "@@ -1349,18 +1349,16 @@ extern \"C\" LLVMTypeKind LLVMRustGetTypeKind(LLVMTypeRef Ty) {\n     return LLVMBFloatTypeKind;\n   case Type::X86_AMXTyID:\n     return LLVMX86_AMXTypeKind;\n-#if LLVM_VERSION_GE(15, 0) && LLVM_VERSION_LT(16, 0)\n-  case Type::DXILPointerTyID:\n-    report_fatal_error(\"Rust does not support DirectX typed pointers.\");\n-    break;\n-#endif\n-#if LLVM_VERSION_GE(16, 0)\n-  case Type::TypedPointerTyID:\n-    report_fatal_error(\"Rust does not support typed pointers.\");\n-    break;\n-#endif\n+  default:\n+    {\n+      std::string error;\n+      llvm::raw_string_ostream stream(error);\n+      stream << \"Rust does not support the TypeID: \" << unwrap(Ty)->getTypeID()\n+             << \" for the type: \" << *unwrap(Ty);\n+      stream.flush();\n+      report_fatal_error(error.c_str());\n+    }\n   }\n-  report_fatal_error(\"Unhandled TypeID.\");\n }\n \n DEFINE_SIMPLE_CONVERSION_FUNCTIONS(SMDiagnostic, LLVMSMDiagnosticRef)"}]}