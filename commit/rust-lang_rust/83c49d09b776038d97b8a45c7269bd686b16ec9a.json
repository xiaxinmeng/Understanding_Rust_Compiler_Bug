{"sha": "83c49d09b776038d97b8a45c7269bd686b16ec9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYzQ5ZDA5Yjc3NjAzOGQ5N2I4YTQ1YzcyNjliZDY4NmIxNmVjOWE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-02T22:32:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-02T22:32:45Z"}, "message": "Rollup merge of #84832 - Stupremee:dont-print-vis-in-external-traits, r=jyn514\n\nDo not print visibility in external traits\n\nThis PR fixes the bug that caused traits, which were re-exported, having visibility modifiers in front of methods, which is invalid.\n\nIt would be nice to add a test for this, but I don't even know if tests with multiple crates are possible.\n\nResolves #81274", "tree": {"sha": "355c50153da83f2ae8df9c8a98e2f6b4a4d58d82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/355c50153da83f2ae8df9c8a98e2f6b4a4d58d82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83c49d09b776038d97b8a45c7269bd686b16ec9a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjyiOCRBK7hj4Ov3rIwAAS58IADBVKnedqHPKKdPDIXrGL7Un\n8IE4VPUiF+S+O6HNdYjgOKnGrFpFBkYjgV4UosfLqZQKQ7Me8gVl855dVpuPgZU6\nZof0yUzZnhQreEy72uSdNvV50f0guk3B7FCjYZKPW99oOi0bEsQT7m02aikGFORL\nN/zb34XPkTNgJaDwdHVeMcjekTGZGNL4zebGLSYaonqFsMZvFlAvAH4qB2yhjxPi\ne/bpE0G/fKghgwRHq6iOOVvwsdMlxIIs866MpAEEWTWo4KXtGI9MqAjUML7/ZhTU\njTstSkyTDU/RLqQNB1tIAGcA18oiIGqthB8qtcgHzHnnHeftazK4N94ja/FiRLo=\n=dBQu\n-----END PGP SIGNATURE-----\n", "payload": "tree 355c50153da83f2ae8df9c8a98e2f6b4a4d58d82\nparent b0c7e64de0d2a7dfb172949c4d1cb01ee144025b\nparent 9ca6d5863be4ca847458a8b42e995b98406ad015\nauthor Dylan DPC <dylan.dpc@gmail.com> 1619994765 +0200\ncommitter GitHub <noreply@github.com> 1619994765 +0200\n\nRollup merge of #84832 - Stupremee:dont-print-vis-in-external-traits, r=jyn514\n\nDo not print visibility in external traits\n\nThis PR fixes the bug that caused traits, which were re-exported, having visibility modifiers in front of methods, which is invalid.\n\nIt would be nice to add a test for this, but I don't even know if tests with multiple crates are possible.\n\nResolves #81274\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83c49d09b776038d97b8a45c7269bd686b16ec9a", "html_url": "https://github.com/rust-lang/rust/commit/83c49d09b776038d97b8a45c7269bd686b16ec9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83c49d09b776038d97b8a45c7269bd686b16ec9a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "html_url": "https://github.com/rust-lang/rust/commit/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b"}, {"sha": "9ca6d5863be4ca847458a8b42e995b98406ad015", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ca6d5863be4ca847458a8b42e995b98406ad015", "html_url": "https://github.com/rust-lang/rust/commit/9ca6d5863be4ca847458a8b42e995b98406ad015"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "6ad635012b134bb3f4639bf425d6a4e10051595d", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/83c49d09b776038d97b8a45c7269bd686b16ec9a/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c49d09b776038d97b8a45c7269bd686b16ec9a/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=83c49d09b776038d97b8a45c7269bd686b16ec9a", "patch": "@@ -19,7 +19,7 @@ use crate::clean::{self, Attributes, AttributesExt, GetDefId, ToSource};\n use crate::core::DocContext;\n use crate::formats::item_type::ItemType;\n \n-use super::Clean;\n+use super::{Clean, Visibility};\n \n type Attrs<'hir> = rustc_middle::ty::Attributes<'hir>;\n \n@@ -193,8 +193,18 @@ crate fn record_extern_fqn(cx: &mut DocContext<'_>, did: DefId, kind: ItemType)\n }\n \n crate fn build_external_trait(cx: &mut DocContext<'_>, did: DefId) -> clean::Trait {\n-    let trait_items =\n-        cx.tcx.associated_items(did).in_definition_order().map(|item| item.clean(cx)).collect();\n+    let trait_items = cx\n+        .tcx\n+        .associated_items(did)\n+        .in_definition_order()\n+        .map(|item| {\n+            // When building an external trait, the cleaned trait will have all items public,\n+            // which causes methods to have a `pub` prefix, which is invalid since items in traits\n+            // can not have a visibility prefix. Thus we override the visibility here manually.\n+            // See https://github.com/rust-lang/rust/issues/81274\n+            clean::Item { visibility: Visibility::Inherited, ..item.clean(cx) }\n+        })\n+        .collect();\n \n     let predicates = cx.tcx.predicates_of(did);\n     let generics = (cx.tcx.generics_of(did), predicates).clean(cx);"}, {"sha": "1e8d0b8e02a93d8c0e7966fe31ba782aea3dd443", "filename": "src/test/rustdoc/auxiliary/trait-visibility.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83c49d09b776038d97b8a45c7269bd686b16ec9a/src%2Ftest%2Frustdoc%2Fauxiliary%2Ftrait-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c49d09b776038d97b8a45c7269bd686b16ec9a/src%2Ftest%2Frustdoc%2Fauxiliary%2Ftrait-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Ftrait-visibility.rs?ref=83c49d09b776038d97b8a45c7269bd686b16ec9a", "patch": "@@ -0,0 +1,3 @@\n+pub trait Bar {\n+    fn foo();\n+}"}, {"sha": "8ba3ee03a74f3dba69aabb51a9ab7f95ef2c8fef", "filename": "src/test/rustdoc/trait-visibility.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/83c49d09b776038d97b8a45c7269bd686b16ec9a/src%2Ftest%2Frustdoc%2Ftrait-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c49d09b776038d97b8a45c7269bd686b16ec9a/src%2Ftest%2Frustdoc%2Ftrait-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-visibility.rs?ref=83c49d09b776038d97b8a45c7269bd686b16ec9a", "patch": "@@ -0,0 +1,8 @@\n+// aux-build:trait-visibility.rs\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate trait_visibility;\n+\n+// @has foo/trait.Bar.html '//a[@href=\"#tymethod.foo\"]/..' \"fn foo()\"\n+pub use trait_visibility::Bar;"}]}