{"sha": "1839ec5ef885c04c585be4b3af7a3a9c269efddb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MzllYzVlZjg4NWMwNGM1ODViZTRiM2FmN2EzYTljMjY5ZWZkZGI=", "commit": {"author": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-11T15:30:49Z"}, "committer": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-26T13:07:04Z"}, "message": "Consistently use C_uint_big for discriminants", "tree": {"sha": "9bfb98be9e1693aa77f1837e01b4c2da33ab0f67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bfb98be9e1693aa77f1837e01b4c2da33ab0f67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1839ec5ef885c04c585be4b3af7a3a9c269efddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1839ec5ef885c04c585be4b3af7a3a9c269efddb", "html_url": "https://github.com/rust-lang/rust/commit/1839ec5ef885c04c585be4b3af7a3a9c269efddb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1839ec5ef885c04c585be4b3af7a3a9c269efddb/comments", "author": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7c8cc4b778b2fcf4193a3f7fd9cf8c323ebcf5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c8cc4b778b2fcf4193a3f7fd9cf8c323ebcf5c", "html_url": "https://github.com/rust-lang/rust/commit/b7c8cc4b778b2fcf4193a3f7fd9cf8c323ebcf5c"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "c39612e3ab093c87941b279c5207326b24309cda", "filename": "src/librustc_trans/mir/place.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1839ec5ef885c04c585be4b3af7a3a9c269efddb/src%2Flibrustc_trans%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1839ec5ef885c04c585be4b3af7a3a9c269efddb/src%2Flibrustc_trans%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fplace.rs?ref=1839ec5ef885c04c585be4b3af7a3a9c269efddb", "patch": "@@ -16,7 +16,7 @@ use rustc::mir::tcx::PlaceTy;\n use rustc_data_structures::indexed_vec::Idx;\n use base;\n use builder::Builder;\n-use common::{CodegenCx, C_undef, C_usize, C_u8, C_u32, C_uint, C_int, C_null, C_uint_big};\n+use common::{CodegenCx, C_undef, C_usize, C_u8, C_u32, C_uint, C_null, C_uint_big};\n use consts;\n use type_of::LayoutLlvmExt;\n use type_::Type;\n@@ -331,9 +331,11 @@ impl<'a, 'tcx> PlaceRef<'tcx> {\n                 let ptr = self.project_field(bx, 0);\n                 let to = self.layout.ty.ty_adt_def().unwrap()\n                     .discriminant_for_variant(bx.tcx(), variant_index)\n-                    .val as u64;\n-                bx.store(C_int(ptr.layout.llvm_type(bx.cx), to as i64),\n-                    ptr.llval, ptr.align);\n+                    .val;\n+                bx.store(\n+                    C_uint_big(ptr.layout.llvm_type(bx.cx), to),\n+                    ptr.llval,\n+                    ptr.align);\n             }\n             layout::Variants::NicheFilling {\n                 dataful_variant,"}]}