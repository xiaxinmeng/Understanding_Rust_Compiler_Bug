{"sha": "0327c2e04106e258949dbf96e58bb582e2960c6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMjdjMmUwNDEwNmUyNTg5NDlkYmY5NmU1OGJiNTgyZTI5NjBjNmI=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-03-08T14:19:57Z"}, "committer": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-03-08T14:20:18Z"}, "message": "Output help instead of suggestion in `if_then_some_else_none` diagnose", "tree": {"sha": "c07860205ecd2c770c7a0d2020c70d17634fff05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c07860205ecd2c770c7a0d2020c70d17634fff05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0327c2e04106e258949dbf96e58bb582e2960c6b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJIBAABCAAyFiEEgbkHgdnD1idvtMJ0QJ1+7h56cWoFAmBGMv8UHHl1c3VrdGFu\nQG1hZ3Vyby5kZXYACgkQQJ1+7h56cWrljBAA0/u3Uo9jb0ISI51Kxh4O8MmqpRbr\nVsb3PyYW/jjrbVHoEYOH4nmikW3i9/eAnZ/Xl4Kt97LTyQBU+hO7c/nNulQ4TMdp\nD52J8FmwMczp6yKqpdvkYthBcUS30qYfZRoqsV/Bu2/Byp3Qlm77K8d8G/ZUp9k4\n+lAPmuDVoBuL22+ULA0m75g6ja0Gs6FYMOoJIL4PujwqOx03v5JxyWnDW2qPdZCP\nIK9zuA144jfdWXB4MXEIX1JgEW4WVTdHSMc0dH7tBFEC82KnOY517FgV+X0tJt2x\nN/QC6Hvlsgy1x3HzM8zfc7RoSNNQytWc0tRKo11F7+lUPwgg7z2ZHMuglAEwZ20d\nQIwMWTRnAmg4+lGYPpim1G+cx/c5b1JL6cgsVr/uwvIGGptL3c1S5THwyLkUzH4j\nN8cTNxP8gfxIU7lCiBKxALymHmLfs29JHRRDViRh9utMtFC+IwjoQO7O7i02KB86\nas4iE4Cn3TmvhnPDljoNTMx1r5II4LwMpuEYLJsd/8lYftpjnNwFO6NxWYukGzcZ\ncnJWUqURkfSA5wdVr+nuuf6oKfcQIQx2Sm2fDTgqaXZe5hiXa1OfE41w0EEotqua\nEE9FSNyaKeE9tDiOfiYDIqn/RLMP9vi2NwnF96Svo7jvOLn8KqivgnZM1qjCXO6a\n5NcGw2+yvApASuE=\n=x7cR\n-----END PGP SIGNATURE-----", "payload": "tree c07860205ecd2c770c7a0d2020c70d17634fff05\nparent f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1615213197 +0900\ncommitter Yusuke Tanaka <yusuktan@maguro.dev> 1615213218 +0900\n\nOutput help instead of suggestion in `if_then_some_else_none` diagnose\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0327c2e04106e258949dbf96e58bb582e2960c6b", "html_url": "https://github.com/rust-lang/rust/commit/0327c2e04106e258949dbf96e58bb582e2960c6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0327c2e04106e258949dbf96e58bb582e2960c6b/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "html_url": "https://github.com/rust-lang/rust/commit/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "569a7f06f95bfb7f46359272c6186398ee2d645f", "filename": "clippy_lints/src/if_then_some_else_none.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0327c2e04106e258949dbf96e58bb582e2960c6b/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0327c2e04106e258949dbf96e58bb582e2960c6b/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs?ref=0327c2e04106e258949dbf96e58bb582e2960c6b", "patch": "@@ -1,6 +1,5 @@\n use crate::utils;\n use if_chain::if_chain;\n-use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n@@ -83,22 +82,20 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n             if let ExprKind::Path(ref els_call_qpath) = els_expr.kind;\n             if utils::match_qpath(els_call_qpath, &utils::paths::OPTION_NONE);\n             then {\n-                let mut applicability = Applicability::MachineApplicable;\n-                let cond_snip = utils::snippet_with_applicability(cx, cond.span, \"[condition]\", &mut applicability);\n-                let arg_snip = utils::snippet_with_applicability(cx, then_arg.span, \"\", &mut applicability);\n-                let sugg = format!(\n-                    \"{}.then(|| {{ /* snippet */ {} }})\",\n+                let cond_snip = utils::snippet(cx, cond.span, \"[condition]\");\n+                let arg_snip = utils::snippet(cx, then_arg.span, \"\");\n+                let help = format!(\n+                    \"consider using `bool::then` like: `{}.then(|| {{ /* snippet */ {} }})`\",\n                     cond_snip,\n                     arg_snip,\n                 );\n-                utils::span_lint_and_sugg(\n+                utils::span_lint_and_help(\n                     cx,\n                     IF_THEN_SOME_ELSE_NONE,\n                     expr.span,\n                     \"this could be simplified with `bool::then`\",\n-                    \"try this\",\n-                    sugg,\n-                    applicability,\n+                    None,\n+                    &help,\n                 );\n             }\n         }"}, {"sha": "14a5fe76245aa50940fcaccc00cdeb0d7156f77a", "filename": "tests/ui/if_then_some_else_none.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0327c2e04106e258949dbf96e58bb582e2960c6b/tests%2Fui%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0327c2e04106e258949dbf96e58bb582e2960c6b/tests%2Fui%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.rs?ref=0327c2e04106e258949dbf96e58bb582e2960c6b", "patch": "@@ -55,7 +55,7 @@ fn _msrv_1_49() {\n     // `bool::then` was stabilized in 1.50. Do not lint this\n     let _ = if foo() {\n         println!(\"true!\");\n-        Some(\"foo\")\n+        Some(149)\n     } else {\n         None\n     };\n@@ -65,7 +65,7 @@ fn _msrv_1_50() {\n     #![clippy::msrv = \"1.50\"]\n     let _ = if foo() {\n         println!(\"true!\");\n-        Some(\"foo\")\n+        Some(150)\n     } else {\n         None\n     };"}, {"sha": "722c52b1cb43ae826d78323aa49aef22fe8d5bcd", "filename": "tests/ui/if_then_some_else_none.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0327c2e04106e258949dbf96e58bb582e2960c6b/tests%2Fui%2Fif_then_some_else_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0327c2e04106e258949dbf96e58bb582e2960c6b/tests%2Fui%2Fif_then_some_else_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.stderr?ref=0327c2e04106e258949dbf96e58bb582e2960c6b", "patch": "@@ -8,21 +8,24 @@ LL | |         Some(\"foo\")\n LL | |     } else {\n LL | |         None\n LL | |     };\n-   | |_____^ help: try this: `foo().then(|| { /* snippet */ \"foo\" })`\n+   | |_____^\n    |\n    = note: `-D clippy::if-then-some-else-none` implied by `-D warnings`\n+   = help: consider using `bool::then` like: `foo().then(|| { /* snippet */ \"foo\" })`\n \n error: this could be simplified with `bool::then`\n   --> $DIR/if_then_some_else_none.rs:66:13\n    |\n LL |       let _ = if foo() {\n    |  _____________^\n LL | |         println!(\"true!\");\n-LL | |         Some(\"foo\")\n+LL | |         Some(150)\n LL | |     } else {\n LL | |         None\n LL | |     };\n-   | |_____^ help: try this: `foo().then(|| { /* snippet */ \"foo\" })`\n+   | |_____^\n+   |\n+   = help: consider using `bool::then` like: `foo().then(|| { /* snippet */ 150 })`\n \n error: aborting due to 2 previous errors\n "}]}