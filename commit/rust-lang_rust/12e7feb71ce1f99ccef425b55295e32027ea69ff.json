{"sha": "12e7feb71ce1f99ccef425b55295e32027ea69ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZTdmZWI3MWNlMWY5OWNjZWY0MjViNTUyOTVlMzIwMjdlYTY5ZmY=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-21T19:15:08Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-21T19:15:22Z"}, "message": "The T_taskptr is already included in the n_args, don't add it twice.", "tree": {"sha": "52d3c92ca0bf15f6b5122fb0e3db9e9efd92d296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52d3c92ca0bf15f6b5122fb0e3db9e9efd92d296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12e7feb71ce1f99ccef425b55295e32027ea69ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12e7feb71ce1f99ccef425b55295e32027ea69ff", "html_url": "https://github.com/rust-lang/rust/commit/12e7feb71ce1f99ccef425b55295e32027ea69ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12e7feb71ce1f99ccef425b55295e32027ea69ff/comments", "author": null, "committer": null, "parents": [{"sha": "b9bde9fcfa40f06f51072fa97b2e858044498527", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9bde9fcfa40f06f51072fa97b2e858044498527", "html_url": "https://github.com/rust-lang/rust/commit/b9bde9fcfa40f06f51072fa97b2e858044498527"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "40ce28964b325459753bceca2ffb8abb568f3d4d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12e7feb71ce1f99ccef425b55295e32027ea69ff/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e7feb71ce1f99ccef425b55295e32027ea69ff/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=12e7feb71ce1f99ccef425b55295e32027ea69ff", "patch": "@@ -841,13 +841,11 @@ fn decl_upcall_glue(ModuleRef llmod, type_names tn, uint _n) -> ValueRef {\n }\n \n fn get_upcall(&hashmap[str, ValueRef] upcalls,\n-              type_names tn, ModuleRef llmod,\n-              str name, int n_args) -> ValueRef {\n+              ModuleRef llmod, str name, int n_args) -> ValueRef {\n     if (upcalls.contains_key(name)) {\n         ret upcalls.get(name);\n     }\n-    auto inputs = vec(T_taskptr(tn));\n-    inputs += _vec.init_elt[TypeRef](T_int(), n_args as uint);\n+    auto inputs = _vec.init_elt[TypeRef](T_int(), n_args as uint);\n     auto output = T_int();\n     auto f = decl_cdecl_fn(llmod, name, T_fn(inputs, output));\n     upcalls.insert(name, f);\n@@ -868,7 +866,7 @@ fn trans_upcall2(builder b, @glue_fns glues,\n                  type_names tn, ModuleRef llmod, str name,\n                  vec[ValueRef] args) -> ValueRef {\n     let int n = (_vec.len[ValueRef](args) as int);\n-    let ValueRef llupcall = get_upcall(upcalls, tn, llmod, name, n);\n+    let ValueRef llupcall = get_upcall(upcalls, llmod, name, n);\n     llupcall = llvm.LLVMConstPointerCast(llupcall, T_int());\n \n     let ValueRef llglue = glues.upcall_glues.(n);"}]}