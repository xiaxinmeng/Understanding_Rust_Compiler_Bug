{"sha": "1c4fb909ffad8328983d893f2fefdb17215f2b21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNGZiOTA5ZmZhZDgzMjg5ODNkODkzZjJmZWZkYjE3MjE1ZjJiMjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-02-27T20:04:15Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-03-01T00:58:55Z"}, "message": "Make Int::pow() take exp as u32 instead usize", "tree": {"sha": "b53f0a0dbca3cfa46cf74f6dd3d43d598314b019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b53f0a0dbca3cfa46cf74f6dd3d43d598314b019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c4fb909ffad8328983d893f2fefdb17215f2b21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4fb909ffad8328983d893f2fefdb17215f2b21", "html_url": "https://github.com/rust-lang/rust/commit/1c4fb909ffad8328983d893f2fefdb17215f2b21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c4fb909ffad8328983d893f2fefdb17215f2b21/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "890293655251c372ea99694c0c9f0795e2663286", "url": "https://api.github.com/repos/rust-lang/rust/commits/890293655251c372ea99694c0c9f0795e2663286", "html_url": "https://github.com/rust-lang/rust/commit/890293655251c372ea99694c0c9f0795e2663286"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "318799f59a8101f48a41e9f02d6aa89f6ddc88ff", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=1c4fb909ffad8328983d893f2fefdb17215f2b21", "patch": "@@ -372,9 +372,10 @@ pub trait Int\n     #[unstable(feature = \"core\",\n                reason = \"pending integer conventions\")]\n     #[inline]\n-    fn pow(self, mut exp: uint) -> Self {\n+    fn pow(self, mut exp: u32) -> Self {\n         let mut base = self;\n         let mut acc: Self = Int::one();\n+\n         while exp > 0 {\n             if (exp & 1) == 1 {\n                 acc = acc * base;"}, {"sha": "c33729876ccf3c5777fdaed6d4f51cde5c14039c", "filename": "src/libcoretest/num/int_macros.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Flibcoretest%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Flibcoretest%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fint_macros.rs?ref=1c4fb909ffad8328983d893f2fefdb17215f2b21", "patch": "@@ -201,6 +201,17 @@ mod tests {\n         assert_eq!(FromStrRadix::from_str_radix(\"Z\", 35).ok(), None::<$T>);\n         assert_eq!(FromStrRadix::from_str_radix(\"-9\", 2).ok(), None::<$T>);\n     }\n+\n+    #[test]\n+    fn test_pow() {\n+        let mut r = 2 as $T;\n+\n+        assert_eq!(r.pow(2u32), 4 as $T);\n+        assert_eq!(r.pow(0u32), 1 as $T);\n+        r = -2 as $T;\n+        assert_eq!(r.pow(2u32), 4 as $T);\n+        assert_eq!(r.pow(3u32), -8 as $T);\n+    }\n }\n \n )}"}, {"sha": "d776079efaeeccd00b8cda8e8a180ba26bf3145c", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=1c4fb909ffad8328983d893f2fefdb17215f2b21", "patch": "@@ -1830,6 +1830,6 @@ mod bench {\n     #[bench]\n     fn bench_pow_function(b: &mut Bencher) {\n         let v = (0..1024).collect::<Vec<_>>();\n-        b.iter(|| {v.iter().fold(0, |old, new| old.pow(*new));});\n+        b.iter(|| {v.iter().fold(0, |old, new| old.pow(*new as u32));});\n     }\n }"}, {"sha": "38fc53ccd366a104896a9bc5dcd313a66aa215c7", "filename": "src/test/bench/shootout-binarytrees.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4fb909ffad8328983d893f2fefdb17215f2b21/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs?ref=1c4fb909ffad8328983d893f2fefdb17215f2b21", "patch": "@@ -109,7 +109,7 @@ fn main() {\n \n     let messages = range_step(min_depth, max_depth + 1, 2).map(|depth| {\n         use std::num::Int;\n-        let iterations = 2.pow((max_depth - depth + min_depth) as usize);\n+        let iterations = 2.pow((max_depth - depth + min_depth) as u32);\n         thread::scoped(move || inner(depth, iterations))\n     }).collect::<Vec<_>>();\n "}]}