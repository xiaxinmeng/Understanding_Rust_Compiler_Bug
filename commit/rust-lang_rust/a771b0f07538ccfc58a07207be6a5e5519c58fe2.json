{"sha": "a771b0f07538ccfc58a07207be6a5e5519c58fe2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NzFiMGYwNzUzOGNjZmM1OGEwNzIwN2JlNmE1ZTU1MTljNThmZTI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-04-18T12:22:08Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-04-18T13:37:30Z"}, "message": "Work around rust-lang/rust#49998 with experimental code that does less updating of cause map.\n\nThis seems to avoid poor scaling on src/test/ui/span/dropck_vec_cycle_checked.rs", "tree": {"sha": "3b0fd1c87b5384d8c4aa47c580158082b8841bec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b0fd1c87b5384d8c4aa47c580158082b8841bec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a771b0f07538ccfc58a07207be6a5e5519c58fe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a771b0f07538ccfc58a07207be6a5e5519c58fe2", "html_url": "https://github.com/rust-lang/rust/commit/a771b0f07538ccfc58a07207be6a5e5519c58fe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a771b0f07538ccfc58a07207be6a5e5519c58fe2/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "699c98ec6ae1f0ebfc84a94a5b815ba4134d5267", "url": "https://api.github.com/repos/rust-lang/rust/commits/699c98ec6ae1f0ebfc84a94a5b815ba4134d5267", "html_url": "https://github.com/rust-lang/rust/commit/699c98ec6ae1f0ebfc84a94a5b815ba4134d5267"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "2e6689efee572358b3279373b6759a1fd89b9261", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a771b0f07538ccfc58a07207be6a5e5519c58fe2/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a771b0f07538ccfc58a07207be6a5e5519c58fe2/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=a771b0f07538ccfc58a07207be6a5e5519c58fe2", "patch": "@@ -1259,6 +1259,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         useful for profiling / PGO.\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n+    nll_subminimal_causes: bool = (false, parse_bool, [UNTRACKED],\n+        \"when tracking region error causes, accept subminimal results for faster execution.\"),\n     disable_nll_user_type_assert: bool = (false, parse_bool, [UNTRACKED],\n         \"disable user provided type assertion in NLL\"),\n     trans_time_graph: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "d15d85792d99dc93964a96ffcbaed29eb05009e0", "filename": "src/librustc_mir/borrow_check/nll/region_infer/values.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a771b0f07538ccfc58a07207be6a5e5519c58fe2/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a771b0f07538ccfc58a07207be6a5e5519c58fe2/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs?ref=a771b0f07538ccfc58a07207be6a5e5519c58fe2", "patch": "@@ -14,7 +14,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc::mir::{BasicBlock, Location, Mir};\n-use rustc::ty::RegionVid;\n+use rustc::ty::{self, RegionVid};\n use syntax::codemap::Span;\n \n use super::{Cause, CauseExt, TrackCauses};\n@@ -263,7 +263,17 @@ impl RegionValues {\n             if let Some(causes) = &mut self.causes {\n                 let cause = make_cause(causes);\n                 let old_cause = causes.get_mut(&(r, i)).unwrap();\n-                if cause < **old_cause {\n+                // #49998: compare using root cause alone to avoid\n+                // useless traffic from similar outlives chains.\n+\n+                let overwrite = if ty::tls::with(|tcx| {\n+                    tcx.sess.opts.debugging_opts.nll_subminimal_causes\n+                }) {\n+                    cause.root_cause() < old_cause.root_cause()\n+                } else {\n+                    cause < **old_cause\n+                };\n+                if overwrite {\n                     *old_cause = Rc::new(cause);\n                     return true;\n                 }"}]}