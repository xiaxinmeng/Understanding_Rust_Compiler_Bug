{"sha": "8af2f22985c672bf4cb23b615ac97af00031a2ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZjJmMjI5ODVjNjcyYmY0Y2IyM2I2MTVhYzk3YWYwMDAzMWEyY2E=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-22T22:35:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-22T22:35:56Z"}, "message": "enable panic-catching tests in Miri", "tree": {"sha": "d158304c56a6975b1bd11cfa1bcbbd6f75764203", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d158304c56a6975b1bd11cfa1bcbbd6f75764203"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8af2f22985c672bf4cb23b615ac97af00031a2ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8af2f22985c672bf4cb23b615ac97af00031a2ca", "html_url": "https://github.com/rust-lang/rust/commit/8af2f22985c672bf4cb23b615ac97af00031a2ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8af2f22985c672bf4cb23b615ac97af00031a2ca/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3277209af5c3369cbf1786d25cbf48c9a131996b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3277209af5c3369cbf1786d25cbf48c9a131996b", "html_url": "https://github.com/rust-lang/rust/commit/3277209af5c3369cbf1786d25cbf48c9a131996b"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "6433cbd1842d7109fcacefb73574eef53489b475", "filename": "src/liballoc/tests/slice.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8af2f22985c672bf4cb23b615ac97af00031a2ca/src%2Fliballoc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8af2f22985c672bf4cb23b615ac97af00031a2ca/src%2Fliballoc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fslice.rs?ref=8af2f22985c672bf4cb23b615ac97af00031a2ca", "patch": "@@ -1405,7 +1405,6 @@ fn test_box_slice_clone() {\n #[test]\n #[allow(unused_must_use)] // here, we care about the side effects of `.clone()`\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n-#[cfg(not(miri))] // Miri does not support catching panics\n fn test_box_slice_clone_panics() {\n     use std::sync::Arc;\n     use std::sync::atomic::{AtomicUsize, Ordering};\n@@ -1595,7 +1594,6 @@ thread_local!(static SILENCE_PANIC: Cell<bool> = Cell::new(false));\n \n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)] // no threads\n-#[cfg(not(miri))] // Miri does not support catching panics\n fn panic_safe() {\n     let prev = panic::take_hook();\n     panic::set_hook(Box::new(move |info| {\n@@ -1606,7 +1604,12 @@ fn panic_safe() {\n \n     let mut rng = thread_rng();\n \n-    for len in (1..20).chain(70..MAX_LEN) {\n+    #[cfg(not(miri))] // Miri is too slow\n+    let large_range = 70..MAX_LEN;\n+    #[cfg(miri)]\n+    let large_range = 0..0; // empty range\n+\n+    for len in (1..20).chain(large_range) {\n         for &modulus in &[5, 20, 50] {\n             for &has_runs in &[false, true] {\n                 let mut input = (0..len)"}]}