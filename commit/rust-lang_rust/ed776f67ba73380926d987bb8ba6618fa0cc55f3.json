{"sha": "ed776f67ba73380926d987bb8ba6618fa0cc55f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNzc2ZjY3YmE3MzM4MDkyNmQ5ODdiYjhiYTY2MThmYTBjYzU1ZjM=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-13T01:58:02Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-20T12:42:59Z"}, "message": "Change last_error to a place", "tree": {"sha": "c2e051558db34d2eb57219d825677a0c6ee3e04b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2e051558db34d2eb57219d825677a0c6ee3e04b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed776f67ba73380926d987bb8ba6618fa0cc55f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed776f67ba73380926d987bb8ba6618fa0cc55f3", "html_url": "https://github.com/rust-lang/rust/commit/ed776f67ba73380926d987bb8ba6618fa0cc55f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed776f67ba73380926d987bb8ba6618fa0cc55f3/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4232939319448244bacd8376049a17325225eadb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4232939319448244bacd8376049a17325225eadb", "html_url": "https://github.com/rust-lang/rust/commit/4232939319448244bacd8376049a17325225eadb"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "f4a8d176172d47908e0734a98c310e937a93c422", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=ed776f67ba73380926d987bb8ba6618fa0cc55f3", "patch": "@@ -183,8 +183,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n     let errno_layout = ecx.layout_of(ecx.tcx.types.u32)?;\n     let errno_place = ecx.allocate(errno_layout, MiriMemoryKind::Static.into());\n     ecx.write_scalar(Scalar::from_u32(0), errno_place.into())?;\n-    let errno_ptr = ecx.check_mplace_access(errno_place.into(), Some(Size::from_bits(32)))?;\n-    ecx.machine.last_error = errno_ptr;\n+    ecx.machine.last_error = Some(errno_place);\n \n     Ok(ecx)\n }"}, {"sha": "1b80166b2fe72e0d08ead65b0b80e3a99f0eccba", "filename": "src/helpers.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=ed776f67ba73380926d987bb8ba6618fa0cc55f3", "patch": "@@ -349,25 +349,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// Sets the last error variable\n     fn set_last_error(&mut self, scalar: Scalar<Tag>) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n-        let tcx = &{ this.tcx.tcx };\n-        let errno_ptr = this.machine.last_error.unwrap();\n-        this.memory.get_mut(errno_ptr.alloc_id)?.write_scalar(\n-            tcx,\n-            errno_ptr,\n-            scalar.into(),\n-            Size::from_bits(32),\n-        )\n+        let errno_place = this.machine.last_error.unwrap();\n+        this.write_scalar(scalar, errno_place.into())\n     }\n \n     /// Gets the last error variable\n     fn get_last_error(&mut self) -> InterpResult<'tcx, Scalar<Tag>> {\n         let this = self.eval_context_mut();\n-        let tcx = &{ this.tcx.tcx };\n-        let errno_ptr = this.machine.last_error.unwrap();\n-        this.memory\n-            .get(errno_ptr.alloc_id)?\n-            .read_scalar(tcx, errno_ptr, Size::from_bits(32))?\n-            .not_undef()\n+        let errno_place = this.machine.last_error.unwrap();\n+        this.read_scalar(errno_place.into())?.not_undef()\n     }\n \n     /// Sets the last error variable using a `std::io::Error`. It fails if the error cannot be"}, {"sha": "3714aa2d799e3a55677a8c745eed23337c6e4a58", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=ed776f67ba73380926d987bb8ba6618fa0cc55f3", "patch": "@@ -91,8 +91,8 @@ pub struct Evaluator<'tcx> {\n     pub(crate) argv: Option<Pointer<Tag>>,\n     pub(crate) cmd_line: Option<Pointer<Tag>>,\n \n-    /// Last OS error.\n-    pub(crate) last_error: Option<Pointer<Tag>>,\n+    /// Last OS error location in memory. It is a 32 bits integer (unsigned for Windows)\n+    pub(crate) last_error: Option<MPlaceTy<'tcx, Tag>>,\n \n     /// TLS state.\n     pub(crate) tls: TlsData<'tcx>,"}, {"sha": "51be7ea5bcd392a0a9345b3f2e41b404a727e6e5", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed776f67ba73380926d987bb8ba6618fa0cc55f3/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=ed776f67ba73380926d987bb8ba6618fa0cc55f3", "patch": "@@ -414,7 +414,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             \"__errno_location\" | \"__error\" => {\n-                let errno_scalar: Scalar<Tag> = this.machine.last_error.unwrap().into();\n+                let errno_place = this.machine.last_error.unwrap();\n+                let errno_scalar: Scalar<Tag> = this.check_mplace_access(errno_place.into(), Some(Size::from_bits(32)))?.unwrap().into();\n                 this.write_scalar(errno_scalar, dest)?;\n             }\n "}]}