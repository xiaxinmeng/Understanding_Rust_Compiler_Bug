{"sha": "c133651e0a613d4833bba1c1f229222d060e2ba8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMzM2NTFlMGE2MTNkNDgzM2JiYTFjMWYyMjkyMjJkMDYwZTJiYTg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-07T08:14:42Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-07T08:14:42Z"}, "message": "Move IntoIterator into FamousDefs", "tree": {"sha": "8e9ab96b46398fa1291164543d437703ef1ad58d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e9ab96b46398fa1291164543d437703ef1ad58d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c133651e0a613d4833bba1c1f229222d060e2ba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c133651e0a613d4833bba1c1f229222d060e2ba8", "html_url": "https://github.com/rust-lang/rust/commit/c133651e0a613d4833bba1c1f229222d060e2ba8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c133651e0a613d4833bba1c1f229222d060e2ba8/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6f1de6ac5d3496fc3c30b5e15263db68d057695", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f1de6ac5d3496fc3c30b5e15263db68d057695", "html_url": "https://github.com/rust-lang/rust/commit/c6f1de6ac5d3496fc3c30b5e15263db68d057695"}], "stats": {"total": 51, "additions": 20, "deletions": 31}, "files": [{"sha": "b341453d42d6238ec3b5295f1ce4474e00207083", "filename": "crates/assists/src/utils.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c133651e0a613d4833bba1c1f229222d060e2ba8/crates%2Fassists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c133651e0a613d4833bba1c1f229222d060e2ba8/crates%2Fassists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils.rs?ref=c133651e0a613d4833bba1c1f229222d060e2ba8", "patch": "@@ -286,14 +286,21 @@ pub mod convert {\n }\n \n pub mod iter {\n-    pub use self::traits::iterator::Iterator;\n-    mod traits { mod iterator {\n-        use crate::option::Option;\n-        pub trait Iterator {\n-            type Item;\n-            fn next(&mut self) -> Option<Self::Item>;\n+    pub use self::traits::{collect::IntoIterator, iterator::Iterator};\n+    mod traits {\n+        mod iterator {\n+            use crate::option::Option;\n+            pub trait Iterator {\n+                type Item;\n+                fn next(&mut self) -> Option<Self::Item>;\n+            }\n+        }\n+        mod collect {            \n+            pub trait IntoIterator {\n+                type Item;\n+            }\n         }\n-    } }\n+    }\n \n     pub use self::sources::*;\n     mod sources {\n@@ -321,7 +328,7 @@ pub mod option {\n }\n \n pub mod prelude {\n-    pub use crate::{convert::From, iter::Iterator, option::Option::{self, *}};\n+    pub use crate::{convert::From, iter::{IntoIterator, Iterator}, option::Option::{self, *}};\n }\n #[prelude_import]\n pub use prelude::*;"}, {"sha": "31a6a1be863df2607ef5a521726c6d2ff68aae25", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c133651e0a613d4833bba1c1f229222d060e2ba8/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c133651e0a613d4833bba1c1f229222d060e2ba8/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=c133651e0a613d4833bba1c1f229222d060e2ba8", "patch": "@@ -412,7 +412,8 @@ mod tests {\n     }\n \n     fn check_with_config(config: InlayHintsConfig, ra_fixture: &str) {\n-        let (analysis, file_id) = fixture::file(ra_fixture);\n+        let ra_fixture = format!(\"{}\\n{}\", ra_fixture, FamousDefs::FIXTURE);\n+        let (analysis, file_id) = fixture::file(&ra_fixture);\n         let expected = extract_annotations(&*analysis.file_text(file_id).unwrap());\n         let inlay_hints = analysis.inlay_hints(file_id, &config).unwrap();\n         let actual =\n@@ -1011,13 +1012,6 @@ fn main() {\n     println!(\"Unit expr\");\n }\n \n-//- /core.rs crate:core\n-#[prelude_import] use iter::*;\n-mod iter {\n-    trait IntoIterator {\n-        type Item;\n-    }\n-}\n //- /alloc.rs crate:alloc deps:core\n mod collections {\n     struct Vec<T> {}\n@@ -1059,14 +1053,6 @@ fn main() {\n         //^ &str\n     }\n }\n-\n-//- /core.rs crate:core\n-#[prelude_import] use iter::*;\n-mod iter {\n-    trait IntoIterator {\n-        type Item;\n-    }\n-}\n //- /alloc.rs crate:alloc deps:core\n mod collections {\n     struct Vec<T> {}\n@@ -1125,15 +1111,13 @@ fn main() {\n                 chaining_hints: true,\n                 max_length: None,\n             },\n-            &format!(\n-                \"{}\\n{}\\n\",\n-                r#\"\n+            r#\"\n //- /main.rs crate:main deps:std\n-use std::{Option::{self, Some, None}, iter};\n+use std::iter;\n \n struct MyIter;\n \n-impl iter::Iterator for MyIter {\n+impl Iterator for MyIter {\n     type Item = ();\n     fn next(&mut self) -> Option<Self::Item> {\n         None\n@@ -1154,8 +1138,6 @@ fn main() {\n //- /std.rs crate:std deps:core\n use core::*;\n \"#,\n-                FamousDefs::FIXTURE\n-            ),\n         );\n     }\n }"}]}