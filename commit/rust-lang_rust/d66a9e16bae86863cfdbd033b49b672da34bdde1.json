{"sha": "d66a9e16bae86863cfdbd033b49b672da34bdde1", "node_id": "C_kwDOAAsO6NoAKGQ2NmE5ZTE2YmFlODY4NjNjZmRiZDAzM2I0OWI2NzJkYTM0YmRkZTE", "commit": {"author": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2021-12-25T15:18:55Z"}, "committer": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2021-12-25T15:18:55Z"}, "message": "Language tweak.", "tree": {"sha": "6844bd696137d14c61202f881ba324c5df20ffd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6844bd696137d14c61202f881ba324c5df20ffd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d66a9e16bae86863cfdbd033b49b672da34bdde1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d66a9e16bae86863cfdbd033b49b672da34bdde1", "html_url": "https://github.com/rust-lang/rust/commit/d66a9e16bae86863cfdbd033b49b672da34bdde1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d66a9e16bae86863cfdbd033b49b672da34bdde1/comments", "author": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d8f6995ce063fe812bb668a8b8fe4e5edf213ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d8f6995ce063fe812bb668a8b8fe4e5edf213ef", "html_url": "https://github.com/rust-lang/rust/commit/8d8f6995ce063fe812bb668a8b8fe4e5edf213ef"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d1fe9260e529cda5574662f364f4f90a4376d263", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d66a9e16bae86863cfdbd033b49b672da34bdde1/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d66a9e16bae86863cfdbd033b49b672da34bdde1/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=d66a9e16bae86863cfdbd033b49b672da34bdde1", "patch": "@@ -967,8 +967,8 @@ pub fn park_timeout(dur: Duration) {\n ///\n /// A `ThreadId` is an opaque object that uniquely identifies each thread\n /// created during the lifetime of a process. `ThreadId`s are guaranteed not to\n-/// be reused, even if a thread dies. `ThreadId`s are under the control of\n-/// Rust's standard library and there may not be any relationship between\n+/// be reused, even when a thread terminates. `ThreadId`s are under the control\n+/// of Rust's standard library and there may not be any relationship between\n /// `ThreadId` and the underlying platform's notion of a thread identifier --\n /// the two concepts cannot, therefore, be used interchangeably. A `ThreadId`\n /// can be retrieved from the [`id`] method on a [`Thread`]."}]}