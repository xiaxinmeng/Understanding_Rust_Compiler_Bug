{"sha": "fa8833a58bdc8c16f754ef6481e07ad33897d590", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhODgzM2E1OGJkYzhjMTZmNzU0ZWY2NDgxZTA3YWQzMzg5N2Q1OTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-10-13T13:09:11Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-10-13T13:09:11Z"}, "message": "Merge pull request #382 from Manishearth/empty_loop\n\nnew lint to detect `loop {}`", "tree": {"sha": "551c1d3c8c5907acf8ad65e4260d2570261e5b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/551c1d3c8c5907acf8ad65e4260d2570261e5b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa8833a58bdc8c16f754ef6481e07ad33897d590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa8833a58bdc8c16f754ef6481e07ad33897d590", "html_url": "https://github.com/rust-lang/rust/commit/fa8833a58bdc8c16f754ef6481e07ad33897d590", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa8833a58bdc8c16f754ef6481e07ad33897d590/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a90a4540e9d031ecdc1de104a15880c98bb91cfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a90a4540e9d031ecdc1de104a15880c98bb91cfa", "html_url": "https://github.com/rust-lang/rust/commit/a90a4540e9d031ecdc1de104a15880c98bb91cfa"}, {"sha": "6f17e2e3a0fae42cf72e7bbbfe96dd5a96e2e3b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f17e2e3a0fae42cf72e7bbbfe96dd5a96e2e3b7", "html_url": "https://github.com/rust-lang/rust/commit/6f17e2e3a0fae42cf72e7bbbfe96dd5a96e2e3b7"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "c5e6aae7041aa749d271c543affc2016e52bd6e6", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa8833a58bdc8c16f754ef6481e07ad33897d590/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/fa8833a58bdc8c16f754ef6481e07ad33897d590/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=fa8833a58bdc8c16f754ef6481e07ad33897d590", "patch": "@@ -6,7 +6,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 60 lints included in this crate:\n+There are 61 lints included in this crate:\n \n name                                                                                                   | default | meaning\n -------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -20,6 +20,7 @@ name\n [cmp_nan](https://github.com/Manishearth/rust-clippy/wiki#cmp_nan)                                     | deny    | comparisons to NAN (which will always return false, which is probably not intended)\n [cmp_owned](https://github.com/Manishearth/rust-clippy/wiki#cmp_owned)                                 | warn    | creating owned instances for comparing with others, e.g. `x == \"foo\".to_string()`\n [collapsible_if](https://github.com/Manishearth/rust-clippy/wiki#collapsible_if)                       | warn    | two nested `if`-expressions can be collapsed into one, e.g. `if x { if y { foo() } }` can be written as `if x && y { foo() }`\n+[empty_loop](https://github.com/Manishearth/rust-clippy/wiki#empty_loop)                               | warn    | empty `loop {}` detected\n [eq_op](https://github.com/Manishearth/rust-clippy/wiki#eq_op)                                         | warn    | equal operands on both sides of a comparison or bitwise combination (e.g. `x == x`)\n [explicit_counter_loop](https://github.com/Manishearth/rust-clippy/wiki#explicit_counter_loop)         | warn    | for-looping with an explicit counter when `_.enumerate()` would do\n [explicit_iter_loop](https://github.com/Manishearth/rust-clippy/wiki#explicit_iter_loop)               | warn    | for-looping over `_.iter()` or `_.iter_mut()` when `&_` or `&mut _` would do"}, {"sha": "fd7adbed16d25ccfb570963c91b3f8b4d2a02949", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa8833a58bdc8c16f754ef6481e07ad33897d590/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa8833a58bdc8c16f754ef6481e07ad33897d590/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=fa8833a58bdc8c16f754ef6481e07ad33897d590", "patch": "@@ -122,6 +122,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         len_zero::LEN_WITHOUT_IS_EMPTY,\n         len_zero::LEN_ZERO,\n         lifetimes::NEEDLESS_LIFETIMES,\n+        loops::EMPTY_LOOP,\n         loops::EXPLICIT_COUNTER_LOOP,\n         loops::EXPLICIT_ITER_LOOP,\n         loops::ITER_NEXT_LOOP,"}, {"sha": "10f58716dc7dfe66ccfa5f81b311370a831306c7", "filename": "src/loops.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fa8833a58bdc8c16f754ef6481e07ad33897d590/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa8833a58bdc8c16f754ef6481e07ad33897d590/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=fa8833a58bdc8c16f754ef6481e07ad33897d590", "patch": "@@ -36,13 +36,16 @@ declare_lint!{ pub REVERSE_RANGE_LOOP, Warn,\n declare_lint!{ pub EXPLICIT_COUNTER_LOOP, Warn,\n                \"for-looping with an explicit counter when `_.enumerate()` would do\" }\n \n+declare_lint!{ pub EMPTY_LOOP, Warn, \"empty `loop {}` detected\" }\n+\n #[derive(Copy, Clone)]\n pub struct LoopsPass;\n \n impl LintPass for LoopsPass {\n     fn get_lints(&self) -> LintArray {\n         lint_array!(NEEDLESS_RANGE_LOOP, EXPLICIT_ITER_LOOP, ITER_NEXT_LOOP,\n-                    WHILE_LET_LOOP, UNUSED_COLLECT, REVERSE_RANGE_LOOP, EXPLICIT_COUNTER_LOOP)\n+                    WHILE_LET_LOOP, UNUSED_COLLECT, REVERSE_RANGE_LOOP, \n+                    EXPLICIT_COUNTER_LOOP, EMPTY_LOOP)\n     }\n }\n \n@@ -163,6 +166,14 @@ impl LateLintPass for LoopsPass {\n         // (also matches an explicit \"match\" instead of \"if let\")\n         // (even if the \"match\" or \"if let\" is used for declaration)\n         if let ExprLoop(ref block, _) = expr.node {\n+            // also check for empty `loop {}` statements\n+            if block.stmts.is_empty() && block.expr.is_none() {\n+                span_lint(cx, EMPTY_LOOP, expr.span,\n+                          \"empty `loop {}` detected. You may want to either \\\n+                           use `panic!()` or add `std::thread::sleep(..);` to \\\n+                           the loop body.\");\n+            }\n+            \n             // extract the first statement (if any) in a block\n             let inner_stmt = extract_expr_from_first_stmt(block);\n             // extract a single expression"}, {"sha": "8e51bf84887db5f7029c6e9da62315eedf1e31dd", "filename": "tests/compile-fail/while_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa8833a58bdc8c16f754ef6481e07ad33897d590/tests%2Fcompile-fail%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa8833a58bdc8c16f754ef6481e07ad33897d590/tests%2Fcompile-fail%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fwhile_loop.rs?ref=fa8833a58bdc8c16f754ef6481e07ad33897d590", "patch": "@@ -1,7 +1,7 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n-#![deny(while_let_loop)]\n+#![deny(while_let_loop, empty_loop)]\n #![allow(dead_code, unused)]\n \n fn main() {\n@@ -58,6 +58,6 @@ fn no_panic<T>(slice: &[T]) {\n             Some(ele) => ele,\n             None => break\n         };\n-        loop {}\n+        loop {} //~ERROR empty `loop {}` detected.\n     }\n }"}]}