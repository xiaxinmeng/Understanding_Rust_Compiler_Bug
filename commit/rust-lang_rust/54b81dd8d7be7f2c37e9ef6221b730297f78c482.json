{"sha": "54b81dd8d7be7f2c37e9ef6221b730297f78c482", "node_id": "C_kwDOAAsO6NoAKDU0YjgxZGQ4ZDdiZTdmMmMzN2U5ZWY2MjIxYjczMDI5N2Y3OGM0ODI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-27T06:06:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-27T06:06:49Z"}, "message": "Rollup merge of #98561 - Wilfred:patch-4, r=fee1-dead\n\nFix spelling in SAFETY comment\n\n\"can not\" should be \"cannot\", and add punctuation.", "tree": {"sha": "c7d0aa616886b0aa5c57d0edc1094df0b36c06ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7d0aa616886b0aa5c57d0edc1094df0b36c06ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54b81dd8d7be7f2c37e9ef6221b730297f78c482", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiuUj6CRBK7hj4Ov3rIwAA3O8IAFEMAg2sa3b7qsiROwFHP0yv\n9e4CYIhfjraRwJ8LKPa5HhCyK9eIyQitVE2IO/BIQzEvulEzbkDOJa44ZRtomivu\nkUloVCBYb4IQDiFErGzdLDfCbNhQdq1pBjyK+oBYAwGbuH7q+D4VUPLqy1uEOgOm\nNTheJhAwGb/wBh/gAuSANwPnaAnj51o+iQkuvsLWQ58XPCnQ8jkkTt+YyN8o8sVe\nrxP7/l0n7kzPbPGMdNnoRyc/MxBWQQOg1k5n3qmv97QbS12ruJHP+o4Odnf48JZm\nZ/64kFFkHVRIH371iHK+7jHQCrJ7DYq/qL07IMKPn8+B9JG+48b4ccGJhMMLKqQ=\n=u7Lp\n-----END PGP SIGNATURE-----\n", "payload": "tree c7d0aa616886b0aa5c57d0edc1094df0b36c06ee\nparent 31ec973b15e00b4ba81677dc1c4c898636d8f49b\nparent 1c1ae78db7ae7ca162e60041816f9dd4bc0a2fc2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656310009 +0200\ncommitter GitHub <noreply@github.com> 1656310009 +0200\n\nRollup merge of #98561 - Wilfred:patch-4, r=fee1-dead\n\nFix spelling in SAFETY comment\n\n\"can not\" should be \"cannot\", and add punctuation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54b81dd8d7be7f2c37e9ef6221b730297f78c482", "html_url": "https://github.com/rust-lang/rust/commit/54b81dd8d7be7f2c37e9ef6221b730297f78c482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54b81dd8d7be7f2c37e9ef6221b730297f78c482/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ec973b15e00b4ba81677dc1c4c898636d8f49b", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ec973b15e00b4ba81677dc1c4c898636d8f49b", "html_url": "https://github.com/rust-lang/rust/commit/31ec973b15e00b4ba81677dc1c4c898636d8f49b"}, {"sha": "1c1ae78db7ae7ca162e60041816f9dd4bc0a2fc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1ae78db7ae7ca162e60041816f9dd4bc0a2fc2", "html_url": "https://github.com/rust-lang/rust/commit/1c1ae78db7ae7ca162e60041816f9dd4bc0a2fc2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "92d03b724b40eafb9145e333033e54b721b1cca3", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54b81dd8d7be7f2c37e9ef6221b730297f78c482/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b81dd8d7be7f2c37e9ef6221b730297f78c482/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=54b81dd8d7be7f2c37e9ef6221b730297f78c482", "patch": "@@ -213,7 +213,7 @@ macro_rules! nonzero_leading_trailing_zeros {\n                               without modifying the original\"]\n                 #[inline]\n                 pub const fn leading_zeros(self) -> u32 {\n-                    // SAFETY: since `self` can not be zero it is safe to call ctlz_nonzero\n+                    // SAFETY: since `self` cannot be zero, it is safe to call `ctlz_nonzero`.\n                     unsafe { intrinsics::ctlz_nonzero(self.0 as $Uint) as u32 }\n                 }\n \n@@ -237,7 +237,7 @@ macro_rules! nonzero_leading_trailing_zeros {\n                               without modifying the original\"]\n                 #[inline]\n                 pub const fn trailing_zeros(self) -> u32 {\n-                    // SAFETY: since `self` can not be zero it is safe to call cttz_nonzero\n+                    // SAFETY: since `self` cannot be zero, it is safe to call `cttz_nonzero`.\n                     unsafe { intrinsics::cttz_nonzero(self.0 as $Uint) as u32 }\n                 }\n "}]}