{"sha": "b507c60e1c7fae20b643557a4430aba7e7e037df", "node_id": "C_kwDOAAsO6NoAKGI1MDdjNjBlMWM3ZmFlMjBiNjQzNTU3YTQ0MzBhYmE3ZTdlMDM3ZGY", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2022-05-18T16:02:06Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2022-05-18T17:43:16Z"}, "message": "fix rustfmt", "tree": {"sha": "a570da341e51499c6c06eb33bcb79f10e9cfbe77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a570da341e51499c6c06eb33bcb79f10e9cfbe77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b507c60e1c7fae20b643557a4430aba7e7e037df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b507c60e1c7fae20b643557a4430aba7e7e037df", "html_url": "https://github.com/rust-lang/rust/commit/b507c60e1c7fae20b643557a4430aba7e7e037df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b507c60e1c7fae20b643557a4430aba7e7e037df/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f77fd90affcf794354ca8d120e9cc55dc64f4cf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f77fd90affcf794354ca8d120e9cc55dc64f4cf1", "html_url": "https://github.com/rust-lang/rust/commit/f77fd90affcf794354ca8d120e9cc55dc64f4cf1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f4b2bcf281577711c89b53f27ea387551c897003", "filename": "src/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b507c60e1c7fae20b643557a4430aba7e7e037df/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b507c60e1c7fae20b643557a4430aba7e7e037df/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=b507c60e1c7fae20b643557a4430aba7e7e037df", "patch": "@@ -226,7 +226,7 @@ fn rewrite_macro_inner(\n     }\n     // Format well-known macros which cannot be parsed as a valid AST.\n     if macro_name == \"lazy_static!\" && !has_comment {\n-        if let success @ Some(..) = format_lazy_static(context, shape, ts.trees().collect()) {\n+        if let success @ Some(..) = format_lazy_static(context, shape, ts.clone()) {\n             return success;\n         }\n     }\n@@ -855,7 +855,7 @@ impl MacroArgParser {\n \n     /// Returns a collection of parsed macro def's arguments.\n     fn parse(mut self, tokens: TokenStream) -> Option<Vec<ParsedMacroArg>> {\n-        let mut iter = tokens.trees();\n+        let mut iter = tokens.into_trees();\n \n         while let Some(tok) = iter.next() {\n             match tok {"}]}