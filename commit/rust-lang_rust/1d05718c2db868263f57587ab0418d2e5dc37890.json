{"sha": "1d05718c2db868263f57587ab0418d2e5dc37890", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMDU3MThjMmRiODY4MjYzZjU3NTg3YWIwNDE4ZDJlNWRjMzc4OTA=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-29T00:49:15Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-29T16:04:00Z"}, "message": "Extend visit to use visit_fn to visit fn expressions.", "tree": {"sha": "a12459197f5fedc9689d44de41faa9b8a164f377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a12459197f5fedc9689d44de41faa9b8a164f377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d05718c2db868263f57587ab0418d2e5dc37890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d05718c2db868263f57587ab0418d2e5dc37890", "html_url": "https://github.com/rust-lang/rust/commit/1d05718c2db868263f57587ab0418d2e5dc37890", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d05718c2db868263f57587ab0418d2e5dc37890/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc478044736de577eed8e3868dfc382956bf2621", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc478044736de577eed8e3868dfc382956bf2621", "html_url": "https://github.com/rust-lang/rust/commit/bc478044736de577eed8e3868dfc382956bf2621"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "87ad6096d33b12a48cc6575dbf4c92775557973c", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d05718c2db868263f57587ab0418d2e5dc37890/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d05718c2db868263f57587ab0418d2e5dc37890/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=1d05718c2db868263f57587ab0418d2e5dc37890", "patch": "@@ -1,6 +1,7 @@\n \n import front::ast;\n import front::ast::ident;\n+import front::ast::fn_ident;\n import front::ast::node_id;\n import front::ast::def_id;\n import util::common::span;\n@@ -53,7 +54,7 @@ fn check_crate(@ty::ctxt tcx, &@ast::crate crate) {\n }\n \n fn visit_fn(@ctx cx, &ast::_fn f, &vec[ast::ty_param] tp, &span sp,\n-            &ident name, ast::node_id id, &scope sc, &vt[scope] v) {\n+            &fn_ident name, ast::node_id id, &scope sc, &vt[scope] v) {\n     visit::visit_fn_decl(f.decl, sc, v);\n     for (ast::arg arg_ in f.decl.inputs) {\n         cx.local_map.insert(arg_.id, arg(arg_.mode));"}, {"sha": "eb7d3d4dd824ab319bf3069a06d1690cfe771ab2", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d05718c2db868263f57587ab0418d2e5dc37890/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d05718c2db868263f57587ab0418d2e5dc37890/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=1d05718c2db868263f57587ab0418d2e5dc37890", "patch": "@@ -1,6 +1,7 @@\n \n import front::ast;\n import front::ast::ident;\n+import front::ast::fn_ident;\n import front::ast::def;\n import front::ast::def_id;\n import front::ast::node_id;\n@@ -344,7 +345,7 @@ fn visit_native_item_with_scope(&@ast::native_item ni, &scopes sc,\n }\n \n fn visit_fn_with_scope(&@env e, &ast::_fn f, &vec[ast::ty_param] tp, &span sp,\n-                       &ident name, node_id id, &scopes sc,\n+                       &fn_ident name, node_id id, &scopes sc,\n                        &vt[scopes] v) {\n     // here's where we need to set up the mapping\n     // for f's constrs in the table."}, {"sha": "b6a96453d1ba24b7ba386c2c94bfe32d087bf090", "filename": "src/comp/middle/visit.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1d05718c2db868263f57587ab0418d2e5dc37890/src%2Fcomp%2Fmiddle%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d05718c2db868263f57587ab0418d2e5dc37890/src%2Fcomp%2Fmiddle%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fvisit.rs?ref=1d05718c2db868263f57587ab0418d2e5dc37890", "patch": "@@ -34,7 +34,7 @@ type visitor[E] =\n          fn(&@expr, &E, &vt[E])  visit_expr,\n          fn(&@ty, &E, &vt[E])  visit_ty,\n          fn(&@constr, &E, &vt[E])  visit_constr,\n-         fn(&_fn, &vec[ty_param], &span, &ident, node_id, &E, &vt[E])\n+         fn(&_fn, &vec[ty_param], &span, &fn_ident, node_id, &E, &vt[E])\n              visit_fn);\n \n fn default_visitor[E]() -> visitor[E] {\n@@ -103,7 +103,7 @@ fn visit_item[E](&@item i, &E e, &vt[E] v) {\n             vt(v).visit_expr(ex, e, v);\n         }\n         case (item_fn(?f, ?tp)) {\n-            vt(v).visit_fn(f, tp, i.span, i.ident, i.id, e, v);\n+            vt(v).visit_fn(f, tp, i.span, some(i.ident), i.id, e, v);\n         }\n         case (item_mod(?m)) { vt(v).visit_mod(m, i.span, e, v); }\n         case (item_native_mod(?nm)) {\n@@ -116,7 +116,7 @@ fn visit_item[E](&@item i, &E e, &vt[E] v) {\n         }\n         case (item_ty(?t, _)) { vt(v).visit_ty(t, e, v); }\n         case (item_res(?f, ?dtor_id, ?tps, _)) {\n-            vt(v).visit_fn(f, tps, i.span, i.ident, dtor_id, e, v);\n+            vt(v).visit_fn(f, tps, i.span, some(i.ident), dtor_id, e, v);\n         }\n         case (item_tag(?variants, _)) {\n             for (variant vr in variants) {\n@@ -128,13 +128,13 @@ fn visit_item[E](&@item i, &E e, &vt[E] v) {\n         case (item_obj(?ob, _, _)) {\n             for (obj_field f in ob.fields) { vt(v).visit_ty(f.ty, e, v); }\n             for (@method m in ob.methods) {\n-                vt(v).visit_fn(m.node.meth, [], m.span, m.node.ident,\n+                vt(v).visit_fn(m.node.meth, [], m.span, some(m.node.ident),\n                                m.node.id, e, v);\n             }\n             alt (ob.dtor) {\n                 case (none) { }\n                 case (some(?m)) {\n-                    vt(v).visit_fn(m.node.meth, [], m.span, m.node.ident,\n+                    vt(v).visit_fn(m.node.meth, [], m.span, some(m.node.ident),\n                                    m.node.id, e, v);\n                 }\n             }\n@@ -216,7 +216,7 @@ fn visit_fn_decl[E](&fn_decl fd, &E e, &vt[E] v) {\n     vt(v).visit_ty(fd.output, e, v);\n }\n \n-fn visit_fn[E](&_fn f, &vec[ty_param] tp, &span sp, &ident i,\n+fn visit_fn[E](&_fn f, &vec[ty_param] tp, &span sp, &fn_ident i,\n                node_id id, &E e, &vt[E] v) {\n     visit_fn_decl(f.decl, e, v);\n     vt(v).visit_block(f.body, e, v);\n@@ -326,8 +326,7 @@ fn visit_expr[E](&@expr ex, &E e, &vt[E] v) {\n             for (arm a in arms) { vt(v).visit_arm(a, e, v); }\n         }\n         case (expr_fn(?f)) {\n-            visit_fn_decl(f.decl, e, v);\n-            vt(v).visit_block(f.body, e, v);\n+            vt(v).visit_fn(f, [], ex.span, none, ex.id, e, v);\n         }\n         case (expr_block(?b)) { vt(v).visit_block(b, e, v); }\n         case (expr_assign(?a, ?b)) {\n@@ -391,7 +390,7 @@ fn visit_expr[E](&@expr ex, &E e, &vt[E] v) {\n                 case (some(?ex)) { vt(v).visit_expr(ex, e, v); }\n             }\n             for (@method m in anon_obj.methods) {\n-                vt(v).visit_fn(m.node.meth, [], m.span, m.node.ident,\n+                vt(v).visit_fn(m.node.meth, [], m.span, some(m.node.ident),\n                                m.node.id, e, v);\n             }\n         }"}]}