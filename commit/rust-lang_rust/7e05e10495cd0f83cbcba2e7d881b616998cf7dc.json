{"sha": "7e05e10495cd0f83cbcba2e7d881b616998cf7dc", "node_id": "C_kwDOAAsO6NoAKDdlMDVlMTA0OTVjZDBmODNjYmNiYTJlN2Q4ODFiNjE2OTk4Y2Y3ZGM", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-03-17T12:11:29Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-03-17T12:21:42Z"}, "message": "Emit #[must_use] in Generate new assist", "tree": {"sha": "31a367a5079c71eabf3a8e21bf8d795462f9f4ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a367a5079c71eabf3a8e21bf8d795462f9f4ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e05e10495cd0f83cbcba2e7d881b616998cf7dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e05e10495cd0f83cbcba2e7d881b616998cf7dc", "html_url": "https://github.com/rust-lang/rust/commit/7e05e10495cd0f83cbcba2e7d881b616998cf7dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e05e10495cd0f83cbcba2e7d881b616998cf7dc/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98143da79924fe2044acae749ffb01923f2f14c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/98143da79924fe2044acae749ffb01923f2f14c6", "html_url": "https://github.com/rust-lang/rust/commit/98143da79924fe2044acae749ffb01923f2f14c6"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "eb9f1d04e1933368485d960e78c97177c30539eb", "filename": "crates/ide_assists/src/handlers/generate_new.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7e05e10495cd0f83cbcba2e7d881b616998cf7dc/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e05e10495cd0f83cbcba2e7d881b616998cf7dc/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=7e05e10495cd0f83cbcba2e7d881b616998cf7dc", "patch": "@@ -23,6 +23,7 @@ use crate::{\n // }\n //\n // impl<T: Clone> Ctx<T> {\n+//     #[must_use]\n //     fn $0new(data: T) -> Self { Self { data } }\n // }\n // ```\n@@ -54,7 +55,13 @@ pub(crate) fn generate_new(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n             .format(\", \");\n         let fields = field_list.fields().filter_map(|f| f.name()).format(\", \");\n \n-        format_to!(buf, \"    {}fn new({}) -> Self {{ Self {{ {} }} }}\", vis, params, fields);\n+        format_to!(\n+            buf,\n+            \"    #[must_use]\\n    {}fn new({}) -> Self {{ Self {{ {} }} }}\",\n+            vis,\n+            params,\n+            fields\n+        );\n \n         let start_offset = impl_def\n             .and_then(|impl_def| find_impl_block_start(impl_def, &mut buf))\n@@ -90,6 +97,7 @@ struct Foo {$0}\n struct Foo {}\n \n impl Foo {\n+    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -103,6 +111,7 @@ struct Foo<T: Clone> {$0}\n struct Foo<T: Clone> {}\n \n impl<T: Clone> Foo<T> {\n+    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -116,6 +125,7 @@ struct Foo<'a, T: Foo<'a>> {$0}\n struct Foo<'a, T: Foo<'a>> {}\n \n impl<'a, T: Foo<'a>> Foo<'a, T> {\n+    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -129,6 +139,7 @@ struct Foo { baz: String $0}\n struct Foo { baz: String }\n \n impl Foo {\n+    #[must_use]\n     fn $0new(baz: String) -> Self { Self { baz } }\n }\n \"#,\n@@ -142,6 +153,7 @@ struct Foo { baz: String, qux: Vec<i32> $0}\n struct Foo { baz: String, qux: Vec<i32> }\n \n impl Foo {\n+    #[must_use]\n     fn $0new(baz: String, qux: Vec<i32>) -> Self { Self { baz, qux } }\n }\n \"#,\n@@ -159,6 +171,7 @@ struct Foo { pub baz: String, pub qux: Vec<i32> $0}\n struct Foo { pub baz: String, pub qux: Vec<i32> }\n \n impl Foo {\n+    #[must_use]\n     fn $0new(baz: String, qux: Vec<i32>) -> Self { Self { baz, qux } }\n }\n \"#,\n@@ -178,6 +191,7 @@ impl Foo {}\n struct Foo {}\n \n impl Foo {\n+    #[must_use]\n     fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -195,6 +209,7 @@ impl Foo {\n struct Foo {}\n \n impl Foo {\n+    #[must_use]\n     fn $0new() -> Self { Self {  } }\n \n     fn qux(&self) {}\n@@ -218,6 +233,7 @@ impl Foo {\n struct Foo {}\n \n impl Foo {\n+    #[must_use]\n     fn $0new() -> Self { Self {  } }\n \n     fn qux(&self) {}\n@@ -240,6 +256,7 @@ pub struct Foo {$0}\n pub struct Foo {}\n \n impl Foo {\n+    #[must_use]\n     pub fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -253,6 +270,7 @@ pub(crate) struct Foo {$0}\n pub(crate) struct Foo {}\n \n impl Foo {\n+    #[must_use]\n     pub(crate) fn $0new() -> Self { Self {  } }\n }\n \"#,\n@@ -348,6 +366,7 @@ pub struct Source<T> {\n }\n \n impl<T> Source<T> {\n+    #[must_use]\n     pub fn $0new(file_id: HirFileId, ast: T) -> Self { Self { file_id, ast } }\n \n     pub fn map<F: FnOnce(T) -> U, U>(self, f: F) -> Source<U> {"}, {"sha": "9c4ea5f83b740477b50d2f93c6718edd5a80f2c4", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e05e10495cd0f83cbcba2e7d881b616998cf7dc/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e05e10495cd0f83cbcba2e7d881b616998cf7dc/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=7e05e10495cd0f83cbcba2e7d881b616998cf7dc", "patch": "@@ -1133,6 +1133,7 @@ struct Ctx<T: Clone> {\n }\n \n impl<T: Clone> Ctx<T> {\n+    #[must_use]\n     fn $0new(data: T) -> Self { Self { data } }\n }\n \"#####,"}]}