{"sha": "cb9c1023921aa94dfe38143ba7bf8e14177de235", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiOWMxMDIzOTIxYWE5NGRmZTM4MTQzYmE3YmY4ZTE0MTc3ZGUyMzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-13T01:51:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-13T01:51:33Z"}, "message": "auto merge of #11442 : brson/rust/0.10-pre, r=alexcrichton", "tree": {"sha": "a96f8efe9b7413089191f19911fa1efb340c4142", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a96f8efe9b7413089191f19911fa1efb340c4142"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb9c1023921aa94dfe38143ba7bf8e14177de235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb9c1023921aa94dfe38143ba7bf8e14177de235", "html_url": "https://github.com/rust-lang/rust/commit/cb9c1023921aa94dfe38143ba7bf8e14177de235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb9c1023921aa94dfe38143ba7bf8e14177de235/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e352d763134d776934058cec72f2c69c1034eaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e352d763134d776934058cec72f2c69c1034eaa", "html_url": "https://github.com/rust-lang/rust/commit/6e352d763134d776934058cec72f2c69c1034eaa"}, {"sha": "46905c04f56a2cf344f06d13bb430580d66f4e44", "url": "https://api.github.com/repos/rust-lang/rust/commits/46905c04f56a2cf344f06d13bb430580d66f4e44", "html_url": "https://github.com/rust-lang/rust/commit/46905c04f56a2cf344f06d13bb430580d66f4e44"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "723496f5f384c3c07ec55688e59b234b0149f70b", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -154,11 +154,11 @@ endif\n \n # version-string calculation\n CFG_GIT_DIR := $(CFG_SRC_DIR).git\n-CFG_RELEASE = 0.9\n+CFG_RELEASE = 0.10-pre\n CFG_VERSION = $(CFG_RELEASE)\n # windows exe's need numeric versions - don't use anything but\n # numbers and dots here\n-CFG_VERSION_WIN = 0.9\n+CFG_VERSION_WIN = 0.10\n \n # since $(CFG_GIT) may contain spaces (especially on Windows),\n # we need to escape them. (\" \" to r\"\\ \")"}, {"sha": "db479e468d56f350ccdff8f0598b93f11a531337", "filename": "src/etc/kate/rust.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Fetc%2Fkate%2Frust.xml", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Fetc%2Fkate%2Frust.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fkate%2Frust.xml?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -7,7 +7,7 @@\n \t<!ENTITY rustIdent \"[a-zA-Z_][a-zA-Z_0-9]*\">\n \t<!ENTITY rustIntSuf \"([iu](8|16|32|64)?)?\">\n ]>\n-<language name=\"Rust\" version=\"0.9\" kateversion=\"2.4\" section=\"Sources\" extensions=\"*.rs;*.rc\" mimetype=\"text/x-rust\" priority=\"15\">\n+<language name=\"Rust\" version=\"0.10-pre\" kateversion=\"2.4\" section=\"Sources\" extensions=\"*.rs;*.rc\" mimetype=\"text/x-rust\" priority=\"15\">\n <highlighting>\n \t<list name=\"fn\">\n \t\t<item> fn </item>"}, {"sha": "fc0cc0451757773246bad0729deda1e684aaf45c", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -20,7 +20,7 @@ Rust extras are part of the standard Rust distribution.\n \n */\n \n-#[crate_id = \"extra#0.9\"];\n+#[crate_id = \"extra#0.10-pre\"];\n #[comment = \"Rust extras\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];"}, {"sha": "990ca9f80b59806ee07efcefbcb5695473d0fc9c", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -17,6 +17,7 @@\n //! This can be optionally linked in to rust programs in order to provide M:N\n //! functionality inside of 1:1 programs.\n \n+// NOTE: Change to 0.10-pre after snapshot\n #[crate_id = \"green#0.9\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];"}, {"sha": "91c5e5051786a86e2614cbc67ba2bdff54c5df71", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -14,7 +14,7 @@\n //! runtime. In addition, all I/O provided by this crate is the thread blocking\n //! version of I/O.\n \n-#[crate_id = \"native#0.9\"];\n+#[crate_id = \"native#0.10-pre\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];\n #[crate_type = \"dylib\"];"}, {"sha": "c301318047c35471b596c37cbc5325102fe36881", "filename": "src/librustc/front/std_inject.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fstd_inject.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -21,8 +21,6 @@ use syntax::fold;\n use syntax::opt_vec;\n use syntax::util::small_vector::SmallVector;\n \n-pub static VERSION: &'static str = \"0.9\";\n-\n pub fn maybe_inject_libstd_ref(sess: Session, crate: ast::Crate)\n                                -> ast::Crate {\n     if use_std(&crate) {\n@@ -59,8 +57,7 @@ impl fold::Folder for StandardLibraryInjector {\n     fn fold_crate(&mut self, crate: ast::Crate) -> ast::Crate {\n         let mut vis = ~[ast::ViewItem {\n             node: ast::ViewItemExternMod(self.sess.ident_of(\"std\"),\n-                                         Some((format!(\"std\\\\#{}\", VERSION).to_managed(),\n-                                               ast::CookedStr)),\n+                                         None,\n                                          ast::DUMMY_NODE_ID),\n             attrs: ~[],\n             vis: ast::Private,\n@@ -70,17 +67,15 @@ impl fold::Folder for StandardLibraryInjector {\n         if use_uv(&crate) && !self.sess.building_library.get() {\n             vis.push(ast::ViewItem {\n                 node: ast::ViewItemExternMod(self.sess.ident_of(\"green\"),\n-                                             Some((format!(\"green\\\\#{}\", VERSION).to_managed(),\n-                                                   ast::CookedStr)),\n+                                             None,\n                                              ast::DUMMY_NODE_ID),\n                 attrs: ~[],\n                 vis: ast::Private,\n                 span: DUMMY_SP\n             });\n             vis.push(ast::ViewItem {\n                 node: ast::ViewItemExternMod(self.sess.ident_of(\"rustuv\"),\n-                                             Some((format!(\"rustuv\\\\#{}\", VERSION).to_managed(),\n-                                                   ast::CookedStr)),\n+                                             None,\n                                              ast::DUMMY_NODE_ID),\n                 attrs: ~[],\n                 vis: ast::Private,"}, {"sha": "26d6c5cf9e7890b0b2440c9bee07833afe0a0a1c", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -13,7 +13,6 @@\n \n use driver::session;\n use front::config;\n-use front::std_inject::VERSION;\n \n use std::cell::RefCell;\n use std::vec;\n@@ -293,8 +292,7 @@ fn mk_std(cx: &TestCtxt) -> ast::ViewItem {\n                                           ast::DUMMY_NODE_ID))])\n     } else {\n         ast::ViewItemExternMod(id_extra,\n-                               Some((format!(\"extra\\\\#{}\", VERSION).to_managed(),\n-                                    ast::CookedStr)),\n+                               None,\n                                ast::DUMMY_NODE_ID)\n     };\n     ast::ViewItem {"}, {"sha": "eb4623d554bc10069e4442ccc9b5b099b348726a", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -18,7 +18,7 @@ This API is completely unstable and subject to change.\n \n */\n \n-#[crate_id = \"rustc#0.9\"];\n+#[crate_id = \"rustc#0.10-pre\"];\n #[comment = \"The Rust compiler\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];"}, {"sha": "125af757dc71db7a6fe0c4664de2bff0ac20339d", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[crate_id = \"rustdoc#0.9\"];\n+#[crate_id = \"rustdoc#0.10-pre\"];\n #[desc = \"rustdoc, the Rust documentation extractor\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];"}, {"sha": "5f86fa0e213e4f3729e65795787d14a74dfde3ee", "filename": "src/librustpkg/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustpkg%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustpkg%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -10,7 +10,7 @@\n \n // rustpkg - a package manager and build system for Rust\n \n-#[crate_id = \"rustpkg#0.9\"];\n+#[crate_id = \"rustpkg#0.10-pre\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];\n "}, {"sha": "96ac975d567bd0e3714156d232c400f035e1edb2", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -34,6 +34,7 @@ via `close` and `delete` methods.\n \n */\n \n+// NOTE: Change to 0.10-pre after snapshot\n #[crate_id = \"rustuv#0.9\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];"}, {"sha": "b99de70ea07355a4420864d8a09538cc2769232b", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -43,6 +43,7 @@\n //!\n //!     use std::prelude::*;\n \n+// NOTE: Upgrade to 0.10-pre after snapshot\n #[crate_id = \"std#0.9\"];\n #[comment = \"The Rust standard library\"];\n #[license = \"MIT/ASL2\"];"}, {"sha": "7eebbc75f946fd371ab267e5972fa65393ca4edd", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -18,7 +18,7 @@ This API is completely unstable and subject to change.\n \n */\n \n-#[crate_id = \"syntax#0.9\"];\n+#[crate_id = \"syntax#0.10-pre\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];\n #[crate_type = \"rlib\"];"}, {"sha": "09ae09982028fc3f42ba6e491d5889b6a370ffa1", "filename": "src/test/run-make/crate-data-smoke/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -1,7 +1,7 @@\n -include ../tools.mk\n \n all:\n-\t[ `$(RUSTC) --crate-id crate.rs` = \"foo#0.9\" ]\n+\t[ `$(RUSTC) --crate-id crate.rs` = \"foo#0.10-pre\" ]\n \t[ `$(RUSTC) --crate-name crate.rs` = \"foo\" ]\n \t[ `$(RUSTC) --crate-file-name crate.rs` = \"foo\" ]\n \t[ `$(RUSTC) --crate-file-name --lib --test crate.rs` = \"foo\" ]"}, {"sha": "6fef49ac8dadb588e6cc72f632a9089e9e5a67b3", "filename": "src/test/run-make/crate-data-smoke/crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb9c1023921aa94dfe38143ba7bf8e14177de235/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs?ref=cb9c1023921aa94dfe38143ba7bf8e14177de235", "patch": "@@ -1,4 +1,4 @@\n-#[crate_id = \"foo#0.9\"];\n+#[crate_id = \"foo#0.10-pre\"];\n \n // Querying about the crate metadata should *not* parse the entire crate, it\n // only needs the crate attributes (which are guaranteed to be at the top) be"}]}