{"sha": "f841f061ecdff7c5fd791f164b4d873399621bde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NDFmMDYxZWNkZmY3YzVmZDc5MWYxNjRiNGQ4NzMzOTk2MjFiZGU=", "commit": {"author": {"name": "Ruud van Asseldonk", "email": "ruuda@google.com", "date": "2016-01-28T21:23:47Z"}, "committer": {"name": "Ruud van Asseldonk", "email": "ruuda@google.com", "date": "2016-01-28T21:27:41Z"}, "message": "Improve message for rustc --explain E0507\n\nE0507 can occur when you try to move out of a member of a mutably\nborrowed struct, in which case `mem::replace` can help. Mentioning that\nhere hopefully saves future users a trip to Google.", "tree": {"sha": "b95d09bd6f15ab131ad77040de6713f6e401d7bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b95d09bd6f15ab131ad77040de6713f6e401d7bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f841f061ecdff7c5fd791f164b4d873399621bde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f841f061ecdff7c5fd791f164b4d873399621bde", "html_url": "https://github.com/rust-lang/rust/commit/f841f061ecdff7c5fd791f164b4d873399621bde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f841f061ecdff7c5fd791f164b4d873399621bde/comments", "author": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b18aac12214d7135a083e2e6946aa197185d49", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b18aac12214d7135a083e2e6946aa197185d49", "html_url": "https://github.com/rust-lang/rust/commit/b8b18aac12214d7135a083e2e6946aa197185d49"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "6cbea1abbb5bb0e55d217eac3732ab8dc4e0477e", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f841f061ecdff7c5fd791f164b4d873399621bde/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f841f061ecdff7c5fd791f164b4d873399621bde/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=f841f061ecdff7c5fd791f164b4d873399621bde", "patch": "@@ -377,6 +377,33 @@ fn main() {\n }\n ```\n \n+Moving out of a member of a mutably borrowed struct is fine if you put something\n+back. `mem::replace` can be used for that:\n+\n+```\n+struct TheDarkKnight;\n+\n+impl TheDarkKnight {\n+    fn nothing_is_true(self) {}\n+}\n+\n+struct Batcave {\n+    knight: TheDarkKnight\n+}\n+\n+fn main() {\n+    use std::mem;\n+\n+    let mut cave = Batcave {\n+        knight: TheDarkKnight\n+    };\n+    let borrowed = &mut cave;\n+\n+    borrowed.knight.nothing_is_true(); // E0507\n+    mem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n+}\n+```\n+\n You can find more information about borrowing in the rust-book:\n http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n \"##,"}]}