{"sha": "dbf32e2270f82601bd2816da270ce70269cc59ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjMyZTIyNzBmODI2MDFiZDI4MTZkYTI3MGNlNzAyNjljYzU5YmE=", "commit": {"author": {"name": "mendess", "email": "pedro.mendes.26@gmail.com", "date": "2020-05-29T10:18:15Z"}, "committer": {"name": "mendess", "email": "pedro.mendes.26@gmail.com", "date": "2020-05-29T10:24:26Z"}, "message": "Remove flaky test and document the other's flakiness", "tree": {"sha": "d78a260248a0e64460de03d44dc5cb92514391d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d78a260248a0e64460de03d44dc5cb92514391d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf32e2270f82601bd2816da270ce70269cc59ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf32e2270f82601bd2816da270ce70269cc59ba", "html_url": "https://github.com/rust-lang/rust/commit/dbf32e2270f82601bd2816da270ce70269cc59ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf32e2270f82601bd2816da270ce70269cc59ba/comments", "author": {"login": "mendess", "id": 19352680, "node_id": "MDQ6VXNlcjE5MzUyNjgw", "avatar_url": "https://avatars.githubusercontent.com/u/19352680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mendess", "html_url": "https://github.com/mendess", "followers_url": "https://api.github.com/users/mendess/followers", "following_url": "https://api.github.com/users/mendess/following{/other_user}", "gists_url": "https://api.github.com/users/mendess/gists{/gist_id}", "starred_url": "https://api.github.com/users/mendess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mendess/subscriptions", "organizations_url": "https://api.github.com/users/mendess/orgs", "repos_url": "https://api.github.com/users/mendess/repos", "events_url": "https://api.github.com/users/mendess/events{/privacy}", "received_events_url": "https://api.github.com/users/mendess/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mendess", "id": 19352680, "node_id": "MDQ6VXNlcjE5MzUyNjgw", "avatar_url": "https://avatars.githubusercontent.com/u/19352680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mendess", "html_url": "https://github.com/mendess", "followers_url": "https://api.github.com/users/mendess/followers", "following_url": "https://api.github.com/users/mendess/following{/other_user}", "gists_url": "https://api.github.com/users/mendess/gists{/gist_id}", "starred_url": "https://api.github.com/users/mendess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mendess/subscriptions", "organizations_url": "https://api.github.com/users/mendess/orgs", "repos_url": "https://api.github.com/users/mendess/repos", "events_url": "https://api.github.com/users/mendess/events{/privacy}", "received_events_url": "https://api.github.com/users/mendess/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32eedadee1ed3273a318fa109c5261482e518578", "url": "https://api.github.com/repos/rust-lang/rust/commits/32eedadee1ed3273a318fa109c5261482e518578", "html_url": "https://github.com/rust-lang/rust/commit/32eedadee1ed3273a318fa109c5261482e518578"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "5377485da8f3b7def467ee749689494cd6399b72", "filename": "src/liballoc/tests/boxed.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dbf32e2270f82601bd2816da270ce70269cc59ba/src%2Fliballoc%2Ftests%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf32e2270f82601bd2816da270ce70269cc59ba/src%2Fliballoc%2Ftests%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fboxed.rs?ref=dbf32e2270f82601bd2816da270ce70269cc59ba", "patch": "@@ -34,6 +34,11 @@ fn box_clone_and_clone_from_equivalence() {\n     }\n }\n \n+/// This test might give a false positive in case the box realocates, but the alocator keeps the\n+/// original pointer.\n+///\n+/// On the other hand it won't give a false negative, if it fails than the memory was definitly not\n+/// reused\n #[test]\n fn box_clone_from_ptr_stability() {\n     for size in (0..8).map(|i| 2usize.pow(i)) {\n@@ -43,12 +48,4 @@ fn box_clone_from_ptr_stability() {\n         copy.clone_from(&control);\n         assert_eq!(copy.as_ptr() as usize, copy_raw);\n     }\n-\n-    for size in (0..8).map(|i| 2usize.pow(i)) {\n-        let control = vec![Dummy { _data: 42 }; size].into_boxed_slice();\n-        let mut copy = vec![Dummy { _data: 84 }; size + 1].into_boxed_slice();\n-        let copy_raw = copy.as_ptr() as usize;\n-        copy.clone_from(&control);\n-        assert_ne!(copy.as_ptr() as usize, copy_raw);\n-    }\n }"}]}