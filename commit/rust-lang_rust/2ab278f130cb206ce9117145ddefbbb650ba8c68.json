{"sha": "2ab278f130cb206ce9117145ddefbbb650ba8c68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYjI3OGYxMzBjYjIwNmNlOTExNzE0NWRkZWZiYmI2NTBiYThjNjg=", "commit": {"author": {"name": "Birunthan Mohanathas", "email": "birunthan@mohanathas.com", "date": "2013-09-21T13:31:57Z"}, "committer": {"name": "Birunthan Mohanathas", "email": "birunthan@mohanathas.com", "date": "2013-09-22T07:47:36Z"}, "message": "Reserve the `alignof`, `offsetof`, and `sizeof` keywords\nCloses #9333.", "tree": {"sha": "f3a05c3ea35007bebd243e5c9c62c2bc31576fc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3a05c3ea35007bebd243e5c9c62c2bc31576fc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ab278f130cb206ce9117145ddefbbb650ba8c68", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab278f130cb206ce9117145ddefbbb650ba8c68", "html_url": "https://github.com/rust-lang/rust/commit/2ab278f130cb206ce9117145ddefbbb650ba8c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ab278f130cb206ce9117145ddefbbb650ba8c68/comments", "author": {"login": "poiru", "id": 1319028, "node_id": "MDQ6VXNlcjEzMTkwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1319028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poiru", "html_url": "https://github.com/poiru", "followers_url": "https://api.github.com/users/poiru/followers", "following_url": "https://api.github.com/users/poiru/following{/other_user}", "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poiru/subscriptions", "organizations_url": "https://api.github.com/users/poiru/orgs", "repos_url": "https://api.github.com/users/poiru/repos", "events_url": "https://api.github.com/users/poiru/events{/privacy}", "received_events_url": "https://api.github.com/users/poiru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poiru", "id": 1319028, "node_id": "MDQ6VXNlcjEzMTkwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1319028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poiru", "html_url": "https://github.com/poiru", "followers_url": "https://api.github.com/users/poiru/followers", "following_url": "https://api.github.com/users/poiru/following{/other_user}", "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poiru/subscriptions", "organizations_url": "https://api.github.com/users/poiru/orgs", "repos_url": "https://api.github.com/users/poiru/repos", "events_url": "https://api.github.com/users/poiru/events{/privacy}", "received_events_url": "https://api.github.com/users/poiru/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eabcb39f8d5c634185174461481ec1f39fe07bcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/eabcb39f8d5c634185174461481ec1f39fe07bcb", "html_url": "https://github.com/rust-lang/rust/commit/eabcb39f8d5c634185174461481ec1f39fe07bcb"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "689af99b5c4b6b9ea5ec23fd790bf5698f5f34fc", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ab278f130cb206ce9117145ddefbbb650ba8c68/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/2ab278f130cb206ce9117145ddefbbb650ba8c68/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=2ab278f130cb206ce9117145ddefbbb650ba8c68", "patch": "@@ -34,7 +34,7 @@ syn match     rustIdentifier  contains=rustIdentifierPrime \"\\%([^[:cntrl:][:spac\n syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n \n \" Reserved (but not yet used) keywords {{{2\n-syn keyword   rustKeyword     be yield typeof\n+syn keyword   rustKeyword     alignof be offsetof pure sizeof typeof yield\n \n \" Built-in types {{{2\n syn keyword   rustType        int uint float char bool u8 u16 u32 u64 f32"}, {"sha": "6cc1058954c36201881e4fe8a2bd81896bfdfc18", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2ab278f130cb206ce9117145ddefbbb650ba8c68/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab278f130cb206ce9117145ddefbbb650ba8c68/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=2ab278f130cb206ce9117145ddefbbb650ba8c68", "patch": "@@ -482,6 +482,9 @@ fn mk_fresh_ident_interner() -> @ident_interner {\n         \"pure\",               // 65\n         \"yield\",              // 66\n         \"typeof\",             // 67\n+        \"alignof\",            // 68\n+        \"offsetof\",           // 69\n+        \"sizeof\",             // 70\n     ];\n \n     @interner::StrInterner::prefill(init_vec)\n@@ -622,14 +625,17 @@ pub mod keywords {\n         True,\n         Trait,\n         Type,\n-        Typeof,\n         Unsafe,\n         Use,\n         While,\n \n         // Reserved keywords\n+        Alignof,\n         Be,\n+        Offsetof,\n         Pure,\n+        Sizeof,\n+        Typeof,\n         Yield,\n     }\n \n@@ -667,12 +673,16 @@ pub mod keywords {\n                 True => Ident { name: 57, ctxt: 0 },\n                 Trait => Ident { name: 58, ctxt: 0 },\n                 Type => Ident { name: 59, ctxt: 0 },\n-                Typeof => Ident { name: 67, ctxt: 0 },\n                 Unsafe => Ident { name: 60, ctxt: 0 },\n                 Use => Ident { name: 61, ctxt: 0 },\n                 While => Ident { name: 62, ctxt: 0 },\n+\n+                Alignof => Ident { name: 68, ctxt: 0 },\n                 Be => Ident { name: 64, ctxt: 0 },\n+                Offsetof => Ident { name: 69, ctxt: 0 },\n                 Pure => Ident { name: 65, ctxt: 0 },\n+                Sizeof => Ident { name: 70, ctxt: 0 },\n+                Typeof => Ident { name: 67, ctxt: 0 },\n                 Yield => Ident { name: 66, ctxt: 0 },\n             }\n         }\n@@ -689,7 +699,7 @@ pub fn is_keyword(kw: keywords::Keyword, tok: &Token) -> bool {\n pub fn is_any_keyword(tok: &Token) -> bool {\n     match *tok {\n         token::IDENT(sid, false) => match sid.name {\n-            8 | 27 | 32 .. 67 => true,\n+            8 | 27 | 32 .. 70 => true,\n             _ => false,\n         },\n         _ => false\n@@ -709,7 +719,7 @@ pub fn is_strict_keyword(tok: &Token) -> bool {\n pub fn is_reserved_keyword(tok: &Token) -> bool {\n     match *tok {\n         token::IDENT(sid, false) => match sid.name {\n-            64 .. 67 => true,\n+            64 .. 70 => true,\n             _ => false,\n         },\n         _ => false,"}]}