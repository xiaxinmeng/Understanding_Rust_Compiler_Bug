{"sha": "48ff6a95b559e0c293f4c118145964332994dcc0", "node_id": "C_kwDOAAsO6NoAKDQ4ZmY2YTk1YjU1OWUwYzI5M2Y0YzExODE0NTk2NDMzMjk5NGRjYzA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-17T10:24:55Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T20:31:11Z"}, "message": "Use ty::List instead of InternalSubsts", "tree": {"sha": "e93b4f0c5583f9d5b95bc43a0e58a7549f48ae7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e93b4f0c5583f9d5b95bc43a0e58a7549f48ae7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48ff6a95b559e0c293f4c118145964332994dcc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48ff6a95b559e0c293f4c118145964332994dcc0", "html_url": "https://github.com/rust-lang/rust/commit/48ff6a95b559e0c293f4c118145964332994dcc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48ff6a95b559e0c293f4c118145964332994dcc0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "250dcf421a6db36f85f69c481eab27a0b45887af", "url": "https://api.github.com/repos/rust-lang/rust/commits/250dcf421a6db36f85f69c481eab27a0b45887af", "html_url": "https://github.com/rust-lang/rust/commit/250dcf421a6db36f85f69c481eab27a0b45887af"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "d733eebcad6c5a20e54e4133919fdee3c70e7f6d", "filename": "compiler/rustc_lint/src/non_fmt_panic.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48ff6a95b559e0c293f4c118145964332994dcc0/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ff6a95b559e0c293f4c118145964332994dcc0/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs?ref=48ff6a95b559e0c293f4c118145964332994dcc0", "patch": "@@ -5,7 +5,6 @@ use rustc_hir as hir;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty;\n-use rustc_middle::ty::subst::InternalSubsts;\n use rustc_parse_format::{ParseMode, Parser, Piece};\n use rustc_session::lint::FutureIncompatibilityReason;\n use rustc_span::edition::Edition;\n@@ -154,15 +153,11 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n             let infcx = cx.tcx.infer_ctxt().build();\n             let suggest_display = is_str\n                 || cx.tcx.get_diagnostic_item(sym::Display).map(|t| {\n-                    infcx\n-                        .type_implements_trait(t, ty, InternalSubsts::empty(), cx.param_env)\n-                        .may_apply()\n+                    infcx.type_implements_trait(t, ty, ty::List::empty(), cx.param_env).may_apply()\n                 }) == Some(true);\n             let suggest_debug = !suggest_display\n                 && cx.tcx.get_diagnostic_item(sym::Debug).map(|t| {\n-                    infcx\n-                        .type_implements_trait(t, ty, InternalSubsts::empty(), cx.param_env)\n-                        .may_apply()\n+                    infcx.type_implements_trait(t, ty, ty::List::empty(), cx.param_env).may_apply()\n                 }) == Some(true);\n \n             let suggest_panic_any = !is_str && panic == sym::std_panic_macro;"}]}