{"sha": "05b2cb8ecc30c6758f6042da7e3fc5c603be0f23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YjJjYjhlY2MzMGM2NzU4ZjYwNDJkYTdlM2ZjNWM2MDNiZTBmMjM=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-22T05:01:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-24T22:55:53Z"}, "message": "rustc: Accepts `path` attributes for crate directives\n\nTemporarily allow path specified in either as attribute or in AST, like:\n\n  #[path = \"mymod.rs\"]\n  mod mymod = \"mymod.rs\";\n\nThis is a transitional commit to avoid creating a stage1 snapshot.", "tree": {"sha": "b6a35b43b1571dead52893721db67e3fe5aa137a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6a35b43b1571dead52893721db67e3fe5aa137a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05b2cb8ecc30c6758f6042da7e3fc5c603be0f23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05b2cb8ecc30c6758f6042da7e3fc5c603be0f23", "html_url": "https://github.com/rust-lang/rust/commit/05b2cb8ecc30c6758f6042da7e3fc5c603be0f23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05b2cb8ecc30c6758f6042da7e3fc5c603be0f23/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2253ed5d1c056dac47c2fbd9dfd399a655230db0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2253ed5d1c056dac47c2fbd9dfd399a655230db0", "html_url": "https://github.com/rust-lang/rust/commit/2253ed5d1c056dac47c2fbd9dfd399a655230db0"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "4f81a1dfe731607b379d60f072aa2f4a2cdf2b89", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05b2cb8ecc30c6758f6042da7e3fc5c603be0f23/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05b2cb8ecc30c6758f6042da7e3fc5c603be0f23/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=05b2cb8ecc30c6758f6042da7e3fc5c603be0f23", "patch": "@@ -2478,7 +2478,9 @@ fn parse_crate_directive(p: parser, first_outer_attr: [ast::attribute]) ->\n         let file_opt =\n             alt p.peek() {\n               token::EQ. { p.bump(); some(parse_str(p)) }\n-              _ { none }\n+              _ {\n+                attr::get_meta_item_value_str_by_name(outer_attrs, \"path\")\n+              }\n             };\n         alt p.peek() {\n           // mod x = \"foo.rs\";"}]}