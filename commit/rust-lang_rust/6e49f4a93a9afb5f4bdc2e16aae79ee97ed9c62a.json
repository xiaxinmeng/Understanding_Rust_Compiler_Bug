{"sha": "6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNDlmNGE5M2E5YWZiNWY0YmRjMmUxNmFhZTc5ZWU5N2VkOWM2MmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-03T22:39:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-03T22:39:19Z"}, "message": "Auto merge of #1093 - RalfJung:throw-machine-stop, r=RalfJung\n\nuse throw_machine_stop macro\n\nBlocked on https://github.com/rust-lang/rust/pull/66951", "tree": {"sha": "27588a47ddd36e3f89d52b033f2cbb2d2d18611f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27588a47ddd36e3f89d52b033f2cbb2d2d18611f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "html_url": "https://github.com/rust-lang/rust/commit/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c388361cc2db82568d5e90fefea864f0af8d35e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c388361cc2db82568d5e90fefea864f0af8d35e9", "html_url": "https://github.com/rust-lang/rust/commit/c388361cc2db82568d5e90fefea864f0af8d35e9"}, {"sha": "07af5c9ffc458f34eb31fc338a3785a1c81fa04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/07af5c9ffc458f34eb31fc338a3785a1c81fa04c", "html_url": "https://github.com/rust-lang/rust/commit/07af5c9ffc458f34eb31fc338a3785a1c81fa04c"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "644ec5ed807212f629bf8bc864fa8d8fc942ae48", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "patch": "@@ -1 +1 @@\n-f577b0ef6e637ab7a6095cdfe0b51fa3faf97050\n+7afe6d9d1f48b998cc88fe6f01ba0082788ba4b9"}, {"sha": "316cc686ad77d301e7dd751fdbddef88f4bbc185", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "patch": "@@ -154,8 +154,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             \"exit\" | \"ExitProcess\" => {\n                 // it's really u32 for ExitProcess, but we have to put it into the `Exit` variant anyway\n                 let code = this.read_scalar(args[0])?.to_i32()?;\n-                let ti = Box::new(TerminationInfo::Exit(code.into()));\n-                return Err(InterpError::MachineStop(ti).into());\n+                throw_machine_stop!(TerminationInfo::Exit(code.into()));\n             }\n             _ => {\n                 if let Some(p) = ret {"}, {"sha": "57b77a8b749025f349476145ff804c54fe5a0a18", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=6e49f4a93a9afb5f4bdc2e16aae79ee97ed9c62a", "patch": "@@ -34,8 +34,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // Handle diverging intrinsics.\n         let (dest, ret) = match intrinsic_name {\n             \"abort\" => {\n-                let ti = Box::new(TerminationInfo::Abort);\n-                return Err(InterpError::MachineStop(ti).into());\n+                throw_machine_stop!(TerminationInfo::Abort);\n             }\n             \"miri_start_panic\" => return this.handle_miri_start_panic(args, unwind),\n             _ => {"}]}