{"sha": "5045d4e39621b265eca947277f07e23f62608ad0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNDVkNGUzOTYyMWIyNjVlY2E5NDcyNzdmMDdlMjNmNjI2MDhhZDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-01T08:19:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-01T08:19:47Z"}, "message": "Auto merge of #36824 - kali:master, r=alexcrichton\n\nSO_NOSIGPIPE and MSG_NOSIGNAL (rebased #36426)\n\nI'm not sure what happened when I pushed a rebased branch on #36426 , github closed it...", "tree": {"sha": "ce679fbf026bd14ac8c54f9b82093a4454cf0909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce679fbf026bd14ac8c54f9b82093a4454cf0909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5045d4e39621b265eca947277f07e23f62608ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5045d4e39621b265eca947277f07e23f62608ad0", "html_url": "https://github.com/rust-lang/rust/commit/5045d4e39621b265eca947277f07e23f62608ad0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5045d4e39621b265eca947277f07e23f62608ad0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b00355119ba0473eae420049f96f5be91be1bab", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b00355119ba0473eae420049f96f5be91be1bab", "html_url": "https://github.com/rust-lang/rust/commit/8b00355119ba0473eae420049f96f5be91be1bab"}, {"sha": "5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "html_url": "https://github.com/rust-lang/rust/commit/5980d5bfddb8f1e92cee7f9a156c4758615bee4b"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "b474785561d58efbd27add9d22339dcabad742ad", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=5045d4e39621b265eca947277f07e23f62608ad0", "patch": "@@ -1 +1 @@\n-Subproject commit eb708c020826a8d792a5a5275be147aabe47fe24\n+Subproject commit b474785561d58efbd27add9d22339dcabad742ad"}, {"sha": "2599bb660e813de607551694d513973217fedef4", "filename": "src/libstd/sys/common/net.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5045d4e39621b265eca947277f07e23f62608ad0/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5045d4e39621b265eca947277f07e23f62608ad0/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs?ref=5045d4e39621b265eca947277f07e23f62608ad0", "patch": "@@ -42,6 +42,11 @@ use sys::net::netc::IPV6_LEAVE_GROUP as IPV6_DROP_MEMBERSHIP;\n               target_os = \"solaris\", target_os = \"haiku\")))]\n use sys::net::netc::IPV6_DROP_MEMBERSHIP;\n \n+#[cfg(target_os = \"linux\")]\n+use libc::MSG_NOSIGNAL;\n+#[cfg(not(target_os = \"linux\"))]\n+const MSG_NOSIGNAL: c_int = 0x0; // unused dummy value\n+\n ////////////////////////////////////////////////////////////////////////////////\n // sockaddr and misc bindings\n ////////////////////////////////////////////////////////////////////////////////\n@@ -225,7 +230,7 @@ impl TcpStream {\n             c::send(*self.inner.as_inner(),\n                     buf.as_ptr() as *const c_void,\n                     len,\n-                    0)\n+                    MSG_NOSIGNAL)\n         })?;\n         Ok(ret as usize)\n     }\n@@ -449,7 +454,7 @@ impl UdpSocket {\n         let ret = cvt(unsafe {\n             c::sendto(*self.inner.as_inner(),\n                       buf.as_ptr() as *const c_void, len,\n-                      0, dstp, dstlen)\n+                      MSG_NOSIGNAL, dstp, dstlen)\n         })?;\n         Ok(ret as usize)\n     }\n@@ -573,7 +578,7 @@ impl UdpSocket {\n             c::send(*self.inner.as_inner(),\n                     buf.as_ptr() as *const c_void,\n                     len,\n-                    0)\n+                    MSG_NOSIGNAL)\n         })?;\n         Ok(ret as usize)\n     }"}, {"sha": "622fd4b85a59afe2a9fedad389c4d93443374a4e", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5045d4e39621b265eca947277f07e23f62608ad0/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5045d4e39621b265eca947277f07e23f62608ad0/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=5045d4e39621b265eca947277f07e23f62608ad0", "patch": "@@ -28,6 +28,11 @@ use sys::cvt;\n use sys::net::Socket;\n use sys_common::{AsInner, FromInner, IntoInner};\n \n+#[cfg(target_os = \"linux\")]\n+use libc::MSG_NOSIGNAL;\n+#[cfg(not(target_os = \"linux\"))]\n+const MSG_NOSIGNAL: libc::c_int = 0x0; // unused dummy value\n+\n fn sun_path_offset() -> usize {\n     unsafe {\n         // Work with an actual instance of the type since using a null pointer is UB\n@@ -690,7 +695,7 @@ impl UnixDatagram {\n                 let count = cvt(libc::sendto(*d.0.as_inner(),\n                                              buf.as_ptr() as *const _,\n                                              buf.len(),\n-                                             0,\n+                                             MSG_NOSIGNAL,\n                                              &addr as *const _ as *const _,\n                                              len))?;\n                 Ok(count as usize)"}, {"sha": "ad287bbec3889b276c5292c7fa6efa082600b472", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5045d4e39621b265eca947277f07e23f62608ad0/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5045d4e39621b265eca947277f07e23f62608ad0/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=5045d4e39621b265eca947277f07e23f62608ad0", "patch": "@@ -33,6 +33,14 @@ use libc::SOCK_CLOEXEC;\n #[cfg(not(target_os = \"linux\"))]\n const SOCK_CLOEXEC: c_int = 0;\n \n+// Another conditional contant for name resolution: Macos et iOS use\n+// SO_NOSIGPIPE as a setsockopt flag to disable SIGPIPE emission on socket.\n+// Other platforms do otherwise.\n+#[cfg(target_vendor = \"apple\")]\n+use libc::SO_NOSIGPIPE;\n+#[cfg(not(target_vendor = \"apple\"))]\n+const SO_NOSIGPIPE: c_int = 0;\n+\n pub struct Socket(FileDesc);\n \n pub fn init() {}\n@@ -81,7 +89,11 @@ impl Socket {\n             let fd = cvt(libc::socket(fam, ty, 0))?;\n             let fd = FileDesc::new(fd);\n             fd.set_cloexec()?;\n-            Ok(Socket(fd))\n+            let socket = Socket(fd);\n+            if cfg!(target_vendor = \"apple\") {\n+                setsockopt(&socket, libc::SOL_SOCKET, SO_NOSIGPIPE, 1)?;\n+            }\n+            Ok(socket)\n         }\n     }\n "}]}