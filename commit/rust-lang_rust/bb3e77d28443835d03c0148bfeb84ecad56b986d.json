{"sha": "bb3e77d28443835d03c0148bfeb84ecad56b986d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiM2U3N2QyODQ0MzgzNWQwM2MwMTQ4YmZlYjg0ZWNhZDU2Yjk4NmQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-29T15:28:33Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-29T15:28:33Z"}, "message": "Change a flat_map with 0/1-element vecs to a filter_map", "tree": {"sha": "4e2c4f04ccf8516ce986b829056857274b6f5456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e2c4f04ccf8516ce986b829056857274b6f5456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb3e77d28443835d03c0148bfeb84ecad56b986d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb3e77d28443835d03c0148bfeb84ecad56b986d", "html_url": "https://github.com/rust-lang/rust/commit/bb3e77d28443835d03c0148bfeb84ecad56b986d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb3e77d28443835d03c0148bfeb84ecad56b986d/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e88b7363b7858960ccfd87326ece9d00bf4d973", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e88b7363b7858960ccfd87326ece9d00bf4d973", "html_url": "https://github.com/rust-lang/rust/commit/4e88b7363b7858960ccfd87326ece9d00bf4d973"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cde08f6832ace274442b89c18e51996c782ed491", "filename": "src/librustc_traits/implied_outlives_bounds.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bb3e77d28443835d03c0148bfeb84ecad56b986d/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3e77d28443835d03c0148bfeb84ecad56b986d/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs?ref=bb3e77d28443835d03c0148bfeb84ecad56b986d", "patch": "@@ -159,14 +159,14 @@ fn implied_bounds_from_components(\n ) -> Vec<OutlivesBound<'tcx>> {\n     sup_components\n         .into_iter()\n-        .flat_map(|component| {\n+        .filter_map(|component| {\n             match component {\n                 Component::Region(r) =>\n-                    vec![OutlivesBound::RegionSubRegion(sub_region, r)],\n+                    Some(OutlivesBound::RegionSubRegion(sub_region, r)),\n                 Component::Param(p) =>\n-                    vec![OutlivesBound::RegionSubParam(sub_region, p)],\n+                    Some(OutlivesBound::RegionSubParam(sub_region, p)),\n                 Component::Projection(p) =>\n-                    vec![OutlivesBound::RegionSubProjection(sub_region, p)],\n+                    Some(OutlivesBound::RegionSubProjection(sub_region, p)),\n                 Component::EscapingProjection(_) =>\n                 // If the projection has escaping regions, don't\n                 // try to infer any implied bounds even for its\n@@ -176,9 +176,9 @@ fn implied_bounds_from_components(\n                 // idea is that the WAY that the caller proves\n                 // that may change in the future and we want to\n                 // give ourselves room to get smarter here.\n-                    vec![],\n+                    None,\n                 Component::UnresolvedInferenceVariable(..) =>\n-                    vec![],\n+                    None,\n             }\n         })\n         .collect()"}]}