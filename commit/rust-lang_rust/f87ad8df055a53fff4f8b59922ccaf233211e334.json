{"sha": "f87ad8df055a53fff4f8b59922ccaf233211e334", "node_id": "C_kwDOAAsO6NoAKGY4N2FkOGRmMDU1YTUzZmZmNGY4YjU5OTIyY2NhZjIzMzIxMWUzMzQ", "commit": {"author": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-09-19T18:26:09Z"}, "committer": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-09-19T18:26:35Z"}, "message": "Added FIXME for the repr type of the enum", "tree": {"sha": "658d506036f62ebd8de22ff09337f4c2b44a66ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/658d506036f62ebd8de22ff09337f4c2b44a66ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f87ad8df055a53fff4f8b59922ccaf233211e334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f87ad8df055a53fff4f8b59922ccaf233211e334", "html_url": "https://github.com/rust-lang/rust/commit/f87ad8df055a53fff4f8b59922ccaf233211e334", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f87ad8df055a53fff4f8b59922ccaf233211e334/comments", "author": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3931e55aee05b883653aee73659a164fbb60578f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3931e55aee05b883653aee73659a164fbb60578f", "html_url": "https://github.com/rust-lang/rust/commit/3931e55aee05b883653aee73659a164fbb60578f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "7d1c98207586df7db355205b7f4837bc95b08ca9", "filename": "crates/hir-ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f87ad8df055a53fff4f8b59922ccaf233211e334/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f87ad8df055a53fff4f8b59922ccaf233211e334/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=f87ad8df055a53fff4f8b59922ccaf233211e334", "patch": "@@ -68,6 +68,7 @@ pub(crate) fn infer_query(db: &dyn HirDatabase, def: DefWithBodyId) -> Arc<Infer\n         DefWithBodyId::FunctionId(f) => ctx.collect_fn(f),\n         DefWithBodyId::StaticId(s) => ctx.collect_static(&db.static_data(s)),\n         DefWithBodyId::VariantId(v) => {\n+            // FIXME: This should return the `repr(...)` type of the enum\n             ctx.return_ty = TyBuilder::def_ty(db, v.parent.into()).fill_with_unknown().build()\n         }\n     }"}]}