{"sha": "f199627e69baccdb44f41e945d189aa04d0df022", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOTk2MjdlNjliYWNjZGI0NGY0MWU5NDVkMTg5YWEwNGQwZGYwMjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-04-24T21:45:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-04-24T21:45:18Z"}, "message": "Remove useless code and update index page test", "tree": {"sha": "43793dccbbb1806eaf9cc906644ddfed8da267d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43793dccbbb1806eaf9cc906644ddfed8da267d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f199627e69baccdb44f41e945d189aa04d0df022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f199627e69baccdb44f41e945d189aa04d0df022", "html_url": "https://github.com/rust-lang/rust/commit/f199627e69baccdb44f41e945d189aa04d0df022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f199627e69baccdb44f41e945d189aa04d0df022/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d676386b1e4ffdbd76e846ccf24c80fb4c7926ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/d676386b1e4ffdbd76e846ccf24c80fb4c7926ba", "html_url": "https://github.com/rust-lang/rust/commit/d676386b1e4ffdbd76e846ccf24c80fb4c7926ba"}], "stats": {"total": 30, "additions": 5, "deletions": 25}, "files": [{"sha": "703f7b18d160edf2e8c79e724e6714afd6b6c7fe", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f199627e69baccdb44f41e945d189aa04d0df022/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f199627e69baccdb44f41e945d189aa04d0df022/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=f199627e69baccdb44f41e945d189aa04d0df022", "patch": "@@ -951,40 +951,15 @@ themePicker.onblur = handleThemeButtonsBlur;\n         key: &str,\n         for_search_index: bool,\n     ) -> io::Result<(Vec<String>, Vec<String>, Vec<String>)> {\n-        use minifier::js;\n-\n         let mut ret = Vec::new();\n         let mut krates = Vec::new();\n         let mut variables = Vec::new();\n \n-        let mut krate = krate.to_owned();\n-\n         if path.exists() {\n             for line in BufReader::new(File::open(path)?).lines() {\n                 let line = line?;\n                 if for_search_index && line.starts_with(\"var R\") {\n                     variables.push(line.clone());\n-                    // We need to check if the crate name has been put into a variable as well.\n-                    let tokens: js::Tokens<'_> = js::simple_minify(&line)\n-                                                    .into_iter()\n-                                                    .filter(js::clean_token)\n-                                                    .collect::<Vec<_>>()\n-                                                    .into();\n-                    let mut pos = 0;\n-                    while pos < tokens.len() {\n-                        if let Some((var_pos, Some(value_pos))) =\n-                                js::get_variable_name_and_value_positions(&tokens, pos) {\n-                            if let Some(s) = tokens.0[value_pos].get_string() {\n-                                if &s[1..s.len() - 1] == krate {\n-                                    if let Some(var) = tokens[var_pos].get_other() {\n-                                        krate = var.to_owned();\n-                                        break\n-                                    }\n-                                }\n-                            }\n-                        }\n-                        pos += 1;\n-                    }\n                     continue;\n                 }\n                 if !line.starts_with(key) {\n@@ -1344,6 +1319,8 @@ fn write_minify_replacer<W: Write>(\n                             f,\n                             \"R\",\n                             Token::Char(ReservedChar::Backline),\n+                            // This closure prevents crates' name to be aggregated. It allows to not\n+                            // have to look for crate's name into the strings array.\n                             |tokens, pos| {\n                                 pos < 2 ||\n                                 !tokens[pos - 1].is_char(ReservedChar::OpenBracket) ||"}, {"sha": "f0476f083b8a15d1e39222faece26c3fc0c3c12c", "filename": "src/test/rustdoc/index-page.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f199627e69baccdb44f41e945d189aa04d0df022/src%2Ftest%2Frustdoc%2Findex-page.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f199627e69baccdb44f41e945d189aa04d0df022/src%2Ftest%2Frustdoc%2Findex-page.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Findex-page.rs?ref=f199627e69baccdb44f41e945d189aa04d0df022", "patch": "@@ -1,8 +1,11 @@\n+// aux-build:all-item-types.rs\n+// build-aux-docs\n // compile-flags: -Z unstable-options --enable-index-page\n \n #![crate_name = \"foo\"]\n \n // @has foo/../index.html\n // @has - '//span[@class=\"in-band\"]' 'List of all crates'\n // @has - '//ul[@class=\"mod\"]//a[@href=\"foo/index.html\"]' 'foo'\n+// @has - '//ul[@class=\"mod\"]//a[@href=\"all_item_types/index.html\"]' 'all_item_types'\n pub struct Foo;"}]}