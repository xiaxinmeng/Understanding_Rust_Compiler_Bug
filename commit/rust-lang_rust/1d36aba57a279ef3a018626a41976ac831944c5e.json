{"sha": "1d36aba57a279ef3a018626a41976ac831944c5e", "node_id": "C_kwDOAAsO6NoAKDFkMzZhYmE1N2EyNzllZjNhMDE4NjI2YTQxOTc2YWM4MzE5NDRjNWU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-18T07:54:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-18T07:54:10Z"}, "message": "Auto merge of #13045 - DorianListens:dscheidt/run-test-mod-outside, r=Veykril\n\nfeat: Run test mod from anywhere in parent file\n\nThe \"Run\" feature of rust-analyzer is super useful, especially for running\nindividual tests or test-modules during development.\n\nOne common pattern in rust development is to develop tests in the same file as\nproduction code, inside a module (usually called `test` or `tests`) marked with\n`#[cfg(test)]`.  Unforunately, this pattern is not well supported by r-a today,\nas a test module won't show up as a runnable unless the cursor is inside it.\n\nIn my experience, it is quite common to want to run the tests associated with\nsome production code immediately after editing it, not only after editing the\ntests themselves. As such it would be better if test modules were available\nfrom the \"Run\" menu even when the cursor is outside the test module.\n\nThis change updates the filtration logic for runnables in\n`handlers::handle_runnables` to special case `RunnableKind::TestMod`, making\ntest modules available regardless of the cursor location. Other `RunnableKind`s\nare unnaffected.\n\nFixes #9589", "tree": {"sha": "cb1dbb8a54ee745a147ec9221fb15bea95cf41fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb1dbb8a54ee745a147ec9221fb15bea95cf41fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d36aba57a279ef3a018626a41976ac831944c5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d36aba57a279ef3a018626a41976ac831944c5e", "html_url": "https://github.com/rust-lang/rust/commit/1d36aba57a279ef3a018626a41976ac831944c5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d36aba57a279ef3a018626a41976ac831944c5e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1da9156b0d0eca01aaea06e2ae246c16dacf3053", "url": "https://api.github.com/repos/rust-lang/rust/commits/1da9156b0d0eca01aaea06e2ae246c16dacf3053", "html_url": "https://github.com/rust-lang/rust/commit/1da9156b0d0eca01aaea06e2ae246c16dacf3053"}, {"sha": "85b9568e2d7cc3c4b9a9d420ab3d4b91037bc6a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/85b9568e2d7cc3c4b9a9d420ab3d4b91037bc6a5", "html_url": "https://github.com/rust-lang/rust/commit/85b9568e2d7cc3c4b9a9d420ab3d4b91037bc6a5"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "6337d49c24074e1df2286193b8b6b4d09a8c2f54", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1d36aba57a279ef3a018626a41976ac831944c5e/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d36aba57a279ef3a018626a41976ac831944c5e/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=1d36aba57a279ef3a018626a41976ac831944c5e", "patch": "@@ -703,10 +703,8 @@ pub(crate) fn handle_runnables(\n \n     let mut res = Vec::new();\n     for runnable in snap.analysis.runnables(file_id)? {\n-        if let Some(offset) = offset {\n-            if !runnable.nav.full_range.contains_inclusive(offset) {\n-                continue;\n-            }\n+        if should_skip_for_offset(&runnable, offset) {\n+            continue;\n         }\n         if should_skip_target(&runnable, cargo_spec.as_ref()) {\n             continue;\n@@ -772,6 +770,14 @@ pub(crate) fn handle_runnables(\n     Ok(res)\n }\n \n+fn should_skip_for_offset(runnable: &Runnable, offset: Option<TextSize>) -> bool {\n+    match offset {\n+        None => false,\n+        _ if matches!(&runnable.kind, RunnableKind::TestMod { .. }) => false,\n+        Some(offset) => !runnable.nav.full_range.contains_inclusive(offset),\n+    }\n+}\n+\n pub(crate) fn handle_related_tests(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::TextDocumentPositionParams,"}]}