{"sha": "85617f1c9311efb39e5b8b68e6430a8a9ecbfd38", "node_id": "C_kwDOAAsO6NoAKDg1NjE3ZjFjOTMxMWVmYjM5ZTViOGI2OGU2NDMwYThhOWVjYmZkMzg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-06T12:34:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-06T12:34:58Z"}, "message": "Rollup merge of #97767 - RalfJung:variadic, r=davidtwco\n\ninterpret: do not claim UB until we looked more into variadic functions\n\nI am not actually sure if this is UB, and anyway for FFI shims, Miri currently does not attempt to distinguish between arguments passed via variadics vs directly. So let's be consistent.\n(Programs that ran into this error will anyway immediately fall through to the \"unsupported\" message on the next line.)", "tree": {"sha": "1c064012fb4123685a6caa2e6efb5d3539f73a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c064012fb4123685a6caa2e6efb5d3539f73a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85617f1c9311efb39e5b8b68e6430a8a9ecbfd38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJinfRyCRBK7hj4Ov3rIwAA8ccIAAHCU9hCyTHF1w1ElK7tXwmL\nBbjx11htDE1e3SnrkSeb+Fj1b4bg0sUkEYx0OVdcvJqXLZb7UbGP1S+VAhOpAWM3\nHKb7e33nfsB8gIHEUq1wTyXtChKmBHv/5alRqnqoPAiGGVtCprLNgk9R3W7r2cfA\nIutjxklzaFHm0OJVz66XtSR366pveOlDsHN6FVUxM/2YYEGkLJtFS6b2stWPNDyF\nWYPOC1BKKnfCsYNUSXZwWD7vlznPVenOYFu7YvZjeRXGuLb+7orIWf8BDw86es9S\n0jdy1WeC8gzz5MBch5VOhizAI0cfuJXlovUC3LSTqH5UlVY4+brwVHWpwgK8RnM=\n=D5mF\n-----END PGP SIGNATURE-----\n", "payload": "tree 1c064012fb4123685a6caa2e6efb5d3539f73a58\nparent 6da214c1e2a85b420eacec0dc36525aab586e823\nparent a6207ec975abeb6132aeeede0d3895dbe1d877a8\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654518898 +0200\ncommitter GitHub <noreply@github.com> 1654518898 +0200\n\nRollup merge of #97767 - RalfJung:variadic, r=davidtwco\n\ninterpret: do not claim UB until we looked more into variadic functions\n\nI am not actually sure if this is UB, and anyway for FFI shims, Miri currently does not attempt to distinguish between arguments passed via variadics vs directly. So let's be consistent.\n(Programs that ran into this error will anyway immediately fall through to the \"unsupported\" message on the next line.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85617f1c9311efb39e5b8b68e6430a8a9ecbfd38", "html_url": "https://github.com/rust-lang/rust/commit/85617f1c9311efb39e5b8b68e6430a8a9ecbfd38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85617f1c9311efb39e5b8b68e6430a8a9ecbfd38/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6da214c1e2a85b420eacec0dc36525aab586e823", "url": "https://api.github.com/repos/rust-lang/rust/commits/6da214c1e2a85b420eacec0dc36525aab586e823", "html_url": "https://github.com/rust-lang/rust/commit/6da214c1e2a85b420eacec0dc36525aab586e823"}, {"sha": "a6207ec975abeb6132aeeede0d3895dbe1d877a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6207ec975abeb6132aeeede0d3895dbe1d877a8", "html_url": "https://github.com/rust-lang/rust/commit/a6207ec975abeb6132aeeede0d3895dbe1d877a8"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "57d06b48ca4da44749657a307eeb8fd5cef6cce3", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/85617f1c9311efb39e5b8b68e6430a8a9ecbfd38/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85617f1c9311efb39e5b8b68e6430a8a9ecbfd38/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=85617f1c9311efb39e5b8b68e6430a8a9ecbfd38", "patch": "@@ -353,12 +353,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 // FIXME: for variadic support, do we have to somehow determine callee's extra_args?\n                 let callee_fn_abi = self.fn_abi_of_instance(instance, ty::List::empty())?;\n \n-                if callee_fn_abi.c_variadic != caller_fn_abi.c_variadic {\n-                    throw_ub_format!(\n-                        \"calling a c-variadic function via a non-variadic call site, or vice versa\"\n-                    );\n-                }\n-                if callee_fn_abi.c_variadic {\n+                if callee_fn_abi.c_variadic || caller_fn_abi.c_variadic {\n                     throw_unsup_format!(\"calling a c-variadic function is not supported\");\n                 }\n "}]}