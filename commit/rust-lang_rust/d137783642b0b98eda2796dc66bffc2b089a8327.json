{"sha": "d137783642b0b98eda2796dc66bffc2b089a8327", "node_id": "C_kwDOAAsO6NoAKGQxMzc3ODM2NDJiMGI5OGVkYTI3OTZkYzY2YmZmYzJiMDg5YTgzMjc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-11T14:42:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-11T14:42:45Z"}, "message": "Auto merge of #102900 - abrachet:master, r=bjorn3\n\nDon't internalize __llvm_profile_counter_bias\n\nCurrently, LLVM profiling runtime counter relocation cannot be used by rust during LTO because symbols are being internalized before all symbol information is known.\n\nThis mode makes LLVM emit a __llvm_profile_counter_bias symbol which is referenced by the profiling initialization, which itself is pulled in by the rust driver here [1].\n\nIt is enabled with -Cllvm-args=-runtime-counter-relocation for platforms which are opt-in to this mode like Linux. On these platforms there will be no link error, rather just surprising behavior for a user which request runtime counter relocation. The profiling runtime will not see that symbol go on as if it were never there. On Fuchsia, the profiling runtime must have this symbol which will cause a hard link error.\n\nAs an aside, I don't have enough context as to why rust's LTO model is how it is. AFAICT, the internalize pass is only safe to run at link time when all symbol information is actually known, this being an example as to why. I think special casing this symbol as a known one that LLVM can emit which should not have it's visbility de-escalated should be fine given how seldom this pattern of defining an undefined symbol to get initilization code pulled in is. From a quick grep, __llvm_profile_runtime is the only symbol that rustc does this for.\n\n[1] https://github.com/rust-lang/rust/blob/0265a3e93bf1b89d97cae113ed214954d5c35e22/compiler/rustc_codegen_ssa/src/back/linker.rs#L598", "tree": {"sha": "e9c78732ef81279fab96d40eca25b2f7a00831dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9c78732ef81279fab96d40eca25b2f7a00831dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d137783642b0b98eda2796dc66bffc2b089a8327", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d137783642b0b98eda2796dc66bffc2b089a8327", "html_url": "https://github.com/rust-lang/rust/commit/d137783642b0b98eda2796dc66bffc2b089a8327", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d137783642b0b98eda2796dc66bffc2b089a8327/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4de4d60779ba9c1f79d851e8ffceb038e9042610", "url": "https://api.github.com/repos/rust-lang/rust/commits/4de4d60779ba9c1f79d851e8ffceb038e9042610", "html_url": "https://github.com/rust-lang/rust/commit/4de4d60779ba9c1f79d851e8ffceb038e9042610"}, {"sha": "5d88d3605339d61c81d16b29a1c01edf771a8fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d88d3605339d61c81d16b29a1c01edf771a8fe6", "html_url": "https://github.com/rust-lang/rust/commit/5d88d3605339d61c81d16b29a1c01edf771a8fe6"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "551663bfbbd30177707d0d72a6e901e7af4da328", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d137783642b0b98eda2796dc66bffc2b089a8327/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d137783642b0b98eda2796dc66bffc2b089a8327/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=d137783642b0b98eda2796dc66bffc2b089a8327", "patch": "@@ -133,6 +133,10 @@ fn prepare_lto(\n         }\n     }\n \n+    // __llvm_profile_counter_bias is pulled in at link time by an undefined reference to\n+    // __llvm_profile_runtime, therefore we won't know until link time if this symbol\n+    // should have default visibility.\n+    symbols_below_threshold.push(CString::new(\"__llvm_profile_counter_bias\").unwrap());\n     Ok((symbols_below_threshold, upstream_modules))\n }\n "}, {"sha": "28caa7f4aa3534e7521e2ef6f956b59adfae13f5", "filename": "src/test/codegen/pgo-counter-bias.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d137783642b0b98eda2796dc66bffc2b089a8327/src%2Ftest%2Fcodegen%2Fpgo-counter-bias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d137783642b0b98eda2796dc66bffc2b089a8327/src%2Ftest%2Fcodegen%2Fpgo-counter-bias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpgo-counter-bias.rs?ref=d137783642b0b98eda2796dc66bffc2b089a8327", "patch": "@@ -0,0 +1,10 @@\n+// Test that __llvm_profile_counter_bias does not get internalized by lto.\n+\n+// ignore-macos -runtime-counter-relocation not honored on Mach-O\n+// compile-flags: -Cprofile-generate -Cllvm-args=-runtime-counter-relocation -Clto=fat\n+// needs-profiler-support\n+// no-prefer-dynamic\n+\n+// CHECK: @__llvm_profile_counter_bias = {{.*}}global\n+\n+pub fn main() {}"}]}