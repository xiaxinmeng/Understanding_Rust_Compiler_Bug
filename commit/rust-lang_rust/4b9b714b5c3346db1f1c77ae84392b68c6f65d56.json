{"sha": "4b9b714b5c3346db1f1c77ae84392b68c6f65d56", "node_id": "C_kwDOAAsO6NoAKDRiOWI3MTRiNWMzMzQ2ZGIxZjFjNzdhZTg0MzkyYjY4YzZmNjVkNTY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-14T12:05:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-14T12:05:17Z"}, "message": "Merge #10759\n\n10759: make `add_missing_match_arms` applicable at the end of the match r=Veykril a=rainy-me\n\nclose #10740\n\nCo-authored-by: rainy-me <github@yue.coffee>", "tree": {"sha": "99cd0dc61b264f0fce8536a72de95c8219acfc14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99cd0dc61b264f0fce8536a72de95c8219acfc14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b9b714b5c3346db1f1c77ae84392b68c6f65d56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhkPt9CRBK7hj4Ov3rIwAAz/4IAGkcE4RHzA/Szt1VbNSTd3xo\nRJg40IE7mUBenItgFAyQI+Spi6/v4JNPHhp2UV35Fhebl/FBcKw6XhSrJfEgIf07\nxz52s+VGzyWhDUSDdu5xiQwWEUXJVtWAQ94zqi32pCZvCD9mLpmvHIxvAxbCBY+X\nUxyvVeodvm1wiX56iaufXcmk3gejG4e5mXPT8DTneix/Gp+ZAswwgNhbjHaLN2uX\n38nnFIt5RbtWxrEEQjDacxAbuU+Lmyr9yZ3Q+DQbfVgCNxRhV60dGmyhNSSmEgXd\nPGfHoG1ZU+kpOWRTquZsTY0vAAqeunS2Gf3SD06a476uqkajjycQwofsn0LWva4=\n=pe8n\n-----END PGP SIGNATURE-----\n", "payload": "tree 99cd0dc61b264f0fce8536a72de95c8219acfc14\nparent 212095a07dd95269265e81fd523ecabb5c8dc5ad\nparent 1f3da38d94ddbc728e6d5c6eef69166406329b97\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1636891517 +0000\ncommitter GitHub <noreply@github.com> 1636891517 +0000\n\nMerge #10759\n\n10759: make `add_missing_match_arms` applicable at the end of the match r=Veykril a=rainy-me\n\nclose #10740\n\nCo-authored-by: rainy-me <github@yue.coffee>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b714b5c3346db1f1c77ae84392b68c6f65d56", "html_url": "https://github.com/rust-lang/rust/commit/4b9b714b5c3346db1f1c77ae84392b68c6f65d56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b714b5c3346db1f1c77ae84392b68c6f65d56/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "212095a07dd95269265e81fd523ecabb5c8dc5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/212095a07dd95269265e81fd523ecabb5c8dc5ad", "html_url": "https://github.com/rust-lang/rust/commit/212095a07dd95269265e81fd523ecabb5c8dc5ad"}, {"sha": "1f3da38d94ddbc728e6d5c6eef69166406329b97", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f3da38d94ddbc728e6d5c6eef69166406329b97", "html_url": "https://github.com/rust-lang/rust/commit/1f3da38d94ddbc728e6d5c6eef69166406329b97"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "eeed0386ad6ada083c3882fb091762619b6fea58", "filename": "crates/ide_assists/src/handlers/add_missing_match_arms.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/4b9b714b5c3346db1f1c77ae84392b68c6f65d56/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b9b714b5c3346db1f1c77ae84392b68c6f65d56/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs?ref=4b9b714b5c3346db1f1c77ae84392b68c6f65d56", "patch": "@@ -197,6 +197,19 @@ fn cursor_at_trivial_match_arm_list(\n         return Some(());\n     }\n \n+    // match x {\n+    //     bar => baz,\n+    //     $0\n+    // }\n+    if let Some(last_arm) = match_arm_list.arms().last() {\n+        let last_arm_range = last_arm.syntax().text_range();\n+        let match_expr_range = match_expr.syntax().text_range();\n+        if last_arm_range.end() <= ctx.offset() && ctx.offset() < match_expr_range.end() {\n+            cov_mark::hit!(add_missing_match_arms_end_of_last_arm);\n+            return Some(());\n+        }\n+    }\n+\n     // match { _$0 => {...} }\n     let wild_pat = ctx.find_node_at_offset_with_descend::<ast::WildcardPat>()?;\n     let arm = wild_pat.syntax().parent().and_then(ast::MatchArm::cast)?;\n@@ -676,6 +689,41 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn add_missing_match_arms_end_of_last_arm() {\n+        cov_mark::check!(add_missing_match_arms_end_of_last_arm);\n+        check_assist(\n+            add_missing_match_arms,\n+            r#\"\n+enum A { One, Two }\n+enum B { One, Two }\n+\n+fn main() {\n+    let a = A::One;\n+    let b = B::One;\n+    match (a, b) {\n+        (A::Two, B::One) => {},$0\n+    }\n+}\n+\"#,\n+            r#\"\n+enum A { One, Two }\n+enum B { One, Two }\n+\n+fn main() {\n+    let a = A::One;\n+    let b = B::One;\n+    match (a, b) {\n+        (A::Two, B::One) => {},\n+        $0(A::One, B::One) => todo!(),\n+        (A::One, B::Two) => todo!(),\n+        (A::Two, B::Two) => todo!(),\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn add_missing_match_arms_tuple_of_enum() {\n         check_assist("}]}