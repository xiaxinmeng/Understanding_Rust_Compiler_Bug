{"sha": "d37afad0cc87bf709ad10c85319296ac53030f03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzN2FmYWQwY2M4N2JmNzA5YWQxMGM4NTMxOTI5NmFjNTMwMzBmMDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-02T07:37:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-02T07:37:40Z"}, "message": "Auto merge of #79606 - ThePuzzlemaker:issue-79458-fix, r=scottmcm\n\nDo not show negative polarity trait implementations in diagnostic messages for similar implementations\n\nThis fixes #79458.\n\nPreviously, this code:\n```rust\n#[derive(Clone)]\nstruct Foo<'a, T> {\n    x: &'a mut T,\n}\n```\nwould have suggested that `<&mut T as Clone>` was an implementation that was found. This is due to the fact that the standard library now has `impl<'_, T> !Clone for &'_ mut T`, and explicit negative polarity implementations were not filtered out in diagnostic output when suggesting similar implementations.\n\nThis PR fixes this issue by filtering out negative polarity trait implementations in `find_similar_impl_candidates` within `rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt<'tcx>`. It also adds a UI regression test for this issue and fixes UI tests that had incorrectly been modified to expect the invalid output.\n\nr? `@scottmcm`", "tree": {"sha": "6b948a91442c6d872af5b7ef1b835b2760cfd254", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b948a91442c6d872af5b7ef1b835b2760cfd254"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d37afad0cc87bf709ad10c85319296ac53030f03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d37afad0cc87bf709ad10c85319296ac53030f03", "html_url": "https://github.com/rust-lang/rust/commit/d37afad0cc87bf709ad10c85319296ac53030f03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d37afad0cc87bf709ad10c85319296ac53030f03/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92e4fb073245a42559e357a3002c596b8b38edf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/92e4fb073245a42559e357a3002c596b8b38edf6", "html_url": "https://github.com/rust-lang/rust/commit/92e4fb073245a42559e357a3002c596b8b38edf6"}, {"sha": "b287806d389d3bc94470c27568ad16dc015769a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b287806d389d3bc94470c27568ad16dc015769a5", "html_url": "https://github.com/rust-lang/rust/commit/b287806d389d3bc94470c27568ad16dc015769a5"}], "stats": {"total": 63, "additions": 36, "deletions": 27}, "files": [{"sha": "9feba7bfc492f5523653a0a1f4ba1f44dda1dc87", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -1310,10 +1310,20 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             return None;\n                         }\n                     }\n+                    if self.tcx.impl_polarity(def_id) == ty::ImplPolarity::Negative {\n+                        return None;\n+                    }\n                     Some(imp)\n                 })\n                 .collect(),\n-            None => all_impls.map(|def_id| self.tcx.impl_trait_ref(def_id).unwrap()).collect(),\n+            None => all_impls\n+                .filter_map(|def_id| {\n+                    if self.tcx.impl_polarity(def_id) == ty::ImplPolarity::Negative {\n+                        return None;\n+                    }\n+                    self.tcx.impl_trait_ref(def_id)\n+                })\n+                .collect(),\n         }\n     }\n "}, {"sha": "042223f3e958761dd6e9381f7364d2f42c24e274", "filename": "src/test/ui/associated-types/hr-associated-type-bound-1.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-1.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to previous error\n "}, {"sha": "848924bf58eff3f95c7ceff00ecf1c267e58ad81", "filename": "src/test/ui/associated-types/hr-associated-type-bound-object.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-object.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL | fn f<'a, T: X<'a> + ?Sized>(x: &<T as X<'a>>::U) {\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to previous error\n "}, {"sha": "d35c127926431922f724553ae69761ab21fe6394", "filename": "src/test/ui/associated-types/hr-associated-type-bound-param-1.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-1.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     type V = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to previous error\n "}, {"sha": "0afa340f7a14809cc145484bc3cc109277b528b2", "filename": "src/test/ui/associated-types/hr-associated-type-bound-param-2.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-2.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     for<'b> <T as Z<'b, u16>>::W: Clone,\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error[E0277]: the trait bound `for<'b> <u16 as Z<'b, u16>>::W: Clone` is not satisfied\n   --> $DIR/hr-associated-type-bound-param-2.rs:16:14\n@@ -28,7 +27,6 @@ LL |     type W = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error[E0277]: the trait bound `for<'b> <u16 as Z<'b, u16>>::W: Clone` is not satisfied\n   --> $DIR/hr-associated-type-bound-param-2.rs:4:8\n@@ -44,7 +42,6 @@ LL |     for<'b> <T as Z<'b, u16>>::W: Clone,\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to 3 previous errors\n "}, {"sha": "79e1e00e98d776954b2391d8feb8c3cedc419713", "filename": "src/test/ui/associated-types/hr-associated-type-bound-param-3.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-3.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to previous error\n "}, {"sha": "e23ac5f56503b52065289304f86d84a6ccf89dc3", "filename": "src/test/ui/associated-types/hr-associated-type-bound-param-4.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-4.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to previous error\n "}, {"sha": "38909be59f237273ff636a86f16e2ae1044a1ab8", "filename": "src/test/ui/associated-types/hr-associated-type-bound-param-5.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-5.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error[E0277]: the trait bound `for<'b> <Vec<T> as X<'b, Vec<T>>>::U: Clone` is not satisfied\n   --> $DIR/hr-associated-type-bound-param-5.rs:27:14\n@@ -28,7 +27,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error[E0277]: the trait bound `for<'b> <Vec<T> as X<'b, Vec<T>>>::U: Clone` is not satisfied\n   --> $DIR/hr-associated-type-bound-param-5.rs:33:14\n@@ -44,7 +42,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error[E0277]: the trait bound `for<'b> <Box<T> as X<'b, Box<T>>>::U: Clone` is not satisfied\n   --> $DIR/hr-associated-type-bound-param-5.rs:33:14\n@@ -60,7 +57,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error: aborting due to 4 previous errors\n "}, {"sha": "6e02b42e514c5072d0cb9c097019f560946b27fb", "filename": "src/test/ui/associated-types/hr-associated-type-bound-param-6.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-6.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -12,7 +12,6 @@ LL |     type U = str;\n    |\n    = help: the following implementations were found:\n              <&T as Clone>\n-             <&mut T as Clone>\n \n error[E0277]: the trait bound `for<'b> T: X<'b, T>` is not satisfied\n   --> $DIR/hr-associated-type-bound-param-6.rs:12:12"}, {"sha": "9ffdd0524c663b595bdaaffcf27421ef9185adf7", "filename": "src/test/ui/async-await/issue-64130-3-other.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fasync-await%2Fissue-64130-3-other.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fasync-await%2Fissue-64130-3-other.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-64130-3-other.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -10,8 +10,6 @@ LL | async fn bar() {\n LL |     is_qux(bar());\n    |     ^^^^^^ within `impl Future`, the trait `Qux` is not implemented for `Foo`\n    |\n-   = help: the following implementations were found:\n-             <Foo as Qux>\n note: future does not implement `Qux` as this value is used across an await\n   --> $DIR/issue-64130-3-other.rs:18:5\n    |"}, {"sha": "c2eab1a33b91a15c77f2adb556616c57425254f7", "filename": "src/test/ui/auto-traits/typeck-default-trait-impl-constituent-types-2.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-constituent-types-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-constituent-types-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-constituent-types-2.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -7,8 +7,6 @@ LL | fn is_mytrait<T: MyTrait>() {}\n LL |     is_mytrait::<(MyS2, MyS)>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ within `(MyS2, MyS)`, the trait `MyTrait` is not implemented for `MyS2`\n    |\n-   = help: the following implementations were found:\n-             <MyS2 as MyTrait>\n    = note: required because it appears within the type `(MyS2, MyS)`\n \n error: aborting due to previous error"}, {"sha": "efb6bde17990ff272e018648be389b45d0cc20ec", "filename": "src/test/ui/auto-traits/typeck-default-trait-impl-constituent-types.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-constituent-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-constituent-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-constituent-types.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -6,9 +6,6 @@ LL | fn is_mytrait<T: MyTrait>() {}\n ...\n LL |     is_mytrait::<MyS2>();\n    |                  ^^^^ the trait `MyTrait` is not implemented for `MyS2`\n-   |\n-   = help: the following implementations were found:\n-             <MyS2 as MyTrait>\n \n error: aborting due to previous error\n "}, {"sha": "dae87bc221a6fa8110769c9a7f0068f8c7e0a2e1", "filename": "src/test/ui/auto-traits/typeck-default-trait-impl-negation.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-negation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-negation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Ftypeck-default-trait-impl-negation.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -6,9 +6,6 @@ LL | fn is_my_trait<T: MyTrait>() {}\n ...\n LL |     is_my_trait::<ThisImplsUnsafeTrait>();\n    |                   ^^^^^^^^^^^^^^^^^^^^ the trait `MyTrait` is not implemented for `ThisImplsUnsafeTrait`\n-   |\n-   = help: the following implementations were found:\n-             <ThisImplsUnsafeTrait as MyTrait>\n \n error[E0277]: the trait bound `ThisImplsTrait: MyUnsafeTrait` is not satisfied\n   --> $DIR/typeck-default-trait-impl-negation.rs:25:26\n@@ -18,9 +15,6 @@ LL | fn is_my_unsafe_trait<T: MyUnsafeTrait>() {}\n ...\n LL |     is_my_unsafe_trait::<ThisImplsTrait>();\n    |                          ^^^^^^^^^^^^^^ the trait `MyUnsafeTrait` is not implemented for `ThisImplsTrait`\n-   |\n-   = help: the following implementations were found:\n-             <ThisImplsTrait as MyUnsafeTrait>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a41add6a1ccea775f1a9348fd69848018110cf98", "filename": "src/test/ui/traits/issue-79458.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Ftraits%2Fissue-79458.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Ftraits%2Fissue-79458.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-79458.rs?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -0,0 +1,10 @@\n+// Negative implementations should not be shown in trait suggestions.\n+// This is a regression test of #79458.\n+\n+#[derive(Clone)]\n+struct Foo<'a, T> {\n+    bar: &'a mut T\n+    //~^ ERROR the trait bound `&mut T: Clone` is not satisfied\n+}\n+\n+fn main() {}"}, {"sha": "54947b57c03b1b5bb82bc6bda1f25ab4619f705f", "filename": "src/test/ui/traits/issue-79458.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Ftraits%2Fissue-79458.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d37afad0cc87bf709ad10c85319296ac53030f03/src%2Ftest%2Fui%2Ftraits%2Fissue-79458.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-79458.stderr?ref=d37afad0cc87bf709ad10c85319296ac53030f03", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `&mut T: Clone` is not satisfied\n+  --> $DIR/issue-79458.rs:6:5\n+   |\n+LL |     bar: &'a mut T\n+   |     ^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `&mut T`\n+   |\n+   = help: the following implementations were found:\n+             <&T as Clone>\n+   = note: `Clone` is implemented for `&T`, but not for `&mut T`\n+   = note: required by `clone`\n+   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}