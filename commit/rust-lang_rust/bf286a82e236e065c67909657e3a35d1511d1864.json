{"sha": "bf286a82e236e065c67909657e3a35d1511d1864", "node_id": "C_kwDOAAsO6NoAKGJmMjg2YTgyZTIzNmUwNjVjNjc5MDk2NTdlM2EzNWQxNTExZDE4NjQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-16T17:54:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-16T17:54:02Z"}, "message": "Auto merge of #103119 - matthiaskrgr:rollup-2vb8hif, r=matthiaskrgr\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #102857 (Add a regression test for #39137)\n - #102953 (Improve docs for `struct_lint_level` function.)\n - #103060 (rustdoc: make the help button a link to a page)\n - #103115 (Clean up anchors.goml rustdoc GUI test)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "a2cb4f2a40b8cefb9e7ac9a27a3886d869fc41e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2cb4f2a40b8cefb9e7ac9a27a3886d869fc41e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf286a82e236e065c67909657e3a35d1511d1864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf286a82e236e065c67909657e3a35d1511d1864", "html_url": "https://github.com/rust-lang/rust/commit/bf286a82e236e065c67909657e3a35d1511d1864", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf286a82e236e065c67909657e3a35d1511d1864/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be3ce9056d17f822704b8994f60668adf180fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8be3ce9056d17f822704b8994f60668adf180fe8", "html_url": "https://github.com/rust-lang/rust/commit/8be3ce9056d17f822704b8994f60668adf180fe8"}, {"sha": "ae717c7f2afcc61955a0389488fb31c664907d49", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae717c7f2afcc61955a0389488fb31c664907d49", "html_url": "https://github.com/rust-lang/rust/commit/ae717c7f2afcc61955a0389488fb31c664907d49"}], "stats": {"total": 558, "additions": 360, "deletions": 198}, "files": [{"sha": "63a11877333ef64b81b962ba92b7dbdd8c5e85fe", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -574,6 +574,11 @@ pub trait LintContext: Sized {\n     fn sess(&self) -> &Session;\n     fn lints(&self) -> &LintStore;\n \n+    /// Emit a lint at the appropriate level, with an optional associated span and an existing diagnostic.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lookup_with_diagnostics(\n         &self,\n         lint: &'static Lint,\n@@ -872,6 +877,11 @@ pub trait LintContext: Sized {\n \n     // FIXME: These methods should not take an Into<MultiSpan> -- instead, callers should need to\n     // set the span in their `decorate` function (preferably using set_span).\n+    /// Emit a lint at the appropriate level, with an optional associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lookup<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -893,6 +903,11 @@ pub trait LintContext: Sized {\n         self.lookup(lint, Some(span), decorator.msg(), |diag| decorator.decorate_lint(diag));\n     }\n \n+    /// Emit a lint at the appropriate level, with an associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn struct_span_lint<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -914,6 +929,10 @@ pub trait LintContext: Sized {\n     }\n \n     /// Emit a lint at the appropriate level, with no associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lint(\n         &self,\n         lint: &'static Lint,"}, {"sha": "d3879ff487de9c81df1adb64e7884816bffa6776", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -1069,6 +1069,10 @@ impl<'s, P: LintLevelsProvider> LintLevelsBuilder<'s, P> {\n \n     /// Used to emit a lint-related diagnostic based on the current state of\n     /// this lint context.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub(crate) fn struct_lint(\n         &self,\n         lint: &'static Lint,"}, {"sha": "79522bd0b2b2aeb84c1325cd1866eff3b393ac9e", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -274,6 +274,39 @@ pub fn explain_lint_level_source(\n     }\n }\n \n+/// The innermost function for emitting lints.\n+///\n+/// If you are loocking to implement a lint, look for higher level functions,\n+/// for example:\n+/// - [`TyCtxt::emit_spanned_lint`]\n+/// - [`TyCtxt::struct_span_lint_hir`]\n+/// - [`TyCtxt::emit_lint`]\n+/// - [`TyCtxt::struct_lint_node`]\n+/// - `LintContext::lookup`\n+///\n+/// ## `decorate` signature\n+///\n+/// The return value of `decorate` is ignored by this function. So what is the\n+/// point of returning `&'b mut DiagnosticBuilder<'a, ()>`?\n+///\n+/// There are 2 reasons for this signature.\n+///\n+/// First of all, it prevents accidental use of `.emit()` -- it's clear that the\n+/// builder will be later used and shouldn't be emitted right away (this is\n+/// especially important because the old API expected you to call `.emit()` in\n+/// the closure).\n+///\n+/// Second of all, it makes the most common case of adding just a single label\n+/// /suggestion much nicer, since [`DiagnosticBuilder`] methods return\n+/// `&mut DiagnosticBuilder`, you can just chain methods, without needed\n+/// awkward `{ ...; }`:\n+/// ```ignore pseudo-code\n+/// struct_lint_level(\n+///     ...,\n+///     |lint| lint.span_label(sp, \"lbl\")\n+///     //          ^^^^^^^^^^^^^^^^^^^^^ returns `&mut DiagnosticBuilder` by default\n+/// )\n+/// ```\n pub fn struct_lint_level(\n     sess: &Session,\n     lint: &'static Lint,"}, {"sha": "8636c4465d46f2163663aec2ac3edd5aef0b0d47", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -2823,6 +2823,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n+    /// Emit a lint at the appropriate level for a hir node, with an associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub fn struct_span_lint_hir(\n         self,\n         lint: &'static Lint,\n@@ -2848,6 +2853,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.struct_lint_node(lint, id, decorator.msg(), |diag| decorator.decorate_lint(diag))\n     }\n \n+    /// Emit a lint at the appropriate level for a hir node.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub fn struct_lint_node(\n         self,\n         lint: &'static Lint,"}, {"sha": "679934348d0b19af6ec8588884c251d795fabf10", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -1 +1 @@\n-0.12.4\n\\ No newline at end of file\n+0.12.5\n\\ No newline at end of file"}, {"sha": "5ce62224d35e54130d87c5c1fcac24162c2578d9", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -1433,6 +1433,7 @@ static DEFAULT_ID_MAP: Lazy<FxHashMap<Cow<'static, str>, usize>> = Lazy::new(||\n fn init_id_map() -> FxHashMap<Cow<'static, str>, usize> {\n     let mut map = FxHashMap::default();\n     // This is the list of IDs used in Javascript.\n+    map.insert(\"help\".into(), 1);\n     map.insert(\"settings\".into(), 1);\n     map.insert(\"not-displayed\".into(), 1);\n     map.insert(\"alternative-display\".into(), 1);"}, {"sha": "e303dd8bdaf13a075c0f3a94ecd43bf2d529b33a", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -581,6 +581,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         let crate_name = self.tcx().crate_name(LOCAL_CRATE);\n         let final_file = self.dst.join(crate_name.as_str()).join(\"all.html\");\n         let settings_file = self.dst.join(\"settings.html\");\n+        let help_file = self.dst.join(\"help.html\");\n         let scrape_examples_help_file = self.dst.join(\"scrape-examples-help.html\");\n \n         let mut root_path = self.dst.to_str().expect(\"invalid path\").to_owned();\n@@ -657,6 +658,39 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         );\n         shared.fs.write(settings_file, v)?;\n \n+        // Generating help page.\n+        page.title = \"Rustdoc help\";\n+        page.description = \"Documentation for Rustdoc\";\n+        page.root_path = \"./\";\n+\n+        let sidebar = \"<h2 class=\\\"location\\\">Help</h2><div class=\\\"sidebar-elems\\\"></div>\";\n+        let v = layout::render(\n+            &shared.layout,\n+            &page,\n+            sidebar,\n+            |buf: &mut Buffer| {\n+                write!(\n+                    buf,\n+                    \"<div class=\\\"main-heading\\\">\\\n+                     <h1 class=\\\"fqn\\\">Rustdoc help</h1>\\\n+                     <span class=\\\"out-of-band\\\">\\\n+                         <a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"history.back();\\\">\\\n+                            Back\\\n+                        </a>\\\n+                     </span>\\\n+                     </div>\\\n+                     <noscript>\\\n+                        <section>\\\n+                            <p>You need to enable Javascript to use keyboard commands or search.</p>\\\n+                            <p>For more information, browse the <a href=\\\"https://doc.rust-lang.org/rustdoc/\\\">rustdoc handbook</a>.</p>\\\n+                        </section>\\\n+                     </noscript>\",\n+                )\n+            },\n+            &shared.style_files,\n+        );\n+        shared.fs.write(help_file, v)?;\n+\n         if shared.layout.scrape_examples_extension {\n             page.title = \"About scraped examples\";\n             page.description = \"How the scraped examples feature works in Rustdoc\";"}, {"sha": "271dd177a4bac058c66b2e23e57986b1c30c7da4", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -199,7 +199,7 @@ h1, h2, h3, h4, h5, h6,\n .out-of-band,\n span.since,\n a.srclink,\n-#help-button > button,\n+#help-button > a,\n details.rustdoc-toggle.top-doc > summary,\n details.rustdoc-toggle.non-exhaustive > summary,\n .scraped-example-title,\n@@ -974,32 +974,33 @@ so that we can apply CSS-filters to change the arrow color in themes */\n \tcolor: var(--main-color);\n }\n \n-#help-button .popover {\n+/* use larger max-width for help popover, but not for help.html */\n+#help.popover {\n \tmax-width: 600px;\n }\n \n-#help-button .popover::before {\n+#help.popover::before {\n \tright: 48px;\n }\n \n-#help-button dt {\n+#help dt {\n \tfloat: left;\n \tclear: left;\n \tdisplay: block;\n \tmargin-right: 0.5rem;\n }\n-#help-button span.top, #help-button span.bottom {\n+#help span.top, #help span.bottom {\n \ttext-align: center;\n \tdisplay: block;\n \tfont-size: 1.125rem;\n }\n-#help-button span.top {\n+#help span.top {\n \tmargin: 10px 0;\n \tborder-bottom: 1px solid var(--border-color);\n \tpadding-bottom: 4px;\n \tmargin-bottom: 6px;\n }\n-#help-button span.bottom {\n+#help span.bottom {\n \tclear: both;\n \tborder-top: 1px solid var(--border-color);\n }\n@@ -1433,7 +1434,7 @@ h3.variant {\n \toutline: none;\n }\n \n-#settings-menu > a, #help-button > button, #copy-path {\n+#settings-menu > a, #help-button > a, #copy-path {\n \tpadding: 5px;\n \twidth: 33px;\n \tborder: 1px solid var(--border-color);\n@@ -1442,7 +1443,7 @@ h3.variant {\n \tline-height: 1.5;\n }\n \n-#settings-menu > a, #help-button > button {\n+#settings-menu > a, #help-button > a {\n \tpadding: 5px;\n \theight: 100%;\n \tdisplay: block;\n@@ -1490,7 +1491,7 @@ input:checked + .slider {\n \tbackground-color: var(--settings-input-color);\n }\n \n-#help-button > button {\n+#help-button > a {\n \ttext-align: center;\n \t/* Rare exception to specifying font sizes in rem. Since this is acting\n \t   as an icon, it's okay to specify their sizes in pixels. */"}, {"sha": "33817c16808c60eb15403aaf4db617cd59c733d8", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -248,7 +248,7 @@ kbd {\n \tbox-shadow: inset 0 -1px 0 #5c6773;\n }\n \n-#settings-menu > a, #help-button > button {\n+#settings-menu > a, #help-button > a {\n \tcolor: #fff;\n }\n \n@@ -257,7 +257,7 @@ kbd {\n }\n \n #settings-menu > a:hover, #settings-menu > a:focus,\n-#help-button > button:hover, #help-button > button:focus {\n+#help-button > a:hover, #help-button > a:focus {\n \tborder-color: #e0e0e0;\n }\n "}, {"sha": "d88710288b905a9e271e7f946d26d403ee6bddaf", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -153,12 +153,12 @@ kbd {\n \tbox-shadow: inset 0 -1px 0 #c6cbd1;\n }\n \n-#settings-menu > a, #help-button > button {\n+#settings-menu > a, #help-button > a {\n \tcolor: #000;\n }\n \n #settings-menu > a:hover, #settings-menu > a:focus,\n-#help-button > button:hover, #help-button > button:focus {\n+#help-button > a:hover, #help-button > a:focus {\n \tborder-color: #ffb900;\n }\n "}, {"sha": "cadc71dab9591e0b6dbc1b14525937dc7e7a8c53", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -147,8 +147,12 @@ kbd {\n \tbox-shadow: inset 0 -1px 0 #c6cbd1;\n }\n \n+#settings-menu > a, #help-button > a {\n+\tcolor: #000;\n+}\n+\n #settings-menu > a:hover, #settings-menu > a:focus,\n-#help-button > button:hover, #help-button > button:focus {\n+#help-button > a:hover, #help-button > a:focus {\n \tborder-color: #717171;\n }\n "}, {"sha": "db1cc8e451627cd5bbbb0607a7715ee52001e590", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 62, "deletions": 23, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -192,13 +192,18 @@ function loadCss(cssFileName) {\n }\n \n (function() {\n+    const isHelpPage = window.location.pathname.endsWith(\"/help.html\");\n+\n     function loadScript(url) {\n         const script = document.createElement(\"script\");\n         script.src = url;\n         document.head.append(script);\n     }\n \n     getSettingsButton().onclick = event => {\n+        if (event.ctrlKey || event.altKey || event.metaKey) {\n+            return;\n+        }\n         addClass(getSettingsButton(), \"rotate\");\n         event.preventDefault();\n         // Sending request for the CSS and the JS files at the same time so it will\n@@ -873,7 +878,10 @@ function loadCss(cssFileName) {\n         rustdoc_version.appendChild(rustdoc_version_code);\n \n         const container = document.createElement(\"div\");\n-        container.className = \"popover\";\n+        if (!isHelpPage) {\n+            container.className = \"popover\";\n+        }\n+        container.id = \"help\";\n         container.style.display = \"none\";\n \n         const side_by_side = document.createElement(\"div\");\n@@ -885,15 +893,22 @@ function loadCss(cssFileName) {\n         container.appendChild(side_by_side);\n         container.appendChild(rustdoc_version);\n \n-        const help_button = getHelpButton();\n-        help_button.appendChild(container);\n-\n-        container.onblur = helpBlurHandler;\n-        container.onclick = event => {\n-            event.preventDefault();\n-        };\n-        help_button.onblur = helpBlurHandler;\n-        help_button.children[0].onblur = helpBlurHandler;\n+        if (isHelpPage) {\n+            const help_section = document.createElement(\"section\");\n+            help_section.appendChild(container);\n+            document.getElementById(\"main-content\").appendChild(help_section);\n+            container.style.display = \"block\";\n+        } else {\n+            const help_button = getHelpButton();\n+            help_button.appendChild(container);\n+\n+            container.onblur = helpBlurHandler;\n+            container.onclick = event => {\n+                event.preventDefault();\n+            };\n+            help_button.onblur = helpBlurHandler;\n+            help_button.children[0].onblur = helpBlurHandler;\n+        }\n \n         return container;\n     }\n@@ -934,19 +949,43 @@ function loadCss(cssFileName) {\n         }\n     }\n \n-    document.querySelector(`#${HELP_BUTTON_ID} > button`).addEventListener(\"click\", event => {\n-        const target = event.target;\n-        if (target.tagName !== \"BUTTON\" || target.parentElement.id !== HELP_BUTTON_ID) {\n-            return;\n-        }\n-        const menu = getHelpMenu(true);\n-        const shouldShowHelp = menu.style.display === \"none\";\n-        if (shouldShowHelp) {\n-            showHelp();\n-        } else {\n-            window.hidePopoverMenus();\n-        }\n-    });\n+    if (isHelpPage) {\n+        showHelp();\n+        document.querySelector(`#${HELP_BUTTON_ID} > a`).addEventListener(\"click\", event => {\n+            // Already on the help page, make help button a no-op.\n+            const target = event.target;\n+            if (target.tagName !== \"A\" ||\n+                target.parentElement.id !== HELP_BUTTON_ID ||\n+                event.ctrlKey ||\n+                event.altKey ||\n+                event.metaKey) {\n+                return;\n+            }\n+            event.preventDefault();\n+        });\n+    } else {\n+        document.querySelector(`#${HELP_BUTTON_ID} > a`).addEventListener(\"click\", event => {\n+            // By default, have help button open docs in a popover.\n+            // If user clicks with a moderator, though, use default browser behavior,\n+            // probably opening in a new window or tab.\n+            const target = event.target;\n+            if (target.tagName !== \"A\" ||\n+                target.parentElement.id !== HELP_BUTTON_ID ||\n+                event.ctrlKey ||\n+                event.altKey ||\n+                event.metaKey) {\n+                return;\n+            }\n+            event.preventDefault();\n+            const menu = getHelpMenu(true);\n+            const shouldShowHelp = menu.style.display === \"none\";\n+            if (shouldShowHelp) {\n+                showHelp();\n+            } else {\n+                window.hidePopoverMenus();\n+            }\n+        });\n+    }\n \n     setMobileTopbar();\n     addSidebarItems();"}, {"sha": "6e6bb70707dc1982f8c4c542e421798ac500ee3a", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -122,7 +122,7 @@ <h2 class=\"location\"></h2> {#- -#}\n                                 placeholder=\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\" {# -#}\n                                 type=\"search\"> {#- -#}\n                             <div id=\"help-button\" title=\"help\" tabindex=\"-1\"> {#- -#}\n-                                <button type=\"button\">?</button> {#- -#}\n+                                <a href=\"{{page.root_path|safe}}help.html\">?</a> {#- -#}\n                             </div> {#- -#}\n                             <div id=\"settings-menu\" tabindex=\"-1\"> {#- -#}\n                                 <a href=\"{{page.root_path|safe}}settings.html\" title=\"settings\"> {#- -#}"}, {"sha": "e526fa47d156e071cd0bd78473d8573259ea9945", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 100, "deletions": 147, "changes": 247, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -1,154 +1,107 @@\n // This test is to ensure that the anchors (`\u00a7`) have the expected color and position.\n-goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n \n-// This is needed to ensure that the text color is computed.\n-show-text: true\n-\n-// Set the theme to light.\n-local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n-// We reload the page so the local storage settings are being used.\n-reload:\n-\n-assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(0, 0, 0)\"})\n-assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": \"rgb(0, 0, 0)\"})\n-assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": \"rgb(173, 55, 138)\"})\n-assert-css: (\n-    \".rightside .srclink\",\n-    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n-    ALL,\n-)\n-compare-elements-css: (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n-compare-elements-css: (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n-\n-move-cursor-to: \".main-heading .srclink\"\n-assert-css: (\n-    \".main-heading .srclink\",\n-    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"underline solid rgb(56, 115, 173)\"},\n-)\n-move-cursor-to: \".impl-items .rightside .srclink\"\n-assert-css: (\n-    \".impl-items .rightside .srclink\",\n-    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n-)\n-move-cursor-to: \".impl-items .rightside.srclink\"\n-assert-css: (\n-    \".impl-items .rightside.srclink\",\n-    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n-)\n-\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n-\n-assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(0, 0, 0)\"})\n-\n-assert-css: (\".sidebar a\", {\"color\": \"rgb(53, 109, 164)\"})\n-assert-css: (\"h1.fqn a\", {\"color\": \"rgb(0, 0, 0)\"})\n-\n-// We move the cursor over the \"Implementations\" title so the anchor is displayed.\n-move-cursor-to: \"h2#implementations\"\n-assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n-\n-// Same thing with the impl block title.\n-move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n-assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n-\n-assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})\n-\n-//\n-// We do the same checks with the dark theme now.\n-//\n-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n-goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n-\n-assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(221, 221, 221)\"})\n-assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": \"rgb(221, 221, 221)\"})\n-assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": \"rgb(45, 191, 184)\"})\n-assert-css: (\n-    \".rightside .srclink\",\n-    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n-    ALL,\n-)\n-compare-elements-css: (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n-compare-elements-css: (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n-\n-move-cursor-to: \".main-heading .srclink\"\n-assert-css: (\n-    \".main-heading .srclink\",\n-    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"underline solid rgb(210, 153, 29)\"},\n+define-function: (\n+    \"check-colors\",\n+    (theme, main_color, title_color, fqn_color, fqn_type_color, src_link_color, sidebar_link_color),\n+    [\n+        (\"goto\", \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"),\n+        // This is needed to ensure that the text color is computed.\n+        (\"show-text\", true),\n+\n+        // Setting the theme.\n+        (\"local-storage\", {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}),\n+        // We reload the page so the local storage settings are being used.\n+        (\"reload\"),\n+\n+        (\"assert-css\", (\"#toggle-all-docs\", {\"color\": |main_color|})),\n+        (\"assert-css\", (\".fqn a:nth-of-type(1)\", {\"color\": |fqn_color|})),\n+        (\"assert-css\", (\".fqn a:nth-of-type(2)\", {\"color\": |fqn_type_color|})),\n+        (\"assert-css\", (\n+             \".rightside .srclink\",\n+             {\"color\": |src_link_color|, \"text-decoration\": \"none solid \" + |src_link_color|},\n+             ALL,\n+        )),\n+        (\n+            \"compare-elements-css\",\n+            (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"]),\n+        ),\n+        (\n+            \"compare-elements-css\",\n+            (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"]),\n+        ),\n+\n+        (\"move-cursor-to\", \".main-heading .srclink\"),\n+        (\"assert-css\", (\n+             \".main-heading .srclink\",\n+             {\"color\": |src_link_color|, \"text-decoration\": \"underline solid \" + |src_link_color|},\n+        )),\n+        (\"move-cursor-to\", \".impl-items .rightside .srclink\"),\n+        (\"assert-css\", (\n+             \".impl-items .rightside .srclink\",\n+             {\"color\": |src_link_color|, \"text-decoration\": \"none solid \" + |src_link_color|},\n+        )),\n+        (\"move-cursor-to\", \".impl-items .rightside.srclink\"),\n+        (\"assert-css\", (\n+             \".impl-items .rightside.srclink\",\n+             {\"color\": |src_link_color|, \"text-decoration\": \"none solid \" + |src_link_color|},\n+        )),\n+\n+        (\"goto\", \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"),\n+        // Since we changed page, we need to set the theme again.\n+        (\"local-storage\", {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}),\n+        // We reload the page so the local storage settings are being used.\n+        (\"reload\"),\n+\n+        (\"assert-css\", (\"#top-doc-prose-title\", {\"color\": |title_color|})),\n+\n+        (\"assert-css\", (\".sidebar a\", {\"color\": |sidebar_link_color|})),\n+        (\"assert-css\", (\"h1.fqn a\", {\"color\": |title_color|})),\n+\n+        // We move the cursor over the \"Implementations\" title so the anchor is displayed.\n+        (\"move-cursor-to\", \"h2#implementations\"),\n+        (\"assert-css\", (\"h2#implementations a.anchor\", {\"color\": |main_color|})),\n+\n+        // Same thing with the impl block title.\n+        (\"move-cursor-to\", \"#impl-HeavilyDocumentedStruct\"),\n+        (\"assert-css\", (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": |main_color|})),\n+\n+        (\"assert-css\", (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})),\n+    ],\n )\n-move-cursor-to: \".impl-items .rightside .srclink\"\n-assert-css: (\n-    \".impl-items .rightside .srclink\",\n-    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n-)\n-move-cursor-to: \".impl-items .rightside.srclink\"\n-assert-css: (\n-    \".impl-items .rightside.srclink\",\n-    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n-)\n-\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n-\n-assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(221, 221, 221)\"})\n-\n-assert-css: (\".sidebar a\", {\"color\": \"rgb(253, 191, 53)\"})\n-assert-css: (\"h1.fqn a\", {\"color\": \"rgb(221, 221, 221)\"})\n-\n-// We move the cursor over the \"Implementations\" title so the anchor is displayed.\n-move-cursor-to: \"h2#implementations\"\n-assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(221, 221, 221)\"})\n-\n-// Same thing with the impl block title.\n-move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n-assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(221, 221, 221)\"})\n-\n-assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})\n-\n-//\n-// We do the same checks with the ayu theme now.\n-//\n-local-storage: {\"rustdoc-theme\": \"ayu\", \"rustdoc-use-system-theme\": \"false\"}\n-goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n \n-assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(197, 197, 197)\"})\n-assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": \"rgb(255, 255, 255)\"})\n-assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": \"rgb(255, 160, 165)\"})\n-assert-css: (\n-    \".rightside .srclink\",\n-    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n-    ALL,\n+call-function: (\n+    \"check-colors\",\n+    (\n+        \"ayu\", // theme\n+        \"rgb(197, 197, 197)\", // main color\n+        \"rgb(255, 255, 255)\", // title color\n+        \"rgb(255, 255, 255)\", // fqn color\n+        \"rgb(255, 160, 165)\", // fqn type color\n+        \"rgb(57, 175, 215)\", // src link\n+        \"rgb(83, 177, 219)\", // sidebar link\n+    ),\n )\n-compare-elements-css: (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n-compare-elements-css: (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n-\n-move-cursor-to: \".main-heading .srclink\"\n-assert-css: (\n-    \".main-heading .srclink\",\n-    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"underline solid rgb(57, 175, 215)\"},\n-)\n-move-cursor-to: \".impl-items .rightside .srclink\"\n-assert-css: (\n-    \".impl-items .rightside .srclink\",\n-    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n+call-function: (\n+    \"check-colors\",\n+    (\n+        \"dark\", // theme\n+        \"rgb(221, 221, 221)\", // main color\n+        \"rgb(221, 221, 221)\", // title color\n+        \"rgb(221, 221, 221)\", // fqn color\n+        \"rgb(45, 191, 184)\", // fqn type color\n+        \"rgb(210, 153, 29)\", // src link\n+        \"rgb(253, 191, 53)\", // sidebar link\n+    ),\n )\n-move-cursor-to: \".impl-items .rightside.srclink\"\n-assert-css: (\n-    \".impl-items .rightside.srclink\",\n-    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n+call-function: (\n+    \"check-colors\",\n+    (\n+        \"light\", // theme\n+        \"rgb(0, 0, 0)\", // main color\n+        \"rgb(0, 0, 0)\", // title color\n+        \"rgb(0, 0, 0)\", // fqn color\n+        \"rgb(173, 55, 138)\", // fqn type color\n+        \"rgb(56, 115, 173)\", // src link\n+        \"rgb(53, 109, 164)\", // sidebar link\n+    ),\n )\n-\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n-\n-assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(255, 255, 255)\"})\n-\n-assert-css: (\".sidebar a\", {\"color\": \"rgb(83, 177, 219)\"})\n-assert-css: (\"h1.fqn a\", {\"color\": \"rgb(255, 255, 255)\"})\n-\n-// We move the cursor over the \"Implementations\" title so the anchor is displayed.\n-move-cursor-to: \"h2#implementations\"\n-assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(197, 197, 197)\"})\n-\n-// Same thing with the impl block title.\n-move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n-assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(197, 197, 197)\"})\n-\n-assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})"}, {"sha": "51f089cce747f5c0a62cfbee8db98db9851414cc", "filename": "src/test/rustdoc-gui/help-page.goml", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Frustdoc-gui%2Fhelp-page.goml", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Frustdoc-gui%2Fhelp-page.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fhelp-page.goml?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -0,0 +1,24 @@\n+// This test ensures that opening the help page in its own tab works.\n+goto: \"file://\" + |DOC_PATH| + \"/help.html\"\n+size: (1000, 1000) // Try desktop size first.\n+wait-for: \"#help\"\n+assert-css: (\"#help\", {\"display\": \"block\"})\n+click: \"#help-button > a\"\n+assert-css: (\"#help\", {\"display\": \"block\"})\n+compare-elements-property: (\".sub-container\", \"#help\", [\"offsetWidth\"])\n+compare-elements-position: (\".sub-container\", \"#help\", (\"x\"))\n+size: (500, 1000) // Try mobile next.\n+assert-css: (\"#help\", {\"display\": \"block\"})\n+compare-elements-property: (\".sub-container\", \"#help\", [\"offsetWidth\"])\n+compare-elements-position: (\".sub-container\", \"#help\", (\"x\"))\n+\n+// This test ensures that opening the help popover without switching pages works.\n+goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+size: (1000, 1000) // Only supported on desktop.\n+assert-false: \"#help\"\n+click: \"#help-button > a\"\n+assert-css: (\"#help\", {\"display\": \"block\"})\n+click: \"#help-button > a\"\n+assert-css: (\"#help\", {\"display\": \"none\"})\n+compare-elements-property-false: (\".sub-container\", \"#help\", [\"offsetWidth\"])\n+compare-elements-position-false: (\".sub-container\", \"#help\", (\"x\"))"}, {"sha": "542db348c3b19a72d9c0d6139e3146d67dbc9559", "filename": "src/test/rustdoc-gui/search-form-elements.goml", "status": "modified", "additions": 31, "deletions": 11, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Frustdoc-gui%2Fsearch-form-elements.goml", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Frustdoc-gui%2Fsearch-form-elements.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-form-elements.goml?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -33,7 +33,7 @@ assert-css: (\n     {\"border-color\": \"rgb(197, 197, 197)\"},\n )\n assert-css: (\n-    \"#help-button > button\",\n+    \"#help-button > a\",\n     {\n         \"color\": \"rgb(255, 255, 255)\",\n         \"border-color\": \"rgb(92, 103, 115)\",\n@@ -47,13 +47,21 @@ assert-css: (\n )\n // Only \"border-color\" should change.\n assert-css: (\n-    \"#help-button:hover > button\",\n+    \"#help-button:hover > a\",\n     {\n         \"color\": \"rgb(255, 255, 255)\",\n         \"border-color\": \"rgb(224, 224, 224)\",\n         \"background-color\": \"rgb(20, 25, 32)\",\n     },\n )\n+// Link color inside\n+click: \"#help-button\"\n+assert-css: (\n+    \"#help a\",\n+    {\n+        \"color\": \"rgb(57, 175, 215)\",\n+    },\n+)\n \n assert-css: (\n     \"#settings-menu\",\n@@ -62,7 +70,6 @@ assert-css: (\n assert-css: (\n     \"#settings-menu > a\",\n     {\n-        \"color\": \"rgb(255, 255, 255)\",\n         \"border-color\": \"rgb(92, 103, 115)\",\n         \"background-color\": \"rgb(20, 25, 32)\",\n     },\n@@ -76,7 +83,6 @@ assert-css: (\n assert-css: (\n     \"#settings-menu:hover > a\",\n     {\n-        \"color\": \"rgb(255, 255, 255)\",\n         \"border-color\": \"rgb(224, 224, 224)\",\n         \"background-color\": \"rgb(20, 25, 32)\",\n     },\n@@ -113,7 +119,7 @@ assert-css: (\n     {\"border-color\": \"rgb(221, 221, 221)\"},\n )\n assert-css: (\n-    \"#help-button > button\",\n+    \"#help-button > a\",\n     {\n         \"color\": \"rgb(0, 0, 0)\",\n         \"border-color\": \"rgb(224, 224, 224)\",\n@@ -127,13 +133,21 @@ assert-css: (\n )\n // Only \"border-color\" should change.\n assert-css: (\n-    \"#help-button:hover > button\",\n+    \"#help-button:hover > a\",\n     {\n         \"color\": \"rgb(0, 0, 0)\",\n         \"border-color\": \"rgb(255, 185, 0)\",\n         \"background-color\": \"rgb(240, 240, 240)\",\n     },\n )\n+// Link color inside\n+click: \"#help-button\"\n+assert-css: (\n+    \"#help a\",\n+    {\n+        \"color\": \"rgb(210, 153, 29)\",\n+    },\n+)\n \n assert-css: (\n     \"#settings-menu\",\n@@ -142,7 +156,6 @@ assert-css: (\n assert-css: (\n     \"#settings-menu > a\",\n     {\n-        \"color\": \"rgb(0, 0, 0)\",\n         \"border-color\": \"rgb(224, 224, 224)\",\n         \"background-color\": \"rgb(240, 240, 240)\",\n     },\n@@ -193,7 +206,7 @@ assert-css: (\n     {\"border-color\": \"rgb(0, 0, 0)\"},\n )\n assert-css: (\n-    \"#help-button > button\",\n+    \"#help-button > a\",\n     {\n         \"color\": \"rgb(0, 0, 0)\",\n         \"border-color\": \"rgb(224, 224, 224)\",\n@@ -207,13 +220,21 @@ assert-css: (\n )\n // Only \"border-color\" should change.\n assert-css: (\n-    \"#help-button:hover > button\",\n+    \"#help-button:hover > a\",\n     {\n         \"color\": \"rgb(0, 0, 0)\",\n         \"border-color\": \"rgb(113, 113, 113)\",\n         \"background-color\": \"rgb(255, 255, 255)\",\n     },\n )\n+// Link color inside\n+click: \"#help-button\"\n+assert-css: (\n+    \"#help a\",\n+    {\n+        \"color\": \"rgb(56, 115, 173)\",\n+    },\n+)\n \n assert-css: (\n     \"#settings-menu\",\n@@ -222,7 +243,6 @@ assert-css: (\n assert-css: (\n     \"#settings-menu > a\",\n     {\n-        \"color\": \"rgb(56, 115, 173)\",\n         \"border-color\": \"rgb(224, 224, 224)\",\n         \"background-color\": \"rgb(255, 255, 255)\",\n     },\n@@ -236,7 +256,7 @@ assert-css: (\n assert-css: (\n     \"#settings-menu:hover > a\",\n     {\n-        \"color\": \"rgb(56, 115, 173)\",\n+        \"color\": \"rgb(0, 0, 0)\",\n         \"border-color\": \"rgb(113, 113, 113)\",\n         \"background-color\": \"rgb(255, 255, 255)\",\n     },"}, {"sha": "16738ec4ae4ec46b7469e48df203a4a5ddbb7d5d", "filename": "src/test/ui/deriving/deriving-hash.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Fui%2Fderiving%2Fderiving-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf286a82e236e065c67909657e3a35d1511d1864/src%2Ftest%2Fui%2Fderiving%2Fderiving-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderiving%2Fderiving-hash.rs?ref=bf286a82e236e065c67909657e3a35d1511d1864", "patch": "@@ -44,6 +44,17 @@ fn fake_hash<A: Hash>(v: &mut Vec<u8>, a: A) {\n     a.hash(&mut FakeHasher(v));\n }\n \n+struct OnlyOneByteHasher;\n+impl Hasher for OnlyOneByteHasher {\n+    fn finish(&self) -> u64 {\n+        unreachable!()\n+    }\n+\n+    fn write(&mut self, bytes: &[u8]) {\n+        assert_eq!(bytes.len(), 1);\n+    }\n+}\n+\n fn main() {\n     let person1 = Person {\n         id: 5,\n@@ -73,4 +84,13 @@ fn main() {\n     let mut v = vec![];\n     fake_hash(&mut v, SingleVariantEnum::A(17));\n     assert_eq!(vec![17], v);\n+\n+    // issue #39137\n+    #[repr(u8)]\n+    #[derive(Hash)]\n+    enum E {\n+        A,\n+        B,\n+    }\n+    E::A.hash(&mut OnlyOneByteHasher);\n }"}]}