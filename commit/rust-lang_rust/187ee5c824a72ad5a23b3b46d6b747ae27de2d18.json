{"sha": "187ee5c824a72ad5a23b3b46d6b747ae27de2d18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4N2VlNWM4MjRhNzJhZDVhMjNiM2I0NmQ2Yjc0N2FlMjdkZTJkMTg=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-08-17T23:28:00Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-08-19T19:02:41Z"}, "message": "Add I/O safety trait impls for process::Stdio and process::Child.", "tree": {"sha": "9f14176735be745f8087f5cc65514592ce3bb003", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f14176735be745f8087f5cc65514592ce3bb003"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/187ee5c824a72ad5a23b3b46d6b747ae27de2d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/187ee5c824a72ad5a23b3b46d6b747ae27de2d18", "html_url": "https://github.com/rust-lang/rust/commit/187ee5c824a72ad5a23b3b46d6b747ae27de2d18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/187ee5c824a72ad5a23b3b46d6b747ae27de2d18/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f872880b46d497166dfd33547c7b65125e35a26", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f872880b46d497166dfd33547c7b65125e35a26", "html_url": "https://github.com/rust-lang/rust/commit/6f872880b46d497166dfd33547c7b65125e35a26"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "f2e8832cc9283344688e66496f36873ad6ce5a50", "filename": "library/std/src/os/unix/process.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/187ee5c824a72ad5a23b3b46d6b747ae27de2d18/library%2Fstd%2Fsrc%2Fos%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/187ee5c824a72ad5a23b3b46d6b747ae27de2d18/library%2Fstd%2Fsrc%2Fos%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fprocess.rs?ref=187ee5c824a72ad5a23b3b46d6b747ae27de2d18", "patch": "@@ -4,7 +4,7 @@\n \n use crate::ffi::OsStr;\n use crate::io;\n-use crate::os::unix::io::{AsRawFd, FromRawFd, IntoRawFd, RawFd};\n+use crate::os::unix::io::{AsRawFd, FromRawFd, IntoRawFd, OwnedFd, RawFd};\n use crate::process;\n use crate::sealed::Sealed;\n use crate::sys;\n@@ -327,6 +327,16 @@ impl FromRawFd for process::Stdio {\n     }\n }\n \n+#[unstable(feature = \"io_safety\", issue = \"87074\")]\n+impl From<OwnedFd> for process::Stdio {\n+    #[inline]\n+    fn from(fd: OwnedFd) -> process::Stdio {\n+        let fd = sys::fd::FileDesc::from_inner(fd);\n+        let io = sys::process::Stdio::Fd(fd);\n+        process::Stdio::from_inner(io)\n+    }\n+}\n+\n #[stable(feature = \"process_extensions\", since = \"1.2.0\")]\n impl AsRawFd for process::ChildStdin {\n     #[inline]"}, {"sha": "79c07d3b968fa43c3fc62492a1dbbdc2da53c7d6", "filename": "library/std/src/os/windows/process.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/187ee5c824a72ad5a23b3b46d6b747ae27de2d18/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/187ee5c824a72ad5a23b3b46d6b747ae27de2d18/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fprocess.rs?ref=187ee5c824a72ad5a23b3b46d6b747ae27de2d18", "patch": "@@ -3,7 +3,7 @@\n #![stable(feature = \"process_extensions\", since = \"1.2.0\")]\n \n use crate::ffi::OsStr;\n-use crate::os::windows::io::{AsRawHandle, FromRawHandle, IntoRawHandle, RawHandle};\n+use crate::os::windows::io::{AsRawHandle, FromRawHandle, IntoRawHandle, OwnedHandle, RawHandle};\n use crate::process;\n use crate::sealed::Sealed;\n use crate::sys;\n@@ -18,6 +18,15 @@ impl FromRawHandle for process::Stdio {\n     }\n }\n \n+#[unstable(feature = \"io_safety\", issue = \"87074\")]\n+impl From<OwnedHandle> for process::Stdio {\n+    fn from(handle: OwnedHandle) -> process::Stdio {\n+        let handle = sys::handle::Handle::from_handle(handle);\n+        let io = sys::process::Stdio::Handle(handle);\n+        process::Stdio::from_inner(io)\n+    }\n+}\n+\n #[stable(feature = \"process_extensions\", since = \"1.2.0\")]\n impl AsRawHandle for process::Child {\n     #[inline]\n@@ -26,13 +35,28 @@ impl AsRawHandle for process::Child {\n     }\n }\n \n+#[unstable(feature = \"io_safety\", issue = \"87074\")]\n+impl AsHandle for process::Child {\n+    #[inline]\n+    fn as_handle(&self) -> BorrowedHandle<'_> {\n+        self.as_inner().handle().as_handle()\n+    }\n+}\n+\n #[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n impl IntoRawHandle for process::Child {\n     fn into_raw_handle(self) -> RawHandle {\n         self.into_inner().into_handle().into_raw_handle() as *mut _\n     }\n }\n \n+#[unstable(feature = \"io_safety\", issue = \"87074\")]\n+impl IntoHandle for process::Child {\n+    fn into_handle(self) -> BorrowedHandle<'_> {\n+        self.into_inner().into_handle().into_handle()\n+    }\n+}\n+\n #[stable(feature = \"process_extensions\", since = \"1.2.0\")]\n impl AsRawHandle for process::ChildStdin {\n     #[inline]"}]}