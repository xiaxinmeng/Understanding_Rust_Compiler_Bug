{"sha": "19a3bfec3bc159eb9b25c44c889474a61d419d8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YTNiZmVjM2JjMTU5ZWI5YjI1YzQ0Yzg4OTQ3NGE2MWQ0MTlkOGY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-07T13:26:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-07T13:26:29Z"}, "message": "Fix constant alignment on macOS", "tree": {"sha": "87d377c7bca4c571142a2d58ab7971169c596fdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87d377c7bca4c571142a2d58ab7971169c596fdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19a3bfec3bc159eb9b25c44c889474a61d419d8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19a3bfec3bc159eb9b25c44c889474a61d419d8f", "html_url": "https://github.com/rust-lang/rust/commit/19a3bfec3bc159eb9b25c44c889474a61d419d8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19a3bfec3bc159eb9b25c44c889474a61d419d8f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd7c119e4b949238f35115e4a79f6a4dadf5deb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7c119e4b949238f35115e4a79f6a4dadf5deb7", "html_url": "https://github.com/rust-lang/rust/commit/bd7c119e4b949238f35115e4a79f6a4dadf5deb7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "3ccd0f97dc549d080e47904dad5b037bbd73af50", "filename": "src/constant.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/19a3bfec3bc159eb9b25c44c889474a61d419d8f/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a3bfec3bc159eb9b25c44c889474a61d419d8f/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=19a3bfec3bc159eb9b25c44c889474a61d419d8f", "patch": "@@ -281,7 +281,12 @@ fn define_all_allocs(\n \n         let mut data_ctx = DataContext::new();\n \n-        data_ctx.define(alloc.bytes.to_vec().into_boxed_slice());\n+        let mut bytes = alloc.bytes.to_vec();\n+        // The machO backend of faerie doesn't align data objects correctly unless we do this.\n+        while bytes.len() as u64 % 16 != 0 {\n+            bytes.push(0xde);\n+        }\n+        data_ctx.define(bytes.into_boxed_slice());\n \n         for &(offset, (_tag, reloc)) in alloc.relocations.iter() {\n             let addend = {"}]}