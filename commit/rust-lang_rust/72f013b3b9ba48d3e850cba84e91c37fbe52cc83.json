{"sha": "72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZjAxM2IzYjliYTQ4ZDNlODUwY2JhODRlOTFjMzdmYmU1MmNjODM=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-12-04T16:27:10Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-12-04T16:27:10Z"}, "message": "Use METHOD semantic token type", "tree": {"sha": "f46a25bf0cc5ebf75b92afede92323b9eab1e8d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f46a25bf0cc5ebf75b92afede92323b9eab1e8d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "html_url": "https://github.com/rust-lang/rust/commit/72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "070ecef24912910417ca723cb2f1d1b350cc79d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/070ecef24912910417ca723cb2f1d1b350cc79d8", "html_url": "https://github.com/rust-lang/rust/commit/070ecef24912910417ca723cb2f1d1b350cc79d8"}], "stats": {"total": 82, "additions": 45, "deletions": 37}, "files": [{"sha": "f5c6eabeffceb42d121687ed2ea090d2d27d1f73", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -726,7 +726,7 @@ fn highlight_method_call(\n     method_call: &ast::MethodCallExpr,\n ) -> Option<Highlight> {\n     let func = sema.resolve_method_call(&method_call)?;\n-    let mut h = HighlightTag::Function.into();\n+    let mut h = HighlightTag::Method.into();\n     if func.is_unsafe(sema.db) || sema.is_unsafe_method_call(&method_call) {\n         h |= HighlightModifier::Unsafe;\n     }\n@@ -755,13 +755,18 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n         Definition::ModuleDef(def) => match def {\n             hir::ModuleDef::Module(_) => HighlightTag::Module,\n             hir::ModuleDef::Function(func) => {\n-                let mut h = HighlightTag::Function.into();\n+                let mut h = if func.as_assoc_item(db).is_some() {\n+                    if func.self_param(db).is_none() {\n+                        Highlight::from(HighlightTag::Method) | HighlightModifier::Static\n+                    } else {\n+                        HighlightTag::Method.into()\n+                    }\n+                } else {\n+                    HighlightTag::Function.into()\n+                };\n                 if func.is_unsafe(db) {\n                     h |= HighlightModifier::Unsafe;\n                 }\n-                if func.as_assoc_item(db).is_some() && func.self_param(db).is_none() {\n-                    h |= HighlightModifier::Static;\n-                }\n                 return h;\n             }\n             hir::ModuleDef::Adt(hir::Adt::Struct(_)) => HighlightTag::Struct,"}, {"sha": "ffd9588b840e0227f10450f35d960fdcb22658b2", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -30,6 +30,7 @@ pub enum HighlightTag {\n     Keyword,\n     Lifetime,\n     Macro,\n+    Method,\n     Module,\n     NumericLiteral,\n     Punctuation,\n@@ -90,6 +91,7 @@ impl HighlightTag {\n             HighlightTag::Lifetime => \"lifetime\",\n             HighlightTag::Punctuation => \"punctuation\",\n             HighlightTag::Macro => \"macro\",\n+            HighlightTag::Method => \"method\",\n             HighlightTag::Module => \"module\",\n             HighlightTag::NumericLiteral => \"numeric_literal\",\n             HighlightTag::Operator => \"operator\","}, {"sha": "6fb606a4729bc11160428fb77f4c76630b012ada", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -40,17 +40,17 @@\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">foo</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"method declaration static\">is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"method declaration\">is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">t</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration static\">t_is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">t_is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration static\">t_is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">t_is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">t</span> <span class=\"keyword\">for</span> <span class=\"struct\">foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"method declaration static\">is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"method declaration\">is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n         </code></pre>\n\\ No newline at end of file"}, {"sha": "396fd46fbde68817d2e4bf23eeee1c7600369ecd", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -53,7 +53,7 @@\n     <span class=\"comment documentation\">/// #</span><span class=\"generic injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"punctuation attribute injected\">(</span><span class=\"attribute attribute injected\">unused_mut</span><span class=\"punctuation attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"punctuation injected\">:</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span>    <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"method declaration static\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n         <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">bar</span><span class=\"punctuation\">:</span> <span class=\"bool_literal\">true</span> <span class=\"punctuation\">}</span>\n     <span class=\"punctuation\">}</span>\n \n@@ -87,7 +87,7 @@\n     <span class=\"comment documentation\">/// ```sh</span>\n     <span class=\"comment documentation\">/// echo 1</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"method declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"punctuation\">{</span>\n         <span class=\"bool_literal\">true</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>"}, {"sha": "31daf2bd0b4de56313d77e147484ec87445bff7c", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -40,7 +40,7 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n     <span class=\"function\">fixture</span><span class=\"punctuation\">(</span><span class=\"string_literal\">r#\"</span>\n         <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Foo</span> <span class=\"punctuation\">{</span>\n-            <span class=\"keyword\">fn</span> <span class=\"function declaration static\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+            <span class=\"keyword\">fn</span> <span class=\"method declaration static\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n                 <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n             <span class=\"punctuation\">}</span>\n         <span class=\"punctuation\">}</span><span class=\"string_literal\">\"#</span>"}, {"sha": "67ec73f1592814d30fc2e043497e8bceeeff2b65", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -45,7 +45,7 @@\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">HasUnsafeFn</span><span class=\"punctuation\">;</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">HasUnsafeFn</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"method declaration unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">TypeForStaticMut</span> <span class=\"punctuation\">{</span>\n@@ -60,11 +60,11 @@\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">DoTheAutoref</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">calls_autoref</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">calls_autoref</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">DoTheAutoref</span> <span class=\"keyword\">for</span> <span class=\"builtin_type\">u16</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">calls_autoref</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">calls_autoref</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n@@ -78,7 +78,7 @@\n             <span class=\"union\">Union</span> <span class=\"punctuation\">{</span> <span class=\"field unsafe\">b</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"punctuation\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n             <span class=\"union\">Union</span> <span class=\"punctuation\">{</span> <span class=\"field unsafe\">a</span> <span class=\"punctuation\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n         <span class=\"punctuation\">}</span>\n-        <span class=\"struct\">HasUnsafeFn</span><span class=\"operator\">.</span><span class=\"function unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+        <span class=\"struct\">HasUnsafeFn</span><span class=\"operator\">.</span><span class=\"method unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n         <span class=\"comment\">// unsafe deref</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">*</span><span class=\"variable\">x</span><span class=\"punctuation\">;</span>\n@@ -94,6 +94,6 @@\n         <span class=\"keyword\">let</span> <span class=\"struct\">Packed</span> <span class=\"punctuation\">{</span> <span class=\"field\">a</span><span class=\"punctuation\">:</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration\">_a</span> <span class=\"punctuation\">}</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"punctuation\">;</span>\n \n         <span class=\"comment\">// unsafe auto ref of packed field</span>\n-        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function unsafe\">calls_autoref</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"method unsafe\">calls_autoref</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "a3b4f20e8701739ac0c3a24bea901628eec2bc9c", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -62,25 +62,25 @@\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">Foo</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n-        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"punctuation\">)</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">Foo</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"method consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"punctuation\">)</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword mutable\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n@@ -91,15 +91,15 @@\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">FooCopy</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">FooCopy</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n-        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">FooCopy</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n+        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"method\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword mutable\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">quop</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"punctuation\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n@@ -175,17 +175,17 @@\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"variable mutable\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">foo2</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span><span class=\"punctuation\">,</span> <span class=\"field\">y</span><span class=\"punctuation\">:</span> <span class=\"variable mutable\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"variable consuming\">foo2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"method\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"method mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"method consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"variable consuming\">foo2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">copy</span> <span class=\"operator\">=</span> <span class=\"struct\">FooCopy</span> <span class=\"punctuation\">{</span> <span class=\"field\">x</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function\">baz</span><span class=\"punctuation\">(</span><span class=\"variable mutable\">copy</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"method\">quop</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"method mutable\">qux</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"method\">baz</span><span class=\"punctuation\">(</span><span class=\"variable mutable\">copy</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">a</span> <span class=\"operator\">=</span> <span class=\"punctuation\">|</span><span class=\"value_param declaration\">x</span><span class=\"punctuation\">|</span> <span class=\"value_param\">x</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"function\">baz</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"method\">baz</span><span class=\"punctuation\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">-</span><span class=\"numeric_literal\">42</span><span class=\"punctuation\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"variable\">baz</span><span class=\"punctuation\">;</span>\n@@ -200,7 +200,7 @@\n <span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"operator\">::</span><span class=\"punctuation\">*</span><span class=\"punctuation\">;</span>\n \n <span class=\"keyword\">impl</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">other</span><span class=\"punctuation\">:</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">,</span> <span class=\"type_param\">U</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"method declaration\">and</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">other</span><span class=\"punctuation\">:</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param\">U</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"punctuation\">(</span><span class=\"type_param\">T</span><span class=\"punctuation\">,</span> <span class=\"type_param\">U</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>\n         <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> <span class=\"punctuation\">{</span>\n             <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n             <span class=\"variable declaration\">Nope</span> <span class=\"operator\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"punctuation\">,</span>"}, {"sha": "01eabe8526a561e279a41be34635e1c49ce46f09", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72f013b3b9ba48d3e850cba84e91c37fbe52cc83/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=72f013b3b9ba48d3e850cba84e91c37fbe52cc83", "patch": "@@ -381,6 +381,7 @@ fn semantic_token_type_and_modifiers(\n         HighlightTag::Function => lsp_types::SemanticTokenType::FUNCTION,\n         HighlightTag::Generic => semantic_tokens::GENERIC,\n         HighlightTag::Module => lsp_types::SemanticTokenType::NAMESPACE,\n+        HighlightTag::Method => lsp_types::SemanticTokenType::METHOD,\n         HighlightTag::Constant => {\n             mods |= semantic_tokens::CONSTANT;\n             mods |= lsp_types::SemanticTokenModifier::STATIC;"}]}