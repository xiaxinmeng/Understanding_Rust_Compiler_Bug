{"sha": "2065b52dfef3cd5a5216e65c21a056a69574bddc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNjViNTJkZmVmM2NkNWE1MjE2ZTY1YzIxYTA1NmE2OTU3NGJkZGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-11T10:37:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-11T10:37:40Z"}, "message": "Auto merge of #1648 - RalfJung:windows-track-raw, r=RalfJung\n\nenable track-raw-ptr tests on Windows\n\nWith https://github.com/rust-lang/rust/pull/79893 landed, raw-pointer-tracking now works even for the Windows runtime. :)", "tree": {"sha": "ae4a133682722bf10aaf078df9fe10dae724f3cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae4a133682722bf10aaf078df9fe10dae724f3cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2065b52dfef3cd5a5216e65c21a056a69574bddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2065b52dfef3cd5a5216e65c21a056a69574bddc", "html_url": "https://github.com/rust-lang/rust/commit/2065b52dfef3cd5a5216e65c21a056a69574bddc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2065b52dfef3cd5a5216e65c21a056a69574bddc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ddbda28e38acba5f076ef7b92559bd941d842a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ddbda28e38acba5f076ef7b92559bd941d842a8", "html_url": "https://github.com/rust-lang/rust/commit/1ddbda28e38acba5f076ef7b92559bd941d842a8"}, {"sha": "19d3d9e313af703fae223e06ba317fbd51a12bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/19d3d9e313af703fae223e06ba317fbd51a12bbd", "html_url": "https://github.com/rust-lang/rust/commit/19d3d9e313af703fae223e06ba317fbd51a12bbd"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "38663b408a3d881482a9926709f36f550e20c5b1", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -248,8 +248,7 @@ environment variable:\n   help identify latent aliasing issues in code that Miri accepts by default. You\n   can recognize false positives by \"<untagged>\" occurring in the message -- this\n   indicates a pointer that was cast from an integer, so Miri was unable to track\n-  this pointer. Make sure to use a non-Windows target with this flag, as the\n-  Windows runtime makes use of integer-pointer casts.\n+  this pointer.\n \n Some native rustc `-Z` flags are also very relevant for Miri:\n "}, {"sha": "a11d33b3d336f57d122175652acb9034f1f740f4", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1 +1 @@\n-39b841dfe36f90a7cd111e7f0c55f32594f6e578\n+a2e29d67c26bdf8f278c98ee02d6cc77a279ed2e"}, {"sha": "975aec945c7f58e5dcbf8fac0caa5def93165b1e", "filename": "tests/compile-fail/stacked_borrows/raw_tracking.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Fcompile-fail%2Fstacked_borrows%2Fraw_tracking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Fcompile-fail%2Fstacked_borrows%2Fraw_tracking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fraw_tracking.rs?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: -Zmiri-track-raw-pointers\n-// ignore-windows (FIXME: tracking raw pointers does not work on Windows)\n //! This demonstrates a provenance problem that requires tracking of raw pointers to be detected.\n \n fn main() {"}, {"sha": "b704b89fd0507584a443d8a78dd15133b8132d1f", "filename": "tests/run-pass/btreemap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fbtreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fbtreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbtreemap.rs?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: -Zmiri-track-raw-pointers\n-// ignore-windows (FIXME: tracking raw pointers does not work on Windows)\n #![feature(btree_drain_filter)]\n use std::collections::{BTreeMap, BTreeSet};\n use std::mem;"}, {"sha": "69bd1f8d9ae2d088520a9f2f54ada1479ad319fe", "filename": "tests/run-pass/rc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frc.rs?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: -Zmiri-track-raw-pointers\n-// ignore-windows (FIXME: tracking raw pointers does not work on Windows)\n #![feature(new_uninit)]\n #![feature(get_mut_unchecked)]\n "}, {"sha": "99bd0fb9d8057b1970435354db2d3000eba7f3b7", "filename": "tests/run-pass/stacked-borrows/stacked-borrows.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: -Zmiri-track-raw-pointers\n-// ignore-windows (FIXME: tracking raw pointers does not work on Windows)\n #![feature(raw_ref_macros)]\n use std::ptr;\n     "}, {"sha": "8d83f6380b8f89bfdf750f0f478398abcebeaea1", "filename": "tests/run-pass/vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvec.rs?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: -Zmiri-track-raw-pointers\n-// ignore-windows (FIXME: tracking raw pointers does not work on Windows)\n // Gather all references from a mutable iterator and make sure Miri notices if\n // using them is dangerous.\n fn test_all_refs<'a, T: 'a>(dummy: &mut T, iter: impl Iterator<Item = &'a mut T>) {"}, {"sha": "54aeb89ec83ff6c6eefc60df37de99b549c5fd0b", "filename": "tests/run-pass/vecdeque.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fvecdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2065b52dfef3cd5a5216e65c21a056a69574bddc/tests%2Frun-pass%2Fvecdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvecdeque.rs?ref=2065b52dfef3cd5a5216e65c21a056a69574bddc", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: -Zmiri-track-raw-pointers\n-// ignore-windows (FIXME: tracking raw pointers does not work on Windows)\n use std::collections::VecDeque;\n \n fn test_all_refs<'a, T: 'a>(dummy: &mut T, iter: impl Iterator<Item = &'a mut T>) {"}]}