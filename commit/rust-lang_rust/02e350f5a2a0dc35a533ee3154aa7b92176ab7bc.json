{"sha": "02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZTM1MGY1YTJhMGRjMzVhNTMzZWUzMTU0YWE3YjkyMTc2YWI3YmM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-22T23:34:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-22T23:34:39Z"}, "message": "Rollup merge of #74460 - dennis-hamester:rustdoc-warn-pub-to-priv, r=jyn514\n\nrustdoc: Always warn when linking from public to private items\n\nChange the logic such that linking from a public to a private item always triggers `intra_doc_link_resolution_failure`.\nPreviously, the warning was not emitted when `--document-private-items` is passed.\n\nThis came up during the discussion in https://github.com/rust-lang/rust/pull/74147#discussion_r452597901.", "tree": {"sha": "c557434304a7478f99b174458edb69751973e216", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c557434304a7478f99b174458edb69751973e216"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGM0PCRBK7hj4Ov3rIwAAdHIIAD05L5FC/LO2Nzy4vNzZ/heP\nDsTqQUK+NDDmIBSt3E/kvU5weayzw6laMS3KWnscXfKbPWkqvxXQHQP5xsZHCYlD\n9OjGdqUIwGCcC3g+w8r4/FIO392y+U6HHZjkVOpru1Zx/Ki7qJBDgyRjZP1Fl6Gn\npDvpZYHXhtVYUaw/BxnPgOiXYKcHvV1NkCjoe8dqWOR+j3uUS5wY8s20ZpAgEeDF\nX+wp69O+WtebGMcCTZbiksbJ04QGaQQ9+s1sv0/m2UDlXStppG6nMoHrw7DxiZ11\n3zRpT6/cFbAMQU2VJdAcwnf/9l5MRDJmVyQUSUPjJscyqo1HN/vxuHsp5jnqR3o=\n=fg3P\n-----END PGP SIGNATURE-----\n", "payload": "tree c557434304a7478f99b174458edb69751973e216\nparent da449a9c1b018c5f57ce324c6fe02366bf3a868b\nparent c14641a814696f6dffe5a0e7d693af31a4e40d09\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595460879 -0700\ncommitter GitHub <noreply@github.com> 1595460879 -0700\n\nRollup merge of #74460 - dennis-hamester:rustdoc-warn-pub-to-priv, r=jyn514\n\nrustdoc: Always warn when linking from public to private items\n\nChange the logic such that linking from a public to a private item always triggers `intra_doc_link_resolution_failure`.\nPreviously, the warning was not emitted when `--document-private-items` is passed.\n\nThis came up during the discussion in https://github.com/rust-lang/rust/pull/74147#discussion_r452597901.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "html_url": "https://github.com/rust-lang/rust/commit/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da449a9c1b018c5f57ce324c6fe02366bf3a868b", "url": "https://api.github.com/repos/rust-lang/rust/commits/da449a9c1b018c5f57ce324c6fe02366bf3a868b", "html_url": "https://github.com/rust-lang/rust/commit/da449a9c1b018c5f57ce324c6fe02366bf3a868b"}, {"sha": "c14641a814696f6dffe5a0e7d693af31a4e40d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/c14641a814696f6dffe5a0e7d693af31a4e40d09", "html_url": "https://github.com/rust-lang/rust/commit/c14641a814696f6dffe5a0e7d693af31a4e40d09"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "5187839423d6b1d8e00f981b6ee2d54f07e5a310", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -790,13 +790,20 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                 item.attrs.links.push((ori_link, None, fragment));\n             } else {\n                 debug!(\"intra-doc link to {} resolved to {:?}\", path_str, res);\n-                if let Some(local) = res.opt_def_id().and_then(|def_id| def_id.as_local()) {\n+\n+                // item can be non-local e.g. when using #[doc(primitive = \"pointer\")]\n+                if let Some((src_id, dst_id)) = res\n+                    .opt_def_id()\n+                    .and_then(|def_id| def_id.as_local())\n+                    .and_then(|dst_id| item.def_id.as_local().map(|src_id| (src_id, dst_id)))\n+                {\n                     use rustc_hir::def_id::LOCAL_CRATE;\n \n-                    let hir_id = self.cx.tcx.hir().as_local_hir_id(local);\n-                    if !self.cx.tcx.privacy_access_levels(LOCAL_CRATE).is_exported(hir_id)\n-                        && (item.visibility == Visibility::Public)\n-                        && !self.cx.render_options.document_private\n+                    let hir_src = self.cx.tcx.hir().as_local_hir_id(src_id);\n+                    let hir_dst = self.cx.tcx.hir().as_local_hir_id(dst_id);\n+\n+                    if self.cx.tcx.privacy_access_levels(LOCAL_CRATE).is_exported(hir_src)\n+                        && !self.cx.tcx.privacy_access_levels(LOCAL_CRATE).is_exported(hir_dst)\n                     {\n                         privacy_error(cx, &item, &path_str, &dox, link_range);\n                         continue;\n@@ -1069,6 +1076,13 @@ fn privacy_error(\n         if let Some(sp) = sp {\n             diag.span_label(sp, \"this item is private\");\n         }\n+\n+        let note_msg = if cx.render_options.document_private {\n+            \"this link resolves only because you passed `--document-private-items`, but will break without\"\n+        } else {\n+            \"this link will resolve properly if you pass `--document-private-items`\"\n+        };\n+        diag.note(note_msg);\n     });\n }\n "}, {"sha": "a2148b82f819af51783adf25929d2cc8fc24e66d", "filename": "src/test/rustdoc-ui/intra-links-private.private.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.private.stderr?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -0,0 +1,11 @@\n+warning: public documentation for `DocMe` links to private item `DontDocMe`\n+  --> $DIR/intra-links-private.rs:5:11\n+   |\n+LL | /// docs [DontDocMe]\n+   |           ^^^^^^^^^ this item is private\n+   |\n+   = note: `#[warn(intra_doc_link_resolution_failure)]` on by default\n+   = note: this link resolves only because you passed `--document-private-items`, but will break without\n+\n+warning: 1 warning emitted\n+"}, {"sha": "56742406992fcc63138c147074c0d176f207b8b8", "filename": "src/test/rustdoc-ui/intra-links-private.public.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.public.stderr?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -1,10 +1,11 @@\n warning: public documentation for `DocMe` links to private item `DontDocMe`\n-  --> $DIR/intra-links-private.rs:6:11\n+  --> $DIR/intra-links-private.rs:5:11\n    |\n LL | /// docs [DontDocMe]\n    |           ^^^^^^^^^ this item is private\n    |\n    = note: `#[warn(intra_doc_link_resolution_failure)]` on by default\n+   = note: this link will resolve properly if you pass `--document-private-items`\n \n warning: 1 warning emitted\n "}, {"sha": "613236d75d2ee952e847f7ac23590a95509bfccd", "filename": "src/test/rustdoc-ui/intra-links-private.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-private.rs?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -1,10 +1,9 @@\n // check-pass\n // revisions: public private\n // [private]compile-flags: --document-private-items\n-#![cfg_attr(private, deny(intra_doc_link_resolution_failure))]\n \n /// docs [DontDocMe]\n-//[public]~^ WARNING public documentation for `DocMe` links to private item `DontDocMe`\n+//~^ WARNING public documentation for `DocMe` links to private item `DontDocMe`\n // FIXME: for [private] we should also make sure the link was actually generated\n pub struct DocMe;\n struct DontDocMe;"}, {"sha": "9c5cdf0117cab1683b92fba3af67696362daa24a", "filename": "src/test/rustdoc-ui/issue-74134.private.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fissue-74134.private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fissue-74134.private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-74134.private.stderr?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -0,0 +1,11 @@\n+warning: public documentation for `public_item` links to private item `PrivateType`\n+  --> $DIR/issue-74134.rs:19:10\n+   |\n+LL |     /// [`PrivateType`]\n+   |          ^^^^^^^^^^^^^ this item is private\n+   |\n+   = note: `#[warn(intra_doc_link_resolution_failure)]` on by default\n+   = note: this link resolves only because you passed `--document-private-items`, but will break without\n+\n+warning: 1 warning emitted\n+"}, {"sha": "ff2951d864e642e6dd57f13068f1bfec40f50e67", "filename": "src/test/rustdoc-ui/issue-74134.public.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fissue-74134.public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fissue-74134.public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-74134.public.stderr?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -5,6 +5,7 @@ LL |     /// [`PrivateType`]\n    |          ^^^^^^^^^^^^^ this item is private\n    |\n    = note: `#[warn(intra_doc_link_resolution_failure)]` on by default\n+   = note: this link will resolve properly if you pass `--document-private-items`\n \n warning: 1 warning emitted\n "}, {"sha": "b1be9123aaf838cf4750c84dc06fb23d1f01b5cd", "filename": "src/test/rustdoc-ui/issue-74134.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fissue-74134.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e350f5a2a0dc35a533ee3154aa7b92176ab7bc/src%2Ftest%2Frustdoc-ui%2Fissue-74134.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-74134.rs?ref=02e350f5a2a0dc35a533ee3154aa7b92176ab7bc", "patch": "@@ -4,7 +4,7 @@\n \n // There are 4 cases here:\n // 1. public item  -> public type:  no warning\n-// 2. public item  -> private type: warning, if --document-private-items is not passed\n+// 2. public item  -> private type: warning\n // 3. private item -> public type:  no warning\n // 4. private item -> private type: no warning\n // All 4 cases are tested with and without --document-private-items.\n@@ -17,7 +17,7 @@ pub struct PublicType;\n pub struct Public {\n     /// [`PublicType`]\n     /// [`PrivateType`]\n-    //[public]~^ WARNING public documentation for `public_item` links to private item `PrivateType`\n+    //~^ WARNING public documentation for `public_item` links to private item `PrivateType`\n     pub public_item: u32,\n \n     /// [`PublicType`]"}]}