{"sha": "10e317de547851bdf714ada4d21b41f5b989d4ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZTMxN2RlNTQ3ODUxYmRmNzE0YWRhNGQyMWI0MWY1Yjk4OWQ0ZWQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-14T21:23:30Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-15T20:38:41Z"}, "message": "vec::u8 => vec::bytes (#3444)", "tree": {"sha": "134e532c782d54e054fbc712f74f5b5a8e592fea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/134e532c782d54e054fbc712f74f5b5a8e592fea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10e317de547851bdf714ada4d21b41f5b989d4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10e317de547851bdf714ada4d21b41f5b989d4ed", "html_url": "https://github.com/rust-lang/rust/commit/10e317de547851bdf714ada4d21b41f5b989d4ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10e317de547851bdf714ada4d21b41f5b989d4ed/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dc9e6643ae73c571c0543d3aed2d7461ded9289", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc9e6643ae73c571c0543d3aed2d7461ded9289", "html_url": "https://github.com/rust-lang/rust/commit/8dc9e6643ae73c571c0543d3aed2d7461ded9289"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5fbad9fde95a6e97240d7154a0f1bab4c5a4eb0a", "filename": "src/libcore/io.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/10e317de547851bdf714ada4d21b41f5b989d4ed/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e317de547851bdf714ada4d21b41f5b989d4ed/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=10e317de547851bdf714ada4d21b41f5b989d4ed", "patch": "@@ -292,9 +292,8 @@ impl ByteBuf: Reader {\n     fn read(buf: &[mut u8], len: uint) -> uint {\n         let count = uint::min(len, self.buf.len() - self.pos);\n \n-        vec::u8::memcpy(buf,\n-                        vec::const_view(self.buf, self.pos, self.buf.len()),\n-                        count);\n+        let view = vec::const_view(self.buf, self.pos, self.buf.len());\n+        vec::bytes::memcpy(buf, view, count);\n \n         self.pos += count;\n \n@@ -684,7 +683,8 @@ impl MemBuffer: Writer {\n             vec::reserve(buf, count);\n             unsafe { vec::raw::set_len(buf, count); }\n \n-            vec::u8::memcpy(vec::mut_view(buf, self.pos, count), v, v_len);\n+            let view = vec::mut_view(buf, self.pos, count);\n+            vec::bytes::memcpy(view, v, v_len);\n \n             self.pos += v_len;\n "}, {"sha": "ed8a676fa4cd8e586cf339c4cdef0b85cf992ae3", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10e317de547851bdf714ada4d21b41f5b989d4ed/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e317de547851bdf714ada4d21b41f5b989d4ed/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=10e317de547851bdf714ada4d21b41f5b989d4ed", "patch": "@@ -88,7 +88,7 @@ export as_imm_buf;\n export as_mut_buf;\n export as_const_buf;\n export raw;\n-export u8;\n+export bytes;\n export extensions;\n export ConstVector;\n export CopyableVector;\n@@ -1929,7 +1929,7 @@ mod raw {\n }\n \n /// Operations on `[u8]`\n-mod u8 {\n+mod bytes {\n     export cmp;\n     export lt, le, eq, ne, ge, gt;\n     export hash;"}, {"sha": "e62e92ab642e1e65861ebd82515e30c062d4c13e", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10e317de547851bdf714ada4d21b41f5b989d4ed/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e317de547851bdf714ada4d21b41f5b989d4ed/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=10e317de547851bdf714ada4d21b41f5b989d4ed", "patch": "@@ -787,7 +787,7 @@ impl TcpSocketBuf: io::Reader {\n         let mut data = ~[];\n         self.data.buf <-> data;\n \n-        vec::u8::memcpy(buf, vec::view(data, 0, data.len()), count);\n+        vec::bytes::memcpy(buf, vec::view(data, 0, data.len()), count);\n \n         vec::push_all(self.data.buf, vec::view(data, count, data.len()));\n "}]}