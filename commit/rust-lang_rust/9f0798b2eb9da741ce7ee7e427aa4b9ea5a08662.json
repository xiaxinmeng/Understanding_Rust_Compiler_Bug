{"sha": "9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662", "node_id": "C_kwDOAAsO6NoAKDlmMDc5OGIyZWI5ZGE3NDFjZTdlZTdlNDI3YWE0YjllYTVhMDg2NjI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-09T23:06:57Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-11T03:10:21Z"}, "message": "Add a useful assertion.", "tree": {"sha": "a1a1b4ef4489819efa634b853b01c0790367045e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a1b4ef4489819efa634b853b01c0790367045e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662", "html_url": "https://github.com/rust-lang/rust/commit/9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d4baf7c9a6adb2f8e7071df7af523fa10a568d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4baf7c9a6adb2f8e7071df7af523fa10a568d6", "html_url": "https://github.com/rust-lang/rust/commit/4d4baf7c9a6adb2f8e7071df7af523fa10a568d6"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ecbb15d6b719e748acce9907f70eb49b9beb98da", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=9f0798b2eb9da741ce7ee7e427aa4b9ea5a08662", "patch": "@@ -521,6 +521,8 @@ fn inner_parse_loop<'root, 'tt>(\n             // then we could be at the end of a sequence or at the beginning of the next\n             // repetition.\n             if let Some(repetition) = &item.repetition {\n+                debug_assert!(matches!(item.top_elts, Tt(TokenTree::Sequence(..))));\n+\n                 // At this point, regardless of whether there is a separator, we should add all\n                 // matches from the complete repetition of the sequence to the shared, top-level\n                 // `matches` list (actually, `up.matches`, which could itself not be the top-level,"}]}