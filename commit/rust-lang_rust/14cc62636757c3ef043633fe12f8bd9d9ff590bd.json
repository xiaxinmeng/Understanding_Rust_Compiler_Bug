{"sha": "14cc62636757c3ef043633fe12f8bd9d9ff590bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0Y2M2MjYzNjc1N2MzZWYwNDM2MzNmZTEyZjhiZDlkOWZmNTkwYmQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-01T08:55:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-01T08:55:03Z"}, "message": "Merge #7818\n\n7818: Clean up warnings r=matklad a=bugadani\n\n\n\nCo-authored-by: D\u00e1niel Buga <bugadani@gmail.com>", "tree": {"sha": "e018d3aae6d5a8e3b5df0717b6c78c0227c0239c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e018d3aae6d5a8e3b5df0717b6c78c0227c0239c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14cc62636757c3ef043633fe12f8bd9d9ff590bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgPKvnCRBK7hj4Ov3rIwAAdHIIAKXeMp6QPAwJuKlCQ3ja17lG\noAin6SNak+s1dK9ln2odjyaAANOvhgNfAMlP1cyToIclDLIrvV7mRiMnOnC6oWTe\nZQ3Zvykd2PuiU/FTSf5csSqR5qrFVwYHwARbBFMrYm3iBzBQR2NyDfvbogoI8AHn\nGKCFMr5YIyvVHl5MFb/RrNktHXfAtvKvWCf1waPA6PObF592qbgrWwNb9hxlx8Tq\nLDsZJsAtwIda9jH1V0oDXXHHgvZJsqr6UW1DWnruH+3xaverTCohd/rkcDd/DUFJ\n509DviH3rY5e/TKrSYcD2bwnkeqtGz1BGmtoDP8f4H9GI+Kht4VzNp0M1TDjlE0=\n=1e0k\n-----END PGP SIGNATURE-----\n", "payload": "tree e018d3aae6d5a8e3b5df0717b6c78c0227c0239c\nparent 5df3ee8274fdb7cdeb2b0871b4efea8cbf4724a1\nparent cb39f2df9457ea372a5f870a3274b341a8f41c7f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614588903 +0000\ncommitter GitHub <noreply@github.com> 1614588903 +0000\n\nMerge #7818\n\n7818: Clean up warnings r=matklad a=bugadani\n\n\n\nCo-authored-by: D\u00e1niel Buga <bugadani@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14cc62636757c3ef043633fe12f8bd9d9ff590bd", "html_url": "https://github.com/rust-lang/rust/commit/14cc62636757c3ef043633fe12f8bd9d9ff590bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14cc62636757c3ef043633fe12f8bd9d9ff590bd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5df3ee8274fdb7cdeb2b0871b4efea8cbf4724a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5df3ee8274fdb7cdeb2b0871b4efea8cbf4724a1", "html_url": "https://github.com/rust-lang/rust/commit/5df3ee8274fdb7cdeb2b0871b4efea8cbf4724a1"}, {"sha": "cb39f2df9457ea372a5f870a3274b341a8f41c7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb39f2df9457ea372a5f870a3274b341a8f41c7f", "html_url": "https://github.com/rust-lang/rust/commit/cb39f2df9457ea372a5f870a3274b341a8f41c7f"}], "stats": {"total": 18, "additions": 2, "deletions": 16}, "files": [{"sha": "6d81be88040d18899eecf414aba0b06c6979caf9", "filename": "crates/mbe/src/benchmark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14cc62636757c3ef043633fe12f8bd9d9ff590bd/crates%2Fmbe%2Fsrc%2Fbenchmark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14cc62636757c3ef043633fe12f8bd9d9ff590bd/crates%2Fmbe%2Fsrc%2Fbenchmark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fbenchmark.rs?ref=14cc62636757c3ef043633fe12f8bd9d9ff590bd", "patch": "@@ -177,7 +177,7 @@ fn invocation_fixtures(rules: &FxHashMap<String, MacroRules>) -> Vec<(String, tt\n             let c = 1013904223;\n             *seed = usize::wrapping_add(usize::wrapping_mul(*seed, a), c);\n             return *seed;\n-        };\n+        }\n         fn make_ident(ident: &str) -> tt::TokenTree {\n             tt::Leaf::Ident(tt::Ident { id: tt::TokenId::unspecified(), text: SmolStr::new(ident) })\n                 .into()"}, {"sha": "391a0b60db0e84da707cdb0c8fa33ef68df74ff7", "filename": "crates/rust-analyzer/tests/rust-analyzer/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14cc62636757c3ef043633fe12f8bd9d9ff590bd/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14cc62636757c3ef043633fe12f8bd9d9ff590bd/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs?ref=14cc62636757c3ef043633fe12f8bd9d9ff590bd", "patch": "@@ -54,7 +54,6 @@ version = \"0.0.0\"\n use std::collections::Spam;\n \"#,\n     )\n-    .with_sysroot(true)\n     .server()\n     .wait_until_workspace_is_loaded();\n \n@@ -451,7 +450,6 @@ fn main() {{}}\n \"#,\n         librs, libs\n     ))\n-    .with_sysroot(true)\n     .server()\n     .wait_until_workspace_is_loaded();\n "}, {"sha": "726d555e46bf78ed98f2fa20edfbb0d1d6256832", "filename": "crates/rust-analyzer/tests/rust-analyzer/support.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14cc62636757c3ef043633fe12f8bd9d9ff590bd/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14cc62636757c3ef043633fe12f8bd9d9ff590bd/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs?ref=14cc62636757c3ef043633fe12f8bd9d9ff590bd", "patch": "@@ -20,21 +20,14 @@ use crate::testdir::TestDir;\n \n pub(crate) struct Project<'a> {\n     fixture: &'a str,\n-    with_sysroot: bool,\n     tmp_dir: Option<TestDir>,\n     roots: Vec<PathBuf>,\n     config: serde_json::Value,\n }\n \n impl<'a> Project<'a> {\n     pub(crate) fn with_fixture(fixture: &str) -> Project {\n-        Project {\n-            fixture,\n-            tmp_dir: None,\n-            roots: vec![],\n-            with_sysroot: false,\n-            config: serde_json::Value::Null,\n-        }\n+        Project { fixture, tmp_dir: None, roots: vec![], config: serde_json::Value::Null }\n     }\n \n     pub(crate) fn tmp_dir(mut self, tmp_dir: TestDir) -> Project<'a> {\n@@ -47,11 +40,6 @@ impl<'a> Project<'a> {\n         self\n     }\n \n-    pub(crate) fn with_sysroot(mut self, yes: bool) -> Project<'a> {\n-        self.with_sysroot = yes;\n-        self\n-    }\n-\n     pub(crate) fn with_config(mut self, config: serde_json::Value) -> Project<'a> {\n         self.config = config;\n         self"}]}