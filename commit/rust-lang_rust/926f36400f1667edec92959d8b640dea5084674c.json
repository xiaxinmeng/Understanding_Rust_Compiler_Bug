{"sha": "926f36400f1667edec92959d8b640dea5084674c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNmYzNjQwMGYxNjY3ZWRlYzkyOTU5ZDhiNjQwZGVhNTA4NDY3NGM=", "commit": {"author": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-21T16:36:12Z"}, "committer": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-21T16:36:12Z"}, "message": "move cvt", "tree": {"sha": "cc8b7ce45d1198d22b49086988a33029be30f39f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc8b7ce45d1198d22b49086988a33029be30f39f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/926f36400f1667edec92959d8b640dea5084674c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/926f36400f1667edec92959d8b640dea5084674c", "html_url": "https://github.com/rust-lang/rust/commit/926f36400f1667edec92959d8b640dea5084674c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/926f36400f1667edec92959d8b640dea5084674c/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a47e3c077cd7f201dbbf12140c12663df0fcda6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a47e3c077cd7f201dbbf12140c12663df0fcda6f", "html_url": "https://github.com/rust-lang/rust/commit/a47e3c077cd7f201dbbf12140c12663df0fcda6f"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "d801b051357a4fcc764db9b6cd07162bc78b67a2", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/926f36400f1667edec92959d8b640dea5084674c/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/926f36400f1667edec92959d8b640dea5084674c/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=926f36400f1667edec92959d8b640dea5084674c", "patch": "@@ -24,6 +24,7 @@ compiler_builtins = { version = \"0.1.16\" }\n profiler_builtins = { path = \"../libprofiler_builtins\", optional = true }\n unwind = { path = \"../libunwind\" }\n hashbrown = { version = \"0.5.0\", features = ['rustc-dep-of-std'] }\n+wasi = { git = \"https://github.com/newpavlov/rust-wasi\", branch = \"safe_rework\", features = ['rustc-dep-of-std', 'alloc'] }\n \n [dependencies.backtrace]\n version = \"0.3.35\""}, {"sha": "f87e4d16fcdac3b808f6ef7065400ccc1b4bee81", "filename": "src/libstd/sys/wasi/mod.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/926f36400f1667edec92959d8b640dea5084674c/src%2Flibstd%2Fsys%2Fwasi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/926f36400f1667edec92959d8b640dea5084674c/src%2Flibstd%2Fsys%2Fwasi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fmod.rs?ref=926f36400f1667edec92959d8b640dea5084674c", "patch": "@@ -102,29 +102,6 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n     return ret\n }\n \n-#[doc(hidden)]\n-pub trait IsMinusOne {\n-    fn is_minus_one(&self) -> bool;\n-}\n-\n-macro_rules! impl_is_minus_one {\n-    ($($t:ident)*) => ($(impl IsMinusOne for $t {\n-        fn is_minus_one(&self) -> bool {\n-            *self == -1\n-        }\n-    })*)\n-}\n-\n-impl_is_minus_one! { i8 i16 i32 i64 isize }\n-\n-pub fn cvt<T: IsMinusOne>(t: T) -> std_io::Result<T> {\n-    if t.is_minus_one() {\n-        Err(std_io::Error::last_os_error())\n-    } else {\n-        Ok(t)\n-    }\n-}\n-\n fn err2io(err: wasi::Error) -> std_io::Error {\n     std_io::Error::from_raw_os_error(err.get() as i32)\n }"}, {"sha": "feee840782550cd81dff8d1050124b7d7e9d6dab", "filename": "src/libstd/sys/wasi/os.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/926f36400f1667edec92959d8b640dea5084674c/src%2Flibstd%2Fsys%2Fwasi%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/926f36400f1667edec92959d8b640dea5084674c/src%2Flibstd%2Fsys%2Fwasi%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fos.rs?ref=926f36400f1667edec92959d8b640dea5084674c", "patch": "@@ -9,7 +9,7 @@ use crate::path::{self, PathBuf};\n use crate::ptr;\n use crate::str;\n use crate::sys::memchr;\n-use crate::sys::{cvt, unsupported, Void};\n+use crate::sys::{unsupported, Void};\n use crate::vec;\n \n #[cfg(not(target_feature = \"atomics\"))]\n@@ -176,3 +176,26 @@ pub fn exit(code: i32) -> ! {\n pub fn getpid() -> u32 {\n     panic!(\"unsupported\");\n }\n+\n+#[doc(hidden)]\n+pub trait IsMinusOne {\n+    fn is_minus_one(&self) -> bool;\n+}\n+\n+macro_rules! impl_is_minus_one {\n+    ($($t:ident)*) => ($(impl IsMinusOne for $t {\n+        fn is_minus_one(&self) -> bool {\n+            *self == -1\n+        }\n+    })*)\n+}\n+\n+impl_is_minus_one! { i8 i16 i32 i64 isize }\n+\n+fn cvt<T: IsMinusOne>(t: T) -> io::Result<T> {\n+    if t.is_minus_one() {\n+        Err(io::Error::last_os_error())\n+    } else {\n+        Ok(t)\n+    }\n+}"}]}