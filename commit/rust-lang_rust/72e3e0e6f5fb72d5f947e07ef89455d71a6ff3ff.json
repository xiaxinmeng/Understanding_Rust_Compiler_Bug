{"sha": "72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "node_id": "C_kwDOAAsO6NoAKDcyZTNlMGU2ZjVmYjcyZDVmOTQ3ZTA3ZWY4OTQ1NWQ3MWE2ZmYzZmY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-04-01T23:51:50Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-04-05T15:42:41Z"}, "message": "Move some tests with compare-mode=nll output to revisions", "tree": {"sha": "130f37db228e99a60c916954474810e15f879aee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/130f37db228e99a60c916954474810e15f879aee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "html_url": "https://github.com/rust-lang/rust/commit/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0677edc86e342f333d4828b0ee1ef395a4e70fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0677edc86e342f333d4828b0ee1ef395a4e70fe5", "html_url": "https://github.com/rust-lang/rust/commit/0677edc86e342f333d4828b0ee1ef395a4e70fe5"}], "stats": {"total": 225, "additions": 147, "deletions": 78}, "files": [{"sha": "0dcf06481427dda88b513a33a02acb568bde34d1", "filename": "src/test/ui/nll/issue-50716.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-50716.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-50716.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-50716.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,13 +1,13 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-50716.rs:14:9\n+  --> $DIR/issue-50716.rs:18:9\n    |\n LL |     let _x = *s;\n    |         ^^ lifetime mismatch\n    |\n    = note: expected type `<<&'a T as A>::X as Sized>`\n               found type `<<&'static T as A>::X as Sized>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/issue-50716.rs:9:8\n+  --> $DIR/issue-50716.rs:13:8\n    |\n LL | fn foo<'a, T: 'static>(s: Box<<&'a T as A>::X>)\n    |        ^^", "previous_filename": "src/test/ui/nll/issue-50716.stderr"}, {"sha": "a8f4d694ba7d1b882bb178ca29fca719773addfd", "filename": "src/test/ui/nll/issue-50716.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-50716.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-50716.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-50716.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-50716.rs:14:14\n+  --> $DIR/issue-50716.rs:18:14\n    |\n LL | fn foo<'a, T: 'static>(s: Box<<&'a T as A>::X>)\n    |        -- lifetime `'a` defined here"}, {"sha": "bd44d3eff9fc89cb14727630ca99d3abc92c082e", "filename": "src/test/ui/nll/issue-50716.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-50716.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-50716.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-50716.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -2,6 +2,10 @@\n // Regression test for the issue #50716: NLL ignores lifetimes bounds\n // derived from `Sized` requirements\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait A {\n     type X: ?Sized;\n }"}, {"sha": "259f378f70b5c825f03fe2e803122f3bee13509c", "filename": "src/test/ui/nll/issue-52742.base.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-52742.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-52742.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,16 +1,16 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/issue-52742.rs:12:18\n+  --> $DIR/issue-52742.rs:17:18\n    |\n LL |         self.y = b.z\n    |                  ^^^\n    |\n note: ...the reference is valid for the lifetime `'_` as defined here...\n-  --> $DIR/issue-52742.rs:10:10\n+  --> $DIR/issue-52742.rs:15:10\n    |\n LL | impl Foo<'_, '_> {\n    |          ^^\n note: ...but the borrowed content is only valid for the anonymous lifetime defined here\n-  --> $DIR/issue-52742.rs:11:31\n+  --> $DIR/issue-52742.rs:16:31\n    |\n LL |     fn take_bar(&mut self, b: Bar<'_>) {\n    |                               ^^^^^^^", "previous_filename": "src/test/ui/nll/issue-52742.stderr"}, {"sha": "6828418a78ec1afa0f719a2c7c1395d20d51c9e5", "filename": "src/test/ui/nll/issue-52742.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-52742.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-52742.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-52742.rs:12:9\n+  --> $DIR/issue-52742.rs:17:9\n    |\n LL |     fn take_bar(&mut self, b: Bar<'_>) {\n    |                 ---------         -- let's call this `'1`"}, {"sha": "5ec5770c5c206e46d35101c68628c367925f453e", "filename": "src/test/ui/nll/issue-52742.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,8 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n+\n struct Foo<'a, 'b> {\n     x: &'a u32,\n     y: &'b u32,"}, {"sha": "cc87954732c4e5466ce037eadcada77c93061795", "filename": "src/test/ui/nll/issue-55394.base.stderr", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55394.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55394.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,26 +1,26 @@\n error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'s` due to conflicting requirements\n-  --> $DIR/issue-55394.rs:9:9\n+  --> $DIR/issue-55394.rs:13:9\n    |\n LL |         Foo { bar }\n    |         ^^^\n    |\n note: first, the lifetime cannot outlive the anonymous lifetime defined here...\n-  --> $DIR/issue-55394.rs:8:17\n+  --> $DIR/issue-55394.rs:12:17\n    |\n LL |     fn new(bar: &mut Bar) -> Self {\n    |                 ^^^^^^^^\n note: ...so that reference does not outlive borrowed content\n-  --> $DIR/issue-55394.rs:9:15\n+  --> $DIR/issue-55394.rs:13:15\n    |\n LL |         Foo { bar }\n    |               ^^^\n note: but, the lifetime must be valid for the lifetime `'_` as defined here...\n-  --> $DIR/issue-55394.rs:7:10\n+  --> $DIR/issue-55394.rs:11:10\n    |\n LL | impl Foo<'_> {\n    |          ^^\n note: ...so that the types are compatible\n-  --> $DIR/issue-55394.rs:9:9\n+  --> $DIR/issue-55394.rs:13:9\n    |\n LL |         Foo { bar }\n    |         ^^^^^^^^^^^", "previous_filename": "src/test/ui/nll/issue-55394.stderr"}, {"sha": "c166c458c5013bd105fa2a6a5338368b9aaca35b", "filename": "src/test/ui/nll/issue-55394.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55394.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55394.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-55394.rs:9:9\n+  --> $DIR/issue-55394.rs:13:9\n    |\n LL |     fn new(bar: &mut Bar) -> Self {\n    |                 -            ---- return type is Foo<'2>"}, {"sha": "9c4fcdf6419090876866d64b007e3e4381fff0c4", "filename": "src/test/ui/nll/issue-55394.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n struct Bar;\n \n struct Foo<'s> {"}, {"sha": "d4e9f2b4154ef3614a4efb6974eaa2f499a24bad", "filename": "src/test/ui/nll/issue-55401.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55401.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55401.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55401.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,12 +1,12 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/issue-55401.rs:3:5\n+  --> $DIR/issue-55401.rs:7:5\n    |\n LL |     *y\n    |     ^^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/issue-55401.rs:1:47\n+  --> $DIR/issue-55401.rs:5:47\n    |\n LL | fn static_to_a_to_static_through_ref_in_tuple<'a>(x: &'a u32) -> &'static u32 {\n    |                                               ^^", "previous_filename": "src/test/ui/nll/issue-55401.stderr"}, {"sha": "1318dc676571490adf5a46d20f2108552880dc18", "filename": "src/test/ui/nll/issue-55401.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55401.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55401.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55401.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/issue-55401.rs:3:5\n+  --> $DIR/issue-55401.rs:7:5\n    |\n LL | fn static_to_a_to_static_through_ref_in_tuple<'a>(x: &'a u32) -> &'static u32 {\n    |                                               -- lifetime `'a` defined here"}, {"sha": "10f38c53dfdc74226db740ffcaebc14949499517", "filename": "src/test/ui/nll/issue-55401.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fissue-55401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55401.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn static_to_a_to_static_through_ref_in_tuple<'a>(x: &'a u32) -> &'static u32 {\n     let (ref y, _z): (&'a u32, u32) = (&22, 44);\n     *y //~ ERROR"}, {"sha": "ea9f5d4b2b1aa15a20b619d6c6816f3dcb452d43", "filename": "src/test/ui/nll/lub-if.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-if.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-if.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Flub-if.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,25 +1,25 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/lub-if.rs:28:9\n+  --> $DIR/lub-if.rs:32:9\n    |\n LL |         s\n    |         ^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/lub-if.rs:23:17\n+  --> $DIR/lub-if.rs:27:17\n    |\n LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 ^^\n \n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/lub-if.rs:35:9\n+  --> $DIR/lub-if.rs:41:9\n    |\n LL |         s\n    |         ^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/lub-if.rs:32:17\n+  --> $DIR/lub-if.rs:38:17\n    |\n LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 ^^", "previous_filename": "src/test/ui/nll/lub-if.stderr"}, {"sha": "2fd6e69628d472c95e9df998d9d536880c0bef55", "filename": "src/test/ui/nll/lub-if.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-if.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-if.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Flub-if.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/lub-if.rs:28:9\n+  --> $DIR/lub-if.rs:32:9\n    |\n LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here\n@@ -8,7 +8,7 @@ LL |         s\n    |         ^ returning this value requires that `'a` must outlive `'static`\n \n error: lifetime may not live long enough\n-  --> $DIR/lub-if.rs:35:9\n+  --> $DIR/lub-if.rs:41:9\n    |\n LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here"}, {"sha": "18561d63935e785947433fec10dd09afe250df05", "filename": "src/test/ui/nll/lub-if.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Flub-if.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -2,6 +2,10 @@\n // of the various arms, particularly in the case where regions are\n // involved.\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n pub fn opt_str0<'a>(maybestr: &'a Option<String>) -> &'a str {\n     if maybestr.is_none() {\n         \"(none)\"\n@@ -25,14 +29,18 @@ pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n         \"(none)\"\n     } else {\n         let s: &'a str = maybestr.as_ref().unwrap();\n-        s  //~ ERROR E0312\n+        s\n+        //[base]~^ ERROR E0312\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     }\n }\n \n pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n     if maybestr.is_some() {\n         let s: &'a str = maybestr.as_ref().unwrap();\n-        s  //~ ERROR E0312\n+        s\n+        //[base]~^ ERROR E0312\n+        //[nll]~^^ ERROR lifetime may not live long enough\n     } else {\n         \"(none)\"\n     }"}, {"sha": "38952133160ed70ed77acedbea0a03930ecfbf75", "filename": "src/test/ui/nll/lub-match.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-match.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-match.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Flub-match.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,25 +1,25 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/lub-match.rs:30:13\n+  --> $DIR/lub-match.rs:34:13\n    |\n LL |             s\n    |             ^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/lub-match.rs:25:17\n+  --> $DIR/lub-match.rs:29:17\n    |\n LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 ^^\n \n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/lub-match.rs:39:13\n+  --> $DIR/lub-match.rs:45:13\n    |\n LL |             s\n    |             ^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/lub-match.rs:35:17\n+  --> $DIR/lub-match.rs:41:17\n    |\n LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 ^^", "previous_filename": "src/test/ui/nll/lub-match.stderr"}, {"sha": "c78d0cb641dc8508bcd83c0a156869aa21ce7f9c", "filename": "src/test/ui/nll/lub-match.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-match.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-match.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Flub-match.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/lub-match.rs:30:13\n+  --> $DIR/lub-match.rs:34:13\n    |\n LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here\n@@ -8,7 +8,7 @@ LL |             s\n    |             ^ returning this value requires that `'a` must outlive `'static`\n \n error: lifetime may not live long enough\n-  --> $DIR/lub-match.rs:39:13\n+  --> $DIR/lub-match.rs:45:13\n    |\n LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here"}, {"sha": "084d8b95f5893d73824f18fdb9a240dd4887a732", "filename": "src/test/ui/nll/lub-match.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Flub-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Flub-match.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -2,6 +2,10 @@\n // of the various arms, particularly in the case where regions are\n // involved.\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n pub fn opt_str0<'a>(maybestr: &'a Option<String>) -> &'a str {\n     match *maybestr {\n         Some(ref s) => {\n@@ -27,7 +31,9 @@ pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n         None => \"(none)\",\n         Some(ref s) => {\n             let s: &'a str = s;\n-            s //~ ERROR E0312\n+            s\n+            //[base]~^ ERROR E0312\n+            //[nll]~^^ ERROR lifetime may not live long enough\n         }\n     }\n }\n@@ -36,7 +42,9 @@ pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n     match *maybestr {\n         Some(ref s) => {\n             let s: &'a str = s;\n-            s //~ ERROR E0312\n+            s\n+            //[base]~^ ERROR E0312\n+            //[nll]~^^ ERROR lifetime may not live long enough\n         }\n         None => \"(none)\",\n     }"}, {"sha": "010535fec6dd440b0e8de512948a1e5bc28ea327", "filename": "src/test/ui/nll/type-alias-free-regions.base.stderr", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,59 +1,59 @@\n error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n-  --> $DIR/type-alias-free-regions.rs:17:9\n+  --> $DIR/type-alias-free-regions.rs:21:9\n    |\n LL |         C { f: b }\n    |         ^\n    |\n note: first, the lifetime cannot outlive the anonymous lifetime defined here...\n-  --> $DIR/type-alias-free-regions.rs:16:24\n+  --> $DIR/type-alias-free-regions.rs:20:24\n    |\n LL |     fn from_box(b: Box<B>) -> Self {\n    |                        ^\n note: ...so that the expression is assignable\n-  --> $DIR/type-alias-free-regions.rs:17:16\n+  --> $DIR/type-alias-free-regions.rs:21:16\n    |\n LL |         C { f: b }\n    |                ^\n    = note: expected `Box<Box<&isize>>`\n               found `Box<Box<&isize>>`\n note: but, the lifetime must be valid for the lifetime `'a` as defined here...\n-  --> $DIR/type-alias-free-regions.rs:15:6\n+  --> $DIR/type-alias-free-regions.rs:19:6\n    |\n LL | impl<'a> FromBox<'a> for C<'a> {\n    |      ^^\n note: ...so that the types are compatible\n-  --> $DIR/type-alias-free-regions.rs:17:9\n+  --> $DIR/type-alias-free-regions.rs:21:9\n    |\n LL |         C { f: b }\n    |         ^^^^^^^^^^\n    = note: expected `C<'a>`\n               found `C<'_>`\n \n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/type-alias-free-regions.rs:27:16\n+  --> $DIR/type-alias-free-regions.rs:31:16\n    |\n LL |         C { f: Box::new(b.0) }\n    |                ^^^^^^^^^^^^^\n    |\n note: first, the lifetime cannot outlive the anonymous lifetime defined here...\n-  --> $DIR/type-alias-free-regions.rs:26:23\n+  --> $DIR/type-alias-free-regions.rs:30:23\n    |\n LL |     fn from_tuple(b: (B,)) -> Self {\n    |                       ^\n note: ...so that the expression is assignable\n-  --> $DIR/type-alias-free-regions.rs:27:25\n+  --> $DIR/type-alias-free-regions.rs:31:25\n    |\n LL |         C { f: Box::new(b.0) }\n    |                         ^^^\n    = note: expected `Box<&isize>`\n               found `Box<&isize>`\n note: but, the lifetime must be valid for the lifetime `'a` as defined here...\n-  --> $DIR/type-alias-free-regions.rs:25:6\n+  --> $DIR/type-alias-free-regions.rs:29:6\n    |\n LL | impl<'a> FromTuple<'a> for C<'a> {\n    |      ^^\n note: ...so that the types are compatible\n-  --> $DIR/type-alias-free-regions.rs:27:9\n+  --> $DIR/type-alias-free-regions.rs:31:9\n    |\n LL |         C { f: Box::new(b.0) }\n    |         ^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/nll/type-alias-free-regions.stderr"}, {"sha": "6b746602d7ffd3b016fb851973a66db1a5d43fe2", "filename": "src/test/ui/nll/type-alias-free-regions.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/type-alias-free-regions.rs:17:9\n+  --> $DIR/type-alias-free-regions.rs:21:9\n    |\n LL | impl<'a> FromBox<'a> for C<'a> {\n    |      -- lifetime `'a` defined here\n@@ -9,7 +9,7 @@ LL |         C { f: b }\n    |         ^^^^^^^^^^ associated function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n-  --> $DIR/type-alias-free-regions.rs:27:9\n+  --> $DIR/type-alias-free-regions.rs:31:9\n    |\n LL | impl<'a> FromTuple<'a> for C<'a> {\n    |      -- lifetime `'a` defined here"}, {"sha": "59ef0344937704cb507d59b46e45f675d88d6ee6", "filename": "src/test/ui/nll/type-alias-free-regions.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,6 +1,10 @@\n // Test that we don't assume that type aliases have the same type parameters\n // as the type they alias and then panic when we see this.\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n type A<'a> = &'a isize;\n type B<'a> = Box<A<'a>>;\n "}, {"sha": "ba17994b437661494e39725b131adeba52fde2d5", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error[E0759]: `fn` parameter has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/constant-in-expr-inherent-1.rs:8:5\n+  --> $DIR/constant-in-expr-inherent-1.rs:12:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |               ------- this data with lifetime `'a`...", "previous_filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.stderr"}, {"sha": "0399d5f893d85ef0779a8a794188b6d8c76fa85c", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/constant-in-expr-inherent-1.rs:8:5\n+  --> $DIR/constant-in-expr-inherent-1.rs:12:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "0bd316aa84cfe19296dfd30a433b2be873ebabc8", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n struct Foo<'a> { x: &'a u32 }\n \n impl<'a> Foo<'a> {"}, {"sha": "61efa879fc04be5e08f42868f22ba1db93daebb4", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-normalize.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,12 +1,12 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/constant-in-expr-normalize.rs:18:5\n+  --> $DIR/constant-in-expr-normalize.rs:22:5\n    |\n LL |     <() as Foo<'a>>::C\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/constant-in-expr-normalize.rs:17:8\n+  --> $DIR/constant-in-expr-normalize.rs:21:8\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        ^^", "previous_filename": "src/test/ui/nll/user-annotations/constant-in-expr-normalize.stderr"}, {"sha": "4c1e6bee2aa0d5143fa2716100381f1618301518", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-normalize.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/constant-in-expr-normalize.rs:18:5\n+  --> $DIR/constant-in-expr-normalize.rs:22:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "262f0ae318f8effba3583137d121a3ec56d4e1dd", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-normalize.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait Mirror {\n     type Me;\n }"}, {"sha": "93f7156e55757aed90ce82c947c7897711a6ae7a", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-1.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,12 +1,12 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/constant-in-expr-trait-item-1.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-1.rs:14:5\n    |\n LL |     <() as Foo<'a>>::C\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/constant-in-expr-trait-item-1.rs:9:8\n+  --> $DIR/constant-in-expr-trait-item-1.rs:13:8\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        ^^", "previous_filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-1.stderr"}, {"sha": "990d0ae385fc10804b73384bf0b4915c6b3cf384", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/constant-in-expr-trait-item-1.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-1.rs:14:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "512edb501c4ea12a9aab2e5be57cf514d2010586", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait Foo<'a> {\n     const C: &'a u32;\n }"}, {"sha": "f43ade38937d342d165cb5445814d48cb271f74c", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-2.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,12 +1,12 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/constant-in-expr-trait-item-2.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-2.rs:14:5\n    |\n LL |     <T as Foo<'a>>::C\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: ...the reference is valid for the static lifetime...\n note: ...but the borrowed content is only valid for the lifetime `'a` as defined here\n-  --> $DIR/constant-in-expr-trait-item-2.rs:9:8\n+  --> $DIR/constant-in-expr-trait-item-2.rs:13:8\n    |\n LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {\n    |        ^^", "previous_filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-2.stderr"}, {"sha": "8c0430f1e092cb2bf193b74fc185f37419ebc2a0", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/constant-in-expr-trait-item-2.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-2.rs:14:5\n    |\n LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "b3dfbd984ebbf3f035772bb2f339a5847ad1cd88", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-2.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait Foo<'a> {\n     const C: &'a u32;\n }"}, {"sha": "e9393aa05ab39c5bea59da8ee68eb4dfa7d14422", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-3.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,24 +1,24 @@\n error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n-  --> $DIR/constant-in-expr-trait-item-3.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-3.rs:14:5\n    |\n LL |     T::C\n    |     ^^^^\n    |\n note: first, the lifetime cannot outlive the lifetime `'a` as defined here...\n-  --> $DIR/constant-in-expr-trait-item-3.rs:9:8\n+  --> $DIR/constant-in-expr-trait-item-3.rs:13:8\n    |\n LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {\n    |        ^^\n note: ...so that the types are compatible\n-  --> $DIR/constant-in-expr-trait-item-3.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-3.rs:14:5\n    |\n LL |     T::C\n    |     ^^^^\n    = note: expected `Foo<'_>`\n               found `Foo<'a>`\n    = note: but, the lifetime must be valid for the static lifetime...\n note: ...so that reference does not outlive borrowed content\n-  --> $DIR/constant-in-expr-trait-item-3.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-3.rs:14:5\n    |\n LL |     T::C\n    |     ^^^^", "previous_filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-3.stderr"}, {"sha": "cbcaf042f053904078269375831738eb2e8b2873", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-3.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/constant-in-expr-trait-item-3.rs:10:5\n+  --> $DIR/constant-in-expr-trait-item-3.rs:14:5\n    |\n LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "6e78d94c2f63ac8c942008d36146f29a92a5b0c2", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-3.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n trait Foo<'a> {\n     const C: &'a u32;\n }"}, {"sha": "6d389a1317a9fa2f4efa45870520388a9cc4b80d", "filename": "src/test/ui/rfc1623.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Frfc1623.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Frfc1623.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1623.base.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/rfc1623.rs:28:8\n+  --> $DIR/rfc1623.rs:36:8\n    |\n LL |     f: &id,\n    |        ^^^ implementation of `FnOnce` is not general enough", "previous_filename": "src/test/ui/rfc1623.stderr"}, {"sha": "f85b6ff8ff75b2a0431d8e43e50ce0fe97a4bb55", "filename": "src/test/ui/rfc1623.nll.stderr", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Frfc1623.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Frfc1623.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1623.nll.stderr?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,11 +1,12 @@\n error[E0308]: mismatched types\n-  --> $DIR/rfc1623.rs:25:35\n+  --> $DIR/rfc1623.rs:29:35\n    |\n LL |   static SOME_STRUCT: &SomeStruct = &SomeStruct {\n    |  ___________________________________^\n-LL | |     foo: &Foo { bools: &[false, true] },\n-LL | |     bar: &Bar { bools: &[true, true] },\n-LL | |     f: &id,\n+LL | |\n+LL | |\n+LL | |\n+...  |\n LL | |\n LL | | };\n    | |_^ one type is more general than the other\n@@ -14,13 +15,14 @@ LL | | };\n               found type `Fn<(&Foo<'_>,)>`\n \n error[E0308]: mismatched types\n-  --> $DIR/rfc1623.rs:25:35\n+  --> $DIR/rfc1623.rs:29:35\n    |\n LL |   static SOME_STRUCT: &SomeStruct = &SomeStruct {\n    |  ___________________________________^\n-LL | |     foo: &Foo { bools: &[false, true] },\n-LL | |     bar: &Bar { bools: &[true, true] },\n-LL | |     f: &id,\n+LL | |\n+LL | |\n+LL | |\n+...  |\n LL | |\n LL | | };\n    | |_^ one type is more general than the other\n@@ -29,13 +31,14 @@ LL | | };\n               found type `Fn<(&Foo<'_>,)>`\n \n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/rfc1623.rs:25:35\n+  --> $DIR/rfc1623.rs:29:35\n    |\n LL |   static SOME_STRUCT: &SomeStruct = &SomeStruct {\n    |  ___________________________________^\n-LL | |     foo: &Foo { bools: &[false, true] },\n-LL | |     bar: &Bar { bools: &[true, true] },\n-LL | |     f: &id,\n+LL | |\n+LL | |\n+LL | |\n+...  |\n LL | |\n LL | | };\n    | |_^ implementation of `FnOnce` is not general enough\n@@ -44,13 +47,14 @@ LL | | };\n    = note: ...but it actually implements `FnOnce<(&'2 Foo<'_>,)>`, for some specific lifetime `'2`\n \n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/rfc1623.rs:25:35\n+  --> $DIR/rfc1623.rs:29:35\n    |\n LL |   static SOME_STRUCT: &SomeStruct = &SomeStruct {\n    |  ___________________________________^\n-LL | |     foo: &Foo { bools: &[false, true] },\n-LL | |     bar: &Bar { bools: &[true, true] },\n-LL | |     f: &id,\n+LL | |\n+LL | |\n+LL | |\n+...  |\n LL | |\n LL | | };\n    | |_^ implementation of `FnOnce` is not general enough"}, {"sha": "0e9d2140324256dbdcccab92e0fb3c9837ba5335", "filename": "src/test/ui/rfc1623.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Frfc1623.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff/src%2Ftest%2Fui%2Frfc1623.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1623.rs?ref=72e3e0e6f5fb72d5f947e07ef89455d71a6ff3ff", "patch": "@@ -1,3 +1,7 @@\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n #![allow(dead_code)]\n \n fn non_elidable<'a, 'b>(a: &'a u8, b: &'b u8) -> &'a u8 {\n@@ -23,10 +27,14 @@ fn id<T>(t: T) -> T {\n }\n \n static SOME_STRUCT: &SomeStruct = &SomeStruct {\n+    //[nll]~^ ERROR mismatched types\n+    //[nll]~| ERROR mismatched types\n+    //[nll]~| ERROR implementation of `FnOnce` is not general enough\n+    //[nll]~| ERROR implementation of `FnOnce` is not general enough\n     foo: &Foo { bools: &[false, true] },\n     bar: &Bar { bools: &[true, true] },\n     f: &id,\n-    //~^ ERROR implementation of `FnOnce` is not general enough\n+    //[base]~^ ERROR implementation of `FnOnce` is not general enough\n };\n \n // very simple test for a 'static static with default lifetime"}]}