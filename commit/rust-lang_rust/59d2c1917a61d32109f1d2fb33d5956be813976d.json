{"sha": "59d2c1917a61d32109f1d2fb33d5956be813976d", "node_id": "C_kwDOAAsO6NoAKDU5ZDJjMTkxN2E2MWQzMjEwOWYxZDJmYjMzZDU5NTZiZTgxMzk3NmQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-31T12:29:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-31T12:29:53Z"}, "message": "Rollup merge of #100831 - JhonnyBillM:migrate-symbol-mangling-to-diagnostics-structs, r=davidtwco\n\nMigrate `symbol_mangling` module to new diagnostics structs", "tree": {"sha": "0381df8a5e3aa660c01e9469ad7f550bcac9f3ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0381df8a5e3aa660c01e9469ad7f550bcac9f3ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59d2c1917a61d32109f1d2fb33d5956be813976d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjD1RBCRBK7hj4Ov3rIwAA3dkIABuBByzgT3XTcUqk+YinNRAZ\nKA4ePVEfKJqg21Gj0xw4T0hUyV8UVEjh6X99K4zLnSjUoN+Ofu5NTUJxySqJhUzF\n5I4kI4G6e+bkHwWt+DOHuBaD7GXrZUK4/KCCMtfnfWT5829JdNH2vZGExAVXYLRi\nNE3O4rX/Y4FP/9wDIlWH6yh/L3Or+RkvK0ZXg3GrqnJNDln4NkxJVu6TxB6zk6/p\n6lQt2QCPM33F2WDn2zZL0QqHF/VFB34bOsygWMZqxaLi9RSrfhYiyUxSAK1d5dcw\n6UkKi/ZuKudD1eNLAm3y9HbFhI5a+/9nPShpX28rRpZ5P8ByuvQqqSWzuGmmdho=\n=SjiE\n-----END PGP SIGNATURE-----\n", "payload": "tree 0381df8a5e3aa660c01e9469ad7f550bcac9f3ee\nparent 24922b7a828361399aeed73a802e786f035a6d4f\nparent 3ee69463164ac33af6eb483ccd2f64b06730c220\nauthor Ralf Jung <post@ralfj.de> 1661948993 +0200\ncommitter GitHub <noreply@github.com> 1661948993 +0200\n\nRollup merge of #100831 - JhonnyBillM:migrate-symbol-mangling-to-diagnostics-structs, r=davidtwco\n\nMigrate `symbol_mangling` module to new diagnostics structs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59d2c1917a61d32109f1d2fb33d5956be813976d", "html_url": "https://github.com/rust-lang/rust/commit/59d2c1917a61d32109f1d2fb33d5956be813976d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59d2c1917a61d32109f1d2fb33d5956be813976d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24922b7a828361399aeed73a802e786f035a6d4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/24922b7a828361399aeed73a802e786f035a6d4f", "html_url": "https://github.com/rust-lang/rust/commit/24922b7a828361399aeed73a802e786f035a6d4f"}, {"sha": "3ee69463164ac33af6eb483ccd2f64b06730c220", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee69463164ac33af6eb483ccd2f64b06730c220", "html_url": "https://github.com/rust-lang/rust/commit/3ee69463164ac33af6eb483ccd2f64b06730c220"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "002d73be7d1de67d1a7718ed60a75c00eb5984fe", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -4156,7 +4156,9 @@ dependencies = [\n  \"punycode\",\n  \"rustc-demangle\",\n  \"rustc_data_structures\",\n+ \"rustc_errors\",\n  \"rustc_hir\",\n+ \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\","}, {"sha": "55d6fbbf86f33029d86bae9e7cdf6f3f968922eb", "filename": "compiler/rustc_error_messages/locales/en-US/symbol_mangling.ftl", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -0,0 +1,7 @@\n+symbol_mangling_invalid_symbol_name = symbol-name({$mangled_formatted})\n+\n+symbol_mangling_invalid_trait_item = demangling({$demangling_formatted})\n+\n+symbol_mangling_alt_invalid_trait_item = demangling-alt({$alt_demangling_formatted})\n+\n+symbol_mangling_invalid_def_path = def-path({$def_path})"}, {"sha": "42fb2d538b04d2027cbb3b841cbf3fcd334b83f6", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -54,6 +54,7 @@ fluent_messages! {\n     ty_utils => \"../locales/en-US/ty_utils.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n     mir_dataflow => \"../locales/en-US/mir_dataflow.ftl\",\n+    symbol_mangling => \"../locales/en-US/symbol_mangling.ftl\",\n }\n \n pub use fluent_generated::{self as fluent, DEFAULT_LOCALE_RESOURCES};"}, {"sha": "3db05225722e71aad54fad9c2e6d53d288992353", "filename": "compiler/rustc_symbol_mangling/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2FCargo.toml?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -18,3 +18,5 @@ rustc_hir = { path = \"../rustc_hir\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_session = { path = \"../rustc_session\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n+rustc_errors = { path = \"../rustc_errors\" }"}, {"sha": "242997365a892d693af193d91d18989b9df9350f", "filename": "compiler/rustc_symbol_mangling/src/errors.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -0,0 +1,36 @@\n+//! Errors emitted by symbol_mangling.\n+\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(symbol_mangling::invalid_symbol_name)]\n+pub struct InvalidSymbolName {\n+    #[primary_span]\n+    pub span: Span,\n+    pub mangled_formatted: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(symbol_mangling::invalid_trait_item)]\n+pub struct InvalidTraitItem {\n+    #[primary_span]\n+    pub span: Span,\n+    pub demangling_formatted: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(symbol_mangling::alt_invalid_trait_item)]\n+pub struct AltInvalidTraitItem {\n+    #[primary_span]\n+    pub span: Span,\n+    pub alt_demangling_formatted: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(symbol_mangling::invalid_def_path)]\n+pub struct InvalidDefPath {\n+    #[primary_span]\n+    pub span: Span,\n+    pub def_path: String,\n+}"}, {"sha": "0c6489acb34835085ceb32cd02f2223c5d05f8cf", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -91,6 +91,8 @@\n #![feature(never_type)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_middle;\n@@ -110,6 +112,7 @@ use tracing::debug;\n mod legacy;\n mod v0;\n \n+pub mod errors;\n pub mod test;\n pub mod typeid;\n "}, {"sha": "b1c4cab11eb8e184772f74b8535e329072254381", "filename": "compiler/rustc_symbol_mangling/src/test.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59d2c1917a61d32109f1d2fb33d5956be813976d/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs?ref=59d2c1917a61d32109f1d2fb33d5956be813976d", "patch": "@@ -4,6 +4,7 @@\n //! def-path. This is used for unit testing the code that generates\n //! paths etc in all kinds of annoying scenarios.\n \n+use crate::errors::{AltInvalidTraitItem, InvalidDefPath, InvalidSymbolName, InvalidTraitItem};\n use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{subst::InternalSubsts, Instance, TyCtxt};\n@@ -59,16 +60,27 @@ impl SymbolNamesTest<'_> {\n                 tcx.erase_regions(InternalSubsts::identity_for_item(tcx, def_id)),\n             );\n             let mangled = tcx.symbol_name(instance);\n-            tcx.sess.span_err(attr.span, &format!(\"symbol-name({})\", mangled));\n+            tcx.sess.emit_err(InvalidSymbolName {\n+                span: attr.span,\n+                mangled_formatted: format!(\"{mangled}\"),\n+            });\n             if let Ok(demangling) = rustc_demangle::try_demangle(mangled.name) {\n-                tcx.sess.span_err(attr.span, &format!(\"demangling({})\", demangling));\n-                tcx.sess.span_err(attr.span, &format!(\"demangling-alt({:#})\", demangling));\n+                tcx.sess.emit_err(InvalidTraitItem {\n+                    span: attr.span,\n+                    demangling_formatted: format!(\"{demangling}\"),\n+                });\n+                tcx.sess.emit_err(AltInvalidTraitItem {\n+                    span: attr.span,\n+                    alt_demangling_formatted: format!(\"{:#}\", demangling),\n+                });\n             }\n         }\n \n         for attr in tcx.get_attrs(def_id.to_def_id(), DEF_PATH) {\n-            let path = with_no_trimmed_paths!(tcx.def_path_str(def_id.to_def_id()));\n-            tcx.sess.span_err(attr.span, &format!(\"def-path({})\", path));\n+            tcx.sess.emit_err(InvalidDefPath {\n+                span: attr.span,\n+                def_path: with_no_trimmed_paths!(tcx.def_path_str(def_id.to_def_id())),\n+            });\n         }\n     }\n }"}]}