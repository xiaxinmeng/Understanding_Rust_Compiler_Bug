{"sha": "4946e0ea5ee727893a74321be2fb3b291f320809", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5NDZlMGVhNWVlNzI3ODkzYTc0MzIxYmUyZmIzYjI5MWYzMjA4MDk=", "commit": {"author": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2013-09-09T16:31:40Z"}, "committer": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2013-09-09T16:31:40Z"}, "message": "Merge RandBigUint and RandBigInt into single trait", "tree": {"sha": "ce8dafaec59c62ad744ad9a931fa53fee4b1edf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8dafaec59c62ad744ad9a931fa53fee4b1edf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4946e0ea5ee727893a74321be2fb3b291f320809", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4946e0ea5ee727893a74321be2fb3b291f320809", "html_url": "https://github.com/rust-lang/rust/commit/4946e0ea5ee727893a74321be2fb3b291f320809", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4946e0ea5ee727893a74321be2fb3b291f320809/comments", "author": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54368afc03054937e7f5a3b7a9b8cf9c8e85d962", "url": "https://api.github.com/repos/rust-lang/rust/commits/54368afc03054937e7f5a3b7a9b8cf9c8e85d962", "html_url": "https://github.com/rust-lang/rust/commit/54368afc03054937e7f5a3b7a9b8cf9c8e85d962"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "93ffbb1c45cf625ac54682025adc768376a12d98", "filename": "src/libextra/num/bigint.rs", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4946e0ea5ee727893a74321be2fb3b291f320809/src%2Flibextra%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4946e0ea5ee727893a74321be2fb3b291f320809/src%2Flibextra%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fbigint.rs?ref=4946e0ea5ee727893a74321be2fb3b291f320809", "patch": "@@ -521,27 +521,6 @@ impl FromStrRadix for BigUint {\n     }\n }\n \n-trait RandBigUInt {\n-    /// Generate a random BigUint of the given bit size.\n-    fn gen_biguint(&mut self, bit_size: uint) -> BigUint;\n-}\n-\n-impl<R: Rng> RandBigUInt for R {\n-    /// Generate a random BigUint of the given bit size.\n-    fn gen_biguint(&mut self, bit_size: uint) -> BigUint {\n-        let (digits, rem) = bit_size.div_rem(&BigDigit::bits);\n-        let mut data = vec::with_capacity(digits+1);\n-        for _ in range(0, digits) {\n-            data.push(self.gen());\n-        }\n-        if rem > 0 {\n-            let final_digit: BigDigit = self.gen();\n-            data.push(final_digit >> (BigDigit::bits - rem));\n-        }\n-        return BigUint::new(data);\n-    }\n-}\n-\n impl BigUint {\n     /// Creates and initializes an BigUint.\n     #[inline]\n@@ -1074,12 +1053,29 @@ impl FromStrRadix for BigInt {\n }\n \n trait RandBigInt {\n+    /// Generate a random BigUint of the given bit size.\n+    fn gen_biguint(&mut self, bit_size: uint) -> BigUint;\n+\n     /// Generate a random BigInt of the given bit size.\n     fn gen_bigint(&mut self, bit_size: uint) -> BigInt;\n }\n \n impl<R: Rng> RandBigInt for R {\n     /// Generate a random BigUint of the given bit size.\n+    fn gen_biguint(&mut self, bit_size: uint) -> BigUint {\n+        let (digits, rem) = bit_size.div_rem(&BigDigit::bits);\n+        let mut data = vec::with_capacity(digits+1);\n+        for _ in range(0, digits) {\n+            data.push(self.gen());\n+        }\n+        if rem > 0 {\n+            let final_digit: BigDigit = self.gen();\n+            data.push(final_digit >> (BigDigit::bits - rem));\n+        }\n+        return BigUint::new(data);\n+    }\n+\n+    /// Generate a random BigInt of the given bit size.\n     fn gen_bigint(&mut self, bit_size: uint) -> BigInt {\n         // Generate a random BigUint...\n         let biguint = self.gen_biguint(bit_size);"}]}