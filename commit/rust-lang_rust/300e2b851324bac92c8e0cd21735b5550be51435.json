{"sha": "300e2b851324bac92c8e0cd21735b5550be51435", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMGUyYjg1MTMyNGJhYzkyYzhlMGNkMjE3MzViNTU1MGJlNTE0MzU=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-08-01T01:14:49Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-08-01T18:08:47Z"}, "message": "Start adding infrastructure for checking trait method bodies.", "tree": {"sha": "f871be65c814f114677d60c9e14cf8c92c4cfda5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f871be65c814f114677d60c9e14cf8c92c4cfda5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/300e2b851324bac92c8e0cd21735b5550be51435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/300e2b851324bac92c8e0cd21735b5550be51435", "html_url": "https://github.com/rust-lang/rust/commit/300e2b851324bac92c8e0cd21735b5550be51435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/300e2b851324bac92c8e0cd21735b5550be51435/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d747cd724ed3cf19d3daf8a46f7726db888da844", "url": "https://api.github.com/repos/rust-lang/rust/commits/d747cd724ed3cf19d3daf8a46f7726db888da844", "html_url": "https://github.com/rust-lang/rust/commit/d747cd724ed3cf19d3daf8a46f7726db888da844"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "440ec24092ec7251bfb28bcf402e9e31d1a3c792", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/300e2b851324bac92c8e0cd21735b5550be51435/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300e2b851324bac92c8e0cd21735b5550be51435/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=300e2b851324bac92c8e0cd21735b5550be51435", "patch": "@@ -419,6 +419,21 @@ fn check_item(ccx: @crate_ctxt, it: @ast::item) {\n                          node_id: it.id };\n         for ms.each |m| { check_method(ccx, m, self_info);}\n       }\n+      ast::item_trait(_, trait_methods) {\n+        for trait_methods.each |trait_method| {\n+            alt trait_method {\n+              required(ty_m) {\n+                // Nothing to do, since required methods don't have\n+                // bodies to check.\n+              }\n+              provided(m) {\n+                let self_info = {self_ty: ty::mk_self(ccx.tcx),\n+                                 node_id: it.id};\n+                check_method(ccx, m, self_info);\n+              }\n+            }\n+        }\n+      }\n       ast::item_class(tps, traits, members, m_ctor, m_dtor) {\n         let tcx = ccx.tcx;\n         let class_t = {self_ty: ty::node_id_to_type(tcx, it.id),"}]}