{"sha": "7d527fa96b92bca102fdc77d3b07f804c384138b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNTI3ZmE5NmI5MmJjYTEwMmZkYzc3ZDNiMDdmODA0YzM4NDEzOGI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-02-05T16:58:30Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-02-05T17:09:12Z"}, "message": "Implement pretty-printing of `..` and update tests.\n\nUpdate tests to change all `&expr[]` to `&expr[..]` to make sure pretty printing\npasses.", "tree": {"sha": "219556c17ddd1f9a41dd7cc668392bb0d8b144c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/219556c17ddd1f9a41dd7cc668392bb0d8b144c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d527fa96b92bca102fdc77d3b07f804c384138b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d527fa96b92bca102fdc77d3b07f804c384138b", "html_url": "https://github.com/rust-lang/rust/commit/7d527fa96b92bca102fdc77d3b07f804c384138b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d527fa96b92bca102fdc77d3b07f804c384138b/comments", "author": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "committer": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75239142a8271895775d69ef50037b0162cdcd6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/75239142a8271895775d69ef50037b0162cdcd6e", "html_url": "https://github.com/rust-lang/rust/commit/75239142a8271895775d69ef50037b0162cdcd6e"}], "stats": {"total": 51, "additions": 23, "deletions": 28}, "files": [{"sha": "ee871c9d59b43129ca40095ba53b76109172a767", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -1813,9 +1813,7 @@ impl<'a> State<'a> {\n                 if let &Some(ref e) = start {\n                     try!(self.print_expr(&**e));\n                 }\n-                if start.is_some() || end.is_some() {\n-                    try!(word(&mut self.s, \"..\"));\n-                }\n+                try!(word(&mut self.s, \"..\"));\n                 if let &Some(ref e) = end {\n                     try!(self.print_expr(&**e));\n                 }"}, {"sha": "65713053160d250992d853d202ba4e6bdaccfde2", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -180,7 +180,7 @@ impl<'a, W: Writer> RandomFasta<'a, W> {\n \n     fn nextc(&mut self) -> u8 {\n         let r = self.rng(1.0);\n-        for a in &self.lookup[] {\n+        for a in &self.lookup[..] {\n             if a.p >= r {\n                 return a.c;\n             }"}, {"sha": "82425d2c22708760bc5d67ecc4683615de8b1836", "filename": "src/test/compile-fail/packed-struct-generic-transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -32,6 +32,6 @@ fn main() {\n     let foo = Foo { bar: [1u8, 2, 3, 4, 5], baz: 10i32 };\n     unsafe {\n         let oof: Oof<[u8; 5], i32> = mem::transmute(foo);\n-        println!(\"{:?} {:?}\", &oof.rab[], oof.zab);\n+        println!(\"{:?} {:?}\", &oof.rab[..], oof.zab);\n     }\n }"}, {"sha": "1fcbae833dc7f00342660e55494a2c375917d521", "filename": "src/test/run-pass/auto-encode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-encode.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -35,7 +35,7 @@ fn test_rbml<'a, 'b, A:\n     let mut rbml_w = EBwriter::Encoder::new(&mut wr);\n     a1.encode(&mut rbml_w);\n \n-    let d: serialize::rbml::Doc<'a> = EBDoc::new(&wr[]);\n+    let d: serialize::rbml::Doc<'a> = EBDoc::new(&wr);\n     let mut decoder: EBReader::Decoder<'a> = EBreader::Decoder::new(d);\n     let a2: A = Decodable::decode(&mut decoder);\n     assert!(*a1 == a2);"}, {"sha": "ec8d58616dc0fc66c902c48226b32a1d0fdaeb59", "filename": "src/test/run-pass/coerce-overloaded-autoderef.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fcoerce-overloaded-autoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fcoerce-overloaded-autoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-overloaded-autoderef.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -47,19 +47,19 @@ fn use_slice(_: &[u8]) {}\n fn use_slice_mut(_: &mut [u8]) {}\n \n fn use_vec(mut v: Vec<u8>) {\n-    use_slice_mut(&mut v[]); // what you have to write today\n-    use_slice_mut(&mut v);   // what you'd be able to write\n+    use_slice_mut(&mut v[..]); // what you have to write today\n+    use_slice_mut(&mut v);     // what you'd be able to write\n     use_slice_mut(&mut &mut &mut v);\n \n-    use_slice(&v[]);    // what you have to write today\n+    use_slice(&v[..]);  // what you have to write today\n     use_slice(&v);      // what you'd be able to write\n     use_slice(&&&&&&v);\n     use_slice(&mut &&&&&v);\n     use_slice(&&&mut &&&v);\n }\n \n fn use_vec_ref(v: &Vec<u8>) {\n-    use_slice(&v[]);    // what you have to write today\n+    use_slice(&v[..]);  // what you have to write today\n     use_slice(v);       // what you'd be able to write\n     use_slice(&&&&&&v);\n     use_slice(&mut &&&&&v);"}, {"sha": "ea43163775ce908172c827ff386abd5dc89a9847", "filename": "src/test/run-pass/deriving-encodable-decodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -59,7 +59,7 @@ fn roundtrip<'a, T: Rand + Eq + Encodable<Encoder<'a>> +\n     let mut w = Vec::new();\n     let mut e = Encoder::new(&mut w);\n     obj.encode(&mut e);\n-    let doc = rbml::Doc::new(&w[]);\n+    let doc = rbml::Doc::new(&w);\n     let mut dec = Decoder::new(doc);\n     let obj2 = Decodable::decode(&mut dec);\n     assert!(obj == obj2);"}, {"sha": "25d625e27f6ddd40578fad4ef9424085a830778b", "filename": "src/test/run-pass/foreach-external-iterators-break.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fforeach-external-iterators-break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fforeach-external-iterators-break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeach-external-iterators-break.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -11,7 +11,7 @@\n pub fn main() {\n     let x = [1; 100];\n     let mut y = 0;\n-    for i in &x[] {\n+    for i in &x[..] {\n         if y > 10 {\n             break;\n         }"}, {"sha": "3817e1b0edace950ce3f320474ef3881e92cf4d5", "filename": "src/test/run-pass/foreach-external-iterators-nested.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fforeach-external-iterators-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fforeach-external-iterators-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeach-external-iterators-nested.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -13,8 +13,8 @@ pub fn main() {\n     let y = [2; 100];\n     let mut p = 0;\n     let mut q = 0;\n-    for i in &x[] {\n-        for j in &y[] {\n+    for i in &x[..] {\n+        for j in &y[..] {\n             p += *j;\n         }\n         q += *i + p;"}, {"sha": "8403a1669ffcf5fecd6e2fe8f688fab6f1ec4fe0", "filename": "src/test/run-pass/foreach-external-iterators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fforeach-external-iterators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fforeach-external-iterators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeach-external-iterators.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -11,7 +11,7 @@\n pub fn main() {\n     let x = [1; 100];\n     let mut y = 0;\n-    for i in &x[] {\n+    for i in &x[..] {\n         y += *i\n     }\n     assert!(y == 100);"}, {"sha": "b1c443dd0c51b5713a2721c538bf0d84b18bbc5d", "filename": "src/test/run-pass/issue-8898.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8898.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -18,9 +18,9 @@ pub fn main() {\n     let x  = [(), ()];\n     let slice = &x[..1];\n \n-    assert_repr_eq(&abc[], \"[1, 2, 3]\".to_string());\n-    assert_repr_eq(&tf[], \"[true, false]\".to_string());\n-    assert_repr_eq(&x[], \"[(), ()]\".to_string());\n+    assert_repr_eq(&abc[..], \"[1, 2, 3]\".to_string());\n+    assert_repr_eq(&tf[..], \"[true, false]\".to_string());\n+    assert_repr_eq(&x[..], \"[(), ()]\".to_string());\n     assert_repr_eq(slice, \"[()]\".to_string());\n-    assert_repr_eq(&x[], \"[(), ()]\".to_string());\n+    assert_repr_eq(&x[..], \"[(), ()]\".to_string());\n }"}, {"sha": "6d72e9774dca839b0982cb7d751f9c4a80ba36af", "filename": "src/test/run-pass/repeated-vector-syntax.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -13,9 +13,9 @@ pub fn main() {\n     let y = [ 0; 1 ];\n \n     print!(\"[\");\n-    for xi in &x[] {\n-        print!(\"{:?}, \", &xi[]);\n+    for xi in &x[..] {\n+        print!(\"{:?}, \", &xi[..]);\n     }\n     println!(\"]\");\n-    println!(\"{:?}\", &y[]);\n+    println!(\"{:?}\", &y[..]);\n }"}, {"sha": "6e256be69dac74c1d463ebe30f493c2518e0c306", "filename": "src/test/run-pass/slice-2.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-2.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -13,7 +13,6 @@\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     let cmp: &[int] = &[1, 2, 3, 4, 5];\n-    assert!(&x[] == cmp);\n     assert!(&x[..] == cmp);\n     let cmp: &[int] = &[3, 4, 5];\n     assert!(&x[2..] == cmp);\n@@ -24,7 +23,7 @@ fn main() {\n \n     let x: Vec<int> = vec![1, 2, 3, 4, 5];\n     let cmp: &[int] = &[1, 2, 3, 4, 5];\n-    assert!(&x[] == cmp);\n+    assert!(&x[..] == cmp);\n     let cmp: &[int] = &[3, 4, 5];\n     assert!(&x[2..] == cmp);\n     let cmp: &[int] = &[1, 2, 3];\n@@ -35,7 +34,6 @@ fn main() {\n     let x: &mut [int] = &mut [1, 2, 3, 4, 5];\n     {\n         let cmp: &mut [int] = &mut [1, 2, 3, 4, 5];\n-        assert!(&mut x[] == cmp);\n         assert!(&mut x[..] == cmp);\n     }\n     {\n@@ -54,7 +52,6 @@ fn main() {\n     let mut x: Vec<int> = vec![1, 2, 3, 4, 5];\n     {\n         let cmp: &mut [int] = &mut [1, 2, 3, 4, 5];\n-        assert!(&mut x[] == cmp);\n         assert!(&mut x[..] == cmp);\n     }\n     {"}, {"sha": "59fb24ffc02cd405ded5acb56abf80f63c1348ae", "filename": "src/test/run-pass/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d527fa96b92bca102fdc77d3b07f804c384138b/src%2Ftest%2Frun-pass%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice.rs?ref=7d527fa96b92bca102fdc77d3b07f804c384138b", "patch": "@@ -80,11 +80,11 @@ impl IndexMut<RangeFull> for Foo {\n \n fn main() {\n     let mut x = Foo;\n-    &x[];\n+    &x[..];\n     &x[Foo..];\n     &x[..Foo];\n     &x[Foo..Foo];\n-    &mut x[];\n+    &mut x[..];\n     &mut x[Foo..];\n     &mut x[..Foo];\n     &mut x[Foo..Foo];"}]}