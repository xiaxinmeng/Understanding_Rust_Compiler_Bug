{"sha": "12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZDIxYmY5OWMxMzQxZDI3M2ZmY2YwY2JmNGJhOGM1ZDFkNDJhMTI=", "commit": {"author": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-12T14:47:35Z"}, "committer": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-12T14:55:26Z"}, "message": "References to `CString::from_vec` changed to `new`\n\nIt looks like `from_vec` was subsumed by new at some point,\nbut the documentation still refers to it as `from_vec`.\n\nThis updates the documentation for `from_vec_unchecked`\nso that it properly says that it's the unchecked version of `new`.\n\nAlso, from_vec_unchecked requires a actual Vec<u8> while\nnew can take anything that is Into<Vec<u8>>, so I also\nmention that in the documentation.", "tree": {"sha": "30b958f90ae39dcd3bea55bd239f0c733c07e0a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30b958f90ae39dcd3bea55bd239f0c733c07e0a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12", "html_url": "https://github.com/rust-lang/rust/commit/12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12/comments", "author": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5afa2704a6fdee62b267a5df9ca0934350dfc3d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5afa2704a6fdee62b267a5df9ca0934350dfc3d1", "html_url": "https://github.com/rust-lang/rust/commit/5afa2704a6fdee62b267a5df9ca0934350dfc3d1"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "6e291558e9b7612eadcbefaa1de94c5cc0b63c8a", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=12d21bf99c1341d273ffcf0cbf4ba8c5d1d42a12", "patch": "@@ -172,8 +172,9 @@ impl CString {\n     /// Create a C-compatible string from a byte vector without checking for\n     /// interior 0 bytes.\n     ///\n-    /// This method is equivalent to `from_vec` except that no runtime assertion\n-    /// is made that `v` contains no 0 bytes.\n+    /// This method is equivalent to `new` except that no runtime assertion\n+    /// is made that `v` contains no 0 bytes, and it requires an actual\n+    /// byte vector, not anyhting that can be converted to one with Into.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub unsafe fn from_vec_unchecked(mut v: Vec<u8>) -> CString {\n         v.push(0);\n@@ -215,7 +216,7 @@ impl fmt::Debug for CString {\n \n impl NulError {\n     /// Returns the position of the nul byte in the slice that was provided to\n-    /// `CString::from_vec`.\n+    /// `CString::new`.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn nul_position(&self) -> usize { self.0 }\n "}]}