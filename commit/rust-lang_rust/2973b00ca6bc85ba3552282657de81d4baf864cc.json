{"sha": "2973b00ca6bc85ba3552282657de81d4baf864cc", "node_id": "C_kwDOAAsO6NoAKDI5NzNiMDBjYTZiYzg1YmEzNTUyMjgyNjU3ZGU4MWQ0YmFmODY0Y2M", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-25T22:14:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-25T22:14:49Z"}, "message": "Rollup merge of #99673 - RalfJung:interpret-invalid-dyn, r=oli-obk\n\ndon't ICE on invalid dyn calls\n\nDue to https://github.com/rust-lang/rust/issues/50781 this is actually reachable.\nFixes https://github.com/rust-lang/miri/issues/2432\n\nr? ``@oli-obk``", "tree": {"sha": "0b9b3bfb623d03cefd8f28f7984a75f0c8196a43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b9b3bfb623d03cefd8f28f7984a75f0c8196a43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2973b00ca6bc85ba3552282657de81d4baf864cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi3xXZCRBK7hj4Ov3rIwAAhtgIAB0Mq+0jnvJNzZSybPkO1TUq\nKxueu6MvqbTf2zgC5cJxvMBI3XIuElkm6BFmxHB7eOpTbJMRAcQRjuMrO/EKWDzw\nqTRCayj6bEkvhshDqx8QKzdbKdsHr6hml18lIc+jSvfH4DNNjr+HZBRiii3QAGUb\nMn9kVsJqNwFFGBYB6xewupEm4K9UPXY/lOZpO5JeT5YMjvkNHe3fHnDmeNzVSLvL\nbVC6ESsVUVoU+3Qve6A8TRuVA0d1X5l0BtypV0ek2rykfKZPiHdQZP6+RfPhyyqz\nA6AYyNeqYU2UQg98eu4d02yvZDBZ/EckssuJKwnTzF3ZrD1yFdezUOa8Qn2FndY=\n=gWtW\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b9b3bfb623d03cefd8f28f7984a75f0c8196a43\nparent 74be487ca093e67bc840a83414a916d91b825081\nparent f80bf1013d52c50e308746a977ed6a7cdd28c6a5\nauthor Yuki Okushi <jtitor@2k36.org> 1658787289 +0900\ncommitter GitHub <noreply@github.com> 1658787289 +0900\n\nRollup merge of #99673 - RalfJung:interpret-invalid-dyn, r=oli-obk\n\ndon't ICE on invalid dyn calls\n\nDue to https://github.com/rust-lang/rust/issues/50781 this is actually reachable.\nFixes https://github.com/rust-lang/miri/issues/2432\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2973b00ca6bc85ba3552282657de81d4baf864cc", "html_url": "https://github.com/rust-lang/rust/commit/2973b00ca6bc85ba3552282657de81d4baf864cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2973b00ca6bc85ba3552282657de81d4baf864cc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74be487ca093e67bc840a83414a916d91b825081", "url": "https://api.github.com/repos/rust-lang/rust/commits/74be487ca093e67bc840a83414a916d91b825081", "html_url": "https://github.com/rust-lang/rust/commit/74be487ca093e67bc840a83414a916d91b825081"}, {"sha": "f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "html_url": "https://github.com/rust-lang/rust/commit/f80bf1013d52c50e308746a977ed6a7cdd28c6a5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d563e35f9102d1e059f89958c7c3891690323967", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2973b00ca6bc85ba3552282657de81d4baf864cc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2973b00ca6bc85ba3552282657de81d4baf864cc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=2973b00ca6bc85ba3552282657de81d4baf864cc", "patch": "@@ -571,8 +571,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n                 // Now determine the actual method to call. We can do that in two different ways and\n                 // compare them to ensure everything fits.\n-                let ty::VtblEntry::Method(fn_inst) = self.get_vtable_entries(vptr)?[idx] else {\n-                    span_bug!(self.cur_span(), \"dyn call index points at something that is not a method\")\n+                let Some(ty::VtblEntry::Method(fn_inst)) = self.get_vtable_entries(vptr)?.get(idx).copied() else {\n+                    throw_ub_format!(\"`dyn` call trying to call something that is not a method\")\n                 };\n                 if cfg!(debug_assertions) {\n                     let tcx = *self.tcx;"}]}