{"sha": "65d31d726940fe87f95f497323de7473da51f229", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZDMxZDcyNjk0MGZlODdmOTVmNDk3MzIzZGU3NDczZGE1MWYyMjk=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-06-25T18:42:27Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-06-25T18:42:27Z"}, "message": "Use fstatat64 where available", "tree": {"sha": "2db48ce79f98c9bc0c476b2088f096b99e21d346", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2db48ce79f98c9bc0c476b2088f096b99e21d346"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65d31d726940fe87f95f497323de7473da51f229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65d31d726940fe87f95f497323de7473da51f229", "html_url": "https://github.com/rust-lang/rust/commit/65d31d726940fe87f95f497323de7473da51f229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65d31d726940fe87f95f497323de7473da51f229/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8acec1f9d0b40dde142e6c26d7358b9ab232d2b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8acec1f9d0b40dde142e6c26d7358b9ab232d2b4", "html_url": "https://github.com/rust-lang/rust/commit/8acec1f9d0b40dde142e6c26d7358b9ab232d2b4"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "6949e22c58f0b86b36d2106c5c6c487d55543999", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/65d31d726940fe87f95f497323de7473da51f229/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d31d726940fe87f95f497323de7473da51f229/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=65d31d726940fe87f95f497323de7473da51f229", "patch": "@@ -25,10 +25,12 @@ use sys_common::{AsInner, FromInner};\n \n #[cfg(any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"l4re\"))]\n use libc::{stat64, fstat64, lstat64, off64_t, ftruncate64, lseek64, dirent64, readdir64_r, open64};\n+#[cfg(any(target_os = \"linux\", target_os = \"emscripten\"))]\n+use libc::fstatat64;\n #[cfg(any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"android\"))]\n-use libc::{fstatat, dirfd};\n+use libc::dirfd;\n #[cfg(target_os = \"android\")]\n-use libc::{stat as stat64, fstat as fstat64, lstat as lstat64, lseek64,\n+use libc::{stat as stat64, fstat as fstat64, fstatat as fstatat64, lstat as lstat64, lseek64,\n            dirent as dirent64, open as open64};\n #[cfg(not(any(target_os = \"linux\",\n               target_os = \"emscripten\",\n@@ -299,10 +301,7 @@ impl DirEntry {\n         let fd = cvt(unsafe {dirfd(self.dir.0.dirp.0)})?;\n         let mut stat: stat64 = unsafe { mem::zeroed() };\n         cvt(unsafe {\n-            fstatat(fd,\n-                    self.entry.d_name.as_ptr(),\n-                    &mut stat as *mut _ as *mut _,\n-                    libc::AT_SYMLINK_NOFOLLOW)\n+            fstatat64(fd, self.entry.d_name.as_ptr(), &mut stat, libc::AT_SYMLINK_NOFOLLOW)\n         })?;\n         Ok(FileAttr { stat: stat })\n     }"}]}