{"sha": "e06f6928cb840a018706cabf75ab2bf3807551b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNmY2OTI4Y2I4NDBhMDE4NzA2Y2FiZjc1YWIyYmYzODA3NTUxYjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-08T07:38:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-08T07:38:11Z"}, "message": "Auto merge of #31468 - pitdicker:fs_tests_cleanup, r=alexcrichton\n\nSee #29412", "tree": {"sha": "2ee110510e30d79e2f426e3786fb9e27f9c06e26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ee110510e30d79e2f426e3786fb9e27f9c06e26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e06f6928cb840a018706cabf75ab2bf3807551b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e06f6928cb840a018706cabf75ab2bf3807551b1", "html_url": "https://github.com/rust-lang/rust/commit/e06f6928cb840a018706cabf75ab2bf3807551b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e06f6928cb840a018706cabf75ab2bf3807551b1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fce5037a9040a3443f796c577b88d50ca5846a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fce5037a9040a3443f796c577b88d50ca5846a0", "html_url": "https://github.com/rust-lang/rust/commit/7fce5037a9040a3443f796c577b88d50ca5846a0"}, {"sha": "d1bfe9bccf8a1632ffb8d29ee97be137a0e71045", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1bfe9bccf8a1632ffb8d29ee97be137a0e71045", "html_url": "https://github.com/rust-lang/rust/commit/d1bfe9bccf8a1632ffb8d29ee97be137a0e71045"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "2087148d8447718b2f5d3516e84462f0d4d0d2d9", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e06f6928cb840a018706cabf75ab2bf3807551b1/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06f6928cb840a018706cabf75ab2bf3807551b1/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=e06f6928cb840a018706cabf75ab2bf3807551b1", "patch": "@@ -1940,12 +1940,46 @@ mod tests {\n         check!(fs::create_dir_all(&d2));\n         check!(check!(File::create(&canary)).write(b\"foo\"));\n         check!(symlink_junction(&d2, &dt.join(\"d2\")));\n+        let _ = symlink_file(&canary, &d1.join(\"canary\"));\n         check!(fs::remove_dir_all(&d1));\n \n         assert!(!d1.is_dir());\n         assert!(canary.exists());\n     }\n \n+    #[test]\n+    fn recursive_rmdir_of_symlink() {\n+        // test we do not recursively delete a symlink but only dirs.\n+        let tmpdir = tmpdir();\n+        let link = tmpdir.join(\"d1\");\n+        let dir = tmpdir.join(\"d2\");\n+        let canary = dir.join(\"do_not_delete\");\n+        check!(fs::create_dir_all(&dir));\n+        check!(check!(File::create(&canary)).write(b\"foo\"));\n+        check!(symlink_junction(&dir, &link));\n+        check!(fs::remove_dir_all(&link));\n+\n+        assert!(!link.is_dir());\n+        assert!(canary.exists());\n+    }\n+\n+    #[test]\n+    // only Windows makes a distinction between file and directory symlinks.\n+    #[cfg(windows)]\n+    fn recursive_rmdir_of_file_symlink() {\n+        let tmpdir = tmpdir();\n+        if !got_symlink_permission(&tmpdir) { return };\n+\n+        let f1 = tmpdir.join(\"f1\");\n+        let f2 = tmpdir.join(\"f2\");\n+        check!(check!(File::create(&f1)).write(b\"foo\"));\n+        check!(symlink_file(&f1, &f2));\n+        match fs::remove_dir_all(&f2) {\n+            Ok(..) => panic!(\"wanted a failure\"),\n+            Err(..) => {}\n+        }\n+    }\n+\n     #[test]\n     fn unicode_path_is_dir() {\n         assert!(Path::new(\".\").is_dir());"}, {"sha": "ee81c516e33d6c75d7336071c2eb6d4bf45637ad", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e06f6928cb840a018706cabf75ab2bf3807551b1/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06f6928cb840a018706cabf75ab2bf3807551b1/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=e06f6928cb840a018706cabf75ab2bf3807551b1", "patch": "@@ -627,10 +627,19 @@ pub fn rmdir(p: &Path) -> io::Result<()> {\n }\n \n pub fn remove_dir_all(path: &Path) -> io::Result<()> {\n+    let filetype = try!(lstat(path)).file_type();\n+    if filetype.is_symlink() {\n+        unlink(path)\n+    } else {\n+        remove_dir_all_recursive(path)\n+    }\n+}\n+\n+fn remove_dir_all_recursive(path: &Path) -> io::Result<()> {\n     for child in try!(readdir(path)) {\n         let child = try!(child);\n         if try!(child.file_type()).is_dir() {\n-            try!(remove_dir_all(&child.path()));\n+            try!(remove_dir_all_recursive(&child.path()));\n         } else {\n             try!(unlink(&child.path()));\n         }"}, {"sha": "3062d38f8c259ae4245378151a3b818d0b3b9ccc", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e06f6928cb840a018706cabf75ab2bf3807551b1/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06f6928cb840a018706cabf75ab2bf3807551b1/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=e06f6928cb840a018706cabf75ab2bf3807551b1", "patch": "@@ -552,11 +552,22 @@ pub fn rmdir(p: &Path) -> io::Result<()> {\n }\n \n pub fn remove_dir_all(path: &Path) -> io::Result<()> {\n+    let filetype = try!(lstat(path)).file_type();\n+    if filetype.is_symlink() {\n+        // On Windows symlinks to files and directories are removed differently.\n+        // rmdir only deletes dir symlinks and junctions, not file symlinks.\n+        rmdir(path)\n+    } else {\n+        remove_dir_all_recursive(path)\n+    }\n+}\n+\n+fn remove_dir_all_recursive(path: &Path) -> io::Result<()> {\n     for child in try!(readdir(path)) {\n         let child = try!(child);\n         let child_type = try!(child.file_type());\n         if child_type.is_dir() {\n-            try!(remove_dir_all(&child.path()));\n+            try!(remove_dir_all_recursive(&child.path()));\n         } else if child_type.is_symlink_dir() {\n             try!(rmdir(&child.path()));\n         } else {"}]}