{"sha": "b743af6a241edbe8700ce084000f4d3cf7c1182e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NDNhZjZhMjQxZWRiZTg3MDBjZTA4NDAwMGY0ZDNjZjdjMTE4MmU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-08T22:16:58Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T07:57:25Z"}, "message": "rename a method in Resolver trait", "tree": {"sha": "3d47a9993a0801be796cae6c3a7c607fbbfaadc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d47a9993a0801be796cae6c3a7c607fbbfaadc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b743af6a241edbe8700ce084000f4d3cf7c1182e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b743af6a241edbe8700ce084000f4d3cf7c1182e", "html_url": "https://github.com/rust-lang/rust/commit/b743af6a241edbe8700ce084000f4d3cf7c1182e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b743af6a241edbe8700ce084000f4d3cf7c1182e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7472f9ef134465c8d077269236f09e8ef5767772", "url": "https://api.github.com/repos/rust-lang/rust/commits/7472f9ef134465c8d077269236f09e8ef5767772", "html_url": "https://github.com/rust-lang/rust/commit/7472f9ef134465c8d077269236f09e8ef5767772"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "2064a3c92f22c9da548640e55e69489e7100f256", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b743af6a241edbe8700ce084000f4d3cf7c1182e/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b743af6a241edbe8700ce084000f4d3cf7c1182e/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=b743af6a241edbe8700ce084000f4d3cf7c1182e", "patch": "@@ -173,7 +173,7 @@ struct LoweringContext<'a, 'hir: 'a> {\n pub trait Resolver {\n     fn def_key(&mut self, id: DefId) -> DefKey;\n \n-    fn item_generics_cloned_untracked_liftimes(&self, def: DefId, sess: &Session) -> usize;\n+    fn item_generics_num_liftimes(&self, def: DefId, sess: &Session) -> usize;\n \n     /// Obtains resolution for a `NodeId` with a single resolution.\n     fn get_partial_res(&mut self, id: NodeId) -> Option<PartialRes>;"}, {"sha": "f6b33de83a2b93dfd3d441a8c77622cca1b7d7d9", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b743af6a241edbe8700ce084000f4d3cf7c1182e/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b743af6a241edbe8700ce084000f4d3cf7c1182e/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=b743af6a241edbe8700ce084000f4d3cf7c1182e", "patch": "@@ -93,9 +93,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             return n;\n                         }\n                         assert!(!def_id.is_local());\n-                        let n = self\n-                            .resolver\n-                            .item_generics_cloned_untracked_liftimes(def_id, self.sess);\n+                        let n = self.resolver.item_generics_num_liftimes(def_id, self.sess);\n                         self.type_def_lifetime_params.insert(def_id, n);\n                         n\n                     });"}, {"sha": "0a4011fe3f404ddf07961c80e3a912144580dc7d", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b743af6a241edbe8700ce084000f4d3cf7c1182e/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b743af6a241edbe8700ce084000f4d3cf7c1182e/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=b743af6a241edbe8700ce084000f4d3cf7c1182e", "patch": "@@ -1031,7 +1031,7 @@ impl rustc_ast_lowering::Resolver for Resolver<'_> {\n         if id.is_local() { self.definitions().def_key(id.index) } else { self.cstore().def_key(id) }\n     }\n \n-    fn item_generics_cloned_untracked_liftimes(&self, def_id: DefId, sess: &Session) -> usize {\n+    fn item_generics_num_liftimes(&self, def_id: DefId, sess: &Session) -> usize {\n         self.cstore().item_generics_cloned_untracked(def_id, sess).own_counts().lifetimes\n     }\n "}]}