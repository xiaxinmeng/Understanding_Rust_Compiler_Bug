{"sha": "56e7777755945041da1f898d1bd1887e554adce1", "node_id": "C_kwDOAAsO6NoAKDU2ZTc3Nzc3NTU5NDUwNDFkYTFmODk4ZDFiZDE4ODdlNTU0YWRjZTE", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-20T09:19:57Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-20T09:19:57Z"}, "message": "avoid `&str` to String conversions", "tree": {"sha": "a12ed09d37a2b6fcc95d41ad416625548d26b24b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a12ed09d37a2b6fcc95d41ad416625548d26b24b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56e7777755945041da1f898d1bd1887e554adce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56e7777755945041da1f898d1bd1887e554adce1", "html_url": "https://github.com/rust-lang/rust/commit/56e7777755945041da1f898d1bd1887e554adce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56e7777755945041da1f898d1bd1887e554adce1/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a155b9faf480ae0d1cc46ffc4b5e1a468bc65c", "url": "https://api.github.com/repos/rust-lang/rust/commits/57a155b9faf480ae0d1cc46ffc4b5e1a468bc65c", "html_url": "https://github.com/rust-lang/rust/commit/57a155b9faf480ae0d1cc46ffc4b5e1a468bc65c"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "ba888d77b15c1644708d9e82c13dd49833d594fb", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/56e7777755945041da1f898d1bd1887e554adce1/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e7777755945041da1f898d1bd1887e554adce1/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=56e7777755945041da1f898d1bd1887e554adce1", "patch": "@@ -390,18 +390,17 @@ impl Diagnostic {\n         expected: DiagnosticStyledString,\n         found: DiagnosticStyledString,\n     ) -> &mut Self {\n-        let mut msg: Vec<_> =\n-            vec![(\"required when trying to coerce from type `\".to_string(), Style::NoStyle)];\n+        let mut msg: Vec<_> = vec![(\"required when trying to coerce from type `\", Style::NoStyle)];\n         msg.extend(expected.0.iter().map(|x| match *x {\n-            StringPart::Normal(ref s) => (s.to_owned(), Style::NoStyle),\n-            StringPart::Highlighted(ref s) => (s.to_owned(), Style::Highlight),\n+            StringPart::Normal(ref s) => (s.as_str(), Style::NoStyle),\n+            StringPart::Highlighted(ref s) => (s.as_str(), Style::Highlight),\n         }));\n-        msg.push((\"` to type '\".to_string(), Style::NoStyle));\n+        msg.push((\"` to type '\", Style::NoStyle));\n         msg.extend(found.0.iter().map(|x| match *x {\n-            StringPart::Normal(ref s) => (s.to_owned(), Style::NoStyle),\n-            StringPart::Highlighted(ref s) => (s.to_owned(), Style::Highlight),\n+            StringPart::Normal(ref s) => (s.as_str(), Style::NoStyle),\n+            StringPart::Highlighted(ref s) => (s.as_str(), Style::Highlight),\n         }));\n-        msg.push((\"`\".to_string(), Style::NoStyle));\n+        msg.push((\"`\", Style::NoStyle));\n \n         // For now, just attach these as notes\n         self.highlighted_note(msg);"}, {"sha": "df13136dcce37c42a7649ebac92eddbe3562c4fa", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56e7777755945041da1f898d1bd1887e554adce1/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e7777755945041da1f898d1bd1887e554adce1/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=56e7777755945041da1f898d1bd1887e554adce1", "patch": "@@ -2603,9 +2603,9 @@ fn show_candidates(\n                 .skip(1)\n                 .all(|(_, descr, _, _)| descr == descr_first)\n             {\n-                descr_first.to_string()\n+                descr_first\n             } else {\n-                \"item\".to_string()\n+                \"item\"\n             };\n             let plural_descr =\n                 if descr.ends_with(\"s\") { format!(\"{}es\", descr) } else { format!(\"{}s\", descr) };"}]}