{"sha": "842033b15055eba9aabfc730468cd076a30a5f29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MjAzM2IxNTA1NWViYTlhYWJmYzczMDQ2OGNkMDc2YTMwYTVmMjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-04T21:42:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-04T21:42:57Z"}, "message": "Merge #7561\n\n7561: Avoid using ModPath's fields directly r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "08bbf19e5bc90699c00d1a8cae709d7f6e0e13ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08bbf19e5bc90699c00d1a8cae709d7f6e0e13ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/842033b15055eba9aabfc730468cd076a30a5f29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHGphCRBK7hj4Ov3rIwAAdHIIAF2oOnlxyr6JYkkqZenk4CPh\nylheZpUlY3CSauqkQDdcPUC25wl0tjSSrvQ6/MSfit9aMJaLzlGlsUHa/VQwUP8B\nCW/tfNQR/lnps9HpOzhgJbJtL9vv1d1aY5pmQoo68/p06ytSGVAlVt+QPCR5GLY7\n+XkjXwp4DGkg7MnU7m6wzVhxxi2Dm7n1XtSuy6zFvsTXTA8hKVs3jxXJLSRbOKgz\nUHUXgmVYhIjVWjF5NmeUmniSWZsY0Dr4aBgrRXKEkxXTmwYTlf5O7ynj7eI6jDPi\n0wFke/ymgFdaZc7WvhGvXZJIR40vLZj5IsBynmnjA9EHBlTlaT9n1ytlqqupN/Q=\n=fr+w\n-----END PGP SIGNATURE-----\n", "payload": "tree 08bbf19e5bc90699c00d1a8cae709d7f6e0e13ac\nparent de046bf4572a75cf534a2342358a422b2f18d01c\nparent 474df093a9d91e2995e34608b577bff2b28f1e04\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1612474977 +0000\ncommitter GitHub <noreply@github.com> 1612474977 +0000\n\nMerge #7561\n\n7561: Avoid using ModPath's fields directly r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/842033b15055eba9aabfc730468cd076a30a5f29", "html_url": "https://github.com/rust-lang/rust/commit/842033b15055eba9aabfc730468cd076a30a5f29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/842033b15055eba9aabfc730468cd076a30a5f29/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de046bf4572a75cf534a2342358a422b2f18d01c", "url": "https://api.github.com/repos/rust-lang/rust/commits/de046bf4572a75cf534a2342358a422b2f18d01c", "html_url": "https://github.com/rust-lang/rust/commit/de046bf4572a75cf534a2342358a422b2f18d01c"}, {"sha": "474df093a9d91e2995e34608b577bff2b28f1e04", "url": "https://api.github.com/repos/rust-lang/rust/commits/474df093a9d91e2995e34608b577bff2b28f1e04", "html_url": "https://github.com/rust-lang/rust/commit/474df093a9d91e2995e34608b577bff2b28f1e04"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "0e60dc2b63a05f3a0ec9d83e111fdc291c40e7c2", "filename": "crates/hir_def/src/path.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/842033b15055eba9aabfc730468cd076a30a5f29/crates%2Fhir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842033b15055eba9aabfc730468cd076a30a5f29/crates%2Fhir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath.rs?ref=842033b15055eba9aabfc730468cd076a30a5f29", "patch": "@@ -201,10 +201,10 @@ impl Path {\n         }\n         let res = Path {\n             type_anchor: self.type_anchor.clone(),\n-            mod_path: ModPath {\n-                kind: self.mod_path.kind.clone(),\n-                segments: self.mod_path.segments[..self.mod_path.segments.len() - 1].to_vec(),\n-            },\n+            mod_path: ModPath::from_segments(\n+                self.mod_path.kind.clone(),\n+                self.mod_path.segments[..self.mod_path.segments.len() - 1].iter().cloned(),\n+            ),\n             generic_args: self.generic_args[..self.generic_args.len() - 1].to_vec(),\n         };\n         Some(res)"}, {"sha": "a469546c13df61818e2b083eca42b9238ca20276", "filename": "crates/hir_def/src/path/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/842033b15055eba9aabfc730468cd076a30a5f29/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842033b15055eba9aabfc730468cd076a30a5f29/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs?ref=842033b15055eba9aabfc730468cd076a30a5f29", "patch": "@@ -129,7 +129,7 @@ pub(super) fn lower_path(mut path: ast::Path, hygiene: &Hygiene) -> Option<Path>\n         }\n     }\n \n-    let mod_path = ModPath { kind, segments };\n+    let mod_path = ModPath::from_segments(kind, segments);\n     return Some(Path { type_anchor, mod_path, generic_args });\n \n     fn qualifier(path: &ast::Path) -> Option<ast::Path> {"}, {"sha": "d584b0b702c76959020a5be92a16a672152308e1", "filename": "crates/hir_def/src/path/lower/lower_use.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/842033b15055eba9aabfc730468cd076a30a5f29/crates%2Fhir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842033b15055eba9aabfc730468cd076a30a5f29/crates%2Fhir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs?ref=842033b15055eba9aabfc730468cd076a30a5f29", "patch": "@@ -75,9 +75,10 @@ fn convert_path(prefix: Option<ModPath>, path: ast::Path, hygiene: &Hygiene) ->\n             match hygiene.name_ref_to_name(name_ref) {\n                 Either::Left(name) => {\n                     // no type args in use\n-                    let mut res = prefix.unwrap_or_else(|| ModPath {\n-                        kind: segment.coloncolon_token().map_or(PathKind::Plain, |_| PathKind::Abs),\n-                        segments: Vec::with_capacity(1),\n+                    let mut res = prefix.unwrap_or_else(|| {\n+                        ModPath::from_kind(\n+                            segment.coloncolon_token().map_or(PathKind::Plain, |_| PathKind::Abs),\n+                        )\n                     });\n                     res.segments.push(name);\n                     res"}]}