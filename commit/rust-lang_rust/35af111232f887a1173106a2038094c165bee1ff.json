{"sha": "35af111232f887a1173106a2038094c165bee1ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YWYxMTEyMzJmODg3YTExNzMxMDZhMjAzODA5NGMxNjViZWUxZmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-13T20:18:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-13T20:18:13Z"}, "message": "Rollup merge of #57538 - dlrobertson:fix_57472, r=zackmdavis\n\nlibrustc_mir: Fix ICE with slice patterns\n\nIf a match arm does not include all fields in a structure and a later\npattern includes a field that is an array, we will attempt to use the\narray type from the prior arm. When calculating the field type, treat\na array of an unknown size as a `TyErr`.\n\nFixes: #57472", "tree": {"sha": "465244e02fdcd988988785207b9e4a1d14f6eb0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/465244e02fdcd988988785207b9e4a1d14f6eb0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35af111232f887a1173106a2038094c165bee1ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcO50GCRBK7hj4Ov3rIwAAdHIIAHz05CJws9rbdQfiNKGxM2qD\niTFtFbz+CXiwVqKT1jSk9Cp0AARjnVClej+Uwesbr78kfVwfIS+E49ry5jOiIFa8\nKA/VRh6peYHVt82LFegG4Oc5FYmzCFrl4rpVWMfZJ5c5QyfhAJBgLGlApxxJEo/d\nXxV75cVHvOIt68buChmWDetZlE6Jl7HlL+OFS2qGD8YFkL/0AguVe/hjc+HYA9AE\nyu0GaVIWAegoy6+YATKVO/Ur9VwsMrziUAYY2RMvef2h+xH6kIewEMZbtZDGvwpy\nh1MRY68awAv6RUggVDtefc0heMr7MmJeikqSGZQIQw2euuk5L4IIAuF33KgQ3pw=\n=SVQB\n-----END PGP SIGNATURE-----\n", "payload": "tree 465244e02fdcd988988785207b9e4a1d14f6eb0b\nparent d7c1e0d1bfe6a19d201c8f259f77174e5171032d\nparent d6c19191b05c11c6a3f5cbf25178ec749f5a3414\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547410693 +0100\ncommitter GitHub <noreply@github.com> 1547410693 +0100\n\nRollup merge of #57538 - dlrobertson:fix_57472, r=zackmdavis\n\nlibrustc_mir: Fix ICE with slice patterns\n\nIf a match arm does not include all fields in a structure and a later\npattern includes a field that is an array, we will attempt to use the\narray type from the prior arm. When calculating the field type, treat\na array of an unknown size as a `TyErr`.\n\nFixes: #57472\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35af111232f887a1173106a2038094c165bee1ff", "html_url": "https://github.com/rust-lang/rust/commit/35af111232f887a1173106a2038094c165bee1ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35af111232f887a1173106a2038094c165bee1ff/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7c1e0d1bfe6a19d201c8f259f77174e5171032d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c1e0d1bfe6a19d201c8f259f77174e5171032d", "html_url": "https://github.com/rust-lang/rust/commit/d7c1e0d1bfe6a19d201c8f259f77174e5171032d"}, {"sha": "d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "html_url": "https://github.com/rust-lang/rust/commit/d6c19191b05c11c6a3f5cbf25178ec749f5a3414"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "188a1120442983dfba44c786cb5a4b6047a04590", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/35af111232f887a1173106a2038094c165bee1ff/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35af111232f887a1173106a2038094c165bee1ff/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=35af111232f887a1173106a2038094c165bee1ff", "patch": "@@ -1372,7 +1372,14 @@ fn constructor_sub_pattern_tys<'a, 'tcx: 'a>(cx: &MatchCheckCtxt<'a, 'tcx>,\n                     let is_visible = adt.is_enum()\n                         || field.vis.is_accessible_from(cx.module, cx.tcx);\n                     if is_visible {\n-                        field.ty(cx.tcx, substs)\n+                        let ty = field.ty(cx.tcx, substs);\n+                        match ty.sty {\n+                            // If the field type returned is an array of an unknown\n+                            // size return an TyErr.\n+                            ty::Array(_, len) if len.assert_usize(cx.tcx).is_none() =>\n+                                cx.tcx.types.err,\n+                            _ => ty,\n+                        }\n                     } else {\n                         // Treat all non-visible fields as TyErr. They\n                         // can't appear in any other pattern from"}, {"sha": "1131006374c64eb70672e54783d1351ef6ef8401", "filename": "src/test/ui/issues/issue-57472.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/35af111232f887a1173106a2038094c165bee1ff/src%2Ftest%2Fui%2Fissues%2Fissue-57472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35af111232f887a1173106a2038094c165bee1ff/src%2Ftest%2Fui%2Fissues%2Fissue-57472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57472.rs?ref=35af111232f887a1173106a2038094c165bee1ff", "patch": "@@ -0,0 +1,35 @@\n+#![crate_type=\"lib\"]\n+#![deny(unreachable_patterns)]\n+\n+mod test_struct {\n+    // Test the exact copy of the minimal example\n+    // posted in the issue.\n+    pub struct Punned {\n+        foo: [u8; 1],\n+        bar: [u8; 1],\n+    }\n+\n+    pub fn test(punned: Punned) {\n+        match punned {\n+            Punned { foo: [_], .. } => println!(\"foo\"),\n+            Punned { bar: [_], .. } => println!(\"bar\"),\n+            //~^ ERROR unreachable pattern [unreachable_patterns]\n+        }\n+    }\n+}\n+\n+mod test_union {\n+    // Test the same thing using a union.\n+    pub union Punned {\n+        foo: [u8; 1],\n+        bar: [u8; 1],\n+    }\n+\n+    pub fn test(punned: Punned) {\n+        match punned {\n+            Punned { foo: [_] } => println!(\"foo\"),\n+            Punned { bar: [_] } => println!(\"bar\"),\n+            //~^ ERROR unreachable pattern [unreachable_patterns]\n+        }\n+    }\n+}"}, {"sha": "b6dd7e249418691fbfc63a874d46f7c0db96f3fe", "filename": "src/test/ui/issues/issue-57472.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/35af111232f887a1173106a2038094c165bee1ff/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35af111232f887a1173106a2038094c165bee1ff/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr?ref=35af111232f887a1173106a2038094c165bee1ff", "patch": "@@ -0,0 +1,20 @@\n+error: unreachable pattern\n+  --> $DIR/issue-57472.rs:15:13\n+   |\n+LL |             Punned { bar: [_], .. } => println!(\"bar\"),\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-57472.rs:2:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/issue-57472.rs:31:13\n+   |\n+LL |             Punned { bar: [_] } => println!(\"bar\"),\n+   |             ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}