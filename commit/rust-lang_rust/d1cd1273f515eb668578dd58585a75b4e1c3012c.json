{"sha": "d1cd1273f515eb668578dd58585a75b4e1c3012c", "node_id": "C_kwDOAAsO6NoAKGQxY2QxMjczZjUxNWViNjY4NTc4ZGQ1ODU4NWE3NWI0ZTFjMzAxMmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-14T06:21:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-14T06:21:40Z"}, "message": "Rollup merge of #111549 - GuillaumeGomez:update-gui-format, r=notriddle\n\n[rustdoc] Convert more GUI tests colors to their original format\n\nFollow-up of https://github.com/rust-lang/rust/pull/111459.\n\nThe update for the `browser-ui-test` version is about improvements for color handling (alpha for hex format in particular).\n\nr? `@notriddle`", "tree": {"sha": "e3da56add336ba99d41e7d18d8cf26b86e06a9f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3da56add336ba99d41e7d18d8cf26b86e06a9f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1cd1273f515eb668578dd58585a75b4e1c3012c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkYH30CRBK7hj4Ov3rIwAABesIAGX77hb1NVEq25m7nTeVO6oi\nHLp/bVMdQoenLDrbGJuc+JJ4aYWollCNpkzNv8dL/wuprtPGCLKjoCMDhnf0BCvF\n+HFeBky0uS+DHtEfn/m37Fl48om9FGPWn/OR32Ga0nRM29YPX/9rwKo3OyvEdkrl\nSu0nWtQ3u2ChoCxNL2ig+toE3Tb561+weOeEpMXF0eS1+y2tizjYvGL2a/mOid35\ny2Z7I6xXdS+wTOSf1KD6g64n9XTOyWdGLK3cCkSfNUfmbipF2q8Tt4864Tts12+R\nGMPLfhghQLAbA2FHcEOoboSRtDNm78Nkafg6xtZ9w0DMsFFvivQdUX89sg91LBM=\n=I3ua\n-----END PGP SIGNATURE-----\n", "payload": "tree e3da56add336ba99d41e7d18d8cf26b86e06a9f5\nparent 70ab314741dc1b0fc943e03a0c0ba6cb68308831\nparent 91765d8c04dca9d76f08899dcd89828b0b86207a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684045300 +0200\ncommitter GitHub <noreply@github.com> 1684045300 +0200\n\nRollup merge of #111549 - GuillaumeGomez:update-gui-format, r=notriddle\n\n[rustdoc] Convert more GUI tests colors to their original format\n\nFollow-up of https://github.com/rust-lang/rust/pull/111459.\n\nThe update for the `browser-ui-test` version is about improvements for color handling (alpha for hex format in particular).\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1cd1273f515eb668578dd58585a75b4e1c3012c", "html_url": "https://github.com/rust-lang/rust/commit/d1cd1273f515eb668578dd58585a75b4e1c3012c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1cd1273f515eb668578dd58585a75b4e1c3012c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70ab314741dc1b0fc943e03a0c0ba6cb68308831", "url": "https://api.github.com/repos/rust-lang/rust/commits/70ab314741dc1b0fc943e03a0c0ba6cb68308831", "html_url": "https://github.com/rust-lang/rust/commit/70ab314741dc1b0fc943e03a0c0ba6cb68308831"}, {"sha": "91765d8c04dca9d76f08899dcd89828b0b86207a", "url": "https://api.github.com/repos/rust-lang/rust/commits/91765d8c04dca9d76f08899dcd89828b0b86207a", "html_url": "https://github.com/rust-lang/rust/commit/91765d8c04dca9d76f08899dcd89828b0b86207a"}], "stats": {"total": 174, "additions": 87, "deletions": 87}, "files": [{"sha": "6b4966ddeb4085e6eebcf9e21769014c50b56459", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1cd1273f515eb668578dd58585a75b4e1c3012c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/d1cd1273f515eb668578dd58585a75b4e1c3012c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=d1cd1273f515eb668578dd58585a75b4e1c3012c", "patch": "@@ -1 +1 @@\n-0.16.0\n\\ No newline at end of file\n+0.16.3\n\\ No newline at end of file"}, {"sha": "90f7160b7249095dfed3f7db5510fe56cab34408", "filename": "tests/rustdoc-gui/search-result-color.goml", "status": "modified", "additions": 86, "deletions": 86, "changes": 172, "blob_url": "https://github.com/rust-lang/rust/blob/d1cd1273f515eb668578dd58585a75b4e1c3012c/tests%2Frustdoc-gui%2Fsearch-result-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/d1cd1273f515eb668578dd58585a75b4e1c3012c/tests%2Frustdoc-gui%2Fsearch-result-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-color.goml?ref=d1cd1273f515eb668578dd58585a75b4e1c3012c", "patch": "@@ -47,89 +47,89 @@ reload:\n wait-for: \"#search-tabs\"\n assert-css: (\n     \"#search-tabs > button > .count\",\n-    {\"color\": \"rgb(136, 136, 136)\"},\n+    {\"color\": \"#888\"},\n     ALL,\n )\n assert-css: (\n     \"//*[@class='desc'][text()='Just a normal struct.']\",\n-    {\"color\": \"rgb(197, 197, 197)\"},\n+    {\"color\": \"#c5c5c5\"},\n )\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']\",\n-    {\"color\": \"rgb(0, 150, 207)\"},\n+    {\"color\": \"#0096cf\"},\n )\n \n // Checking the color of the bottom border.\n assert-css: (\n     \".search-results > a\",\n-    {\"border-bottom-color\": \"rgba(170, 170, 170, 0.2)\"}\n+    {\"border-bottom-color\": \"#aaa3\"}\n )\n \n // Checking the color of \"keyword\" text.\n assert-css: (\n     \"//*[@class='result-name']//*[text()='(keyword)']\",\n-    {\"color\": \"rgb(120, 135, 151)\"},\n+    {\"color\": \"#788797\"},\n )\n \n-store-value: (entry_color, \"rgb(0, 150, 207)\") // color of the search entry\n-store-value: (hover_entry_color, \"rgb(255, 255, 255)\") // color of the hovered/focused search entry\n-store-value: (background_color, \"rgba(0, 0, 0, 0)\") // background color\n-store-value: (hover_background_color, \"rgb(60, 60, 60)\") // hover background color\n+store-value: (entry_color, \"#0096cf\") // color of the search entry\n+store-value: (hover_entry_color, \"#fff\") // color of the hovered/focused search entry\n+store-value: (background_color, \"transparent\") // background color\n+store-value: (hover_background_color, \"#3c3c3c\") // hover background color\n \n call-function: (\n     \"check-result-color\", (\n         \"keyword\", // item kind\n-        \"rgb(57, 175, 215)\", // color of item kind\n-        \"rgb(57, 175, 215)\", // color of hovered/focused item kind\n+        \"#39afd7\", // color of item kind\n+        \"#39afd7\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"struct\", // item kind\n-        \"rgb(255, 160, 165)\", // color of item kind\n-        \"rgb(255, 160, 165)\", // color of hovered/focused item kind\n+        \"#ffa0a5\", // color of item kind\n+        \"#ffa0a5\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"associatedtype\", // item kind\n-        \"rgb(57, 175, 215)\", // color of item kind\n-        \"rgb(57, 175, 215)\", // color of hovered/focused item kind\n+        \"#39afd7\", // color of item kind\n+        \"#39afd7\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"tymethod\", // item kind\n-        \"rgb(253, 214, 135)\", // color of item kind\n-        \"rgb(253, 214, 135)\", // color of hovered/focused item kind\n+        \"#fdd687\", // color of item kind\n+        \"#fdd687\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"method\", // item kind\n-        \"rgb(253, 214, 135)\", // color of item kind\n-        \"rgb(253, 214, 135)\", // color of hovered/focused item kind\n+        \"#fdd687\", // color of item kind\n+        \"#fdd687\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"structfield\", // item kind\n-        \"rgb(0, 150, 207)\", // color of item kind\n-        \"rgb(255, 255, 255)\", // color of hovered/focused item kind\n+        \"#0096cf\", // color of item kind\n+        \"#fff\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"macro\", // item kind\n-        \"rgb(163, 122, 204)\", // color of item kind\n-        \"rgb(163, 122, 204)\", // color of hovered/focused item kind\n+        \"#a37acc\", // color of item kind\n+        \"#a37acc\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"fn\", // item kind\n-        \"rgb(253, 214, 135)\", // color of item kind\n-        \"rgb(253, 214, 135)\", // color of hovered/focused item kind\n+        \"#fdd687\", // color of item kind\n+        \"#fdd687\", // color of hovered/focused item kind\n     ),\n )\n \n@@ -138,19 +138,19 @@ move-cursor-to: \".search-input\"\n focus: \".search-input\" // To ensure the `<a>` container isnt focus or hover.\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n-    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+    {\"color\": \"#0096cf\", \"background-color\": \"transparent\"},\n     ALL,\n )\n \n // Checking color and background on hover.\n move-cursor-to: \"//*[@class='desc'][text()='Just a normal struct.']\"\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']\",\n-    {\"color\": \"rgb(255, 255, 255)\"},\n+    {\"color\": \"#fff\"},\n )\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n-    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+    {\"color\": \"#fff\", \"background-color\": \"rgb(60, 60, 60)\"},\n )\n \n // Dark theme\n@@ -164,89 +164,89 @@ reload:\n wait-for: \"#search-tabs\"\n assert-css: (\n     \"#search-tabs > button > .count\",\n-    {\"color\": \"rgb(136, 136, 136)\"},\n+    {\"color\": \"#888\"},\n     ALL,\n )\n assert-css: (\n     \"//*[@class='desc'][text()='Just a normal struct.']\",\n-    {\"color\": \"rgb(221, 221, 221)\"},\n+    {\"color\": \"#ddd\"},\n )\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']\",\n-    {\"color\": \"rgb(221, 221, 221)\"},\n+    {\"color\": \"#ddd\"},\n )\n \n // Checking the color of the bottom border.\n assert-css: (\n     \".search-results > a\",\n-    {\"border-bottom-color\": \"rgba(170, 170, 170, 0.2)\"}\n+    {\"border-bottom-color\": \"#aaa3\"}\n )\n \n // Checking the color for \"keyword\" text.\n assert-css: (\n     \"//*[@class='result-name']//*[text()='(keyword)']\",\n-    {\"color\": \"rgb(221, 221, 221)\"},\n+    {\"color\": \"#ddd\"},\n )\n \n-store-value: (entry_color, \"rgb(221, 221, 221)\") // color of the search entry\n-store-value: (hover_entry_color, \"rgb(221, 221, 221)\") // color of the hovered/focused search entry\n-store-value: (background_color, \"rgba(0, 0, 0, 0)\") // background color\n-store-value: (hover_background_color, \"rgb(97, 97, 97)\") // hover background color\n+store-value: (entry_color, \"#ddd\") // color of the search entry\n+store-value: (hover_entry_color, \"#ddd\") // color of the hovered/focused search entry\n+store-value: (background_color, \"transparent\") // background color\n+store-value: (hover_background_color, \"#616161\") // hover background color\n \n call-function: (\n     \"check-result-color\", (\n         \"keyword\", // item kind\n-        \"rgb(210, 153, 29)\", // color of item kind\n-        \"rgb(210, 153, 29)\", // color of hovered/focused item kind\n+        \"#d2991d\", // color of item kind\n+        \"#d2991d\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"struct\", // item kind\n-        \"rgb(45, 191, 184)\", // color of item kind\n-        \"rgb(45, 191, 184)\", // color of hovered/focused item kind\n+        \"#2dbfb8\", // color of item kind\n+        \"#2dbfb8\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"associatedtype\", // item kind\n-        \"rgb(210, 153, 29)\", // color of item kind\n-        \"rgb(210, 153, 29)\", // color of hovered/focused item kind\n+        \"#d2991d\", // color of item kind\n+        \"#d2991d\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"tymethod\", // item kind\n-        \"rgb(43, 171, 99)\", // color of item kind\n-        \"rgb(43, 171, 99)\", // color of hovered/focused item kind\n+        \"#2bab63\", // color of item kind\n+        \"#2bab63\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"method\", // item kind\n-        \"rgb(43, 171, 99)\", // color of item kind\n-        \"rgb(43, 171, 99)\", // color of hovered/focused item kind\n+        \"#2bab63\", // color of item kind\n+        \"#2bab63\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"structfield\", // item kind\n-        \"rgb(221, 221, 221)\", // color of item kind\n-        \"rgb(221, 221, 221)\", // color of hovered/focused item kind\n+        \"#ddd\", // color of item kind\n+        \"#ddd\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"macro\", // item kind\n-        \"rgb(9, 189, 0)\", // color of item kind\n-        \"rgb(9, 189, 0)\", // color of hovered/focused item kind\n+        \"#09bd00\", // color of item kind\n+        \"#09bd00\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"fn\", // item kind\n-        \"rgb(43, 171, 99)\", // color of item kind\n-        \"rgb(43, 171, 99)\", // color of hovered/focused item kind\n+        \"#2bab63\", // color of item kind\n+        \"#2bab63\", // color of hovered/focused item kind\n     ),\n )\n \n@@ -255,7 +255,7 @@ move-cursor-to: \".search-input\"\n focus: \".search-input\" // To ensure the `<a>` container isnt focus or hover.\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n-    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+    {\"color\": \"#ddd\", \"background-color\": \"transparent\"},\n )\n \n // Light theme\n@@ -266,89 +266,89 @@ reload:\n wait-for: \"#search-tabs\"\n assert-css: (\n     \"#search-tabs > button > .count\",\n-    {\"color\": \"rgb(136, 136, 136)\"},\n+    {\"color\": \"#888\"},\n     ALL,\n )\n assert-css: (\n     \"//*[@class='desc'][text()='Just a normal struct.']\",\n-    {\"color\": \"rgb(0, 0, 0)\"},\n+    {\"color\": \"#000\"},\n )\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']\",\n-    {\"color\": \"rgb(0, 0, 0)\"},\n+    {\"color\": \"#000\"},\n )\n \n // Checking the color of the bottom border.\n assert-css: (\n     \".search-results > a\",\n-    {\"border-bottom-color\": \"rgba(170, 170, 170, 0.2)\"}\n+    {\"border-bottom-color\": \"#aaa3\"}\n )\n \n // Checking the color for \"keyword\" text.\n assert-css: (\n     \"//*[@class='result-name']//*[text()='(keyword)']\",\n-    {\"color\": \"rgb(0, 0, 0)\"},\n+    {\"color\": \"#000\"},\n )\n \n-store-value: (entry_color, \"rgb(0, 0, 0)\") // color of the search entry\n-store-value: (hover_entry_color, \"rgb(0, 0, 0)\") // color of the hovered/focused search entry\n-store-value: (background_color, \"rgba(0, 0, 0, 0)\") // background color\n-store-value: (hover_background_color, \"rgb(204, 204, 204)\") // hover background color\n+store-value: (entry_color, \"#000\") // color of the search entry\n+store-value: (hover_entry_color, \"#000\") // color of the hovered/focused search entry\n+store-value: (background_color, \"transparent\") // background color\n+store-value: (hover_background_color, \"#ccc\") // hover background color\n \n call-function: (\n     \"check-result-color\", (\n         \"keyword\", // item kind\n-        \"rgb(56, 115, 173)\", // color of item kind\n-        \"rgb(56, 115, 173)\", // color of hovered/focused item kind\n+        \"#3873ad\", // color of item kind\n+        \"#3873ad\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"struct\", // item kind\n-        \"rgb(173, 55, 138)\", // color of item kind\n-        \"rgb(173, 55, 138)\", // color of hovered/focused item kind\n+        \"#ad378a\", // color of item kind\n+        \"#ad378a\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"associatedtype\", // item kind\n-        \"rgb(56, 115, 173)\", // color of item kind\n-        \"rgb(56, 115, 173)\", // color of hovered/focused item kind\n+        \"#3873ad\", // color of item kind\n+        \"#3873ad\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"tymethod\", // item kind\n-        \"rgb(173, 124, 55)\", // color of item kind\n-        \"rgb(173, 124, 55)\", // color of hovered/focused item kind\n+        \"#ad7c37\", // color of item kind\n+        \"#ad7c37\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"method\", // item kind\n-        \"rgb(173, 124, 55)\", // color of item kind\n-        \"rgb(173, 124, 55)\", // color of hovered/focused item kind\n+        \"#ad7c37\", // color of item kind\n+        \"#ad7c37\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"structfield\", // item kind\n-        \"rgb(0, 0, 0)\", // color of item kind\n-        \"rgb(0, 0, 0)\", // color of hovered/focused item kind\n+        \"#000\", // color of item kind\n+        \"#000\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"macro\", // item kind\n-        \"rgb(6, 128, 0)\", // color of item kind\n-        \"rgb(6, 128, 0)\", // color of hovered/focused item kind\n+        \"#068000\", // color of item kind\n+        \"#068000\", // color of hovered/focused item kind\n     ),\n )\n call-function: (\n     \"check-result-color\", (\n         \"fn\", // item kind\n-        \"rgb(173, 124, 55)\", // color of item kind\n-        \"rgb(173, 124, 55)\", // color of hovered/focused item kind\n+        \"#ad7c37\", // color of item kind\n+        \"#ad7c37\", // color of hovered/focused item kind\n     ),\n )\n \n@@ -357,7 +357,7 @@ move-cursor-to: \".search-input\"\n focus: \".search-input\" // To ensure the `<a>` container isnt focus or hover.\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n-    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+    {\"color\": \"#000\", \"background-color\": \"transparent\"},\n )\n \n // Check the alias.\n@@ -386,16 +386,16 @@ define-function: (\n \n call-function: (\"check-alias\", {\n     \"theme\": \"ayu\",\n-    \"alias\": \"rgb(197, 197, 197)\",\n-    \"grey\": \"rgb(153, 153, 153)\",\n+    \"alias\": \"#c5c5c5\",\n+    \"grey\": \"#999\",\n })\n call-function: (\"check-alias\", {\n     \"theme\": \"dark\",\n-    \"alias\": \"rgb(255, 255, 255)\",\n-    \"grey\": \"rgb(204, 204, 204)\",\n+    \"alias\": \"#fff\",\n+    \"grey\": \"#ccc\",\n })\n call-function: (\"check-alias\", {\n     \"theme\": \"light\",\n-    \"alias\": \"rgb(0, 0, 0)\",\n-    \"grey\": \"rgb(153, 153, 153)\",\n+    \"alias\": \"#000\",\n+    \"grey\": \"#999\",\n })"}]}