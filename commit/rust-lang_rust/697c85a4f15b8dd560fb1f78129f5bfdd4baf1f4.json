{"sha": "697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5N2M4NWE0ZjE1YjhkZDU2MGZiMWY3ODEyOWY1YmZkZDRiYWYxZjQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-05T23:39:06Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-06T21:36:49Z"}, "message": "Only underline suggestion if it is not the only code being shown", "tree": {"sha": "f96e6e3662433fed1b78afd8641f065ffb6e3e48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f96e6e3662433fed1b78afd8641f065ffb6e3e48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "html_url": "https://github.com/rust-lang/rust/commit/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb478e23813b89944edfa602b6927e17c4c62f86", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb478e23813b89944edfa602b6927e17c4c62f86", "html_url": "https://github.com/rust-lang/rust/commit/eb478e23813b89944edfa602b6927e17c4c62f86"}], "stats": {"total": 141, "additions": 98, "deletions": 43}, "files": [{"sha": "a6a45c8b5023a2d04fa94e561f28408f6babaa64", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -1078,17 +1078,14 @@ impl EmitterWriter {\n \n             let suggestions = suggestion.splice_lines(cm.borrow());\n             let span_start_pos = cm.lookup_char_pos(primary_sub.span.lo);\n-            let span_end_pos = cm.lookup_char_pos(primary_sub.span.hi);\n             let line_start = span_start_pos.line;\n             draw_col_separator_no_space(&mut buffer, 1, max_line_num_len + 1);\n             let mut row_num = 2;\n-            for complete in suggestions.iter().take(MAX_SUGGESTIONS) {\n+            for (&(ref complete, show_underline), ref sub) in suggestions\n+                    .iter().zip(primary_sub.substitutions.iter()).take(MAX_SUGGESTIONS)\n+            {\n                 let mut line_pos = 0;\n                 // Only show underline if there's a single suggestion and it is a single line\n-                let show_underline = complete.lines().count() == 1\n-                    && span_start_pos.line == span_end_pos.line\n-                    && primary_sub.substitutions.len() == 1;\n-\n                 let mut lines = complete.lines();\n                 for line in lines.by_ref().take(MAX_HIGHLIGHT_LINES) {\n                     // Print the span column to avoid confusion\n@@ -1099,11 +1096,13 @@ impl EmitterWriter {\n                     // print the suggestion\n                     draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n                     buffer.append(row_num, line, Style::NoStyle);\n+                    line_pos += 1;\n                     row_num += 1;\n+                    // Only show an underline in the suggestions if the suggestion is not the\n+                    // entirety of the code being shown and the displayed code is not multiline.\n                     if show_underline {\n                         draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n-\n-                        let sub_len = primary_sub.substitutions[0].trim_right().len();\n+                        let sub_len = sub.trim_right().len();\n                         let underline_start = span_start_pos.col.0;\n                         let underline_end = span_start_pos.col.0 + sub_len;\n                         for p in underline_start..underline_end {\n@@ -1114,19 +1113,19 @@ impl EmitterWriter {\n                         }\n                         row_num += 1;\n                     }\n-                    line_pos += 1;\n                 }\n \n                 // if we elided some lines, add an ellipsis\n                 if let Some(_) = lines.next() {\n-                    buffer.append(row_num, \"...\", Style::NoStyle);\n-                } else if !show_underline && suggestions.len() <= MAX_SUGGESTIONS {\n+                    buffer.puts(row_num, max_line_num_len - 1, \"...\", Style::LineNumber);\n+                } else if !show_underline {\n                     draw_col_separator_no_space(&mut buffer, row_num, max_line_num_len + 1);\n+                    row_num += 1;\n                 }\n             }\n             if suggestions.len() > MAX_SUGGESTIONS {\n                 let msg = format!(\"and {} other candidates\", suggestions.len() - MAX_SUGGESTIONS);\n-                buffer.append(row_num, &msg, Style::NoStyle);\n+                buffer.puts(row_num, 0, &msg, Style::NoStyle);\n             }\n             emit_to_destination(&buffer.render(), level, &mut self.dst)?;\n         }"}, {"sha": "7fb75a263f93d04c2b83b030e383ff6e82768a0c", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -114,8 +114,8 @@ impl CodeSuggestion {\n         self.substitution_parts.iter().map(|sub| sub.span)\n     }\n \n-    /// Returns the assembled code suggestions.\n-    pub fn splice_lines(&self, cm: &CodeMapper) -> Vec<String> {\n+    /// Returns the assembled code suggestions and wether they should be shown with an underline.\n+    pub fn splice_lines(&self, cm: &CodeMapper) -> Vec<(String, bool)> {\n         use syntax_pos::{CharPos, Loc, Pos};\n \n         fn push_trailing(buf: &mut String,\n@@ -138,7 +138,7 @@ impl CodeSuggestion {\n         }\n \n         if self.substitution_parts.is_empty() {\n-            return vec![String::new()];\n+            return vec![(String::new(), false)];\n         }\n \n         let mut primary_spans: Vec<_> = self.substitution_parts\n@@ -175,14 +175,25 @@ impl CodeSuggestion {\n         prev_hi.col = CharPos::from_usize(0);\n \n         let mut prev_line = fm.get_line(lines.lines[0].line_index);\n-        let mut bufs = vec![String::new(); self.substitutions()];\n+        let mut bufs = vec![(String::new(), false); self.substitutions()];\n \n         for (sp, substitutes) in primary_spans {\n             let cur_lo = cm.lookup_char_pos(sp.lo);\n-            for (buf, substitute) in bufs.iter_mut().zip(substitutes) {\n+            for (&mut (ref mut buf, ref mut underline), substitute) in bufs.iter_mut()\n+                                                                           .zip(substitutes) {\n                 if prev_hi.line == cur_lo.line {\n                     push_trailing(buf, prev_line.as_ref(), &prev_hi, Some(&cur_lo));\n+\n+                    // Only show an underline in the suggestions if the suggestion is not the\n+                    // entirety of the code being shown and the displayed code is not multiline.\n+                    if prev_line.as_ref().unwrap().trim().len() > 0\n+                        && !substitute.ends_with('\\n')\n+                        && substitute.lines().count() == 1\n+                    {\n+                        *underline = true;\n+                    }\n                 } else {\n+                    *underline = false;\n                     push_trailing(buf, prev_line.as_ref(), &prev_hi, None);\n                     // push lines between the previous and current span (if any)\n                     for idx in prev_hi.line..(cur_lo.line - 1) {\n@@ -200,7 +211,7 @@ impl CodeSuggestion {\n             prev_hi = cm.lookup_char_pos(sp.hi);\n             prev_line = fm.get_line(prev_hi.line - 1);\n         }\n-        for buf in &mut bufs {\n+        for &mut (ref mut buf, _) in &mut bufs {\n             // if the replacement already ends with a newline, don't print the next line\n             if !buf.ends_with('\\n') {\n                 push_trailing(buf, prev_line.as_ref(), &prev_hi, None);"}, {"sha": "909b0031d615031d3d1c5e485b1905800b04b431", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -359,7 +359,7 @@ impl DiagnosticCode {\n \n impl JsonEmitter {\n     fn render(&self, suggestion: &CodeSuggestion) -> Vec<String> {\n-        suggestion.splice_lines(&*self.cm)\n+        suggestion.splice_lines(&*self.cm).iter().map(|line| line.0.to_owned()).collect()\n     }\n }\n "}, {"sha": "c8743c72e3107d10e17a0238469b7f9b34478cc3", "filename": "src/test/ui/block-result/unexpected-return-on-unit.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,9 +7,13 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `usize`\n help: did you mean to add a semicolon here?\n-   |     foo();\n+   |\n+19 |     foo();\n+   |          ^\n help: possibly return type missing here?\n-   | fn bar() -> usize {\n+   |\n+18 | fn bar() -> usize {\n+   |          ^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e8a2db4048c4d73a5f18fd56e443dc6370f008e5", "filename": "src/test/ui/issue-22644.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fissue-22644.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fissue-22644.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.rs?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -14,5 +14,18 @@ fn main() {\n \n     println!(\"{}\", a as usize > b);\n     println!(\"{}\", a as usize < b);\n-    println!(\"{}\", a as usize < 4);\n+    println!(\"{}\", a\n+                   as\n+                   usize\n+                   <\n+                   4);\n+    println!(\"{}\", a\n+\n+\n+                   as\n+\n+\n+                   usize\n+                   <\n+                   5);\n }"}, {"sha": "af61571625b71d51d906248184c70d5187c442fa", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -12,17 +12,37 @@ help: if you want to compare the casted value then write:\n    |                    ^^^^^^^^^^^^\n \n error: `<` is interpreted as a start of generic arguments for `usize`, not a comparison\n-  --> $DIR/issue-22644.rs:17:33\n+  --> $DIR/issue-22644.rs:21:20\n    |\n-17 |     println!(\"{}\", a as usize < 4);\n-   |                               - ^ interpreted as generic argument\n-   |                               |\n-   |                               not interpreted as comparison\n+20 |                    <\n+   |                    - not interpreted as comparison\n+21 |                    4);\n+   |                    ^ interpreted as generic argument\n    |\n help: if you want to compare the casted value then write:\n    |\n-17 |     println!(\"{}\", (a as usize) < 4);\n-   |                    ^^^^^^^^^^^^\n+17 |     println!(\"{}\", (a\n+18 |                    as\n+19 |                    usize)\n+   |\n+\n+error: `<` is interpreted as a start of generic arguments for `usize`, not a comparison\n+  --> $DIR/issue-22644.rs:30:20\n+   |\n+29 |                    <\n+   |                    - not interpreted as comparison\n+30 |                    5);\n+   |                    ^ interpreted as generic argument\n+   |\n+help: if you want to compare the casted value then write:\n+   |\n+22 |     println!(\"{}\", (a\n+23 | \n+24 | \n+25 |                    as\n+26 | \n+27 | \n+ ...\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "4b32ecff2fbdf7afcd91422b4e6b651ea98c771b", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0425]: cannot find value `A` in module `namespaced_enums`\n help: possible candidate is found in another module, you can import it into scope\n    |\n 12 | use namespaced_enums::Foo::A;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error[E0425]: cannot find function `B` in module `namespaced_enums`\n   --> $DIR/enums-are-namespaced-xc.rs:18:31\n@@ -18,7 +18,7 @@ error[E0425]: cannot find function `B` in module `namespaced_enums`\n help: possible candidate is found in another module, you can import it into scope\n    |\n 12 | use namespaced_enums::Foo::B;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error[E0422]: cannot find struct, variant or union type `C` in module `namespaced_enums`\n   --> $DIR/enums-are-namespaced-xc.rs:21:31\n@@ -29,7 +29,7 @@ error[E0422]: cannot find struct, variant or union type `C` in module `namespace\n help: possible candidate is found in another module, you can import it into scope\n    |\n 12 | use namespaced_enums::Foo::C;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: aborting due to 3 previous errors\n "}, {"sha": "6d7406f891c50c98402feb914db854053278f4f9", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,9 @@ error[E0574]: expected struct, variant or union type, found enum `Result`\n help: possible better candidates are found in other modules, you can import them into scope\n    |\n 12 | use std::fmt::Result;\n+   |\n 12 | use std::io::Result;\n+   |\n 12 | use std::thread::Result;\n    |\n "}, {"sha": "2f94dbdc2c596ec35db8f91dbf3f469d7f73e3a5", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use SomeEnum::E;\n-   | ^^^^^^^^^^^^^^^^\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "ddaee451e90e86626b67b457bacc532041df4290", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,9 @@ error[E0405]: cannot find trait `Mul` in this scope\n help: possible candidates are found in other modules, you can import them into scope\n    |\n 11 | use mul1::Mul;\n+   |\n 11 | use mul2::Mul;\n+   |\n 11 | use std::ops::Mul;\n    |\n \n@@ -20,9 +22,13 @@ error[E0412]: cannot find type `Mul` in this scope\n help: possible candidates are found in other modules, you can import them into scope\n    |\n 11 | use mul1::Mul;\n+   |\n 11 | use mul2::Mul;\n+   |\n 11 | use mul3::Mul;\n+   |\n 11 | use mul4::Mul;\n+   |\n and 2 other candidates\n \n error[E0405]: cannot find trait `ThisTraitReallyDoesntExistInAnyModuleReally` in this scope\n@@ -40,7 +46,7 @@ error[E0405]: cannot find trait `Div` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use std::ops::Div;\n-   | ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "a759116c6acff9c80708b67f0f41c22a3533bcd0", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0405]: cannot find trait `T` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    |\n 11 | use foo::bar::T;\n-   | ^^^^^^^^^^^^^^^^\n+   |\n \n error[E0601]: main function not found\n "}, {"sha": "f4d183192b6cb583551d3e6e6c60cbf1a041f069", "filename": "src/test/ui/resolve/issue-21221-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0405]: cannot find trait `OuterTrait` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    |\n 16 | use issue_21221_3::outer::OuterTrait;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "eb71ee893ce710a3f9e33c252d4f455c9e6fe537", "filename": "src/test/ui/resolve/issue-21221-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0405]: cannot find trait `T` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    |\n 16 | use issue_21221_4::T;\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "70b4599dbf8cbbd84d619995bd4aca845c55596a", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0404]: expected trait, found type alias `Foo`\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 12 | use issue_3907::Foo;\n-   | ^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "57b143d34dbd20ef602f50944186aa9448a9dada", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -11,7 +11,7 @@ error[E0423]: expected value, found struct `Z`\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 15 | use m::n::Z;\n-   | ^^^^^^^^^^^^\n+   |\n \n error[E0423]: expected value, found struct `S`\n   --> $DIR/privacy-struct-ctor.rs:36:5\n@@ -25,7 +25,7 @@ error[E0423]: expected value, found struct `S`\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 13 | use m::S;\n-   | ^^^^^^^^^\n+   |\n \n error[E0423]: expected value, found struct `xcrate::S`\n   --> $DIR/privacy-struct-ctor.rs:42:5\n@@ -39,7 +39,7 @@ error[E0423]: expected value, found struct `xcrate::S`\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 13 | use m::S;\n-   | ^^^^^^^^^\n+   |\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:25:9"}, {"sha": "0cd7e1046f6ccc3010f997457b33c52b220a1b25", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=697c85a4f15b8dd560fb1f78129f5bfdd4baf1f4", "patch": "@@ -7,7 +7,7 @@ error[E0404]: expected trait, found type parameter `Add`\n help: possible better candidate is found in another module, you can import it into scope\n    |\n 11 | use std::ops::Add;\n-   | ^^^^^^^^^^^^^^^^^^\n+   |\n \n error[E0601]: main function not found\n "}]}