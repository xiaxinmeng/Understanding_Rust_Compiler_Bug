{"sha": "e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYzNlZmU1YWJiMjAyNWZkYzhhNDkzN2IyMmU3NmZiZDgwOTNkZDU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-10T13:31:14Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-12T09:26:01Z"}, "message": "Filter out imports added by the compiler", "tree": {"sha": "a8566ad844036ced8fb7024bd619f8e08469e145", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8566ad844036ced8fb7024bd619f8e08469e145"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5", "html_url": "https://github.com/rust-lang/rust/commit/e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e022fc2b8eecbc16c090a99efbbd262c37ec962", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e022fc2b8eecbc16c090a99efbbd262c37ec962", "html_url": "https://github.com/rust-lang/rust/commit/0e022fc2b8eecbc16c090a99efbbd262c37ec962"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "4bbf5edeaf3487b931c3e06efad428f6816395ec", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=e3c3efe5abb2025fdc8a4937b22e76fbd8093dd5", "patch": "@@ -24,9 +24,9 @@ use rustc_middle::ty::fold::TypeFolder;\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{self, AdtKind, Lift, Ty, TyCtxt};\n use rustc_mir::const_eval::{is_const_fn, is_min_const_fn, is_unstable_const_fn};\n-use rustc_span::hygiene::MacroKind;\n+use rustc_span::hygiene::{AstPass, MacroKind};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{self, Pos};\n+use rustc_span::{self, ExpnKind, Pos};\n use rustc_typeck::hir_ty_to_ty;\n \n use std::collections::hash_map::Entry;\n@@ -2232,6 +2232,13 @@ impl Clean<Vec<Item>> for doctree::ExternCrate<'_> {\n \n impl Clean<Vec<Item>> for doctree::Import<'_> {\n     fn clean(&self, cx: &DocContext<'_>) -> Vec<Item> {\n+        // We need this comparison because some imports (for std types for example)\n+        // are \"inserted\" as well but directly by the compiler and they should not be\n+        // taken into account.\n+        if self.span.ctxt().outer_expn_data().kind == ExpnKind::AstPass(AstPass::StdImports) {\n+            return Vec::new();\n+        }\n+\n         // We consider inlining the documentation of `pub use` statements, but we\n         // forcefully don't inline if this is not public or if the\n         // #[doc(no_inline)] attribute is present."}]}