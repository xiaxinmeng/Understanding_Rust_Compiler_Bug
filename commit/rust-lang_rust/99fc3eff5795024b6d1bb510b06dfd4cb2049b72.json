{"sha": "99fc3eff5795024b6d1bb510b06dfd4cb2049b72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZmMzZWZmNTc5NTAyNGI2ZDFiYjUxMGIwNmRmZDRjYjIwNDliNzI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-02-06T16:11:48Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-02-14T11:36:51Z"}, "message": "rustc_mir: do not treat NEEDS_DROP as unexpected in qualify_consts.", "tree": {"sha": "5b75eab79c6bd331ed75eaf92e7da64c6c3956b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b75eab79c6bd331ed75eaf92e7da64c6c3956b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99fc3eff5795024b6d1bb510b06dfd4cb2049b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99fc3eff5795024b6d1bb510b06dfd4cb2049b72", "html_url": "https://github.com/rust-lang/rust/commit/99fc3eff5795024b6d1bb510b06dfd4cb2049b72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99fc3eff5795024b6d1bb510b06dfd4cb2049b72/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d6332def3c3091ba3287e5d473f80443dc0a882", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d6332def3c3091ba3287e5d473f80443dc0a882", "html_url": "https://github.com/rust-lang/rust/commit/1d6332def3c3091ba3287e5d473f80443dc0a882"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "960146651cfdd8361efa31cd54d0d0cea44ef7bc", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/99fc3eff5795024b6d1bb510b06dfd4cb2049b72/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fc3eff5795024b6d1bb510b06dfd4cb2049b72/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=99fc3eff5795024b6d1bb510b06dfd4cb2049b72", "patch": "@@ -48,11 +48,6 @@ bitflags::bitflags! {\n         // Refers to temporaries which cannot be promoted as\n         // promote_consts decided they weren't simple enough.\n         const NOT_PROMOTABLE    = 1 << 3;\n-\n-        // Const items can only have MUTABLE_INTERIOR\n-        // and NOT_PROMOTABLE without producing an error.\n-        const CONST_ERROR       = !Qualif::MUTABLE_INTERIOR.bits &\n-                                  !Qualif::NOT_PROMOTABLE.bits;\n     }\n }\n \n@@ -419,13 +414,13 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx> {\n         };\n \n         // Bail out on oon-`const fn` calls or if the callee had errors.\n-        if !is_const_fn || self.qualify_operand(callee).intersects(Qualif::CONST_ERROR) {\n+        if !is_const_fn || self.qualify_operand(callee).intersects(Qualif::NOT_CONST) {\n             return Qualif::NOT_CONST;\n         }\n \n         // Bail out if any arguments had errors.\n         for arg in args {\n-            if self.qualify_operand(arg).intersects(Qualif::CONST_ERROR) {\n+            if self.qualify_operand(arg).intersects(Qualif::NOT_CONST) {\n                 return Qualif::NOT_CONST;\n             }\n         }\n@@ -668,7 +663,7 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n \n         // Account for errors in consts by using the\n         // conservative type qualification instead.\n-        if qualif.intersects(Qualif::CONST_ERROR) {\n+        if qualif.intersects(Qualif::NOT_CONST) {\n             qualif = self.qualifier().qualify_any_value_of_ty(mir.return_ty());\n         }\n "}]}