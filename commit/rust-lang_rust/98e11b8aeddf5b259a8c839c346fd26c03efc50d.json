{"sha": "98e11b8aeddf5b259a8c839c346fd26c03efc50d", "node_id": "C_kwDOAAsO6NoAKDk4ZTExYjhhZWRkZjViMjU5YThjODM5YzM0NmZkMjZjMDNlZmM1MGQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-01T16:07:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-01T16:07:31Z"}, "message": "fix for unions with scalar layout", "tree": {"sha": "bd5ab8a31d3204b466dd6f3c350cc9f81ed6c146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd5ab8a31d3204b466dd6f3c350cc9f81ed6c146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e11b8aeddf5b259a8c839c346fd26c03efc50d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e11b8aeddf5b259a8c839c346fd26c03efc50d", "html_url": "https://github.com/rust-lang/rust/commit/98e11b8aeddf5b259a8c839c346fd26c03efc50d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e11b8aeddf5b259a8c839c346fd26c03efc50d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e2715074ed9712a5796ea4f66d9e59713ead06f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e2715074ed9712a5796ea4f66d9e59713ead06f", "html_url": "https://github.com/rust-lang/rust/commit/6e2715074ed9712a5796ea4f66d9e59713ead06f"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "38dc65338371a7774d306af083b1f89bd17864bb", "filename": "compiler/rustc_middle/src/ty/layout_sanity_check.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98e11b8aeddf5b259a8c839c346fd26c03efc50d/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout_sanity_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e11b8aeddf5b259a8c839c346fd26c03efc50d/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout_sanity_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout_sanity_check.rs?ref=98e11b8aeddf5b259a8c839c346fd26c03efc50d", "patch": "@@ -91,6 +91,10 @@ pub(super) fn sanity_check_layout<'tcx>(\n                         FieldsShape::Primitive => {\n                             // Fine.\n                         }\n+                        FieldsShape::Union(..) => {\n+                            // FIXME: I guess we could also check something here? Like, look at all fields?\n+                            return;\n+                        }\n                         FieldsShape::Arbitrary { .. } => {\n                             // Should be an enum, the only field is the discriminant.\n                             assert!("}]}