{"sha": "700c518f2afd4b759fb54b867aee62660188d870", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMGM1MThmMmFmZDRiNzU5ZmI1NGI4NjdhZWU2MjY2MDE4OGQ4NzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-17T14:45:58Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T14:07:56Z"}, "message": "Modify parser to require `isize`/`usize` suffixes.", "tree": {"sha": "4ffedf4e0812c9b47b7fdd376e4797b6cd20ffb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ffedf4e0812c9b47b7fdd376e4797b6cd20ffb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/700c518f2afd4b759fb54b867aee62660188d870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/700c518f2afd4b759fb54b867aee62660188d870", "html_url": "https://github.com/rust-lang/rust/commit/700c518f2afd4b759fb54b867aee62660188d870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/700c518f2afd4b759fb54b867aee62660188d870/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5", "html_url": "https://github.com/rust-lang/rust/commit/dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "e3bed496647cf04cd65009cce41c0286141acd5c", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/700c518f2afd4b759fb54b867aee62660188d870/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700c518f2afd4b759fb54b867aee62660188d870/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=700c518f2afd4b759fb54b867aee62660188d870", "patch": "@@ -701,14 +701,12 @@ pub fn integer_lit(s: &str, suffix: Option<&str>, sd: &SpanHandler, sp: Span) ->\n     if let Some(suf) = suffix {\n         if suf.is_empty() { sd.span_bug(sp, \"found empty literal suffix in Some\")}\n         ty = match suf {\n-            \"i\"   => ast::SignedIntLit(ast::TyIs(true), ast::Plus),\n-            \"is\"   => ast::SignedIntLit(ast::TyIs(false), ast::Plus),\n+            \"isize\" => ast::SignedIntLit(ast::TyIs(false), ast::Plus),\n             \"i8\"  => ast::SignedIntLit(ast::TyI8, ast::Plus),\n             \"i16\" => ast::SignedIntLit(ast::TyI16, ast::Plus),\n             \"i32\" => ast::SignedIntLit(ast::TyI32, ast::Plus),\n             \"i64\" => ast::SignedIntLit(ast::TyI64, ast::Plus),\n-            \"u\"   => ast::UnsignedIntLit(ast::TyUs(true)),\n-            \"us\"   => ast::UnsignedIntLit(ast::TyUs(false)),\n+            \"usize\" => ast::UnsignedIntLit(ast::TyUs(false)),\n             \"u8\"  => ast::UnsignedIntLit(ast::TyU8),\n             \"u16\" => ast::UnsignedIntLit(ast::TyU16),\n             \"u32\" => ast::UnsignedIntLit(ast::TyU32),\n@@ -722,6 +720,17 @@ pub fn integer_lit(s: &str, suffix: Option<&str>, sd: &SpanHandler, sp: Span) ->\n                                               &suf[1..]));\n                 } else {\n                     sd.span_err(sp, &*format!(\"illegal suffix `{}` for numeric literal\", suf));\n+\n+                    if suf == \"i\" || suf == \"is\" {\n+                        sd.span_help(sp, \"per RFC 544/573, the suffix \\\n+                                          for `isize` literals is now `isize`\");\n+                    } else if suf == \"u\" || suf == \"us\" {\n+                        sd.span_help(sp, \"per RFC 544/573, the suffix \\\n+                                          for `usize` literals is now `usize`\");\n+                    } else {\n+                        sd.span_help(sp, \"the suffix must be one of the integral types \\\n+                                          (`u32`, `isize`, etc)\");\n+                    }\n                 }\n \n                 ty"}]}