{"sha": "900bc1298df011bfb094858b11cdfd8d6b01418c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMGJjMTI5OGRmMDExYmZiMDk0ODU4YjExY2RmZDhkNmIwMTQxOGM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2011-12-24T19:54:07Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2011-12-24T19:54:07Z"}, "message": "Merge pull request #1377 from Lenny222/icu\n\nstd::unicode::icu: add \"is*\" functions + unit test", "tree": {"sha": "0b009f3e87a0e075e5a7c800d1c34aa75cf1adbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b009f3e87a0e075e5a7c800d1c34aa75cf1adbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/900bc1298df011bfb094858b11cdfd8d6b01418c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/900bc1298df011bfb094858b11cdfd8d6b01418c", "html_url": "https://github.com/rust-lang/rust/commit/900bc1298df011bfb094858b11cdfd8d6b01418c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/900bc1298df011bfb094858b11cdfd8d6b01418c/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47271ab4c85ecc4b7c3f1c079f8bc221a5d7ca0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/47271ab4c85ecc4b7c3f1c079f8bc221a5d7ca0d", "html_url": "https://github.com/rust-lang/rust/commit/47271ab4c85ecc4b7c3f1c079f8bc221a5d7ca0d"}, {"sha": "d812d06bc8d8f5c655b206838b64b133c83a7975", "url": "https://api.github.com/repos/rust-lang/rust/commits/d812d06bc8d8f5c655b206838b64b133c83a7975", "html_url": "https://github.com/rust-lang/rust/commit/d812d06bc8d8f5c655b206838b64b133c83a7975"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "fdb275111dc72503b2874ba2faae83bc56c51379", "filename": "src/libstd/unicode.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/900bc1298df011bfb094858b11cdfd8d6b01418c/src%2Flibstd%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/900bc1298df011bfb094858b11cdfd8d6b01418c/src%2Flibstd%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funicode.rs?ref=900bc1298df011bfb094858b11cdfd8d6b01418c", "patch": "@@ -152,6 +152,12 @@ mod icu {\n     #[abi = \"cdecl\"]\n     native mod libicu {\n         pure fn u_hasBinaryProperty(c: UChar32, which: UProperty) -> UBool;\n+        pure fn u_isdigit(c: UChar32) -> UBool;\n+        pure fn u_islower(c: UChar32) -> UBool;\n+        pure fn u_isspace(c: UChar32) -> UBool;\n+        pure fn u_isupper(c: UChar32) -> UBool;\n+        pure fn u_tolower(c: UChar32) -> UChar32;\n+        pure fn u_toupper(c: UChar32) -> UChar32;\n     }\n }\n \n@@ -164,3 +170,40 @@ pure fn is_XID_continue(c: char) -> bool {\n     ret icu::libicu::u_hasBinaryProperty(c, icu::UCHAR_XID_START)\n         == icu::TRUE;\n }\n+\n+/*\n+Function: is_digit\n+\n+Returns true if a character is a digit.\n+*/\n+pure fn is_digit(c: char) -> bool {\n+    ret icu::libicu::u_isdigit(c) == icu::TRUE;\n+}\n+\n+/*\n+Function: is_lower\n+\n+Returns true if a character is a lowercase letter.\n+*/\n+pure fn is_lower(c: char) -> bool {\n+    ret icu::libicu::u_islower(c) == icu::TRUE;\n+}\n+\n+/*\n+Function: is_space\n+\n+Returns true if a character is space.\n+*/\n+pure fn is_space(c: char) -> bool {\n+    ret icu::libicu::u_isspace(c) == icu::TRUE;\n+}\n+\n+/*\n+Function: is_upper\n+\n+Returns true if a character is an uppercase letter.\n+*/\n+pure fn is_upper(c: char) -> bool {\n+    ret icu::libicu::u_isupper(c) == icu::TRUE;\n+}\n+"}, {"sha": "ff2af295a266d95e435def798988d2b68eb4c04b", "filename": "src/test/stdtest/stdtest.rc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/900bc1298df011bfb094858b11cdfd8d6b01418c/src%2Ftest%2Fstdtest%2Fstdtest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/900bc1298df011bfb094858b11cdfd8d6b01418c/src%2Ftest%2Fstdtest%2Fstdtest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstdtest.rc?ref=900bc1298df011bfb094858b11cdfd8d6b01418c", "patch": "@@ -39,6 +39,10 @@ mod test;\n mod tri;\n mod treemap;\n mod uint;\n+\n+#[cfg(unicode)]\n+mod unicode;\n+\n mod unsafe;\n mod uv;\n mod vec;"}, {"sha": "7c3c65685b6e41ddeae291dd107ff69fc3c82d6f", "filename": "src/test/stdtest/unicode.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/900bc1298df011bfb094858b11cdfd8d6b01418c/src%2Ftest%2Fstdtest%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/900bc1298df011bfb094858b11cdfd8d6b01418c/src%2Ftest%2Fstdtest%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Funicode.rs?ref=900bc1298df011bfb094858b11cdfd8d6b01418c", "patch": "@@ -0,0 +1,30 @@\n+import core::*;\n+\n+use std;\n+\n+import unicode;\n+\n+#[test]\n+fn test_is_digit() {\n+    assert (unicode::icu::is_digit('0'));\n+    assert (!unicode::icu::is_digit('m'));\n+}\n+\n+#[test]\n+fn test_is_lower() {\n+    assert (unicode::icu::is_lower('m'));\n+    assert (!unicode::icu::is_lower('M'));\n+}\n+\n+#[test]\n+fn test_is_space() {\n+    assert (unicode::icu::is_space(' '));\n+    assert (!unicode::icu::is_space('m'));\n+}\n+\n+#[test]\n+fn test_is_upper() {\n+    assert (unicode::icu::is_upper('M'));\n+    assert (!unicode::icu::is_upper('m'));\n+}\n+"}]}