{"sha": "b659fe3e5000c88d8d9be9af39355346f33acd58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NTlmZTNlNTAwMGM4OGQ4ZDliZTlhZjM5MzU1MzQ2ZjMzYWNkNTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-04T07:25:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-04T07:25:56Z"}, "message": "auto merge of #8951 : chris-morgan/rust/vim-update-highlighting, r=alexcrichton\n\nSeveral changes with appropriate commit messages to explain them.\r\n\r\nThe final two commits, highlighting everything in the prelude, may be a little controversial. I think it's the sensible way forward with it.", "tree": {"sha": "2ccba325a69bc16290030ee0f39b13a2e89dd124", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ccba325a69bc16290030ee0f39b13a2e89dd124"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b659fe3e5000c88d8d9be9af39355346f33acd58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b659fe3e5000c88d8d9be9af39355346f33acd58", "html_url": "https://github.com/rust-lang/rust/commit/b659fe3e5000c88d8d9be9af39355346f33acd58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b659fe3e5000c88d8d9be9af39355346f33acd58/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64ff31558480f2bf0dea71a0c3e2880387edb826", "url": "https://api.github.com/repos/rust-lang/rust/commits/64ff31558480f2bf0dea71a0c3e2880387edb826", "html_url": "https://github.com/rust-lang/rust/commit/64ff31558480f2bf0dea71a0c3e2880387edb826"}, {"sha": "9f6180413dd08a77397353269f77024168a71429", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6180413dd08a77397353269f77024168a71429", "html_url": "https://github.com/rust-lang/rust/commit/9f6180413dd08a77397353269f77024168a71429"}], "stats": {"total": 124, "additions": 89, "deletions": 35}, "files": [{"sha": "281a63ef40ae40c6764a7a4d3cf7e8bcfb861d1c", "filename": "src/etc/vim/ftplugin/rust.vim", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b659fe3e5000c88d8d9be9af39355346f33acd58/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/b659fe3e5000c88d8d9be9af39355346f33acd58/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim?ref=b659fe3e5000c88d8d9be9af39355346f33acd58", "patch": "@@ -21,7 +21,9 @@ else\n \tsetlocal comments=s0:/*!,m:\\ ,ex:*/,s1:/*,mb:*,ex:*/,:///,://!,://\n endif\n setlocal commentstring=//%s\n-setlocal formatoptions-=t formatoptions+=croqnlj\n+setlocal formatoptions-=t formatoptions+=croqnl\n+\" j was only added in 7.3.541, so stop complaints about its nonexistence\n+silent! setlocal formatoptions+=j\n \n \" This includeexpr isn't perfect, but it's a good start\n setlocal includeexpr=substitute(v:fname,'::','/','g')"}, {"sha": "0a95f31b0675d41f90ee7ef25351b6ec9e163c2a", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 86, "deletions": 34, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/b659fe3e5000c88d8d9be9af39355346f33acd58/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/b659fe3e5000c88d8d9be9af39355346f33acd58/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=b659fe3e5000c88d8d9be9af39355346f33acd58", "patch": "@@ -3,14 +3,16 @@\n \" Maintainer:   Patrick Walton <pcwalton@mozilla.com>\n \" Maintainer:   Ben Blum <bblum@cs.cmu.edu>\n \" Maintainer:   Chris Morgan <me@chrismorgan.info>\n-\" Last Change:  2013 Aug 1\n+\" Last Change:  2013 Sep 4\n \n if version < 600\n   syntax clear\n elseif exists(\"b:current_syntax\")\n   finish\n endif\n \n+\" Syntax definitions {{{1\n+\" Basic keywords {{{2\n syn keyword   rustConditional match if else\n syn keyword   rustOperator    as\n \n@@ -32,47 +34,90 @@ syn keyword   rustStorage     const mut ref static\n syn match     rustIdentifier  contains=rustIdentifierPrime \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n \n-\" reserved\n+\" Reserved (but not yet used) keywords {{{2\n syn keyword   rustKeyword     be yield typeof\n \n+\" Built-in types {{{2\n syn keyword   rustType        int uint float char bool u8 u16 u32 u64 f32\n syn keyword   rustType        f64 i8 i16 i32 i64 str Self\n-syn keyword   rustType        Option Either\n-\n-\" Types from libc\n-syn keyword   rustType        c_float c_double c_void FILE fpos_t\n-syn keyword   rustType        DIR dirent\n-syn keyword   rustType        c_char c_schar c_uchar\n-syn keyword   rustType        c_short c_ushort c_int c_uint c_long c_ulong\n-syn keyword   rustType        size_t ptrdiff_t clock_t time_t\n-syn keyword   rustType        c_longlong c_ulonglong intptr_t uintptr_t\n-syn keyword   rustType        off_t dev_t ino_t pid_t mode_t ssize_t\n-\n-syn keyword   rustTrait       Const Copy Send Owned Sized \" inherent traits\n-syn keyword   rustTrait       Clone Decodable Encodable IterBytes Rand ToStr\n-syn keyword   rustTrait       Eq Ord TotalEq TotalOrd Num Ptr\n-syn keyword   rustTrait       Drop Add Sub Mul Quot Rem Neg BitAnd BitOr\n-syn keyword   rustTrait       BitXor Shl Shr Index\n+\n+\" Things from the prelude (src/libstd/prelude.rs) {{{2\n+\" This section is just straight transformation of the contents of the prelude,\n+\" to make it easy to update.\n+\n+\" Core operators {{{3\n+syn keyword   rustEnum        Either\n+syn keyword   rustEnumVariant Left Right\n+syn keyword   rustTrait       Sized\n+syn keyword   rustTrait       Freeze Send\n+syn keyword   rustTrait       Add Sub Mul Div Rem Neg Not\n+syn keyword   rustTrait       BitAnd BitOr BitXor\n+syn keyword   rustTrait       Drop\n+syn keyword   rustTrait       Shl Shr Index\n+syn keyword   rustEnum        Option\n+syn keyword   rustEnumVariant Some None\n+syn keyword   rustEnum        Result\n+syn keyword   rustEnumVariant Ok Err\n+\n+\" Functions {{{3\n+\"syn keyword rustFunction print println\n+\"syn keyword rustFunction range\n+\n+\" Types and traits {{{3\n+syn keyword rustTrait ToCStr\n+syn keyword rustTrait Clone DeepClone\n+syn keyword rustTrait Eq ApproxEq Ord TotalEq TotalOrd Ordering Equiv\n+syn keyword rustEnumVariant Less Equal Greater\n+syn keyword rustTrait Char\n+syn keyword rustTrait Container Mutable Map MutableMap Set MutableSet\n+syn keyword rustTrait Hash\n+syn keyword rustTrait Times\n+syn keyword rustTrait FromIterator Extendable\n+syn keyword rustTrait Iterator DoubleEndedIterator RandomAccessIterator ClonableIterator\n+syn keyword rustTrait OrdIterator MutableDoubleEndedIterator ExactSize\n+syn keyword rustTrait Num NumCast CheckedAdd CheckedSub CheckedMul\n+syn keyword rustTrait Orderable Signed Unsigned Round\n+syn keyword rustTrait Algebraic Trigonometric Exponential Hyperbolic\n+syn keyword rustTrait Integer Fractional Real RealExt\n+syn keyword rustTrait Bitwise BitCount Bounded\n+syn keyword rustTrait Primitive Int Float ToStrRadix\n+syn keyword rustTrait GenericPath\n+syn keyword rustTrait Path\n+syn keyword rustTrait PosixPath\n+syn keyword rustTrait WindowsPath\n+syn keyword rustTrait RawPtr\n+syn keyword rustTrait Ascii AsciiCast OwnedAsciiCast AsciiStr ToBytesConsume\n+syn keyword rustTrait Str StrVector StrSlice OwnedStr\n+syn keyword rustTrait FromStr\n+syn keyword rustTrait IterBytes\n+syn keyword rustTrait ToStr ToStrConsume\n+syn keyword rustTrait CopyableTuple ImmutableTuple\n+syn keyword rustTrait CloneableTuple1 ImmutableTuple1\n+syn keyword rustTrait CloneableTuple2 CloneableTuple3 CloneableTuple4 CloneableTuple5\n+syn keyword rustTrait CloneableTuple6 CloneableTuple7 CloneableTuple8 CloneableTuple9\n+syn keyword rustTrait CloneableTuple10 CloneableTuple11 CloneableTuple12\n+syn keyword rustTrait ImmutableTuple2 ImmutableTuple3 ImmutableTuple4 ImmutableTuple5\n+syn keyword rustTrait ImmutableTuple6 ImmutableTuple7 ImmutableTuple8 ImmutableTuple9\n+syn keyword rustTrait ImmutableTuple10 ImmutableTuple11 ImmutableTuple12\n+syn keyword rustTrait Vector VectorVector CopyableVector ImmutableVector\n+syn keyword rustTrait ImmutableEqVector ImmutableTotalOrdVector ImmutableCopyableVector\n+syn keyword rustTrait OwnedVector OwnedCopyableVector OwnedEqVector MutableVector\n+syn keyword rustTrait Reader ReaderUtil Writer WriterUtil\n+syn keyword rustTrait Default\n+\n+\"syn keyword rustFunction stream\n+syn keyword rustTrait Port Chan GenericChan GenericSmartChan GenericPort Peekable\n+\"syn keyword rustFunction spawn\n \n syn keyword   rustSelf        self\n syn keyword   rustBoolean     true false\n \n syn keyword   rustConstant    Some None       \" option\n syn keyword   rustConstant    Left Right      \" either\n syn keyword   rustConstant    Ok Err          \" result\n-syn keyword   rustConstant    Success Failure \" task\n-syn keyword   rustConstant    Cons Nil        \" list\n-\" syn keyword   rustConstant    empty node      \" tree\n-\n-\" Constants from libc\n-syn keyword   rustConstant    EXIT_FAILURE EXIT_SUCCESS RAND_MAX\n-syn keyword   rustConstant    EOF SEEK_SET SEEK_CUR SEEK_END _IOFBF _IONBF\n-syn keyword   rustConstant    _IOLBF BUFSIZ FOPEN_MAX FILENAME_MAX L_tmpnam\n-syn keyword   rustConstant    TMP_MAX O_RDONLY O_WRONLY O_RDWR O_APPEND O_CREAT\n-syn keyword   rustConstant    O_EXCL O_TRUNC S_IFIFO S_IFCHR S_IFBLK S_IFDIR\n-syn keyword   rustConstant    S_IFREG S_IFMT S_IEXEC S_IWRITE S_IREAD S_IRWXU\n-syn keyword   rustConstant    S_IXUSR S_IWUSR S_IRUSR F_OK R_OK W_OK X_OK\n-syn keyword   rustConstant    STDIN_FILENO STDOUT_FILENO STDERR_FILENO\n+syn keyword   rustConstant    Less Equal Greater \" Ordering\n+\n+\" Other syntax {{{2\n \n \" If foo::bar changes to foo.bar, change this (\"::\" to \"\\.\").\n \" If foo::bar changes to Foo::bar, change this (first \"\\w\" to \"\\u\").\n@@ -102,7 +147,8 @@ syn match     rustMacro       '#\\w\\(\\w\\)*' contains=rustAssert,rustFail\n syn match     rustFormat      display \"%\\(\\d\\+\\$\\)\\=[-+' #0*]*\\(\\d*\\|\\*\\|\\*\\d\\+\\$\\)\\(\\.\\(\\d*\\|\\*\\|\\*\\d\\+\\$\\)\\)\\=\\([hlLjzt]\\|ll\\|hh\\)\\=\\([aAbdiuoxXDOUfFeEgGcCsSpn?]\\|\\[\\^\\=.[^]]*\\]\\)\" contained\n syn match     rustFormat      display \"%%\" contained\n syn match     rustSpecial     display contained /\\\\\\([nrt\\\\'\"]\\|x\\x\\{2}\\|u\\x\\{4}\\|U\\x\\{8}\\)/\n-syn region    rustString      start=+L\\=\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+ contains=rustTodo,rustFormat,rustSpecial\n+syn match     rustStringContinuation display contained /\\\\\\n\\s*/\n+syn region    rustString      start=+\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+ contains=rustTodo,rustFormat,rustSpecial,rustStringContinuation\n \n syn region    rustAttribute   start=\"#\\[\" end=\"\\]\" contains=rustString,rustDeriving\n syn region    rustDeriving    start=\"deriving(\" end=\")\" contained contains=rustTrait\n@@ -137,18 +183,20 @@ syn match     rustLifetime    display \"\\'\\%([^[:cntrl:][:space:][:punct:][:digit\n syn match   rustCharacter   /'\\([^'\\\\]\\|\\\\\\([nrt\\\\'\"]\\|x\\x\\{2}\\|u\\x\\{4}\\|U\\x\\{8}\\)\\)'/ contains=rustSpecial\n \n syn region    rustCommentML   start=\"/\\*\" end=\"\\*/\" contains=rustTodo\n-syn region    rustComment     start=\"//\" skip=\"\\\\$\" end=\"$\" contains=rustTodo keepend\n+syn region    rustComment     start=\"//\" end=\"$\" contains=rustTodo keepend\n syn region    rustCommentMLDoc start=\"/\\*\\%(!\\|\\*/\\@!\\)\" end=\"\\*/\" contains=rustTodo\n-syn region    rustCommentDoc  start=\"//[/!]\" skip=\"\\\\$\" end=\"$\" contains=rustTodo keepend\n+syn region    rustCommentDoc  start=\"//[/!]\" end=\"$\" contains=rustTodo keepend\n \n syn keyword rustTodo contained TODO FIXME XXX NB NOTE\n \n+\" Folding rules {{{2\n \" Trivial folding rules to begin with.\n \" TODO: use the AST to make really good folding\n syn region rustFoldBraces start=\"{\" end=\"}\" transparent fold\n \" If you wish to enable this, setlocal foldmethod=syntax\n \" It's not enabled by default as it would drive some people mad.\n \n+\" Default highlighting {{{1\n hi def link rustHexNumber       rustNumber\n hi def link rustBinNumber       rustNumber\n hi def link rustIdentifierPrime rustIdentifier\n@@ -157,10 +205,13 @@ hi def link rustTrait           rustType\n hi def link rustSigil         StorageClass\n hi def link rustFormat        Special\n hi def link rustSpecial       Special\n+hi def link rustStringContinuation Special\n hi def link rustString        String\n hi def link rustCharacter     Character\n hi def link rustNumber        Number\n hi def link rustBoolean       Boolean\n+hi def link rustEnum          rustType\n+hi def link rustEnumVariant   rustConstant\n hi def link rustConstant      Constant\n hi def link rustSelf          Constant\n hi def link rustFloat         Float\n@@ -171,6 +222,7 @@ hi def link rustIdentifier    Identifier\n hi def link rustCapsIdent     rustIdentifier\n hi def link rustModPath       Include\n hi def link rustModPathSep    Delimiter\n+hi def link rustFunction      Function\n hi def link rustFuncName      Function\n hi def link rustFuncCall      Function\n hi def link rustCommentMLDoc  rustCommentDoc"}]}