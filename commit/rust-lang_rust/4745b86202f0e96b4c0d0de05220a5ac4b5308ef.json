{"sha": "4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NDViODYyMDJmMGU5NmI0YzBkMGRlMDUyMjBhNWFjNGI1MzA4ZWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-21T23:28:51Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-21T23:47:23Z"}, "message": "Accept more invalid code that is close to correct fields", "tree": {"sha": "1c7f7912efac2e75ae727afc4000956438962697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c7f7912efac2e75ae727afc4000956438962697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "html_url": "https://github.com/rust-lang/rust/commit/4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "defa61f3fb2612358b57c206c5e16da2751e6deb", "url": "https://api.github.com/repos/rust-lang/rust/commits/defa61f3fb2612358b57c206c5e16da2751e6deb", "html_url": "https://github.com/rust-lang/rust/commit/defa61f3fb2612358b57c206c5e16da2751e6deb"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "745f2c7dc19e4bde48b2457eb78837459369c12c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "patch": "@@ -2695,6 +2695,21 @@ impl<'a> Parser<'a> {\n                 break;\n             }\n \n+            let mut recovery_field = None;\n+            if let token::Ident(ident, _) = self.token {\n+                if !self.token.is_reserved_ident() && self.look_ahead(1, |t| *t == token::Colon) {\n+                    // Use in case of error after field-looking code: `S { foo: () with a }`\n+                    let mut ident = ident.clone();\n+                    ident.span = self.span;\n+                    recovery_field = Some(ast::Field {\n+                        ident,\n+                        span: self.span,\n+                        expr: self.mk_expr(self.span, ExprKind::Err, ThinVec::new()),\n+                        is_shorthand: false,\n+                        attrs: ThinVec::new(),\n+                    });\n+                }\n+            }\n             let mut parsed_field = None;\n             match self.parse_field() {\n                 Ok(f) => parsed_field = Some(f),\n@@ -2716,11 +2731,14 @@ impl<'a> Parser<'a> {\n \n             match self.expect_one_of(&[token::Comma],\n                                      &[token::CloseDelim(token::Brace)]) {\n-                Ok(()) => if let Some(f) = parsed_field {\n-                    // only include the field if there's no parse error\n+                Ok(()) => if let Some(f) = parsed_field.or(recovery_field) {\n+                    // only include the field if there's no parse error for the field name\n                     fields.push(f);\n                 }\n                 Err(mut e) => {\n+                    if let Some(f) = recovery_field {\n+                        fields.push(f);\n+                    }\n                     e.span_label(struct_sp, \"while parsing this struct\");\n                     e.emit();\n                     self.recover_stmt_(SemiColonMode::Comma, BlockMode::Ignore);"}, {"sha": "2c1e152dcee750ceb10b086d0428453405c048e1", "filename": "src/test/ui/parser/removed-syntax-with-1.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.rs?ref=4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "patch": "@@ -5,7 +5,6 @@ fn main() {\n     }\n \n     let a = S { foo: (), bar: () };\n-    let b = S { foo: () with a };\n+    let b = S { foo: () with a, bar: () };\n     //~^ ERROR expected one of `,`, `.`, `?`, `}`, or an operator, found `with`\n-    //~| ERROR missing fields `bar`, `foo` in initializer of `main::S`\n }"}, {"sha": "a157873916a649779a6bf94b8ee84ebc692bb4d9", "filename": "src/test/ui/parser/removed-syntax-with-1.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4745b86202f0e96b4c0d0de05220a5ac4b5308ef/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-with-1.stderr?ref=4745b86202f0e96b4c0d0de05220a5ac4b5308ef", "patch": "@@ -1,17 +1,10 @@\n error: expected one of `,`, `.`, `?`, `}`, or an operator, found `with`\n   --> $DIR/removed-syntax-with-1.rs:8:25\n    |\n-LL |     let b = S { foo: () with a };\n+LL |     let b = S { foo: () with a, bar: () };\n    |             -           ^^^^ expected one of `,`, `.`, `?`, `}`, or an operator here\n    |             |\n    |             while parsing this struct\n \n-error[E0063]: missing fields `bar`, `foo` in initializer of `main::S`\n-  --> $DIR/removed-syntax-with-1.rs:8:13\n-   |\n-LL |     let b = S { foo: () with a };\n-   |             ^ missing `bar`, `foo`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0063`."}]}