{"sha": "8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzODFjYmFiMWE4MGIyYzcxZGY3OWZiOGMzM2Y0ODBjZmJjYTUyYmI=", "commit": {"author": {"name": "Yuki OKUSHI", "email": "huyuumi.dev@gmail.com", "date": "2019-03-30T09:50:19Z"}, "committer": {"name": "Yuki OKUSHI", "email": "huyuumi.dev@gmail.com", "date": "2019-03-30T09:50:19Z"}, "message": "Add target_mcount option", "tree": {"sha": "35973d86945f08e87707f7e03fae879cc883ce32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35973d86945f08e87707f7e03fae879cc883ce32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "html_url": "https://github.com/rust-lang/rust/commit/8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261a91519d57590283b250ea9dc1d924b01d4dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/261a91519d57590283b250ea9dc1d924b01d4dd6", "html_url": "https://github.com/rust-lang/rust/commit/261a91519d57590283b250ea9dc1d924b01d4dd6"}], "stats": {"total": 166, "additions": 127, "deletions": 39}, "files": [{"sha": "59a285736412b2007ee216e9555445eb7f9a60ea", "filename": "src/librustc_target/spec/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01_mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "781b1322f5acf4f52a16163bf036214aa5baa2f9", "filename": "src/librustc_target/spec/aarch64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01_mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "455cbebb91e28e551217c61833776fb82ebf3809", "filename": "src/librustc_target/spec/aarch64_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "1173d18634e1d228e9a2d9fce4f5bc8d04042cf3", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n         options: TargetOptions {\n             features: \"+strict-align,+v6\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "6fc7c46be3b1df1d271a36f99f79ee5db60ff9fe", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n         options: TargetOptions {\n             features: \"+strict-align,+v6,+vfp2\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "7a2a4e85e4a1e00078f6133ac47e10404f2f997c", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "b7aa1952cb0b43110afa56fba39bced274fe4797", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "59c15f1610de5a6ca4fd689fe3072de3fca4dead", "filename": "src/librustc_target/spec/armv4t_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> TargetResult {\n             // Atomic operations provided by compiler-builtins\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "a1a61a69d0521de1c3ceb5be77a2246f1c5b0cbf", "filename": "src/librustc_target/spec/armv5te_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> TargetResult {\n             // Atomic operations provided by compiler-builtins\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "9b44a54715e7ad0abe49c3d0a74cb6e87540eedd", "filename": "src/librustc_target/spec/armv5te_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> TargetResult {\n             // Atomic operations provided by compiler-builtins\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "e706c8281d236d7f561777a03fe579030f2fff9d", "filename": "src/librustc_target/spec/armv6_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_freebsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n             features: \"+v6,+vfp2\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "b056776bdfb8b0d85715af26f7531e6e8a3fb44c", "filename": "src/librustc_target/spec/armv6_unknown_netbsd_eabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n         options: TargetOptions {\n             features: \"+v6,+vfp2\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"__mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "70d4985ab860d7d03d4c5fd4c4dd620f6f63aca0", "filename": "src/librustc_target/spec/armv7_unknown_cloudabi_eabihf.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();\n@@ -19,6 +19,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"\\01mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "0f9ee5d44a959ab77fdce0fb65ce63c1c8bb8970", "filename": "src/librustc_target/spec/armv7_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_freebsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n             features: \"+v7,+vfp3,+d16,+thumb2,-neon\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "afba6f608ee0422ef3b6f9f12be671e24fcaca67", "filename": "src/librustc_target/spec/armv7_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> TargetResult {\n             cpu: \"generic\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "516d0401adf58d3abd0c64792144aad6bd3a5414", "filename": "src/librustc_target/spec/armv7_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -26,6 +26,7 @@ pub fn target() -> TargetResult {\n             cpu: \"generic\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\01mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "e2d55e9317b76ab965b6ffdc7706134875ca1907", "filename": "src/librustc_target/spec/armv7_unknown_netbsd_eabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> TargetResult {\n             cpu: \"generic\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"__mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "a82ff33ce1db896249afd83e7eb33a1629f5c98d", "filename": "src/librustc_target/spec/i686_apple_darwin.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();\n@@ -19,6 +19,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"apple\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"\\01mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "99130e93dad6122c472a53ad7b3dc1f1875edceb", "filename": "src/librustc_target/spec/i686_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -18,6 +18,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "b2ea8a6f38814878db9d96236985de0f9168afce", "filename": "src/librustc_target/spec/mips64_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r2\".to_string(),\n             features: \"+mips64r2\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "48aea4a39b0a4f3f05dcadcd9f063994bb1c48b0", "filename": "src/librustc_target/spec/mips64el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r2\".to_string(),\n             features: \"+mips64r2\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "e360abdb38d3fe5130c9baf900c8a3bee14f0676", "filename": "src/librustc_target/spec/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "3f5428de9507446aa5759d93d2ff5f9ed7741650", "filename": "src/librustc_target/spec/mips_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "8116b8c9cc8403ea1e183efa0124345735603be2", "filename": "src/librustc_target/spec/mips_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+soft-float\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "7e9d8cd942a238a702d5f3f1d22f14fc874c6646", "filename": "src/librustc_target/spec/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "56ad2940feba81ea0744df4896cf14fc21495f9a", "filename": "src/librustc_target/spec/mipsel_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "a8152011efa7940cf601f05a0d26ec41a33acc16", "filename": "src/librustc_target/spec/mipsel_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+soft-float\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "36b83c63fca28f1050ec095235a967ef98c85d25", "filename": "src/librustc_target/spec/mipsisa32r6_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r6\".to_string(),\n             features: \"+mips32r6\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "717ae3f1d20e19934ad735efc3e45a3858228d9d", "filename": "src/librustc_target/spec/mipsisa32r6el_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r6\".to_string(),\n             features: \"+mips32r6\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "3f7d233e55fbcd7e23ea71da36af41e027564e8f", "filename": "src/librustc_target/spec/mipsisa64r6_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r6\".to_string(),\n             features: \"+mips64r6\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "4f41b8323a99a5724866df8650d2ddee8ce61e6f", "filename": "src/librustc_target/spec/mipsisa64r6el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r6\".to_string(),\n             features: \"+mips64r6\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "7654d3932e33bd4f4443706d1786b28f0c606ec0", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -759,7 +759,10 @@ pub struct TargetOptions {\n     /// to opt out. The default is \"aliases\".\n     ///\n     /// Workaround for: https://github.com/rust-lang/rust/issues/57356\n-    pub merge_functions: MergeFunctions\n+    pub merge_functions: MergeFunctions,\n+\n+    /// Use platform dependent mcount function\n+    pub target_mcount: String\n }\n \n impl Default for TargetOptions {\n@@ -843,6 +846,7 @@ impl Default for TargetOptions {\n             simd_types_indirect: true,\n             override_export_symbols: None,\n             merge_functions: MergeFunctions::Aliases,\n+            target_mcount: \"mcount\".to_string(),\n         }\n     }\n }\n@@ -1148,6 +1152,7 @@ impl Target {\n         key!(simd_types_indirect, bool);\n         key!(override_export_symbols, opt_list);\n         key!(merge_functions, MergeFunctions)?;\n+        key!(target_mcount);\n \n         if let Some(array) = obj.find(\"abi-blacklist\").and_then(Json::as_array) {\n             for name in array.iter().filter_map(|abi| abi.as_string()) {\n@@ -1362,6 +1367,7 @@ impl ToJson for Target {\n         target_option_val!(simd_types_indirect);\n         target_option_val!(override_export_symbols);\n         target_option_val!(merge_functions);\n+        target_option_val!(target_mcount);\n \n         if default.abi_blacklist != self.options.abi_blacklist {\n             d.insert(\"abi-blacklist\".to_string(), self.options.abi_blacklist.iter()"}, {"sha": "fc881db6b09063d7cc863d2f9cc900c3c2720fa7", "filename": "src/librustc_target/spec/powerpc64_unknown_freebsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "89e68ab30620008ea440c7c3c73877b8599c4e82", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_gnu.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult, RelroLevel};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult, RelroLevel};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -21,6 +21,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "be91dc44b9357912a55b594cffc39d6a672b9adc", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "784e3b090943caed6dc598ff43f848c51ac5565a", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_gnu.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "a3cf47fc5e08229f7d7acc2d53ab691e9405e93c", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "ff52fbc179b168d2ae3aaded592caad435fc8c0d", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "1868c42be39d20a9b58ddd06522a74239314841e", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnuspe.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "1ad2201092c3f8bf75276bcefcafd9851ba87eff", "filename": "src/librustc_target/spec/powerpc_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "6cc3a6c2ef3f2d8979c7ae94d9bb0d1d2d902920", "filename": "src/librustc_target/spec/powerpc_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "09d1debef41e9a1ab21ae3759ba7c517dcb77020", "filename": "src/librustc_target/spec/sparc64_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "fecc20c01c5efa739b84ca4f76ca548bfb8daf5c", "filename": "src/librustc_target/spec/x86_64_apple_darwin.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();\n@@ -19,6 +19,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"apple\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"\\01mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "f6861f2a6872727943578fb28b8b8e4ea30702a3", "filename": "src/librustc_target/spec/x86_64_rumprun_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -24,6 +24,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"rumprun\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "6f4ab4995b5dc3255d58cee0a31b003742effdf7", "filename": "src/librustc_target/spec/x86_64_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8381cbab1a80b2c71df79fb8c33f480cfbca52bb/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs?ref=8381cbab1a80b2c71df79fb8c33f480cfbca52bb", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -18,6 +18,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}]}