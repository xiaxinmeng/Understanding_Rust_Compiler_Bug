{"sha": "b8cf07ee1fbc8c564e70318b8ba1931814238733", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4Y2YwN2VlMWZiYzhjNTY0ZTcwMzE4YjhiYTE5MzE4MTQyMzg3MzM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-09-04T20:41:01Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-09-04T20:57:22Z"}, "message": "Improve DefIndex formatting to be more semantic", "tree": {"sha": "4f8b5874691709c9940b72da3e2843390e223407", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f8b5874691709c9940b72da3e2843390e223407"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8cf07ee1fbc8c564e70318b8ba1931814238733", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8cf07ee1fbc8c564e70318b8ba1931814238733", "html_url": "https://github.com/rust-lang/rust/commit/b8cf07ee1fbc8c564e70318b8ba1931814238733", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8cf07ee1fbc8c564e70318b8ba1931814238733/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "088216fb997c9cb12ce049bbe7975d1f657551ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/088216fb997c9cb12ce049bbe7975d1f657551ca", "html_url": "https://github.com/rust-lang/rust/commit/088216fb997c9cb12ce049bbe7975d1f657551ca"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "78daff9f67aa5dde75bc1ba8e590a89b113d4cc3", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b8cf07ee1fbc8c564e70318b8ba1931814238733/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8cf07ee1fbc8c564e70318b8ba1931814238733/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=b8cf07ee1fbc8c564e70318b8ba1931814238733", "patch": "@@ -93,10 +93,19 @@ impl serialize::UseSpecializedDecodable for CrateNum {\n ///\n /// Since the DefIndex is mostly treated as an opaque ID, you probably\n /// don't have to care about these ranges.\n-#[derive(Clone, Debug, Eq, Ord, PartialOrd, PartialEq, RustcEncodable,\n+#[derive(Clone, Eq, Ord, PartialOrd, PartialEq, RustcEncodable,\n            RustcDecodable, Hash, Copy)]\n pub struct DefIndex(u32);\n \n+impl fmt::Debug for DefIndex {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f,\n+               \"DefIndex({}:{})\",\n+               self.address_space().index(),\n+               self.as_array_index())\n+    }\n+}\n+\n impl DefIndex {\n     #[inline]\n     pub fn new(x: usize) -> DefIndex {"}]}