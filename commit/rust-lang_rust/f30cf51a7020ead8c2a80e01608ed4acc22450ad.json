{"sha": "f30cf51a7020ead8c2a80e01608ed4acc22450ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMGNmNTFhNzAyMGVhZDhjMmE4MGUwMTYwOGVkNGFjYzIyNDUwYWQ=", "commit": {"author": {"name": "Philipp Krones", "email": "uwdkn@student.kit.edu", "date": "2018-09-09T21:49:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-09T21:49:03Z"}, "message": "Merge pull request #3135 from JoshMcguigan/explicit_counter_loop-1219\n\nCloses #1219 false positive for explicit_counter_loop", "tree": {"sha": "f6baf88e184d433425950f2ec616fb67b0699c49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6baf88e184d433425950f2ec616fb67b0699c49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f30cf51a7020ead8c2a80e01608ed4acc22450ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJblZVPCRBK7hj4Ov3rIwAAdHIIAEwGVD41w/9kfsagJzdFbtZs\nmYQlxspMn9Sv3njN0O0M/dH6Xj0uaptSF/dYG/yTA9VHNA66U1/HLs9Gi8SlsOrL\nS0Oex4ayzjvGovYya+bFN5ZkSxwPOQYdbBPrJJn1C9L8Zh8AaHhT5Bqe5Se6Jkqm\neYg+du0HKzKWLf9zj+4ULMSf1n5frJ/vVLa4fbLnQgRm3VphH05oeV4l/vD4LuXK\nMJnBlqpvFSeU8RdXm5Wc8tBhPuAFs+K/6v9QPwS37iTSwvP2ZGjzH6IAWC3uKzq+\nKZUAync+Hp1DaHAujKAGuT6WwnHVuzQ4nenqfly9HjW9naW6f5mLp0HgRrldvYg=\n=tfkB\n-----END PGP SIGNATURE-----\n", "payload": "tree f6baf88e184d433425950f2ec616fb67b0699c49\nparent 2d3298b8c4df8da4b597b33104e235b0fafbe1e9\nparent 9168746c385776b4f76216de9a9884f4a6b3265f\nauthor Philipp Krones <uwdkn@student.kit.edu> 1536529743 +0200\ncommitter GitHub <noreply@github.com> 1536529743 +0200\n\nMerge pull request #3135 from JoshMcguigan/explicit_counter_loop-1219\n\nCloses #1219 false positive for explicit_counter_loop"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f30cf51a7020ead8c2a80e01608ed4acc22450ad", "html_url": "https://github.com/rust-lang/rust/commit/f30cf51a7020ead8c2a80e01608ed4acc22450ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f30cf51a7020ead8c2a80e01608ed4acc22450ad/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d3298b8c4df8da4b597b33104e235b0fafbe1e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d3298b8c4df8da4b597b33104e235b0fafbe1e9", "html_url": "https://github.com/rust-lang/rust/commit/2d3298b8c4df8da4b597b33104e235b0fafbe1e9"}, {"sha": "9168746c385776b4f76216de9a9884f4a6b3265f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9168746c385776b4f76216de9a9884f4a6b3265f", "html_url": "https://github.com/rust-lang/rust/commit/9168746c385776b4f76216de9a9884f4a6b3265f"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "6d9519911ebdfa0096099e501216ce7a558a51bf", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f30cf51a7020ead8c2a80e01608ed4acc22450ad/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f30cf51a7020ead8c2a80e01608ed4acc22450ad/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=f30cf51a7020ead8c2a80e01608ed4acc22450ad", "patch": "@@ -1942,14 +1942,16 @@ impl<'a, 'tcx> Visitor<'tcx> for IncrementVisitor<'a, 'tcx> {\n                 }\n             }\n         } else if is_loop(expr) {\n-            self.states.clear();\n-            self.done = true;\n+            walk_expr(self, expr);\n             return;\n         } else if is_conditional(expr) {\n             self.depth += 1;\n             walk_expr(self, expr);\n             self.depth -= 1;\n             return;\n+        } else if let ExprKind::Continue(_) = expr.node {\n+            self.done = true;\n+            return;\n         }\n         walk_expr(self, expr);\n     }"}, {"sha": "55060b0769d4f1adecfe1a5bc59091f7bea8afb5", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/f30cf51a7020ead8c2a80e01608ed4acc22450ad/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f30cf51a7020ead8c2a80e01608ed4acc22450ad/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=f30cf51a7020ead8c2a80e01608ed4acc22450ad", "patch": "@@ -571,3 +571,68 @@ mod issue_2496 {\n         unimplemented!()\n     }\n }\n+\n+mod issue_1219 {\n+    #[warn(clippy::explicit_counter_loop)]\n+    pub fn test() {\n+        // should not trigger the lint because variable is used after the loop #473\n+        let vec = vec![1,2,3];\n+        let mut index = 0;\n+        for _v in &vec { index += 1 }\n+        println!(\"index: {}\", index);\n+\n+        // should not trigger the lint because the count is conditional #1219\n+        let text = \"banana\";\n+        let mut count = 0;\n+        for ch in text.chars() {\n+            if ch == 'a' {\n+                continue;\n+            }\n+            count += 1;\n+            println!(\"{}\", count);\n+        }\n+\n+        // should not trigger the lint because the count is conditional\n+        let text = \"banana\";\n+        let mut count = 0;\n+        for ch in text.chars() {\n+            if ch == 'a' {\n+                count += 1;\n+            }\n+            println!(\"{}\", count);\n+        }\n+\n+        // should trigger the lint because the count is not conditional\n+        let text = \"banana\";\n+        let mut count = 0;\n+        for ch in text.chars() {\n+            count += 1;\n+            if ch == 'a' {\n+                continue;\n+            }\n+            println!(\"{}\", count);\n+        }\n+\n+        // should trigger the lint because the count is not conditional\n+        let text = \"banana\";\n+        let mut count = 0;\n+        for ch in text.chars() {\n+            count += 1;\n+            for i in 0..2 {\n+                let _ = 123;\n+            }\n+            println!(\"{}\", count);\n+        }\n+\n+        // should not trigger the lint because the count is incremented multiple times\n+        let text = \"banana\";\n+        let mut count = 0;\n+        for ch in text.chars() {\n+            count += 1;\n+            for i in 0..2 {\n+                count += 1;\n+            }\n+            println!(\"{}\", count);\n+        }\n+    }\n+}"}, {"sha": "d829147541e76434ec96219ae5e8a87800c40bd7", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f30cf51a7020ead8c2a80e01608ed4acc22450ad/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f30cf51a7020ead8c2a80e01608ed4acc22450ad/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=f30cf51a7020ead8c2a80e01608ed4acc22450ad", "patch": "@@ -487,5 +487,17 @@ error: it looks like you're manually copying between slices\n 547 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n \n-error: aborting due to 59 previous errors\n+error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n+   --> $DIR/for_loop.rs:608:19\n+    |\n+608 |         for ch in text.chars() {\n+    |                   ^^^^^^^^^^^^\n+\n+error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n+   --> $DIR/for_loop.rs:619:19\n+    |\n+619 |         for ch in text.chars() {\n+    |                   ^^^^^^^^^^^^\n+\n+error: aborting due to 61 previous errors\n "}]}