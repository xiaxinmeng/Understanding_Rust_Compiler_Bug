{"sha": "6ed1a67b3805bdea306ee055e035e298f92a10e4", "node_id": "C_kwDOAAsO6NoAKDZlZDFhNjdiMzgwNWJkZWEzMDZlZTA1NWUwMzVlMjk4ZjkyYTEwZTQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-28T02:12:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-28T02:12:10Z"}, "message": "Rollup merge of #93755 - ChayimFriedman2:allow-comparing-vecs-with-different-allocators, r=dtolnay\n\nAllow comparing `Vec`s with different allocators using `==`\n\nSee https://stackoverflow.com/q/71021633/7884305.\n\nI did not changed the `PartialOrd` impl too because it was not generic already (didn't support `Vec<T> <=> Vec<U> where T: PartialOrd<U>`).\n\nDoes it needs tests?\n\nI don't think this will hurt type inference much because the default allocator is usually not inferred (`new()` specifies it directly, and even with other allocators, you pass the allocator to `new_in()` so the compiler usually knows the type).\n\nI think this requires FCP since the impls are already stable.", "tree": {"sha": "2e2eb724df2176450ce165dd2d94464e99e60083", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e2eb724df2176450ce165dd2d94464e99e60083"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ed1a67b3805bdea306ee055e035e298f92a10e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiQRl6CRBK7hj4Ov3rIwAAD04IAB5Xo5AnQwZbVeikXK+7J59i\ngAtoQW/EiocN+P7dPY7Bw6AcwCI0ud2+BjlUXxj1ZskgCuqP7cOK3WpvNlNCuGls\n+f+BKyaxG+rS34rix6BIgtYDMa/F2hhinJ3ALEDbRPJPwW1IPpinIduriKkyPb38\nHPoagzwNzRWbMfbCoeWj1/ByDnRazGUI15pCUY9ytUsBMMusm5igwA4rjnFaUgcQ\nrU8O2a4JB1cevTfOwGyRrSzPDvG88TXUKjrHndtz+HQrjH8NBTmo1q3J9htwgwvy\nqZExHgWa9ChishQ3wmN7HnbzUEi0/V2uaYT74saUtonuhs4lldO6AgB23XUun5M=\n=bNJY\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e2eb724df2176450ce165dd2d94464e99e60083\nparent 9412316ac39db2a91284d809e2ada9c69afe5b50\nparent ee23fd2ca36e82ff7455520705566a04274d3700\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648433530 +0200\ncommitter GitHub <noreply@github.com> 1648433530 +0200\n\nRollup merge of #93755 - ChayimFriedman2:allow-comparing-vecs-with-different-allocators, r=dtolnay\n\nAllow comparing `Vec`s with different allocators using `==`\n\nSee https://stackoverflow.com/q/71021633/7884305.\n\nI did not changed the `PartialOrd` impl too because it was not generic already (didn't support `Vec<T> <=> Vec<U> where T: PartialOrd<U>`).\n\nDoes it needs tests?\n\nI don't think this will hurt type inference much because the default allocator is usually not inferred (`new()` specifies it directly, and even with other allocators, you pass the allocator to `new_in()` so the compiler usually knows the type).\n\nI think this requires FCP since the impls are already stable.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed1a67b3805bdea306ee055e035e298f92a10e4", "html_url": "https://github.com/rust-lang/rust/commit/6ed1a67b3805bdea306ee055e035e298f92a10e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ed1a67b3805bdea306ee055e035e298f92a10e4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9412316ac39db2a91284d809e2ada9c69afe5b50", "url": "https://api.github.com/repos/rust-lang/rust/commits/9412316ac39db2a91284d809e2ada9c69afe5b50", "html_url": "https://github.com/rust-lang/rust/commit/9412316ac39db2a91284d809e2ada9c69afe5b50"}, {"sha": "ee23fd2ca36e82ff7455520705566a04274d3700", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee23fd2ca36e82ff7455520705566a04274d3700", "html_url": "https://github.com/rust-lang/rust/commit/ee23fd2ca36e82ff7455520705566a04274d3700"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b0cf72577a1be734abca5350b0e7f56461a02f49", "filename": "library/alloc/src/vec/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ed1a67b3805bdea306ee055e035e298f92a10e4/library%2Falloc%2Fsrc%2Fvec%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ed1a67b3805bdea306ee055e035e298f92a10e4/library%2Falloc%2Fsrc%2Fvec%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fpartial_eq.rs?ref=6ed1a67b3805bdea306ee055e035e298f92a10e4", "patch": "@@ -20,7 +20,7 @@ macro_rules! __impl_slice_eq1 {\n     }\n }\n \n-__impl_slice_eq1! { [A: Allocator] Vec<T, A>, Vec<U, A>, #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n+__impl_slice_eq1! { [A1: Allocator, A2: Allocator] Vec<T, A1>, Vec<U, A2>, #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n __impl_slice_eq1! { [A: Allocator] Vec<T, A>, &[U], #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n __impl_slice_eq1! { [A: Allocator] Vec<T, A>, &mut [U], #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n __impl_slice_eq1! { [A: Allocator] &[T], Vec<U, A>, #[stable(feature = \"partialeq_vec_for_ref_slice\", since = \"1.46.0\")] }"}]}