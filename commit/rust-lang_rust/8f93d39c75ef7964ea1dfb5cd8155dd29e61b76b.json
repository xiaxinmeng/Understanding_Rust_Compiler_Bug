{"sha": "8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTNkMzljNzVlZjc5NjRlYTFkZmI1Y2Q4MTU1ZGQyOWU2MWI3NmI=", "commit": {"author": {"name": "Div Shekhar", "email": "div@pagerduty.com", "date": "2014-01-16T06:02:48Z"}, "committer": {"name": "Div Shekhar", "email": "div@pagerduty.com", "date": "2014-01-16T06:02:48Z"}, "message": "doc: add note below diagram about memory layout.", "tree": {"sha": "558e9c99ee4b6525d5a8980f4fbebcc14f2ac0d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/558e9c99ee4b6525d5a8980f4fbebcc14f2ac0d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b", "html_url": "https://github.com/rust-lang/rust/commit/8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b/comments", "author": null, "committer": null, "parents": [{"sha": "065f936bf153f482e10779ebd45b077035a578e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/065f936bf153f482e10779ebd45b077035a578e0", "html_url": "https://github.com/rust-lang/rust/commit/065f936bf153f482e10779ebd45b077035a578e0"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "057944484bae9872d8395fd71810fa542b8aaa12", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=8f93d39c75ef7964ea1dfb5cd8155dd29e61b76b", "patch": "@@ -1025,6 +1025,11 @@ box, while the owner holds onto a pointer to it:\n     list -> | Cons | 1 | ~ | -> | Cons | 2 | ~ | -> | Cons | 3 | ~ | -> | Nil          |\n             +--------------+    +--------------+    +--------------+    +--------------+\n \n+> Note: the above diagram shows the logical contents of the enum. The actual\n+> memory layout of the enum may vary. For example, for the `List` enum shown\n+> above, Rust guarantees that there will be no enum tag field in the actual\n+> structure. See the language reference for more details.\n+\n An owned box is a common example of a type with a destructor. The allocated\n memory is cleaned up when the box is destroyed.\n "}]}