{"sha": "4c98cb6f7586d92be37c94c6063fa9645a448e92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOThjYjZmNzU4NmQ5MmJlMzdjOTRjNjA2M2ZhOTY0NWE0NDhlOTI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-12T13:06:35Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-12T13:06:35Z"}, "message": "rustc_codegen_llvm: `deny(internal)`.", "tree": {"sha": "70c3cbd16e1e1a22e163f2d457511edb1757cab4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c3cbd16e1e1a22e163f2d457511edb1757cab4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c98cb6f7586d92be37c94c6063fa9645a448e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c98cb6f7586d92be37c94c6063fa9645a448e92", "html_url": "https://github.com/rust-lang/rust/commit/4c98cb6f7586d92be37c94c6063fa9645a448e92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c98cb6f7586d92be37c94c6063fa9645a448e92/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "url": "https://api.github.com/repos/rust-lang/rust/commits/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "html_url": "https://github.com/rust-lang/rust/commit/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "3c37240b1660c17fe3fc80c154b48a11fe899ddd", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c98cb6f7586d92be37c94c6063fa9645a448e92/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c98cb6f7586d92be37c94c6063fa9645a448e92/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=4c98cb6f7586d92be37c94c6063fa9645a448e92", "patch": "@@ -2257,11 +2257,7 @@ pub fn create_global_var_metadata(\n /// given type.\n ///\n /// Adds the created metadata nodes directly to the crate's IR.\n-pub fn create_vtable_metadata(\n-    cx: &CodegenCx<'ll, 'tcx>,\n-    ty: ty::Ty<'tcx>,\n-    vtable: &'ll Value,\n-) {\n+pub fn create_vtable_metadata(cx: &CodegenCx<'ll, 'tcx>, ty: Ty<'tcx>, vtable: &'ll Value) {\n     if cx.dbg_cx.is_none() {\n         return;\n     }"}, {"sha": "dc3631e2ee17b3927a4613373a91444d91019833", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c98cb6f7586d92be37c94c6063fa9645a448e92/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c98cb6f7586d92be37c94c6063fa9645a448e92/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=4c98cb6f7586d92be37c94c6063fa9645a448e92", "patch": "@@ -1417,7 +1417,7 @@ fn generic_simd_intrinsic(\n     // FIXME: use:\n     //  https://github.com/llvm-mirror/llvm/blob/master/include/llvm/IR/Function.h#L182\n     //  https://github.com/llvm-mirror/llvm/blob/master/include/llvm/IR/Intrinsics.h#L81\n-    fn llvm_vector_str(elem_ty: ty::Ty<'_>, vec_len: usize, no_pointers: usize) -> String {\n+    fn llvm_vector_str(elem_ty: Ty<'_>, vec_len: usize, no_pointers: usize) -> String {\n         let p0s: String = \"p0\".repeat(no_pointers);\n         match elem_ty.sty {\n             ty::Int(v) => format!(\"v{}{}i{}\", vec_len, p0s, v.bit_width().unwrap()),\n@@ -1427,7 +1427,7 @@ fn generic_simd_intrinsic(\n         }\n     }\n \n-    fn llvm_vector_ty(cx: &CodegenCx<'ll, '_>, elem_ty: ty::Ty<'_>, vec_len: usize,\n+    fn llvm_vector_ty(cx: &CodegenCx<'ll, '_>, elem_ty: Ty<'_>, vec_len: usize,\n                       mut no_pointers: usize) -> &'ll Type {\n         // FIXME: use cx.layout_of(ty).llvm_type() ?\n         let mut elem_ty = match elem_ty.sty {\n@@ -1473,15 +1473,15 @@ fn generic_simd_intrinsic(\n                  in_ty, ret_ty);\n \n         // This counts how many pointers\n-        fn ptr_count(t: ty::Ty<'_>) -> usize {\n+        fn ptr_count(t: Ty<'_>) -> usize {\n             match t.sty {\n                 ty::RawPtr(p) => 1 + ptr_count(p.ty),\n                 _ => 0,\n             }\n         }\n \n         // Non-ptr type\n-        fn non_ptr(t: ty::Ty<'_>) -> ty::Ty<'_> {\n+        fn non_ptr(t: Ty<'_>) -> Ty<'_> {\n             match t.sty {\n                 ty::RawPtr(p) => non_ptr(p.ty),\n                 _ => t,\n@@ -1572,15 +1572,15 @@ fn generic_simd_intrinsic(\n                  arg_tys[2].simd_size(tcx));\n \n         // This counts how many pointers\n-        fn ptr_count(t: ty::Ty<'_>) -> usize {\n+        fn ptr_count(t: Ty<'_>) -> usize {\n             match t.sty {\n                 ty::RawPtr(p) => 1 + ptr_count(p.ty),\n                 _ => 0,\n             }\n         }\n \n         // Non-ptr type\n-        fn non_ptr(t: ty::Ty<'_>) -> ty::Ty<'_> {\n+        fn non_ptr(t: Ty<'_>) -> Ty<'_> {\n             match t.sty {\n                 ty::RawPtr(p) => non_ptr(p.ty),\n                 _ => t,"}, {"sha": "9a0860bc4b09fa6ebcad2c72ccbf6ea968e668ea", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c98cb6f7586d92be37c94c6063fa9645a448e92/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c98cb6f7586d92be37c94c6063fa9645a448e92/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=4c98cb6f7586d92be37c94c6063fa9645a448e92", "patch": "@@ -22,6 +22,7 @@\n #![feature(static_nobundle)]\n #![feature(trusted_len)]\n #![deny(rust_2018_idioms)]\n+#![deny(internal)]\n #![deny(unused_lifetimes)]\n #![allow(explicit_outlives_requirements)]\n "}]}