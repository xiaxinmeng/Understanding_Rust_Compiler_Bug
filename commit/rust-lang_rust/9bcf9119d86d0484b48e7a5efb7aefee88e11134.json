{"sha": "9bcf9119d86d0484b48e7a5efb7aefee88e11134", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliY2Y5MTE5ZDg2ZDA0ODRiNDhlN2E1ZWZiN2FlZmVlODhlMTExMzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-09T21:46:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-09T21:46:24Z"}, "message": "auto merge of #7029 : luqmana/rust/issue-4228, r=catamorphism\n\nFixes #4228", "tree": {"sha": "f943bf1cc0918bc5637ef5d3ed05b5cd1c7d00d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f943bf1cc0918bc5637ef5d3ed05b5cd1c7d00d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bcf9119d86d0484b48e7a5efb7aefee88e11134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bcf9119d86d0484b48e7a5efb7aefee88e11134", "html_url": "https://github.com/rust-lang/rust/commit/9bcf9119d86d0484b48e7a5efb7aefee88e11134", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bcf9119d86d0484b48e7a5efb7aefee88e11134/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94f72dd73699701d7354e16950b9a547e11e015b", "url": "https://api.github.com/repos/rust-lang/rust/commits/94f72dd73699701d7354e16950b9a547e11e015b", "html_url": "https://github.com/rust-lang/rust/commit/94f72dd73699701d7354e16950b9a547e11e015b"}, {"sha": "0bf6d9e9ef0140bdf30ab7814bfac1e6f5157335", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf6d9e9ef0140bdf30ab7814bfac1e6f5157335", "html_url": "https://github.com/rust-lang/rust/commit/0bf6d9e9ef0140bdf30ab7814bfac1e6f5157335"}], "stats": {"total": 67, "additions": 50, "deletions": 17}, "files": [{"sha": "ec821ab2c7192f4a35b8979dff3cc827b0db9806", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9bcf9119d86d0484b48e7a5efb7aefee88e11134/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bcf9119d86d0484b48e7a5efb7aefee88e11134/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=9bcf9119d86d0484b48e7a5efb7aefee88e11134", "patch": "@@ -409,6 +409,7 @@ pub enum ParentLink {\n }\n \n /// The type of module this is.\n+#[deriving(Eq)]\n pub enum ModuleKind {\n     NormalModuleKind,\n     ExternModuleKind,\n@@ -1228,25 +1229,34 @@ impl Resolver {\n                 match (trait_ref_opt, ty) {\n                     (None, @Ty { node: ty_path(path, _), _ }) if\n                             has_static_methods && path.idents.len() == 1 => {\n-                        // Create the module.\n                         let name = path_to_ident(path);\n-                        let (name_bindings, new_parent) =\n-                            self.add_child(name,\n-                                           parent,\n-                                           ForbidDuplicateModules,\n-                                           sp);\n-\n-                        let parent_link = self.get_parent_link(new_parent,\n-                                                               ident);\n-                        let def_id = local_def(item.id);\n-                        name_bindings.define_module(Public,\n-                                                    parent_link,\n-                                                    Some(def_id),\n-                                                    ImplModuleKind,\n-                                                    sp);\n \n-                        let new_parent = ModuleReducedGraphParent(\n-                            name_bindings.get_module());\n+                        let new_parent = match parent.children.find(&name) {\n+                            // It already exists\n+                            Some(&child) if child.get_module_if_available().is_some() &&\n+                                            child.get_module().kind == ImplModuleKind => {\n+                                ModuleReducedGraphParent(child.get_module())\n+                            }\n+                            // Create the module\n+                            _ => {\n+                                let (name_bindings, new_parent) =\n+                                    self.add_child(name,\n+                                                   parent,\n+                                                   ForbidDuplicateModules,\n+                                                   sp);\n+\n+                                let parent_link = self.get_parent_link(new_parent,\n+                                                                       ident);\n+                                let def_id = local_def(item.id);\n+                                name_bindings.define_module(Public,\n+                                                            parent_link,\n+                                                            Some(def_id),\n+                                                            ImplModuleKind,\n+                                                            sp);\n+\n+                                ModuleReducedGraphParent(name_bindings.get_module())\n+                            }\n+                        };\n \n                         // For each static method...\n                         for methods.each |method| {"}, {"sha": "8cae8dd7915a0673cf3404f763e897e7ad28914e", "filename": "src/test/run-pass/issue-4228.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9bcf9119d86d0484b48e7a5efb7aefee88e11134/src%2Ftest%2Frun-pass%2Fissue-4228.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bcf9119d86d0484b48e7a5efb7aefee88e11134/src%2Ftest%2Frun-pass%2Fissue-4228.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4228.rs?ref=9bcf9119d86d0484b48e7a5efb7aefee88e11134", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn first() {}\n+}\n+impl Foo {\n+    fn second() {}\n+}\n+\n+pub fn main() {\n+    Foo::first();\n+    Foo::second();\n+}"}]}