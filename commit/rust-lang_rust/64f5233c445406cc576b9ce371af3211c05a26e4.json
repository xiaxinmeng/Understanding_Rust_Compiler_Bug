{"sha": "64f5233c445406cc576b9ce371af3211c05a26e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZjUyMzNjNDQ1NDA2Y2M1NzZiOWNlMzcxYWYzMjExYzA1YTI2ZTQ=", "commit": {"author": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-04-19T07:20:53Z"}, "committer": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-04-20T00:49:13Z"}, "message": "Adapt the owned_box lang item to allow a Box type with defaulted parameters\n\nA Box type with associated allocator would, on its own, be a backwards\nincompatible change, because of the additional parameter, but if that\nadditional parameter has a default, then backwards compatibility with\nthe current definition of the type is preserved.\n\nBut the owned_box lang item currently doesn't allow such extra\nparameters, so add support for this.", "tree": {"sha": "af5803a0e5b42f35f89453c74e4775d85c150722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af5803a0e5b42f35f89453c74e4775d85c150722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64f5233c445406cc576b9ce371af3211c05a26e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64f5233c445406cc576b9ce371af3211c05a26e4", "html_url": "https://github.com/rust-lang/rust/commit/64f5233c445406cc576b9ce371af3211c05a26e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64f5233c445406cc576b9ce371af3211c05a26e4/comments", "author": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6614fa0981f5d5555f7cd2f11e258fe989e98032", "url": "https://api.github.com/repos/rust-lang/rust/commits/6614fa0981f5d5555f7cd2f11e258fe989e98032", "html_url": "https://github.com/rust-lang/rust/commit/6614fa0981f5d5555f7cd2f11e258fe989e98032"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "6e1ccab0a5376a9dd3fd459b81d597a7e7131611", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64f5233c445406cc576b9ce371af3211c05a26e4/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f5233c445406cc576b9ce371af3211c05a26e4/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=64f5233c445406cc576b9ce371af3211c05a26e4", "patch": "@@ -34,7 +34,7 @@ use middle::resolve_lifetime::{self, ObjectLifetimeDefault};\n use middle::stability;\n use mir::{self, Mir, interpret};\n use mir::interpret::{Value, PrimVal};\n-use ty::subst::{Kind, Substs};\n+use ty::subst::{Kind, Substs, Subst};\n use ty::ReprOptions;\n use ty::Instance;\n use traits;\n@@ -2319,7 +2319,15 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     pub fn mk_box(self, ty: Ty<'tcx>) -> Ty<'tcx> {\n         let def_id = self.require_lang_item(lang_items::OwnedBoxLangItem);\n         let adt_def = self.adt_def(def_id);\n-        let substs = self.mk_substs(iter::once(Kind::from(ty)));\n+        let generics = self.generics_of(def_id);\n+        let mut substs = vec![Kind::from(ty)];\n+        // Add defaults for other generic params if there are some.\n+        for def in generics.types.iter().skip(1) {\n+            assert!(def.has_default);\n+            let ty = self.type_of(def.def_id).subst(self, &substs);\n+            substs.push(ty.into());\n+        }\n+        let substs = self.mk_substs(substs.into_iter());\n         self.mk_ty(TyAdt(adt_def, substs))\n     }\n "}]}