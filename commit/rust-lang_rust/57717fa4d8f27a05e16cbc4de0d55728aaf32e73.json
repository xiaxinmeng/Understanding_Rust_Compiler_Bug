{"sha": "57717fa4d8f27a05e16cbc4de0d55728aaf32e73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NzE3ZmE0ZDhmMjdhMDVlMTZjYmM0ZGUwZDU1NzI4YWFmMzJlNzM=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T09:29:44Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T09:29:44Z"}, "message": "Replacing str::unsafe_from_bytes with str::from_bytes (part 5)", "tree": {"sha": "5be907f692ec55accbbeae9bcb074ceee282e6f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5be907f692ec55accbbeae9bcb074ceee282e6f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57717fa4d8f27a05e16cbc4de0d55728aaf32e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57717fa4d8f27a05e16cbc4de0d55728aaf32e73", "html_url": "https://github.com/rust-lang/rust/commit/57717fa4d8f27a05e16cbc4de0d55728aaf32e73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57717fa4d8f27a05e16cbc4de0d55728aaf32e73/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87320a9f2768e5e011a6c8edaceb3d3b7ddc2747", "url": "https://api.github.com/repos/rust-lang/rust/commits/87320a9f2768e5e011a6c8edaceb3d3b7ddc2747", "html_url": "https://github.com/rust-lang/rust/commit/87320a9f2768e5e011a6c8edaceb3d3b7ddc2747"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ee03af79ab041af3bc6a1d1e0cbb34080639e064", "filename": "src/libstd/io.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57717fa4d8f27a05e16cbc4de0d55728aaf32e73/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57717fa4d8f27a05e16cbc4de0d55728aaf32e73/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=57717fa4d8f27a05e16cbc4de0d55728aaf32e73", "patch": "@@ -109,7 +109,7 @@ impl reader_util for reader {\n             if ch == -1 || ch == 10 { break; }\n             buf += [ch as u8];\n         }\n-        str::unsafe_from_bytes(buf)\n+        str::from_bytes(buf)\n     }\n \n     fn read_c_str() -> str {\n@@ -118,7 +118,7 @@ impl reader_util for reader {\n             let ch = self.read_byte();\n             if ch < 1 { break; } else { buf += [ch as u8]; }\n         }\n-        str::unsafe_from_bytes(buf)\n+        str::from_bytes(buf)\n     }\n \n     // FIXME deal with eof?\n@@ -479,7 +479,7 @@ fn seek_in_buf(offset: int, pos: uint, len: uint, whence: seek_style) ->\n \n fn read_whole_file_str(file: str) -> result::t<str, str> {\n     result::chain(read_whole_file(file), { |bytes|\n-        result::ok(str::unsafe_from_bytes(bytes))\n+        result::ok(str::from_bytes(bytes))\n     })\n }\n "}]}