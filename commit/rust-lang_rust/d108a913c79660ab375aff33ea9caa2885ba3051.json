{"sha": "d108a913c79660ab375aff33ea9caa2885ba3051", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMDhhOTEzYzc5NjYwYWIzNzVhZmYzM2VhOWNhYTI4ODViYTMwNTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-26T17:36:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-29T17:19:44Z"}, "message": "Move get_static from CodegenCx to Builder", "tree": {"sha": "e39beda40e305da7f481c95980b19b62c810cf0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e39beda40e305da7f481c95980b19b62c810cf0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d108a913c79660ab375aff33ea9caa2885ba3051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d108a913c79660ab375aff33ea9caa2885ba3051", "html_url": "https://github.com/rust-lang/rust/commit/d108a913c79660ab375aff33ea9caa2885ba3051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d108a913c79660ab375aff33ea9caa2885ba3051/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb29e2ac45474a560b04ce4061d8a6cc50e1a33", "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb29e2ac45474a560b04ce4061d8a6cc50e1a33", "html_url": "https://github.com/rust-lang/rust/commit/ceb29e2ac45474a560b04ce4061d8a6cc50e1a33"}], "stats": {"total": 77, "additions": 44, "deletions": 33}, "files": [{"sha": "a95ddefc86906a2815e72ffb93ae1a865757bb3e", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -20,6 +20,7 @@ use value::Value;\n use libc::{c_uint, c_char};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::{self, Align, Size, TyLayout};\n+use rustc::hir::def_id::DefId;\n use rustc::session::config;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_codegen_ssa::traits::*;\n@@ -1486,6 +1487,12 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n     }\n }\n \n+impl StaticBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n+    fn get_static(&self, def_id: DefId) -> &'ll Value {\n+        self.cx().get_static(def_id)\n+    }\n+}\n+\n impl Builder<'a, 'll, 'tcx> {\n     fn call_lifetime_intrinsic(&mut self, intrinsic: &str, ptr: &'ll Value, size: Size) {\n         if self.cx.sess().opts.optimize == config::OptLevel::No {"}, {"sha": "5311a6a373026ab0e98a7a5df62d7fc516fd8c8d", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -203,35 +203,8 @@ impl CodegenCx<'ll, 'tcx> {\n             gv\n         }\n     }\n-}\n-\n-impl StaticMethods for CodegenCx<'ll, 'tcx> {\n-    fn static_addr_of(\n-        &self,\n-        cv: &'ll Value,\n-        align: Align,\n-        kind: Option<&str>,\n-    ) -> &'ll Value {\n-        if let Some(&gv) = self.const_globals.borrow().get(&cv) {\n-            unsafe {\n-                // Upgrade the alignment in cases where the same constant is used with different\n-                // alignment requirements\n-                let llalign = align.bytes() as u32;\n-                if llalign > llvm::LLVMGetAlignment(gv) {\n-                    llvm::LLVMSetAlignment(gv, llalign);\n-                }\n-            }\n-            return gv;\n-        }\n-        let gv = self.static_addr_of_mut(cv, align, kind);\n-        unsafe {\n-            llvm::LLVMSetGlobalConstant(gv, True);\n-        }\n-        self.const_globals.borrow_mut().insert(cv, gv);\n-        gv\n-    }\n \n-    fn get_static(&self, def_id: DefId) -> &'ll Value {\n+    crate fn get_static(&self, def_id: DefId) -> &'ll Value {\n         let instance = Instance::mono(self.tcx, def_id);\n         if let Some(&g) = self.instances.borrow().get(&instance) {\n             return g;\n@@ -351,6 +324,33 @@ impl StaticMethods for CodegenCx<'ll, 'tcx> {\n         self.instances.borrow_mut().insert(instance, g);\n         g\n     }\n+}\n+\n+impl StaticMethods for CodegenCx<'ll, 'tcx> {\n+    fn static_addr_of(\n+        &self,\n+        cv: &'ll Value,\n+        align: Align,\n+        kind: Option<&str>,\n+    ) -> &'ll Value {\n+        if let Some(&gv) = self.const_globals.borrow().get(&cv) {\n+            unsafe {\n+                // Upgrade the alignment in cases where the same constant is used with different\n+                // alignment requirements\n+                let llalign = align.bytes() as u32;\n+                if llalign > llvm::LLVMGetAlignment(gv) {\n+                    llvm::LLVMSetAlignment(gv, llalign);\n+                }\n+            }\n+            return gv;\n+        }\n+        let gv = self.static_addr_of_mut(cv, align, kind);\n+        unsafe {\n+            llvm::LLVMSetGlobalConstant(gv, True);\n+        }\n+        self.const_globals.borrow_mut().insert(cv, gv);\n+        gv\n+    }\n \n     fn codegen_static(\n         &self,"}, {"sha": "285147adb160047780f5628dd1d8d5dbb9c7cb2b", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -915,7 +915,7 @@ fn codegen_msvc_try(\n         catchswitch.add_handler(cs, catchpad.llbb());\n \n         let tydesc = match bx.tcx().lang_items().msvc_try_filter() {\n-            Some(did) => bx.cx().get_static(did),\n+            Some(did) => bx.get_static(did),\n             None => bug!(\"msvc_try_filter not defined\"),\n         };\n         let funclet = catchpad.catch_pad(cs, &[tydesc, bx.const_i32(0), slot]);"}, {"sha": "1aba53255e7a714e55b4b28a8b40437c6a8bcca0", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -423,7 +423,7 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             }\n             mir::Place::Static(box mir::Static { def_id, ty }) => {\n                 let layout = cx.layout_of(self.monomorphize(&ty));\n-                PlaceRef::new_sized(cx.get_static(def_id), layout, layout.align.abi)\n+                PlaceRef::new_sized(bx.get_static(def_id), layout, layout.align.abi)\n             },\n             mir::Place::Projection(box mir::Projection {\n                 ref base,"}, {"sha": "c1349329c17ec282bbae7255ab0f8034d1882ec0", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -13,7 +13,7 @@ use super::asm::AsmBuilderMethods;\n use super::debuginfo::DebugInfoBuilderMethods;\n use super::intrinsic::IntrinsicCallMethods;\n use super::type_::ArgTypeMethods;\n-use super::HasCodegen;\n+use super::{HasCodegen, StaticBuilderMethods};\n use common::{AtomicOrdering, AtomicRmwBinOp, IntPredicate, RealPredicate, SynchronizationScope};\n use mir::operand::OperandRef;\n use mir::place::PlaceRef;\n@@ -40,6 +40,7 @@ pub trait BuilderMethods<'a, 'tcx: 'a>:\n     + AbiBuilderMethods<'tcx>\n     + IntrinsicCallMethods<'tcx>\n     + AsmBuilderMethods<'tcx>\n+    + StaticBuilderMethods<'tcx>\n {\n     fn new_block<'b>(cx: &'a Self::CodegenCx, llfn: Self::Value, name: &'b str) -> Self;\n     fn with_cx(cx: &'a Self::CodegenCx) -> Self;"}, {"sha": "6251fc3d3f30e663b34cca413f2aab7ca63b9bd1", "filename": "src/librustc_codegen_ssa/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -46,7 +46,7 @@ pub use self::debuginfo::{DebugInfoBuilderMethods, DebugInfoMethods};\n pub use self::declare::{DeclareMethods, PreDefineMethods};\n pub use self::intrinsic::IntrinsicCallMethods;\n pub use self::misc::MiscMethods;\n-pub use self::statics::StaticMethods;\n+pub use self::statics::{StaticMethods, StaticBuilderMethods};\n pub use self::type_::{\n     ArgTypeMethods, BaseTypeMethods, DerivedTypeMethods, LayoutTypeMethods, TypeMethods,\n };"}, {"sha": "0e665fc29fc19f8805deb40ddb15db1c7b271186", "filename": "src/librustc_codegen_ssa/traits/statics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d108a913c79660ab375aff33ea9caa2885ba3051/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs?ref=d108a913c79660ab375aff33ea9caa2885ba3051", "patch": "@@ -14,6 +14,9 @@ use rustc::ty::layout::Align;\n \n pub trait StaticMethods: BackendTypes {\n     fn static_addr_of(&self, cv: Self::Value, align: Align, kind: Option<&str>) -> Self::Value;\n-    fn get_static(&self, def_id: DefId) -> Self::Value;\n     fn codegen_static(&self, def_id: DefId, is_mutable: bool);\n }\n+\n+pub trait StaticBuilderMethods<'tcx>: BackendTypes {\n+    fn get_static(&self, def_id: DefId) -> Self::Value;\n+}"}]}