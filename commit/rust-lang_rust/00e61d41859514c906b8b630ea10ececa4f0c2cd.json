{"sha": "00e61d41859514c906b8b630ea10ececa4f0c2cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZTYxZDQxODU5NTE0YzkwNmI4YjYzMGVhMTBlY2VjYTRmMGMyY2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-24T18:00:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-24T18:00:45Z"}, "message": "Auto merge of #38443 - frewsxcv:file-docs, r=brson\n\nImprove the API examples for `std::fs::File`.\n\nFixes https://github.com/rust-lang/rust/issues/35875.", "tree": {"sha": "f71652ccf2a46ac4162926a233f25415fbdbeb9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f71652ccf2a46ac4162926a233f25415fbdbeb9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00e61d41859514c906b8b630ea10ececa4f0c2cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00e61d41859514c906b8b630ea10ececa4f0c2cd", "html_url": "https://github.com/rust-lang/rust/commit/00e61d41859514c906b8b630ea10ececa4f0c2cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00e61d41859514c906b8b630ea10ececa4f0c2cd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d86cf13316a885dbc78fc33becbc718c6ff3468c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d86cf13316a885dbc78fc33becbc718c6ff3468c", "html_url": "https://github.com/rust-lang/rust/commit/d86cf13316a885dbc78fc33becbc718c6ff3468c"}, {"sha": "a664466405344d26ee9b834658bc625466889dbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/a664466405344d26ee9b834658bc625466889dbe", "html_url": "https://github.com/rust-lang/rust/commit/a664466405344d26ee9b834658bc625466889dbe"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "6d4d02caa0b433d1bbb31d39015fbefd335ef251", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/00e61d41859514c906b8b630ea10ececa4f0c2cd/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e61d41859514c906b8b630ea10ececa4f0c2cd/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=00e61d41859514c906b8b630ea10ececa4f0c2cd", "patch": "@@ -35,21 +35,53 @@ use time::SystemTime;\n ///\n /// # Examples\n ///\n+/// Create a new file and write bytes to it:\n+///\n /// ```no_run\n+/// use std::fs::File;\n /// use std::io::prelude::*;\n+///\n+/// # fn foo() -> std::io::Result<()> {\n+/// let mut file = try!(File::create(\"foo.txt\"));\n+/// try!(file.write_all(b\"Hello, world!\"));\n+/// # Ok(())\n+/// # }\n+/// ```\n+///\n+/// Read the contents of a file into a `String`:\n+///\n+/// ```no_run\n /// use std::fs::File;\n+/// use std::io::prelude::*;\n ///\n /// # fn foo() -> std::io::Result<()> {\n-/// let mut f = try!(File::create(\"foo.txt\"));\n-/// try!(f.write_all(b\"Hello, world!\"));\n+/// let mut file = try!(File::open(\"foo.txt\"));\n+/// let mut contents = String::new();\n+/// try!(file.read_to_string(&mut contents));\n+/// assert_eq!(contents, \"Hello, world!\");\n+/// # Ok(())\n+/// # }\n+/// ```\n+///\n+/// It can be more efficient to read the contents of a file with a buffered\n+/// [`Read`]er. This can be accomplished with [`BufReader<R>`]:\n+///\n+/// ```no_run\n+/// use std::fs::File;\n+/// use std::io::BufReader;\n+/// use std::io::prelude::*;\n ///\n-/// let mut f = try!(File::open(\"foo.txt\"));\n-/// let mut s = String::new();\n-/// try!(f.read_to_string(&mut s));\n-/// assert_eq!(s, \"Hello, world!\");\n+/// # fn foo() -> std::io::Result<()> {\n+/// let file = try!(File::open(\"foo.txt\"));\n+/// let mut buf_reader = BufReader::new(file);\n+/// let mut contents = String::new();\n+/// try!(buf_reader.read_to_string(&mut contents));\n+/// assert_eq!(contents, \"Hello, world!\");\n /// # Ok(())\n /// # }\n /// ```\n+///\n+/// [`BufReader`]: ../io/struct.BufReader.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct File {\n     inner: fs_imp::File,"}]}