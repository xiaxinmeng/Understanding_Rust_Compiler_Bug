{"sha": "e97d295d0078b03212cecb91854b979e4757ba72", "node_id": "C_kwDOAAsO6NoAKGU5N2QyOTVkMDA3OGIwMzIxMmNlY2I5MTg1NGI5NzllNDc1N2JhNzI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-21T15:29:02Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-21T15:29:02Z"}, "message": "Remove incorrect comment in `Vec::drain`", "tree": {"sha": "4e220bb48e4aedcd24d13079147d21e07b49a79e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e220bb48e4aedcd24d13079147d21e07b49a79e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e97d295d0078b03212cecb91854b979e4757ba72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e97d295d0078b03212cecb91854b979e4757ba72", "html_url": "https://github.com/rust-lang/rust/commit/e97d295d0078b03212cecb91854b979e4757ba72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e97d295d0078b03212cecb91854b979e4757ba72/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a9217601c0e5ae83fa8bca6797137a6d2f7e4e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a9217601c0e5ae83fa8bca6797137a6d2f7e4e5", "html_url": "https://github.com/rust-lang/rust/commit/2a9217601c0e5ae83fa8bca6797137a6d2f7e4e5"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "240d2838ab599e88a5166fb1139d7098267e7bbc", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97d295d0078b03212cecb91854b979e4757ba72/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97d295d0078b03212cecb91854b979e4757ba72/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=e97d295d0078b03212cecb91854b979e4757ba72", "patch": "@@ -1999,9 +1999,7 @@ impl<T, A: Allocator> Vec<T, A> {\n         unsafe {\n             // set self.vec length's to start, to be safe in case Drain is leaked\n             self.set_len(start);\n-            // Use the borrow in the IterMut to indicate borrowing behavior of the\n-            // whole Drain iterator (like &mut T).\n-            let range_slice = slice::from_raw_parts_mut(self.as_mut_ptr().add(start), end - start);\n+            let range_slice = slice::from_raw_parts(self.as_ptr().add(start), end - start);\n             Drain {\n                 tail_start: end,\n                 tail_len: len - end,"}]}