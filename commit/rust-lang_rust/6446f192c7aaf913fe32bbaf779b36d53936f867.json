{"sha": "6446f192c7aaf913fe32bbaf779b36d53936f867", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDZmMTkyYzdhYWY5MTNmZTMyYmJhZjc3OWIzNmQ1MzkzNmY4Njc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-14T16:36:13Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-25T22:28:50Z"}, "message": "Permit `#[target_feature]` on method implementations", "tree": {"sha": "0a7234b9366a187b0665e1f3797bd278de59fab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a7234b9366a187b0665e1f3797bd278de59fab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6446f192c7aaf913fe32bbaf779b36d53936f867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6446f192c7aaf913fe32bbaf779b36d53936f867", "html_url": "https://github.com/rust-lang/rust/commit/6446f192c7aaf913fe32bbaf779b36d53936f867", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6446f192c7aaf913fe32bbaf779b36d53936f867/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8566fba0e8b48ec2378301c34b5ecc91d331488", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8566fba0e8b48ec2378301c34b5ecc91d331488", "html_url": "https://github.com/rust-lang/rust/commit/e8566fba0e8b48ec2378301c34b5ecc91d331488"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a67a4566615d1c15880530142d7c7e0797c9eeb3", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6446f192c7aaf913fe32bbaf779b36d53936f867/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6446f192c7aaf913fe32bbaf779b36d53936f867/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=6446f192c7aaf913fe32bbaf779b36d53936f867", "patch": "@@ -278,7 +278,7 @@ impl CheckAttrVisitor<'tcx> {\n     /// Checks if the `#[target_feature]` attribute on `item` is valid. Returns `true` if valid.\n     fn check_target_feature(&self, attr: &Attribute, span: &Span, target: Target) -> bool {\n         match target {\n-            Target::Fn => true,\n+            Target::Fn | Target::Method { body: true } => true,\n             _ => {\n                 self.tcx.sess\n                     .struct_span_err(attr.span, \"attribute should be applied to a function\")"}]}