{"sha": "0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYzczMGY5YjBlZGUxYjhiOTAzOTRmMjg5ZGRmOGNiZDUxZTAwZTY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-12T04:11:57Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-12T04:11:57Z"}, "message": "Merge pull request #4443 from wting/4386_add_privs\n\nAdds priv qualifiers where they have been commented out before implementation.", "tree": {"sha": "3b84ec35879c727e4b2948554b7779bc5432d28e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b84ec35879c727e4b2948554b7779bc5432d28e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "html_url": "https://github.com/rust-lang/rust/commit/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "847d30db661eb7e3e476b135fce86c92b862f035", "url": "https://api.github.com/repos/rust-lang/rust/commits/847d30db661eb7e3e476b135fce86c92b862f035", "html_url": "https://github.com/rust-lang/rust/commit/847d30db661eb7e3e476b135fce86c92b862f035"}, {"sha": "9fd970ad13bca7f6155ed15901492cd190c81616", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd970ad13bca7f6155ed15901492cd190c81616", "html_url": "https://github.com/rust-lang/rust/commit/9fd970ad13bca7f6155ed15901492cd190c81616"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "c8b96b9b23baa43808d959212ab392b37956d628", "filename": "src/libcore/cleanup.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/src%2Flibcore%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/src%2Flibcore%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcleanup.rs?ref=0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "patch": "@@ -160,6 +160,7 @@ pub unsafe fn annihilate() {\n extern mod rustrt {\n     #[legacy_exports];\n     #[rust_stack]\n-    /*priv*/ unsafe fn rust_get_task() -> *c_void;\n+    // FIXME (#4386): Unable to make following method private.\n+    /* priv */ unsafe fn rust_get_task() -> *c_void;\n }\n "}, {"sha": "7d61326c02fa4931ec5c31318e0e60ffe806cf82", "filename": "src/libstd/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/src%2Flibstd%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/src%2Flibstd%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffuture.rs?ref=0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "patch": "@@ -31,7 +31,7 @@ use core::task;\n \n #[doc = \"The future type\"]\n pub struct Future<A> {\n-    /*priv*/ mut state: FutureState<A>,\n+    priv mut state: FutureState<A>,\n }\n \n // FIXME(#2829) -- futures should not be copyable, because they close"}, {"sha": "ce7a8481ffda3bbe1bd13bb206315ffead5e96e3", "filename": "src/libstd/sync.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/src%2Flibstd%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6/src%2Flibstd%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync.rs?ref=0bc730f9b0ede1b8b90394f289ddf8cbd51e00e6", "patch": "@@ -449,9 +449,9 @@ struct RWlockInner {\n  * unwinds.\n  */\n struct RWlock {\n-    /* priv */ order_lock:  Semaphore,\n-    /* priv */ access_lock: Sem<~[mut Waitqueue]>,\n-    /* priv */ state:       Exclusive<RWlockInner>\n+    priv order_lock:  Semaphore,\n+    priv access_lock: Sem<~[mut Waitqueue]>,\n+    priv state:       Exclusive<RWlockInner>\n }\n \n /// Create a new rwlock, with one associated condvar.\n@@ -683,7 +683,7 @@ fn RWlockReleaseDowngrade(lock: &r/RWlock) -> RWlockReleaseDowngrade/&r {\n }\n \n /// The \"write permission\" token used for rwlock.write_downgrade().\n-pub struct RWlockWriteMode { /* priv */ lock: &RWlock }\n+pub struct RWlockWriteMode { priv lock: &RWlock }\n impl RWlockWriteMode : Drop { fn finalize(&self) {} }\n /// The \"read permission\" token used for rwlock.write_downgrade().\n pub struct RWlockReadMode  { priv lock: &RWlock }"}]}