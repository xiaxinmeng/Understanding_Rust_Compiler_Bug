{"sha": "63ea13ad0dc30769c674ea52172cafe4e0178bb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZWExM2FkMGRjMzA3NjljNjc0ZWE1MjE3MmNhZmU0ZTAxNzhiYjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-28T15:00:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-28T15:00:05Z"}, "message": "fix miri-rustc-tests", "tree": {"sha": "b808c1eeac302f29105efeff210cb9e2feaa732e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b808c1eeac302f29105efeff210cb9e2feaa732e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63ea13ad0dc30769c674ea52172cafe4e0178bb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63ea13ad0dc30769c674ea52172cafe4e0178bb1", "html_url": "https://github.com/rust-lang/rust/commit/63ea13ad0dc30769c674ea52172cafe4e0178bb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63ea13ad0dc30769c674ea52172cafe4e0178bb1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28e814ab537606d3d9cd2235198c2c5f658206bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/28e814ab537606d3d9cd2235198c2c5f658206bf", "html_url": "https://github.com/rust-lang/rust/commit/28e814ab537606d3d9cd2235198c2c5f658206bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5f814fd1986222694bbecf3f393058c0f7c1bfc1", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/63ea13ad0dc30769c674ea52172cafe4e0178bb1/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ea13ad0dc30769c674ea52172cafe4e0178bb1/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=63ea13ad0dc30769c674ea52172cafe4e0178bb1", "patch": "@@ -46,7 +46,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                 struct Visitor<'tcx>(TyCtxt<'tcx>);\n                 impl<'tcx, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'tcx> {\n                     fn visit_item(&mut self, i: &'hir hir::Item) {\n-                        if let hir::ItemKind::Fn(.., body_id) = i.node {\n+                        if let hir::ItemKind::Fn(.., body_id) = i.kind {\n                             if i.attrs.iter().any(|attr| attr.check_name(syntax::symbol::sym::test)) {\n                                 let config = MiriConfig {\n                                     validate: true,"}]}