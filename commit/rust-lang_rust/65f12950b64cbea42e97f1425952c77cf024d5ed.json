{"sha": "65f12950b64cbea42e97f1425952c77cf024d5ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZjEyOTUwYjY0Y2JlYTQyZTk3ZjE0MjU5NTJjNzdjZjAyNGQ1ZWQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-06-20T22:26:13Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-06-21T10:00:49Z"}, "message": "Better handling of the sender channel part in rustdoc file writing", "tree": {"sha": "77606f7c5652cda53707b3b4dadcc64913742d59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77606f7c5652cda53707b3b4dadcc64913742d59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65f12950b64cbea42e97f1425952c77cf024d5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65f12950b64cbea42e97f1425952c77cf024d5ed", "html_url": "https://github.com/rust-lang/rust/commit/65f12950b64cbea42e97f1425952c77cf024d5ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65f12950b64cbea42e97f1425952c77cf024d5ed/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eeb543504602d04c2f4374834ee9c67bb525300", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb543504602d04c2f4374834ee9c67bb525300", "html_url": "https://github.com/rust-lang/rust/commit/3eeb543504602d04c2f4374834ee9c67bb525300"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "740947fc3e37e8d1f20700d21d8bb6b24dfb1127", "filename": "src/librustdoc/docfs.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/65f12950b64cbea42e97f1425952c77cf024d5ed/src%2Flibrustdoc%2Fdocfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65f12950b64cbea42e97f1425952c77cf024d5ed/src%2Flibrustdoc%2Fdocfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdocfs.rs?ref=65f12950b64cbea42e97f1425952c77cf024d5ed", "patch": "@@ -11,7 +11,6 @@\n \n use errors;\n \n-use std::cell::RefCell;\n use std::fs;\n use std::io;\n use std::path::Path;\n@@ -32,23 +31,24 @@ pub trait PathError {\n }\n \n pub struct ErrorStorage {\n-    sender: Sender<Option<String>>,\n+    sender: Option<Sender<Option<String>>>,\n     receiver: Receiver<Option<String>>,\n }\n \n impl ErrorStorage {\n     pub fn new() -> ErrorStorage {\n         let (sender, receiver) = channel();\n         ErrorStorage {\n-            sender,\n+            sender: Some(sender),\n             receiver,\n         }\n     }\n \n     /// Prints all stored errors. Returns the number of printed errors.\n-    pub fn write_errors(&self, diag: &errors::Handler) -> usize {\n+    pub fn write_errors(&mut self, diag: &errors::Handler) -> usize {\n         let mut printed = 0;\n-        drop(self.sender);\n+        // In order to drop the sender part of the channel.\n+        self.sender = None;\n \n         for msg in self.receiver.iter() {\n             if let Some(ref error) = msg {\n@@ -95,7 +95,7 @@ impl DocFS {\n             // be to create the file sync so errors are reported eagerly.\n             let contents = contents.as_ref().to_vec();\n             let path = path.as_ref().to_path_buf();\n-            let sender = self.errors.sender.clone();\n+            let sender = self.errors.sender.clone().unwrap();\n             rayon::spawn(move || {\n                 match fs::write(&path, &contents) {\n                     Ok(_) => {"}, {"sha": "f0aff961c675170874e8a1429effc63505c789f0", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65f12950b64cbea42e97f1425952c77cf024d5ed/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65f12950b64cbea42e97f1425952c77cf024d5ed/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=65f12950b64cbea42e97f1425952c77cf024d5ed", "patch": "@@ -552,7 +552,7 @@ pub fn run(mut krate: clean::Crate,\n         },\n         _ => PathBuf::new(),\n     };\n-    let errors = Arc::new(ErrorStorage::new());\n+    let mut errors = Arc::new(ErrorStorage::new());\n     let mut scx = SharedContext {\n         src_root,\n         passes,\n@@ -722,7 +722,7 @@ pub fn run(mut krate: clean::Crate,\n \n     // And finally render the whole crate's documentation\n     let ret = cx.krate(krate);\n-    let nb_errors = errors.write_errors(diag);\n+    let nb_errors = Arc::get_mut(&mut errors).map_or_else(|| 0, |errors| errors.write_errors(diag));\n     if ret.is_err() {\n         ret\n     } else if nb_errors > 0 {"}]}