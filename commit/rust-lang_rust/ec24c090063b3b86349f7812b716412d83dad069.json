{"sha": "ec24c090063b3b86349f7812b716412d83dad069", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMjRjMDkwMDYzYjNiODYzNDlmNzgxMmI3MTY0MTJkODNkYWQwNjk=", "commit": {"author": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-19T07:11:25Z"}, "committer": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-19T21:17:34Z"}, "message": "Remove const\n\n- Add test for @ matching\n- Address comments", "tree": {"sha": "5dd13a24ef92a10bd686a80bbb2e59b83bf015d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dd13a24ef92a10bd686a80bbb2e59b83bf015d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec24c090063b3b86349f7812b716412d83dad069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec24c090063b3b86349f7812b716412d83dad069", "html_url": "https://github.com/rust-lang/rust/commit/ec24c090063b3b86349f7812b716412d83dad069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec24c090063b3b86349f7812b716412d83dad069/comments", "author": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb51abdc646e11b8c23fee83b6f052d3dde87985", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb51abdc646e11b8c23fee83b6f052d3dde87985", "html_url": "https://github.com/rust-lang/rust/commit/eb51abdc646e11b8c23fee83b6f052d3dde87985"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "bc8fade6f3de503970f0ea61a3b96bd8fb5ed310", "filename": "crates/ra_ide/src/completion/complete_pattern.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ec24c090063b3b86349f7812b716412d83dad069/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec24c090063b3b86349f7812b716412d83dad069/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=ec24c090063b3b86349f7812b716412d83dad069", "patch": "@@ -97,6 +97,13 @@ mod tests {\n                 insert: \"Z\",\n                 kind: Const,\n             },\n+            CompletionItem {\n+                label: \"Z\",\n+                source_range: [246; 246),\n+                delete: [246; 246),\n+                insert: \"Z\",\n+                kind: Const,\n+            },\n             CompletionItem {\n                 label: \"m\",\n                 source_range: [246; 246),\n@@ -138,6 +145,21 @@ mod tests {\n                 insert: \"E\",\n                 kind: Enum,\n             },\n+            CompletionItem {\n+                label: \"E\",\n+                source_range: [151; 151),\n+                delete: [151; 151),\n+                insert: \"E\",\n+                kind: Enum,\n+            },\n+            CompletionItem {\n+                label: \"m!\",\n+                source_range: [151; 151),\n+                delete: [151; 151),\n+                insert: \"m!($0)\",\n+                kind: Macro,\n+                detail: \"macro_rules! m\",\n+            },\n         ]\n         \"###);\n     }"}, {"sha": "2ca5527331441417a83e195fd41b5c8e231bb09f", "filename": "crates/ra_ide/src/completion/complete_scope.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ec24c090063b3b86349f7812b716412d83dad069/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec24c090063b3b86349f7812b716412d83dad069/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=ec24c090063b3b86349f7812b716412d83dad069", "patch": "@@ -11,7 +11,6 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n     ctx.scope().process_all_names(&mut |name, res| match (ctx.is_pat_binding_and_path, &res) {\n         (true, ScopeDef::ModuleDef(ModuleDef::Function(..))) => (),\n         (true, ScopeDef::ModuleDef(ModuleDef::Static(..))) => (),\n-        (true, ScopeDef::ModuleDef(ModuleDef::Const(..))) => (),\n         (true, ScopeDef::Local(..)) => (),\n         _ => acc.add_resolution(ctx, name.to_string(), &res),\n     });\n@@ -27,6 +26,27 @@ mod tests {\n         do_completion(ra_fixture, CompletionKind::Reference)\n     }\n \n+    #[test]\n+    fn bind_pat_and_path_ignore_at() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                enum Enum {\n+                    A,\n+                    B,\n+                }\n+                fn quux(x: Option<Enum>) {\n+                    match x {\n+                        None => (),\n+                        Some(en<|> @ Enum::A) => (),\n+                    }\n+                }\n+                \"\n+            ),\n+            @r###\"[]\"###\n+        );\n+    }\n+\n     #[test]\n     fn bind_pat_and_path_ignore_ref() {\n         assert_debug_snapshot!("}, {"sha": "319e33b61555bc6a3f46afb165c0df7427deab67", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ec24c090063b3b86349f7812b716412d83dad069/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec24c090063b3b86349f7812b716412d83dad069/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=ec24c090063b3b86349f7812b716412d83dad069", "patch": "@@ -197,11 +197,11 @@ impl<'a> CompletionContext<'a> {\n                     self.is_pat_binding = true;\n                 }\n \n-                if parent.and_then(ast::RecordFieldPatList::cast).is_none() {\n-                    let bind_pat_string = bind_pat.syntax().to_string();\n-                    if !bind_pat_string.contains(\"ref \") && !bind_pat_string.contains(\" @ \") {\n-                        self.is_pat_binding_and_path = true;\n-                    }\n+                if parent.and_then(ast::RecordFieldPatList::cast).is_none()\n+                    && bind_pat.pat().is_none()\n+                    && !bind_pat.is_ref()\n+                {\n+                    self.is_pat_binding_and_path = true;\n                 }\n             }\n             if is_node::<ast::Param>(name.syntax()) {"}]}