{"sha": "00cf07b5214d7b072470bb4584737f51242bdd55", "node_id": "C_kwDOAAsO6NoAKDAwY2YwN2I1MjE0ZDdiMDcyNDcwYmI0NTg0NzM3ZjUxMjQyYmRkNTU", "commit": {"author": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-10-29T14:32:11Z"}, "committer": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-10-29T14:44:12Z"}, "message": "[`option_if_let_else`] do not lint if any arm has guard", "tree": {"sha": "2f24fead209864d954e9cac3860125cdc732ec57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f24fead209864d954e9cac3860125cdc732ec57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00cf07b5214d7b072470bb4584737f51242bdd55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00cf07b5214d7b072470bb4584737f51242bdd55", "html_url": "https://github.com/rust-lang/rust/commit/00cf07b5214d7b072470bb4584737f51242bdd55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00cf07b5214d7b072470bb4584737f51242bdd55/comments", "author": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "html_url": "https://github.com/rust-lang/rust/commit/cca9938694eff5a2f4c2731966a9dd8ce4b118e7"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "472f52380bbf479ac0c22b9218b0637abcc3c4ea", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/00cf07b5214d7b072470bb4584737f51242bdd55/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00cf07b5214d7b072470bb4584737f51242bdd55/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=00cf07b5214d7b072470bb4584737f51242bdd55", "patch": "@@ -213,11 +213,14 @@ fn try_convert_match<'tcx>(\n     cx: &LateContext<'tcx>,\n     arms: &[Arm<'tcx>],\n ) -> Option<(&'tcx Pat<'tcx>, &'tcx Expr<'tcx>, &'tcx Expr<'tcx>)> {\n-    if arms.len() == 2 {\n-        return if is_none_or_err_arm(cx, &arms[1]) {\n-            Some((arms[0].pat, arms[0].body, arms[1].body))\n-        } else if is_none_or_err_arm(cx, &arms[0]) {\n-            Some((arms[1].pat, arms[1].body, arms[0].body))\n+    if let [first_arm, second_arm] = arms\n+        && first_arm.guard.is_none()\n+        && second_arm.guard.is_none()\n+        {\n+        return if is_none_or_err_arm(cx, second_arm) {\n+            Some((first_arm.pat, first_arm.body, second_arm.body))\n+        } else if is_none_or_err_arm(cx, first_arm) {\n+            Some((second_arm.pat, second_arm.body, first_arm.body))\n         } else {\n             None\n         };"}, {"sha": "0456005dce4965c5c04b4a4aa85736bb090444eb", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/00cf07b5214d7b072470bb4584737f51242bdd55/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/00cf07b5214d7b072470bb4584737f51242bdd55/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=00cf07b5214d7b072470bb4584737f51242bdd55", "patch": "@@ -189,3 +189,12 @@ fn main() {\n     let _ = res.map_or(1, |a| a + 1);\n     let _ = res.map_or(5, |a| a + 1);\n }\n+\n+#[allow(dead_code)]\n+fn issue9742() -> Option<&'static str> {\n+    // should not lint because of guards\n+    match Some(\"foo  \") {\n+        Some(name) if name.starts_with(\"foo\") => Some(name.trim()),\n+        _ => None,\n+    }\n+}"}, {"sha": "23b148752cbfac64b3981024cfcc708cc90606e1", "filename": "tests/ui/option_if_let_else.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/00cf07b5214d7b072470bb4584737f51242bdd55/tests%2Fui%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00cf07b5214d7b072470bb4584737f51242bdd55/tests%2Fui%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.rs?ref=00cf07b5214d7b072470bb4584737f51242bdd55", "patch": "@@ -230,3 +230,12 @@ fn main() {\n     };\n     let _ = if let Ok(a) = res { a + 1 } else { 5 };\n }\n+\n+#[allow(dead_code)]\n+fn issue9742() -> Option<&'static str> {\n+    // should not lint because of guards\n+    match Some(\"foo  \") {\n+        Some(name) if name.starts_with(\"foo\") => Some(name.trim()),\n+        _ => None,\n+    }\n+}"}]}