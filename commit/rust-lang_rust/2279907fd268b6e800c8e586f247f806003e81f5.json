{"sha": "2279907fd268b6e800c8e586f247f806003e81f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNzk5MDdmZDI2OGI2ZTgwMGM4ZTU4NmYyNDdmODA2MDAzZTgxZjU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-15T22:26:29Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-15T22:29:24Z"}, "message": "Take Const into account with nonstandard style lint\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "998533503e4d4e0367afa61eb57812c94000010d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/998533503e4d4e0367afa61eb57812c94000010d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2279907fd268b6e800c8e586f247f806003e81f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2279907fd268b6e800c8e586f247f806003e81f5", "html_url": "https://github.com/rust-lang/rust/commit/2279907fd268b6e800c8e586f247f806003e81f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2279907fd268b6e800c8e586f247f806003e81f5/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10602f1dbf55522072ce85095bf041649e52ad6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/10602f1dbf55522072ce85095bf041649e52ad6f", "html_url": "https://github.com/rust-lang/rust/commit/10602f1dbf55522072ce85095bf041649e52ad6f"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "ee5e715161adc167fc830c6406e71d67cee4f016", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2279907fd268b6e800c8e586f247f806003e81f5/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2279907fd268b6e800c8e586f247f806003e81f5/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=2279907fd268b6e800c8e586f247f806003e81f5", "patch": "@@ -455,6 +455,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonUpperCaseGlobals {\n             }\n         }\n     }\n+\n+    fn check_generic_param(&mut self, cx: &LateContext, param: &hir::GenericParam) {\n+        if let GenericParamKind::Const { .. } = param.kind {\n+            NonUpperCaseGlobals::check_upper_case(\n+                cx,\n+                \"const parameter\",\n+                &param.name.ident(),\n+            );\n+        }\n+    }\n }\n \n #[cfg(test)]"}]}