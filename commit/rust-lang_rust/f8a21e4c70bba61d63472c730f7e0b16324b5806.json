{"sha": "f8a21e4c70bba61d63472c730f7e0b16324b5806", "node_id": "C_kwDOAAsO6NoAKGY4YTIxZTRjNzBiYmE2MWQ2MzQ3MmM3MzBmN2UwYjE2MzI0YjU4MDY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-01T15:33:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-01T15:33:01Z"}, "message": "Merge #11870\n\n11870: Recover from missing type annotation r=Veykril a=HKalbasi\n\nWe were missing the init expression in case of `let x: = 2`, which breaks type inference of that variable (previously x were `{unknown}`, now it is `i32`).\r\n\n\nCo-authored-by: hkalbasi <hamidrezakalbasi@protonmail.com>", "tree": {"sha": "abf5e3455908fafc2fb9f85ea0dea6973b72e839", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abf5e3455908fafc2fb9f85ea0dea6973b72e839"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8a21e4c70bba61d63472c730f7e0b16324b5806", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRxstCRBK7hj4Ov3rIwAASosIAJIuJU/hyyZsv781zFV0sFOb\nKdklmcDuX2TWm2loivYtW93CyweOrYPbkREcZXRQSBUbkJ6MiOixD1HFALkv98eV\n45CycK6x41Gc/f1htu9sUFOGAZsyZyfvb3RVrzyCguSmwziS5VOvodADSfOnL+tP\n0KD0j3D+G8F8W2AiSU0MGedCRnuf8KAAiVB4cnPCeYt7KqfzG2BGHmyx6BYQTVqB\nqYZPNyyeGtSfYzeZ50Ojb9xwrE6zXBP1hqBzE4fbIpGJjQxyPNS87BGJtQE/usrM\nAVaK92aQ2orde+gG6b0B6k2Aj5XS7vcQMZkGf7z9uTEs6PdrGWiz79XVPnLsJvQ=\n=Jcmd\n-----END PGP SIGNATURE-----\n", "payload": "tree abf5e3455908fafc2fb9f85ea0dea6973b72e839\nparent b337a49d21b6ab04c0aa06834523de275a033ca9\nparent 049f0a6d2c31e8f5f4787cb7e3e89834cbb50ac4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648827181 +0000\ncommitter GitHub <noreply@github.com> 1648827181 +0000\n\nMerge #11870\n\n11870: Recover from missing type annotation r=Veykril a=HKalbasi\n\nWe were missing the init expression in case of `let x: = 2`, which breaks type inference of that variable (previously x were `{unknown}`, now it is `i32`).\r\n\n\nCo-authored-by: hkalbasi <hamidrezakalbasi@protonmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8a21e4c70bba61d63472c730f7e0b16324b5806", "html_url": "https://github.com/rust-lang/rust/commit/f8a21e4c70bba61d63472c730f7e0b16324b5806", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8a21e4c70bba61d63472c730f7e0b16324b5806/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b337a49d21b6ab04c0aa06834523de275a033ca9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b337a49d21b6ab04c0aa06834523de275a033ca9", "html_url": "https://github.com/rust-lang/rust/commit/b337a49d21b6ab04c0aa06834523de275a033ca9"}, {"sha": "049f0a6d2c31e8f5f4787cb7e3e89834cbb50ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/049f0a6d2c31e8f5f4787cb7e3e89834cbb50ac4", "html_url": "https://github.com/rust-lang/rust/commit/049f0a6d2c31e8f5f4787cb7e3e89834cbb50ac4"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "baed34ce2388281c68783503e0e8b95922917e2d", "filename": "crates/hir_ty/src/tests/simple.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f8a21e4c70bba61d63472c730f7e0b16324b5806/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8a21e4c70bba61d63472c730f7e0b16324b5806/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=f8a21e4c70bba61d63472c730f7e0b16324b5806", "patch": "@@ -2556,6 +2556,20 @@ fn f() {\n     )\n }\n \n+#[test]\n+fn infer_missing_type() {\n+    check_types(\n+        r#\"\n+struct S;\n+\n+fn f() {\n+    let s: = S;\n+      //^ S\n+}\n+    \"#,\n+    );\n+}\n+\n #[test]\n fn infer_type_alias_variant() {\n     check_infer("}, {"sha": "46db487d02c0c29999ba2b647a14f28ddc4eb97c", "filename": "crates/parser/src/grammar/types.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f8a21e4c70bba61d63472c730f7e0b16324b5806/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8a21e4c70bba61d63472c730f7e0b16324b5806/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=f8a21e4c70bba61d63472c730f7e0b16324b5806", "patch": "@@ -57,6 +57,12 @@ fn type_with_bounds_cond(p: &mut Parser, allow_bounds: bool) {\n pub(super) fn ascription(p: &mut Parser) {\n     assert!(p.at(T![:]));\n     p.bump(T![:]);\n+    if p.at(T![=]) {\n+        // recover from `let x: = expr;`, `const X: = expr;` and similars\n+        // hopefully no type starts with `=`\n+        p.error(\"missing type\");\n+        return;\n+    }\n     type_(p);\n }\n "}]}