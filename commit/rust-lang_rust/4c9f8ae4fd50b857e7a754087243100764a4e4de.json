{"sha": "4c9f8ae4fd50b857e7a754087243100764a4e4de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOWY4YWU0ZmQ1MGI4NTdlN2E3NTQwODcyNDMxMDA3NjRhNGU0ZGU=", "commit": {"author": {"name": "Irfan Hudda", "email": "irfanhudda@gmail.com", "date": "2017-04-02T00:40:34Z"}, "committer": {"name": "Irfan Hudda", "email": "irfanhudda@gmail.com", "date": "2017-04-02T00:40:34Z"}, "message": "Minor changes to core::option docs", "tree": {"sha": "c14d897d18b0609afcef9ea603dee985ee5a663e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c14d897d18b0609afcef9ea603dee985ee5a663e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9f8ae4fd50b857e7a754087243100764a4e4de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9f8ae4fd50b857e7a754087243100764a4e4de", "html_url": "https://github.com/rust-lang/rust/commit/4c9f8ae4fd50b857e7a754087243100764a4e4de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9f8ae4fd50b857e7a754087243100764a4e4de/comments", "author": {"login": "irfanhudda", "id": 1755089, "node_id": "MDQ6VXNlcjE3NTUwODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1755089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irfanhudda", "html_url": "https://github.com/irfanhudda", "followers_url": "https://api.github.com/users/irfanhudda/followers", "following_url": "https://api.github.com/users/irfanhudda/following{/other_user}", "gists_url": "https://api.github.com/users/irfanhudda/gists{/gist_id}", "starred_url": "https://api.github.com/users/irfanhudda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irfanhudda/subscriptions", "organizations_url": "https://api.github.com/users/irfanhudda/orgs", "repos_url": "https://api.github.com/users/irfanhudda/repos", "events_url": "https://api.github.com/users/irfanhudda/events{/privacy}", "received_events_url": "https://api.github.com/users/irfanhudda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irfanhudda", "id": 1755089, "node_id": "MDQ6VXNlcjE3NTUwODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1755089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irfanhudda", "html_url": "https://github.com/irfanhudda", "followers_url": "https://api.github.com/users/irfanhudda/followers", "following_url": "https://api.github.com/users/irfanhudda/following{/other_user}", "gists_url": "https://api.github.com/users/irfanhudda/gists{/gist_id}", "starred_url": "https://api.github.com/users/irfanhudda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irfanhudda/subscriptions", "organizations_url": "https://api.github.com/users/irfanhudda/orgs", "repos_url": "https://api.github.com/users/irfanhudda/repos", "events_url": "https://api.github.com/users/irfanhudda/events{/privacy}", "received_events_url": "https://api.github.com/users/irfanhudda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c414628782ab60817909de2b98d206782dc15200", "url": "https://api.github.com/repos/rust-lang/rust/commits/c414628782ab60817909de2b98d206782dc15200", "html_url": "https://github.com/rust-lang/rust/commit/c414628782ab60817909de2b98d206782dc15200"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1a48f27762580e38047b87ad5468adb21b58114f", "filename": "src/libcore/option.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c9f8ae4fd50b857e7a754087243100764a4e4de/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9f8ae4fd50b857e7a754087243100764a4e4de/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=4c9f8ae4fd50b857e7a754087243100764a4e4de", "patch": "@@ -896,9 +896,9 @@ unsafe impl<A> TrustedLen for Item<A> {}\n \n /// An iterator over a reference to the [`Some`] variant of an [`Option`].\n ///\n-/// The iterator yields one value if the [`Option`] is a [`Some`] variant, otherwise none.\n+/// The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.\n ///\n-/// This `struct` is created by [`Option::iter`] function.\n+/// This `struct` is created by the [`Option::iter`] function.\n ///\n /// [`Option`]: enum.Option.html\n /// [`Some`]: enum.Option.html#variant.Some\n@@ -941,9 +941,9 @@ impl<'a, A> Clone for Iter<'a, A> {\n \n /// An iterator over a mutable reference to the [`Some`] variant of an [`Option`].\n ///\n-/// The iterator yields one value if the [`Option`] is a [`Some`] variant, otherwise none.\n+/// The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.\n ///\n-/// This `struct` is created by [`Option::iter_mut`] function.\n+/// This `struct` is created by the [`Option::iter_mut`] function.\n ///\n /// [`Option`]: enum.Option.html\n /// [`Some`]: enum.Option.html#variant.Some\n@@ -978,9 +978,9 @@ unsafe impl<'a, A> TrustedLen for IterMut<'a, A> {}\n \n /// An iterator over the value in [`Some`] variant of an [`Option`].\n ///\n-/// The iterator yields one value if the [`Option`] is a [`Some`] variant, otherwise none.\n+/// The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.\n ///\n-/// This `struct` is created by [`Option::into_iter`] function.\n+/// This `struct` is created by the [`Option::into_iter`] function.\n ///\n /// [`Option`]: enum.Option.html\n /// [`Some`]: enum.Option.html#variant.Some"}]}