{"sha": "b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYzQzZGMxYWRjZjFkMjY0Yjk4MWE1MDZiMTg0MGJhNDJlZWVhN2Y=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-11T13:45:00Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T09:48:22Z"}, "message": "Update src/librustc_mir/interpret/intern.rs\n\nCo-Authored-By: Ralf Jung <post@ralfj.de>", "tree": {"sha": "49ebf0f790f563446e6896df6892b518e51e8e2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49ebf0f790f563446e6896df6892b518e51e8e2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "html_url": "https://github.com/rust-lang/rust/commit/b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2c43dc1adcf1d264b981a506b1840ba42eeea7f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eadfd63e3fc136aee68fa32e98ea91213ef2e075", "url": "https://api.github.com/repos/rust-lang/rust/commits/eadfd63e3fc136aee68fa32e98ea91213ef2e075", "html_url": "https://github.com/rust-lang/rust/commit/eadfd63e3fc136aee68fa32e98ea91213ef2e075"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "6fd15cc79a22aba9fa7794996cde62d2e0dca928", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2c43dc1adcf1d264b981a506b1840ba42eeea7f/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c43dc1adcf1d264b981a506b1840ba42eeea7f/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "patch": "@@ -361,7 +361,8 @@ pub fn intern_const_alloc_recursive<M: CompileTimeMachine<'mir, 'tcx>>(\n                 // everything as immutable.\n                 // It is UB to mutate through a raw pointer obtained via an immutable reference.\n                 // Since all references and pointers inside a promoted must by their very definition\n-                // be created from an immutable reference, mutating though them would be UB.\n+                // be created from an immutable reference (and promotion also excludes interior\n+                // mutability), mutating though them would be UB.\n                 // There's no way we can check whether the user is using raw pointers correctly,\n                 // so all we can do is mark this as immutable here.\n                 InternKind::Promoted => {"}]}