{"sha": "d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNTVkNzBlN2E2YTg0YzgyY2M3NGY5NjhmNTI5ZjQyZGQ0MGI4Y2U=", "commit": {"author": {"name": "Hugues de Valon", "email": "hugues.devalon@arm.com", "date": "2020-09-29T11:20:56Z"}, "committer": {"name": "Hugues de Valon", "email": "hugues.devalon@arm.com", "date": "2020-09-30T13:57:37Z"}, "message": "Update LLVM and add Unsupported diagnostic\n\nSecure entry functions do not support if arguments are passed on the\nstack. An \"unsupported\" diagnostic will be emitted by LLVM if that is\nthe case.\nThis commits adds support in Rust for that diagnostic so that an error\nwill be output if that is the case!\n\nSigned-off-by: Hugues de Valon <hugues.devalon@arm.com>", "tree": {"sha": "569f7b62c17341ceb75201f5c3145f5bd065c931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/569f7b62c17341ceb75201f5c3145f5bd065c931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "html_url": "https://github.com/rust-lang/rust/commit/d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/comments", "author": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "511ed9f2356af365ad8affe046b3dd33f7ac3c98", "url": "https://api.github.com/repos/rust-lang/rust/commits/511ed9f2356af365ad8affe046b3dd33f7ac3c98", "html_url": "https://github.com/rust-lang/rust/commit/511ed9f2356af365ad8affe046b3dd33f7ac3c98"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "f35c1016f86be77fcf0f9cec5275f2ca8f9adc4c", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "patch": "@@ -344,6 +344,13 @@ unsafe extern \"C\" fn diagnostic_handler(info: &DiagnosticInfo, user: *mut c_void\n             .expect(\"non-UTF8 diagnostic\");\n             diag_handler.warn(&msg);\n         }\n+        llvm::diagnostic::Unsupported(diagnostic_ref) => {\n+            let msg = llvm::build_string(|s| {\n+                llvm::LLVMRustWriteDiagnosticInfoToString(diagnostic_ref, s)\n+            })\n+            .expect(\"non-UTF8 diagnostic\");\n+            diag_handler.err(&msg);\n+        }\n         llvm::diagnostic::UnknownDiagnostic(..) => {}\n     }\n }"}, {"sha": "ccd3e42e458fd3aa9b7ff4c0e67adb1e0d898eb6", "filename": "compiler/rustc_codegen_llvm/src/llvm/diagnostic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fdiagnostic.rs?ref=d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "patch": "@@ -118,6 +118,7 @@ pub enum Diagnostic<'ll> {\n     InlineAsm(InlineAsmDiagnostic<'ll>),\n     PGO(&'ll DiagnosticInfo),\n     Linker(&'ll DiagnosticInfo),\n+    Unsupported(&'ll DiagnosticInfo),\n \n     /// LLVM has other types that we do not wrap here.\n     UnknownDiagnostic(&'ll DiagnosticInfo),\n@@ -159,6 +160,7 @@ impl Diagnostic<'ll> {\n \n             Dk::PGOProfile => PGO(di),\n             Dk::Linker => Linker(di),\n+            Dk::Unsupported => Unsupported(di),\n \n             _ => UnknownDiagnostic(di),\n         }"}, {"sha": "af3f3e7aa03c0bbdae75a4c4ef665a8bd9836bc0", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "patch": "@@ -483,6 +483,7 @@ pub enum DiagnosticKind {\n     OptimizationFailure,\n     PGOProfile,\n     Linker,\n+    Unsupported,\n }\n \n /// LLVMRustDiagnosticLevel"}, {"sha": "9f8ea7f43d84bcc6ec6e9a9842bbe858a6017d46", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d255d70e7a6a84c82cc74f968f529f42dd40b8ce/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=d255d70e7a6a84c82cc74f968f529f42dd40b8ce", "patch": "@@ -1171,6 +1171,7 @@ enum class LLVMRustDiagnosticKind {\n   OptimizationFailure,\n   PGOProfile,\n   Linker,\n+  Unsupported,\n };\n \n static LLVMRustDiagnosticKind toRust(DiagnosticKind Kind) {\n@@ -1197,6 +1198,8 @@ static LLVMRustDiagnosticKind toRust(DiagnosticKind Kind) {\n     return LLVMRustDiagnosticKind::PGOProfile;\n   case DK_Linker:\n     return LLVMRustDiagnosticKind::Linker;\n+  case DK_Unsupported:\n+    return LLVMRustDiagnosticKind::Unsupported;\n   default:\n     return (Kind >= DK_FirstRemark && Kind <= DK_LastRemark)\n                ? LLVMRustDiagnosticKind::OptimizationRemarkOther"}]}