{"sha": "203d5025bb70b21a0f75235a8cec23c0b1b571a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwM2Q1MDI1YmI3MGIyMWEwZjc1MjM1YThjZWMyM2MwYjFiNTcxYTE=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-03T03:38:56Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-03T04:53:15Z"}, "message": "Use Option::filter instead of open-coding it", "tree": {"sha": "c9cc19979cf379acd5bbb2a0bb8a895282b39170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9cc19979cf379acd5bbb2a0bb8a895282b39170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/203d5025bb70b21a0f75235a8cec23c0b1b571a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/203d5025bb70b21a0f75235a8cec23c0b1b571a1", "html_url": "https://github.com/rust-lang/rust/commit/203d5025bb70b21a0f75235a8cec23c0b1b571a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/203d5025bb70b21a0f75235a8cec23c0b1b571a1/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18d855b8f6358d34dbee033faccc82b8c849a4b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d855b8f6358d34dbee033faccc82b8c849a4b3", "html_url": "https://github.com/rust-lang/rust/commit/18d855b8f6358d34dbee033faccc82b8c849a4b3"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "e097264ec8aa014b1b354ca57a91720dc71dccd8", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/203d5025bb70b21a0f75235a8cec23c0b1b571a1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/203d5025bb70b21a0f75235a8cec23c0b1b571a1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=203d5025bb70b21a0f75235a8cec23c0b1b571a1", "patch": "@@ -43,22 +43,18 @@ impl<'a, 'tcx> FindHirNodeVisitor<'a, 'tcx> {\n     }\n \n     fn node_ty_contains_target(&mut self, hir_id: HirId) -> Option<Ty<'tcx>> {\n-        let ty_opt = self\n-            .infcx\n+        self.infcx\n             .in_progress_typeck_results\n-            .and_then(|typeck_results| typeck_results.borrow().node_type_opt(hir_id));\n-        match ty_opt {\n-            Some(ty) => {\n-                let ty = self.infcx.resolve_vars_if_possible(ty);\n-                if ty.walk().any(|inner| {\n+            .and_then(|typeck_results| typeck_results.borrow().node_type_opt(hir_id))\n+            .map(|ty| self.infcx.resolve_vars_if_possible(ty))\n+            .filter(|ty| {\n+                ty.walk().any(|inner| {\n                     inner == self.target\n                         || match (inner.unpack(), self.target.unpack()) {\n                             (GenericArgKind::Type(inner_ty), GenericArgKind::Type(target_ty)) => {\n+                                use ty::{Infer, TyVar};\n                                 match (inner_ty.kind(), target_ty.kind()) {\n-                                    (\n-                                        &ty::Infer(ty::TyVar(a_vid)),\n-                                        &ty::Infer(ty::TyVar(b_vid)),\n-                                    ) => self\n+                                    (&Infer(TyVar(a_vid)), &Infer(TyVar(b_vid))) => self\n                                         .infcx\n                                         .inner\n                                         .borrow_mut()\n@@ -69,14 +65,8 @@ impl<'a, 'tcx> FindHirNodeVisitor<'a, 'tcx> {\n                             }\n                             _ => false,\n                         }\n-                }) {\n-                    Some(ty)\n-                } else {\n-                    None\n-                }\n-            }\n-            None => None,\n-        }\n+                })\n+            })\n     }\n }\n "}]}