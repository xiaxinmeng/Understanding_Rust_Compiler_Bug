{"sha": "a6dc16e0750024d485d7b3f465fefedb2095561f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGMxNmUwNzUwMDI0ZDQ4NWQ3YjNmNDY1ZmVmZWRiMjA5NTU2MWY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-13T18:56:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-13T18:56:46Z"}, "message": "Rollup merge of #52299 - ljedrz:dyn_libserialize, r=cramertj\n\nDeny bare trait objects in src/libserialize\n\nEnforce `#![deny(bare_trait_objects)]` in `src/libserialize`.", "tree": {"sha": "6eb9bdaeca2ed451e8a8e588aaf91864442797f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eb9bdaeca2ed451e8a8e588aaf91864442797f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6dc16e0750024d485d7b3f465fefedb2095561f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbSPXuCRBK7hj4Ov3rIwAAdHIIAA4jBXmaf6DqKWsx+aIDH2Is\nBAb2ZqXaC4NzadF930wvjblDww/NINHozWKlvzDH81dTdTL7/yjRZm3R9LuO8C1N\n+8sQZbH6OEHz3psBMfJ09ggHZuDeOAtvt+ZcXm933ldUUub7wwcoZTOkrAnPWPpr\n1dgAw+Sfxmo2N4iFcWlkj7ORJQt/f9eedaARdMEAd8b2DQle4LntdfZLadHu/ujt\n2OrmYNNl7KvJlEhIMZ5cUe9nLPk3xBGIqDOq5/rXLp2ULDgX3Fs3XCgNOXaCgEws\nqcGbbm9jFia6GBDbPcLuP32J/ZVu66m8BOqGzrOFfObcw8e5rJqclFRCXFC/O60=\n=WVAT\n-----END PGP SIGNATURE-----\n", "payload": "tree 6eb9bdaeca2ed451e8a8e588aaf91864442797f2\nparent d711c5cd7c68de88fc7a07b53dd03560272b7ff7\nparent 0878453119ebced0182128f5661bdc3722279fae\nauthor kennytm <kennytm@gmail.com> 1531508206 +0800\ncommitter GitHub <noreply@github.com> 1531508206 +0800\n\nRollup merge of #52299 - ljedrz:dyn_libserialize, r=cramertj\n\nDeny bare trait objects in src/libserialize\n\nEnforce `#![deny(bare_trait_objects)]` in `src/libserialize`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6dc16e0750024d485d7b3f465fefedb2095561f", "html_url": "https://github.com/rust-lang/rust/commit/a6dc16e0750024d485d7b3f465fefedb2095561f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6dc16e0750024d485d7b3f465fefedb2095561f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d711c5cd7c68de88fc7a07b53dd03560272b7ff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d711c5cd7c68de88fc7a07b53dd03560272b7ff7", "html_url": "https://github.com/rust-lang/rust/commit/d711c5cd7c68de88fc7a07b53dd03560272b7ff7"}, {"sha": "0878453119ebced0182128f5661bdc3722279fae", "url": "https://api.github.com/repos/rust-lang/rust/commits/0878453119ebced0182128f5661bdc3722279fae", "html_url": "https://github.com/rust-lang/rust/commit/0878453119ebced0182128f5661bdc3722279fae"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "88cc93731131de7f838cd870a058612618ae6981", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6dc16e0750024d485d7b3f465fefedb2095561f/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dc16e0750024d485d7b3f465fefedb2095561f/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=a6dc16e0750024d485d7b3f465fefedb2095561f", "patch": "@@ -371,7 +371,7 @@ impl From<fmt::Error> for EncoderError {\n pub type EncodeResult = Result<(), EncoderError>;\n pub type DecodeResult<T> = Result<T, DecoderError>;\n \n-fn escape_str(wr: &mut fmt::Write, v: &str) -> EncodeResult {\n+fn escape_str(wr: &mut dyn fmt::Write, v: &str) -> EncodeResult {\n     wr.write_str(\"\\\"\")?;\n \n     let mut start = 0;\n@@ -433,11 +433,11 @@ fn escape_str(wr: &mut fmt::Write, v: &str) -> EncodeResult {\n     Ok(())\n }\n \n-fn escape_char(writer: &mut fmt::Write, v: char) -> EncodeResult {\n+fn escape_char(writer: &mut dyn fmt::Write, v: char) -> EncodeResult {\n     escape_str(writer, v.encode_utf8(&mut [0; 4]))\n }\n \n-fn spaces(wr: &mut fmt::Write, mut n: usize) -> EncodeResult {\n+fn spaces(wr: &mut dyn fmt::Write, mut n: usize) -> EncodeResult {\n     const BUF: &'static str = \"                \";\n \n     while n >= BUF.len() {\n@@ -461,14 +461,14 @@ fn fmt_number_or_null(v: f64) -> string::String {\n \n /// A structure for implementing serialization to JSON.\n pub struct Encoder<'a> {\n-    writer: &'a mut (fmt::Write+'a),\n+    writer: &'a mut (dyn fmt::Write+'a),\n     is_emitting_map_key: bool,\n }\n \n impl<'a> Encoder<'a> {\n     /// Creates a new JSON encoder whose output will be written to the writer\n     /// specified.\n-    pub fn new(writer: &'a mut fmt::Write) -> Encoder<'a> {\n+    pub fn new(writer: &'a mut dyn fmt::Write) -> Encoder<'a> {\n         Encoder { writer: writer, is_emitting_map_key: false, }\n     }\n }\n@@ -707,15 +707,15 @@ impl<'a> ::Encoder for Encoder<'a> {\n /// Another encoder for JSON, but prints out human-readable JSON instead of\n /// compact data\n pub struct PrettyEncoder<'a> {\n-    writer: &'a mut (fmt::Write+'a),\n+    writer: &'a mut (dyn fmt::Write+'a),\n     curr_indent: usize,\n     indent: usize,\n     is_emitting_map_key: bool,\n }\n \n impl<'a> PrettyEncoder<'a> {\n     /// Creates a new encoder whose output will be written to the specified writer\n-    pub fn new(writer: &'a mut fmt::Write) -> PrettyEncoder<'a> {\n+    pub fn new(writer: &'a mut dyn fmt::Write) -> PrettyEncoder<'a> {\n         PrettyEncoder {\n             writer,\n             curr_indent: 0,\n@@ -2053,7 +2053,7 @@ impl<T: Iterator<Item=char>> Builder<T> {\n }\n \n /// Decodes a json value from an `&mut io::Read`\n-pub fn from_reader(rdr: &mut Read) -> Result<Json, BuilderError> {\n+pub fn from_reader(rdr: &mut dyn Read) -> Result<Json, BuilderError> {\n     let mut contents = Vec::new();\n     match rdr.read_to_end(&mut contents) {\n         Ok(c)  => c,"}, {"sha": "7c1bb69434d5f0110030d529a6cdff9b939bcb3c", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6dc16e0750024d485d7b3f465fefedb2095561f/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dc16e0750024d485d7b3f465fefedb2095561f/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=a6dc16e0750024d485d7b3f465fefedb2095561f", "patch": "@@ -14,6 +14,8 @@\n Core encoding and decoding interfaces.\n */\n \n+#![deny(bare_trait_objects)]\n+\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n        html_root_url = \"https://doc.rust-lang.org/nightly/\","}]}