{"sha": "3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhY2Y0YTJhOWNiYWQ5NTIyNTA1NDNhM2E5ZDNhOGJkNmQyZWNjZjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-25T22:04:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-25T22:04:45Z"}, "message": "Fix test", "tree": {"sha": "59947ab1afcc5afc8f3a23d5f9c5ecb607946cbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59947ab1afcc5afc8f3a23d5f9c5ecb607946cbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1", "html_url": "https://github.com/rust-lang/rust/commit/3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f648de74a5e530fa64493ae1eb3878a1fc184fd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f648de74a5e530fa64493ae1eb3878a1fc184fd4", "html_url": "https://github.com/rust-lang/rust/commit/f648de74a5e530fa64493ae1eb3878a1fc184fd4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b6cf94335f4f55cd1d8433e7044ce6683896675c", "filename": "src/test/run-pass/class-impl-very-parameterized-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs?ref=3acf4a2a9cbad952250543a3a9d3a8bd6d2eccf1", "patch": "@@ -61,14 +61,14 @@ impl<T: Copy> cat<T> : Map<int, T> {\n      else { None }\n   }\n \n-  fn insert_with_key(+key: int, +val: T, ff: fn(+k: int, +v0: T, +v1: T) -> T) -> bool {\n+  fn update_with_key(+key: int, +val: T, ff: fn(+k: int, +v0: T, +v1: T) -> T) -> bool {\n     match self.find(key) {\n       None            => return self.insert(key, val),\n       Some(copy orig) => return self.insert(key, ff(key, orig, val))\n     }\n   }\n \n-  fn insert_with(+key: int, +val: T, ff: fn(+v0: T, +v1: T) -> T) -> bool {\n+  fn update(+key: int, +val: T, ff: fn(+v0: T, +v1: T) -> T) -> bool {\n     match self.find(key) {\n       None            => return self.insert(key, val),\n       Some(copy orig) => return self.insert(key, ff(orig, val))"}]}