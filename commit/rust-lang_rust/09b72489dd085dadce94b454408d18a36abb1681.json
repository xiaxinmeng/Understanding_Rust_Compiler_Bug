{"sha": "09b72489dd085dadce94b454408d18a36abb1681", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YjcyNDg5ZGQwODVkYWRjZTk0YjQ1NDQwOGQxOGEzNmFiYjE2ODE=", "commit": {"author": {"name": "Muhammad Mominul Huque", "email": "mominul2082@gmail.com", "date": "2019-07-07T22:09:35Z"}, "committer": {"name": "Muhammad Mominul Huque", "email": "mominul2082@gmail.com", "date": "2019-07-07T22:09:35Z"}, "message": "cargo format", "tree": {"sha": "dd3546033608f91dc31b801ce36b6a9711bc9c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd3546033608f91dc31b801ce36b6a9711bc9c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09b72489dd085dadce94b454408d18a36abb1681", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE84DWFaalCZAXJAejN68UFUDeVX0FAl0ibaAACgkQN68UFUDe\nVX3DSA/8CIxVXd7A7LRElRrr0tO6p3b7e2L8NxTN+wXYrgrF8Hevyz7+xm77XAh2\nelw8kHVc4QIdizHtZWhLNjRvV4ThaV32FbW2chB32vozI8qd95cUJ5o8wZpWVFmO\nAOs1ToOp0/aikoZid6IHXIV2Bo7CB+mFwHCWaPs90kQxMhSXZSShQTOHVjyTl7/I\nYXUvex4vxE9z1XrHUQKucFiddaXv9sjTij37vp9U8xt14wYpJzzgPoI0/H7xlcm6\nLc2Py06oiVtf8BXnI8S8s2g0exL2E19HxVErMnI4r7YZSx+vHlaoVE02mjusv+rF\n8BLmL62jN3TQDQoEoPAmdOJTIuF4+Jkrv9AoaHlUZTSTDlFehy1JVavl98nTDTF7\nvmp8g88soIFp8yYLUJqVUMj+5logYwyCNNGDGd3dVZkvjkzL8DQLVSJfz6VLFbU/\niWBFM+7XYSyyOeROoEZVYVZnWoEelMjVC/A90srtV1JeiaHpbE7Ak3x1F6Z1cZDw\neBSm2MV1t+hV4fI2Ds6/3v4oAgdzpnOUY5+H7hRsbw6DWSNmHBK1yNN0R2CD7h1p\np0pG5W9Fq65974Ice5guDjHfs0OKrQ4ZM5Rto1iS9CwA+gzNJ4XeroECPY2pz7OZ\nTpo5IohWWWiTl0txFbX4Cn+vY/b84cDv6GhdReiVtdNZddzt/0Q=\n=KBTd\n-----END PGP SIGNATURE-----", "payload": "tree dd3546033608f91dc31b801ce36b6a9711bc9c61\nparent 012fec54dc508896493d5d3073b4786c93d66fe9\nauthor Muhammad Mominul Huque <mominul2082@gmail.com> 1562537375 +0600\ncommitter Muhammad Mominul Huque <mominul2082@gmail.com> 1562537375 +0600\n\ncargo format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09b72489dd085dadce94b454408d18a36abb1681", "html_url": "https://github.com/rust-lang/rust/commit/09b72489dd085dadce94b454408d18a36abb1681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09b72489dd085dadce94b454408d18a36abb1681/comments", "author": {"login": "mominul", "id": 9459891, "node_id": "MDQ6VXNlcjk0NTk4OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9459891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mominul", "html_url": "https://github.com/mominul", "followers_url": "https://api.github.com/users/mominul/followers", "following_url": "https://api.github.com/users/mominul/following{/other_user}", "gists_url": "https://api.github.com/users/mominul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mominul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mominul/subscriptions", "organizations_url": "https://api.github.com/users/mominul/orgs", "repos_url": "https://api.github.com/users/mominul/repos", "events_url": "https://api.github.com/users/mominul/events{/privacy}", "received_events_url": "https://api.github.com/users/mominul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mominul", "id": 9459891, "node_id": "MDQ6VXNlcjk0NTk4OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9459891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mominul", "html_url": "https://github.com/mominul", "followers_url": "https://api.github.com/users/mominul/followers", "following_url": "https://api.github.com/users/mominul/following{/other_user}", "gists_url": "https://api.github.com/users/mominul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mominul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mominul/subscriptions", "organizations_url": "https://api.github.com/users/mominul/orgs", "repos_url": "https://api.github.com/users/mominul/repos", "events_url": "https://api.github.com/users/mominul/events{/privacy}", "received_events_url": "https://api.github.com/users/mominul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012fec54dc508896493d5d3073b4786c93d66fe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/012fec54dc508896493d5d3073b4786c93d66fe9", "html_url": "https://github.com/rust-lang/rust/commit/012fec54dc508896493d5d3073b4786c93d66fe9"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "8053576623f90fda3e965b4f3134a3acf10206c7", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=09b72489dd085dadce94b454408d18a36abb1681", "patch": "@@ -19,7 +19,10 @@ use crate::{\n         TypeAliasId,\n     },\n     impl_block::ImplBlock,\n-    name::{BOOL, CHAR, F32, F64, I128, I16, I32, I64, I8, ISIZE, STR, U128, U16, U32, U64, U8, USIZE, SELF_TYPE},\n+    name::{\n+        BOOL, CHAR, F32, F64, I128, I16, I32, I64, I8, ISIZE, SELF_TYPE, STR, U128, U16, U32, U64,\n+        U8, USIZE,\n+    },\n     nameres::{CrateModuleId, ImportId, ModuleScope, Namespace},\n     resolve::Resolver,\n     traits::{TraitData, TraitItem},"}, {"sha": "07a59193f0660284eb54090bdc9bbc36e983a21a", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=09b72489dd085dadce94b454408d18a36abb1681", "patch": "@@ -82,11 +82,7 @@ impl GenericParams {\n             GenericDef::Enum(it) => generics.fill(&*it.source(db).ast, start),\n             GenericDef::Trait(it) => {\n                 // traits get the Self type as an implicit first type parameter\n-                generics.params.push(GenericParam {\n-                    idx: start,\n-                    name: SELF_TYPE,\n-                    default: None,\n-                });\n+                generics.params.push(GenericParam { idx: start, name: SELF_TYPE, default: None });\n                 generics.fill(&*it.source(db).ast, start + 1);\n             }\n             GenericDef::TypeAlias(it) => generics.fill(&*it.source(db).ast, start),"}, {"sha": "5f64b7759ea85d7e12e2d0fb4bbdff5cda64e37b", "filename": "crates/ra_hir/src/name.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fname.rs?ref=09b72489dd085dadce94b454408d18a36abb1681", "patch": "@@ -112,7 +112,8 @@ pub(crate) const SELF_TYPE: Name = Name::new(SmolStr::new_inline_from_ascii(4, b\n pub(crate) const MACRO_RULES: Name = Name::new(SmolStr::new_inline_from_ascii(11, b\"macro_rules\"));\n pub(crate) const STD: Name = Name::new(SmolStr::new_inline_from_ascii(3, b\"std\"));\n pub(crate) const ITER: Name = Name::new(SmolStr::new_inline_from_ascii(4, b\"iter\"));\n-pub(crate) const INTO_ITERATOR: Name = Name::new(SmolStr::new_inline_from_ascii(12, b\"IntoIterator\"));\n+pub(crate) const INTO_ITERATOR: Name =\n+    Name::new(SmolStr::new_inline_from_ascii(12, b\"IntoIterator\"));\n pub(crate) const ITEM: Name = Name::new(SmolStr::new_inline_from_ascii(4, b\"Item\"));\n \n fn resolve_name(text: &SmolStr) -> SmolStr {"}, {"sha": "bbdc606cd9e3352261bc15cbdb4d04b7db858a9d", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=09b72489dd085dadce94b454408d18a36abb1681", "patch": "@@ -65,8 +65,8 @@ use test_utils::tested_by;\n \n use crate::{\n     diagnostics::DiagnosticSink, either::Either, ids::MacroDefId,\n-    nameres::diagnostics::DefDiagnostic, AstDatabase, AstId, BuiltinType, Crate,\n-    DefDatabase, HirFileId, MacroDef, Module, ModuleDef, Name, Path, PathKind, Trait,\n+    nameres::diagnostics::DefDiagnostic, AstDatabase, AstId, BuiltinType, Crate, DefDatabase,\n+    HirFileId, MacroDef, Module, ModuleDef, Name, Path, PathKind, Trait,\n };\n \n pub(crate) use self::raw::{ImportSourceMap, RawItems};"}, {"sha": "552a1b6d9ea44d7065a48f2738df5d221a8990bd", "filename": "crates/ra_hir/src/nameres/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs?ref=09b72489dd085dadce94b454408d18a36abb1681", "patch": "@@ -13,8 +13,8 @@ use crate::{\n         diagnostics::DefDiagnostic, raw, CrateDefMap, CrateModuleId, ItemOrMacro, ModuleData,\n         ModuleDef, PerNs, ReachedFixedPoint, Resolution, ResolveMode,\n     },\n-    AstId, Const, DefDatabase, Enum, Function, HirFileId, MacroDef, Module, Name, Path,\n-    Static, Struct, Trait, TypeAlias, Union,\n+    AstId, Const, DefDatabase, Enum, Function, HirFileId, MacroDef, Module, Name, Path, Static,\n+    Struct, Trait, TypeAlias, Union,\n };\n \n pub(super) fn collect_defs(db: &impl DefDatabase, mut def_map: CrateDefMap) -> CrateDefMap {"}, {"sha": "52a49070a118e574c766f037ff3a77adfb605ddb", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b72489dd085dadce94b454408d18a36abb1681/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=09b72489dd085dadce94b454408d18a36abb1681", "patch": "@@ -40,7 +40,7 @@ use crate::{\n         PatId, Statement, UnaryOp,\n     },\n     generics::{GenericParams, HasGenericParams},\n-    name::{SELF_TYPE, INTO_ITERATOR, ITEM, ITER, STD},\n+    name::{INTO_ITERATOR, ITEM, ITER, SELF_TYPE, STD},\n     nameres::{Namespace, PerNs},\n     path::{GenericArg, GenericArgs, PathKind, PathSegment},\n     resolve::{\n@@ -49,8 +49,8 @@ use crate::{\n     },\n     ty::infer::diagnostics::InferenceDiagnostic,\n     type_ref::{Mutability, TypeRef},\n-    AdtDef, ConstData, DefWithBody, FnData, Function, HirDatabase, ImplItem,\n-    ModuleDef, Name, Path, StructField,\n+    AdtDef, ConstData, DefWithBody, FnData, Function, HirDatabase, ImplItem, ModuleDef, Name, Path,\n+    StructField,\n };\n \n mod unify;"}]}