{"sha": "f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYWViYjBhODM4YzJiNDJiOTU4MGU4NWYzMjZlN2JjOWJiYjRiMzM=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-23T12:02:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-23T12:02:10Z"}, "message": "Rollup merge of #42821 - michaelwoerister:incr-debug-output-on-stderr, r=alexcrichton\n\nPrint -Zincremental-info to stderr instead of stdout.\n\nFixes #42583.\n\nThe [cargo-incremental](https://github.com/nikomatsakis/cargo-incremental) tool probably does not need to be updated. It already merges stdout and stderr before parsing the compiler's output.\n\nr? @alexcrichton", "tree": {"sha": "d644579c3d82d2aa453c3a3020f38b89a779f242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d644579c3d82d2aa453c3a3020f38b89a779f242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "html_url": "https://github.com/rust-lang/rust/commit/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc2333fabaf360f2eca2d4450507d834b6155d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc2333fabaf360f2eca2d4450507d834b6155d5", "html_url": "https://github.com/rust-lang/rust/commit/ddc2333fabaf360f2eca2d4450507d834b6155d5"}, {"sha": "12b11d83464241cd074fa67e2224f32b0c40720e", "url": "https://api.github.com/repos/rust-lang/rust/commits/12b11d83464241cd074fa67e2224f32b0c40720e", "html_url": "https://github.com/rust-lang/rust/commit/12b11d83464241cd074fa67e2224f32b0c40720e"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "13b019af2eaa19ab6fe3e4c907a7162f2882986f", "filename": "src/librustc_incremental/persist/file_format.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs?ref=f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "patch": "@@ -117,9 +117,9 @@ fn report_format_mismatch(sess: &Session, file: &Path, message: &str) {\n     debug!(\"read_file: {}\", message);\n \n     if sess.opts.debugging_opts.incremental_info {\n-        println!(\"incremental: ignoring cache artifact `{}`: {}\",\n-                 file.file_name().unwrap().to_string_lossy(),\n-                 message);\n+        eprintln!(\"incremental: ignoring cache artifact `{}`: {}\",\n+                  file.file_name().unwrap().to_string_lossy(),\n+                  message);\n     }\n }\n "}, {"sha": "28d33d9528692f6d2713a42c0761de724abf5769", "filename": "src/librustc_incremental/persist/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs?ref=f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "patch": "@@ -435,8 +435,8 @@ fn copy_files(target_dir: &Path,\n     }\n \n     if print_stats_on_success {\n-        println!(\"incremental: session directory: {} files hard-linked\", files_linked);\n-        println!(\"incremental: session directory: {} files copied\", files_copied);\n+        eprintln!(\"incremental: session directory: {} files hard-linked\", files_linked);\n+        eprintln!(\"incremental: session directory: {} files copied\", files_copied);\n     }\n \n     Ok(files_linked > 0 || files_copied == 0)"}, {"sha": "586bb79e596e1717448b6b46f1b22be8e863d840", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "patch": "@@ -151,8 +151,8 @@ pub fn decode_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     if prev_commandline_args_hash != tcx.sess.opts.dep_tracking_hash() {\n         if tcx.sess.opts.debugging_opts.incremental_info {\n-            println!(\"incremental: completely ignoring cache because of \\\n-                      differing commandline arguments\");\n+            eprintln!(\"incremental: completely ignoring cache because of \\\n+                       differing commandline arguments\");\n         }\n         // We can't reuse the cache, purge it.\n         debug!(\"decode_dep_graph: differing commandline arg hashes\");\n@@ -309,8 +309,8 @@ fn reconcile_work_products<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                     all_files_exist = false;\n \n                     if tcx.sess.opts.debugging_opts.incremental_info {\n-                        println!(\"incremental: could not find file for up-to-date work product: {}\",\n-                                 path.display());\n+                        eprintln!(\"incremental: could not find file for \\\n+                                   up-to-date work product: {}\", path.display());\n                     }\n                 }\n             }\n@@ -418,10 +418,10 @@ fn process_edge<'a, 'tcx, 'edges>(\n                         format!(\"{:?}\", blame)\n                     };\n \n-                    println!(\"incremental: module {:?} is dirty because {:?} \\\n-                              changed or was removed\",\n-                             wp_id,\n-                             blame_str);\n+                    eprintln!(\"incremental: module {:?} is dirty because {:?} \\\n+                               changed or was removed\",\n+                              wp_id,\n+                              blame_str);\n                 }\n             }\n         }"}, {"sha": "1bdd4f851fb131ead0a1309c6332b173b73fd06e", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "patch": "@@ -47,8 +47,8 @@ pub fn save_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let query = tcx.dep_graph.query();\n \n     if tcx.sess.opts.debugging_opts.incremental_info {\n-        println!(\"incremental: {} nodes in dep-graph\", query.graph.len_nodes());\n-        println!(\"incremental: {} edges in dep-graph\", query.graph.len_edges());\n+        eprintln!(\"incremental: {} nodes in dep-graph\", query.graph.len_nodes());\n+        eprintln!(\"incremental: {} edges in dep-graph\", query.graph.len_edges());\n     }\n \n     let mut hcx = HashContext::new(tcx, incremental_hashes_map);\n@@ -258,9 +258,9 @@ pub fn encode_dep_graph(tcx: TyCtxt,\n     graph.encode(encoder)?;\n \n     if tcx.sess.opts.debugging_opts.incremental_info {\n-        println!(\"incremental: {} nodes in reduced dep-graph\", graph.nodes.len());\n-        println!(\"incremental: {} edges in serialized dep-graph\", graph.edge_list_data.len());\n-        println!(\"incremental: {} hashes in serialized dep-graph\", graph.hashes.len());\n+        eprintln!(\"incremental: {} nodes in reduced dep-graph\", graph.nodes.len());\n+        eprintln!(\"incremental: {} edges in serialized dep-graph\", graph.edge_list_data.len());\n+        eprintln!(\"incremental: {} hashes in serialized dep-graph\", graph.hashes.len());\n     }\n \n     if tcx.sess.opts.debugging_opts.incremental_dump_hash {"}, {"sha": "7e99ea0ee19775e1179acd35bb931b3295adbeca", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "patch": "@@ -893,7 +893,7 @@ fn dump_incremental_data(trans: &CrateTranslation) {\n             ModuleSource::Translated(..) => (),\n         }\n     }\n-    println!(\"incremental: re-using {} out of {} modules\", reuse, trans.modules.len());\n+    eprintln!(\"incremental: re-using {} out of {} modules\", reuse, trans.modules.len());\n }\n \n struct WorkItem {"}, {"sha": "2589a3538a940729bece46979422cbb6184fdee1", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=f3aebb0a838c2b42b9580e85f326e7bc9bbb4b33", "patch": "@@ -1150,9 +1150,9 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                     Some(work_product)\n                 } else {\n                     if scx.sess().opts.debugging_opts.incremental_info {\n-                        println!(\"incremental: CGU `{}` invalidated because of \\\n-                                  changed partitioning hash.\",\n-                                 cgu.name());\n+                        eprintln!(\"incremental: CGU `{}` invalidated because of \\\n+                                   changed partitioning hash.\",\n+                                   cgu.name());\n                     }\n                     debug!(\"trans_reuse_previous_work_products: \\\n                             not reusing {:?} because hash changed to {:?}\","}]}