{"sha": "0f12b40bff417f0e5b83df8f8213e0886c61101f", "node_id": "C_kwDOAAsO6NoAKDBmMTJiNDBiZmY0MTdmMGU1YjgzZGY4ZjgyMTNlMDg4NmM2MTEwMWY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-13T12:49:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-13T12:49:21Z"}, "message": "Rollup merge of #102999 - compiler-errors:issue-102985, r=fee1-dead\n\nDelay `is_intrinsic` query until after we've determined the callee is a function\n\nFixes #102985", "tree": {"sha": "58482c244d7ea2a54d78e9a06884f7a44263153e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58482c244d7ea2a54d78e9a06884f7a44263153e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f12b40bff417f0e5b83df8f8213e0886c61101f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjSAlRCRBK7hj4Ov3rIwAAJqgIAD8L4YuC2jIXm1Ipx9ifUFMB\nJc3RXIyFXF0FTJZNniqqchzNWZ5rxlvUDC1VviKeU2k0Aesjy0mHzRZLKEr1F7jx\nJLjUhYzYegoud+Wa1M6WeYWKBLm/Qn5cmLwU/CwFQP1Ht3U2YRx+5TTw53VvGVc0\n4DheedlPaXO/Pc06JPo6RPJfbO+iz7/XyONp9p103uNVKnQarqmTC+YDjRt5aRoM\nbn10Syk5X1qYLGJ8gCB/s8Zj1xFuGO0wp1YqJrzz+pTI9qyQLnSMdtTSycxmBUSw\nXQqHOJ8JeuuJ4ffX9w7SDfC1nL4k9XZozfbvhJ5gGzae9VOiUi/Ry6tODxwU00s=\n=1aFN\n-----END PGP SIGNATURE-----\n", "payload": "tree 58482c244d7ea2a54d78e9a06884f7a44263153e\nparent 48f950c5272cb13f9b8ecee5abf1052516caace5\nparent af3c6f9a0395315720ee7c9a16fe9f1d5bdddc62\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1665665361 +0530\ncommitter GitHub <noreply@github.com> 1665665361 +0530\n\nRollup merge of #102999 - compiler-errors:issue-102985, r=fee1-dead\n\nDelay `is_intrinsic` query until after we've determined the callee is a function\n\nFixes #102985\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f12b40bff417f0e5b83df8f8213e0886c61101f", "html_url": "https://github.com/rust-lang/rust/commit/0f12b40bff417f0e5b83df8f8213e0886c61101f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f12b40bff417f0e5b83df8f8213e0886c61101f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48f950c5272cb13f9b8ecee5abf1052516caace5", "url": "https://api.github.com/repos/rust-lang/rust/commits/48f950c5272cb13f9b8ecee5abf1052516caace5", "html_url": "https://github.com/rust-lang/rust/commit/48f950c5272cb13f9b8ecee5abf1052516caace5"}, {"sha": "af3c6f9a0395315720ee7c9a16fe9f1d5bdddc62", "url": "https://api.github.com/repos/rust-lang/rust/commits/af3c6f9a0395315720ee7c9a16fe9f1d5bdddc62", "html_url": "https://github.com/rust-lang/rust/commit/af3c6f9a0395315720ee7c9a16fe9f1d5bdddc62"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "22a61774e8cf76c3765e8d6c1d80f1907a54820a", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f12b40bff417f0e5b83df8f8213e0886c61101f/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f12b40bff417f0e5b83df8f8213e0886c61101f/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=0f12b40bff417f0e5b83df8f8213e0886c61101f", "patch": "@@ -909,8 +909,6 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                     return;\n                 }\n \n-                let is_intrinsic = tcx.is_intrinsic(callee);\n-\n                 if !tcx.is_const_fn_raw(callee) {\n                     if !tcx.is_const_default_method(callee) {\n                         // To get to here we must have already found a const impl for the\n@@ -970,7 +968,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                     // We do not use `const` modifiers for intrinsic \"functions\", as intrinsics are\n                     // `extern` functions, and these have no way to get marked `const`. So instead we\n                     // use `rustc_const_(un)stable` attributes to mean that the intrinsic is `const`\n-                    if self.ccx.is_const_stable_const_fn() || is_intrinsic {\n+                    if self.ccx.is_const_stable_const_fn() || tcx.is_intrinsic(callee) {\n                         self.check_op(ops::FnCallUnstable(callee, None));\n                         return;\n                     }"}, {"sha": "e0df72003844ce586fa524bf1d0019141dd6caea", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-102985.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0f12b40bff417f0e5b83df8f8213e0886c61101f/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102985.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f12b40bff417f0e5b83df8f8213e0886c61101f/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102985.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102985.rs?ref=0f12b40bff417f0e5b83df8f8213e0886c61101f", "patch": "@@ -0,0 +1,11 @@\n+#![feature(const_trait_impl)]\n+\n+struct Bug {\n+    inner: [(); match || 1 {\n+        n => n(),\n+        //~^ ERROR the trait bound\n+        //~| ERROR cannot call non-const fn `Bug::inner::{constant#0}::{closure#0}` in constants\n+    }],\n+}\n+\n+fn main() {}"}, {"sha": "14d87e7cdc64a417f454a12e8368bfc860df6a8b", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-102985.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0f12b40bff417f0e5b83df8f8213e0886c61101f/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102985.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f12b40bff417f0e5b83df8f8213e0886c61101f/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102985.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102985.stderr?ref=0f12b40bff417f0e5b83df8f8213e0886c61101f", "patch": "@@ -0,0 +1,26 @@\n+error[E0277]: the trait bound `[closure@$DIR/issue-102985.rs:4:23: 4:25]: ~const Fn<()>` is not satisfied\n+  --> $DIR/issue-102985.rs:5:14\n+   |\n+LL |         n => n(),\n+   |              ^^^ expected an `Fn<()>` closure, found `[closure@$DIR/issue-102985.rs:4:23: 4:25]`\n+   |\n+   = help: the trait `~const Fn<()>` is not implemented for closure `[closure@$DIR/issue-102985.rs:4:23: 4:25]`\n+note: the trait `Fn<()>` is implemented for `[closure@$DIR/issue-102985.rs:4:23: 4:25]`, but that implementation is not `const`\n+  --> $DIR/issue-102985.rs:5:14\n+   |\n+LL |         n => n(),\n+   |              ^^^\n+   = note: wrap the `[closure@$DIR/issue-102985.rs:4:23: 4:25]` in a closure with no arguments: `|| { /* code */ }`\n+\n+error[E0015]: cannot call non-const fn `Bug::inner::{constant#0}::{closure#0}` in constants\n+  --> $DIR/issue-102985.rs:5:14\n+   |\n+LL |         n => n(),\n+   |              ^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0015, E0277.\n+For more information about an error, try `rustc --explain E0015`."}]}