{"sha": "87f2e21e183e1d888d2781a127e654a379be472b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZjJlMjFlMTgzZTFkODg4ZDI3ODFhMTI3ZTY1NGEzNzliZTQ3MmI=", "commit": {"author": {"name": "Herman J. Radtke III", "email": "hermanradtke@gmail.com", "date": "2014-04-25T15:13:22Z"}, "committer": {"name": "Herman J. Radtke III", "email": "hermanradtke@gmail.com", "date": "2014-04-25T15:17:18Z"}, "message": "doc: Update modules for containers", "tree": {"sha": "b2bdc66994a2014bb51b41b68b40696874f26541", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2bdc66994a2014bb51b41b68b40696874f26541"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87f2e21e183e1d888d2781a127e654a379be472b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87f2e21e183e1d888d2781a127e654a379be472b", "html_url": "https://github.com/rust-lang/rust/commit/87f2e21e183e1d888d2781a127e654a379be472b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87f2e21e183e1d888d2781a127e654a379be472b/comments", "author": {"login": "hjr3", "id": 33318, "node_id": "MDQ6VXNlcjMzMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/33318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjr3", "html_url": "https://github.com/hjr3", "followers_url": "https://api.github.com/users/hjr3/followers", "following_url": "https://api.github.com/users/hjr3/following{/other_user}", "gists_url": "https://api.github.com/users/hjr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjr3/subscriptions", "organizations_url": "https://api.github.com/users/hjr3/orgs", "repos_url": "https://api.github.com/users/hjr3/repos", "events_url": "https://api.github.com/users/hjr3/events{/privacy}", "received_events_url": "https://api.github.com/users/hjr3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjr3", "id": 33318, "node_id": "MDQ6VXNlcjMzMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/33318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjr3", "html_url": "https://github.com/hjr3", "followers_url": "https://api.github.com/users/hjr3/followers", "following_url": "https://api.github.com/users/hjr3/following{/other_user}", "gists_url": "https://api.github.com/users/hjr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjr3/subscriptions", "organizations_url": "https://api.github.com/users/hjr3/orgs", "repos_url": "https://api.github.com/users/hjr3/repos", "events_url": "https://api.github.com/users/hjr3/events{/privacy}", "received_events_url": "https://api.github.com/users/hjr3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eea4909a8713a54b3c47e871a70baf6c722999a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/eea4909a8713a54b3c47e871a70baf6c722999a3", "html_url": "https://github.com/rust-lang/rust/commit/eea4909a8713a54b3c47e871a70baf6c722999a3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "bb2f3c7956705e20709ea6d53de5d40266af2235", "filename": "src/doc/guide-container.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87f2e21e183e1d888d2781a127e654a379be472b/src%2Fdoc%2Fguide-container.md", "raw_url": "https://github.com/rust-lang/rust/raw/87f2e21e183e1d888d2781a127e654a379be472b/src%2Fdoc%2Fguide-container.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-container.md?ref=87f2e21e183e1d888d2781a127e654a379be472b", "patch": "@@ -22,10 +22,10 @@ just unique keys without a corresponding value. The `Map` and `Set` traits in\n \n The standard library provides three owned map/set types:\n \n-* `std::hashmap::HashMap` and `std::hashmap::HashSet`, requiring the keys to\n+* `collections::HashMap` and `collections::HashSet`, requiring the keys to\n   implement `Eq` and `Hash`\n-* `std::trie::TrieMap` and `std::trie::TrieSet`, requiring the keys to be `uint`\n-* `extra::treemap::TreeMap` and `extra::treemap::TreeSet`, requiring the keys\n+* `collections::TrieMap` and `collections::TrieSet`, requiring the keys to be `uint`\n+* `collections::TreeMap` and `collections::TreeSet`, requiring the keys\n   to implement `TotalOrd`\n \n These maps do not use managed pointers so they can be sent between tasks as\n@@ -42,19 +42,19 @@ implementing the `Hash` trait.\n \n ## Double-ended queues\n \n-The `extra::ringbuf` module implements a double-ended queue with `O(1)`\n+The `collections::ringbuf` module implements a double-ended queue with `O(1)`\n amortized inserts and removals from both ends of the container. It also has\n `O(1)` indexing like a vector. The contained elements are not required to be\n copyable, and the queue will be sendable if the contained type is sendable.\n-Its interface `Deque` is defined in `extra::collections`.\n+Its interface `Deque` is defined in `collections`.\n \n The `extra::dlist` module implements a double-ended linked list, also\n implementing the `Deque` trait, with `O(1)` removals and inserts at either end,\n and `O(1)` concatenation.\n \n ## Priority queues\n \n-The `extra::priority_queue` module implements a queue ordered by a key.  The\n+The `collections::priority_queue` module implements a queue ordered by a key.  The\n contained elements are not required to be copyable, and the queue will be\n sendable if the contained type is sendable.\n "}]}