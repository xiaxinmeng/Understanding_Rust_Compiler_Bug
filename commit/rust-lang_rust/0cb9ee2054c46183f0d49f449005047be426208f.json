{"sha": "0cb9ee2054c46183f0d49f449005047be426208f", "node_id": "C_kwDOAAsO6NoAKDBjYjllZTIwNTRjNDYxODNmMGQ0OWY0NDkwMDUwNDdiZTQyNjIwOGY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-25T11:56:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-25T11:56:23Z"}, "message": "Merge #10346\n\n10346: minor: align code with code-style r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "338027d76cc32d722c559819ac6c0e29ba71bfce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/338027d76cc32d722c559819ac6c0e29ba71bfce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cb9ee2054c46183f0d49f449005047be426208f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhTw5nCRBK7hj4Ov3rIwAAo+0IAEb8gxHeAW7Wait8axQ8oytp\n9AEvP60kmGzftAS2F33njqXYa4CyKP+MCZOx/zabKK+AsqRp6GX2z0TPtz5hOID+\nSIMiP1bG5ccj5P6izyQ2TAyU+2LDHM3cGyk7IYRJHzcItcPq2PTAoBHy8pfUVwFa\nEhpWex4PV6S0o3zkRZbUJQK1W4OLg5x19MdIOIgboEtnFQk4bwBGcz3OAYpMlNpM\nr6CqAdIgqnzj/aroL1NxL2BXPIvXaIz3RurAPomiFjldj2JzYE+JzUH6HlsZfl7L\nxUbzATkBFpcP7jLv3nu1BPLOnLawvetECvm4sVD2pk9DHIhC7sLxg4Oclr2a3OE=\n=QVpf\n-----END PGP SIGNATURE-----\n", "payload": "tree 338027d76cc32d722c559819ac6c0e29ba71bfce\nparent de2ea00ace0910701620afbcaf3a124ea2cb9942\nparent 5767f31cbfb8adf7586a5e101be9f9f9a21c1480\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632570983 +0000\ncommitter GitHub <noreply@github.com> 1632570983 +0000\n\nMerge #10346\n\n10346: minor: align code with code-style r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb9ee2054c46183f0d49f449005047be426208f", "html_url": "https://github.com/rust-lang/rust/commit/0cb9ee2054c46183f0d49f449005047be426208f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cb9ee2054c46183f0d49f449005047be426208f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de2ea00ace0910701620afbcaf3a124ea2cb9942", "url": "https://api.github.com/repos/rust-lang/rust/commits/de2ea00ace0910701620afbcaf3a124ea2cb9942", "html_url": "https://github.com/rust-lang/rust/commit/de2ea00ace0910701620afbcaf3a124ea2cb9942"}, {"sha": "5767f31cbfb8adf7586a5e101be9f9f9a21c1480", "url": "https://api.github.com/repos/rust-lang/rust/commits/5767f31cbfb8adf7586a5e101be9f9f9a21c1480", "html_url": "https://github.com/rust-lang/rust/commit/5767f31cbfb8adf7586a5e101be9f9f9a21c1480"}], "stats": {"total": 68, "additions": 35, "deletions": 33}, "files": [{"sha": "745419f0741d5ebbcd2678ccbb69b518f6b99d0a", "filename": "crates/syntax/src/validation.rs", "status": "modified", "additions": 35, "deletions": 33, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9ee2054c46183f0d49f449005047be426208f/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9ee2054c46183f0d49f449005047be426208f/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation.rs?ref=0cb9ee2054c46183f0d49f449005047be426208f", "patch": "@@ -4,18 +4,48 @@\n \n mod block;\n \n+use std::convert::TryFrom;\n+\n+use rowan::Direction;\n+use rustc_lexer::unescape::{\n+    self, unescape_byte, unescape_byte_literal, unescape_char, unescape_literal, Mode,\n+};\n+\n use crate::{\n     algo,\n     ast::{self, VisibilityOwner},\n     match_ast, AstNode, SyntaxError,\n     SyntaxKind::{CONST, FN, INT_NUMBER, TYPE_ALIAS},\n     SyntaxNode, SyntaxToken, TextSize, T,\n };\n-use rowan::Direction;\n-use rustc_lexer::unescape::{\n-    self, unescape_byte, unescape_byte_literal, unescape_char, unescape_literal, Mode,\n-};\n-use std::convert::TryFrom;\n+\n+pub(crate) fn validate(root: &SyntaxNode) -> Vec<SyntaxError> {\n+    // FIXME:\n+    // * Add unescape validation of raw string literals and raw byte string literals\n+    // * Add validation of doc comments are being attached to nodes\n+\n+    let mut errors = Vec::new();\n+    for node in root.descendants() {\n+        match_ast! {\n+            match node {\n+                ast::Literal(it) => validate_literal(it, &mut errors),\n+                ast::Const(it) => validate_const(it, &mut errors),\n+                ast::BlockExpr(it) => block::validate_block_expr(it, &mut errors),\n+                ast::FieldExpr(it) => validate_numeric_name(it.name_ref(), &mut errors),\n+                ast::RecordExprField(it) => validate_numeric_name(it.name_ref(), &mut errors),\n+                ast::Visibility(it) => validate_visibility(it, &mut errors),\n+                ast::RangeExpr(it) => validate_range_expr(it, &mut errors),\n+                ast::PathSegment(it) => validate_path_keywords(it, &mut errors),\n+                ast::RefType(it) => validate_trait_object_ref_ty(it, &mut errors),\n+                ast::PtrType(it) => validate_trait_object_ptr_ty(it, &mut errors),\n+                ast::FnPtrType(it) => validate_trait_object_fn_ptr_ret_ty(it, &mut errors),\n+                ast::MacroRules(it) => validate_macro_rules(it, &mut errors),\n+                _ => (),\n+            }\n+        }\n+    }\n+    errors\n+}\n \n fn rustc_unescape_error_to_string(err: unescape::EscapeError) -> &'static str {\n     use unescape::EscapeError as EE;\n@@ -84,34 +114,6 @@ fn rustc_unescape_error_to_string(err: unescape::EscapeError) -> &'static str {\n     err_message\n }\n \n-pub(crate) fn validate(root: &SyntaxNode) -> Vec<SyntaxError> {\n-    // FIXME:\n-    // * Add unescape validation of raw string literals and raw byte string literals\n-    // * Add validation of doc comments are being attached to nodes\n-\n-    let mut errors = Vec::new();\n-    for node in root.descendants() {\n-        match_ast! {\n-            match node {\n-                ast::Literal(it) => validate_literal(it, &mut errors),\n-                ast::Const(it) => validate_const(it, &mut errors),\n-                ast::BlockExpr(it) => block::validate_block_expr(it, &mut errors),\n-                ast::FieldExpr(it) => validate_numeric_name(it.name_ref(), &mut errors),\n-                ast::RecordExprField(it) => validate_numeric_name(it.name_ref(), &mut errors),\n-                ast::Visibility(it) => validate_visibility(it, &mut errors),\n-                ast::RangeExpr(it) => validate_range_expr(it, &mut errors),\n-                ast::PathSegment(it) => validate_path_keywords(it, &mut errors),\n-                ast::RefType(it) => validate_trait_object_ref_ty(it, &mut errors),\n-                ast::PtrType(it) => validate_trait_object_ptr_ty(it, &mut errors),\n-                ast::FnPtrType(it) => validate_trait_object_fn_ptr_ret_ty(it, &mut errors),\n-                ast::MacroRules(it) => validate_macro_rules(it, &mut errors),\n-                _ => (),\n-            }\n-        }\n-    }\n-    errors\n-}\n-\n fn validate_literal(literal: ast::Literal, acc: &mut Vec<SyntaxError>) {\n     // FIXME: move this function to outer scope (https://github.com/rust-analyzer/rust-analyzer/pull/2834#discussion_r366196658)\n     fn unquote(text: &str, prefix_len: usize, end_delimiter: char) -> Option<&str> {"}]}