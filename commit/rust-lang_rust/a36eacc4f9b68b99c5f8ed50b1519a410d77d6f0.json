{"sha": "a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNmVhY2M0ZjliNjhiOTljNWY4ZWQ1MGIxNTE5YTQxMGQ3N2Q2ZjA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-22T23:12:24Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-22T23:12:35Z"}, "message": "Revert \"Clean up previous commit to not require an Option\"\n\nI made a mistake and included some submodule weirdness.\nAbout to re-push the patch without that.\n\nThis reverts commit 17ea548275364fac7cb5adbdc442010d1ba0d38d.", "tree": {"sha": "26ed396ede8a6d428c30b4e82d9c9288ca34be9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26ed396ede8a6d428c30b4e82d9c9288ca34be9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "html_url": "https://github.com/rust-lang/rust/commit/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17ea548275364fac7cb5adbdc442010d1ba0d38d", "url": "https://api.github.com/repos/rust-lang/rust/commits/17ea548275364fac7cb5adbdc442010d1ba0d38d", "html_url": "https://github.com/rust-lang/rust/commit/17ea548275364fac7cb5adbdc442010d1ba0d38d"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "f6a2574d50d4961d59d1ab56d438fc6d6f344145", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "patch": "@@ -769,30 +769,30 @@ fn create_function(fcx: fn_ctxt) -> @metadata<subprogram_md> {\n       ast_map::node_item(item, _) => {\n         match /*bad*/copy item.node {\n           ast::item_fn(decl, _, _, _) => {\n-            (item.ident, decl.output, item.id)\n+            (item.ident, Some(decl.output), item.id)\n           }\n           _ => fcx.ccx.sess.span_bug(item.span, ~\"create_function: item \\\n                                                   bound to non-function\")\n         }\n       }\n       ast_map::node_method(method, _, _) => {\n-          (method.ident, method.decl.output, method.id)\n+          (method.ident, Some(method.decl.output), method.id)\n       }\n       ast_map::node_expr(expr) => {\n         match /*bad*/copy expr.node {\n           ast::expr_fn(_, decl, _, _) => {\n-            ((dbg_cx.names)(~\"fn\"), decl.output, expr.id)\n+            ((dbg_cx.names)(~\"fn\"), Some(decl.output), expr.id)\n           }\n           ast::expr_fn_block(decl, _, _) => {\n-            ((dbg_cx.names)(~\"fn\"), decl.output, expr.id)\n+            ((dbg_cx.names)(~\"fn\"), Some(decl.output), expr.id)\n           }\n           _ => fcx.ccx.sess.span_bug(expr.span,\n                                      ~\"create_function: \\\n                                        expected an expr_fn or fn_block here\")\n         }\n       }\n       ast_map::node_dtor(_, _, did, _) => {\n-        ((dbg_cx.names)(~\"dtor\"), ast_util::dtor_ty(), did.node)\n+        ((dbg_cx.names)(~\"dtor\"), None, did.node)\n       }\n       _ => fcx.ccx.sess.bug(~\"create_function: unexpected \\\n                               sort of node\")\n@@ -810,7 +810,8 @@ fn create_function(fcx: fn_ctxt) -> @metadata<subprogram_md> {\n \n     let loc = cx.sess.codemap.lookup_char_pos(sp.lo);\n     let file_node = create_file(cx, loc.file.name).node;\n-    let ty_node = if cx.sess.opts.extra_debuginfo {\n+    let ty_node = if ret_ty.is_some() && cx.sess.opts.extra_debuginfo {\n+        let ret_ty = ret_ty.unwrap();\n         match ret_ty.node {\n           ast::ty_nil => llnull(),\n           _ => create_ty(cx, ty::node_id_to_type(cx.tcx, id), ret_ty).node"}, {"sha": "fe0da2e17b82a131e34871ccb8de98705e378a4b", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "patch": "@@ -440,10 +440,8 @@ fn operator_prec(op: ast::binop) -> uint {\n   }\n }\n \n-fn dtor_ty() -> @ast::Ty { @ast::Ty {id: 0, node: ty_nil, span: dummy_sp()} }\n-\n fn dtor_dec() -> fn_decl {\n-    let nil_t = dtor_ty();\n+    let nil_t = @ast::Ty { id: 0, node: ty_nil, span: dummy_sp() };\n     // dtor has no args\n     ast::fn_decl {\n         inputs: ~[],"}, {"sha": "1170ffba3ac5191930b40c897d4569a9d8a296a3", "filename": "src/libuv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuv?ref=a36eacc4f9b68b99c5f8ed50b1519a410d77d6f0", "patch": "@@ -1 +1 @@\n-Subproject commit 4d392c86feb6389f550d8110d36fa90d66c09251\n+Subproject commit 1170ffba3ac5191930b40c897d4569a9d8a296a3"}]}