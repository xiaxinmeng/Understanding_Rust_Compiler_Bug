{"sha": "6aa5934e2ba4ec26a3de617c3c05f113690d4086", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYTU5MzRlMmJhNGVjMjZhM2RlNjE3YzNjMDVmMTEzNjkwZDQwODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-10T21:36:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-10T21:36:34Z"}, "message": "auto merge of #9798 : mtwilliams/rust/master, r=brson\n\nI also removed superfluous trailing whitespace.\r\n\r\nI don't think I need to run the test suite.", "tree": {"sha": "b4148a055c93b85a2ee693925f619585a89a62b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4148a055c93b85a2ee693925f619585a89a62b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6aa5934e2ba4ec26a3de617c3c05f113690d4086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6aa5934e2ba4ec26a3de617c3c05f113690d4086", "html_url": "https://github.com/rust-lang/rust/commit/6aa5934e2ba4ec26a3de617c3c05f113690d4086", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6aa5934e2ba4ec26a3de617c3c05f113690d4086/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b8a41a28769b5a8dfcbb5382d577d6102b3ce28", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8a41a28769b5a8dfcbb5382d577d6102b3ce28", "html_url": "https://github.com/rust-lang/rust/commit/8b8a41a28769b5a8dfcbb5382d577d6102b3ce28"}, {"sha": "bcf76ac3ede5be8b49bebdca6d4c5043e8607aa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf76ac3ede5be8b49bebdca6d4c5043e8607aa3", "html_url": "https://github.com/rust-lang/rust/commit/bcf76ac3ede5be8b49bebdca6d4c5043e8607aa3"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "46d37a559bbebb8fdaf438a445d244551a10783c", "filename": "doc/tutorial-ffi.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6aa5934e2ba4ec26a3de617c3c05f113690d4086/doc%2Ftutorial-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/6aa5934e2ba4ec26a3de617c3c05f113690d4086/doc%2Ftutorial-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-ffi.md?ref=6aa5934e2ba4ec26a3de617c3c05f113690d4086", "patch": "@@ -135,7 +135,7 @@ the true length after compression for setting the length.\n ~~~~ {.xfail-test}\n pub fn compress(src: &[u8]) -> ~[u8] {\n     #[fixed_stack_segment]; #[inline(never)];\n-    \n+\n     unsafe {\n         let srclen = src.len() as size_t;\n         let psrc = vec::raw::to_ptr(src);\n@@ -157,7 +157,7 @@ format and `snappy_uncompressed_length` will retrieve the exact buffer size requ\n ~~~~ {.xfail-test}\n pub fn uncompress(src: &[u8]) -> Option<~[u8]> {\n     #[fixed_stack_segment]; #[inline(never)];\n-    \n+\n     unsafe {\n         let srclen = src.len() as size_t;\n         let psrc = vec::raw::to_ptr(src);\n@@ -236,7 +236,7 @@ use std::libc::size_t;\n unsafe fn snappy_max_compressed_length(source_length: size_t) -> size_t {\n     #[fixed_stack_segment]; #[inline(never)];\n     return snappy_max_compressed_length(source_length);\n-    \n+\n     #[link_args = \"-lsnappy\"]\n     extern {\n         fn snappy_max_compressed_length(source_length: size_t) -> size_t;\n@@ -259,9 +259,9 @@ check that one of the following conditions holds:\n 2. The call occurs inside of an `extern fn`;\n 3. The call occurs within a stack closure created by some other\n    safe fn.\n-   \n+\n All of these conditions ensure that you are running on a large stack\n-segmented. However, they are sometimes too strict. If your application\n+segment. However, they are sometimes too strict. If your application\n will be making many calls into C, it is often beneficial to promote\n the `#[fixed_stack_segment]` attribute higher up the call chain.  For\n example, the Rust compiler actually labels main itself as requiring a\n@@ -298,7 +298,7 @@ impl<T: Send> Unique<T> {\n     pub fn new(value: T) -> Unique<T> {\n         #[fixed_stack_segment];\n         #[inline(never)];\n-        \n+\n         unsafe {\n             let ptr = malloc(std::sys::size_of::<T>() as size_t) as *mut T;\n             assert!(!ptr::is_null(ptr));\n@@ -324,7 +324,7 @@ impl<T: Send> Drop for Unique<T> {\n     fn drop(&mut self) {\n         #[fixed_stack_segment];\n         #[inline(never)];\n-        \n+\n         unsafe {\n             let x = intrinsics::init(); // dummy value to swap in\n             // moving the object out is needed to call the destructor"}]}