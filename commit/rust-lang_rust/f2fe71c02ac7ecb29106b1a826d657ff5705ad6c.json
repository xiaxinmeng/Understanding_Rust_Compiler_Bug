{"sha": "f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZmU3MWMwMmFjN2VjYjI5MTA2YjFhODI2ZDY1N2ZmNTcwNWFkNmM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T15:03:12Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T15:03:12Z"}, "message": "Resolve incorrect diagnostic for using a non-const value in a constant", "tree": {"sha": "192eb7dcd05f961c962ca408319cf3a5310940d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/192eb7dcd05f961c962ca408319cf3a5310940d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "html_url": "https://github.com/rust-lang/rust/commit/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b933a5ce911616a2bf64c54c34693387eedb7e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b933a5ce911616a2bf64c54c34693387eedb7e1", "html_url": "https://github.com/rust-lang/rust/commit/1b933a5ce911616a2bf64c54c34693387eedb7e1"}], "stats": {"total": 104, "additions": 47, "deletions": 57}, "files": [{"sha": "0d1f6328105b3a2b6805964931d30f8083050377", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -4164,6 +4164,9 @@ impl<'a> Resolver<'a> {\n                 span_bug!(span, \"unexpected {:?} in bindings\", def)\n             }\n             Def::Local(node_id) => {\n+                use ResolutionError::*;\n+                let mut res_err = None;\n+\n                 for rib in ribs {\n                     match rib.kind {\n                         NormalRibKind | ModuleRibKind(..) | MacroDefinition(..) |\n@@ -4199,21 +4202,26 @@ impl<'a> Resolver<'a> {\n                             // named function item. This is not allowed, so we\n                             // report an error.\n                             if record_used {\n-                                resolve_error(self, span,\n-                                    ResolutionError::CannotCaptureDynamicEnvironmentInFnItem);\n+                                // We don't immediately trigger a resolve error, because\n+                                // we want certain other resolution errors (namely those\n+                                // emitted for `ConstantItemRibKind` below) to take\n+                                // precedence.\n+                                res_err = Some(CannotCaptureDynamicEnvironmentInFnItem);\n                             }\n-                            return Def::Err;\n                         }\n                         ConstantItemRibKind => {\n                             // Still doesn't deal with upvars\n                             if record_used {\n-                                resolve_error(self, span,\n-                                    ResolutionError::AttemptToUseNonConstantValueInConstant);\n+                                resolve_error(self, span, AttemptToUseNonConstantValueInConstant);\n                             }\n                             return Def::Err;\n                         }\n                     }\n                 }\n+                if let Some(res_err) = res_err {\n+                     resolve_error(self, span, res_err);\n+                     return Def::Err;\n+                }\n             }\n             Def::TyParam(..) | Def::SelfTy(..) => {\n                 for rib in ribs {"}, {"sha": "91d092634a90100ca3b2bf1cead2bab73634e751", "filename": "src/test/ui/impl-trait/bindings.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -2,27 +2,27 @@\n \n fn a<T: Clone>(x: T) {\n     const foo: impl Clone = x;\n-//~^ ERROR can't capture dynamic environment in a fn item\n+    //~^ ERROR attempt to use a non-constant value in a constant\n }\n \n fn b<T: Clone>(x: T) {\n     let _ = move || {\n         const foo: impl Clone = x;\n-//~^ ERROR can't capture dynamic environment in a fn item\n+        //~^ ERROR attempt to use a non-constant value in a constant\n     };\n }\n \n trait Foo<T: Clone> {\n     fn a(x: T) {\n         const foo: impl Clone = x;\n-//~^ ERROR can't capture dynamic environment in a fn item\n+        //~^ ERROR attempt to use a non-constant value in a constant\n     }\n }\n \n impl<T: Clone> Foo<T> for i32 {\n     fn a(x: T) {\n         const foo: impl Clone = x;\n-//~^ ERROR can't capture dynamic environment in a fn item\n+        //~^ ERROR attempt to use a non-constant value in a constant\n     }\n }\n "}, {"sha": "a5bf583afeaf6a75e09a894cb9d999dc65b6185b", "filename": "src/test/ui/impl-trait/bindings.stderr", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,35 +1,27 @@\n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/bindings.rs:4:29\n    |\n LL |     const foo: impl Clone = x;\n-   |                             ^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                             ^ non-constant value\n \n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/bindings.rs:10:33\n    |\n LL |         const foo: impl Clone = x;\n-   |                                 ^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                                 ^ non-constant value\n \n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/bindings.rs:17:33\n    |\n LL |         const foo: impl Clone = x;\n-   |                                 ^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                                 ^ non-constant value\n \n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/bindings.rs:24:33\n    |\n LL |         const foo: impl Clone = x;\n-   |                                 ^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                                 ^ non-constant value\n \n error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0434`.\n+For more information about this error, try `rustc --explain E0435`."}, {"sha": "156ae68efe2c50235036c981b89870ca431a95a4", "filename": "src/test/ui/issues/issue-27433.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-27433.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-27433.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27433.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n     let foo = 42u32;\n     const FOO : u32 = foo;\n-                   //~^ ERROR can't capture dynamic environment\n+                   //~^ ERROR attempt to use a non-constant value in a constant\n }"}, {"sha": "e232d17e6d7a696b0137367bbdd652db5e532e0a", "filename": "src/test/ui/issues/issue-27433.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-27433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-27433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27433.stderr?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,11 +1,9 @@\n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/issue-27433.rs:3:23\n    |\n LL |     const FOO : u32 = foo;\n-   |                       ^^^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                       ^^^ non-constant value\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0434`.\n+For more information about this error, try `rustc --explain E0435`."}, {"sha": "871394f9eaeb96147d2b1144a3cad6988c91d9da", "filename": "src/test/ui/issues/issue-3521-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3521-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3521-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3521-2.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -2,7 +2,7 @@ fn main() {\n     let foo = 100;\n \n     static y: isize = foo + 1;\n-    //~^ ERROR can't capture dynamic environment\n+    //~^ ERROR attempt to use a non-constant value in a constant\n \n     println!(\"{}\", y);\n }"}, {"sha": "d54bbbcdc3325609a5217c94cd144e1afd53e706", "filename": "src/test/ui/issues/issue-3521-2.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3521-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3521-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3521-2.stderr?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,11 +1,9 @@\n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/issue-3521-2.rs:4:23\n    |\n LL |     static y: isize = foo + 1;\n-   |                       ^^^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                       ^^^ non-constant value\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0434`.\n+For more information about this error, try `rustc --explain E0435`."}, {"sha": "525f6f5684e70f52a31dde057384e7f67d1bb700", "filename": "src/test/ui/issues/issue-3668-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3668-2.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,6 +1,6 @@\n fn f(x:isize) {\n     static child: isize = x + 1;\n-    //~^ ERROR can't capture dynamic environment\n+    //~^ ERROR attempt to use a non-constant value in a constant\n }\n \n fn main() {}"}, {"sha": "d6a6e8379602d27b90f900f78ff8963118cb99e3", "filename": "src/test/ui/issues/issue-3668-2.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3668-2.stderr?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,11 +1,9 @@\n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/issue-3668-2.rs:2:27\n    |\n LL |     static child: isize = x + 1;\n-   |                           ^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                           ^ non-constant value\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0434`.\n+For more information about this error, try `rustc --explain E0435`."}, {"sha": "0e1f19a75baeb1d7507f9a4cd349272b98aa666c", "filename": "src/test/ui/issues/issue-3668.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3668.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -6,7 +6,7 @@ trait PTrait {\n impl PTrait for P {\n    fn getChildOption(&self) -> Option<Box<P>> {\n        static childVal: Box<P> = self.child.get();\n-       //~^ ERROR can't capture dynamic environment\n+       //~^ ERROR attempt to use a non-constant value in a constant\n        panic!();\n    }\n }"}, {"sha": "98cd3631a5365e2a875cda5e1084593aab715837", "filename": "src/test/ui/issues/issue-3668.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Fissues%2Fissue-3668.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3668.stderr?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,11 +1,9 @@\n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/issue-3668.rs:8:34\n    |\n LL |        static childVal: Box<P> = self.child.get();\n-   |                                  ^^^^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+   |                                  ^^^^ non-constant value\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0434`.\n+For more information about this error, try `rustc --explain E0435`."}, {"sha": "51bd116fbd61c071caed3376d2ffbe5f8aa668fa", "filename": "src/test/ui/type/type-dependent-def-issue-49241.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.rs?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,6 +1,6 @@\n fn main() {\n     let v = vec![0];\n-    const l: usize = v.count(); //~ ERROR can't capture dynamic environment in a fn item\n+    const l: usize = v.count(); //~ ERROR attempt to use a non-constant value in a constant\n     let s: [u32; l] = v.into_iter().collect();\n     //~^ ERROR evaluation of constant value failed\n }"}, {"sha": "0af777fdcf90721e9a69d601ae067f8397d540e8", "filename": "src/test/ui/type/type-dependent-def-issue-49241.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2fe71c02ac7ecb29106b1a826d657ff5705ad6c/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.stderr?ref=f2fe71c02ac7ecb29106b1a826d657ff5705ad6c", "patch": "@@ -1,10 +1,8 @@\n-error[E0434]: can't capture dynamic environment in a fn item\n+error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/type-dependent-def-issue-49241.rs:3:22\n    |\n-LL |     const l: usize = v.count(); //~ ERROR can't capture dynamic environment in a fn item\n-   |                      ^\n-   |\n-   = help: use the `|| { ... }` closure form instead\n+LL |     const l: usize = v.count(); //~ ERROR attempt to use a non-constant value in a constant\n+   |                      ^ non-constant value\n \n error[E0080]: evaluation of constant value failed\n   --> $DIR/type-dependent-def-issue-49241.rs:4:18\n@@ -14,5 +12,5 @@ LL |     let s: [u32; l] = v.into_iter().collect();\n \n error: aborting due to 2 previous errors\n \n-Some errors occurred: E0080, E0434.\n+Some errors occurred: E0080, E0435.\n For more information about an error, try `rustc --explain E0080`."}]}