{"sha": "8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYjJhNTBjZTZhZGRhNGQzZDhkZmI2NmNkNjdkMzAyZWMxMDhkNDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-12T11:33:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-12T11:33:31Z"}, "message": "Merge #2807\n\n2807: Use attr location for builtin derive in goto-implementation r=matklad a=edwin0cheng\n\nThis PR is use attribute location for builtin derive in `ImplBlock`'s NavigationTarget such that the goto-implementation will goto to a correct position. \r\n\r\nRelated to #2531\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "f856e09f543a391916907fd9a19257924eb2bfaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f856e09f543a391916907fd9a19257924eb2bfaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGwQLCRBK7hj4Ov3rIwAAdHIIAKiZPy43IP4KmULk0pt3NKXH\nw7OKcBciH9yXpNDf79YPkBbISwF/z0ekHCuUsUOxHVYcV57SBpd3UXwSxMT/EFdr\nmM4uZvqifTRLuky+jyYyH7jFlrg07qdImk5A7p0tBOK/Ce6kZn7psQa8j5K/ha30\nUObPshb1QroFzvi5Cxy31bscmPzwRxnD9CKyJpnNFksAX36JvWgUX8gnXrpESi10\nGOd9BvJaR4QLxlLM8P06YgPxaDyGXvm7wSpN93UR++mh8IexA5ox/V/XKdmdlso9\n0lHa0RgXmWmdfoVCURRLl7b/EV7C0i6/7aIurwOpZgLae9iylkrLbbrATTtgOdM=\n=MS51\n-----END PGP SIGNATURE-----\n", "payload": "tree f856e09f543a391916907fd9a19257924eb2bfaf\nparent 21be386db8e8019d25c2529313d0371f91a15cb3\nparent db5f73d261413f03e4e3a4a374f8306fe8ae5578\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1578828811 +0000\ncommitter GitHub <noreply@github.com> 1578828811 +0000\n\nMerge #2807\n\n2807: Use attr location for builtin derive in goto-implementation r=matklad a=edwin0cheng\n\nThis PR is use attribute location for builtin derive in `ImplBlock`'s NavigationTarget such that the goto-implementation will goto to a correct position. \r\n\r\nRelated to #2531\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "html_url": "https://github.com/rust-lang/rust/commit/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21be386db8e8019d25c2529313d0371f91a15cb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/21be386db8e8019d25c2529313d0371f91a15cb3", "html_url": "https://github.com/rust-lang/rust/commit/21be386db8e8019d25c2529313d0371f91a15cb3"}, {"sha": "db5f73d261413f03e4e3a4a374f8306fe8ae5578", "url": "https://api.github.com/repos/rust-lang/rust/commits/db5f73d261413f03e4e3a4a374f8306fe8ae5578", "html_url": "https://github.com/rust-lang/rust/commit/db5f73d261413f03e4e3a4a374f8306fe8ae5578"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "a177cebca16a408bf2afca7c63e128aa67dd96c5", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "patch": "@@ -26,10 +26,11 @@ use hir_ty::{\n };\n use ra_db::{CrateId, Edition, FileId};\n use ra_prof::profile;\n-use ra_syntax::ast;\n+use ra_syntax::ast::{self, AttrsOwner};\n \n use crate::{\n     db::{DefDatabase, HirDatabase},\n+    has_source::HasSource,\n     CallableDef, HirDisplay, InFile, Name,\n };\n \n@@ -805,6 +806,27 @@ impl ImplBlock {\n     pub fn krate(&self, db: &impl DefDatabase) -> Crate {\n         Crate { id: self.module(db).id.krate }\n     }\n+\n+    pub fn is_builtin_derive(&self, db: &impl DefDatabase) -> Option<InFile<ast::Attr>> {\n+        let src = self.source(db);\n+        let item = src.file_id.is_builtin_derive(db)?;\n+        let hygenic = hir_expand::hygiene::Hygiene::new(db, item.file_id);\n+\n+        let attr = item\n+            .value\n+            .attrs()\n+            .filter_map(|it| {\n+                let path = hir_def::path::ModPath::from_src(it.path()?, &hygenic)?;\n+                if path.as_ident()?.to_string() == \"derive\" {\n+                    Some(it)\n+                } else {\n+                    None\n+                }\n+            })\n+            .last()?;\n+\n+        Some(item.with_value(attr))\n+    }\n }\n \n #[derive(Clone, PartialEq, Eq, Debug)]"}, {"sha": "7cf3b59a79d026d6ad4043b047919756ef8c49bb", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "patch": "@@ -112,6 +112,21 @@ impl HirFileId {\n             }\n         }\n     }\n+\n+    /// Indicate it is macro file generated for builtin derive\n+    pub fn is_builtin_derive(&self, db: &dyn db::AstDatabase) -> Option<InFile<ast::ModuleItem>> {\n+        match self.0 {\n+            HirFileIdRepr::FileId(_) => None,\n+            HirFileIdRepr::MacroFile(macro_file) => {\n+                let loc: MacroCallLoc = db.lookup_intern_macro(macro_file.macro_call_id);\n+                let item = match loc.def.kind {\n+                    MacroDefKind::BuiltInDerive(_) => loc.kind.node(db),\n+                    _ => return None,\n+                };\n+                Some(item.with_value(ast::ModuleItem::cast(item.value.clone())?))\n+            }\n+        }\n+    }\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]"}, {"sha": "b2af3479cdf712b9d0eae6baa6f445511a70879e", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "patch": "@@ -251,7 +251,11 @@ impl ToNav for hir::Module {\n impl ToNav for hir::ImplBlock {\n     fn to_nav(&self, db: &RootDatabase) -> NavigationTarget {\n         let src = self.source(db);\n-        let frange = original_range(db, src.as_ref().map(|it| it.syntax()));\n+        let frange = if let Some(item) = self.is_builtin_derive(db) {\n+            original_range(db, item.syntax())\n+        } else {\n+            original_range(db, src.as_ref().map(|it| it.syntax()))\n+        };\n \n         NavigationTarget::from_syntax(\n             frange.file_id,"}, {"sha": "31195036ea7a11c7dcbffde32342ad0a7f35f2e4", "filename": "crates/ra_ide/src/impls.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_ide%2Fsrc%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45/crates%2Fra_ide%2Fsrc%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fimpls.rs?ref=8bb2a50ce6adda4d3d8dfb66cd67d302ec108d45", "patch": "@@ -203,4 +203,16 @@ mod tests {\n             ],\n         );\n     }\n+\n+    #[test]\n+    fn goto_implementation_to_builtin_derive() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            #[derive(Copy)]\n+            struct Foo<|>;            \n+            \",\n+            &[\"impl IMPL_BLOCK FileId(1) [0; 15)\"],\n+        );\n+    }\n }"}]}