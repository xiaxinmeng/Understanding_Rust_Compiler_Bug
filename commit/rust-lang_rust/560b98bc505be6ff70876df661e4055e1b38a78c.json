{"sha": "560b98bc505be6ff70876df661e4055e1b38a78c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MGI5OGJjNTA1YmU2ZmY3MDg3NmRmNjYxZTQwNTVlMWIzOGE3OGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-10T07:39:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-10T07:39:44Z"}, "message": "Merge #4822\n\n4822: Let checkOnSafe default to some of the options of cargo r=matklad a=clemenswasser\n\nThis will fix #4631\r\nThe implementation works (as far as I have tested) but is suboptimal because I am copying the \"cargo.features\".\n\nCo-authored-by: Clemens Wasser <clemens.wasser@gmail.com>", "tree": {"sha": "e88fd7c03820fa2131b4dd1c4e0789590ebe7629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e88fd7c03820fa2131b4dd1c4e0789590ebe7629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/560b98bc505be6ff70876df661e4055e1b38a78c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4I5ACRBK7hj4Ov3rIwAAdHIIAFKiPqs5XgIHr0ZiQGE2tssS\n57WW7qK5Ws42l5nOEBLSuZqJsnPLeGOwqkMwYO7ufp8OCwbXsawg8UYZzsGBMGYM\nvXMRu6YPjQurCXEHliu/oatkpkXq8PVxXCk2wpSfkKVbKQy8iG5xivZBT0RyKMr7\nYQj7Z0wCV5zHl/ijzZ6zcz5RADNTXtZ+benzJzXTcyQHIB8NSRZv19PRemY2mb5P\nBEBiz9sN4Sy6CgtEkBB4BRdkoRWhcK/VIkVCUdYJbO6gH0Xj6pHvoB6GHHOwseOX\novV2zFQzXrC4cvW9QND7vSC3CXf07VVtP3rDb5j8LlJUsyZVdMFJML5g93vQUE0=\n=laJ2\n-----END PGP SIGNATURE-----\n", "payload": "tree e88fd7c03820fa2131b4dd1c4e0789590ebe7629\nparent c9fc7251ca2ccdbd42fd21130139026878633b77\nparent fe21fc2d259cbe2a32bfee3432f2c51ade079083\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591774784 +0000\ncommitter GitHub <noreply@github.com> 1591774784 +0000\n\nMerge #4822\n\n4822: Let checkOnSafe default to some of the options of cargo r=matklad a=clemenswasser\n\nThis will fix #4631\r\nThe implementation works (as far as I have tested) but is suboptimal because I am copying the \"cargo.features\".\n\nCo-authored-by: Clemens Wasser <clemens.wasser@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/560b98bc505be6ff70876df661e4055e1b38a78c", "html_url": "https://github.com/rust-lang/rust/commit/560b98bc505be6ff70876df661e4055e1b38a78c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/560b98bc505be6ff70876df661e4055e1b38a78c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9fc7251ca2ccdbd42fd21130139026878633b77", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9fc7251ca2ccdbd42fd21130139026878633b77", "html_url": "https://github.com/rust-lang/rust/commit/c9fc7251ca2ccdbd42fd21130139026878633b77"}, {"sha": "fe21fc2d259cbe2a32bfee3432f2c51ade079083", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe21fc2d259cbe2a32bfee3432f2c51ade079083", "html_url": "https://github.com/rust-lang/rust/commit/fe21fc2d259cbe2a32bfee3432f2c51ade079083"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "6c41705298bd11f5f6cd9ea392207dabeb2f6765", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/560b98bc505be6ff70876df661e4055e1b38a78c/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/560b98bc505be6ff70876df661e4055e1b38a78c/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=560b98bc505be6ff70876df661e4055e1b38a78c", "patch": "@@ -18,8 +18,17 @@ pub use cargo_metadata::diagnostic::{\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub enum FlycheckConfig {\n-    CargoCommand { command: String, all_targets: bool, all_features: bool, extra_args: Vec<String> },\n-    CustomCommand { command: String, args: Vec<String> },\n+    CargoCommand {\n+        command: String,\n+        all_targets: bool,\n+        all_features: bool,\n+        features: Vec<String>,\n+        extra_args: Vec<String>,\n+    },\n+    CustomCommand {\n+        command: String,\n+        args: Vec<String>,\n+    },\n }\n \n /// Flycheck wraps the shared state and communication machinery used for\n@@ -188,7 +197,13 @@ impl FlycheckThread {\n         self.check_process = None;\n \n         let mut cmd = match &self.config {\n-            FlycheckConfig::CargoCommand { command, all_targets, all_features, extra_args } => {\n+            FlycheckConfig::CargoCommand {\n+                command,\n+                all_targets,\n+                all_features,\n+                extra_args,\n+                features,\n+            } => {\n                 let mut cmd = Command::new(ra_toolchain::cargo());\n                 cmd.arg(command);\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"])\n@@ -198,6 +213,9 @@ impl FlycheckThread {\n                 }\n                 if *all_features {\n                     cmd.arg(\"--all-features\");\n+                } else if !features.is_empty() {\n+                    cmd.arg(\"--features\");\n+                    cmd.arg(features.join(\" \"));\n                 }\n                 cmd.args(extra_args);\n                 cmd"}, {"sha": "1253db836162aaf5673f61a21835d15f7d62a8e6", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/560b98bc505be6ff70876df661e4055e1b38a78c/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/560b98bc505be6ff70876df661e4055e1b38a78c/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=560b98bc505be6ff70876df661e4055e1b38a78c", "patch": "@@ -147,6 +147,7 @@ impl Default for Config {\n                 all_targets: true,\n                 all_features: false,\n                 extra_args: Vec::new(),\n+                features: Vec::new(),\n             }),\n \n             inlay_hints: InlayHintsConfig {\n@@ -234,13 +235,14 @@ impl Config {\n                 }\n                 // otherwise configure command customizations\n                 _ => {\n-                    if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets, all_features })\n+                    if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets, all_features, features })\n                         = &mut self.check\n                     {\n                         set(value, \"/checkOnSave/extraArgs\", extra_args);\n                         set(value, \"/checkOnSave/command\", command);\n                         set(value, \"/checkOnSave/allTargets\", all_targets);\n-                        set(value, \"/checkOnSave/allFeatures\", all_features);\n+                        *all_features = get(value, \"/checkOnSave/allFeatures\").unwrap_or(self.cargo.all_features);\n+                        *features = get(value, \"/checkOnSave/features\").unwrap_or(self.cargo.features.clone());\n                     }\n                 }\n             };"}, {"sha": "e2027970db86b7d7635f0c73b371d0fb6b174d19", "filename": "editors/code/package.json", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/560b98bc505be6ff70876df661e4055e1b38a78c/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/560b98bc505be6ff70876df661e4055e1b38a78c/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=560b98bc505be6ff70876df661e4055e1b38a78c", "patch": "@@ -318,9 +318,23 @@\n                     \"markdownDescription\": \"Check all targets and tests (will be passed as `--all-targets`)\"\n                 },\n                 \"rust-analyzer.checkOnSave.allFeatures\": {\n-                    \"type\": \"boolean\",\n-                    \"default\": false,\n-                    \"markdownDescription\": \"Check with all features (will be passed as `--all-features`)\"\n+                    \"type\": [\n+                        \"null\",\n+                        \"boolean\"\n+                    ],\n+                    \"default\": null,\n+                    \"markdownDescription\": \"Check with all features (will be passed as `--all-features`). Defaults to `rust-analyzer.cargo.allFeatures`.\"\n+                },\n+                \"rust-analyzer.checkOnSave.features\": {\n+                    \"type\": [\n+                        \"null\",\n+                        \"array\"\n+                    ],\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    },\n+                    \"default\": null,\n+                    \"description\": \"List of features to activate. Defaults to `rust-analyzer.cargo.features`.\"\n                 },\n                 \"rust-analyzer.inlayHints.enable\": {\n                     \"type\": \"boolean\","}]}