{"sha": "58b83e7e740108611ad1e8286ee6b44ea5cbbb0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YjgzZTdlNzQwMTA4NjExYWQxZTgyODZlZTZiNDRlYTVjYmJiMGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-05T12:55:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-05T12:55:17Z"}, "message": "Auto merge of #25101 - alexcrichton:fix-flaky-windows-test, r=nikomatsakis\n\nThis test has deadlocked on Windows once or twice now and we've had lots of\r\nproblems in the past of threads panicking when the process is being shut down.\r\nOne of the two threads in this test is guaranteed to panic because of the\r\n`.unwrap()` on the `send` calls, so just call `recv` on both receivers after the\r\ntest executes to ensure that both threads are dying/dead.", "tree": {"sha": "a8e355e9d1e1341eb70e35359d2dc8935a31258d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e355e9d1e1341eb70e35359d2dc8935a31258d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58b83e7e740108611ad1e8286ee6b44ea5cbbb0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58b83e7e740108611ad1e8286ee6b44ea5cbbb0f", "html_url": "https://github.com/rust-lang/rust/commit/58b83e7e740108611ad1e8286ee6b44ea5cbbb0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58b83e7e740108611ad1e8286ee6b44ea5cbbb0f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0100ce84698dde68a25f05aa4271d84f547c50c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0100ce84698dde68a25f05aa4271d84f547c50c", "html_url": "https://github.com/rust-lang/rust/commit/c0100ce84698dde68a25f05aa4271d84f547c50c"}, {"sha": "700cff5262e416372d048d2559af61f0492a4e48", "url": "https://api.github.com/repos/rust-lang/rust/commits/700cff5262e416372d048d2559af61f0492a4e48", "html_url": "https://github.com/rust-lang/rust/commit/700cff5262e416372d048d2559af61f0492a4e48"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "6a5e46e9ed062e78a37bb7b63dfb1759c22834d8", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58b83e7e740108611ad1e8286ee6b44ea5cbbb0f/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b83e7e740108611ad1e8286ee6b44ea5cbbb0f/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=58b83e7e740108611ad1e8286ee6b44ea5cbbb0f", "patch": "@@ -152,12 +152,14 @@ macro_rules! try {\n /// thread::spawn(move|| { long_running_task(); tx1.send(()).unwrap(); });\n /// thread::spawn(move|| { tx2.send(calculate_the_answer()).unwrap(); });\n ///\n-/// select! (\n+/// select! {\n ///     _ = rx1.recv() => println!(\"the long running task finished first\"),\n ///     answer = rx2.recv() => {\n ///         println!(\"the answer was: {}\", answer.unwrap());\n ///     }\n-/// )\n+/// }\n+/// # drop(rx1.recv());\n+/// # drop(rx2.recv());\n /// ```\n ///\n /// For more information about select, see the `std::sync::mpsc::Select` structure."}]}