{"sha": "54a3487fc53017661a82aeec8b2d1794ae4fce0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YTM0ODdmYzUzMDE3NjYxYTgyYWVlYzhiMmQxNzk0YWU0ZmNlMGY=", "commit": {"author": {"name": "djzin", "email": "noreply@github.com", "date": "2016-12-27T10:05:49Z"}, "committer": {"name": "djzin", "email": "noreply@github.com", "date": "2017-01-14T16:51:51Z"}, "message": "simplify some ranges", "tree": {"sha": "ac6d466bccca5febd9901f31f7e8f5525b7ec340", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac6d466bccca5febd9901f31f7e8f5525b7ec340"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a3487fc53017661a82aeec8b2d1794ae4fce0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a3487fc53017661a82aeec8b2d1794ae4fce0f", "html_url": "https://github.com/rust-lang/rust/commit/54a3487fc53017661a82aeec8b2d1794ae4fce0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a3487fc53017661a82aeec8b2d1794ae4fce0f/comments", "author": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc6f80b382b1543766a7464660e3ed9c5a09efcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc6f80b382b1543766a7464660e3ed9c5a09efcf", "html_url": "https://github.com/rust-lang/rust/commit/bc6f80b382b1543766a7464660e3ed9c5a09efcf"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f381a16d392c579cd61536e150ee889acdd9ba10", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54a3487fc53017661a82aeec8b2d1794ae4fce0f/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a3487fc53017661a82aeec8b2d1794ae4fce0f/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=54a3487fc53017661a82aeec8b2d1794ae4fce0f", "patch": "@@ -677,7 +677,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// for (&key, &value) in map.range((Included(&4), Included(&8))) {\n     ///     println!(\"{}: {}\", key, value);\n     /// }\n-    /// assert_eq!(Some((&5, &\"b\")), map.range((Included(&4), Unbounded)).next());\n+    /// assert_eq!(Some((&5, &\"b\")), map.range(4..).next());\n     /// ```\n     #[unstable(feature = \"btree_range\",\n                reason = \"matches collection reform specification, waiting for dust to settle\",\n@@ -763,7 +763,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// let mut map: BTreeMap<&str, i32> = [\"Alice\", \"Bob\", \"Carol\", \"Cheryl\"].iter()\n     ///                                                                       .map(|&s| (s, 0))\n     ///                                                                       .collect();\n-    /// for (_, balance) in map.range_mut::<str, _>((Included(\"B\"), Excluded(\"Cheryl\"))) {\n+    /// for (_, balance) in map.range_mut(\"B\"..\"Cheryl\") {\n     ///     *balance += 100;\n     /// }\n     /// for (name, balance) in &map {"}]}