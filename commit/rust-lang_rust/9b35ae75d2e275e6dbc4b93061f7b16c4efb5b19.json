{"sha": "9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMzVhZTc1ZDJlMjc1ZTZkYmM0YjkzMDYxZjdiMTZjNGVmYjViMTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-01T00:10:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:02:01Z"}, "message": "doc: Remove all mentions of `@mut` from the documentation.", "tree": {"sha": "3ab0d12480c1a4acb5c42b42113fddd6ea55094b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ab0d12480c1a4acb5c42b42113fddd6ea55094b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19", "html_url": "https://github.com/rust-lang/rust/commit/9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3694d732ef9ed641671fbf116d183e78dc4e90a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3694d732ef9ed641671fbf116d183e78dc4e90a", "html_url": "https://github.com/rust-lang/rust/commit/c3694d732ef9ed641671fbf116d183e78dc4e90a"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "ce21edf1b40e7c5a37c838a53ebf987b2defd634", "filename": "doc/tutorial.md", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=9b35ae75d2e275e6dbc4b93061f7b16c4efb5b19", "patch": "@@ -1431,8 +1431,8 @@ For a more in-depth explanation of borrowed pointers, read the\n ## Freezing\n \n Lending an immutable pointer to an object freezes it and prevents mutation.\n-`Freeze` objects have freezing enforced statically at compile-time. Examples\n-of non-`Freeze` types are `@mut` and [`RefCell<T>`][refcell].\n+`Freeze` objects have freezing enforced statically at compile-time. An example\n+of a non-`Freeze` type is [`RefCell<T>`][refcell].\n \n ~~~~\n let mut x = 5;\n@@ -1443,20 +1443,6 @@ let mut x = 5;\n # x = 3;\n ~~~~\n \n-Mutable managed boxes handle freezing dynamically when any of their contents\n-are borrowed, and the task will fail if an attempt to modify them is made while\n-they are frozen:\n-\n-~~~~\n-let x = @mut 5;\n-let y = x;\n-{\n-    let z = &*y; // the managed box is now frozen\n-    // modifying it through x or y will cause a task failure\n-}\n-// the box is now unfrozen again\n-~~~~\n-\n [refcell]: http://static.rust-lang.org/doc/master/std/cell/struct.RefCell.html\n \n # Dereferencing pointers\n@@ -1477,7 +1463,7 @@ assignments. Such an assignment modifies the value that the pointer\n points to.\n \n ~~~\n-let managed = @mut 10;\n+let managed = @10;\n let mut owned = ~20;\n \n let mut value = 30;\n@@ -2113,8 +2099,7 @@ unless they contain managed boxes, managed closures, or borrowed pointers.\n \n * `Freeze` - Constant (immutable) types.\n These are types that do not contain anything intrinsically mutable.\n-Intrinsically mutable values include `@mut`\n-and `Cell` in the standard library.\n+Intrinsically mutable values include `Cell` in the standard library.\n \n * `'static` - Non-borrowed types.\n These are types that do not contain any data whose lifetime is bound to"}]}