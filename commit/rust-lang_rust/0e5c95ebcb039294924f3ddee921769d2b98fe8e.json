{"sha": "0e5c95ebcb039294924f3ddee921769d2b98fe8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNWM5NWViY2IwMzkyOTQ5MjRmM2RkZWU5MjE3NjlkMmI5OGZlOGU=", "commit": {"author": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2017-11-05T08:14:00Z"}, "committer": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2017-11-09T09:37:16Z"}, "message": "change separator from `.` to `-`", "tree": {"sha": "69bad870eee4e8bd5bea107c3ed87ab17a9e5048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69bad870eee4e8bd5bea107c3ed87ab17a9e5048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e5c95ebcb039294924f3ddee921769d2b98fe8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e5c95ebcb039294924f3ddee921769d2b98fe8e", "html_url": "https://github.com/rust-lang/rust/commit/0e5c95ebcb039294924f3ddee921769d2b98fe8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e5c95ebcb039294924f3ddee921769d2b98fe8e/comments", "author": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6832de99635e8563f750fb486aeaae95e8c2c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6832de99635e8563f750fb486aeaae95e8c2c6", "html_url": "https://github.com/rust-lang/rust/commit/7a6832de99635e8563f750fb486aeaae95e8c2c6"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "dfa675f2e93514c768a0d5398375ff321c8293bc", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -321,12 +321,15 @@ impl DefPath {\n     pub fn to_filename_friendly_no_crate(&self) -> String {\n         let mut s = String::with_capacity(self.data.len() * 16);\n \n+        let mut opt_delimiter = None;\n         for component in &self.data {\n+            opt_delimiter.map(|d| s.push(d));\n+            opt_delimiter = Some('-');\n             if component.disambiguator == 0 {\n-                write!(s, \".{}\", component.data.as_interned_str()).unwrap();\n+                write!(s, \"{}\", component.data.as_interned_str()).unwrap();\n             } else {\n                 write!(s,\n-                       \".{}[{}]\",\n+                       \"{}[{}]\",\n                        component.data.as_interned_str(),\n                        component.disambiguator)\n                     .unwrap();"}, {"sha": "0f07f1fe550cca769f204a6ade8c289870bfbe8a", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -135,8 +135,9 @@ where\n \n     let _ = fs::create_dir_all(&file_path);\n     let function_name  = tcx.hir.def_path_from_id(source.item_id())\n-        .map(|d| d.to_filename_friendly_no_crate()) .unwrap_or(format!(\".node{}\", source.item_id()));\n-    let file_name = format!(\"rustc{}{}{}.{}.{}.mir\",\n+        .map(|d| d.to_filename_friendly_no_crate())\n+        .unwrap_or(format!(\"node{}\", source.item_id()));\n+    let file_name = format!(\"rustc.{}{}{}.{}.{}.mir\",\n                             function_name, promotion_id, pass_num, pass_name, disambiguator);\n     file_path.push(&file_name);\n     let _ = fs::File::create(&file_path).and_then(|mut file| {"}, {"sha": "9a3cca54ae53ea1c61b558719c1c12812ad78d6f", "filename": "src/test/mir-opt/end_region_5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_5.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -66,7 +66,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // }\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n-// START rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n // fn main::{{closure}}(_1: [closure@NodeId(18) d:&'14s D]) -> i32 {\n //    let mut _0: i32;\n //    let mut _2: i32;\n@@ -78,4 +78,4 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //        StorageDead(_2);\n //        return;\n //    }\n-// END rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// END rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir"}, {"sha": "7f0e16eaa0632fa699714496b06693000ddb7a70", "filename": "src/test/mir-opt/end_region_6.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_6.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -64,7 +64,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //     }\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n-// START rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n // fn main::{{closure}}(_1: [closure@NodeId(22) d:&'19s D]) -> i32 {\n //     let mut _0: i32;\n //     ...\n@@ -82,4 +82,4 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //         StorageDead(_2);\n //         return;\n //     }\n-// END rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// END rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir"}, {"sha": "7a17afee3e0354341347e724df6c8f69ee6966c0", "filename": "src/test/mir-opt/end_region_7.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_7.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -72,7 +72,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // }\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n-// START rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n // fn main::{{closure}}(_1: [closure@NodeId(22) d:D]) -> i32 {\n //     let mut _0: i32;\n //     ...\n@@ -94,4 +94,4 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //         return;\n //     }\n // }\n-// END rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// END rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir"}, {"sha": "1df30995102612ca492201bae302f9809e8b9f69", "filename": "src/test/mir-opt/end_region_8.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_8.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -71,7 +71,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // }\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n-// START rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n // fn main::{{closure}}(_1: [closure@NodeId(22) r:&'21_1rs D]) -> i32 {\n //     let mut _0: i32;\n //     let mut _2: i32;\n@@ -84,4 +84,4 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //         return;\n //     }\n // }\n-// END rustc.main.{{closure}}.SimplifyCfg-qualify-consts.after.mir\n+// END rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir"}, {"sha": "e3f67d817f3c2c96b95a26d5e34b8f4eb2fe6ad0", "filename": "src/test/mir-opt/nll/named-lifetimes-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fnll%2Fnamed-lifetimes-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fnll%2Fnamed-lifetimes-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fnamed-lifetimes-basic.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -25,10 +25,10 @@ fn main() {\n }\n \n // END RUST SOURCE\n-// START rustc.node4.nll.0.mir\n+// START rustc.use_x.nll.0.mir\n // | '_#0r: {bb0[0], bb0[1], '_#0r}\n // | '_#1r: {bb0[0], bb0[1], '_#0r, '_#1r}\n // | '_#2r: {bb0[0], bb0[1], '_#2r}\n // ...\n // fn use_x(_1: &'_#0r mut i32, _2: &'_#1r u32, _3: &'_#0r u32, _4: &'_#2r u32) -> bool {\n-// END rustc.node4.nll.0.mir\n+// END rustc.use_x.nll.0.mir"}, {"sha": "f4d1caa6a95533334a5fd7633aeea4491ee57fc9", "filename": "src/test/mir-opt/validate_1.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -28,13 +28,13 @@ fn main() {\n }\n \n // END RUST SOURCE\n-// START rustc.{{impl}}.foo.EraseRegions.after.mir\n+// START rustc.{{impl}}-foo.EraseRegions.after.mir\n //     bb0: {\n //         Validate(Acquire, [_1: &ReFree(DefId { krate: CrateNum(0), index: DefIndex(0:5) => validate_1[317d]::{{impl}}[0]::foo[0] }, BrAnon(0)) Test, _2: &ReFree(DefId { krate: CrateNum(0), index: DefIndex(0:5) => validate_1[317d]::{{impl}}[0]::foo[0] }, BrAnon(1)) mut i32]);\n //         ...\n //         return;\n //     }\n-// END rustc.{{impl}}.foo.EraseRegions.after.mir\n+// END rustc.{{impl}}-foo.EraseRegions.after.mir\n // START rustc.main.EraseRegions.after.mir\n // fn main() -> () {\n //     ...\n@@ -58,7 +58,7 @@ fn main() {\n //     }\n // }\n // END rustc.main.EraseRegions.after.mir\n-// START rustc.main.{{closure}}.EraseRegions.after.mir\n+// START rustc.main-{{closure}}.EraseRegions.after.mir\n // fn main::{{closure}}(_1: &ReErased [closure@NodeId(50)], _2: &ReErased mut i32) -> i32 {\n //     ...\n //     bb0: {\n@@ -76,4 +76,4 @@ fn main() {\n //         return;\n //     }\n // }\n-// END rustc.main.{{closure}}.EraseRegions.after.mir\n+// END rustc.main-{{closure}}.EraseRegions.after.mir"}, {"sha": "80224ddc58668c531e272f9f4b3cf6d6762e58ae", "filename": "src/test/mir-opt/validate_4.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fvalidate_4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fvalidate_4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_4.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -47,7 +47,7 @@ fn main() {\n //     }\n // }\n // END rustc.write_42.EraseRegions.after.mir\n-// START rustc.write_42.{{closure}}.EraseRegions.after.mir\n+// START rustc.write_42-{{closure}}.EraseRegions.after.mir\n // fn write_42::{{closure}}(_1: &ReErased [closure@NodeId(22)], _2: *mut i32) -> () {\n //     ...\n //     bb0: {\n@@ -57,7 +57,7 @@ fn main() {\n //         return;\n //     }\n // }\n-// END rustc.write_42.{{closure}}.EraseRegions.after.mir\n+// END rustc.write_42-{{closure}}.EraseRegions.after.mir\n // START rustc.test.EraseRegions.after.mir\n // fn test(_1: &ReErased mut i32) -> () {\n //     ...\n@@ -74,7 +74,7 @@ fn main() {\n //     }\n // }\n // END rustc.test.EraseRegions.after.mir\n-// START rustc.main.{{closure}}.EraseRegions.after.mir\n+// START rustc.main-{{closure}}.EraseRegions.after.mir\n // fn main::{{closure}}(_1: &ReErased [closure@NodeId(60)], _2: &ReErased mut i32) -> bool {\n //     ...\n //     bb0: {\n@@ -86,4 +86,4 @@ fn main() {\n //     }\n //     ...\n // }\n-// END rustc.main.{{closure}}.EraseRegions.after.mir\n+// END rustc.main-{{closure}}.EraseRegions.after.mir"}, {"sha": "a945b7dbc5fa82db047564d34fc92ae63140c214", "filename": "src/test/mir-opt/validate_5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fvalidate_5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5c95ebcb039294924f3ddee921769d2b98fe8e/src%2Ftest%2Fmir-opt%2Fvalidate_5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_5.rs?ref=0e5c95ebcb039294924f3ddee921769d2b98fe8e", "patch": "@@ -45,7 +45,7 @@ fn main() {\n //     ...\n // }\n // END rustc.test.EraseRegions.after.mir\n-// START rustc.main.{{closure}}.EraseRegions.after.mir\n+// START rustc.main-{{closure}}.EraseRegions.after.mir\n // fn main::{{closure}}(_1: &ReErased [closure@NodeId(46)], _2: &ReErased mut i32) -> bool {\n //     ...\n //     bb0: {\n@@ -63,4 +63,4 @@ fn main() {\n //     }\n //     ...\n // }\n-// END rustc.main.{{closure}}.EraseRegions.after.mir\n+// END rustc.main-{{closure}}.EraseRegions.after.mir"}]}