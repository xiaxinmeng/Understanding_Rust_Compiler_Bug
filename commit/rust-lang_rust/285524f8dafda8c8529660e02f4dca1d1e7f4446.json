{"sha": "285524f8dafda8c8529660e02f4dca1d1e7f4446", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTUyNGY4ZGFmZGE4Yzg1Mjk2NjBlMDJmNGRjYTFkMWU3ZjQ0NDY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-02T11:15:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-02T11:15:04Z"}, "message": "Rollup merge of #81609 - Julian-Wollersberger:no-query-categories, r=davidtwco\n\nRemove the remains of query categories\n\nBack in October 2020 in #77830 ``@cjgillot`` removed the query categories information from the profiler, but the actual definitions which query was in which category remained, although unused.\nHere I clean that up, to simplify the query definitions even further.\n\nIt's unfortunate that this loses all the context for `git blame`, ~~but I'm working on moving those query definitions into `rustc_query_system`, which will lose that context anyway.~~ EDIT: Might not work out.\n\nThe functional changes are in the first commit. The second one only changes the indentation.", "tree": {"sha": "d74fa09fd739f66c22e421d78657b07681bd17eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d74fa09fd739f66c22e421d78657b07681bd17eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/285524f8dafda8c8529660e02f4dca1d1e7f4446", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGTQ5CRBK7hj4Ov3rIwAAdHIIAHPfJxk02SPkHJrF32laTdAV\nqtFlvzZB5SBeOwQD168oyp4EEhe+kbuL5SH0Wq6ht9GmalbRVeRf8czWvk0qENxn\nYfkUb0IB+rwDVt2A4tcLUueXyMjDYN7shR2FFpLNMZbeKDanI98owEBkcuu/mSl0\nOQ11zJFb4ZP3e26bjKsKCrQg6E+KRCgT2oN66V1Pw0TB/Xfhjq6oawDWS2Mecy1o\nYEmO7ZUXLQY+JBRkeMWjjMmy7vLkrGrZbSaw2qQ8eu98uo05V5X8L6CZg6Py9x+G\nCqIJURKFP9C+aOJssUmMsY0bvZF9F5fLFyy2OYJ6S9iKrkTjakpvM81abEriXlk=\n=BYi8\n-----END PGP SIGNATURE-----\n", "payload": "tree d74fa09fd739f66c22e421d78657b07681bd17eb\nparent 255e0764c071d73a43a0c88181cb4cf667a74bff\nparent 988d93c8a0b122a9923e0df6fb49cb430dbab3f2\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612264504 +0100\ncommitter GitHub <noreply@github.com> 1612264504 +0100\n\nRollup merge of #81609 - Julian-Wollersberger:no-query-categories, r=davidtwco\n\nRemove the remains of query categories\n\nBack in October 2020 in #77830 ``@cjgillot`` removed the query categories information from the profiler, but the actual definitions which query was in which category remained, although unused.\nHere I clean that up, to simplify the query definitions even further.\n\nIt's unfortunate that this loses all the context for `git blame`, ~~but I'm working on moving those query definitions into `rustc_query_system`, which will lose that context anyway.~~ EDIT: Might not work out.\n\nThe functional changes are in the first commit. The second one only changes the indentation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/285524f8dafda8c8529660e02f4dca1d1e7f4446", "html_url": "https://github.com/rust-lang/rust/commit/285524f8dafda8c8529660e02f4dca1d1e7f4446", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/285524f8dafda8c8529660e02f4dca1d1e7f4446/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "255e0764c071d73a43a0c88181cb4cf667a74bff", "url": "https://api.github.com/repos/rust-lang/rust/commits/255e0764c071d73a43a0c88181cb4cf667a74bff", "html_url": "https://github.com/rust-lang/rust/commit/255e0764c071d73a43a0c88181cb4cf667a74bff"}, {"sha": "988d93c8a0b122a9923e0df6fb49cb430dbab3f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/988d93c8a0b122a9923e0df6fb49cb430dbab3f2", "html_url": "https://github.com/rust-lang/rust/commit/988d93c8a0b122a9923e0df6fb49cb430dbab3f2"}], "stats": {"total": 2898, "additions": 1392, "deletions": 1506}, "files": [{"sha": "cff8e9833189bbf7535b208e2169ff5272323f1e", "filename": "compiler/rustc_macros/src/query.rs", "status": "modified", "additions": 52, "deletions": 73, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/285524f8dafda8c8529660e02f4dca1d1e7f4446/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/285524f8dafda8c8529660e02f4dca1d1e7f4446/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fquery.rs?ref=285524f8dafda8c8529660e02f4dca1d1e7f4446", "patch": "@@ -189,25 +189,6 @@ impl<T: Parse> Parse for List<T> {\n     }\n }\n \n-/// A named group containing queries.\n-///\n-/// For now, the name is not used any more, but the capability remains interesting for future\n-/// developments of the query system.\n-struct Group {\n-    #[allow(unused)]\n-    name: Ident,\n-    queries: List<Query>,\n-}\n-\n-impl Parse for Group {\n-    fn parse(input: ParseStream<'_>) -> Result<Self> {\n-        let name: Ident = input.parse()?;\n-        let content;\n-        braced!(content in input);\n-        Ok(Group { name, queries: content.parse()? })\n-    }\n-}\n-\n struct QueryModifiers {\n     /// The description of the query.\n     desc: (Option<Ident>, Punctuated<Expr, Token![,]>),\n@@ -450,72 +431,70 @@ fn add_query_description_impl(\n }\n \n pub fn rustc_queries(input: TokenStream) -> TokenStream {\n-    let groups = parse_macro_input!(input as List<Group>);\n+    let queries = parse_macro_input!(input as List<Query>);\n \n     let mut query_stream = quote! {};\n     let mut query_description_stream = quote! {};\n     let mut dep_node_def_stream = quote! {};\n     let mut cached_queries = quote! {};\n \n-    for group in groups.0 {\n-        for mut query in group.queries.0 {\n-            let modifiers = process_modifiers(&mut query);\n-            let name = &query.name;\n-            let arg = &query.arg;\n-            let result_full = &query.result;\n-            let result = match query.result {\n-                ReturnType::Default => quote! { -> () },\n-                _ => quote! { #result_full },\n-            };\n+    for mut query in queries.0 {\n+        let modifiers = process_modifiers(&mut query);\n+        let name = &query.name;\n+        let arg = &query.arg;\n+        let result_full = &query.result;\n+        let result = match query.result {\n+            ReturnType::Default => quote! { -> () },\n+            _ => quote! { #result_full },\n+        };\n \n-            if modifiers.cache.is_some() {\n-                cached_queries.extend(quote! {\n-                    #name,\n-                });\n-            }\n+        if modifiers.cache.is_some() {\n+            cached_queries.extend(quote! {\n+                #name,\n+            });\n+        }\n \n-            let mut attributes = Vec::new();\n+        let mut attributes = Vec::new();\n \n-            // Pass on the fatal_cycle modifier\n-            if modifiers.fatal_cycle {\n-                attributes.push(quote! { fatal_cycle });\n-            };\n-            // Pass on the storage modifier\n-            if let Some(ref ty) = modifiers.storage {\n-                attributes.push(quote! { storage(#ty) });\n-            };\n-            // Pass on the cycle_delay_bug modifier\n-            if modifiers.cycle_delay_bug {\n-                attributes.push(quote! { cycle_delay_bug });\n-            };\n-            // Pass on the no_hash modifier\n-            if modifiers.no_hash {\n-                attributes.push(quote! { no_hash });\n-            };\n-            // Pass on the anon modifier\n-            if modifiers.anon {\n-                attributes.push(quote! { anon });\n-            };\n-            // Pass on the eval_always modifier\n-            if modifiers.eval_always {\n-                attributes.push(quote! { eval_always });\n-            };\n+        // Pass on the fatal_cycle modifier\n+        if modifiers.fatal_cycle {\n+            attributes.push(quote! { fatal_cycle });\n+        };\n+        // Pass on the storage modifier\n+        if let Some(ref ty) = modifiers.storage {\n+            attributes.push(quote! { storage(#ty) });\n+        };\n+        // Pass on the cycle_delay_bug modifier\n+        if modifiers.cycle_delay_bug {\n+            attributes.push(quote! { cycle_delay_bug });\n+        };\n+        // Pass on the no_hash modifier\n+        if modifiers.no_hash {\n+            attributes.push(quote! { no_hash });\n+        };\n+        // Pass on the anon modifier\n+        if modifiers.anon {\n+            attributes.push(quote! { anon });\n+        };\n+        // Pass on the eval_always modifier\n+        if modifiers.eval_always {\n+            attributes.push(quote! { eval_always });\n+        };\n \n-            let attribute_stream = quote! {#(#attributes),*};\n-            let doc_comments = query.doc_comments.iter();\n-            // Add the query to the group\n-            query_stream.extend(quote! {\n-                #(#doc_comments)*\n-                [#attribute_stream] fn #name(#arg) #result,\n-            });\n+        let attribute_stream = quote! {#(#attributes),*};\n+        let doc_comments = query.doc_comments.iter();\n+        // Add the query to the group\n+        query_stream.extend(quote! {\n+            #(#doc_comments)*\n+            [#attribute_stream] fn #name(#arg) #result,\n+        });\n \n-            // Create a dep node for the query\n-            dep_node_def_stream.extend(quote! {\n-                [#attribute_stream] #name(#arg),\n-            });\n+        // Create a dep node for the query\n+        dep_node_def_stream.extend(quote! {\n+            [#attribute_stream] #name(#arg),\n+        });\n \n-            add_query_description_impl(&query, modifiers, &mut query_description_stream);\n-        }\n+        add_query_description_impl(&query, modifiers, &mut query_description_stream);\n     }\n \n     TokenStream::from(quote! {"}, {"sha": "ca528b2f0914bbff8df1fc6f912c1bf04bcbcbf2", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1340, "deletions": 1433, "changes": 2773, "blob_url": "https://github.com/rust-lang/rust/blob/285524f8dafda8c8529660e02f4dca1d1e7f4446/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/285524f8dafda8c8529660e02f4dca1d1e7f4446/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=285524f8dafda8c8529660e02f4dca1d1e7f4446"}]}