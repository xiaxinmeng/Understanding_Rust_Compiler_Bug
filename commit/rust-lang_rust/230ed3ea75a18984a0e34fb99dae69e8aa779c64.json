{"sha": "230ed3ea75a18984a0e34fb99dae69e8aa779c64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMGVkM2VhNzVhMTg5ODRhMGUzNGZiOTlkYWU2OWU4YWE3NzljNjQ=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-11T01:28:04Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-11T01:28:04Z"}, "message": "use debug_map and skip empty frames", "tree": {"sha": "3676eb14345a2aacdc1e4ac99908b4edbbe7c09b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3676eb14345a2aacdc1e4ac99908b4edbbe7c09b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/230ed3ea75a18984a0e34fb99dae69e8aa779c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/230ed3ea75a18984a0e34fb99dae69e8aa779c64", "html_url": "https://github.com/rust-lang/rust/commit/230ed3ea75a18984a0e34fb99dae69e8aa779c64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/230ed3ea75a18984a0e34fb99dae69e8aa779c64/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70c91330143b7979ec2847d0016ece75053e5d39", "url": "https://api.github.com/repos/rust-lang/rust/commits/70c91330143b7979ec2847d0016ece75053e5d39", "html_url": "https://github.com/rust-lang/rust/commit/70c91330143b7979ec2847d0016ece75053e5d39"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "d481f227db73e092de7bbaba998a23bd8a6887fc", "filename": "src/libstd/backtrace.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/230ed3ea75a18984a0e34fb99dae69e8aa779c64/src%2Flibstd%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/230ed3ea75a18984a0e34fb99dae69e8aa779c64/src%2Flibstd%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbacktrace.rs?ref=230ed3ea75a18984a0e34fb99dae69e8aa779c64", "patch": "@@ -173,6 +173,10 @@ impl fmt::Debug for Backtrace {\n         let mut dbg = fmt.debug_list();\n \n         for frame in &capture.frames {\n+            if frame.frame.ip().is_null() {\n+                continue;\n+            }\n+\n             dbg.entries(&frame.symbols);\n         }\n \n@@ -182,20 +186,20 @@ impl fmt::Debug for Backtrace {\n \n impl fmt::Debug for BacktraceSymbol {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        let mut dbg = fmt.debug_struct(\"\");\n+        let mut dbg = fmt.debug_map();\n \n         if let Some(fn_name) = self.name.as_ref().map(|b| backtrace::SymbolName::new(b)) {\n-            dbg.field(\"fn\", &format_args!(\"\\\"{}\\\"\", fn_name));\n+            dbg.entry(&\"fn\", &format_args!(\"\\\"{}\\\"\", fn_name));\n         } else {\n-            dbg.field(\"fn\", &\"<unknown>\");\n+            dbg.entry(&\"fn\", &\"<unknown>\");\n         }\n \n         if let Some(fname) = self.filename.as_ref() {\n-            dbg.field(\"file\", fname);\n+            dbg.entry(&\"file\", fname);\n         }\n \n         if let Some(line) = self.lineno.as_ref() {\n-            dbg.field(\"line\", line);\n+            dbg.entry(&\"line\", line);\n         }\n \n         dbg.finish()\n@@ -415,6 +419,7 @@ mod tests {\n         eprintln!(\"captured: {:?}\", bt);\n         eprintln!(\"display print: {}\", bt);\n         eprintln!(\"resolved: {:?}\", bt);\n+        eprintln!(\"resolved alt: {:#?}\", bt);\n         unimplemented!();\n     }\n }"}]}