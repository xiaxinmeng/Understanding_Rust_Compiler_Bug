{"sha": "f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "node_id": "C_kwDOAAsO6NoAKGY2ZjA1MTY2MDNiNTBkMmI0Yzc3ZmMwYmNhYmQwZWUzZmUxYjA5ZTk", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-22T12:09:38Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-23T12:05:56Z"}, "message": "Add config for macro bang token highlighting, disable by default", "tree": {"sha": "35e93e55d615df4f9c3a8753616051be1cb96e18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e93e55d615df4f9c3a8753616051be1cb96e18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "html_url": "https://github.com/rust-lang/rust/commit/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b26733f8a0b46355e385fceb2baa30aa9b4d420c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b26733f8a0b46355e385fceb2baa30aa9b4d420c", "html_url": "https://github.com/rust-lang/rust/commit/b26733f8a0b46355e385fceb2baa30aa9b4d420c"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "50371d620eb2a41954412a3f1dd79bc33c18756e", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "patch": "@@ -50,6 +50,8 @@ pub struct HighlightConfig {\n     pub specialize_operator: bool,\n     /// Whether to inject highlights into doc comments\n     pub inject_doc_comment: bool,\n+    /// Whether to highlight the macro call bang\n+    pub macro_bang: bool,\n     /// Whether to highlight unresolved things be their syntax\n     pub syntactic_name_ref_highlighting: bool,\n }\n@@ -457,10 +459,12 @@ fn traverse(\n             match &mut highlight.tag {\n                 HlTag::StringLiteral if !config.strings => continue,\n                 // If punctuation is disabled, make the macro bang part of the macro call again.\n-                tag @ HlTag::Punctuation(HlPunct::MacroBang)\n-                    if !config.punctuation || !config.specialize_punctuation =>\n-                {\n-                    *tag = HlTag::Symbol(SymbolKind::Macro);\n+                tag @ HlTag::Punctuation(HlPunct::MacroBang) => {\n+                    if !config.macro_bang {\n+                        *tag = HlTag::Symbol(SymbolKind::Macro);\n+                    } else if !config.specialize_punctuation {\n+                        *tag = HlTag::Punctuation(HlPunct::Other);\n+                    }\n                 }\n                 HlTag::Punctuation(_) if !config.punctuation => continue,\n                 tag @ HlTag::Punctuation(_) if !config.specialize_punctuation => {"}, {"sha": "e91fd7f12571649cee96e51e652165cad39bc993", "filename": "crates/ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "patch": "@@ -32,6 +32,7 @@ pub(crate) fn highlight_as_html(db: &RootDatabase, file_id: FileId, rainbow: boo\n             specialize_operator: true,\n             operator: true,\n             inject_doc_comment: true,\n+            macro_bang: true,\n             syntactic_name_ref_highlighting: false,\n         },\n         file_id,"}, {"sha": "3949f1189bd5ed47d946d46dec67cc2102c7bd40", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "patch": "@@ -199,7 +199,7 @@ impl fmt::Display for HlTag {\n }\n \n impl HlMod {\n-    const ALL: &'static [HlMod; HlMod::Unsafe as u8 as usize + 1] = &[\n+    const ALL: &'static [HlMod; 19] = &[\n         HlMod::Associated,\n         HlMod::Async,\n         HlMod::Attribute,"}, {"sha": "51ddea63ac1363c79dab2726ce2f21d8d1171260", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "patch": "@@ -13,6 +13,7 @@ const HL_CONFIG: HighlightConfig = HighlightConfig {\n     specialize_operator: true,\n     operator: true,\n     inject_doc_comment: true,\n+    macro_bang: true,\n     syntactic_name_ref_highlighting: false,\n };\n "}, {"sha": "0538aeb65e16161bb97f280fa60377e13d60f60a", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "patch": "@@ -394,13 +394,16 @@ config_data! {\n         /// Use semantic tokens for punctuations.\n         ///\n         /// When disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\n-        /// they are tagged with modifiers.\n+        /// they are tagged with modifiers or have a special role.\n         semanticHighlighting_punctuation_enable: bool = \"false\",\n         /// Use specialized semantic tokens for punctuations.\n         ///\n         /// When enabled, rust-analyzer will emit special token types for punctuation tokens instead\n         /// of the generic `punctuation` token type.\n         semanticHighlighting_punctuation_specialization_enable: bool = \"false\",\n+        /// When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\n+        /// calls.\n+        semanticHighlighting_punctuation_separate_macro_bang: bool = \"false\",\n         /// Use semantic tokens for operators.\n         ///\n         /// When disabled, rust-analyzer will emit semantic tokens only for operator tokens when\n@@ -1203,6 +1206,7 @@ impl Config {\n             specialize_punctuation: self\n                 .data\n                 .semanticHighlighting_punctuation_specialization_enable,\n+            macro_bang: self.data.semanticHighlighting_punctuation_separate_macro_bang,\n             operator: self.data.semanticHighlighting_operator_enable,\n             specialize_operator: self.data.semanticHighlighting_operator_specialization_enable,\n             inject_doc_comment: self.data.semanticHighlighting_doc_comment_inject_enable,"}]}