{"sha": "6513f5029183471993bab4b05ae5f5433f461b08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MTNmNTAyOTE4MzQ3MTk5M2JhYjRiMDVhZTVmNTQzM2Y0NjFiMDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-04T02:31:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-04T02:31:11Z"}, "message": "Auto merge of #79109 - richkadel:llvm-coverage-counters-2.0.5, r=tmandry\n\nCoverage tests for remaining TerminatorKinds and async, improve Assert\n\nTested and validate results for panic unwind, panic abort, assert!()\nmacro, TerminatorKind::Assert (for example, numeric overflow), and\nasync/await.\n\nImplemented a previous documented idea to change Assert handling to be\nthe same as FalseUnwind and Goto, so it doesn't get its own\nBasicCoverageBlock anymore. This changed a couple of coverage regions,\nbut I validated those changes are not any worse than the prior results,\nand probably help assure some consistency (even if some people might\ndisagree with how the code region is consistently computed).\n\nFixed issue with async/await. AggregateKind::Generator needs to be\nhandled like AggregateKind::Closure; coverage span for the outer async\nfunction should not \"cover\" the async body, which is actually executed\nin a separate \"closure\" MIR.", "tree": {"sha": "a48631b29803f165a91ddb32b3dece84503e9dc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a48631b29803f165a91ddb32b3dece84503e9dc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6513f5029183471993bab4b05ae5f5433f461b08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6513f5029183471993bab4b05ae5f5433f461b08", "html_url": "https://github.com/rust-lang/rust/commit/6513f5029183471993bab4b05ae5f5433f461b08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6513f5029183471993bab4b05ae5f5433f461b08/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5be3f9f10e9fd59ea03816840a6051413fbdefae", "url": "https://api.github.com/repos/rust-lang/rust/commits/5be3f9f10e9fd59ea03816840a6051413fbdefae", "html_url": "https://github.com/rust-lang/rust/commit/5be3f9f10e9fd59ea03816840a6051413fbdefae"}, {"sha": "dc4bd9067eda1df118fc48cb6b828d72e916e1bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc4bd9067eda1df118fc48cb6b828d72e916e1bb", "html_url": "https://github.com/rust-lang/rust/commit/dc4bd9067eda1df118fc48cb6b828d72e916e1bb"}], "stats": {"total": 42377, "additions": 22960, "deletions": 19417}, "files": [{"sha": "e0e78a4d60953665f4694176b09efffbe3041f26", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -347,7 +347,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         // `_ => else_block` where `else_block` is `{}` if there's `None`:\n         let else_pat = self.pat_wild(span);\n         let (else_expr, contains_else_clause) = match else_opt {\n-            None => (self.expr_block_empty(span), false),\n+            None => (self.expr_block_empty(span.shrink_to_hi()), false),\n             Some(els) => (self.lower_expr(els), true),\n         };\n         let else_arm = self.arm(else_pat, else_expr);"}, {"sha": "97c38e04bc1825947737d48faf6074ce6be9063f", "filename": "compiler/rustc_codegen_llvm/src/attributes.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -127,9 +127,6 @@ fn set_probestack(cx: &CodegenCx<'ll, '_>, llfn: &'ll Value) {\n         return;\n     }\n \n-    // FIXME(richkadel): Make sure probestack plays nice with `-Z instrument-coverage`\n-    // or disable it if not, similar to above early exits.\n-\n     // Flag our internal `__rust_probestack` function as the stack probe symbol.\n     // This is defined in the `compiler-builtins` crate for each architecture.\n     llvm::AddFunctionAttrStringValue("}, {"sha": "1c7e727f9b0b96f86e5d50cc26895ed517d5127c", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs", "status": "modified", "additions": 167, "deletions": 7, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,11 +3,14 @@ use crate::coverageinfo;\n use crate::llvm;\n \n use llvm::coverageinfo::CounterMappingRegion;\n-use rustc_codegen_ssa::coverageinfo::map::{Counter, CounterExpression};\n+use rustc_codegen_ssa::coverageinfo::map::{Counter, CounterExpression, FunctionCoverage};\n use rustc_codegen_ssa::traits::ConstMethods;\n-use rustc_data_structures::fx::FxIndexSet;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n+use rustc_hir::def_id::{DefId, DefIdSet, LOCAL_CRATE};\n use rustc_llvm::RustString;\n use rustc_middle::mir::coverage::CodeRegion;\n+use rustc_middle::ty::{Instance, TyCtxt};\n+use rustc_span::Symbol;\n \n use std::ffi::CString;\n \n@@ -26,14 +29,17 @@ use tracing::debug;\n /// undocumented details in Clang's implementation (that may or may not be important) were also\n /// replicated for Rust's Coverage Map.\n pub fn finalize<'ll, 'tcx>(cx: &CodegenCx<'ll, 'tcx>) {\n+    let tcx = cx.tcx;\n     // Ensure LLVM supports Coverage Map Version 4 (encoded as a zero-based value: 3).\n     // If not, the LLVM Version must be less than 11.\n     let version = coverageinfo::mapping_version();\n     if version != 3 {\n-        cx.tcx.sess.fatal(\"rustc option `-Z instrument-coverage` requires LLVM 11 or higher.\");\n+        tcx.sess.fatal(\"rustc option `-Z instrument-coverage` requires LLVM 11 or higher.\");\n     }\n \n-    let function_coverage_map = match cx.coverage_context() {\n+    debug!(\"Generating coverage map for CodegenUnit: `{}`\", cx.codegen_unit.name());\n+\n+    let mut function_coverage_map = match cx.coverage_context() {\n         Some(ctx) => ctx.take_function_coverage_map(),\n         None => return,\n     };\n@@ -42,14 +48,15 @@ pub fn finalize<'ll, 'tcx>(cx: &CodegenCx<'ll, 'tcx>) {\n         return;\n     }\n \n+    add_unreachable_coverage(tcx, &mut function_coverage_map);\n+\n     let mut mapgen = CoverageMapGenerator::new();\n \n     // Encode coverage mappings and generate function records\n     let mut function_data = Vec::new();\n     for (instance, function_coverage) in function_coverage_map {\n-        debug!(\"Generate coverage map for: {:?}\", instance);\n-\n-        let mangled_function_name = cx.tcx.symbol_name(instance).to_string();\n+        debug!(\"Generate function coverage for {}, {:?}\", cx.codegen_unit.name(), instance);\n+        let mangled_function_name = tcx.symbol_name(instance).to_string();\n         let function_source_hash = function_coverage.source_hash();\n         let (expressions, counter_regions) =\n             function_coverage.get_expressions_and_counter_regions();\n@@ -228,3 +235,156 @@ fn save_function_record(\n     let is_used = true;\n     coverageinfo::save_func_record_to_mod(cx, func_name_hash, func_record_val, is_used);\n }\n+\n+/// When finalizing the coverage map, `FunctionCoverage` only has the `CodeRegion`s and counters for\n+/// the functions that went through codegen; such as public functions and \"used\" functions\n+/// (functions referenced by other \"used\" or public items). Any other functions considered unused,\n+/// or \"Unreachable\" were still parsed and processed through the MIR stage.\n+///\n+/// We can find the unreachable functions by the set different of all MIR `DefId`s (`tcx` query\n+/// `mir_keys`) minus the codegenned `DefId`s (`tcx` query `collect_and_partition_mono_items`).\n+///\n+/// *HOWEVER* the codegenned `DefId`s are partitioned across multiple `CodegenUnit`s (CGUs), and\n+/// this function is processing a `function_coverage_map` for the functions (`Instance`/`DefId`)\n+/// allocated to only one of those CGUs. We must NOT inject any \"Unreachable\" functions's\n+/// `CodeRegion`s more than once, so we have to pick which CGU's `function_coverage_map` to add\n+/// each \"Unreachable\" function to.\n+///\n+/// Some constraints:\n+///\n+/// 1. The file name of an \"Unreachable\" function must match the file name of the existing\n+///    codegenned (covered) function to which the unreachable code regions will be added.\n+/// 2. The function to which the unreachable code regions will be added must not be a genaric\n+///    function (must not have type parameters) because the coverage tools will get confused\n+///    if the codegenned function has more than one instantiation and additional `CodeRegion`s\n+///    attached to only one of those instantiations.\n+fn add_unreachable_coverage<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    function_coverage_map: &mut FxHashMap<Instance<'tcx>, FunctionCoverage<'tcx>>,\n+) {\n+    // FIXME(#79622): Can this solution be simplified and/or improved? Are there other sources\n+    // of compiler state data that might help (or better sources that could be exposed, but\n+    // aren't yet)?\n+\n+    // Note: If the crate *only* defines generic functions, there are no codegenerated non-generic\n+    // functions to add any unreachable code to. In this case, the unreachable code regions will\n+    // have no coverage, instead of having coverage with zero executions.\n+    //\n+    // This is probably still an improvement over Clang, which does not generate any coverage\n+    // for uninstantiated template functions.\n+\n+    let has_non_generic_def_ids =\n+        function_coverage_map.keys().any(|instance| instance.def.attrs(tcx).len() == 0);\n+\n+    if !has_non_generic_def_ids {\n+        // There are no non-generic functions to add unreachable `CodeRegion`s to\n+        return;\n+    }\n+\n+    let all_def_ids: DefIdSet =\n+        tcx.mir_keys(LOCAL_CRATE).iter().map(|local_def_id| local_def_id.to_def_id()).collect();\n+\n+    let (codegenned_def_ids, _) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+\n+    let mut unreachable_def_ids_by_file: FxHashMap<Symbol, Vec<DefId>> = FxHashMap::default();\n+    for &non_codegenned_def_id in all_def_ids.difference(codegenned_def_ids) {\n+        // Make sure the non-codegenned (unreachable) function has a file_name\n+        if let Some(non_codegenned_file_name) = tcx.covered_file_name(non_codegenned_def_id) {\n+            let def_ids = unreachable_def_ids_by_file\n+                .entry(*non_codegenned_file_name)\n+                .or_insert_with(|| Vec::new());\n+            def_ids.push(non_codegenned_def_id);\n+        }\n+    }\n+\n+    if unreachable_def_ids_by_file.is_empty() {\n+        // There are no unreachable functions with file names to add (in any CGU)\n+        return;\n+    }\n+\n+    // Since there may be multiple `CodegenUnit`s, some codegenned_def_ids may be codegenned in a\n+    // different CGU, and will be added to the function_coverage_map for each CGU. Determine which\n+    // function_coverage_map has the responsibility for publishing unreachable coverage\n+    // based on file name:\n+    //\n+    // For each covered file name, sort ONLY the non-generic codegenned_def_ids, and if\n+    // covered_def_ids.contains(the first def_id) for a given file_name, add the unreachable code\n+    // region in this function_coverage_map. Otherwise, ignore it and assume another CGU's\n+    // function_coverage_map will be adding it (because it will be first for one, and only one,\n+    // of them).\n+    let mut sorted_codegenned_def_ids: Vec<DefId> =\n+        codegenned_def_ids.iter().map(|def_id| *def_id).collect();\n+    sorted_codegenned_def_ids.sort_unstable();\n+\n+    let mut first_covered_def_id_by_file: FxHashMap<Symbol, DefId> = FxHashMap::default();\n+    for &def_id in sorted_codegenned_def_ids.iter() {\n+        // Only consider non-generic functions, to potentially add unreachable code regions\n+        if tcx.generics_of(def_id).count() == 0 {\n+            if let Some(covered_file_name) = tcx.covered_file_name(def_id) {\n+                // Only add files known to have unreachable functions\n+                if unreachable_def_ids_by_file.contains_key(covered_file_name) {\n+                    first_covered_def_id_by_file.entry(*covered_file_name).or_insert(def_id);\n+                }\n+            }\n+        }\n+    }\n+\n+    // Get the set of def_ids with coverage regions, known by *this* CoverageContext.\n+    let cgu_covered_def_ids: DefIdSet =\n+        function_coverage_map.keys().map(|instance| instance.def.def_id()).collect();\n+\n+    let mut cgu_covered_files: FxHashSet<Symbol> = first_covered_def_id_by_file\n+        .iter()\n+        .filter_map(\n+            |(&file_name, def_id)| {\n+                if cgu_covered_def_ids.contains(def_id) { Some(file_name) } else { None }\n+            },\n+        )\n+        .collect();\n+\n+    // Find the first covered, non-generic function (instance) for each cgu_covered_file. Take the\n+    // unreachable code regions for that file, and add them to the function.\n+    //\n+    // There are three `for` loops here, but (a) the lists have already been reduced to the minimum\n+    // required values, the lists are further reduced (by `remove()` calls) when elements are no\n+    // longer needed, and there are several opportunities to branch out of loops early.\n+    for (instance, function_coverage) in function_coverage_map.iter_mut() {\n+        if instance.def.attrs(tcx).len() > 0 {\n+            continue;\n+        }\n+        // The covered function is not generic...\n+        let covered_def_id = instance.def.def_id();\n+        if let Some(covered_file_name) = tcx.covered_file_name(covered_def_id) {\n+            if !cgu_covered_files.remove(&covered_file_name) {\n+                continue;\n+            }\n+            // The covered function's file is one of the files with unreachable code regions, so\n+            // all of the unreachable code regions for this file will be added to this function.\n+            for def_id in\n+                unreachable_def_ids_by_file.remove(&covered_file_name).into_iter().flatten()\n+            {\n+                // Note, this loop adds an unreachable code regions for each MIR-derived region.\n+                // Alternatively, we could add a single code region for the maximum span of all\n+                // code regions here.\n+                //\n+                // Observed downsides of this approach are:\n+                //\n+                // 1. The coverage results will appear inconsistent compared with the same (or\n+                //    similar) code in a function that is reached.\n+                // 2. If the function is unreachable from one crate but reachable when compiling\n+                //    another referencing crate (such as a cross-crate reference to a\n+                //    generic function or inlined function), actual coverage regions overlaid\n+                //    on a single larger code span of `Zero` coverage can appear confusing or\n+                //    wrong. Chaning the unreachable coverage from a `code_region` to a\n+                //    `gap_region` can help, but still can look odd with `0` line counts for\n+                //    lines between executed (> 0) lines (such as for blank lines or comments).\n+                for &region in tcx.covered_code_regions(def_id) {\n+                    function_coverage.add_unreachable_region(region.clone());\n+                }\n+            }\n+            if cgu_covered_files.is_empty() {\n+                break;\n+            }\n+        }\n+    }\n+}"}, {"sha": "8ec1eed4404567aad2126fcd831ac701edeb4250", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,6 +2,7 @@\n #![feature(bool_to_option)]\n #![feature(option_expect_none)]\n #![feature(box_patterns)]\n+#![feature(drain_filter)]\n #![feature(try_blocks)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]"}, {"sha": "9a42bbe7bacdd836fe68484b15cabe787d0b3a3c", "filename": "compiler/rustc_middle/src/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Farena.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -32,6 +32,7 @@ macro_rules! arena_types {\n             [decode] borrowck_result:\n                 rustc_middle::mir::BorrowCheckResult<$tcx>,\n             [decode] unsafety_check_result: rustc_middle::mir::UnsafetyCheckResult,\n+            [decode] code_region: rustc_middle::mir::coverage::CodeRegion,\n             [] const_allocs: rustc_middle::mir::interpret::Allocation,\n             // Required for the incremental on-disk cache\n             [few] mir_keys: rustc_hir::def_id::DefIdSet,"}, {"sha": "598e28c1a3ab00ac9442f021aeb8aaadb07b512f", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -47,7 +47,7 @@ fn fn_decl<'hir>(node: Node<'hir>) -> Option<&'hir FnDecl<'hir>> {\n     }\n }\n \n-fn fn_sig<'hir>(node: Node<'hir>) -> Option<&'hir FnSig<'hir>> {\n+pub fn fn_sig<'hir>(node: Node<'hir>) -> Option<&'hir FnSig<'hir>> {\n     match &node {\n         Node::Item(Item { kind: ItemKind::Fn(sig, _, _), .. })\n         | Node::TraitItem(TraitItem { kind: TraitItemKind::Fn(sig, _), .. })"}, {"sha": "1b5f7a2c12e72a8e355d6c67b9680a4879d74f1a", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -346,6 +346,21 @@ rustc_queries! {\n             cache_on_disk_if { key.is_local() }\n         }\n \n+        /// Returns the name of the file that contains the function body, if instrumented for coverage.\n+        query covered_file_name(key: DefId) -> Option<Symbol> {\n+            desc { |tcx| \"retrieving the covered file name, if instrumented, for `{}`\", tcx.def_path_str(key) }\n+            storage(ArenaCacheSelector<'tcx>)\n+            cache_on_disk_if { key.is_local() }\n+        }\n+\n+        /// Returns the `CodeRegions` for a function that has instrumented coverage, in case the\n+        /// function was optimized out before codegen, and before being added to the Coverage Map.\n+        query covered_code_regions(key: DefId) -> Vec<&'tcx mir::coverage::CodeRegion> {\n+            desc { |tcx| \"retrieving the covered `CodeRegion`s, if instrumented, for `{}`\", tcx.def_path_str(key) }\n+            storage(ArenaCacheSelector<'tcx>)\n+            cache_on_disk_if { key.is_local() }\n+        }\n+\n         /// The `DefId` is the `DefId` of the containing MIR body. Promoteds do not have their own\n         /// `DefId`. This function returns all promoteds in the specified body. The body references\n         /// promoteds by the `DefId` and the `mir::Promoted` index. This is necessary, because"}, {"sha": "b2fc3710cd6735dce4b83b2f734e54569a746ac6", "filename": "compiler/rustc_middle/src/ty/codec.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -162,7 +162,8 @@ encodable_via_deref! {\n     ty::Region<'tcx>,\n     &'tcx mir::Body<'tcx>,\n     &'tcx mir::UnsafetyCheckResult,\n-    &'tcx mir::BorrowCheckResult<'tcx>\n+    &'tcx mir::BorrowCheckResult<'tcx>,\n+    &'tcx mir::coverage::CodeRegion\n }\n \n pub trait TyDecoder<'tcx>: Decoder {\n@@ -376,7 +377,8 @@ impl_decodable_via_ref! {\n     &'tcx Allocation,\n     &'tcx mir::Body<'tcx>,\n     &'tcx mir::UnsafetyCheckResult,\n-    &'tcx mir::BorrowCheckResult<'tcx>\n+    &'tcx mir::BorrowCheckResult<'tcx>,\n+    &'tcx mir::coverage::CodeRegion\n }\n \n #[macro_export]"}, {"sha": "f79f0d3253899e6d6ef1f624f952ba9de119b321", "filename": "compiler/rustc_mir/src/transform/coverage/graph.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -118,18 +118,8 @@ impl CoverageGraph {\n \n             match term.kind {\n                 TerminatorKind::Return { .. }\n-                // FIXME(richkadel): Add test(s) for `Abort` coverage.\n                 | TerminatorKind::Abort\n-                // FIXME(richkadel): Add test(s) for `Assert` coverage.\n-                // Should `Assert` be handled like `FalseUnwind` instead? Since we filter out unwind\n-                // branches when creating the BCB CFG, aren't `Assert`s (without unwinds) just like\n-                // `FalseUnwinds` (which are kind of like `Goto`s)?\n-                | TerminatorKind::Assert { .. }\n-                // FIXME(richkadel): Add test(s) for `Yield` coverage, and confirm coverage is\n-                // sensible for code using the `yield` keyword.\n                 | TerminatorKind::Yield { .. }\n-                // FIXME(richkadel): Also add coverage tests using async/await, and threading.\n-\n                 | TerminatorKind::SwitchInt { .. } => {\n                     // The `bb` has more than one _outgoing_ edge, or exits the function. Save the\n                     // current sequence of `basic_blocks` gathered to this point, as a new\n@@ -147,13 +137,24 @@ impl CoverageGraph {\n                     // `Terminator`s `successors()` list) checking the number of successors won't\n                     // work.\n                 }\n+\n+                // The following `TerminatorKind`s are either not expected outside an unwind branch,\n+                // or they should not (under normal circumstances) branch. Coverage graphs are\n+                // simplified by assuring coverage results are accurate for program executions that\n+                // don't panic.\n+                //\n+                // Programs that panic and unwind may record slightly inaccurate coverage results\n+                // for a coverage region containing the `Terminator` that began the panic. This\n+                // is as intended. (See Issue #78544 for a possible future option to support\n+                // coverage in test programs that panic.)\n                 TerminatorKind::Goto { .. }\n                 | TerminatorKind::Resume\n                 | TerminatorKind::Unreachable\n                 | TerminatorKind::Drop { .. }\n                 | TerminatorKind::DropAndReplace { .. }\n                 | TerminatorKind::Call { .. }\n                 | TerminatorKind::GeneratorDrop\n+                | TerminatorKind::Assert { .. }\n                 | TerminatorKind::FalseEdge { .. }\n                 | TerminatorKind::FalseUnwind { .. }\n                 | TerminatorKind::InlineAsm { .. } => {}\n@@ -278,6 +279,7 @@ rustc_index::newtype_index! {\n     /// A node in the [control-flow graph][CFG] of CoverageGraph.\n     pub(super) struct BasicCoverageBlock {\n         DEBUG_FORMAT = \"bcb{}\",\n+        const START_BCB = 0,\n     }\n }\n "}, {"sha": "10f522d67465d69c2c694b7dce0ba28fc40f2fdf", "filename": "compiler/rustc_mir/src/transform/coverage/mod.rs", "status": "modified", "additions": 28, "deletions": 49, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fmod.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -88,21 +88,27 @@ struct Instrumentor<'a, 'tcx> {\n     pass_name: &'a str,\n     tcx: TyCtxt<'tcx>,\n     mir_body: &'a mut mir::Body<'tcx>,\n+    fn_sig_span: Span,\n     body_span: Span,\n     basic_coverage_blocks: CoverageGraph,\n     coverage_counters: CoverageCounters,\n }\n \n impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n     fn new(pass_name: &'a str, tcx: TyCtxt<'tcx>, mir_body: &'a mut mir::Body<'tcx>) -> Self {\n-        let hir_body = hir_body(tcx, mir_body.source.def_id());\n+        let (some_fn_sig, hir_body) = fn_sig_and_body(tcx, mir_body.source.def_id());\n         let body_span = hir_body.value.span;\n+        let fn_sig_span = match some_fn_sig {\n+            Some(fn_sig) => fn_sig.span.with_hi(body_span.lo()),\n+            None => body_span.shrink_to_lo(),\n+        };\n         let function_source_hash = hash_mir_source(tcx, hir_body);\n         let basic_coverage_blocks = CoverageGraph::from_mir(mir_body);\n         Self {\n             pass_name,\n             tcx,\n             mir_body,\n+            fn_sig_span,\n             body_span,\n             basic_coverage_blocks,\n             coverage_counters: CoverageCounters::new(function_source_hash),\n@@ -114,9 +120,15 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n         let source_map = tcx.sess.source_map();\n         let mir_source = self.mir_body.source;\n         let def_id = mir_source.def_id();\n+        let fn_sig_span = self.fn_sig_span;\n         let body_span = self.body_span;\n \n-        debug!(\"instrumenting {:?}, span: {}\", def_id, source_map.span_to_string(body_span));\n+        debug!(\n+            \"instrumenting {:?}, fn sig span: {}, body span: {}\",\n+            def_id,\n+            source_map.span_to_string(fn_sig_span),\n+            source_map.span_to_string(body_span)\n+        );\n \n         let mut graphviz_data = debug::GraphvizData::new();\n         let mut debug_used_expressions = debug::UsedExpressions::new();\n@@ -138,6 +150,7 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n         // Compute `CoverageSpan`s from the `CoverageGraph`.\n         let coverage_spans = CoverageSpans::generate_coverage_spans(\n             &self.mir_body,\n+            fn_sig_span,\n             body_span,\n             &self.basic_coverage_blocks,\n         );\n@@ -272,47 +285,13 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n                 bug!(\"Every BasicCoverageBlock should have a Counter or Expression\");\n             };\n             graphviz_data.add_bcb_coverage_span_with_counter(bcb, &covspan, &counter_kind);\n-            // FIXME(#78542): Can spans for `TerminatorKind::Goto` be improved to avoid special\n-            // cases?\n-            let some_code_region = if self.is_code_region_redundant(bcb, span, body_span) {\n-                None\n-            } else {\n-                Some(make_code_region(file_name, &source_file, span, body_span))\n-            };\n-            inject_statement(self.mir_body, counter_kind, self.bcb_last_bb(bcb), some_code_region);\n-        }\n-    }\n-\n-    /// Returns true if the type of `BasicCoverageBlock` (specifically, it's `BasicBlock`s\n-    /// `TerminatorKind`) with the given `Span` (relative to the `body_span`) is known to produce\n-    /// a redundant coverage count.\n-    ///\n-    /// There is at least one case for this, and if it's not handled, the last line in a function\n-    /// will be double-counted.\n-    ///\n-    /// If this method returns `true`, the counter (which other `Expressions` may depend on) is\n-    /// still injected, but without an associated code region.\n-    // FIXME(#78542): Can spans for `TerminatorKind::Goto` be improved to avoid special cases?\n-    fn is_code_region_redundant(\n-        &self,\n-        bcb: BasicCoverageBlock,\n-        span: Span,\n-        body_span: Span,\n-    ) -> bool {\n-        if span.hi() == body_span.hi() {\n-            // All functions execute a `Return`-terminated `BasicBlock`, regardless of how the\n-            // function returns; but only some functions also _can_ return after a `Goto` block\n-            // that ends on the closing brace of the function (with the `Return`). When this\n-            // happens, the last character is counted 2 (or possibly more) times, when we know\n-            // the function returned only once (of course). By giving all `Goto` terminators at\n-            // the end of a function a `non-reportable` code region, they are still counted\n-            // if appropriate, but they don't increment the line counter, as long as their is\n-            // also a `Return` on that last line.\n-            if let TerminatorKind::Goto { .. } = self.bcb_terminator(bcb).kind {\n-                return true;\n-            }\n+            inject_statement(\n+                self.mir_body,\n+                counter_kind,\n+                self.bcb_last_bb(bcb),\n+                Some(make_code_region(file_name, &source_file, span, body_span)),\n+            );\n         }\n-        false\n     }\n \n     /// `inject_coverage_span_counters()` looped through the `CoverageSpan`s and injected the\n@@ -411,11 +390,6 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n         self.bcb_data(bcb).last_bb()\n     }\n \n-    #[inline]\n-    fn bcb_terminator(&self, bcb: BasicCoverageBlock) -> &Terminator<'tcx> {\n-        self.bcb_data(bcb).terminator(self.mir_body)\n-    }\n-\n     #[inline]\n     fn bcb_data(&self, bcb: BasicCoverageBlock) -> &BasicCoverageBlockData {\n         &self.basic_coverage_blocks[bcb]\n@@ -521,10 +495,15 @@ fn make_code_region(\n     }\n }\n \n-fn hir_body<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> &'tcx rustc_hir::Body<'tcx> {\n+fn fn_sig_and_body<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    def_id: DefId,\n+) -> (Option<&'tcx rustc_hir::FnSig<'tcx>>, &'tcx rustc_hir::Body<'tcx>) {\n+    // FIXME(#79625): Consider improving MIR to provide the information needed, to avoid going back\n+    // to HIR for it.\n     let hir_node = tcx.hir().get_if_local(def_id).expect(\"expected DefId is local\");\n     let fn_body_id = hir::map::associated_body(hir_node).expect(\"HIR node is a function with body\");\n-    tcx.hir().body(fn_body_id)\n+    (hir::map::fn_sig(hir_node), tcx.hir().body(fn_body_id))\n }\n \n fn hash_mir_source<'tcx>(tcx: TyCtxt<'tcx>, hir_body: &'tcx rustc_hir::Body<'tcx>) -> u64 {"}, {"sha": "aa34ae70ef1a49cb425aa5b97d7092acd9d64a84", "filename": "compiler/rustc_mir/src/transform/coverage/query.rs", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fquery.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,6 +1,8 @@\n+use super::*;\n+\n use rustc_middle::mir::coverage::*;\n use rustc_middle::mir::visit::Visitor;\n-use rustc_middle::mir::{Coverage, CoverageInfo, Location};\n+use rustc_middle::mir::{self, Coverage, CoverageInfo, Location};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::def_id::DefId;\n@@ -9,6 +11,8 @@ use rustc_span::def_id::DefId;\n /// counter) and `FunctionCoverage::new()` (to extract the coverage map metadata from the MIR).\n pub(crate) fn provide(providers: &mut Providers) {\n     providers.coverageinfo = |tcx, def_id| coverageinfo_from_mir(tcx, def_id);\n+    providers.covered_file_name = |tcx, def_id| covered_file_name(tcx, def_id);\n+    providers.covered_code_regions = |tcx, def_id| covered_code_regions(tcx, def_id);\n }\n \n /// The `num_counters` argument to `llvm.instrprof.increment` is the max counter_id + 1, or in\n@@ -123,3 +127,34 @@ fn coverageinfo_from_mir<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> CoverageInfo\n \n     coverage_visitor.info\n }\n+\n+fn covered_file_name<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Option<Symbol> {\n+    let mir_body = tcx.optimized_mir(def_id);\n+    for bb_data in mir_body.basic_blocks().iter() {\n+        for statement in bb_data.statements.iter() {\n+            if let StatementKind::Coverage(box ref coverage) = statement.kind {\n+                if let Some(code_region) = coverage.code_region.as_ref() {\n+                    return Some(code_region.file_name);\n+                }\n+            }\n+        }\n+    }\n+    None\n+}\n+\n+fn covered_code_regions<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Vec<&'tcx CodeRegion> {\n+    let mir_body: &'tcx mir::Body<'tcx> = tcx.optimized_mir(def_id);\n+    mir_body\n+        .basic_blocks()\n+        .iter()\n+        .map(|data| {\n+            data.statements.iter().filter_map(|statement| match statement.kind {\n+                StatementKind::Coverage(box ref coverage) => {\n+                    coverage.code_region.as_ref() // may be None\n+                }\n+                _ => None,\n+            })\n+        })\n+        .flatten()\n+        .collect()\n+}"}, {"sha": "6eb89754ee635543a7ccbe97e4bc7dae8390d15b", "filename": "compiler/rustc_mir/src/transform/coverage/spans.rs", "status": "modified", "additions": 45, "deletions": 67, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,10 +1,9 @@\n use super::debug::term_type;\n-use super::graph::{BasicCoverageBlock, BasicCoverageBlockData, CoverageGraph};\n+use super::graph::{BasicCoverageBlock, BasicCoverageBlockData, CoverageGraph, START_BCB};\n \n use crate::util::spanview::source_range_no_file;\n \n use rustc_data_structures::graph::WithNumNodes;\n-use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::{\n     self, AggregateKind, BasicBlock, FakeReadCause, Rvalue, Statement, StatementKind, Terminator,\n     TerminatorKind,\n@@ -74,6 +73,10 @@ pub(super) struct CoverageSpan {\n }\n \n impl CoverageSpan {\n+    pub fn for_fn_sig(fn_sig_span: Span) -> Self {\n+        Self { span: fn_sig_span, bcb: START_BCB, coverage_statements: vec![], is_closure: false }\n+    }\n+\n     pub fn for_statement(\n         statement: &Statement<'tcx>,\n         span: Span,\n@@ -82,10 +85,10 @@ impl CoverageSpan {\n         stmt_index: usize,\n     ) -> Self {\n         let is_closure = match statement.kind {\n-            StatementKind::Assign(box (\n-                _,\n-                Rvalue::Aggregate(box AggregateKind::Closure(_, _), _),\n-            )) => true,\n+            StatementKind::Assign(box (_, Rvalue::Aggregate(box ref kind, _))) => match kind {\n+                AggregateKind::Closure(_, _) | AggregateKind::Generator(_, _, _) => true,\n+                _ => false,\n+            },\n             _ => false,\n         };\n \n@@ -109,9 +112,6 @@ impl CoverageSpan {\n     pub fn merge_from(&mut self, mut other: CoverageSpan) {\n         debug_assert!(self.is_mergeable(&other));\n         self.span = self.span.to(other.span);\n-        if other.is_closure {\n-            self.is_closure = true;\n-        }\n         self.coverage_statements.append(&mut other.coverage_statements);\n     }\n \n@@ -171,6 +171,9 @@ pub struct CoverageSpans<'a, 'tcx> {\n     /// The MIR, used to look up `BasicBlockData`.\n     mir_body: &'a mir::Body<'tcx>,\n \n+    /// A `Span` covering the signature of function for the MIR.\n+    fn_sig_span: Span,\n+\n     /// A `Span` covering the function body of the MIR (typically from left curly brace to right\n     /// curly brace).\n     body_span: Span,\n@@ -216,11 +219,13 @@ pub struct CoverageSpans<'a, 'tcx> {\n impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n     pub(super) fn generate_coverage_spans(\n         mir_body: &'a mir::Body<'tcx>,\n+        fn_sig_span: Span,\n         body_span: Span,\n         basic_coverage_blocks: &'a CoverageGraph,\n     ) -> Vec<CoverageSpan> {\n         let mut coverage_spans = CoverageSpans {\n             mir_body,\n+            fn_sig_span,\n             body_span,\n             basic_coverage_blocks,\n             sorted_spans_iter: None,\n@@ -277,6 +282,8 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n             return initial_spans;\n         }\n \n+        initial_spans.push(CoverageSpan::for_fn_sig(self.fn_sig_span));\n+\n         initial_spans.sort_unstable_by(|a, b| {\n             if a.span.lo() == b.span.lo() {\n                 if a.span.hi() == b.span.hi() {\n@@ -331,7 +338,7 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n                     prev={:?}\",\n                     self.prev()\n                 );\n-                self.discard_curr();\n+                self.take_curr();\n             } else if self.curr().is_closure {\n                 self.carve_out_span_for_closure();\n             } else if self.prev_original_span == self.curr().span {\n@@ -345,28 +352,28 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n \n         debug!(\"    AT END, adding last prev={:?}\", self.prev());\n         let prev = self.take_prev();\n-        let CoverageSpans {\n-            mir_body, basic_coverage_blocks, pending_dups, mut refined_spans, ..\n-        } = self;\n+        let CoverageSpans { pending_dups, mut refined_spans, .. } = self;\n         for dup in pending_dups {\n             debug!(\"    ...adding at least one pending dup={:?}\", dup);\n             refined_spans.push(dup);\n         }\n-        refined_spans.push(prev);\n-\n-        // Remove `CoverageSpan`s with empty spans ONLY if the empty `CoverageSpan`s BCB also has at\n-        // least one other non-empty `CoverageSpan`.\n-        let mut has_coverage = BitSet::new_empty(basic_coverage_blocks.num_nodes());\n-        for covspan in &refined_spans {\n-            if !covspan.span.is_empty() {\n-                has_coverage.insert(covspan.bcb);\n-            }\n+\n+        // Async functions wrap a closure that implements the body to be executed. The enclosing\n+        // function is called and returns an `impl Future` without initially executing any of the\n+        // body. To avoid showing the return from the enclosing function as a \"covered\" return from\n+        // the closure, the enclosing function's `TerminatorKind::Return`s `CoverageSpan` is\n+        // excluded. The closure's `Return` is the only one that will be counted. This provides\n+        // adequate coverage, and more intuitive counts. (Avoids double-counting the closing brace\n+        // of the function body.)\n+        let body_ends_with_closure = if let Some(last_covspan) = refined_spans.last() {\n+            last_covspan.is_closure && last_covspan.span.hi() == self.body_span.hi()\n+        } else {\n+            false\n+        };\n+\n+        if !body_ends_with_closure {\n+            refined_spans.push(prev);\n         }\n-        refined_spans.retain(|covspan| {\n-            !(covspan.span.is_empty()\n-                && is_goto(&basic_coverage_blocks[covspan.bcb].terminator(mir_body).kind)\n-                && has_coverage.contains(covspan.bcb))\n-        });\n \n         // Remove `CoverageSpan`s derived from closures, originally added to ensure the coverage\n         // regions for the current function leave room for the closure's own coverage regions\n@@ -491,8 +498,8 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n \n     /// If called, then the next call to `next_coverage_span()` will *not* update `prev` with the\n     /// `curr` coverage span.\n-    fn discard_curr(&mut self) {\n-        self.some_curr = None;\n+    fn take_curr(&mut self) -> CoverageSpan {\n+        self.some_curr.take().unwrap_or_else(|| bug!(\"invalid attempt to unwrap a None some_curr\"))\n     }\n \n     /// Returns true if the curr span should be skipped because prev has already advanced beyond the\n@@ -508,11 +515,11 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n         self.prev().span.hi() <= self.curr().span.lo()\n     }\n \n-    /// If `prev`s span extends left of the closure (`curr`), carve out the closure's\n-    /// span from `prev`'s span. (The closure's coverage counters will be injected when\n-    /// processing the closure's own MIR.) Add the portion of the span to the left of the\n-    /// closure; and if the span extends to the right of the closure, update `prev` to\n-    /// that portion of the span. For any `pending_dups`, repeat the same process.\n+    /// If `prev`s span extends left of the closure (`curr`), carve out the closure's span from\n+    /// `prev`'s span. (The closure's coverage counters will be injected when processing the\n+    /// closure's own MIR.) Add the portion of the span to the left of the closure; and if the span\n+    /// extends to the right of the closure, update `prev` to that portion of the span. For any\n+    /// `pending_dups`, repeat the same process.\n     fn carve_out_span_for_closure(&mut self) {\n         let curr_span = self.curr().span;\n         let left_cutoff = curr_span.lo();\n@@ -541,7 +548,8 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n                 dup.span = dup.span.with_lo(right_cutoff);\n             }\n             self.pending_dups.append(&mut pending_dups);\n-            self.discard_curr(); // since self.prev() was already updated\n+            let closure_covspan = self.take_curr();\n+            self.refined_spans.push(closure_covspan); // since self.prev() was already updated\n         } else {\n             pending_dups.clear();\n         }\n@@ -705,30 +713,8 @@ pub(super) fn filtered_terminator_span(\n         | TerminatorKind::DropAndReplace { .. }\n         | TerminatorKind::SwitchInt { .. }\n         // For `FalseEdge`, only the `real` branch is taken, so it is similar to a `Goto`.\n-        // FIXME(richkadel): Note that `Goto` was moved to it's own match arm, for the reasons\n-        // described below. Add tests to confirm whether or not similar cases also apply to\n-        // `FalseEdge`.\n-        | TerminatorKind::FalseEdge { .. } => None,\n-\n-        // FIXME(#78542): Can spans for `TerminatorKind::Goto` be improved to avoid special cases?\n-        //\n-        // `Goto`s are often the targets of `SwitchInt` branches, and certain important\n-        // optimizations to replace some `Counter`s with `Expression`s require a separate\n-        // `BasicCoverageBlock` for each branch, to support the `Counter`, when needed.\n-        //\n-        // Also, some test cases showed that `Goto` terminators, and to some degree their `Span`s,\n-        // provided useful context for coverage, such as to count and show when `if` blocks\n-        // _without_ `else` blocks execute the `false` case (counting when the body of the `if`\n-        // was _not_ taken). In these cases, the `Goto` span is ultimately given a `CoverageSpan`\n-        // of 1 character, at the end of it's original `Span`.\n-        //\n-        // However, in other cases, a visible `CoverageSpan` is not wanted, but the `Goto`\n-        // block must still be counted (for example, to contribute its count to an `Expression`\n-        // that reports the execution count for some other block). In these cases, the code region\n-        // is set to `None`. (See `Instrumentor::is_code_region_redundant()`.)\n-        TerminatorKind::Goto { .. } => {\n-            Some(function_source_span(terminator.source_info.span.shrink_to_hi(), body_span))\n-        }\n+        | TerminatorKind::FalseEdge { .. }\n+        | TerminatorKind::Goto { .. } => None,\n \n         // Retain spans from all other terminators\n         TerminatorKind::Resume\n@@ -749,11 +735,3 @@ fn function_source_span(span: Span, body_span: Span) -> Span {\n     let span = original_sp(span, body_span).with_ctxt(SyntaxContext::root());\n     if body_span.contains(span) { span } else { body_span }\n }\n-\n-#[inline(always)]\n-fn is_goto(term_kind: &TerminatorKind<'tcx>) -> bool {\n-    match term_kind {\n-        TerminatorKind::Goto { .. } => true,\n-        _ => false,\n-    }\n-}"}, {"sha": "fd55a4dfc4c9223f5b68fef6e1a83748867174d5", "filename": "compiler/rustc_mir/src/util/generic_graphviz.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgeneric_graphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgeneric_graphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgeneric_graphviz.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -116,9 +116,13 @@ impl<\n \n         write!(w, r#\"<table border=\"0\" cellborder=\"1\" cellspacing=\"0\">\"#)?;\n \n-        // FIXME(richkadel): Need generic way to know if node header should have a different color\n+        // FIXME(richkadel): If/when migrating the MIR graphviz to this generic implementation,\n+        // we need generic way to know if node header should have a different color. For example,\n+        // for MIR:\n+        //\n         // let (blk, bgcolor) = if data.is_cleanup {\n-        //    (format!(\"{:?} (cleanup)\", node), \"lightblue\")\n+        //     let color = if dark_mode { \"royalblue\" } else { \"lightblue\" };\n+        //     (format!(\"{:?} (cleanup)\", node), color)\n         // } else {\n         //     let color = if dark_mode { \"dimgray\" } else { \"gray\" };\n         //     (format!(\"{:?}\", node), color)"}, {"sha": "91ebc9a7c82e0292862ed2fc0fa0bde2569cf5d6", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -945,8 +945,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"instrument the generated code to support LLVM source-based code coverage \\\n         reports (note, the compiler build config must include `profiler = true`, \\\n         and is mutually exclusive with `-C profile-generate`/`-C profile-use`); \\\n-        implies `-C link-dead-code` (unless targeting MSVC, or explicitly disabled) \\\n-        and `-Z symbol-mangling-version=v0`; disables/overrides some Rust \\\n+        implies `-Z symbol-mangling-version=v0`; disables/overrides some Rust \\\n         optimizations (default: no)\"),\n     instrument_mcount: bool = (false, parse_bool, [TRACKED],\n         \"insert function instrument code for mcount-based tracing (default: no)\"),"}, {"sha": "4e269f3172c208e0a7df111694f7ab7c26bc8a6d", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1111,33 +1111,7 @@ impl Session {\n     pub fn link_dead_code(&self) -> bool {\n         match self.opts.cg.link_dead_code {\n             Some(explicitly_set) => explicitly_set,\n-            None => {\n-                self.opts.debugging_opts.instrument_coverage && !self.target.is_like_msvc\n-                // Issue #76038: (rustc `-Clink-dead-code` causes MSVC linker to produce invalid\n-                // binaries when LLVM InstrProf counters are enabled). As described by this issue,\n-                // the \"link dead code\" option produces incorrect binaries when compiled and linked\n-                // under MSVC. The resulting Rust programs typically crash with a segmentation\n-                // fault, or produce an empty \"*.profraw\" file (profiling counter results normally\n-                // generated during program exit).\n-                //\n-                // If not targeting MSVC, `-Z instrument-coverage` implies `-C link-dead-code`, so\n-                // unexecuted code is still counted as zero, rather than be optimized out. Note that\n-                // instrumenting dead code can be explicitly disabled with:\n-                //\n-                //     `-Z instrument-coverage -C link-dead-code=no`.\n-                //\n-                // FIXME(richkadel): Investigate if `instrument-coverage` implementation can inject\n-                // [zero counters](https://llvm.org/docs/CoverageMappingFormat.html#counter) in the\n-                // coverage map when \"dead code\" is removed, rather than forcing `link-dead-code`.\n-                // This may not be possible, however, if (as it seems to appear) the \"dead code\"\n-                // that would otherwise not be linked is only identified as \"dead\" by the native\n-                // linker. If that's the case, I believe it is too late for the Rust compiler to\n-                // leverage any information it might be able to get from the linker regarding what\n-                // code is dead, to be able to add those counters.\n-                //\n-                // On the other hand, if any Rust compiler passes are optimizing out dead code blocks\n-                // we should inject \"zero\" counters for those code regions.\n-            }\n+            None => false,\n         }\n     }\n "}, {"sha": "9930bc67cd5d2a7990c54c1a098ca713c02ee2e4", "filename": "src/doc/unstable-book/src/compiler-flags/source-based-code-coverage.md", "status": "modified", "additions": 91, "deletions": 16, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,16 +1,14 @@\n # `source-based-code-coverage`\n \n-The feature request for this feature is: [#34701]\n-\n-The Major Change Proposal (MCP) for this feature is: [#278](https://github.com/rust-lang/compiler-team/issues/278)\n+The tracking issue for this feature is: [#79121].\n \n ------------------------\n \n ## Introduction\n \n The Rust compiler includes two code coverage implementations:\n \n-* A GCC-compatible, gcov-based coverage implementation, enabled with [`-Zprofile`](profile.md), which operates on DebugInfo.\n+* A GCC-compatible, gcov-based coverage implementation, enabled with [`-Zprofile`], which operates on DebugInfo.\n * A source-based code coverage implementation, enabled with `-Zinstrument-coverage`, which uses LLVM's native coverage instrumentation to generate very precise coverage data.\n \n This document describes how to enable and use the LLVM instrumentation-based coverage, via the `-Zinstrument-coverage` compiler flag.\n@@ -20,7 +18,7 @@ This document describes how to enable and use the LLVM instrumentation-based cov\n When `-Zinstrument-coverage` is enabled, the Rust compiler enhances rust-based libraries and binaries by:\n \n * Automatically injecting calls to an LLVM intrinsic ([`llvm.instrprof.increment`]), at functions and branches in compiled code, to increment counters when conditional sections of code are executed.\n-* Embedding additional information in the data section of each library and binary (using the [LLVM Code Coverage Mapping Format]), to define the code regions (start and end positions in the source code) being counted.\n+* Embedding additional information in the data section of each library and binary (using the [LLVM Code Coverage Mapping Format] _Version 4_, supported _only_ in LLVM 11 and up), to define the code regions (start and end positions in the source code) being counted.\n \n When running a coverage-instrumented program, the counter values are written to a `profraw` file at program termination. LLVM bundles tools that read the counter results, combine those results with the coverage map (embedded in the program binary), and generate coverage reports in multiple formats.\n \n@@ -30,21 +28,21 @@ Rust's source-based code coverage requires the Rust \"profiler runtime\". Without\n \n The Rust `nightly` distribution channel should include the profiler runtime, by default.\n \n-*IMPORTANT:* If you are building the Rust compiler from the source distribution, the profiler runtime is *not* enabled in the default `config.toml.example`, and may not be enabled in your `config.toml`. Edit the `config.toml` file, and find the `profiler` feature entry. Uncomment it and set it to `true`:\n+*IMPORTANT:* If you are building the Rust compiler from the source distribution, the profiler runtime is *not* enabled in the default `config.toml.example`. Edit your `config.toml` file and ensure the `profiler` feature is set it to `true`:\n \n ```toml\n # Build the profiler runtime (required when compiling with options that depend\n # on this runtime, such as `-C profile-generate` or `-Z instrument-coverage`).\n profiler = true\n ```\n \n-Then rebuild the Rust compiler (see [rustc-dev-guide-how-to-build-and-run]).\n+If changed, rebuild the Rust compiler (see [rustc-dev-guide-how-to-build-and-run]).\n \n ### Building the demangler\n \n LLVM coverage reporting tools generate results that can include function names and other symbol references, and the raw coverage results report symbols using the compiler's \"mangled\" version of the symbol names, which can be difficult to interpret. To work around this issue, LLVM coverage tools also support a user-specified symbol name demangler.\n \n-One option for a Rust demangler is [`rustfilt`](https://crates.io/crates/rustfilt), which can be installed with:\n+One option for a Rust demangler is [`rustfilt`], which can be installed with:\n \n ```shell\n cargo install rustfilt\n@@ -70,14 +68,16 @@ $ cargo clean\n $ RUSTFLAGS=\"-Zinstrument-coverage\" cargo build\n ```\n \n-If `cargo` is not configured to use your `profiler`-enabled version of `rustc`, set the path explicitly via the `RUSTC` environment variable. Here is another example, using a `stage1` build of `rustc` to compile an `example` binary (from the [`json5format`](https://crates.io/crates/json5format) crate):\n+If `cargo` is not configured to use your `profiler`-enabled version of `rustc`, set the path explicitly via the `RUSTC` environment variable. Here is another example, using a `stage1` build of `rustc` to compile an `example` binary (from the [`json5format`] crate):\n \n ```shell\n $ RUSTC=$HOME/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc \\\n     RUSTFLAGS=\"-Zinstrument-coverage\" \\\n     cargo build --example formatjson5\n ```\n \n+Note that some compiler options, combined with `-Zinstrument-coverage`, can produce LLVM IR and/or linked binaries that are incompatible with LLVM coverage maps. For example, coverage requires references to actual functions in LLVM IR. If any covered function is optimized out, the coverage tools may not be able to process the coverage results. If you need to pass additional options, with coverage enabled, test them early, to confirm you will get the coverage results you expect.\n+\n ## Running the instrumented binary to generate raw coverage profiling data\n \n In the previous example, `cargo` generated the coverage-instrumented binary `formatjson5`:\n@@ -110,19 +110,31 @@ If `LLVM_PROFILE_FILE` contains a path to a non-existent directory, the missing\n * `%Nm` - the instrumented binary\u2019s signature: The runtime creates a pool of N raw profiles, used for on-line profile merging. The runtime takes care of selecting a raw profile from the pool, locking it, and updating it before the program exits. `N` must be between `1` and `9`, and defaults to `1` if omitted (with simply `%m`).\n * `%c` - Does not add anything to the filename, but enables a mode (on some platforms, including Darwin) in which profile counter updates are continuously synced to a file. This means that if the instrumented program crashes, or is killed by a signal, perfect coverage information can still be recovered.\n \n-## Creating coverage reports\n+## Installing LLVM coverage tools\n+\n+LLVM's supplies two tools\u2014`llvm-profdata` and `llvm-cov`\u2014that process coverage data and generate reports. There are several ways to find and/or install these tools, but note that the coverage mapping data generated by the Rust compiler requires LLVM version 11 or higher. (`llvm-cov --version` typically shows the tool's LLVM version number.):\n \n-LLVM's tools to process coverage data and coverage maps have some version dependencies. If you encounter a version mismatch, try updating your LLVM tools.\n+* The LLVM tools may be installed (or installable) directly to your OS (such as via `apt-get`, for Linux).\n+* If you are building the Rust compiler from source, you can optionally use the bundled LLVM tools, built from source. Those tool binaries can typically be found in your build platform directory at something like: `rust/build/x86_64-unknown-linux-gnu/llvm/bin/llvm-*`.\n+* You can install compatible versions of these tools via `rustup`.\n+\n+The `rustup` option is guaranteed to install a compatible version of the LLVM tools, but they can be hard to find. We recommend [`cargo-bintools`], which installs Rust-specific wrappers around these and other LLVM tools, so you can invoke them via `cargo` commands!\n+\n+```shell\n+$ rustup component add llvm-tools-preview\n+$ cargo install cargo-binutils\n+$ cargo profdata -- --help  # note the additional \"--\" preceeding the tool-specific arguments\n+```\n \n-If you are building the Rust compiler from source, you can optionally use the bundled LLVM tools, built from source. Those tool binaries can typically be found in your build platform directory at something like: `rust/build/x86_64-unknown-linux-gnu/llvm/bin/llvm-*`. (Look for `llvm-profdata` and `llvm-cov`.)\n+## Creating coverage reports\n \n-Raw profiles have to be indexed before they can be used to generate coverage reports. This is done using [`llvm-profdata merge`] (which can combine multiple raw profiles and index them at the same time):\n+Raw profiles have to be indexed before they can be used to generate coverage reports. This is done using [`llvm-profdata merge`] (or `cargo cov -- merge`), which can combine multiple raw profiles and index them at the same time:\n \n ```shell\n $ llvm-profdata merge -sparse formatjson5.profraw -o formatjson5.profdata\n ```\n \n-Finally, the `.profdata` file is used, in combination with the coverage map (from the program binary) to generate coverage reports using [`llvm-cov report`]--for a coverage summaries--and [`llvm-cov show`]--to see detailed coverage of lines and regions (character ranges), overlaid on the original source code.\n+Finally, the `.profdata` file is used, in combination with the coverage map (from the program binary) to generate coverage reports using [`llvm-cov report`] (or `cargo cov -- report`), for a coverage summaries; and [`llvm-cov show`] (or `cargo cov -- show`), to see detailed coverage of lines and regions (character ranges) overlaid on the original source code.\n \n These commands have several display and filtering options. For example:\n \n@@ -156,14 +168,77 @@ There are four statistics tracked in a coverage summary:\n \n Of these four statistics, function coverage is usually the least granular while region coverage is the most granular. The project-wide totals for each statistic are listed in the summary.\n \n+## Test coverage\n+\n+A typical use case for coverage analysis is test coverage. Rust's source-based coverage tools can both measure your tests' code coverage as percentage, and pinpoint functions and branches not tested.\n+\n+The following example (using the [`json5format`] crate, for demonstration purposes) show how to generate and analyze coverage results for all tests in a crate.\n+\n+Since `cargo test` both builds and runs the tests, we set both the additional `RUSTFLAGS`, to add the `-Zinstrument-coverage` flag, and `LLVM_PROFILE_FILE`, to set a custom filename for the raw profiling data generated during the test runs. Since there may be more than one test binary, apply `%m` in the filename pattern. This generates unique names for each test binary. (Otherwise, each executed test binary would overwrite the coverage results from the previous binary.)\n+\n+```shell\n+$ RUSTFLAGS=\"-Zinstrument-coverage\" \\\n+    LLVM_PROFILE_FILE=\"json5format-%m.profraw\" \\\n+    cargo test --tests\n+```\n+\n+Make note of the test binary file paths, displayed after the word \"`Running`\" in the test output:\n+\n+```text\n+   ...\n+   Compiling json5format v0.1.3 ($HOME/json5format)\n+    Finished test [unoptimized + debuginfo] target(s) in 14.60s\n+\n+     Running target/debug/deps/json5format-fececd4653271682\n+running 25 tests\n+...\n+test result: ok. 25 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+\n+     Running target/debug/deps/lib-30768f9c53506dc5\n+running 31 tests\n+...\n+test result: ok. 31 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+```\n+\n+You should have one ore more `.profraw` files now, one for each test binary. Run the `profdata` tool to merge them:\n+\n+```shell\n+$ cargo profdata -- merge \\\n+    -sparse json5format-*.profraw -o json5format.profdata\n+```\n+\n+Then run the `cov` tool, with the `profdata` file and all test binaries:\n+\n+```shell\n+$ cargo cov -- report \\\n+    --use-color --ignore-filename-regex='/.cargo/registry' \\\n+    --instr-profile=json5format.profdata \\\n+    target/debug/deps/lib-30768f9c53506dc5 \\\n+    target/debug/deps/json5format-fececd4653271682\n+$ cargo cov -- show \\\n+    --use-color --ignore-filename-regex='/.cargo/registry' \\\n+    --instr-profile=json5format.profdata \\\n+    target/debug/deps/lib-30768f9c53506dc5 \\\n+    target/debug/deps/json5format-fececd4653271682 \\\n+    --show-instantiations --show-line-counts-or-regions \\\n+    --Xdemangler=rustfilt | less -R\n+```\n+\n+_Note the command line option `--ignore-filename-regex=/.cargo/registry`, which excludes the sources for dependencies from the coverage results._\n+\n ## Other references\n \n-Rust's implementation and workflow for source-based code coverage is based on the same library and tools used to implement [source-based code coverage in Clang](https://clang.llvm.org/docs/SourceBasedCodeCoverage.html). (This document is partially based on the Clang guide.)\n+Rust's implementation and workflow for source-based code coverage is based on the same library and tools used to implement [source-based code coverage in Clang]. (This document is partially based on the Clang guide.)\n \n-[#34701]: https://github.com/rust-lang/rust/issues/34701\n+[#79121]: https://github.com/rust-lang/rust/issues/79121\n+[`-Zprofile`]: profile.md\n [`llvm.instrprof.increment`]: https://llvm.org/docs/LangRef.html#llvm-instrprof-increment-intrinsic\n [LLVM Code Coverage Mapping Format]: https://llvm.org/docs/CoverageMappingFormat.html\n [rustc-dev-guide-how-to-build-and-run]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html\n+[`rustfilt`]: https://crates.io/crates/rustfilt\n+[`json5format`]: https://crates.io/crates/json5format\n+[`cargo-bintools`]: https://crates.io/crates/cargo-bintools\n [`llvm-profdata merge`]: https://llvm.org/docs/CommandGuide/llvm-profdata.html#profdata-merge\n [`llvm-cov report`]: https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-report\n [`llvm-cov show`]: https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-show\n+[source-based code coverage in Clang]: https://clang.llvm.org/docs/SourceBasedCodeCoverage.html\n\\ No newline at end of file"}, {"sha": "0d06c4960b363c5a6cd3507b8da8bf7d675ed0cd", "filename": "src/test/mir-opt/const_prop/control_flow_simplification.hello.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -15,7 +15,7 @@\n       }\n   \n       bb1: {\n-          _0 = const ();                   // scope 0 at $DIR/control-flow-simplification.rs:12:5: 14:6\n+          _0 = const ();                   // scope 0 at $DIR/control-flow-simplification.rs:14:6: 14:6\n           StorageDead(_1);                 // scope 0 at $DIR/control-flow-simplification.rs:15:1: 15:2\n           return;                          // scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n       }"}, {"sha": "c2f75e5daeeb22179c46f4cc946d41583100efda", "filename": "src/test/mir-opt/const_prop/control_flow_simplification.hello.PreCodegen.before.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.PreCodegen.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.PreCodegen.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.PreCodegen.before.mir?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -4,7 +4,7 @@ fn hello() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/control-flow-simplification.rs:11:14: 11:14\n \n     bb0: {\n-        _0 = const ();                   // scope 0 at $DIR/control-flow-simplification.rs:12:5: 14:6\n+        _0 = const ();                   // scope 0 at $DIR/control-flow-simplification.rs:14:6: 14:6\n         return;                          // scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n     }\n }"}, {"sha": "124f2d8b97a0069959ab04670f07bb847a9ec1ff", "filename": "src/test/mir-opt/coverage_graphviz.bar.InstrumentCoverage.0.dot", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.bar.InstrumentCoverage.0.dot", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.bar.InstrumentCoverage.0.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.bar.InstrumentCoverage.0.dot?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,5 +2,5 @@ digraph Cov_0_4 {\n     graph [fontname=\"Courier, monospace\"];\n     node [fontname=\"Courier, monospace\"];\n     edge [fontname=\"Courier, monospace\"];\n-    bcb0__Cov_0_4 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 19:5-20:2<br/>    19:5-19:9: @0[0]: _0 = const true<br/>    20:2-20:2: @0.Return: return</td></tr><tr><td align=\"left\" balign=\"left\">bb0: Return</td></tr></table>>];\n+    bcb0__Cov_0_4 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 18:1-20:2<br/>    19:5-19:9: @0[0]: _0 = const true<br/>    20:2-20:2: @0.Return: return</td></tr><tr><td align=\"left\" balign=\"left\">bb0: Return</td></tr></table>>];\n }"}, {"sha": "d88193da4fb1918969867c841dfde3052de793cb", "filename": "src/test/mir-opt/coverage_graphviz.main.InstrumentCoverage.0.dot", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,9 +2,9 @@ digraph Cov_0_3 {\n     graph [fontname=\"Courier, monospace\"];\n     node [fontname=\"Courier, monospace\"];\n     edge [fontname=\"Courier, monospace\"];\n-    bcb2__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb2</td></tr><tr><td align=\"left\" balign=\"left\">Expression(bcb0 - bcb1) at 14:6-14:6<br/>    14:6-14:6: @4.Goto: goto -&gt; bb0</td></tr><tr><td align=\"left\" balign=\"left\">bb4: Goto</td></tr></table>>];\n+    bcb2__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb2</td></tr><tr><td align=\"left\" balign=\"left\">Expression(bcb0 - bcb1) at 13:10-13:10<br/>    13:10-13:10: @4[0]: _1 = const ()</td></tr><tr><td align=\"left\" balign=\"left\">bb4: Goto</td></tr></table>>];\n     bcb1__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb1</td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb1) at 12:13-12:18<br/>    12:13-12:18: @5[0]: _0 = const ()<br/>Expression(bcb1 + 0) at 15:2-15:2<br/>    15:2-15:2: @5.Return: return</td></tr><tr><td align=\"left\" balign=\"left\">bb3: FalseEdge</td></tr><tr><td align=\"left\" balign=\"left\">bb5: Return</td></tr></table>>];\n-    bcb0__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 11:12-11:17<br/>    11:12-11:17: @1.Call: _2 = bar() -&gt; [return: bb2, unwind: bb6]<br/>    11:12-11:17: @2[0]: FakeRead(ForMatchedPlace, _2)</td></tr><tr><td align=\"left\" balign=\"left\">bb0: FalseUnwind<br/>bb1: Call</td></tr><tr><td align=\"left\" balign=\"left\">bb2: SwitchInt</td></tr></table>>];\n+    bcb0__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 9:1-11:17<br/>    11:12-11:17: @1.Call: _2 = bar() -&gt; [return: bb2, unwind: bb6]<br/>    11:12-11:17: @2[0]: FakeRead(ForMatchedPlace, _2)</td></tr><tr><td align=\"left\" balign=\"left\">bb0: FalseUnwind<br/>bb1: Call</td></tr><tr><td align=\"left\" balign=\"left\">bb2: SwitchInt</td></tr></table>>];\n     bcb2__Cov_0_3 -> bcb0__Cov_0_3 [label=<>];\n     bcb0__Cov_0_3 -> bcb2__Cov_0_3 [label=<false>];\n     bcb0__Cov_0_3 -> bcb1__Cov_0_3 [label=<otherwise>];"}, {"sha": "a8b523d06dfc7ba18094b89bdebed1e03cdc9b65", "filename": "src/test/mir-opt/inst_combine_deref.do_not_miscompile.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Finst_combine_deref.do_not_miscompile.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Finst_combine_deref.do_not_miscompile.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finst_combine_deref.do_not_miscompile.InstCombine.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -57,7 +57,7 @@\n       }\n   \n       bb1: {\n-          _7 = const ();                   // scope 4 at $DIR/inst_combine_deref.rs:60:5: 60:23\n+          _7 = const ();                   // scope 4 at $DIR/inst_combine_deref.rs:60:23: 60:23\n           StorageDead(_8);                 // scope 4 at $DIR/inst_combine_deref.rs:60:22: 60:23\n           StorageDead(_7);                 // scope 4 at $DIR/inst_combine_deref.rs:60:22: 60:23\n           _0 = const ();                   // scope 0 at $DIR/inst_combine_deref.rs:54:24: 61:2"}, {"sha": "112a69830927688663479126113674940057a97b", "filename": "src/test/mir-opt/instrument_coverage.bar.InstrumentCoverage.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Finstrument_coverage.bar.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Finstrument_coverage.bar.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.bar.InstrumentCoverage.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -6,7 +6,7 @@\n   \n       bb0: {\n           _0 = const true;                 // scope 0 at /the/src/instrument_coverage.rs:20:5: 20:9\n-+         Coverage::Counter(1) for /the/src/instrument_coverage.rs:20:5 - 21:2; // scope 0 at /the/src/instrument_coverage.rs:21:2: 21:2\n++         Coverage::Counter(1) for /the/src/instrument_coverage.rs:19:1 - 21:2; // scope 0 at /the/src/instrument_coverage.rs:21:2: 21:2\n           return;                          // scope 0 at /the/src/instrument_coverage.rs:21:2: 21:2\n       }\n   }"}, {"sha": "83dee7efa6db4fbd9639d50f69d92791016e91d5", "filename": "src/test/mir-opt/instrument_coverage.main.InstrumentCoverage.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -21,7 +21,7 @@\n   \n       bb2: {\n           FakeRead(ForMatchedPlace, _2);   // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17\n-+         Coverage::Counter(1) for /the/src/instrument_coverage.rs:12:12 - 12:17; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n++         Coverage::Counter(1) for /the/src/instrument_coverage.rs:10:1 - 12:17; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n           switchInt(_2) -> [false: bb4, otherwise: bb3]; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n       }\n   \n@@ -30,9 +30,9 @@\n       }\n   \n       bb4: {\n-          _1 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n+          _1 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:14:10: 14:10\n           StorageDead(_2);                 // scope 0 at /the/src/instrument_coverage.rs:15:5: 15:6\n-+         Coverage::Expression(4294967295) = 1 - 2 for /the/src/instrument_coverage.rs:15:6 - 15:7; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n++         Coverage::Expression(4294967295) = 1 - 2 for /the/src/instrument_coverage.rs:14:10 - 14:11; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n           goto -> bb0;                     // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n       }\n   "}, {"sha": "30036e4034af636d457f72445f62c1d945719cc8", "filename": "src/test/mir-opt/issue_38669.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fissue_38669.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fissue_38669.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_38669.main.SimplifyCfg-initial.after.mir?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -35,7 +35,7 @@ fn main() -> () {\n     }\n \n     bb4: {\n-        _3 = const ();                   // scope 1 at $DIR/issue-38669.rs:7:9: 9:10\n+        _3 = const ();                   // scope 1 at $DIR/issue-38669.rs:9:10: 9:10\n         StorageDead(_4);                 // scope 1 at $DIR/issue-38669.rs:9:9: 9:10\n         StorageDead(_3);                 // scope 1 at $DIR/issue-38669.rs:9:9: 9:10\n         _1 = const true;                 // scope 1 at $DIR/issue-38669.rs:10:9: 10:28"}, {"sha": "453886f3effdf9a19d6e6895a2047f9fc6c609b2", "filename": "src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.after.mir?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -37,7 +37,7 @@ fn main() -> () {\n     }\n \n     bb2: {\n-        _0 = const ();                   // scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n+        _0 = const ();                   // scope 1 at $DIR/issue-41888.rs:14:6: 14:6\n         goto -> bb8;                     // scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n     }\n \n@@ -61,7 +61,7 @@ fn main() -> () {\n     }\n \n     bb6: {\n-        _0 = const ();                   // scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n+        _0 = const ();                   // scope 1 at $DIR/issue-41888.rs:13:10: 13:10\n         goto -> bb8;                     // scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n     }\n "}, {"sha": "56df50c089318b2909a8e2984f2c23d2d7cafada", "filename": "src/test/mir-opt/loop_test.main.SimplifyCfg-promote-consts.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Floop_test.main.SimplifyCfg-promote-consts.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Floop_test.main.SimplifyCfg-promote-consts.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Floop_test.main.SimplifyCfg-promote-consts.after.mir?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -25,7 +25,7 @@ fn main() -> () {\n     }\n \n     bb2: {\n-        _1 = const ();                   // scope 0 at $DIR/loop_test.rs:10:5: 12:6\n+        _1 = const ();                   // scope 0 at $DIR/loop_test.rs:12:6: 12:6\n         StorageDead(_2);                 // scope 0 at $DIR/loop_test.rs:12:5: 12:6\n         StorageDead(_1);                 // scope 0 at $DIR/loop_test.rs:12:5: 12:6\n         StorageLive(_4);                 // scope 0 at $DIR/loop_test.rs:13:5: 16:6"}, {"sha": "d0b1a96b9aef73a7246250cadb5d20644cd3b512", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -34,7 +34,7 @@\n       }\n   \n       bb4: {\n-          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:9:6: 9:6\n           goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n       }\n   "}, {"sha": "d0b1a96b9aef73a7246250cadb5d20644cd3b512", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -34,7 +34,7 @@\n       }\n   \n       bb4: {\n-          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:9:6: 9:6\n           goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n       }\n   "}, {"sha": "5588877aec950c551ae5cabbf0a1ef0b617649ac", "filename": "src/test/mir-opt/simplify_cfg.main.SimplifyCfg-early-opt.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -33,7 +33,7 @@\n - \n -     bb4: {\n +     bb2: {\n-          _1 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+          _1 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:9:10: 9:10\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n           goto -> bb0;                     // scope 0 at $DIR/simplify_cfg.rs:6:5: 10:6\n       }"}, {"sha": "e62935225d805e004ff34e6f69449e1b7f7beda1", "filename": "src/test/mir-opt/simplify_cfg.main.SimplifyCfg-initial.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -40,7 +40,7 @@\n   \n -     bb5: {\n +     bb4: {\n-          _1 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+          _1 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:9:10: 9:10\n -         goto -> bb9;                     // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n +         StorageDead(_2);                 // scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n +         goto -> bb0;                     // scope 0 at $DIR/simplify_cfg.rs:6:5: 10:6"}, {"sha": "bf3caf505eda19515b8795120c30044d69986bdf", "filename": "src/test/mir-opt/simplify_if.main.SimplifyBranches-after-const-prop.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_if.main.SimplifyBranches-after-const-prop.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_if.main.SimplifyBranches-after-const-prop.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_if.main.SimplifyBranches-after-const-prop.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -14,7 +14,7 @@\n       }\n   \n       bb1: {\n-          _0 = const ();                   // scope 0 at $DIR/simplify_if.rs:6:5: 8:6\n+          _0 = const ();                   // scope 0 at $DIR/simplify_if.rs:8:6: 8:6\n           goto -> bb4;                     // scope 0 at $DIR/simplify_if.rs:6:5: 8:6\n       }\n   "}, {"sha": "9f7507a5cadb2aa19d6b1a33297ce3a408e0f46a", "filename": "src/test/mir-opt/simplify_locals_fixedpoint.foo.SimplifyLocals.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -30,7 +30,7 @@\n       }\n   \n       bb1: {\n-          _0 = const ();                   // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:5: 8:6\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals-fixedpoint.rs:8:6: 8:6\n           goto -> bb7;                     // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:5: 8:6\n       }\n   \n@@ -51,7 +51,7 @@\n       }\n   \n       bb4: {\n-          _0 = const ();                   // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:9: 7:10\n+          _0 = const ();                   // scope 1 at $DIR/simplify-locals-fixedpoint.rs:7:10: 7:10\n           goto -> bb6;                     // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:9: 7:10\n       }\n   "}, {"sha": "6f44de1e4a4f5fdf61a19dc52edfb9af7958d04c", "filename": "src/test/mir-opt/unreachable.main.UnreachablePropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable.main.UnreachablePropagation.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -32,7 +32,7 @@\n       }\n   \n       bb2: {\n-          _0 = const ();                   // scope 0 at $DIR/unreachable.rs:9:5: 19:6\n+          _0 = const ();                   // scope 0 at $DIR/unreachable.rs:19:6: 19:6\n           StorageDead(_1);                 // scope 0 at $DIR/unreachable.rs:20:1: 20:2\n           return;                          // scope 0 at $DIR/unreachable.rs:20:2: 20:2\n -     }"}, {"sha": "9bca06a3e2b283ce8ada5aa4fdd3748ad77f092a", "filename": "src/test/mir-opt/unreachable_asm.main.UnreachablePropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -34,7 +34,7 @@\n       }\n   \n       bb2: {\n-          _0 = const ();                   // scope 0 at $DIR/unreachable_asm.rs:11:5: 23:6\n+          _0 = const ();                   // scope 0 at $DIR/unreachable_asm.rs:23:6: 23:6\n           StorageDead(_1);                 // scope 0 at $DIR/unreachable_asm.rs:24:1: 24:2\n           return;                          // scope 0 at $DIR/unreachable_asm.rs:24:2: 24:2\n       }"}, {"sha": "cbc24eab0f568a9444e64052861e3f7d47cb47a2", "filename": "src/test/mir-opt/unreachable_asm_2.main.UnreachablePropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -37,7 +37,7 @@\n       }\n   \n       bb2: {\n-          _0 = const ();                   // scope 0 at $DIR/unreachable_asm_2.rs:11:5: 25:6\n+          _0 = const ();                   // scope 0 at $DIR/unreachable_asm_2.rs:25:6: 25:6\n           StorageDead(_1);                 // scope 0 at $DIR/unreachable_asm_2.rs:26:1: 26:2\n           return;                          // scope 0 at $DIR/unreachable_asm_2.rs:26:2: 26:2\n       }"}, {"sha": "fd8286f1c4f394546d6b829753a78bbe5aab3013", "filename": "src/test/mir-opt/unreachable_diverging.main.UnreachablePropagation.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable_diverging.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Fmir-opt%2Funreachable_diverging.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_diverging.main.UnreachablePropagation.diff?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -33,7 +33,7 @@\n       }\n   \n       bb2: {\n-          _0 = const ();                   // scope 1 at $DIR/unreachable_diverging.rs:14:5: 19:6\n+          _0 = const ();                   // scope 1 at $DIR/unreachable_diverging.rs:19:6: 19:6\n           StorageDead(_1);                 // scope 0 at $DIR/unreachable_diverging.rs:20:1: 20:2\n           StorageDead(_2);                 // scope 0 at $DIR/unreachable_diverging.rs:20:1: 20:2\n           return;                          // scope 0 at $DIR/unreachable_diverging.rs:20:2: 20:2\n@@ -50,7 +50,7 @@\n       }\n   \n       bb4: {\n--         _5 = const ();                   // scope 2 at $DIR/unreachable_diverging.rs:15:9: 17:10\n+-         _5 = const ();                   // scope 2 at $DIR/unreachable_diverging.rs:17:10: 17:10\n -         goto -> bb6;                     // scope 2 at $DIR/unreachable_diverging.rs:15:9: 17:10\n -     }\n - "}, {"sha": "30c7c0fbb5133fefc8f55f389ca07bf01df108cd", "filename": "src/test/run-make-fulldeps/coverage-llvmir-deadcode/Makefile", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-deadcode%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-deadcode%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-deadcode%2FMakefile?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,11 +0,0 @@\n-# needs-profiler-support\n-# ignore-msvc\n-\n-# LINK_DEAD_CODE requires ignore-msvc due to Issue #76038\n-LINK_DEAD_CODE=yes\n-\n--include ../coverage-llvmir-base/Makefile\n-\n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../coverage/coverage_tools.mk for more information."}, {"sha": "54fc3d168645f1e75230c04929e08bcea56b0d37", "filename": "src/test/run-make-fulldeps/coverage-llvmir/Makefile", "status": "renamed", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2FMakefile?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,12 +1,8 @@\n # needs-profiler-support\n \n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../coverage/coverage_tools.mk for more information.\n-\n -include ../coverage/coverage_tools.mk\n \n-BASEDIR=../coverage-llvmir-base\n+BASEDIR=../coverage-llvmir\n \n ifeq ($(UNAME),Darwin)\n \tINSTR_PROF_DATA_SUFFIX=,regular,live_support\n@@ -20,11 +16,7 @@ else\n \tCOMDAT_IF_SUPPORTED=, comdat\n endif\n \n-ifeq ($(LINK_DEAD_CODE),yes)\n-\tDEFINE_INTERNAL=define hidden\n-else\n-\tDEFINE_INTERNAL=define internal\n-endif\n+DEFINE_INTERNAL=define internal\n \n ifdef IS_WINDOWS\n \tLLVM_FILECHECK_OPTIONS=\\\n@@ -65,14 +57,8 @@ endif\n \n test_llvm_ir:\n \t# Compile the test program with non-experimental coverage instrumentation, and generate LLVM IR\n-\t#\n-\t# Note: `-Clink-dead-code=no` disables the option, needed because the option is automatically\n-\t# enabled for some platforms, but not for Windows MSVC (due to Issue #76038). The state of this\n-\t# option affects the generated MIR and coverage, so it is enabled for tests to ensure the\n-\t# tests results are the same across platforms.\n \t$(RUSTC) $(BASEDIR)/testprog.rs \\\n \t\t\t-Zinstrument-coverage \\\n-\t\t\t-Clink-dead-code=$(LINK_DEAD_CODE) \\\n \t\t\t--emit=llvm-ir\n \n \tcat \"$(TMPDIR)\"/testprog.ll | \\", "previous_filename": "src/test/run-make-fulldeps/coverage-llvmir-base/Makefile"}, {"sha": "a312ec48e8498fb3bf8aa58907705c68942ae3fb", "filename": "src/test/run-make-fulldeps/coverage-llvmir/filecheck.testprog.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2Ffilecheck.testprog.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2Ffilecheck.testprog.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2Ffilecheck.testprog.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-llvmir-base/filecheck.testprog.txt"}, {"sha": "358c25677ae1d1561f528d395e563852e898f17f", "filename": "src/test/run-make-fulldeps/coverage-llvmir/testprog.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2Ftestprog.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2Ftestprog.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2Ftestprog.rs?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-llvmir-base/testprog.rs"}, {"sha": "bff55300b3ca3d210ad1d4f3e47976a4457e586a", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.closure.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.closure.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/closure.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 5,\n-              \"covered\": 3,\n-              \"percent\": 60\n-            },\n-            \"instantiations\": {\n-              \"count\": 5,\n-              \"covered\": 3,\n-              \"percent\": 60\n-            },\n-            \"lines\": {\n-              \"count\": 91,\n-              \"covered\": 77,\n-              \"percent\": 84.61538461538461\n-            },\n-            \"regions\": {\n-              \"count\": 25,\n-              \"covered\": 13,\n-              \"notcovered\": 12,\n-              \"percent\": 52\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 5,\n-          \"covered\": 3,\n-          \"percent\": 60\n-        },\n-        \"instantiations\": {\n-          \"count\": 5,\n-          \"covered\": 3,\n-          \"percent\": 60\n-        },\n-        \"lines\": {\n-          \"count\": 91,\n-          \"covered\": 77,\n-          \"percent\": 84.61538461538461\n-        },\n-        \"regions\": {\n-          \"count\": 25,\n-          \"covered\": 13,\n-          \"notcovered\": 12,\n-          \"percent\": 52\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "84dcc251f3f4b11f7cdfba0ea194e979a232a158", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.if.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/if.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 19,\n-              \"covered\": 19,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 5,\n-              \"covered\": 4,\n-              \"notcovered\": 1,\n-              \"percent\": 80\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 19,\n-          \"covered\": 19,\n-          \"percent\": 100\n-        },\n-        \"regions\": {\n-          \"count\": 5,\n-          \"covered\": 4,\n-          \"notcovered\": 1,\n-          \"percent\": 80\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "36f81ceae19bf396747ccd828cb20b857424b458", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.if_else.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if_else.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if_else.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if_else.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/if_else.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 28,\n-              \"covered\": 19,\n-              \"percent\": 67.85714285714286\n-            },\n-            \"regions\": {\n-              \"count\": 7,\n-              \"covered\": 5,\n-              \"notcovered\": 2,\n-              \"percent\": 71.42857142857143\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 28,\n-          \"covered\": 19,\n-          \"percent\": 67.85714285714286\n-        },\n-        \"regions\": {\n-          \"count\": 7,\n-          \"covered\": 5,\n-          \"notcovered\": 2,\n-          \"percent\": 71.42857142857143\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "5a953b90b423f2ebde0dc68a0c2ef12ea4ac136a", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.lazy_boolean.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.lazy_boolean.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.lazy_boolean.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.lazy_boolean.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/lazy_boolean.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 40,\n-              \"covered\": 30,\n-              \"percent\": 75\n-            },\n-            \"regions\": {\n-              \"count\": 37,\n-              \"covered\": 26,\n-              \"notcovered\": 11,\n-              \"percent\": 70.27027027027027\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 40,\n-          \"covered\": 30,\n-          \"percent\": 75\n-        },\n-        \"regions\": {\n-          \"count\": 37,\n-          \"covered\": 26,\n-          \"notcovered\": 11,\n-          \"percent\": 70.27027027027027\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "68163eb7636195b9855905e2d5139014c9efefac", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.nested_loops.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/nested_loops.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 21,\n-              \"covered\": 16,\n-              \"percent\": 76.19047619047619\n-            },\n-            \"regions\": {\n-              \"count\": 18,\n-              \"covered\": 14,\n-              \"notcovered\": 4,\n-              \"percent\": 77.77777777777779\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 21,\n-          \"covered\": 16,\n-          \"percent\": 76.19047619047619\n-        },\n-        \"regions\": {\n-          \"count\": 18,\n-          \"covered\": 14,\n-          \"notcovered\": 4,\n-          \"percent\": 77.77777777777779\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "63d1ae74c5f5d51759f22c7f82f7799ecc11c590", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.simple_match.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_match.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_match.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_match.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/simple_match.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 24,\n-              \"covered\": 24,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 15,\n-              \"covered\": 14,\n-              \"notcovered\": 1,\n-              \"percent\": 93.33333333333333\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 24,\n-          \"covered\": 24,\n-          \"percent\": 100\n-        },\n-        \"regions\": {\n-          \"count\": 15,\n-          \"covered\": 14,\n-          \"notcovered\": 1,\n-          \"percent\": 93.33333333333333\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "ad43f5d992630ed3a5f405c318657a606623c365", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.while_early_ret.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while_early_ret.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while_early_ret.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while_early_ret.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/while_early_ret.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 17,\n-              \"covered\": 15,\n-              \"percent\": 88.23529411764706\n-            },\n-            \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 7,\n-              \"notcovered\": 2,\n-              \"percent\": 77.77777777777779\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 17,\n-          \"covered\": 15,\n-          \"percent\": 88.23529411764706\n-        },\n-        \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 7,\n-          \"notcovered\": 2,\n-          \"percent\": 77.77777777777779\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "173ff4aa4c48154b7c32ca11ed922d6887b0caeb", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.conditions.txt", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.conditions.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,69 +0,0 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|       |fn main() {\n-    4|      1|    let mut countdown = 0;\n-    5|      1|    if true {\n-    6|      1|        countdown = 10;\n-    7|      1|    }\n-    8|       |\n-    9|       |    const B: u32 = 100;\n-   10|      1|    let x = if countdown > 7 {\n-   11|      1|        countdown -= 4;\n-   12|      1|        B\n-   13|      0|    } else if countdown > 2 {\n-   14|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   15|      0|            countdown = 0;\n-   16|      0|        }\n-   17|      0|        countdown -= 5;\n-   18|      0|        countdown\n-   19|       |    } else {\n-   20|      0|        return;\n-   21|       |    };\n-   22|       |\n-   23|      1|    let mut countdown = 0;\n-   24|      1|    if true {\n-   25|      1|        countdown = 10;\n-   26|      1|    }\n-   27|       |\n-   28|      1|    if countdown > 7 {\n-   29|      1|        countdown -= 4;\n-   30|      0|    } else if countdown > 2 {\n-   31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   32|      0|            countdown = 0;\n-   33|      0|        }\n-   34|      0|        countdown -= 5;\n-   35|       |    } else {\n-   36|      0|        return;\n-   37|       |    }\n-   38|       |\n-   39|      1|    let mut countdown = 0;\n-   40|      1|    if true {\n-   41|      1|        countdown = 1;\n-   42|      1|    }\n-   43|       |\n-   44|      1|    let z = if countdown > 7 {\n-                      ^0\n-   45|      0|        countdown -= 4;\n-   46|      1|    } else if countdown > 2 {\n-   47|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   48|      0|            countdown = 0;\n-   49|      0|        }\n-   50|      0|        countdown -= 5;\n-   51|       |    } else {\n-   52|      1|        let should_be_reachable = countdown;\n-   53|      1|        println!(\"reached\");\n-   54|      1|        return;\n-   55|       |    };\n-   56|       |\n-   57|      0|    let w = if countdown > 7 {\n-   58|      0|        countdown -= 4;\n-   59|      0|    } else if countdown > 2 {\n-   60|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   61|      0|            countdown = 0;\n-   62|      0|        }\n-   63|      0|        countdown -= 5;\n-   64|       |    } else {\n-   65|      0|        return;\n-   66|       |    };\n-   67|      1|}\n-"}, {"sha": "86199d7476302c92f3a65fd5c36f84b2ce044226", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.generics.txt", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.generics.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,67 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |// expect-exit-status-1\n-    3|       |\n-    4|       |struct Firework<T> where T: Copy + std::fmt::Display {\n-    5|       |    strength: T,\n-    6|       |}\n-    7|       |\n-    8|       |impl<T> Firework<T> where T: Copy + std::fmt::Display {\n-    9|       |    #[inline(always)]\n-   10|      3|    fn set_strength(&mut self, new_strength: T) {\n-   11|      3|        self.strength = new_strength;\n-   12|      3|    }\n-  ------------------\n-  | <generics::Firework<f64>>::set_strength:\n-  |   10|      2|    fn set_strength(&mut self, new_strength: T) {\n-  |   11|      2|        self.strength = new_strength;\n-  |   12|      2|    }\n-  ------------------\n-  | <generics::Firework<i32>>::set_strength:\n-  |   10|      1|    fn set_strength(&mut self, new_strength: T) {\n-  |   11|      1|        self.strength = new_strength;\n-  |   12|      1|    }\n-  ------------------\n-   13|       |}\n-   14|       |\n-   15|       |impl<T> Drop for Firework<T> where T: Copy + std::fmt::Display {\n-   16|       |    #[inline(always)]\n-   17|      2|    fn drop(&mut self) {\n-   18|      2|        println!(\"BOOM times {}!!!\", self.strength);\n-   19|      2|    }\n-  ------------------\n-  | <generics::Firework<i32> as core::ops::drop::Drop>::drop:\n-  |   17|      1|    fn drop(&mut self) {\n-  |   18|      1|        println!(\"BOOM times {}!!!\", self.strength);\n-  |   19|      1|    }\n-  ------------------\n-  | <generics::Firework<f64> as core::ops::drop::Drop>::drop:\n-  |   17|      1|    fn drop(&mut self) {\n-  |   18|      1|        println!(\"BOOM times {}!!!\", self.strength);\n-  |   19|      1|    }\n-  ------------------\n-   20|       |}\n-   21|       |\n-   22|       |fn main() -> Result<(),u8> {\n-   23|      1|    let mut firecracker = Firework { strength: 1 };\n-   24|      1|    firecracker.set_strength(2);\n-   25|      1|\n-   26|      1|    let mut tnt = Firework { strength: 100.1 };\n-   27|      1|    tnt.set_strength(200.1);\n-   28|      1|    tnt.set_strength(300.3);\n-   29|       |\n-   30|      1|    if true {\n-   31|      1|        println!(\"Exiting with error...\");\n-   32|      1|        return Err(1);\n-   33|       |    }\n-   34|       |\n-   35|       |    let _ = Firework { strength: 1000 };\n-   36|       |\n-   37|       |    Ok(())\n-   38|      1|}\n-   39|       |\n-   40|       |// Expected program output:\n-   41|       |//   Exiting with error...\n-   42|       |//   BOOM times 100!!!\n-   43|       |//   BOOM times 1!!!\n-   44|       |//   Error: 1\n-"}, {"sha": "5f899723e255467c407a637ee65789bda31058b2", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.if_else.txt", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if_else.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,41 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|      1|    let is_true = std::env::args().len() == 1;\n-    8|      1|\n-    9|      1|    let mut countdown = 0;\n-   10|      1|    if\n-   11|      1|        is_true\n-   12|      1|    {\n-   13|      1|        countdown\n-   14|      1|        =\n-   15|      1|            10\n-   16|      1|        ;\n-   17|      1|    }\n-   18|       |    else // Note coverage region difference without semicolon\n-   19|       |    {\n-   20|      0|        countdown\n-   21|      0|        =\n-   22|      0|            100\n-   23|       |    }\n-   24|       |\n-   25|       |    if\n-   26|      1|        is_true\n-   27|      1|    {\n-   28|      1|        countdown\n-   29|      1|        =\n-   30|      1|            10\n-   31|      1|        ;\n-   32|      1|    }\n-   33|       |    else\n-   34|      0|    {\n-   35|      0|        countdown\n-   36|      0|        =\n-   37|      0|            100\n-   38|      0|        ;\n-   39|      0|    }\n-   40|      1|}\n-"}, {"sha": "4a51f842a4bb22cbea878a2e0944013823dc42b6", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.inner_items.txt", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,60 +0,0 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|      1|    let is_true = std::env::args().len() == 1;\n-    8|      1|\n-    9|      1|    let mut countdown = 0;\n-   10|      1|    if is_true {\n-   11|      1|        countdown = 10;\n-   12|      1|    }\n-                   ^0\n-   13|       |\n-   14|       |    mod in_mod {\n-   15|       |        const IN_MOD_CONST: u32 = 1000;\n-   16|       |    }\n-   17|       |\n-   18|       |    fn in_func(a: u32) {\n-   19|      3|        let b = 1;\n-   20|      3|        let c = a + b;\n-   21|      3|        println!(\"c = {}\", c)\n-   22|      3|    }\n-   23|       |\n-   24|       |    struct InStruct {\n-   25|       |        in_struct_field: u32,\n-   26|       |    }\n-   27|       |\n-   28|       |    const IN_CONST: u32 = 1234;\n-   29|       |\n-   30|       |    trait InTrait {\n-   31|       |        fn trait_func(&mut self, incr: u32);\n-   32|       |\n-   33|      1|        fn default_trait_func(&mut self) {\n-   34|      1|            in_func(IN_CONST);\n-   35|      1|            self.trait_func(IN_CONST);\n-   36|      1|        }\n-   37|       |    }\n-   38|       |\n-   39|       |    impl InTrait for InStruct {\n-   40|       |        fn trait_func(&mut self, incr: u32) {\n-   41|      1|            self.in_struct_field += incr;\n-   42|      1|            in_func(self.in_struct_field);\n-   43|      1|        }\n-   44|       |    }\n-   45|       |\n-   46|       |    type InType = String;\n-   47|       |\n-   48|      1|    if is_true {\n-   49|      1|        in_func(countdown);\n-   50|      1|    }\n-                   ^0\n-   51|       |\n-   52|      1|    let mut val = InStruct {\n-   53|      1|        in_struct_field: 101,\n-   54|      1|    };\n-   55|      1|\n-   56|      1|    val.default_trait_func();\n-   57|      1|}\n-"}, {"sha": "c9f373bf6a7c07b1c949e8eb03f25ba4ffbefc9b", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.nested_loops.txt", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,26 +0,0 @@\n-    1|       |fn main() {\n-    2|      1|    let is_true = std::env::args().len() == 1;\n-    3|      1|    let mut countdown = 10;\n-    4|       |\n-    5|      1|    'outer: while countdown > 0 {\n-    6|      1|        let mut a = 100;\n-    7|      1|        let mut b = 100;\n-    8|      3|        for _ in 0..50 {\n-    9|      3|            if a < 30 {\n-   10|      0|                break;\n-   11|       |            }\n-   12|      3|            a -= 5;\n-   13|      3|            b -= 5;\n-   14|      3|            if b < 90 {\n-   15|      1|                a -= 10;\n-   16|      1|                if is_true {\n-   17|      1|                    break 'outer;\n-   18|       |                } else {\n-   19|      0|                    a -= 2;\n-   20|      0|                }\n-   21|      2|            }\n-   22|      2|        }\n-   23|      0|        countdown -= 1;\n-   24|      0|    }\n-   25|      1|}\n-"}, {"sha": "310bf13a695af396ef4e1dc1433200831cee5ea4", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.partial_eq.txt", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.partial_eq.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,101 +0,0 @@\n-    1|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n-    2|       |// structure of this test.\n-    3|       |\n-    4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-                                                    ^1       ^1\n-    5|       |pub struct Version {\n-    6|       |    major: usize,\n-    7|      1|    minor: usize,\n-    8|       |    patch: usize,\n-    9|       |}\n-   10|       |\n-   11|       |impl Version {\n-   12|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n-   13|      2|        Self {\n-   14|      2|            major,\n-   15|      2|            minor,\n-   16|      2|            patch,\n-   17|      2|        }\n-   18|      2|    }\n-   19|       |}\n-   20|       |\n-   21|      1|fn main() {\n-   22|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n-   23|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n-   24|      1|\n-   25|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version_3_3_0);\n-   26|      1|}\n-   27|       |\n-   28|       |/*\n-   29|       |\n-   30|       |This test verifies a bug was fixed that otherwise generated this error:\n-   31|       |\n-   32|       |thread 'rustc' panicked at 'No counters provided the source_hash for function:\n-   33|       |    Instance {\n-   34|       |        def: Item(WithOptConstParam {\n-   35|       |            did: DefId(0:101 ~ autocfg[c44a]::version::{impl#2}::partial_cmp),\n-   36|       |            const_param_did: None\n-   37|       |        }),\n-   38|       |        substs: []\n-   39|       |    }'\n-   40|       |The `PartialOrd` derived by `Version` happened to generate a MIR that generated coverage\n-   41|       |without a code region associated with any `Counter`. Code regions were associated with at least\n-   42|       |one expression, which is allowed, but the `function_source_hash` was only passed to the codegen\n-   43|       |(coverage mapgen) phase from a `Counter`s code region. A new method was added to pass the\n-   44|       |`function_source_hash` without a code region, if necessary.\n-   45|       |\n-   46|       |*/\n-   47|       |\n-   48|       |// FIXME(richkadel): It may be worth investigating why the coverage report for this test produces\n-   49|       |// the following results:\n-   50|       |\n-   51|       |/*\n-   52|       |\n-   53|       |1. Why are their two counts below different characters (first and last) of `PartialOrd`, on line 17?\n-   54|       |\n-   55|       |2. Line 17 is counted twice, but the `::lt` instance shows a line count of 1? Is there a missing\n-   56|       |   line count with a different instance? Or was it really only called once?\n-   57|       |\n-   58|       |3. Line 20 shows another line count (of 1) for a line within a `struct` declaration (on only one of\n-   59|       |   its 3 fields). I doubt the specific field (`minor`) is relevant, but rather I suspect there's a\n-   60|       |   problem computing the file position here, for some reason.\n-   61|       |\n-   62|       |<snip>\n-   63|       |   16|       |\n-   64|       |   17|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-   65|       |                                                    ^1       ^1\n-   66|       |------------------\n-   67|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::gt\n-   68|       |------------------\n-   69|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::le\n-   70|       |------------------\n-   71|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::ge\n-   72|       |------------------\n-   73|       ||<partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::lt:\n-   74|       ||  17|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-   75|       |------------------\n-   76|       |   18|       |pub struct Version {\n-   77|       |   19|       |    major: usize,\n-   78|       |   20|      1|    minor: usize,\n-   79|       |   21|       |    patch: usize,\n-   80|       |   22|       |}\n-   81|       |   23|       |\n-   82|       |   24|       |impl Version {\n-   83|       |   25|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n-   84|       |   26|      2|        Version {\n-   85|       |   27|      2|            major,\n-   86|       |   28|      2|            minor,\n-   87|       |   29|      2|            patch,\n-   88|       |   30|      2|        }\n-   89|       |   31|      2|    }\n-   90|       |   32|       |}\n-   91|       |   33|       |\n-   92|       |   34|      1|fn main() {\n-   93|       |   35|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n-   94|       |   36|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n-   95|       |   37|      1|\n-   96|       |   38|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version\n-   97|       |_3_3_0);\n-   98|       |   39|      1|}\n-   99|       |*/\n-"}, {"sha": "064930dd75c93a4f4b1e83c228f155c38db36d3d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.simple_loop.txt", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_loop.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,37 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|      1|    let is_true = std::env::args().len() == 1;\n-    8|      1|\n-    9|      1|    let mut countdown = 0;\n-   10|       |\n-   11|       |    if\n-   12|      1|        is_true\n-   13|      1|    {\n-   14|      1|        countdown\n-   15|      1|        =\n-   16|      1|            10\n-   17|      1|        ;\n-   18|      1|    }\n-                   ^0\n-   19|       |\n-   20|       |    loop\n-   21|       |    {\n-   22|       |        if\n-   23|     11|            countdown\n-   24|     11|                ==\n-   25|     11|            0\n-   26|       |        {\n-   27|      1|            break\n-   28|       |            ;\n-   29|       |        }\n-   30|     10|        countdown\n-   31|     10|        -=\n-   32|     10|        1\n-   33|       |        ;\n-   34|      1|    }\n-   35|      1|}\n-"}, {"sha": "6b3a8c39c6338a066f1afa7d6893068dc73ef98f", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.try_error_result.txt", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.try_error_result.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,38 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |// expect-exit-status-1\n-    3|       |\n-    4|       |fn call(return_error: bool) -> Result<(),()> {\n-    5|      6|    if return_error {\n-    6|      1|        Err(())\n-    7|       |    } else {\n-    8|      5|        Ok(())\n-    9|       |    }\n-   10|      6|}\n-   11|       |\n-   12|       |fn main() -> Result<(),()> {\n-   13|      1|    let mut\n-   14|      1|        countdown = 10\n-   15|       |    ;\n-   16|       |    for\n-   17|      6|        _\n-   18|       |    in\n-   19|      6|        0..10\n-   20|       |    {\n-   21|      6|        countdown\n-   22|      6|            -= 1\n-   23|      6|        ;\n-   24|      6|        if\n-   25|      6|            countdown < 5\n-   26|       |        {\n-   27|      1|            call(/*return_error=*/ true)?;\n-   28|      0|            call(/*return_error=*/ false)?;\n-   29|       |        }\n-   30|       |        else\n-   31|       |        {\n-   32|      5|            call(/*return_error=*/ false)?;\n-                                                       ^0\n-   33|      5|        }\n-   34|      5|    }\n-   35|      0|    Ok(())\n-   36|      1|}\n-"}, {"sha": "fb797796e4e7dcc9e6d4e2ec785c1989bb760fc6", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.closure.txt", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.closure.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,94 +0,0 @@\n-Counter in file 0 20:21 -> 20:38, #1\n-Counter in file 0 21:20 -> 21:28, (#1 + 0)\n-Counter in file 0 21:29 -> 23:18, #2\n-Counter in file 0 23:18 -> 23:19, (#1 - #2)\n-Counter in file 0 24:17 -> 25:14, (#2 + (#1 - #2))\n-Counter in file 0 3:11 -> 18:13, #1\n-Counter in file 0 25:14 -> 33:9, (#1 + 0)\n-Counter in file 0 40:6 -> 60:13, (#1 + 0)\n-Counter in file 0 67:14 -> 75:9, (#1 + 0)\n-Counter in file 0 82:6 -> 93:2, (#1 + 0)\n-Counter in file 0 77:13 -> 77:30, #1\n-Counter in file 0 78:12 -> 78:20, (#1 + 0)\n-Counter in file 0 78:21 -> 80:10, #2\n-Counter in file 0 80:10 -> 80:11, (#1 - #2)\n-Counter in file 0 81:9 -> 82:6, (#2 + (#1 - #2))\n-Counter in file 0 62:21 -> 62:38, #1\n-Counter in file 0 63:20 -> 63:28, (#1 + 0)\n-Counter in file 0 63:29 -> 65:18, #2\n-Counter in file 0 65:18 -> 65:19, (#1 - #2)\n-Counter in file 0 66:17 -> 67:14, (#2 + (#1 - #2))\n-Counter in file 0 35:13 -> 35:30, #1\n-Counter in file 0 36:12 -> 36:20, (#1 + 0)\n-Counter in file 0 36:21 -> 38:10, #2\n-Counter in file 0 38:10 -> 38:11, (#1 - #2)\n-Counter in file 0 39:9 -> 40:6, (#2 + (#1 - #2))\n-Emitting segments for file: ../coverage/closure.rs\n-Combined regions:\n-  3:11 -> 18:13 (count=1)\n-  20:21 -> 20:38 (count=0)\n-  21:20 -> 21:28 (count=0)\n-  21:29 -> 23:18 (count=0)\n-  23:18 -> 23:19 (count=0)\n-  24:17 -> 25:14 (count=0)\n-  25:14 -> 33:9 (count=1)\n-  35:13 -> 35:30 (count=0)\n-  36:12 -> 36:20 (count=0)\n-  36:21 -> 38:10 (count=0)\n-  38:10 -> 38:11 (count=0)\n-  39:9 -> 40:6 (count=0)\n-  40:6 -> 60:13 (count=1)\n-  62:21 -> 62:38 (count=1)\n-  63:20 -> 63:28 (count=1)\n-  63:29 -> 65:18 (count=0)\n-  65:18 -> 65:19 (count=1)\n-  66:17 -> 67:14 (count=1)\n-  67:14 -> 75:9 (count=1)\n-  77:13 -> 77:30 (count=1)\n-  78:12 -> 78:20 (count=1)\n-  78:21 -> 80:10 (count=0)\n-  80:10 -> 80:11 (count=1)\n-  81:9 -> 82:6 (count=1)\n-  82:6 -> 93:2 (count=1)\n-Segment at 3:11 (count = 1), RegionEntry\n-Segment at 18:13 (count = 0), Skipped\n-Segment at 20:21 (count = 0), RegionEntry\n-Segment at 20:38 (count = 0), Skipped\n-Segment at 21:20 (count = 0), RegionEntry\n-Segment at 21:28 (count = 0), Skipped\n-Segment at 21:29 (count = 0), RegionEntry\n-Segment at 23:18 (count = 0), RegionEntry\n-Segment at 23:19 (count = 0), Skipped\n-Segment at 24:17 (count = 0), RegionEntry\n-Segment at 25:14 (count = 1), RegionEntry\n-Segment at 33:9 (count = 0), Skipped\n-Segment at 35:13 (count = 0), RegionEntry\n-Segment at 35:30 (count = 0), Skipped\n-Segment at 36:12 (count = 0), RegionEntry\n-Segment at 36:20 (count = 0), Skipped\n-Segment at 36:21 (count = 0), RegionEntry\n-Segment at 38:10 (count = 0), RegionEntry\n-Segment at 38:11 (count = 0), Skipped\n-Segment at 39:9 (count = 0), RegionEntry\n-Segment at 40:6 (count = 1), RegionEntry\n-Segment at 60:13 (count = 0), Skipped\n-Segment at 62:21 (count = 1), RegionEntry\n-Segment at 62:38 (count = 0), Skipped\n-Segment at 63:20 (count = 1), RegionEntry\n-Segment at 63:28 (count = 0), Skipped\n-Segment at 63:29 (count = 0), RegionEntry\n-Segment at 65:18 (count = 1), RegionEntry\n-Segment at 65:19 (count = 0), Skipped\n-Segment at 66:17 (count = 1), RegionEntry\n-Segment at 67:14 (count = 1), RegionEntry\n-Segment at 75:9 (count = 0), Skipped\n-Segment at 77:13 (count = 1), RegionEntry\n-Segment at 77:30 (count = 0), Skipped\n-Segment at 78:12 (count = 1), RegionEntry\n-Segment at 78:20 (count = 0), Skipped\n-Segment at 78:21 (count = 0), RegionEntry\n-Segment at 80:10 (count = 1), RegionEntry\n-Segment at 80:11 (count = 0), Skipped\n-Segment at 81:9 (count = 1), RegionEntry\n-Segment at 82:6 (count = 1), RegionEntry\n-Segment at 93:2 (count = 0), Skipped"}, {"sha": "d48cd8074bebb6fa4d781fec581d1dc72c0e2d6b", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.conditions.txt", "status": "removed", "additions": 0, "deletions": 238, "changes": 238, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.conditions.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,238 +0,0 @@\n-Counter in file 0 4:9 -> 4:26, #1\n-Counter in file 0 5:8 -> 5:12, (#1 + 0)\n-Counter in file 0 5:13 -> 7:6, #2\n-Counter in file 0 10:9 -> 10:10, (#4 + #11)\n-Counter in file 0 10:16 -> 10:29, (#2 + 0)\n-Counter in file 0 11:9 -> 12:10, #4\n-Counter in file 0 13:15 -> 13:28, ((#2 + 0) - #3)\n-Counter in file 0 14:12 -> 14:25, #5\n-Counter in file 0 14:29 -> 14:42, (#5 - #13)\n-Counter in file 0 14:42 -> 14:43, (#13 + #14)\n-Counter in file 0 14:42 -> 14:43, ((#5 - #13) - #14)\n-Counter in file 0 14:46 -> 14:60, #21\n-Counter in file 0 14:60 -> 14:61, (#17 + #18)\n-Counter in file 0 14:60 -> 14:61, (#21 - #18)\n-Counter in file 0 14:61 -> 16:10, #22\n-Counter in file 0 16:10 -> 16:11, #23\n-Counter in file 0 17:9 -> 18:18, #11\n-Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #5)\n-Counter in file 0 23:9 -> 23:26, ((#4 + #11) + 0)\n-Counter in file 0 24:8 -> 24:12, ((#4 + #11) + 0)\n-Counter in file 0 24:13 -> 26:6, #12\n-Counter in file 0 28:8 -> 28:21, (#12 + 0)\n-Counter in file 0 29:9 -> 29:23, #16\n-Counter in file 0 30:15 -> 30:28, ((#12 + 0) - #15)\n-Counter in file 0 31:12 -> 31:25, (((#12 + 0) - #15) - #8)\n-Counter in file 0 31:29 -> 31:42, ((((#12 + 0) - #15) - #8) - #24)\n-Counter in file 0 31:42 -> 31:43, (((((#12 + 0) - #15) - #8) - #24) - #25)\n-Counter in file 0 31:42 -> 31:43, (#24 + #25)\n-Counter in file 0 31:46 -> 31:60, #32\n-Counter in file 0 31:60 -> 31:61, (#28 + #29)\n-Counter in file 0 31:60 -> 31:61, (#32 - #29)\n-Counter in file 0 31:61 -> 33:10, #33\n-Counter in file 0 33:10 -> 33:11, #34\n-Counter in file 0 34:9 -> 34:23, #19\n-Counter in file 0 36:9 -> 36:15, #8\n-Counter in file 0 39:9 -> 39:26, (#16 + #19)\n-Counter in file 0 40:8 -> 40:12, ((#16 + #19) + 0)\n-Counter in file 0 40:13 -> 42:6, #20\n-Counter in file 0 44:9 -> 44:10, (#27 + #30)\n-Counter in file 0 44:16 -> 44:29, (#20 + 0)\n-Counter in file 0 45:9 -> 45:23, #27\n-Counter in file 0 46:15 -> 46:28, ((#20 + 0) - #26)\n-Counter in file 0 47:12 -> 47:25, (((#20 + 0) - #26) - #7)\n-Counter in file 0 47:29 -> 47:42, ((((#20 + 0) - #26) - #7) - #35)\n-Counter in file 0 47:42 -> 47:43, (#35 + #36)\n-Counter in file 0 47:42 -> 47:43, (((((#20 + 0) - #26) - #7) - #35) - #36)\n-Counter in file 0 47:46 -> 47:60, #41\n-Counter in file 0 47:60 -> 47:61, (#37 + #38)\n-Counter in file 0 47:60 -> 47:61, (#41 - #38)\n-Counter in file 0 47:61 -> 49:10, #42\n-Counter in file 0 49:10 -> 49:11, #43\n-Counter in file 0 50:9 -> 50:23, #30\n-Counter in file 0 52:13 -> 54:15, #7\n-Counter in file 0 57:9 -> 57:10, (#9 + #10)\n-Counter in file 0 57:16 -> 57:29, ((#27 + #30) + 0)\n-Counter in file 0 58:9 -> 58:23, #9\n-Counter in file 0 59:15 -> 59:28, ((#27 + #30) - #31)\n-Counter in file 0 60:12 -> 60:25, (((#27 + #30) - #31) - #6)\n-Counter in file 0 60:29 -> 60:42, ((((#27 + #30) - #31) - #6) - #39)\n-Counter in file 0 60:42 -> 60:43, (#39 + #40)\n-Counter in file 0 60:42 -> 60:43, (((((#27 + #30) - #31) - #6) - #39) - #40)\n-Counter in file 0 60:46 -> 60:60, #46\n-Counter in file 0 60:60 -> 60:61, (#46 - #45)\n-Counter in file 0 60:60 -> 60:61, (#44 + #45)\n-Counter in file 0 60:61 -> 62:10, #47\n-Counter in file 0 62:10 -> 62:11, #48\n-Counter in file 0 63:9 -> 63:23, #10\n-Counter in file 0 65:9 -> 65:15, #6\n-Counter in file 0 67:1 -> 67:2, ((#9 + #10) + (((#6 + #7) + #8) + (((#2 + 0) - #3) - #5)))\n-Emitting segments for file: ../coverage/conditions.rs\n-Combined regions:\n-  4:9 -> 4:26 (count=1)\n-  5:8 -> 5:12 (count=1)\n-  5:13 -> 7:6 (count=1)\n-  10:9 -> 10:10 (count=1)\n-  10:16 -> 10:29 (count=1)\n-  11:9 -> 12:10 (count=1)\n-  13:15 -> 13:28 (count=0)\n-  14:12 -> 14:25 (count=0)\n-  14:29 -> 14:42 (count=0)\n-  14:42 -> 14:43 (count=0)\n-  14:46 -> 14:60 (count=0)\n-  14:60 -> 14:61 (count=0)\n-  14:61 -> 16:10 (count=0)\n-  16:10 -> 16:11 (count=0)\n-  17:9 -> 18:18 (count=0)\n-  20:9 -> 20:15 (count=0)\n-  23:9 -> 23:26 (count=1)\n-  24:8 -> 24:12 (count=1)\n-  24:13 -> 26:6 (count=1)\n-  28:8 -> 28:21 (count=1)\n-  29:9 -> 29:23 (count=1)\n-  30:15 -> 30:28 (count=0)\n-  31:12 -> 31:25 (count=0)\n-  31:29 -> 31:42 (count=0)\n-  31:42 -> 31:43 (count=0)\n-  31:46 -> 31:60 (count=0)\n-  31:60 -> 31:61 (count=0)\n-  31:61 -> 33:10 (count=0)\n-  33:10 -> 33:11 (count=0)\n-  34:9 -> 34:23 (count=0)\n-  36:9 -> 36:15 (count=0)\n-  39:9 -> 39:26 (count=1)\n-  40:8 -> 40:12 (count=1)\n-  40:13 -> 42:6 (count=1)\n-  44:9 -> 44:10 (count=0)\n-  44:16 -> 44:29 (count=1)\n-  45:9 -> 45:23 (count=0)\n-  46:15 -> 46:28 (count=1)\n-  47:12 -> 47:25 (count=0)\n-  47:29 -> 47:42 (count=0)\n-  47:42 -> 47:43 (count=0)\n-  47:46 -> 47:60 (count=0)\n-  47:60 -> 47:61 (count=0)\n-  47:61 -> 49:10 (count=0)\n-  49:10 -> 49:11 (count=0)\n-  50:9 -> 50:23 (count=0)\n-  52:13 -> 54:15 (count=1)\n-  57:9 -> 57:10 (count=0)\n-  57:16 -> 57:29 (count=0)\n-  58:9 -> 58:23 (count=0)\n-  59:15 -> 59:28 (count=0)\n-  60:12 -> 60:25 (count=0)\n-  60:29 -> 60:42 (count=0)\n-  60:42 -> 60:43 (count=0)\n-  60:46 -> 60:60 (count=0)\n-  60:60 -> 60:61 (count=0)\n-  60:61 -> 62:10 (count=0)\n-  62:10 -> 62:11 (count=0)\n-  63:9 -> 63:23 (count=0)\n-  65:9 -> 65:15 (count=0)\n-  67:1 -> 67:2 (count=1)\n-Segment at 4:9 (count = 1), RegionEntry\n-Segment at 4:26 (count = 0), Skipped\n-Segment at 5:8 (count = 1), RegionEntry\n-Segment at 5:12 (count = 0), Skipped\n-Segment at 5:13 (count = 1), RegionEntry\n-Segment at 7:6 (count = 0), Skipped\n-Segment at 10:9 (count = 1), RegionEntry\n-Segment at 10:10 (count = 0), Skipped\n-Segment at 10:16 (count = 1), RegionEntry\n-Segment at 10:29 (count = 0), Skipped\n-Segment at 11:9 (count = 1), RegionEntry\n-Segment at 12:10 (count = 0), Skipped\n-Segment at 13:15 (count = 0), RegionEntry\n-Segment at 13:28 (count = 0), Skipped\n-Segment at 14:12 (count = 0), RegionEntry\n-Segment at 14:25 (count = 0), Skipped\n-Segment at 14:29 (count = 0), RegionEntry\n-Segment at 14:42 (count = 0), RegionEntry\n-Segment at 14:43 (count = 0), Skipped\n-Segment at 14:46 (count = 0), RegionEntry\n-Segment at 14:60 (count = 0), RegionEntry\n-Segment at 14:61 (count = 0), RegionEntry\n-Segment at 16:10 (count = 0), RegionEntry\n-Segment at 16:11 (count = 0), Skipped\n-Segment at 17:9 (count = 0), RegionEntry\n-Segment at 18:18 (count = 0), Skipped\n-Segment at 20:9 (count = 0), RegionEntry\n-Segment at 20:15 (count = 0), Skipped\n-Segment at 23:9 (count = 1), RegionEntry\n-Segment at 23:26 (count = 0), Skipped\n-Segment at 24:8 (count = 1), RegionEntry\n-Segment at 24:12 (count = 0), Skipped\n-Segment at 24:13 (count = 1), RegionEntry\n-Segment at 26:6 (count = 0), Skipped\n-Segment at 28:8 (count = 1), RegionEntry\n-Segment at 28:21 (count = 0), Skipped\n-Segment at 29:9 (count = 1), RegionEntry\n-Segment at 29:23 (count = 0), Skipped\n-Segment at 30:15 (count = 0), RegionEntry\n-Segment at 30:28 (count = 0), Skipped\n-Segment at 31:12 (count = 0), RegionEntry\n-Segment at 31:25 (count = 0), Skipped\n-Segment at 31:29 (count = 0), RegionEntry\n-Segment at 31:42 (count = 0), RegionEntry\n-Segment at 31:43 (count = 0), Skipped\n-Segment at 31:46 (count = 0), RegionEntry\n-Segment at 31:60 (count = 0), RegionEntry\n-Segment at 31:61 (count = 0), RegionEntry\n-Segment at 33:10 (count = 0), RegionEntry\n-Segment at 33:11 (count = 0), Skipped\n-Segment at 34:9 (count = 0), RegionEntry\n-Segment at 34:23 (count = 0), Skipped\n-Segment at 36:9 (count = 0), RegionEntry\n-Segment at 36:15 (count = 0), Skipped\n-Segment at 39:9 (count = 1), RegionEntry\n-Segment at 39:26 (count = 0), Skipped\n-Segment at 40:8 (count = 1), RegionEntry\n-Segment at 40:12 (count = 0), Skipped\n-Segment at 40:13 (count = 1), RegionEntry\n-Segment at 42:6 (count = 0), Skipped\n-Segment at 44:9 (count = 0), RegionEntry\n-Segment at 44:10 (count = 0), Skipped\n-Segment at 44:16 (count = 1), RegionEntry\n-Segment at 44:29 (count = 0), Skipped\n-Segment at 45:9 (count = 0), RegionEntry\n-Segment at 45:23 (count = 0), Skipped\n-Segment at 46:15 (count = 1), RegionEntry\n-Segment at 46:28 (count = 0), Skipped\n-Segment at 47:12 (count = 0), RegionEntry\n-Segment at 47:25 (count = 0), Skipped\n-Segment at 47:29 (count = 0), RegionEntry\n-Segment at 47:42 (count = 0), RegionEntry\n-Segment at 47:43 (count = 0), Skipped\n-Segment at 47:46 (count = 0), RegionEntry\n-Segment at 47:60 (count = 0), RegionEntry\n-Segment at 47:61 (count = 0), RegionEntry\n-Segment at 49:10 (count = 0), RegionEntry\n-Segment at 49:11 (count = 0), Skipped\n-Segment at 50:9 (count = 0), RegionEntry\n-Segment at 50:23 (count = 0), Skipped\n-Segment at 52:13 (count = 1), RegionEntry\n-Segment at 54:15 (count = 0), Skipped\n-Segment at 57:9 (count = 0), RegionEntry\n-Segment at 57:10 (count = 0), Skipped\n-Segment at 57:16 (count = 0), RegionEntry\n-Segment at 57:29 (count = 0), Skipped\n-Segment at 58:9 (count = 0), RegionEntry\n-Segment at 58:23 (count = 0), Skipped\n-Segment at 59:15 (count = 0), RegionEntry\n-Segment at 59:28 (count = 0), Skipped\n-Segment at 60:12 (count = 0), RegionEntry\n-Segment at 60:25 (count = 0), Skipped\n-Segment at 60:29 (count = 0), RegionEntry\n-Segment at 60:42 (count = 0), RegionEntry\n-Segment at 60:43 (count = 0), Skipped\n-Segment at 60:46 (count = 0), RegionEntry\n-Segment at 60:60 (count = 0), RegionEntry\n-Segment at 60:61 (count = 0), RegionEntry\n-Segment at 62:10 (count = 0), RegionEntry\n-Segment at 62:11 (count = 0), Skipped\n-Segment at 63:9 (count = 0), RegionEntry\n-Segment at 63:23 (count = 0), Skipped\n-Segment at 65:9 (count = 0), RegionEntry\n-Segment at 65:15 (count = 0), Skipped\n-Segment at 67:1 (count = 1), RegionEntry\n-Segment at 67:2 (count = 0), Skipped"}, {"sha": "013a69ed3983a35ce18506d14124930ac71b9599", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.generics.txt", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.generics.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,48 +0,0 @@\n-Counter in file 0 17:24 -> 19:6, #1\n-Counter in file 0 17:24 -> 19:6, #1\n-Counter in file 0 23:9 -> 28:28, #1\n-Counter in file 0 30:8 -> 30:12, (#1 + 0)\n-Counter in file 0 31:9 -> 32:22, #2\n-Counter in file 0 38:1 -> 38:2, (#2 + 0)\n-Counter in file 0 10:49 -> 12:6, #1\n-Counter in file 0 10:49 -> 12:6, #1\n-Emitting segments for file: ../coverage/generics.rs\n-Combined regions:\n-  10:49 -> 12:6 (count=3)\n-  17:24 -> 19:6 (count=2)\n-  23:9 -> 28:28 (count=1)\n-  30:8 -> 30:12 (count=1)\n-  31:9 -> 32:22 (count=1)\n-  38:1 -> 38:2 (count=1)\n-Segment at 10:49 (count = 3), RegionEntry\n-Segment at 12:6 (count = 0), Skipped\n-Segment at 17:24 (count = 2), RegionEntry\n-Segment at 19:6 (count = 0), Skipped\n-Segment at 23:9 (count = 1), RegionEntry\n-Segment at 28:28 (count = 0), Skipped\n-Segment at 30:8 (count = 1), RegionEntry\n-Segment at 30:12 (count = 0), Skipped\n-Segment at 31:9 (count = 1), RegionEntry\n-Segment at 32:22 (count = 0), Skipped\n-Segment at 38:1 (count = 1), RegionEntry\n-Segment at 38:2 (count = 0), Skipped\n-Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworkdE12set_strengthB2_\n-Combined regions:\n-  10:49 -> 12:6 (count=2)\n-Segment at 10:49 (count = 2), RegionEntry\n-Segment at 12:6 (count = 0), Skipped\n-Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworklE12set_strengthB2_\n-Combined regions:\n-  10:49 -> 12:6 (count=1)\n-Segment at 10:49 (count = 1), RegionEntry\n-Segment at 12:6 (count = 0), Skipped\n-Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworklENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n-Combined regions:\n-  17:24 -> 19:6 (count=1)\n-Segment at 17:24 (count = 1), RegionEntry\n-Segment at 19:6 (count = 0), Skipped\n-Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworkdENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n-Combined regions:\n-  17:24 -> 19:6 (count=1)\n-Segment at 17:24 (count = 1), RegionEntry\n-Segment at 19:6 (count = 0), Skipped"}, {"sha": "c2bef365ea9d8fb437fd000aed438930974d925d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.if.txt", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,21 +0,0 @@\n-Counter in file 0 8:5 -> 18:10, #1\n-Counter in file 0 21:9 -> 21:16, (#1 + 0)\n-Counter in file 0 22:5 -> 27:6, #2\n-Counter in file 0 27:6 -> 27:7, (#1 - #2)\n-Counter in file 0 28:1 -> 28:2, (#2 + (#1 - #2))\n-Emitting segments for file: ../coverage/if.rs\n-Combined regions:\n-  8:5 -> 18:10 (count=1)\n-  21:9 -> 21:16 (count=1)\n-  22:5 -> 27:6 (count=1)\n-  27:6 -> 27:7 (count=0)\n-  28:1 -> 28:2 (count=1)\n-Segment at 8:5 (count = 1), RegionEntry\n-Segment at 18:10 (count = 0), Skipped\n-Segment at 21:9 (count = 1), RegionEntry\n-Segment at 21:16 (count = 0), Skipped\n-Segment at 22:5 (count = 1), RegionEntry\n-Segment at 27:6 (count = 0), RegionEntry\n-Segment at 27:7 (count = 0), Skipped\n-Segment at 28:1 (count = 1), RegionEntry\n-Segment at 28:2 (count = 0), Skipped"}, {"sha": "faf5c094bbaaa14b2e8cb4baebc89db4fe38afba", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.if_else.txt", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if_else.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,30 +0,0 @@\n-Counter in file 0 7:9 -> 11:16, #1\n-Counter in file 0 12:5 -> 17:6, #2\n-Counter in file 0 20:9 -> 22:16, (#1 - #2)\n-Counter in file 0 26:9 -> 26:16, (#2 + (#1 - #2))\n-Counter in file 0 27:5 -> 32:6, #3\n-Counter in file 0 34:5 -> 39:6, ((#2 + (#1 - #2)) - #3)\n-Counter in file 0 40:1 -> 40:2, (#3 + ((#2 + (#1 - #2)) - #3))\n-Emitting segments for file: ../coverage/if_else.rs\n-Combined regions:\n-  7:9 -> 11:16 (count=1)\n-  12:5 -> 17:6 (count=1)\n-  20:9 -> 22:16 (count=0)\n-  26:9 -> 26:16 (count=1)\n-  27:5 -> 32:6 (count=1)\n-  34:5 -> 39:6 (count=0)\n-  40:1 -> 40:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 11:16 (count = 0), Skipped\n-Segment at 12:5 (count = 1), RegionEntry\n-Segment at 17:6 (count = 0), Skipped\n-Segment at 20:9 (count = 0), RegionEntry\n-Segment at 22:16 (count = 0), Skipped\n-Segment at 26:9 (count = 1), RegionEntry\n-Segment at 26:16 (count = 0), Skipped\n-Segment at 27:5 (count = 1), RegionEntry\n-Segment at 32:6 (count = 0), Skipped\n-Segment at 34:5 (count = 0), RegionEntry\n-Segment at 39:6 (count = 0), Skipped\n-Segment at 40:1 (count = 1), RegionEntry\n-Segment at 40:2 (count = 0), Skipped"}, {"sha": "65cd6481af4cc86881793d6f02c081e095ae14ee", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.inner_items.txt", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,60 +0,0 @@\n-Counter in file 0 19:13 -> 19:18, #1\n-Counter in file 0 20:13 -> 20:14, #2\n-Counter in file 0 20:17 -> 20:22, (#1 + 0)\n-Counter in file 0 21:9 -> 22:6, (#2 + 0)\n-Counter in file 0 7:9 -> 9:26, #1\n-Counter in file 0 10:8 -> 10:15, (#1 + 0)\n-Counter in file 0 10:16 -> 12:6, #2\n-Counter in file 0 12:6 -> 12:7, (#1 - #2)\n-Counter in file 0 48:8 -> 48:15, (#2 + (#1 - #2))\n-Counter in file 0 48:16 -> 50:6, #3\n-Counter in file 0 50:6 -> 50:7, ((#2 + (#1 - #2)) - #3)\n-Counter in file 0 52:9 -> 57:2, (#3 + ((#2 + (#1 - #2)) - #3))\n-Counter in file 0 33:42 -> 36:10, #1\n-Counter in file 0 41:37 -> 41:41, #1\n-Counter in file 0 42:13 -> 43:10, #2\n-Emitting segments for file: ../coverage/inner_items.rs\n-Combined regions:\n-  7:9 -> 9:26 (count=1)\n-  10:8 -> 10:15 (count=1)\n-  10:16 -> 12:6 (count=1)\n-  12:6 -> 12:7 (count=0)\n-  19:13 -> 19:18 (count=3)\n-  20:13 -> 20:14 (count=3)\n-  20:17 -> 20:22 (count=3)\n-  21:9 -> 22:6 (count=3)\n-  33:42 -> 36:10 (count=1)\n-  41:37 -> 41:41 (count=1)\n-  42:13 -> 43:10 (count=1)\n-  48:8 -> 48:15 (count=1)\n-  48:16 -> 50:6 (count=1)\n-  50:6 -> 50:7 (count=0)\n-  52:9 -> 57:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:26 (count = 0), Skipped\n-Segment at 10:8 (count = 1), RegionEntry\n-Segment at 10:15 (count = 0), Skipped\n-Segment at 10:16 (count = 1), RegionEntry\n-Segment at 12:6 (count = 0), RegionEntry\n-Segment at 12:7 (count = 0), Skipped\n-Segment at 19:13 (count = 3), RegionEntry\n-Segment at 19:18 (count = 0), Skipped\n-Segment at 20:13 (count = 3), RegionEntry\n-Segment at 20:14 (count = 0), Skipped\n-Segment at 20:17 (count = 3), RegionEntry\n-Segment at 20:22 (count = 0), Skipped\n-Segment at 21:9 (count = 3), RegionEntry\n-Segment at 22:6 (count = 0), Skipped\n-Segment at 33:42 (count = 1), RegionEntry\n-Segment at 36:10 (count = 0), Skipped\n-Segment at 41:37 (count = 1), RegionEntry\n-Segment at 41:41 (count = 0), Skipped\n-Segment at 42:13 (count = 1), RegionEntry\n-Segment at 43:10 (count = 0), Skipped\n-Segment at 48:8 (count = 1), RegionEntry\n-Segment at 48:15 (count = 0), Skipped\n-Segment at 48:16 (count = 1), RegionEntry\n-Segment at 50:6 (count = 0), RegionEntry\n-Segment at 50:7 (count = 0), Skipped\n-Segment at 52:9 (count = 1), RegionEntry\n-Segment at 57:2 (count = 0), Skipped"}, {"sha": "f503007353319e2738be05f89f4fa203e4ca8806", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.nested_loops.txt", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,73 +0,0 @@\n-Counter in file 0 2:9 -> 3:27, #1\n-Counter in file 0 5:19 -> 5:32, (#1 + #2)\n-Counter in file 0 6:13 -> 7:24, ((#1 + #2) - #3)\n-Counter in file 0 8:13 -> 8:14, ((((#1 + #2) - #3) + (#5 + #6)) - #7)\n-Counter in file 0 8:18 -> 8:23, (((#1 + #2) - #3) + (#5 + #6))\n-Counter in file 0 9:16 -> 9:22, (((((#1 + #2) - #3) + (#5 + #6)) - #7) + 0)\n-Counter in file 0 10:17 -> 10:22, #8\n-Counter in file 0 12:13 -> 12:19, #9\n-Counter in file 0 13:13 -> 13:19, #10\n-Counter in file 0 14:16 -> 14:22, (#10 + 0)\n-Counter in file 0 15:17 -> 16:27, #11\n-Counter in file 0 17:21 -> 17:33, #4\n-Counter in file 0 19:21 -> 21:14, #5\n-Counter in file 0 21:14 -> 21:15, #6\n-Counter in file 0 22:10 -> 22:11, (#5 + #6)\n-Counter in file 0 23:9 -> 23:23, #2\n-Counter in file 0 24:6 -> 24:7, #3\n-Counter in file 0 25:1 -> 25:2, (#4 + #3)\n-Emitting segments for file: ../coverage/nested_loops.rs\n-Combined regions:\n-  2:9 -> 3:27 (count=1)\n-  5:19 -> 5:32 (count=1)\n-  6:13 -> 7:24 (count=1)\n-  8:13 -> 8:14 (count=3)\n-  8:18 -> 8:23 (count=3)\n-  9:16 -> 9:22 (count=3)\n-  10:17 -> 10:22 (count=0)\n-  12:13 -> 12:19 (count=3)\n-  13:13 -> 13:19 (count=3)\n-  14:16 -> 14:22 (count=3)\n-  15:17 -> 16:27 (count=1)\n-  17:21 -> 17:33 (count=1)\n-  19:21 -> 21:14 (count=0)\n-  21:14 -> 21:15 (count=2)\n-  22:10 -> 22:11 (count=2)\n-  23:9 -> 23:23 (count=0)\n-  24:6 -> 24:7 (count=0)\n-  25:1 -> 25:2 (count=1)\n-Segment at 2:9 (count = 1), RegionEntry\n-Segment at 3:27 (count = 0), Skipped\n-Segment at 5:19 (count = 1), RegionEntry\n-Segment at 5:32 (count = 0), Skipped\n-Segment at 6:13 (count = 1), RegionEntry\n-Segment at 7:24 (count = 0), Skipped\n-Segment at 8:13 (count = 3), RegionEntry\n-Segment at 8:14 (count = 0), Skipped\n-Segment at 8:18 (count = 3), RegionEntry\n-Segment at 8:23 (count = 0), Skipped\n-Segment at 9:16 (count = 3), RegionEntry\n-Segment at 9:22 (count = 0), Skipped\n-Segment at 10:17 (count = 0), RegionEntry\n-Segment at 10:22 (count = 0), Skipped\n-Segment at 12:13 (count = 3), RegionEntry\n-Segment at 12:19 (count = 0), Skipped\n-Segment at 13:13 (count = 3), RegionEntry\n-Segment at 13:19 (count = 0), Skipped\n-Segment at 14:16 (count = 3), RegionEntry\n-Segment at 14:22 (count = 0), Skipped\n-Segment at 15:17 (count = 1), RegionEntry\n-Segment at 16:27 (count = 0), Skipped\n-Segment at 17:21 (count = 1), RegionEntry\n-Segment at 17:33 (count = 0), Skipped\n-Segment at 19:21 (count = 0), RegionEntry\n-Segment at 21:14 (count = 2), RegionEntry\n-Segment at 21:15 (count = 0), Skipped\n-Segment at 22:10 (count = 2), RegionEntry\n-Segment at 22:11 (count = 0), Skipped\n-Segment at 23:9 (count = 0), RegionEntry\n-Segment at 23:23 (count = 0), Skipped\n-Segment at 24:6 (count = 0), RegionEntry\n-Segment at 24:7 (count = 0), Skipped\n-Segment at 25:1 (count = 1), RegionEntry\n-Segment at 25:2 (count = 0), Skipped"}, {"sha": "cdef821c0aef29b36dc7da250238158acfaebb1f", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.partial_eq.txt", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.partial_eq.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,27 +0,0 @@\n-Counter in file 0 7:5 -> 7:6, #1\n-Counter in file 0 21:11 -> 26:2, #1\n-Counter in file 0 4:17 -> 4:22, #1\n-Counter in file 0 13:9 -> 18:6, #1\n-Counter in file 0 4:39 -> 4:40, #1\n-Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 8:5 -> 8:17, #1\n-Emitting segments for file: ../coverage/partial_eq.rs\n-Combined regions:\n-  4:17 -> 4:22 (count=2)\n-  4:39 -> 4:40 (count=1)\n-  4:48 -> 4:49 (count=1)\n-  7:5 -> 7:6 (count=1)\n-  13:9 -> 18:6 (count=2)\n-  21:11 -> 26:2 (count=1)\n-Segment at 4:17 (count = 2), RegionEntry\n-Segment at 4:22 (count = 0), Skipped\n-Segment at 4:39 (count = 1), RegionEntry\n-Segment at 4:40 (count = 0), Skipped\n-Segment at 4:48 (count = 1), RegionEntry\n-Segment at 4:49 (count = 0), Skipped\n-Segment at 7:5 (count = 1), RegionEntry\n-Segment at 7:6 (count = 0), Skipped\n-Segment at 13:9 (count = 2), RegionEntry\n-Segment at 18:6 (count = 0), Skipped\n-Segment at 21:11 (count = 1), RegionEntry\n-Segment at 26:2 (count = 0), Skipped"}, {"sha": "5887658fe67a2fc3ffe04be831fefc25e062c73f", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.tight_inf_loop.txt", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.tight_inf_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.tight_inf_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.tight_inf_loop.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,10 +0,0 @@\n-Counter in file 0 2:8 -> 2:13, #1\n-Counter in file 0 5:1 -> 5:2, (#1 - #2)\n-Emitting segments for file: ../coverage/tight_inf_loop.rs\n-Combined regions:\n-  2:8 -> 2:13 (count=1)\n-  5:1 -> 5:2 (count=1)\n-Segment at 2:8 (count = 1), RegionEntry\n-Segment at 2:13 (count = 0), Skipped\n-Segment at 5:1 (count = 1), RegionEntry\n-Segment at 5:2 (count = 0), Skipped"}, {"sha": "a317cd792910dba7b07fab5192a00cc7f3c042b4", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.try_error_result.txt", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,72 +0,0 @@\n-Counter in file 0 13:9 -> 14:23, #1\n-Counter in file 0 17:9 -> 17:10, ((#1 + (#2 + #3)) - #4)\n-Counter in file 0 19:9 -> 19:14, (#1 + (#2 + #3))\n-Counter in file 0 21:9 -> 25:26, #8\n-Counter in file 0 27:13 -> 27:41, #9\n-Counter in file 0 27:41 -> 27:42, #5\n-Counter in file 0 28:13 -> 28:42, (#9 - #5)\n-Counter in file 0 28:42 -> 28:43, #6\n-Counter in file 0 32:13 -> 32:42, (#8 - #9)\n-Counter in file 0 32:42 -> 32:43, #7\n-Counter in file 0 33:10 -> 33:11, #2\n-Counter in file 0 33:10 -> 33:11, #3\n-Counter in file 0 34:6 -> 34:7, (#2 + #3)\n-Counter in file 0 35:5 -> 35:11, #4\n-Counter in file 0 36:1 -> 36:2, ((#5 + (#6 + #7)) + #4)\n-Counter in file 0 5:8 -> 5:20, #1\n-Counter in file 0 6:9 -> 6:16, #2\n-Counter in file 0 8:9 -> 8:15, (#1 - #2)\n-Counter in file 0 10:1 -> 10:2, (#2 + (#1 - #2))\n-Emitting segments for file: ../coverage/try_error_result.rs\n-Combined regions:\n-  5:8 -> 5:20 (count=6)\n-  6:9 -> 6:16 (count=1)\n-  8:9 -> 8:15 (count=5)\n-  10:1 -> 10:2 (count=6)\n-  13:9 -> 14:23 (count=1)\n-  17:9 -> 17:10 (count=6)\n-  19:9 -> 19:14 (count=6)\n-  21:9 -> 25:26 (count=6)\n-  27:13 -> 27:41 (count=1)\n-  27:41 -> 27:42 (count=1)\n-  28:13 -> 28:42 (count=0)\n-  28:42 -> 28:43 (count=0)\n-  32:13 -> 32:42 (count=5)\n-  32:42 -> 32:43 (count=0)\n-  33:10 -> 33:11 (count=5)\n-  34:6 -> 34:7 (count=5)\n-  35:5 -> 35:11 (count=0)\n-  36:1 -> 36:2 (count=1)\n-Segment at 5:8 (count = 6), RegionEntry\n-Segment at 5:20 (count = 0), Skipped\n-Segment at 6:9 (count = 1), RegionEntry\n-Segment at 6:16 (count = 0), Skipped\n-Segment at 8:9 (count = 5), RegionEntry\n-Segment at 8:15 (count = 0), Skipped\n-Segment at 10:1 (count = 6), RegionEntry\n-Segment at 10:2 (count = 0), Skipped\n-Segment at 13:9 (count = 1), RegionEntry\n-Segment at 14:23 (count = 0), Skipped\n-Segment at 17:9 (count = 6), RegionEntry\n-Segment at 17:10 (count = 0), Skipped\n-Segment at 19:9 (count = 6), RegionEntry\n-Segment at 19:14 (count = 0), Skipped\n-Segment at 21:9 (count = 6), RegionEntry\n-Segment at 25:26 (count = 0), Skipped\n-Segment at 27:13 (count = 1), RegionEntry\n-Segment at 27:41 (count = 1), RegionEntry\n-Segment at 27:42 (count = 0), Skipped\n-Segment at 28:13 (count = 0), RegionEntry\n-Segment at 28:42 (count = 0), RegionEntry\n-Segment at 28:43 (count = 0), Skipped\n-Segment at 32:13 (count = 5), RegionEntry\n-Segment at 32:42 (count = 0), RegionEntry\n-Segment at 32:43 (count = 0), Skipped\n-Segment at 33:10 (count = 5), RegionEntry\n-Segment at 33:11 (count = 0), Skipped\n-Segment at 34:6 (count = 5), RegionEntry\n-Segment at 34:7 (count = 0), Skipped\n-Segment at 35:5 (count = 0), RegionEntry\n-Segment at 35:11 (count = 0), Skipped\n-Segment at 36:1 (count = 1), RegionEntry\n-Segment at 36:2 (count = 0), Skipped"}, {"sha": "b0e881da7c8cb5e09e1068d2e7ce1ad16ce5b01e", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.while.txt", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,18 +0,0 @@\n-Counter in file 0 2:9 -> 2:16, #1\n-Counter in file 0 3:11 -> 3:20, (#1 + #2)\n-Counter in file 0 3:21 -> 4:6, #2\n-Counter in file 0 5:1 -> 5:2, ((#1 + #2) - #2)\n-Emitting segments for file: ../coverage/while.rs\n-Combined regions:\n-  2:9 -> 2:16 (count=1)\n-  3:11 -> 3:20 (count=1)\n-  3:21 -> 4:6 (count=0)\n-  5:1 -> 5:2 (count=1)\n-Segment at 2:9 (count = 1), RegionEntry\n-Segment at 2:16 (count = 0), Skipped\n-Segment at 3:11 (count = 1), RegionEntry\n-Segment at 3:20 (count = 0), Skipped\n-Segment at 3:21 (count = 0), RegionEntry\n-Segment at 4:6 (count = 0), Skipped\n-Segment at 5:1 (count = 1), RegionEntry\n-Segment at 5:2 (count = 0), Skipped"}, {"sha": "f541baec50c0bb0008a583f1017e77f8c0c4ef02", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.while_early_ret.txt", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_ret.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,38 +0,0 @@\n-Counter in file 0 5:9 -> 5:27, #1\n-Counter in file 0 7:9 -> 9:10, (#1 + #2)\n-Counter in file 0 12:13 -> 14:14, ((#1 + #2) - #3)\n-Counter in file 0 18:21 -> 20:22, #6\n-Counter in file 0 22:21 -> 22:27, #4\n-Counter in file 0 26:21 -> 26:27, #5\n-Counter in file 0 30:9 -> 32:10, #2\n-Counter in file 0 35:5 -> 35:11, #3\n-Counter in file 0 36:1 -> 36:2, ((#4 + #5) + #3)\n-Emitting segments for file: ../coverage/while_early_ret.rs\n-Combined regions:\n-  5:9 -> 5:27 (count=1)\n-  7:9 -> 9:10 (count=7)\n-  12:13 -> 14:14 (count=7)\n-  18:21 -> 20:22 (count=1)\n-  22:21 -> 22:27 (count=0)\n-  26:21 -> 26:27 (count=1)\n-  30:9 -> 32:10 (count=6)\n-  35:5 -> 35:11 (count=0)\n-  36:1 -> 36:2 (count=1)\n-Segment at 5:9 (count = 1), RegionEntry\n-Segment at 5:27 (count = 0), Skipped\n-Segment at 7:9 (count = 7), RegionEntry\n-Segment at 9:10 (count = 0), Skipped\n-Segment at 12:13 (count = 7), RegionEntry\n-Segment at 14:14 (count = 0), Skipped\n-Segment at 18:21 (count = 1), RegionEntry\n-Segment at 20:22 (count = 0), Skipped\n-Segment at 22:21 (count = 0), RegionEntry\n-Segment at 22:27 (count = 0), Skipped\n-Segment at 26:21 (count = 1), RegionEntry\n-Segment at 26:27 (count = 0), Skipped\n-Segment at 30:9 (count = 6), RegionEntry\n-Segment at 32:10 (count = 0), Skipped\n-Segment at 35:5 (count = 0), RegionEntry\n-Segment at 35:11 (count = 0), Skipped\n-Segment at 36:1 (count = 1), RegionEntry\n-Segment at 36:2 (count = 0), Skipped"}, {"sha": "b6a9acbf18b3ca0319fe963aec922b74588c8ecc", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/Makefile", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2FMakefile?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,15 +0,0 @@\n-# needs-profiler-support\n-# ignore-msvc\n-# ignore-windows-gnu\n-\n-# FIXME(mati865): MinGW GCC miscompiles compiler-rt profiling library but with Clang it works\n-# properly. Since we only have GCC on the CI ignore the test for now.\n-\n-# LINK_DEAD_CODE requires ignore-msvc due to Issue #76038\n-LINK_DEAD_CODE=yes\n-\n--include ../coverage-reports-base/Makefile\n-\n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../coverage/coverage_tools.mk for more information."}, {"sha": "bff55300b3ca3d210ad1d4f3e47976a4457e586a", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.closure.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.closure.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/closure.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 5,\n-              \"covered\": 3,\n-              \"percent\": 60\n-            },\n-            \"instantiations\": {\n-              \"count\": 5,\n-              \"covered\": 3,\n-              \"percent\": 60\n-            },\n-            \"lines\": {\n-              \"count\": 91,\n-              \"covered\": 77,\n-              \"percent\": 84.61538461538461\n-            },\n-            \"regions\": {\n-              \"count\": 25,\n-              \"covered\": 13,\n-              \"notcovered\": 12,\n-              \"percent\": 52\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 5,\n-          \"covered\": 3,\n-          \"percent\": 60\n-        },\n-        \"instantiations\": {\n-          \"count\": 5,\n-          \"covered\": 3,\n-          \"percent\": 60\n-        },\n-        \"lines\": {\n-          \"count\": 91,\n-          \"covered\": 77,\n-          \"percent\": 84.61538461538461\n-        },\n-        \"regions\": {\n-          \"count\": 25,\n-          \"covered\": 13,\n-          \"notcovered\": 12,\n-          \"percent\": 52\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "ed937a1b13f38a9d0f6411d9d885d0c5819fa468", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.conditions.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.conditions.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/conditions.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 49,\n-              \"covered\": 23,\n-              \"percent\": 46.93877551020408\n-            },\n-            \"regions\": {\n-              \"count\": 69,\n-              \"covered\": 18,\n-              \"notcovered\": 51,\n-              \"percent\": 26.08695652173913\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 49,\n-          \"covered\": 23,\n-          \"percent\": 46.93877551020408\n-        },\n-        \"regions\": {\n-          \"count\": 69,\n-          \"covered\": 18,\n-          \"notcovered\": 51,\n-          \"percent\": 26.08695652173913\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "84dcc251f3f4b11f7cdfba0ea194e979a232a158", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.if.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/if.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 19,\n-              \"covered\": 19,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 5,\n-              \"covered\": 4,\n-              \"notcovered\": 1,\n-              \"percent\": 80\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 19,\n-          \"covered\": 19,\n-          \"percent\": 100\n-        },\n-        \"regions\": {\n-          \"count\": 5,\n-          \"covered\": 4,\n-          \"notcovered\": 1,\n-          \"percent\": 80\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "c178e7f93476f097fcaa839652a6ac762127d69e", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.inner_items.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/inner_items.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 4,\n-              \"covered\": 4,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 4,\n-              \"covered\": 4,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 26,\n-              \"covered\": 26,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 15,\n-              \"covered\": 13,\n-              \"notcovered\": 2,\n-              \"percent\": 86.66666666666667\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 4,\n-          \"covered\": 4,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 4,\n-          \"covered\": 4,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 26,\n-          \"covered\": 26,\n-          \"percent\": 100\n-        },\n-        \"regions\": {\n-          \"count\": 15,\n-          \"covered\": 13,\n-          \"notcovered\": 2,\n-          \"percent\": 86.66666666666667\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "68163eb7636195b9855905e2d5139014c9efefac", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.nested_loops.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/nested_loops.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 21,\n-              \"covered\": 16,\n-              \"percent\": 76.19047619047619\n-            },\n-            \"regions\": {\n-              \"count\": 18,\n-              \"covered\": 14,\n-              \"notcovered\": 4,\n-              \"percent\": 77.77777777777779\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 21,\n-          \"covered\": 16,\n-          \"percent\": 76.19047619047619\n-        },\n-        \"regions\": {\n-          \"count\": 18,\n-          \"covered\": 14,\n-          \"notcovered\": 4,\n-          \"percent\": 77.77777777777779\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "bc0d0088041a89fe95cd46e9b760d410cfe5a602", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.partial_eq.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.partial_eq.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.partial_eq.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.partial_eq.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/partial_eq.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 5,\n-              \"covered\": 5,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 8,\n-              \"covered\": 5,\n-              \"percent\": 62.5\n-            },\n-            \"lines\": {\n-              \"count\": 15,\n-              \"covered\": 15,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 8,\n-          \"covered\": 5,\n-          \"percent\": 62.5\n-        },\n-        \"lines\": {\n-          \"count\": 15,\n-          \"covered\": 15,\n-          \"percent\": 100\n-        },\n-        \"regions\": {\n-          \"count\": 6,\n-          \"covered\": 6,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "ada6bb062dd1eaf04d076a8dc2931361441840c0", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.simple_loop.json", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_loop.json?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,59 +0,0 @@\n-{\n-  \"data\": [\n-    {\n-      \"files\": [\n-        {\n-          \"filename\": \"../coverage/simple_loop.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 19,\n-              \"covered\": 19,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 8,\n-              \"notcovered\": 1,\n-              \"percent\": 88.88888888888889\n-            }\n-          }\n-        }\n-      ],\n-      \"totals\": {\n-        \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n-          \"count\": 19,\n-          \"covered\": 19,\n-          \"percent\": 100\n-        },\n-        \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 8,\n-          \"notcovered\": 1,\n-          \"percent\": 88.88888888888889\n-        }\n-      }\n-    }\n-  ],\n-  \"type\": \"llvm.coverage.json.export\",\n-  \"version\": \"2.0.1\"\n-}"}, {"sha": "aef26a62e25fba8229ef1df99653976796419d4d", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.closure.txt", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.closure.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,94 +0,0 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|      1|fn main() {\n-    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|      1|    // dependent conditions.\n-    7|      1|    let is_true = std::env::args().len() == 1;\n-    8|      1|    let is_false = ! is_true;\n-    9|      1|\n-   10|      1|    let mut some_string = Some(String::from(\"the string content\"));\n-   11|      1|    println!(\n-   12|      1|        \"The string or alt: {}\"\n-   13|      1|        ,\n-   14|      1|        some_string\n-   15|      1|            .\n-   16|      1|            unwrap_or_else\n-   17|      1|        (\n-   18|      1|            ||\n-   19|       |            {\n-   20|      0|                let mut countdown = 0;\n-   21|      0|                if is_false {\n-   22|      0|                    countdown = 10;\n-   23|      0|                }\n-   24|      0|                \"alt string 1\".to_owned()\n-   25|      1|            }\n-   26|      1|        )\n-   27|      1|    );\n-   28|      1|\n-   29|      1|    some_string = Some(String::from(\"the string content\"));\n-   30|      1|    let\n-   31|      1|        a\n-   32|      1|    =\n-   33|      1|        ||\n-   34|       |    {\n-   35|      0|        let mut countdown = 0;\n-   36|      0|        if is_false {\n-   37|      0|            countdown = 10;\n-   38|      0|        }\n-   39|      0|        \"alt string 2\".to_owned()\n-   40|      1|    };\n-   41|      1|    println!(\n-   42|      1|        \"The string or alt: {}\"\n-   43|      1|        ,\n-   44|      1|        some_string\n-   45|      1|            .\n-   46|      1|            unwrap_or_else\n-   47|      1|        (\n-   48|      1|            a\n-   49|      1|        )\n-   50|      1|    );\n-   51|      1|\n-   52|      1|    some_string = None;\n-   53|      1|    println!(\n-   54|      1|        \"The string or alt: {}\"\n-   55|      1|        ,\n-   56|      1|        some_string\n-   57|      1|            .\n-   58|      1|            unwrap_or_else\n-   59|      1|        (\n-   60|      1|            ||\n-   61|       |            {\n-   62|      1|                let mut countdown = 0;\n-   63|      1|                if is_false {\n-   64|      0|                    countdown = 10;\n-   65|      1|                }\n-   66|      1|                \"alt string 3\".to_owned()\n-   67|      1|            }\n-   68|      1|        )\n-   69|      1|    );\n-   70|      1|\n-   71|      1|    some_string = None;\n-   72|      1|    let\n-   73|      1|        a\n-   74|      1|    =\n-   75|      1|        ||\n-   76|       |    {\n-   77|      1|        let mut countdown = 0;\n-   78|      1|        if is_false {\n-   79|      0|            countdown = 10;\n-   80|      1|        }\n-   81|      1|        \"alt string 4\".to_owned()\n-   82|      1|    };\n-   83|      1|    println!(\n-   84|      1|        \"The string or alt: {}\"\n-   85|      1|        ,\n-   86|      1|        some_string\n-   87|      1|            .\n-   88|      1|            unwrap_or_else\n-   89|      1|        (\n-   90|      1|            a\n-   91|      1|        )\n-   92|      1|    );\n-   93|      1|}\n-"}, {"sha": "173ff4aa4c48154b7c32ca11ed922d6887b0caeb", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.conditions.txt", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.conditions.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,69 +0,0 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|       |fn main() {\n-    4|      1|    let mut countdown = 0;\n-    5|      1|    if true {\n-    6|      1|        countdown = 10;\n-    7|      1|    }\n-    8|       |\n-    9|       |    const B: u32 = 100;\n-   10|      1|    let x = if countdown > 7 {\n-   11|      1|        countdown -= 4;\n-   12|      1|        B\n-   13|      0|    } else if countdown > 2 {\n-   14|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   15|      0|            countdown = 0;\n-   16|      0|        }\n-   17|      0|        countdown -= 5;\n-   18|      0|        countdown\n-   19|       |    } else {\n-   20|      0|        return;\n-   21|       |    };\n-   22|       |\n-   23|      1|    let mut countdown = 0;\n-   24|      1|    if true {\n-   25|      1|        countdown = 10;\n-   26|      1|    }\n-   27|       |\n-   28|      1|    if countdown > 7 {\n-   29|      1|        countdown -= 4;\n-   30|      0|    } else if countdown > 2 {\n-   31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   32|      0|            countdown = 0;\n-   33|      0|        }\n-   34|      0|        countdown -= 5;\n-   35|       |    } else {\n-   36|      0|        return;\n-   37|       |    }\n-   38|       |\n-   39|      1|    let mut countdown = 0;\n-   40|      1|    if true {\n-   41|      1|        countdown = 1;\n-   42|      1|    }\n-   43|       |\n-   44|      1|    let z = if countdown > 7 {\n-                      ^0\n-   45|      0|        countdown -= 4;\n-   46|      1|    } else if countdown > 2 {\n-   47|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   48|      0|            countdown = 0;\n-   49|      0|        }\n-   50|      0|        countdown -= 5;\n-   51|       |    } else {\n-   52|      1|        let should_be_reachable = countdown;\n-   53|      1|        println!(\"reached\");\n-   54|      1|        return;\n-   55|       |    };\n-   56|       |\n-   57|      0|    let w = if countdown > 7 {\n-   58|      0|        countdown -= 4;\n-   59|      0|    } else if countdown > 2 {\n-   60|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   61|      0|            countdown = 0;\n-   62|      0|        }\n-   63|      0|        countdown -= 5;\n-   64|       |    } else {\n-   65|      0|        return;\n-   66|       |    };\n-   67|      1|}\n-"}, {"sha": "72aa020ca1691a1941397341855bd334e486c97c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.drop_trait.txt", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.drop_trait.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,34 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |// expect-exit-status-1\n-    3|       |\n-    4|       |struct Firework {\n-    5|       |    strength: i32,\n-    6|       |}\n-    7|       |\n-    8|       |impl Drop for Firework {\n-    9|      2|    fn drop(&mut self) {\n-   10|      2|        println!(\"BOOM times {}!!!\", self.strength);\n-   11|      2|    }\n-   12|       |}\n-   13|       |\n-   14|       |fn main() -> Result<(),u8> {\n-   15|      1|    let _firecracker = Firework { strength: 1 };\n-   16|      1|\n-   17|      1|    let _tnt = Firework { strength: 100 };\n-   18|       |\n-   19|      1|    if true {\n-   20|      1|        println!(\"Exiting with error...\");\n-   21|      1|        return Err(1);\n-   22|       |    }\n-   23|       |\n-   24|       |    let _ = Firework { strength: 1000 };\n-   25|       |\n-   26|       |    Ok(())\n-   27|      1|}\n-   28|       |\n-   29|       |// Expected program output:\n-   30|       |//   Exiting with error...\n-   31|       |//   BOOM times 100!!!\n-   32|       |//   BOOM times 1!!!\n-   33|       |//   Error: 1\n-"}, {"sha": "85e6440ab3729f1275552d93d570d6ff6fc2f242", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.if.txt", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,30 +0,0 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|       |    let\n-    8|      1|    is_true\n-    9|      1|    =\n-   10|      1|        std::env::args().len()\n-   11|      1|    ==\n-   12|      1|        1\n-   13|      1|    ;\n-   14|      1|    let\n-   15|      1|        mut\n-   16|      1|    countdown\n-   17|      1|    =\n-   18|      1|        0\n-   19|       |    ;\n-   20|       |    if\n-   21|      1|        is_true\n-   22|      1|    {\n-   23|      1|        countdown\n-   24|      1|        =\n-   25|      1|            10\n-   26|      1|        ;\n-   27|      1|    }\n-                   ^0\n-   28|      1|}\n-"}, {"sha": "1b503033911c5a4061e43b22c12e8e0dce4d6951", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.lazy_boolean.txt", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.lazy_boolean.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,65 +0,0 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|      1|    let is_true = std::env::args().len() == 1;\n-    8|      1|\n-    9|      1|    let (mut a, mut b, mut c) = (0, 0, 0);\n-   10|      1|    if is_true {\n-   11|      1|        a = 1;\n-   12|      1|        b = 10;\n-   13|      1|        c = 100;\n-   14|      1|    }\n-                   ^0\n-   15|       |    let\n-   16|      1|        somebool\n-   17|       |        =\n-   18|      1|            a < b\n-   19|       |        ||\n-   20|      1|            b < c\n-                          ^0\n-   21|       |    ;\n-   22|       |    let\n-   23|      1|        somebool\n-   24|       |        =\n-   25|      1|            b < a\n-   26|       |        ||\n-   27|      1|            b < c\n-   28|       |    ;\n-   29|      1|    let somebool = a < b && b < c;\n-   30|      1|    let somebool = b < a && b < c;\n-                                          ^0\n-   31|       |\n-   32|       |    if\n-   33|      1|        !\n-   34|      1|        is_true\n-   35|      0|    {\n-   36|      0|        a = 2\n-   37|      0|        ;\n-   38|      1|    }\n-   39|       |\n-   40|       |    if\n-   41|      1|        is_true\n-   42|      1|    {\n-   43|      1|        b = 30\n-   44|      1|        ;\n-   45|      1|    }\n-   46|       |    else\n-   47|      0|    {\n-   48|      0|        c = 400\n-   49|      0|        ;\n-   50|      0|    }\n-   51|       |\n-   52|      1|    if !is_true {\n-   53|      0|        a = 2;\n-   54|      1|    }\n-   55|       |\n-   56|      1|    if is_true {\n-   57|      1|        b = 30;\n-   58|      1|    } else {\n-   59|      0|        c = 400;\n-   60|      0|    }\n-   61|      1|}\n-"}, {"sha": "b0d668c6d76da756a8910bc94c17c9276b01abdc", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.loop_break_value.txt", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loop_break_value.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,14 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|      1|fn main() {\n-    4|      1|    let result\n-    5|      1|        =\n-    6|      1|            loop\n-    7|      1|        {\n-    8|      1|            break\n-    9|      1|            10\n-   10|      1|            ;\n-   11|      1|        }\n-   12|      1|    ;\n-   13|      1|}\n-"}, {"sha": "3a969a6b89869366e1bc2fd3a9defc1743e08861", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.loops_branches.txt", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loops_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loops_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loops_branches.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,38 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n-    4|       |// structure of this `fmt` function.\n-    5|       |\n-    6|       |struct DebugTest;\n-    7|       |\n-    8|       |impl std::fmt::Debug for DebugTest {\n-    9|       |    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n-   10|      1|        if true {\n-   11|      1|            if false {\n-   12|       |                while true {\n-   13|       |                }\n-   14|      1|            }\n-   15|      1|            write!(f, \"error\")?;\n-                                            ^0\n-   16|       |        } else {\n-   17|      1|        }\n-   18|      1|        Ok(())\n-   19|      1|    }\n-   20|       |}\n-   21|       |\n-   22|      1|fn main() {\n-   23|      1|    let debug_test = DebugTest;\n-   24|      1|    println!(\"{:?}\", debug_test);\n-   25|      1|}\n-   26|       |\n-   27|       |/*\n-   28|       |\n-   29|       |This is the error message generated, before the issue was fixed:\n-   30|       |\n-   31|       |error: internal compiler error: compiler/rustc_mir/src/transform/coverage/mod.rs:374:42:\n-   32|       |Error processing: DefId(0:6 ~ bug_incomplete_cov_graph_traversal_simplified[317d]::{impl#0}::fmt):\n-   33|       |Error { message: \"`TraverseCoverageGraphWithLoops` missed some `BasicCoverageBlock`s:\n-   34|       |[bcb6, bcb7, bcb9]\" }\n-   35|       |\n-   36|       |*/\n-"}, {"sha": "d16a0a9c4c8c4f7b99892cadaace5315c2740f6b", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.partial_eq.txt", "status": "removed", "additions": 0, "deletions": 111, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.partial_eq.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,111 +0,0 @@\n-    1|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n-    2|       |// structure of this test.\n-    3|       |\n-    4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-                                                    ^1       ^1\n-  ------------------\n-  | Unexecuted instantiation: <partial_eq::Version as core::cmp::PartialOrd>::gt\n-  ------------------\n-  | Unexecuted instantiation: <partial_eq::Version as core::cmp::PartialOrd>::le\n-  ------------------\n-  | Unexecuted instantiation: <partial_eq::Version as core::cmp::PartialOrd>::ge\n-  ------------------\n-  | <partial_eq::Version as core::cmp::PartialOrd>::lt:\n-  |    4|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-  ------------------\n-    5|       |pub struct Version {\n-    6|       |    major: usize,\n-    7|      1|    minor: usize,\n-    8|       |    patch: usize,\n-    9|       |}\n-   10|       |\n-   11|       |impl Version {\n-   12|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n-   13|      2|        Self {\n-   14|      2|            major,\n-   15|      2|            minor,\n-   16|      2|            patch,\n-   17|      2|        }\n-   18|      2|    }\n-   19|       |}\n-   20|       |\n-   21|      1|fn main() {\n-   22|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n-   23|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n-   24|      1|\n-   25|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version_3_3_0);\n-   26|      1|}\n-   27|       |\n-   28|       |/*\n-   29|       |\n-   30|       |This test verifies a bug was fixed that otherwise generated this error:\n-   31|       |\n-   32|       |thread 'rustc' panicked at 'No counters provided the source_hash for function:\n-   33|       |    Instance {\n-   34|       |        def: Item(WithOptConstParam {\n-   35|       |            did: DefId(0:101 ~ autocfg[c44a]::version::{impl#2}::partial_cmp),\n-   36|       |            const_param_did: None\n-   37|       |        }),\n-   38|       |        substs: []\n-   39|       |    }'\n-   40|       |The `PartialOrd` derived by `Version` happened to generate a MIR that generated coverage\n-   41|       |without a code region associated with any `Counter`. Code regions were associated with at least\n-   42|       |one expression, which is allowed, but the `function_source_hash` was only passed to the codegen\n-   43|       |(coverage mapgen) phase from a `Counter`s code region. A new method was added to pass the\n-   44|       |`function_source_hash` without a code region, if necessary.\n-   45|       |\n-   46|       |*/\n-   47|       |\n-   48|       |// FIXME(richkadel): It may be worth investigating why the coverage report for this test produces\n-   49|       |// the following results:\n-   50|       |\n-   51|       |/*\n-   52|       |\n-   53|       |1. Why are their two counts below different characters (first and last) of `PartialOrd`, on line 17?\n-   54|       |\n-   55|       |2. Line 17 is counted twice, but the `::lt` instance shows a line count of 1? Is there a missing\n-   56|       |   line count with a different instance? Or was it really only called once?\n-   57|       |\n-   58|       |3. Line 20 shows another line count (of 1) for a line within a `struct` declaration (on only one of\n-   59|       |   its 3 fields). I doubt the specific field (`minor`) is relevant, but rather I suspect there's a\n-   60|       |   problem computing the file position here, for some reason.\n-   61|       |\n-   62|       |<snip>\n-   63|       |   16|       |\n-   64|       |   17|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-   65|       |                                                    ^1       ^1\n-   66|       |------------------\n-   67|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::gt\n-   68|       |------------------\n-   69|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::le\n-   70|       |------------------\n-   71|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::ge\n-   72|       |------------------\n-   73|       ||<partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::lt:\n-   74|       ||  17|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n-   75|       |------------------\n-   76|       |   18|       |pub struct Version {\n-   77|       |   19|       |    major: usize,\n-   78|       |   20|      1|    minor: usize,\n-   79|       |   21|       |    patch: usize,\n-   80|       |   22|       |}\n-   81|       |   23|       |\n-   82|       |   24|       |impl Version {\n-   83|       |   25|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n-   84|       |   26|      2|        Version {\n-   85|       |   27|      2|            major,\n-   86|       |   28|      2|            minor,\n-   87|       |   29|      2|            patch,\n-   88|       |   30|      2|        }\n-   89|       |   31|      2|    }\n-   90|       |   32|       |}\n-   91|       |   33|       |\n-   92|       |   34|      1|fn main() {\n-   93|       |   35|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n-   94|       |   36|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n-   95|       |   37|      1|\n-   96|       |   38|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version\n-   97|       |_3_3_0);\n-   98|       |   39|      1|}\n-   99|       |*/\n-"}, {"sha": "1f7e71d3eb0e7bad42393553b43b6acac9b50222", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.simple_match.txt", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_match.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,46 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|      1|    let is_true = std::env::args().len() == 1;\n-    8|      1|\n-    9|      1|    let mut countdown = 1;\n-   10|      1|    if is_true {\n-   11|      1|        countdown = 0;\n-   12|      1|    }\n-                   ^0\n-   13|       |\n-   14|       |    for\n-   15|      2|        _\n-   16|       |    in\n-   17|      3|        0..2\n-   18|       |    {\n-   19|       |        let z\n-   20|       |        ;\n-   21|       |        match\n-   22|      2|            countdown\n-   23|       |        {\n-   24|      1|            x\n-   25|       |            if\n-   26|      2|                x\n-   27|      2|                    <\n-   28|      2|                1\n-                               ^1\n-   29|       |            =>\n-   30|      1|            {\n-   31|      1|                z = countdown\n-   32|      1|                ;\n-   33|      1|                let y = countdown\n-   34|      1|                ;\n-   35|      1|                countdown = 10\n-   36|      1|                ;\n-   37|      1|            }\n-   38|       |            _\n-   39|       |            =>\n-   40|      1|            {}\n-   41|       |        }\n-   42|      3|    }\n-   43|      1|}\n-"}, {"sha": "e02eac03a6b1574c6c10534081581d67e120d0e0", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.tight_inf_loop.txt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.tight_inf_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.tight_inf_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.tight_inf_loop.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,6 +0,0 @@\n-    1|       |fn main() {\n-    2|      1|    if false {\n-    3|       |        loop {}\n-    4|       |    }\n-    5|      1|}\n-"}, {"sha": "194325b6b9ecaac6c23117102cd38678ccecc704", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.while.txt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,6 +0,0 @@\n-    1|       |fn main() {\n-    2|      1|    let num = 9;\n-    3|      1|    while num >= 10 {\n-    4|      0|    }\n-    5|      1|}\n-"}, {"sha": "26041136d2f4c460ac4a12f540857e5b2b6dade6", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.while_early_ret.txt", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while_early_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while_early_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while_early_ret.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,48 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |// expect-exit-status-1\n-    3|       |\n-    4|       |fn main() -> Result<(),u8> {\n-    5|      1|    let mut countdown = 10;\n-    6|       |    while\n-    7|      7|        countdown\n-    8|      7|            >\n-    9|      7|        0\n-   10|       |    {\n-   11|       |        if\n-   12|      7|            countdown\n-   13|      7|                <\n-   14|      7|            5\n-   15|       |        {\n-   16|       |            return\n-   17|       |                if\n-   18|      1|                    countdown\n-   19|      1|                        >\n-   20|      1|                    8\n-   21|       |                {\n-   22|      0|                    Ok(())\n-   23|       |                }\n-   24|       |                else\n-   25|       |                {\n-   26|      1|                    Err(1)\n-   27|       |                }\n-   28|       |                ;\n-   29|       |        }\n-   30|      6|        countdown\n-   31|      6|            -=\n-   32|      6|        1\n-   33|       |        ;\n-   34|       |    }\n-   35|      0|    Ok(())\n-   36|      1|}\n-   37|       |\n-   38|       |// ISSUE(77553): Originally, this test had `Err(1)` on line 22 (instead of `Ok(())`) and\n-   39|       |// `std::process::exit(2)` on line 26 (instead of `Err(1)`); and this worked as expected on Linux\n-   40|       |// and MacOS. But on Windows (MSVC, at least), the call to `std::process::exit()` exits the program\n-   41|       |// without saving the InstrProf coverage counters. The use of `std::process:exit()` is not critical\n-   42|       |// to the coverage test for early returns, but this is a limitation that should be fixed.\n-   43|       |//\n-   44|       |// FIXME(richkadel): Consider creating a new tests for coverage when calling `std::process::exit()`,\n-   45|       |// move the `ISSUE` comment to that test, and implement a new test directive that supports skipping\n-   46|       |// coverage tests when targeting specific platforms (at least skipping Windows, or MSVC if the\n-   47|       |// problem exists on MSVC only).\n-"}, {"sha": "fb797796e4e7dcc9e6d4e2ec785c1989bb760fc6", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.closure.txt", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.closure.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,94 +0,0 @@\n-Counter in file 0 20:21 -> 20:38, #1\n-Counter in file 0 21:20 -> 21:28, (#1 + 0)\n-Counter in file 0 21:29 -> 23:18, #2\n-Counter in file 0 23:18 -> 23:19, (#1 - #2)\n-Counter in file 0 24:17 -> 25:14, (#2 + (#1 - #2))\n-Counter in file 0 3:11 -> 18:13, #1\n-Counter in file 0 25:14 -> 33:9, (#1 + 0)\n-Counter in file 0 40:6 -> 60:13, (#1 + 0)\n-Counter in file 0 67:14 -> 75:9, (#1 + 0)\n-Counter in file 0 82:6 -> 93:2, (#1 + 0)\n-Counter in file 0 77:13 -> 77:30, #1\n-Counter in file 0 78:12 -> 78:20, (#1 + 0)\n-Counter in file 0 78:21 -> 80:10, #2\n-Counter in file 0 80:10 -> 80:11, (#1 - #2)\n-Counter in file 0 81:9 -> 82:6, (#2 + (#1 - #2))\n-Counter in file 0 62:21 -> 62:38, #1\n-Counter in file 0 63:20 -> 63:28, (#1 + 0)\n-Counter in file 0 63:29 -> 65:18, #2\n-Counter in file 0 65:18 -> 65:19, (#1 - #2)\n-Counter in file 0 66:17 -> 67:14, (#2 + (#1 - #2))\n-Counter in file 0 35:13 -> 35:30, #1\n-Counter in file 0 36:12 -> 36:20, (#1 + 0)\n-Counter in file 0 36:21 -> 38:10, #2\n-Counter in file 0 38:10 -> 38:11, (#1 - #2)\n-Counter in file 0 39:9 -> 40:6, (#2 + (#1 - #2))\n-Emitting segments for file: ../coverage/closure.rs\n-Combined regions:\n-  3:11 -> 18:13 (count=1)\n-  20:21 -> 20:38 (count=0)\n-  21:20 -> 21:28 (count=0)\n-  21:29 -> 23:18 (count=0)\n-  23:18 -> 23:19 (count=0)\n-  24:17 -> 25:14 (count=0)\n-  25:14 -> 33:9 (count=1)\n-  35:13 -> 35:30 (count=0)\n-  36:12 -> 36:20 (count=0)\n-  36:21 -> 38:10 (count=0)\n-  38:10 -> 38:11 (count=0)\n-  39:9 -> 40:6 (count=0)\n-  40:6 -> 60:13 (count=1)\n-  62:21 -> 62:38 (count=1)\n-  63:20 -> 63:28 (count=1)\n-  63:29 -> 65:18 (count=0)\n-  65:18 -> 65:19 (count=1)\n-  66:17 -> 67:14 (count=1)\n-  67:14 -> 75:9 (count=1)\n-  77:13 -> 77:30 (count=1)\n-  78:12 -> 78:20 (count=1)\n-  78:21 -> 80:10 (count=0)\n-  80:10 -> 80:11 (count=1)\n-  81:9 -> 82:6 (count=1)\n-  82:6 -> 93:2 (count=1)\n-Segment at 3:11 (count = 1), RegionEntry\n-Segment at 18:13 (count = 0), Skipped\n-Segment at 20:21 (count = 0), RegionEntry\n-Segment at 20:38 (count = 0), Skipped\n-Segment at 21:20 (count = 0), RegionEntry\n-Segment at 21:28 (count = 0), Skipped\n-Segment at 21:29 (count = 0), RegionEntry\n-Segment at 23:18 (count = 0), RegionEntry\n-Segment at 23:19 (count = 0), Skipped\n-Segment at 24:17 (count = 0), RegionEntry\n-Segment at 25:14 (count = 1), RegionEntry\n-Segment at 33:9 (count = 0), Skipped\n-Segment at 35:13 (count = 0), RegionEntry\n-Segment at 35:30 (count = 0), Skipped\n-Segment at 36:12 (count = 0), RegionEntry\n-Segment at 36:20 (count = 0), Skipped\n-Segment at 36:21 (count = 0), RegionEntry\n-Segment at 38:10 (count = 0), RegionEntry\n-Segment at 38:11 (count = 0), Skipped\n-Segment at 39:9 (count = 0), RegionEntry\n-Segment at 40:6 (count = 1), RegionEntry\n-Segment at 60:13 (count = 0), Skipped\n-Segment at 62:21 (count = 1), RegionEntry\n-Segment at 62:38 (count = 0), Skipped\n-Segment at 63:20 (count = 1), RegionEntry\n-Segment at 63:28 (count = 0), Skipped\n-Segment at 63:29 (count = 0), RegionEntry\n-Segment at 65:18 (count = 1), RegionEntry\n-Segment at 65:19 (count = 0), Skipped\n-Segment at 66:17 (count = 1), RegionEntry\n-Segment at 67:14 (count = 1), RegionEntry\n-Segment at 75:9 (count = 0), Skipped\n-Segment at 77:13 (count = 1), RegionEntry\n-Segment at 77:30 (count = 0), Skipped\n-Segment at 78:12 (count = 1), RegionEntry\n-Segment at 78:20 (count = 0), Skipped\n-Segment at 78:21 (count = 0), RegionEntry\n-Segment at 80:10 (count = 1), RegionEntry\n-Segment at 80:11 (count = 0), Skipped\n-Segment at 81:9 (count = 1), RegionEntry\n-Segment at 82:6 (count = 1), RegionEntry\n-Segment at 93:2 (count = 0), Skipped"}, {"sha": "d48cd8074bebb6fa4d781fec581d1dc72c0e2d6b", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.conditions.txt", "status": "removed", "additions": 0, "deletions": 238, "changes": 238, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.conditions.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,238 +0,0 @@\n-Counter in file 0 4:9 -> 4:26, #1\n-Counter in file 0 5:8 -> 5:12, (#1 + 0)\n-Counter in file 0 5:13 -> 7:6, #2\n-Counter in file 0 10:9 -> 10:10, (#4 + #11)\n-Counter in file 0 10:16 -> 10:29, (#2 + 0)\n-Counter in file 0 11:9 -> 12:10, #4\n-Counter in file 0 13:15 -> 13:28, ((#2 + 0) - #3)\n-Counter in file 0 14:12 -> 14:25, #5\n-Counter in file 0 14:29 -> 14:42, (#5 - #13)\n-Counter in file 0 14:42 -> 14:43, (#13 + #14)\n-Counter in file 0 14:42 -> 14:43, ((#5 - #13) - #14)\n-Counter in file 0 14:46 -> 14:60, #21\n-Counter in file 0 14:60 -> 14:61, (#17 + #18)\n-Counter in file 0 14:60 -> 14:61, (#21 - #18)\n-Counter in file 0 14:61 -> 16:10, #22\n-Counter in file 0 16:10 -> 16:11, #23\n-Counter in file 0 17:9 -> 18:18, #11\n-Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #5)\n-Counter in file 0 23:9 -> 23:26, ((#4 + #11) + 0)\n-Counter in file 0 24:8 -> 24:12, ((#4 + #11) + 0)\n-Counter in file 0 24:13 -> 26:6, #12\n-Counter in file 0 28:8 -> 28:21, (#12 + 0)\n-Counter in file 0 29:9 -> 29:23, #16\n-Counter in file 0 30:15 -> 30:28, ((#12 + 0) - #15)\n-Counter in file 0 31:12 -> 31:25, (((#12 + 0) - #15) - #8)\n-Counter in file 0 31:29 -> 31:42, ((((#12 + 0) - #15) - #8) - #24)\n-Counter in file 0 31:42 -> 31:43, (((((#12 + 0) - #15) - #8) - #24) - #25)\n-Counter in file 0 31:42 -> 31:43, (#24 + #25)\n-Counter in file 0 31:46 -> 31:60, #32\n-Counter in file 0 31:60 -> 31:61, (#28 + #29)\n-Counter in file 0 31:60 -> 31:61, (#32 - #29)\n-Counter in file 0 31:61 -> 33:10, #33\n-Counter in file 0 33:10 -> 33:11, #34\n-Counter in file 0 34:9 -> 34:23, #19\n-Counter in file 0 36:9 -> 36:15, #8\n-Counter in file 0 39:9 -> 39:26, (#16 + #19)\n-Counter in file 0 40:8 -> 40:12, ((#16 + #19) + 0)\n-Counter in file 0 40:13 -> 42:6, #20\n-Counter in file 0 44:9 -> 44:10, (#27 + #30)\n-Counter in file 0 44:16 -> 44:29, (#20 + 0)\n-Counter in file 0 45:9 -> 45:23, #27\n-Counter in file 0 46:15 -> 46:28, ((#20 + 0) - #26)\n-Counter in file 0 47:12 -> 47:25, (((#20 + 0) - #26) - #7)\n-Counter in file 0 47:29 -> 47:42, ((((#20 + 0) - #26) - #7) - #35)\n-Counter in file 0 47:42 -> 47:43, (#35 + #36)\n-Counter in file 0 47:42 -> 47:43, (((((#20 + 0) - #26) - #7) - #35) - #36)\n-Counter in file 0 47:46 -> 47:60, #41\n-Counter in file 0 47:60 -> 47:61, (#37 + #38)\n-Counter in file 0 47:60 -> 47:61, (#41 - #38)\n-Counter in file 0 47:61 -> 49:10, #42\n-Counter in file 0 49:10 -> 49:11, #43\n-Counter in file 0 50:9 -> 50:23, #30\n-Counter in file 0 52:13 -> 54:15, #7\n-Counter in file 0 57:9 -> 57:10, (#9 + #10)\n-Counter in file 0 57:16 -> 57:29, ((#27 + #30) + 0)\n-Counter in file 0 58:9 -> 58:23, #9\n-Counter in file 0 59:15 -> 59:28, ((#27 + #30) - #31)\n-Counter in file 0 60:12 -> 60:25, (((#27 + #30) - #31) - #6)\n-Counter in file 0 60:29 -> 60:42, ((((#27 + #30) - #31) - #6) - #39)\n-Counter in file 0 60:42 -> 60:43, (#39 + #40)\n-Counter in file 0 60:42 -> 60:43, (((((#27 + #30) - #31) - #6) - #39) - #40)\n-Counter in file 0 60:46 -> 60:60, #46\n-Counter in file 0 60:60 -> 60:61, (#46 - #45)\n-Counter in file 0 60:60 -> 60:61, (#44 + #45)\n-Counter in file 0 60:61 -> 62:10, #47\n-Counter in file 0 62:10 -> 62:11, #48\n-Counter in file 0 63:9 -> 63:23, #10\n-Counter in file 0 65:9 -> 65:15, #6\n-Counter in file 0 67:1 -> 67:2, ((#9 + #10) + (((#6 + #7) + #8) + (((#2 + 0) - #3) - #5)))\n-Emitting segments for file: ../coverage/conditions.rs\n-Combined regions:\n-  4:9 -> 4:26 (count=1)\n-  5:8 -> 5:12 (count=1)\n-  5:13 -> 7:6 (count=1)\n-  10:9 -> 10:10 (count=1)\n-  10:16 -> 10:29 (count=1)\n-  11:9 -> 12:10 (count=1)\n-  13:15 -> 13:28 (count=0)\n-  14:12 -> 14:25 (count=0)\n-  14:29 -> 14:42 (count=0)\n-  14:42 -> 14:43 (count=0)\n-  14:46 -> 14:60 (count=0)\n-  14:60 -> 14:61 (count=0)\n-  14:61 -> 16:10 (count=0)\n-  16:10 -> 16:11 (count=0)\n-  17:9 -> 18:18 (count=0)\n-  20:9 -> 20:15 (count=0)\n-  23:9 -> 23:26 (count=1)\n-  24:8 -> 24:12 (count=1)\n-  24:13 -> 26:6 (count=1)\n-  28:8 -> 28:21 (count=1)\n-  29:9 -> 29:23 (count=1)\n-  30:15 -> 30:28 (count=0)\n-  31:12 -> 31:25 (count=0)\n-  31:29 -> 31:42 (count=0)\n-  31:42 -> 31:43 (count=0)\n-  31:46 -> 31:60 (count=0)\n-  31:60 -> 31:61 (count=0)\n-  31:61 -> 33:10 (count=0)\n-  33:10 -> 33:11 (count=0)\n-  34:9 -> 34:23 (count=0)\n-  36:9 -> 36:15 (count=0)\n-  39:9 -> 39:26 (count=1)\n-  40:8 -> 40:12 (count=1)\n-  40:13 -> 42:6 (count=1)\n-  44:9 -> 44:10 (count=0)\n-  44:16 -> 44:29 (count=1)\n-  45:9 -> 45:23 (count=0)\n-  46:15 -> 46:28 (count=1)\n-  47:12 -> 47:25 (count=0)\n-  47:29 -> 47:42 (count=0)\n-  47:42 -> 47:43 (count=0)\n-  47:46 -> 47:60 (count=0)\n-  47:60 -> 47:61 (count=0)\n-  47:61 -> 49:10 (count=0)\n-  49:10 -> 49:11 (count=0)\n-  50:9 -> 50:23 (count=0)\n-  52:13 -> 54:15 (count=1)\n-  57:9 -> 57:10 (count=0)\n-  57:16 -> 57:29 (count=0)\n-  58:9 -> 58:23 (count=0)\n-  59:15 -> 59:28 (count=0)\n-  60:12 -> 60:25 (count=0)\n-  60:29 -> 60:42 (count=0)\n-  60:42 -> 60:43 (count=0)\n-  60:46 -> 60:60 (count=0)\n-  60:60 -> 60:61 (count=0)\n-  60:61 -> 62:10 (count=0)\n-  62:10 -> 62:11 (count=0)\n-  63:9 -> 63:23 (count=0)\n-  65:9 -> 65:15 (count=0)\n-  67:1 -> 67:2 (count=1)\n-Segment at 4:9 (count = 1), RegionEntry\n-Segment at 4:26 (count = 0), Skipped\n-Segment at 5:8 (count = 1), RegionEntry\n-Segment at 5:12 (count = 0), Skipped\n-Segment at 5:13 (count = 1), RegionEntry\n-Segment at 7:6 (count = 0), Skipped\n-Segment at 10:9 (count = 1), RegionEntry\n-Segment at 10:10 (count = 0), Skipped\n-Segment at 10:16 (count = 1), RegionEntry\n-Segment at 10:29 (count = 0), Skipped\n-Segment at 11:9 (count = 1), RegionEntry\n-Segment at 12:10 (count = 0), Skipped\n-Segment at 13:15 (count = 0), RegionEntry\n-Segment at 13:28 (count = 0), Skipped\n-Segment at 14:12 (count = 0), RegionEntry\n-Segment at 14:25 (count = 0), Skipped\n-Segment at 14:29 (count = 0), RegionEntry\n-Segment at 14:42 (count = 0), RegionEntry\n-Segment at 14:43 (count = 0), Skipped\n-Segment at 14:46 (count = 0), RegionEntry\n-Segment at 14:60 (count = 0), RegionEntry\n-Segment at 14:61 (count = 0), RegionEntry\n-Segment at 16:10 (count = 0), RegionEntry\n-Segment at 16:11 (count = 0), Skipped\n-Segment at 17:9 (count = 0), RegionEntry\n-Segment at 18:18 (count = 0), Skipped\n-Segment at 20:9 (count = 0), RegionEntry\n-Segment at 20:15 (count = 0), Skipped\n-Segment at 23:9 (count = 1), RegionEntry\n-Segment at 23:26 (count = 0), Skipped\n-Segment at 24:8 (count = 1), RegionEntry\n-Segment at 24:12 (count = 0), Skipped\n-Segment at 24:13 (count = 1), RegionEntry\n-Segment at 26:6 (count = 0), Skipped\n-Segment at 28:8 (count = 1), RegionEntry\n-Segment at 28:21 (count = 0), Skipped\n-Segment at 29:9 (count = 1), RegionEntry\n-Segment at 29:23 (count = 0), Skipped\n-Segment at 30:15 (count = 0), RegionEntry\n-Segment at 30:28 (count = 0), Skipped\n-Segment at 31:12 (count = 0), RegionEntry\n-Segment at 31:25 (count = 0), Skipped\n-Segment at 31:29 (count = 0), RegionEntry\n-Segment at 31:42 (count = 0), RegionEntry\n-Segment at 31:43 (count = 0), Skipped\n-Segment at 31:46 (count = 0), RegionEntry\n-Segment at 31:60 (count = 0), RegionEntry\n-Segment at 31:61 (count = 0), RegionEntry\n-Segment at 33:10 (count = 0), RegionEntry\n-Segment at 33:11 (count = 0), Skipped\n-Segment at 34:9 (count = 0), RegionEntry\n-Segment at 34:23 (count = 0), Skipped\n-Segment at 36:9 (count = 0), RegionEntry\n-Segment at 36:15 (count = 0), Skipped\n-Segment at 39:9 (count = 1), RegionEntry\n-Segment at 39:26 (count = 0), Skipped\n-Segment at 40:8 (count = 1), RegionEntry\n-Segment at 40:12 (count = 0), Skipped\n-Segment at 40:13 (count = 1), RegionEntry\n-Segment at 42:6 (count = 0), Skipped\n-Segment at 44:9 (count = 0), RegionEntry\n-Segment at 44:10 (count = 0), Skipped\n-Segment at 44:16 (count = 1), RegionEntry\n-Segment at 44:29 (count = 0), Skipped\n-Segment at 45:9 (count = 0), RegionEntry\n-Segment at 45:23 (count = 0), Skipped\n-Segment at 46:15 (count = 1), RegionEntry\n-Segment at 46:28 (count = 0), Skipped\n-Segment at 47:12 (count = 0), RegionEntry\n-Segment at 47:25 (count = 0), Skipped\n-Segment at 47:29 (count = 0), RegionEntry\n-Segment at 47:42 (count = 0), RegionEntry\n-Segment at 47:43 (count = 0), Skipped\n-Segment at 47:46 (count = 0), RegionEntry\n-Segment at 47:60 (count = 0), RegionEntry\n-Segment at 47:61 (count = 0), RegionEntry\n-Segment at 49:10 (count = 0), RegionEntry\n-Segment at 49:11 (count = 0), Skipped\n-Segment at 50:9 (count = 0), RegionEntry\n-Segment at 50:23 (count = 0), Skipped\n-Segment at 52:13 (count = 1), RegionEntry\n-Segment at 54:15 (count = 0), Skipped\n-Segment at 57:9 (count = 0), RegionEntry\n-Segment at 57:10 (count = 0), Skipped\n-Segment at 57:16 (count = 0), RegionEntry\n-Segment at 57:29 (count = 0), Skipped\n-Segment at 58:9 (count = 0), RegionEntry\n-Segment at 58:23 (count = 0), Skipped\n-Segment at 59:15 (count = 0), RegionEntry\n-Segment at 59:28 (count = 0), Skipped\n-Segment at 60:12 (count = 0), RegionEntry\n-Segment at 60:25 (count = 0), Skipped\n-Segment at 60:29 (count = 0), RegionEntry\n-Segment at 60:42 (count = 0), RegionEntry\n-Segment at 60:43 (count = 0), Skipped\n-Segment at 60:46 (count = 0), RegionEntry\n-Segment at 60:60 (count = 0), RegionEntry\n-Segment at 60:61 (count = 0), RegionEntry\n-Segment at 62:10 (count = 0), RegionEntry\n-Segment at 62:11 (count = 0), Skipped\n-Segment at 63:9 (count = 0), RegionEntry\n-Segment at 63:23 (count = 0), Skipped\n-Segment at 65:9 (count = 0), RegionEntry\n-Segment at 65:15 (count = 0), Skipped\n-Segment at 67:1 (count = 1), RegionEntry\n-Segment at 67:2 (count = 0), Skipped"}, {"sha": "375025fe8bcc2fefdf4b081025bab03d608ac582", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.drop_trait.txt", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.drop_trait.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,22 +0,0 @@\n-Counter in file 0 9:24 -> 11:6, #1\n-Counter in file 0 15:9 -> 17:42, #1\n-Counter in file 0 19:8 -> 19:12, (#1 + 0)\n-Counter in file 0 20:9 -> 21:22, #2\n-Counter in file 0 27:1 -> 27:2, (#2 + 0)\n-Emitting segments for file: ../coverage/drop_trait.rs\n-Combined regions:\n-  9:24 -> 11:6 (count=2)\n-  15:9 -> 17:42 (count=1)\n-  19:8 -> 19:12 (count=1)\n-  20:9 -> 21:22 (count=1)\n-  27:1 -> 27:2 (count=1)\n-Segment at 9:24 (count = 2), RegionEntry\n-Segment at 11:6 (count = 0), Skipped\n-Segment at 15:9 (count = 1), RegionEntry\n-Segment at 17:42 (count = 0), Skipped\n-Segment at 19:8 (count = 1), RegionEntry\n-Segment at 19:12 (count = 0), Skipped\n-Segment at 20:9 (count = 1), RegionEntry\n-Segment at 21:22 (count = 0), Skipped\n-Segment at 27:1 (count = 1), RegionEntry\n-Segment at 27:2 (count = 0), Skipped"}, {"sha": "013a69ed3983a35ce18506d14124930ac71b9599", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.generics.txt", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.generics.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,48 +0,0 @@\n-Counter in file 0 17:24 -> 19:6, #1\n-Counter in file 0 17:24 -> 19:6, #1\n-Counter in file 0 23:9 -> 28:28, #1\n-Counter in file 0 30:8 -> 30:12, (#1 + 0)\n-Counter in file 0 31:9 -> 32:22, #2\n-Counter in file 0 38:1 -> 38:2, (#2 + 0)\n-Counter in file 0 10:49 -> 12:6, #1\n-Counter in file 0 10:49 -> 12:6, #1\n-Emitting segments for file: ../coverage/generics.rs\n-Combined regions:\n-  10:49 -> 12:6 (count=3)\n-  17:24 -> 19:6 (count=2)\n-  23:9 -> 28:28 (count=1)\n-  30:8 -> 30:12 (count=1)\n-  31:9 -> 32:22 (count=1)\n-  38:1 -> 38:2 (count=1)\n-Segment at 10:49 (count = 3), RegionEntry\n-Segment at 12:6 (count = 0), Skipped\n-Segment at 17:24 (count = 2), RegionEntry\n-Segment at 19:6 (count = 0), Skipped\n-Segment at 23:9 (count = 1), RegionEntry\n-Segment at 28:28 (count = 0), Skipped\n-Segment at 30:8 (count = 1), RegionEntry\n-Segment at 30:12 (count = 0), Skipped\n-Segment at 31:9 (count = 1), RegionEntry\n-Segment at 32:22 (count = 0), Skipped\n-Segment at 38:1 (count = 1), RegionEntry\n-Segment at 38:2 (count = 0), Skipped\n-Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworkdE12set_strengthB2_\n-Combined regions:\n-  10:49 -> 12:6 (count=2)\n-Segment at 10:49 (count = 2), RegionEntry\n-Segment at 12:6 (count = 0), Skipped\n-Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworklE12set_strengthB2_\n-Combined regions:\n-  10:49 -> 12:6 (count=1)\n-Segment at 10:49 (count = 1), RegionEntry\n-Segment at 12:6 (count = 0), Skipped\n-Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworklENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n-Combined regions:\n-  17:24 -> 19:6 (count=1)\n-Segment at 17:24 (count = 1), RegionEntry\n-Segment at 19:6 (count = 0), Skipped\n-Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworkdENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n-Combined regions:\n-  17:24 -> 19:6 (count=1)\n-Segment at 17:24 (count = 1), RegionEntry\n-Segment at 19:6 (count = 0), Skipped"}, {"sha": "65cd6481af4cc86881793d6f02c081e095ae14ee", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.inner_items.txt", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,60 +0,0 @@\n-Counter in file 0 19:13 -> 19:18, #1\n-Counter in file 0 20:13 -> 20:14, #2\n-Counter in file 0 20:17 -> 20:22, (#1 + 0)\n-Counter in file 0 21:9 -> 22:6, (#2 + 0)\n-Counter in file 0 7:9 -> 9:26, #1\n-Counter in file 0 10:8 -> 10:15, (#1 + 0)\n-Counter in file 0 10:16 -> 12:6, #2\n-Counter in file 0 12:6 -> 12:7, (#1 - #2)\n-Counter in file 0 48:8 -> 48:15, (#2 + (#1 - #2))\n-Counter in file 0 48:16 -> 50:6, #3\n-Counter in file 0 50:6 -> 50:7, ((#2 + (#1 - #2)) - #3)\n-Counter in file 0 52:9 -> 57:2, (#3 + ((#2 + (#1 - #2)) - #3))\n-Counter in file 0 33:42 -> 36:10, #1\n-Counter in file 0 41:37 -> 41:41, #1\n-Counter in file 0 42:13 -> 43:10, #2\n-Emitting segments for file: ../coverage/inner_items.rs\n-Combined regions:\n-  7:9 -> 9:26 (count=1)\n-  10:8 -> 10:15 (count=1)\n-  10:16 -> 12:6 (count=1)\n-  12:6 -> 12:7 (count=0)\n-  19:13 -> 19:18 (count=3)\n-  20:13 -> 20:14 (count=3)\n-  20:17 -> 20:22 (count=3)\n-  21:9 -> 22:6 (count=3)\n-  33:42 -> 36:10 (count=1)\n-  41:37 -> 41:41 (count=1)\n-  42:13 -> 43:10 (count=1)\n-  48:8 -> 48:15 (count=1)\n-  48:16 -> 50:6 (count=1)\n-  50:6 -> 50:7 (count=0)\n-  52:9 -> 57:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:26 (count = 0), Skipped\n-Segment at 10:8 (count = 1), RegionEntry\n-Segment at 10:15 (count = 0), Skipped\n-Segment at 10:16 (count = 1), RegionEntry\n-Segment at 12:6 (count = 0), RegionEntry\n-Segment at 12:7 (count = 0), Skipped\n-Segment at 19:13 (count = 3), RegionEntry\n-Segment at 19:18 (count = 0), Skipped\n-Segment at 20:13 (count = 3), RegionEntry\n-Segment at 20:14 (count = 0), Skipped\n-Segment at 20:17 (count = 3), RegionEntry\n-Segment at 20:22 (count = 0), Skipped\n-Segment at 21:9 (count = 3), RegionEntry\n-Segment at 22:6 (count = 0), Skipped\n-Segment at 33:42 (count = 1), RegionEntry\n-Segment at 36:10 (count = 0), Skipped\n-Segment at 41:37 (count = 1), RegionEntry\n-Segment at 41:41 (count = 0), Skipped\n-Segment at 42:13 (count = 1), RegionEntry\n-Segment at 43:10 (count = 0), Skipped\n-Segment at 48:8 (count = 1), RegionEntry\n-Segment at 48:15 (count = 0), Skipped\n-Segment at 48:16 (count = 1), RegionEntry\n-Segment at 50:6 (count = 0), RegionEntry\n-Segment at 50:7 (count = 0), Skipped\n-Segment at 52:9 (count = 1), RegionEntry\n-Segment at 57:2 (count = 0), Skipped"}, {"sha": "8e56d79d9d2aa1af5d148cd416b7129f08e2388c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.lazy_boolean.txt", "status": "removed", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.lazy_boolean.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,131 +0,0 @@\n-Counter in file 0 7:9 -> 9:42, #1\n-Counter in file 0 10:8 -> 10:15, (#1 + 0)\n-Counter in file 0 10:16 -> 14:6, #2\n-Counter in file 0 14:6 -> 14:7, (#1 - #2)\n-Counter in file 0 16:9 -> 16:17, ((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4))\n-Counter in file 0 18:13 -> 18:18, (#2 + (#1 - #2))\n-Counter in file 0 20:13 -> 20:18, ((#2 + (#1 - #2)) - #3)\n-Counter in file 0 20:18 -> 20:19, (#3 + #4)\n-Counter in file 0 20:18 -> 20:19, (((#2 + (#1 - #2)) - #3) - #4)\n-Counter in file 0 23:9 -> 23:17, ((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6))\n-Counter in file 0 25:13 -> 25:18, (((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) + 0)\n-Counter in file 0 27:13 -> 27:18, (((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5)\n-Counter in file 0 27:18 -> 27:19, (#5 + #6)\n-Counter in file 0 27:18 -> 27:19, ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)\n-Counter in file 0 29:9 -> 29:17, ((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8))\n-Counter in file 0 29:20 -> 29:25, (((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) + 0)\n-Counter in file 0 29:29 -> 29:34, #7\n-Counter in file 0 29:34 -> 29:35, ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)\n-Counter in file 0 29:34 -> 29:35, (#7 - #8)\n-Counter in file 0 30:9 -> 30:17, ((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10))\n-Counter in file 0 30:20 -> 30:25, (((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) + 0)\n-Counter in file 0 30:29 -> 30:34, #9\n-Counter in file 0 30:34 -> 30:35, ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)\n-Counter in file 0 30:34 -> 30:35, (#9 - #10)\n-Counter in file 0 33:9 -> 34:16, (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) + 0)\n-Counter in file 0 35:5 -> 38:6, #11\n-Counter in file 0 38:6 -> 38:7, (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)\n-Counter in file 0 41:9 -> 41:16, (#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11))\n-Counter in file 0 42:5 -> 45:6, #12\n-Counter in file 0 47:5 -> 50:6, ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)\n-Counter in file 0 52:8 -> 52:16, (#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12))\n-Counter in file 0 52:17 -> 54:6, #13\n-Counter in file 0 54:6 -> 54:7, ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13)\n-Counter in file 0 56:8 -> 56:15, (#13 + ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13))\n-Counter in file 0 56:16 -> 58:6, #14\n-Counter in file 0 58:12 -> 60:6, ((#13 + ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13)) - #14)\n-Counter in file 0 61:1 -> 61:2, (#14 + ((#13 + ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13)) - #14))\n-Emitting segments for file: ../coverage/lazy_boolean.rs\n-Combined regions:\n-  7:9 -> 9:42 (count=1)\n-  10:8 -> 10:15 (count=1)\n-  10:16 -> 14:6 (count=1)\n-  14:6 -> 14:7 (count=0)\n-  16:9 -> 16:17 (count=1)\n-  18:13 -> 18:18 (count=1)\n-  20:13 -> 20:18 (count=0)\n-  20:18 -> 20:19 (count=1)\n-  23:9 -> 23:17 (count=1)\n-  25:13 -> 25:18 (count=1)\n-  27:13 -> 27:18 (count=1)\n-  27:18 -> 27:19 (count=1)\n-  29:9 -> 29:17 (count=1)\n-  29:20 -> 29:25 (count=1)\n-  29:29 -> 29:34 (count=1)\n-  29:34 -> 29:35 (count=1)\n-  30:9 -> 30:17 (count=1)\n-  30:20 -> 30:25 (count=1)\n-  30:29 -> 30:34 (count=0)\n-  30:34 -> 30:35 (count=1)\n-  33:9 -> 34:16 (count=1)\n-  35:5 -> 38:6 (count=0)\n-  38:6 -> 38:7 (count=1)\n-  41:9 -> 41:16 (count=1)\n-  42:5 -> 45:6 (count=1)\n-  47:5 -> 50:6 (count=0)\n-  52:8 -> 52:16 (count=1)\n-  52:17 -> 54:6 (count=0)\n-  54:6 -> 54:7 (count=1)\n-  56:8 -> 56:15 (count=1)\n-  56:16 -> 58:6 (count=1)\n-  58:12 -> 60:6 (count=0)\n-  61:1 -> 61:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:42 (count = 0), Skipped\n-Segment at 10:8 (count = 1), RegionEntry\n-Segment at 10:15 (count = 0), Skipped\n-Segment at 10:16 (count = 1), RegionEntry\n-Segment at 14:6 (count = 0), RegionEntry\n-Segment at 14:7 (count = 0), Skipped\n-Segment at 16:9 (count = 1), RegionEntry\n-Segment at 16:17 (count = 0), Skipped\n-Segment at 18:13 (count = 1), RegionEntry\n-Segment at 18:18 (count = 0), Skipped\n-Segment at 20:13 (count = 0), RegionEntry\n-Segment at 20:18 (count = 1), RegionEntry\n-Segment at 20:19 (count = 0), Skipped\n-Segment at 23:9 (count = 1), RegionEntry\n-Segment at 23:17 (count = 0), Skipped\n-Segment at 25:13 (count = 1), RegionEntry\n-Segment at 25:18 (count = 0), Skipped\n-Segment at 27:13 (count = 1), RegionEntry\n-Segment at 27:18 (count = 1), RegionEntry\n-Segment at 27:19 (count = 0), Skipped\n-Segment at 29:9 (count = 1), RegionEntry\n-Segment at 29:17 (count = 0), Skipped\n-Segment at 29:20 (count = 1), RegionEntry\n-Segment at 29:25 (count = 0), Skipped\n-Segment at 29:29 (count = 1), RegionEntry\n-Segment at 29:34 (count = 1), RegionEntry\n-Segment at 29:35 (count = 0), Skipped\n-Segment at 30:9 (count = 1), RegionEntry\n-Segment at 30:17 (count = 0), Skipped\n-Segment at 30:20 (count = 1), RegionEntry\n-Segment at 30:25 (count = 0), Skipped\n-Segment at 30:29 (count = 0), RegionEntry\n-Segment at 30:34 (count = 1), RegionEntry\n-Segment at 30:35 (count = 0), Skipped\n-Segment at 33:9 (count = 1), RegionEntry\n-Segment at 34:16 (count = 0), Skipped\n-Segment at 35:5 (count = 0), RegionEntry\n-Segment at 38:6 (count = 1), RegionEntry\n-Segment at 38:7 (count = 0), Skipped\n-Segment at 41:9 (count = 1), RegionEntry\n-Segment at 41:16 (count = 0), Skipped\n-Segment at 42:5 (count = 1), RegionEntry\n-Segment at 45:6 (count = 0), Skipped\n-Segment at 47:5 (count = 0), RegionEntry\n-Segment at 50:6 (count = 0), Skipped\n-Segment at 52:8 (count = 1), RegionEntry\n-Segment at 52:16 (count = 0), Skipped\n-Segment at 52:17 (count = 0), RegionEntry\n-Segment at 54:6 (count = 1), RegionEntry\n-Segment at 54:7 (count = 0), Skipped\n-Segment at 56:8 (count = 1), RegionEntry\n-Segment at 56:15 (count = 0), Skipped\n-Segment at 56:16 (count = 1), RegionEntry\n-Segment at 58:6 (count = 0), Skipped\n-Segment at 58:12 (count = 0), RegionEntry\n-Segment at 60:6 (count = 0), Skipped\n-Segment at 61:1 (count = 1), RegionEntry\n-Segment at 61:2 (count = 0), Skipped"}, {"sha": "a6144b8072aceb9c512342dd35747a3a8639129e", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.loop_break_value.txt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loop_break_value.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,6 +0,0 @@\n-Counter in file 0 3:11 -> 13:2, #1\n-Emitting segments for file: ../coverage/loop_break_value.rs\n-Combined regions:\n-  3:11 -> 13:2 (count=1)\n-Segment at 3:11 (count = 1), RegionEntry\n-Segment at 13:2 (count = 0), Skipped"}, {"sha": "d8af6998964cf5c60323e20f09bf5f4685033815", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.loops_branches.txt", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loops_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loops_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loops_branches.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,37 +0,0 @@\n-Counter in file 0 10:12 -> 10:16, #1\n-Counter in file 0 11:16 -> 11:21, #2\n-Counter in file 0 14:14 -> 14:15, (#2 - #5)\n-Counter in file 0 15:13 -> 15:31, (0 + (#2 - #5))\n-Counter in file 0 15:31 -> 15:32, #4\n-Counter in file 0 17:10 -> 17:11, #3\n-Counter in file 0 18:9 -> 18:15, (#3 + 0)\n-Counter in file 0 19:5 -> 19:6, (#4 + (#3 + 0))\n-Counter in file 0 22:11 -> 25:2, #1\n-Emitting segments for file: ../coverage/loops_branches.rs\n-Combined regions:\n-  10:12 -> 10:16 (count=1)\n-  11:16 -> 11:21 (count=1)\n-  14:14 -> 14:15 (count=1)\n-  15:13 -> 15:31 (count=1)\n-  15:31 -> 15:32 (count=0)\n-  17:10 -> 17:11 (count=1)\n-  18:9 -> 18:15 (count=1)\n-  19:5 -> 19:6 (count=1)\n-  22:11 -> 25:2 (count=1)\n-Segment at 10:12 (count = 1), RegionEntry\n-Segment at 10:16 (count = 0), Skipped\n-Segment at 11:16 (count = 1), RegionEntry\n-Segment at 11:21 (count = 0), Skipped\n-Segment at 14:14 (count = 1), RegionEntry\n-Segment at 14:15 (count = 0), Skipped\n-Segment at 15:13 (count = 1), RegionEntry\n-Segment at 15:31 (count = 0), RegionEntry\n-Segment at 15:32 (count = 0), Skipped\n-Segment at 17:10 (count = 1), RegionEntry\n-Segment at 17:11 (count = 0), Skipped\n-Segment at 18:9 (count = 1), RegionEntry\n-Segment at 18:15 (count = 0), Skipped\n-Segment at 19:5 (count = 1), RegionEntry\n-Segment at 19:6 (count = 0), Skipped\n-Segment at 22:11 (count = 1), RegionEntry\n-Segment at 25:2 (count = 0), Skipped"}, {"sha": "f503007353319e2738be05f89f4fa203e4ca8806", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.nested_loops.txt", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,73 +0,0 @@\n-Counter in file 0 2:9 -> 3:27, #1\n-Counter in file 0 5:19 -> 5:32, (#1 + #2)\n-Counter in file 0 6:13 -> 7:24, ((#1 + #2) - #3)\n-Counter in file 0 8:13 -> 8:14, ((((#1 + #2) - #3) + (#5 + #6)) - #7)\n-Counter in file 0 8:18 -> 8:23, (((#1 + #2) - #3) + (#5 + #6))\n-Counter in file 0 9:16 -> 9:22, (((((#1 + #2) - #3) + (#5 + #6)) - #7) + 0)\n-Counter in file 0 10:17 -> 10:22, #8\n-Counter in file 0 12:13 -> 12:19, #9\n-Counter in file 0 13:13 -> 13:19, #10\n-Counter in file 0 14:16 -> 14:22, (#10 + 0)\n-Counter in file 0 15:17 -> 16:27, #11\n-Counter in file 0 17:21 -> 17:33, #4\n-Counter in file 0 19:21 -> 21:14, #5\n-Counter in file 0 21:14 -> 21:15, #6\n-Counter in file 0 22:10 -> 22:11, (#5 + #6)\n-Counter in file 0 23:9 -> 23:23, #2\n-Counter in file 0 24:6 -> 24:7, #3\n-Counter in file 0 25:1 -> 25:2, (#4 + #3)\n-Emitting segments for file: ../coverage/nested_loops.rs\n-Combined regions:\n-  2:9 -> 3:27 (count=1)\n-  5:19 -> 5:32 (count=1)\n-  6:13 -> 7:24 (count=1)\n-  8:13 -> 8:14 (count=3)\n-  8:18 -> 8:23 (count=3)\n-  9:16 -> 9:22 (count=3)\n-  10:17 -> 10:22 (count=0)\n-  12:13 -> 12:19 (count=3)\n-  13:13 -> 13:19 (count=3)\n-  14:16 -> 14:22 (count=3)\n-  15:17 -> 16:27 (count=1)\n-  17:21 -> 17:33 (count=1)\n-  19:21 -> 21:14 (count=0)\n-  21:14 -> 21:15 (count=2)\n-  22:10 -> 22:11 (count=2)\n-  23:9 -> 23:23 (count=0)\n-  24:6 -> 24:7 (count=0)\n-  25:1 -> 25:2 (count=1)\n-Segment at 2:9 (count = 1), RegionEntry\n-Segment at 3:27 (count = 0), Skipped\n-Segment at 5:19 (count = 1), RegionEntry\n-Segment at 5:32 (count = 0), Skipped\n-Segment at 6:13 (count = 1), RegionEntry\n-Segment at 7:24 (count = 0), Skipped\n-Segment at 8:13 (count = 3), RegionEntry\n-Segment at 8:14 (count = 0), Skipped\n-Segment at 8:18 (count = 3), RegionEntry\n-Segment at 8:23 (count = 0), Skipped\n-Segment at 9:16 (count = 3), RegionEntry\n-Segment at 9:22 (count = 0), Skipped\n-Segment at 10:17 (count = 0), RegionEntry\n-Segment at 10:22 (count = 0), Skipped\n-Segment at 12:13 (count = 3), RegionEntry\n-Segment at 12:19 (count = 0), Skipped\n-Segment at 13:13 (count = 3), RegionEntry\n-Segment at 13:19 (count = 0), Skipped\n-Segment at 14:16 (count = 3), RegionEntry\n-Segment at 14:22 (count = 0), Skipped\n-Segment at 15:17 (count = 1), RegionEntry\n-Segment at 16:27 (count = 0), Skipped\n-Segment at 17:21 (count = 1), RegionEntry\n-Segment at 17:33 (count = 0), Skipped\n-Segment at 19:21 (count = 0), RegionEntry\n-Segment at 21:14 (count = 2), RegionEntry\n-Segment at 21:15 (count = 0), Skipped\n-Segment at 22:10 (count = 2), RegionEntry\n-Segment at 22:11 (count = 0), Skipped\n-Segment at 23:9 (count = 0), RegionEntry\n-Segment at 23:23 (count = 0), Skipped\n-Segment at 24:6 (count = 0), RegionEntry\n-Segment at 24:7 (count = 0), Skipped\n-Segment at 25:1 (count = 1), RegionEntry\n-Segment at 25:2 (count = 0), Skipped"}, {"sha": "2b9285202f97f533432230f17e7d17389563773d", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.partial_eq.txt", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,53 +0,0 @@\n-Counter in file 0 4:32 -> 4:33, (#3 + (#1 + #2))\n-Counter in file 0 4:48 -> 4:49, ((#1 + #2) + ((#3 + #4) + ((#5 + #6) + #7)))\n-Counter in file 0 21:11 -> 26:2, #1\n-Counter in file 0 8:5 -> 8:17, #1\n-Counter in file 0 8:5 -> 8:17, #1\n-Counter in file 0 4:39 -> 4:40, #1\n-Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 4:39 -> 4:40, #1\n-Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 8:5 -> 8:17, #1\n-Counter in file 0 4:32 -> 4:33, ((#4 + #5) + #6)\n-Counter in file 0 4:53 -> 4:54, (#1 + (#2 + (#3 + #4)))\n-Counter in file 0 13:9 -> 18:6, #1\n-Counter in file 0 4:39 -> 4:40, #1\n-Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 7:5 -> 7:6, #1\n-Counter in file 0 4:10 -> 4:15, #1\n-Counter in file 0 4:35 -> 4:37, #1\n-Counter in file 0 7:5 -> 7:6, #1\n-Counter in file 0 7:5 -> 7:6, #1\n-Counter in file 0 4:17 -> 4:22, #1\n-Counter in file 0 8:5 -> 8:17, #1\n-Counter in file 0 4:39 -> 4:40, #1\n-Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 7:5 -> 7:6, #1\n-Emitting segments for file: ../coverage/partial_eq.rs\n-Combined regions:\n-  4:17 -> 4:22 (count=2)\n-  4:39 -> 4:40 (count=1)\n-  4:48 -> 4:49 (count=1)\n-  7:5 -> 7:6 (count=1)\n-  13:9 -> 18:6 (count=2)\n-  21:11 -> 26:2 (count=1)\n-Segment at 4:17 (count = 2), RegionEntry\n-Segment at 4:22 (count = 0), Skipped\n-Segment at 4:39 (count = 1), RegionEntry\n-Segment at 4:40 (count = 0), Skipped\n-Segment at 4:48 (count = 1), RegionEntry\n-Segment at 4:49 (count = 0), Skipped\n-Segment at 7:5 (count = 1), RegionEntry\n-Segment at 7:6 (count = 0), Skipped\n-Segment at 13:9 (count = 2), RegionEntry\n-Segment at 18:6 (count = 0), Skipped\n-Segment at 21:11 (count = 1), RegionEntry\n-Segment at 26:2 (count = 0), Skipped\n-Emitting segments for function: _RNvXs0_Cs4fqI2P2rA04_10partial_eqNtB5_7VersionNtNtCs7f2nZg1zwMz_4core3cmp10PartialOrd2ltB5_\n-Combined regions:\n-  4:39 -> 4:40 (count=1)\n-  4:48 -> 4:49 (count=1)\n-Segment at 4:39 (count = 1), RegionEntry\n-Segment at 4:40 (count = 0), Skipped\n-Segment at 4:48 (count = 1), RegionEntry\n-Segment at 4:49 (count = 0), Skipped"}, {"sha": "255173e5534d194a573bdf2667d8ccf23c65a4cd", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.simple_loop.txt", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,37 +0,0 @@\n-Counter in file 0 7:9 -> 9:26, #1\n-Counter in file 0 12:9 -> 12:16, (#1 + 0)\n-Counter in file 0 13:5 -> 18:6, #2\n-Counter in file 0 18:6 -> 18:7, (#1 - #2)\n-Counter in file 0 23:13 -> 25:14, ((#2 + (#1 - #2)) + #3)\n-Counter in file 0 27:13 -> 27:18, #4\n-Counter in file 0 30:9 -> 32:10, #3\n-Counter in file 0 34:6 -> 34:7, (#2 + (#1 - #2))\n-Counter in file 0 35:1 -> 35:2, (#4 + 0)\n-Emitting segments for file: ../coverage/simple_loop.rs\n-Combined regions:\n-  7:9 -> 9:26 (count=1)\n-  12:9 -> 12:16 (count=1)\n-  13:5 -> 18:6 (count=1)\n-  18:6 -> 18:7 (count=0)\n-  23:13 -> 25:14 (count=11)\n-  27:13 -> 27:18 (count=1)\n-  30:9 -> 32:10 (count=10)\n-  34:6 -> 34:7 (count=1)\n-  35:1 -> 35:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:26 (count = 0), Skipped\n-Segment at 12:9 (count = 1), RegionEntry\n-Segment at 12:16 (count = 0), Skipped\n-Segment at 13:5 (count = 1), RegionEntry\n-Segment at 18:6 (count = 0), RegionEntry\n-Segment at 18:7 (count = 0), Skipped\n-Segment at 23:13 (count = 11), RegionEntry\n-Segment at 25:14 (count = 0), Skipped\n-Segment at 27:13 (count = 1), RegionEntry\n-Segment at 27:18 (count = 0), Skipped\n-Segment at 30:9 (count = 10), RegionEntry\n-Segment at 32:10 (count = 0), Skipped\n-Segment at 34:6 (count = 1), RegionEntry\n-Segment at 34:7 (count = 0), Skipped\n-Segment at 35:1 (count = 1), RegionEntry\n-Segment at 35:2 (count = 0), Skipped"}, {"sha": "1682a379bc0ff0c60e5c378cfcead525c38c4886", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.simple_match.txt", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_match.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,57 +0,0 @@\n-Counter in file 0 7:9 -> 9:26, #1\n-Counter in file 0 10:8 -> 10:15, (#1 + 0)\n-Counter in file 0 10:16 -> 12:6, #2\n-Counter in file 0 12:6 -> 12:7, (#1 - #2)\n-Counter in file 0 15:9 -> 15:10, (((#2 + (#1 - #2)) + (#3 + #4)) - #5)\n-Counter in file 0 17:9 -> 17:13, ((#2 + (#1 - #2)) + (#3 + #4))\n-Counter in file 0 22:13 -> 22:22, ((((#2 + (#1 - #2)) + (#3 + #4)) - #5) + 0)\n-Counter in file 0 24:13 -> 24:14, #3\n-Counter in file 0 26:17 -> 28:18, ((((#2 + (#1 - #2)) + (#3 + #4)) - #5) + 0)\n-Counter in file 0 28:18 -> 28:19, ((((#2 + (#1 - #2)) + (#3 + #4)) - #5) - #3)\n-Counter in file 0 30:13 -> 37:14, (#3 + 0)\n-Counter in file 0 40:13 -> 40:15, #4\n-Counter in file 0 42:6 -> 42:7, (#2 + (#1 - #2))\n-Counter in file 0 42:6 -> 42:7, (#3 + #4)\n-Counter in file 0 43:1 -> 43:2, #5\n-Emitting segments for file: ../coverage/simple_match.rs\n-Combined regions:\n-  7:9 -> 9:26 (count=1)\n-  10:8 -> 10:15 (count=1)\n-  10:16 -> 12:6 (count=1)\n-  12:6 -> 12:7 (count=0)\n-  15:9 -> 15:10 (count=2)\n-  17:9 -> 17:13 (count=3)\n-  22:13 -> 22:22 (count=2)\n-  24:13 -> 24:14 (count=1)\n-  26:17 -> 28:18 (count=2)\n-  28:18 -> 28:19 (count=1)\n-  30:13 -> 37:14 (count=1)\n-  40:13 -> 40:15 (count=1)\n-  42:6 -> 42:7 (count=3)\n-  43:1 -> 43:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:26 (count = 0), Skipped\n-Segment at 10:8 (count = 1), RegionEntry\n-Segment at 10:15 (count = 0), Skipped\n-Segment at 10:16 (count = 1), RegionEntry\n-Segment at 12:6 (count = 0), RegionEntry\n-Segment at 12:7 (count = 0), Skipped\n-Segment at 15:9 (count = 2), RegionEntry\n-Segment at 15:10 (count = 0), Skipped\n-Segment at 17:9 (count = 3), RegionEntry\n-Segment at 17:13 (count = 0), Skipped\n-Segment at 22:13 (count = 2), RegionEntry\n-Segment at 22:22 (count = 0), Skipped\n-Segment at 24:13 (count = 1), RegionEntry\n-Segment at 24:14 (count = 0), Skipped\n-Segment at 26:17 (count = 2), RegionEntry\n-Segment at 28:18 (count = 1), RegionEntry\n-Segment at 28:19 (count = 0), Skipped\n-Segment at 30:13 (count = 1), RegionEntry\n-Segment at 37:14 (count = 0), Skipped\n-Segment at 40:13 (count = 1), RegionEntry\n-Segment at 40:15 (count = 0), Skipped\n-Segment at 42:6 (count = 3), RegionEntry\n-Segment at 42:7 (count = 0), Skipped\n-Segment at 43:1 (count = 1), RegionEntry\n-Segment at 43:2 (count = 0), Skipped"}, {"sha": "5887658fe67a2fc3ffe04be831fefc25e062c73f", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.tight_inf_loop.txt", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.tight_inf_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.tight_inf_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.tight_inf_loop.txt?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,10 +0,0 @@\n-Counter in file 0 2:8 -> 2:13, #1\n-Counter in file 0 5:1 -> 5:2, (#1 - #2)\n-Emitting segments for file: ../coverage/tight_inf_loop.rs\n-Combined regions:\n-  2:8 -> 2:13 (count=1)\n-  5:1 -> 5:2 (count=1)\n-Segment at 2:8 (count = 1), RegionEntry\n-Segment at 2:13 (count = 0), Skipped\n-Segment at 5:1 (count = 1), RegionEntry\n-Segment at 5:2 (count = 0), Skipped"}, {"sha": "302f09ae422bc0085382338c13a83b4683a5d4cf", "filename": "src/test/run-make-fulldeps/coverage-reports/Makefile", "status": "renamed", "additions": 65, "deletions": 11, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -4,13 +4,9 @@\n # FIXME(mati865): MinGW GCC miscompiles compiler-rt profiling library but with Clang it works\n # properly. Since we only have GCC on the CI ignore the test for now.\n \n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../coverage/coverage_tools.mk for more information.\n-\n -include ../coverage/coverage_tools.mk\n \n-BASEDIR=../coverage-reports-base\n+BASEDIR=../coverage-reports\n SOURCEDIR=../coverage\n \n # The `llvm-cov show` flag `--debug`, used to generate the `counters` output files, is only enabled\n@@ -26,6 +22,43 @@ ifeq ($(LLVM_COV_DEBUG), 1)\n DEBUG_FLAG=--debug\n endif\n \n+# FIXME(richkadel): I'm adding `--ignore-filename-regex=` line(s) for specific test(s) that produce\n+# `llvm-cov` results for multiple files (for example `uses_crate.rs` and `used_crate/mod.rs`) as a\n+# workaround for two problems causing tests to fail on Windows:\n+#\n+# 1. When multiple files appear in the `llvm-cov show` results, each file's coverage results can\n+#    appear in different a different order. Whether this is random or, somehow, platform-specific,\n+#    the Windows output flips the order of the files, compared to Linux. In the `uses_crate.rs`\n+#    test, the only test-unique (interesting) results we care about are the results for only one\n+#    of the two files, `mod/uses_crate.rs`, so the workaround is to ignore all but this one file.\n+#    In the future, we may want a more sophisticated solution that splits apart `llvm-cov show`\n+#    results into separate results files for each result (taking care not to create new file\n+#    paths that might be too long for Windows MAX_PATH limits when creating these new sub-results,\n+#    as well).\n+# 2. When multiple files appear in the `llvm-cov show` results, the results for each file are\n+#    prefixed with their filename, including platform-specific path separators (`\\` for Windows,\n+#    and `/` everywhere else). This could be filtered or normalized of course, but by ignoring\n+#    coverage results for all but one of the file, the filenames are no longer included anyway.\n+#    If this changes (if/when we decide to support `llvm-cov show` results for multiple files),\n+#    the file path separator differences may need to be addressed.\n+#\n+# Since this is only a workaround, I decided to implement the override by adding an option for\n+# each file to be ignored, using a `--ignore-filename-regex=` entry for each one, rather than\n+# implement some more sophisticated solution with a new custom test directive in the test file\n+# itself (similar to `expect-exit-status`) because that would add a lot of complexity and still\n+# be a workaround, with the same result, with no benefit.\n+#\n+# Yes these `--ignore-filename-regex=` options are included in all invocations of `llvm-cov show`\n+# for now, but it is effectively ignored for all tests that don't include this file anyway.\n+#\n+# Note that it's also possible the `_counters.<test>.txt` and `<test>.json` files may order\n+# results from multiple files inconsistently, which might also have to be accomodated if and when\n+# we allow `llvm-cov` to produce results for multiple files. (The path separators appear to be\n+# normalized to `/` in those files, thankfully.) But since we are ignoring results for all but one\n+# file, this workaround addresses those potential issues as well.\n+LLVM_COV_IGNORE_FILES=\\\n+\t--ignore-filename-regex=uses_crate.rs\n+\n # When generating `expected_*` results (using `x.py test --bless`), the `--debug` flag is forced.\n # If assertions are disabled, the command will fail with an error, rather than attempt to generate\n # only partial results.\n@@ -34,7 +67,7 @@ DEBUG_FLAG=--debug\n endif\n \n ifeq ($(LLVM_VERSION_11_PLUS),true)\n-all: $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n+all: $(patsubst $(SOURCEDIR)/lib/%.rs,%,$(wildcard $(SOURCEDIR)/lib/*.rs)) $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n else\n $(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n all:\n@@ -51,11 +84,17 @@ endif\n \n -include clear_expected_if_blessed\n \n+%: $(SOURCEDIR)/lib/%.rs\n+\t# Compile the test library with coverage instrumentation\n+\t$(RUSTC) $(SOURCEDIR)/lib/$@.rs \\\n+\t\t\t$$( grep -q '^\\/\\/ require-rust-edition-2018' $(SOURCEDIR)/lib/$@.rs && echo \"--edition=2018\" ) \\\n+\t\t\t--crate-type rlib -Zinstrument-coverage\n+\n %: $(SOURCEDIR)/%.rs\n-\t# Compile the test program with coverage instrumentation and generate relevant MIR.\n+\t# Compile the test program with coverage instrumentation\n \t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n-\t\t\t-Zinstrument-coverage \\\n-\t\t\t-Clink-dead-code=$(LINK_DEAD_CODE)\n+\t\t\t$$( grep -q '^\\/\\/ require-rust-edition-2018' $(SOURCEDIR)/$@.rs && echo \"--edition=2018\" ) \\\n+\t\t\t-L \"$(TMPDIR)\" -Zinstrument-coverage\n \n \t# Run it in order to generate some profiling data,\n \t# with `LLVM_PROFILE_FILE=<profdata_file>` environment variable set to\n@@ -78,6 +117,7 @@ endif\n \t# Generate a coverage report using `llvm-cov show`.\n \t\"$(LLVM_BIN_DIR)\"/llvm-cov show \\\n \t\t\t$(DEBUG_FLAG) \\\n+\t\t\t$(LLVM_COV_IGNORE_FILES) \\\n \t\t\t--Xdemangler=\"$(RUST_DEMANGLER)\" \\\n \t\t\t--show-line-counts-or-regions \\\n \t\t\t--instr-profile=\"$(TMPDIR)\"/$@.profdata \\\n@@ -106,8 +146,17 @@ else\n \t# Compare the show coverage output (`--bless` refreshes `typical` files)\n \t# Note `llvm-cov show` output for some programs can vary, but can be ignored\n \t# by inserting `// ignore-llvm-cov-show-diffs` at the top of the source file.\n-\n-\t$(DIFF) expected_show_coverage.$@.txt \"$(TMPDIR)\"/actual_show_coverage.$@.txt || \\\n+\t#\n+\t# FIXME(richkadel): It looks like most past variations seem to have been mitigated. None of the\n+\t# Rust test source samples have the `// ignore-llvm-cov-show-diffs` anymore. The main variation\n+\t# I had seen (and is still present in the new `coverage/lib/used_crate.rs`) is the `llvm-cov show`\n+\t# reporting of multiple instantiations of a generic function with different type substitutions.\n+\t# For some reason, `llvm-cov show` can report these in a non-deterministic order, breaking the\n+\t# `diff` comparision. I was able to work around the problem with `diff --ignore-matching-lines=RE`\n+\t# to ignore each line prefixing each generic instantiation coverage code region.\n+\n+\t$(DIFF) --ignore-matching-lines='::<.*>.*:$$' \\\n+\t\texpected_show_coverage.$@.txt \"$(TMPDIR)\"/actual_show_coverage.$@.txt || \\\n \t\t( grep -q '^\\/\\/ ignore-llvm-cov-show-diffs' $(SOURCEDIR)/$@.rs && \\\n \t\t\t>&2 echo 'diff failed, but suppressed with `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs' \\\n \t\t) || \\\n@@ -135,11 +184,16 @@ endif\n \t# Generate a coverage report in JSON, using `llvm-cov export`, and fail if\n \t# there are differences from the expected output.\n \t\"$(LLVM_BIN_DIR)\"/llvm-cov export \\\n+\t\t\t$(LLVM_COV_IGNORE_FILES) \\\n \t\t\t--summary-only \\\n \t\t\t--instr-profile=\"$(TMPDIR)\"/$@.profdata \\\n \t\t\t$(call BIN,\"$(TMPDIR)\"/$@) \\\n \t\t| \"$(PYTHON)\" $(BASEDIR)/prettify_json.py \\\n \t\t> \"$(TMPDIR)\"/actual_export_coverage.$@.json\n+\t# FIXME(richkadel): With the addition of `--ignore-matching-lines=RE` to ignore the\n+\t# non-deterministically-ordered coverage results for multiple instantiations of generics with\n+\t# differing type substitutions, I probably don't need the `.json` files anymore (and may not\n+\t# need `prettify_json.py` either).\n \n ifdef RUSTC_BLESS_TEST\n \tcp \"$(TMPDIR)\"/actual_export_coverage.$@.json expected_export_coverage.$@.json", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/Makefile"}, {"sha": "db7dd0b15e96078be432abe373a46d6c257e8430", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.abort.json", "status": "renamed", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.abort.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.abort.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.abort.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/loops_branches.rs\",\n+          \"filename\": \"../coverage/abort.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 2,\n@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 11,\n-              \"covered\": 11,\n-              \"percent\": 100\n+              \"count\": 19,\n+              \"covered\": 17,\n+              \"percent\": 89.47368421052632\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 8,\n+              \"count\": 17,\n+              \"covered\": 16,\n               \"notcovered\": 1,\n-              \"percent\": 88.88888888888889\n+              \"percent\": 94.11764705882352\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 11,\n-          \"covered\": 11,\n-          \"percent\": 100\n+          \"count\": 19,\n+          \"covered\": 17,\n+          \"percent\": 89.47368421052632\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 8,\n+          \"count\": 17,\n+          \"covered\": 16,\n           \"notcovered\": 1,\n-          \"percent\": 88.88888888888889\n+          \"percent\": 94.11764705882352\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.loops_branches.json"}, {"sha": "024b5f11179ac4abcbbe78caaf23c0986497c5e0", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.assert.json", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.assert.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.assert.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.assert.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/drop_trait.rs\",\n+          \"filename\": \"../coverage/assert.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 2,\n@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 10,\n-              \"covered\": 10,\n-              \"percent\": 100\n+              \"count\": 15,\n+              \"covered\": 12,\n+              \"percent\": 80\n             },\n             \"regions\": {\n-              \"count\": 5,\n-              \"covered\": 5,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 14,\n+              \"covered\": 12,\n+              \"notcovered\": 2,\n+              \"percent\": 85.71428571428571\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 10,\n-          \"covered\": 10,\n-          \"percent\": 100\n+          \"count\": 15,\n+          \"covered\": 12,\n+          \"percent\": 80\n         },\n         \"regions\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 14,\n+          \"covered\": 12,\n+          \"notcovered\": 2,\n+          \"percent\": 85.71428571428571\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.drop_trait.json"}, {"sha": "794a2e382535ab2895ed5062e49cc38f626739f5", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.async.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.async.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.async.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.async.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/async.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 17,\n+              \"covered\": 16,\n+              \"percent\": 94.11764705882352\n+            },\n+            \"instantiations\": {\n+              \"count\": 17,\n+              \"covered\": 16,\n+              \"percent\": 94.11764705882352\n+            },\n+            \"lines\": {\n+              \"count\": 105,\n+              \"covered\": 77,\n+              \"percent\": 73.33333333333333\n+            },\n+            \"regions\": {\n+              \"count\": 78,\n+              \"covered\": 36,\n+              \"notcovered\": 42,\n+              \"percent\": 46.15384615384615\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 17,\n+          \"covered\": 16,\n+          \"percent\": 94.11764705882352\n+        },\n+        \"instantiations\": {\n+          \"count\": 17,\n+          \"covered\": 16,\n+          \"percent\": 94.11764705882352\n+        },\n+        \"lines\": {\n+          \"count\": 105,\n+          \"covered\": 77,\n+          \"percent\": 73.33333333333333\n+        },\n+        \"regions\": {\n+          \"count\": 78,\n+          \"covered\": 36,\n+          \"notcovered\": 42,\n+          \"percent\": 46.15384615384615\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "39e1dea66f963424c91a0e72da2bc9690be646ad", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.closure.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.closure.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/closure.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 6,\n+              \"covered\": 4,\n+              \"percent\": 66.66666666666666\n+            },\n+            \"instantiations\": {\n+              \"count\": 6,\n+              \"covered\": 4,\n+              \"percent\": 66.66666666666666\n+            },\n+            \"lines\": {\n+              \"count\": 161,\n+              \"covered\": 131,\n+              \"percent\": 81.36645962732919\n+            },\n+            \"regions\": {\n+              \"count\": 42,\n+              \"covered\": 22,\n+              \"notcovered\": 20,\n+              \"percent\": 52.38095238095239\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 6,\n+          \"covered\": 4,\n+          \"percent\": 66.66666666666666\n+        },\n+        \"instantiations\": {\n+          \"count\": 6,\n+          \"covered\": 4,\n+          \"percent\": 66.66666666666666\n+        },\n+        \"lines\": {\n+          \"count\": 161,\n+          \"covered\": 131,\n+          \"percent\": 81.36645962732919\n+        },\n+        \"regions\": {\n+          \"count\": 42,\n+          \"covered\": 22,\n+          \"notcovered\": 20,\n+          \"percent\": 52.38095238095239\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "69356604856b617057eb58266cb2066241968ab9", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.conditions.json", "status": "renamed", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.conditions.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 49,\n-              \"covered\": 23,\n-              \"percent\": 46.93877551020408\n+              \"count\": 64,\n+              \"covered\": 33,\n+              \"percent\": 51.5625\n             },\n             \"regions\": {\n-              \"count\": 69,\n-              \"covered\": 18,\n-              \"notcovered\": 51,\n-              \"percent\": 26.08695652173913\n+              \"count\": 64,\n+              \"covered\": 21,\n+              \"notcovered\": 43,\n+              \"percent\": 32.8125\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 49,\n-          \"covered\": 23,\n-          \"percent\": 46.93877551020408\n+          \"count\": 64,\n+          \"covered\": 33,\n+          \"percent\": 51.5625\n         },\n         \"regions\": {\n-          \"count\": 69,\n-          \"covered\": 18,\n-          \"notcovered\": 51,\n-          \"percent\": 26.08695652173913\n+          \"count\": 64,\n+          \"covered\": 21,\n+          \"notcovered\": 43,\n+          \"percent\": 32.8125\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.conditions.json"}, {"sha": "6588ba90274ad280d9d901c39953fd2fbebbd7dd", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.dead_code.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.dead_code.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.dead_code.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.dead_code.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/dead_code.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 0,\n+              \"percent\": 0\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 0,\n+              \"percent\": 0\n+            },\n+            \"lines\": {\n+              \"count\": 33,\n+              \"covered\": 11,\n+              \"percent\": 33.33333333333333\n+            },\n+            \"regions\": {\n+              \"count\": 12,\n+              \"covered\": 3,\n+              \"notcovered\": 9,\n+              \"percent\": 25\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 0,\n+          \"percent\": 0\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 0,\n+          \"percent\": 0\n+        },\n+        \"lines\": {\n+          \"count\": 33,\n+          \"covered\": 11,\n+          \"percent\": 33.33333333333333\n+        },\n+        \"regions\": {\n+          \"count\": 12,\n+          \"covered\": 3,\n+          \"notcovered\": 9,\n+          \"percent\": 25\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "e303d3802f5196bbd07d534e9e02278060e0326a", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.drop_trait.json", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.drop_trait.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.drop_trait.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.drop_trait.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,13 +16,13 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 10,\n-              \"covered\": 10,\n+              \"count\": 12,\n+              \"covered\": 12,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 5,\n-              \"covered\": 5,\n+              \"count\": 4,\n+              \"covered\": 4,\n               \"notcovered\": 0,\n               \"percent\": 100\n             }\n@@ -41,13 +41,13 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 10,\n-          \"covered\": 10,\n+          \"count\": 12,\n+          \"covered\": 12,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n+          \"count\": 4,\n+          \"covered\": 4,\n           \"notcovered\": 0,\n           \"percent\": 100\n         }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.drop_trait.json"}, {"sha": "bfae69d7ac4dc1bd6f40b4efab3305acecd20e9e", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.generics.json", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.generics.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.generics.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.generics.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,13 +16,13 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 16,\n-              \"covered\": 16,\n+              \"count\": 18,\n+              \"covered\": 18,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n+              \"count\": 5,\n+              \"covered\": 5,\n               \"notcovered\": 0,\n               \"percent\": 100\n             }\n@@ -41,13 +41,13 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 16,\n-          \"covered\": 16,\n+          \"count\": 18,\n+          \"covered\": 18,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 6,\n-          \"covered\": 6,\n+          \"count\": 5,\n+          \"covered\": 5,\n           \"notcovered\": 0,\n           \"percent\": 100\n         }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.generics.json"}, {"sha": "8f233f8bfc548b51d3970701600a16292d7f3fcf", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.if.json", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.if.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/while.rs\",\n+          \"filename\": \"../coverage/if.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 1,\n@@ -16,9 +16,9 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 4,\n-              \"covered\": 3,\n-              \"percent\": 75\n+              \"count\": 26,\n+              \"covered\": 26,\n+              \"percent\": 100\n             },\n             \"regions\": {\n               \"count\": 4,\n@@ -41,9 +41,9 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 4,\n-          \"covered\": 3,\n-          \"percent\": 75\n+          \"count\": 26,\n+          \"covered\": 26,\n+          \"percent\": 100\n         },\n         \"regions\": {\n           \"count\": 4,", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.while.json"}, {"sha": "5c0454e1ecbc2791664a087ab07702b09170a923", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.if_else.json", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.if_else.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.if_else.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.if_else.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,9 +16,9 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 28,\n-              \"covered\": 19,\n-              \"percent\": 67.85714285714286\n+              \"count\": 32,\n+              \"covered\": 23,\n+              \"percent\": 71.875\n             },\n             \"regions\": {\n               \"count\": 7,\n@@ -41,9 +41,9 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 28,\n-          \"covered\": 19,\n-          \"percent\": 67.85714285714286\n+          \"count\": 32,\n+          \"covered\": 23,\n+          \"percent\": 71.875\n         },\n         \"regions\": {\n           \"count\": 7,", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.if_else.json"}, {"sha": "07ef9a9ab3348b6bbebf77ebc7e4ef8262555b07", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.inner_items.json", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.inner_items.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 26,\n-              \"covered\": 26,\n+              \"count\": 29,\n+              \"covered\": 29,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 15,\n-              \"covered\": 13,\n+              \"count\": 11,\n+              \"covered\": 9,\n               \"notcovered\": 2,\n-              \"percent\": 86.66666666666667\n+              \"percent\": 81.81818181818183\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 26,\n-          \"covered\": 26,\n+          \"count\": 29,\n+          \"covered\": 29,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 15,\n-          \"covered\": 13,\n+          \"count\": 11,\n+          \"covered\": 9,\n           \"notcovered\": 2,\n-          \"percent\": 86.66666666666667\n+          \"percent\": 81.81818181818183\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.inner_items.json"}, {"sha": "c3a96b08e6a2a1581838274c43d4020faeaf60fe", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.lazy_boolean.json", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.lazy_boolean.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.lazy_boolean.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.lazy_boolean.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 40,\n-              \"covered\": 30,\n+              \"count\": 44,\n+              \"covered\": 33,\n               \"percent\": 75\n             },\n             \"regions\": {\n-              \"count\": 37,\n-              \"covered\": 26,\n-              \"notcovered\": 11,\n-              \"percent\": 70.27027027027027\n+              \"count\": 28,\n+              \"covered\": 21,\n+              \"notcovered\": 7,\n+              \"percent\": 75\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 40,\n-          \"covered\": 30,\n+          \"count\": 44,\n+          \"covered\": 33,\n           \"percent\": 75\n         },\n         \"regions\": {\n-          \"count\": 37,\n-          \"covered\": 26,\n-          \"notcovered\": 11,\n-          \"percent\": 70.27027027027027\n+          \"count\": 28,\n+          \"covered\": 21,\n+          \"notcovered\": 7,\n+          \"percent\": 75\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.lazy_boolean.json"}, {"sha": "6cb1465c818732da0b7cd36a793733d734223d4c", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.loop_break_value.json", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.loop_break_value.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.loop_break_value.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.loop_break_value.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.loop_break_value.json"}, {"sha": "6d566f2b818c8d3e7353aa8cfba2511838336712", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.loops_branches.json", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.loops_branches.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.loops_branches.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.loops_branches.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 8,\n+              \"count\": 8,\n+              \"covered\": 7,\n               \"notcovered\": 1,\n-              \"percent\": 88.88888888888889\n+              \"percent\": 87.5\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 8,\n+          \"count\": 8,\n+          \"covered\": 7,\n           \"notcovered\": 1,\n-          \"percent\": 88.88888888888889\n+          \"percent\": 87.5\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.loops_branches.json"}, {"sha": "bf3b5cb031b927ffceb83ce04d565fb27cdbc7b8", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.nested_loops.json", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.nested_loops.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/loop_break_value.rs\",\n+          \"filename\": \"../coverage/nested_loops.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 1,\n@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 11,\n-              \"covered\": 11,\n-              \"percent\": 100\n+              \"count\": 22,\n+              \"covered\": 17,\n+              \"percent\": 77.27272727272727\n             },\n             \"regions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 14,\n+              \"covered\": 11,\n+              \"notcovered\": 3,\n+              \"percent\": 78.57142857142857\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 11,\n-          \"covered\": 11,\n-          \"percent\": 100\n+          \"count\": 22,\n+          \"covered\": 17,\n+          \"percent\": 77.27272727272727\n         },\n         \"regions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 14,\n+          \"covered\": 11,\n+          \"notcovered\": 3,\n+          \"percent\": 78.57142857142857\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.loop_break_value.json"}, {"sha": "030d7b033f009eb3ef804a2c741418a273125d4d", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.overflow.json", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.overflow.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.overflow.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.overflow.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,53 +3,53 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/tight_inf_loop.rs\",\n+          \"filename\": \"../coverage/overflow.rs\",\n           \"summary\": {\n             \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n+              \"count\": 2,\n+              \"covered\": 2,\n               \"percent\": 100\n             },\n             \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n               \"count\": 2,\n               \"covered\": 2,\n               \"percent\": 100\n             },\n+            \"lines\": {\n+              \"count\": 23,\n+              \"covered\": 19,\n+              \"percent\": 82.6086956521739\n+            },\n             \"regions\": {\n-              \"count\": 2,\n-              \"covered\": 2,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 13,\n+              \"covered\": 11,\n+              \"notcovered\": 2,\n+              \"percent\": 84.61538461538461\n             }\n           }\n         }\n       ],\n       \"totals\": {\n         \"functions\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n+          \"count\": 2,\n+          \"covered\": 2,\n           \"percent\": 100\n         },\n         \"instantiations\": {\n-          \"count\": 1,\n-          \"covered\": 1,\n-          \"percent\": 100\n-        },\n-        \"lines\": {\n           \"count\": 2,\n           \"covered\": 2,\n           \"percent\": 100\n         },\n+        \"lines\": {\n+          \"count\": 23,\n+          \"covered\": 19,\n+          \"percent\": 82.6086956521739\n+        },\n         \"regions\": {\n-          \"count\": 2,\n-          \"covered\": 2,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 13,\n+          \"covered\": 11,\n+          \"notcovered\": 2,\n+          \"percent\": 84.61538461538461\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.tight_inf_loop.json"}, {"sha": "b1d44fdfeac54901cd1cfb31f4b447c9253c2f14", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.panic_unwind.json", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.panic_unwind.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.panic_unwind.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.panic_unwind.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/try_error_result.rs\",\n+          \"filename\": \"../coverage/panic_unwind.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 2,\n@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 20,\n-              \"covered\": 18,\n-              \"percent\": 90\n+              \"count\": 19,\n+              \"covered\": 16,\n+              \"percent\": 84.21052631578947\n             },\n             \"regions\": {\n-              \"count\": 19,\n-              \"covered\": 14,\n-              \"notcovered\": 5,\n-              \"percent\": 73.68421052631578\n+              \"count\": 13,\n+              \"covered\": 11,\n+              \"notcovered\": 2,\n+              \"percent\": 84.61538461538461\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 20,\n-          \"covered\": 18,\n-          \"percent\": 90\n+          \"count\": 19,\n+          \"covered\": 16,\n+          \"percent\": 84.21052631578947\n         },\n         \"regions\": {\n-          \"count\": 19,\n-          \"covered\": 14,\n-          \"notcovered\": 5,\n-          \"percent\": 73.68421052631578\n+          \"count\": 13,\n+          \"covered\": 11,\n+          \"notcovered\": 2,\n+          \"percent\": 84.61538461538461\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.try_error_result.json"}, {"sha": "6a0d83a6d0e447cc657ae6b96627a116a784b571", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.partial_eq.json", "status": "renamed", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.partial_eq.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.partial_eq.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.partial_eq.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -7,49 +7,49 @@\n           \"summary\": {\n             \"functions\": {\n               \"count\": 5,\n-              \"covered\": 5,\n-              \"percent\": 100\n+              \"covered\": 4,\n+              \"percent\": 80\n             },\n             \"instantiations\": {\n               \"count\": 5,\n-              \"covered\": 5,\n-              \"percent\": 100\n+              \"covered\": 4,\n+              \"percent\": 80\n             },\n             \"lines\": {\n-              \"count\": 15,\n-              \"covered\": 15,\n-              \"percent\": 100\n+              \"count\": 18,\n+              \"covered\": 16,\n+              \"percent\": 88.88888888888889\n             },\n             \"regions\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 24,\n+              \"covered\": 5,\n+              \"notcovered\": 19,\n+              \"percent\": 20.833333333333336\n             }\n           }\n         }\n       ],\n       \"totals\": {\n         \"functions\": {\n           \"count\": 5,\n-          \"covered\": 5,\n-          \"percent\": 100\n+          \"covered\": 4,\n+          \"percent\": 80\n         },\n         \"instantiations\": {\n           \"count\": 5,\n-          \"covered\": 5,\n-          \"percent\": 100\n+          \"covered\": 4,\n+          \"percent\": 80\n         },\n         \"lines\": {\n-          \"count\": 15,\n-          \"covered\": 15,\n-          \"percent\": 100\n+          \"count\": 18,\n+          \"covered\": 16,\n+          \"percent\": 88.88888888888889\n         },\n         \"regions\": {\n-          \"count\": 6,\n-          \"covered\": 6,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 24,\n+          \"covered\": 5,\n+          \"notcovered\": 19,\n+          \"percent\": 20.833333333333336\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.partial_eq.json"}, {"sha": "4c849692a034c3f1282c016c9e36114032546d38", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.simple_loop.json", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.simple_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.simple_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.simple_loop.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 19,\n-              \"covered\": 19,\n+              \"count\": 25,\n+              \"covered\": 25,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 8,\n+              \"count\": 7,\n+              \"covered\": 6,\n               \"notcovered\": 1,\n-              \"percent\": 88.88888888888889\n+              \"percent\": 85.71428571428571\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 19,\n-          \"covered\": 19,\n+          \"count\": 25,\n+          \"covered\": 25,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 8,\n+          \"count\": 7,\n+          \"covered\": 6,\n           \"notcovered\": 1,\n-          \"percent\": 88.88888888888889\n+          \"percent\": 85.71428571428571\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.simple_loop.json"}, {"sha": "41bc4d57d59f48035e1eddb4837c6a943fcf2a94", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.simple_match.json", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.simple_match.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.simple_match.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.simple_match.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 24,\n-              \"covered\": 24,\n+              \"count\": 27,\n+              \"covered\": 27,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 15,\n-              \"covered\": 14,\n+              \"count\": 11,\n+              \"covered\": 10,\n               \"notcovered\": 1,\n-              \"percent\": 93.33333333333333\n+              \"percent\": 90.9090909090909\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 24,\n-          \"covered\": 24,\n+          \"count\": 27,\n+          \"covered\": 27,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 15,\n-          \"covered\": 14,\n+          \"count\": 11,\n+          \"covered\": 10,\n           \"notcovered\": 1,\n-          \"percent\": 93.33333333333333\n+          \"percent\": 90.9090909090909\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.simple_match.json"}, {"sha": "7f6c90b92d296bea01fa3c2805ba613fd8c0b0bb", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.tight_inf_loop.json", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.tight_inf_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.tight_inf_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.tight_inf_loop.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,8 +16,8 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 2,\n-              \"covered\": 2,\n+              \"count\": 4,\n+              \"covered\": 4,\n               \"percent\": 100\n             },\n             \"regions\": {\n@@ -41,8 +41,8 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 2,\n-          \"covered\": 2,\n+          \"count\": 4,\n+          \"covered\": 4,\n           \"percent\": 100\n         },\n         \"regions\": {", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.tight_inf_loop.json"}, {"sha": "df4de9dc54bdc143309f3c875b7cd6d638836a9b", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.try_error_result.json", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.try_error_result.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.try_error_result.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.try_error_result.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 90\n             },\n             \"regions\": {\n-              \"count\": 19,\n-              \"covered\": 14,\n-              \"notcovered\": 5,\n-              \"percent\": 73.68421052631578\n+              \"count\": 16,\n+              \"covered\": 12,\n+              \"notcovered\": 4,\n+              \"percent\": 75\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 90\n         },\n         \"regions\": {\n-          \"count\": 19,\n-          \"covered\": 14,\n-          \"notcovered\": 5,\n-          \"percent\": 73.68421052631578\n+          \"count\": 16,\n+          \"covered\": 12,\n+          \"notcovered\": 4,\n+          \"percent\": 75\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.try_error_result.json"}, {"sha": "35ddd58fc437a55ef4d4cf010aabe6010943dc95", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.uses_crate.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.uses_crate.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.uses_crate.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.uses_crate.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/lib/used_crate.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 6,\n+              \"covered\": 5,\n+              \"percent\": 83.33333333333334\n+            },\n+            \"instantiations\": {\n+              \"count\": 10,\n+              \"covered\": 8,\n+              \"percent\": 80\n+            },\n+            \"lines\": {\n+              \"count\": 46,\n+              \"covered\": 26,\n+              \"percent\": 56.52173913043478\n+            },\n+            \"regions\": {\n+              \"count\": 19,\n+              \"covered\": 8,\n+              \"notcovered\": 11,\n+              \"percent\": 42.10526315789473\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 6,\n+          \"covered\": 5,\n+          \"percent\": 83.33333333333334\n+        },\n+        \"instantiations\": {\n+          \"count\": 10,\n+          \"covered\": 8,\n+          \"percent\": 80\n+        },\n+        \"lines\": {\n+          \"count\": 46,\n+          \"covered\": 26,\n+          \"percent\": 56.52173913043478\n+        },\n+        \"regions\": {\n+          \"count\": 19,\n+          \"covered\": 8,\n+          \"notcovered\": 11,\n+          \"percent\": 42.10526315789473\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "339c533ada6dcf160f64fe786b7562957557bb85", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.while.json", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.while.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.while.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.while.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,9 +16,9 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 4,\n-              \"covered\": 3,\n-              \"percent\": 75\n+              \"count\": 5,\n+              \"covered\": 4,\n+              \"percent\": 80\n             },\n             \"regions\": {\n               \"count\": 4,\n@@ -41,9 +41,9 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 4,\n-          \"covered\": 3,\n-          \"percent\": 75\n+          \"count\": 5,\n+          \"covered\": 4,\n+          \"percent\": 80\n         },\n         \"regions\": {\n           \"count\": 4,", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.while.json"}, {"sha": "b7fe2a0fb47dfb8f095e93ebcfa6f077de63fb09", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.while_early_ret.json", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.while_early_ret.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.while_early_ret.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.while_early_ret.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,9 +16,9 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 17,\n-              \"covered\": 15,\n-              \"percent\": 88.23529411764706\n+              \"count\": 19,\n+              \"covered\": 17,\n+              \"percent\": 89.47368421052632\n             },\n             \"regions\": {\n               \"count\": 9,\n@@ -41,9 +41,9 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 17,\n-          \"covered\": 15,\n-          \"percent\": 88.23529411764706\n+          \"count\": 19,\n+          \"covered\": 17,\n+          \"percent\": 89.47368421052632\n         },\n         \"regions\": {\n           \"count\": 9,", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.while_early_ret.json"}, {"sha": "6fc41212bc091a6f5d6e685272695108f2b46d11", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.yield.json", "status": "renamed", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.yield.json", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.yield.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.yield.json?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -3,28 +3,28 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../coverage/generics.rs\",\n+          \"filename\": \"../coverage/yield.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 3,\n               \"covered\": 3,\n               \"percent\": 100\n             },\n             \"instantiations\": {\n-              \"count\": 5,\n-              \"covered\": 5,\n+              \"count\": 3,\n+              \"covered\": 3,\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 16,\n-              \"covered\": 16,\n-              \"percent\": 100\n+              \"count\": 26,\n+              \"covered\": 19,\n+              \"percent\": 73.07692307692307\n             },\n             \"regions\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 23,\n+              \"covered\": 17,\n+              \"notcovered\": 6,\n+              \"percent\": 73.91304347826086\n             }\n           }\n         }\n@@ -36,20 +36,20 @@\n           \"percent\": 100\n         },\n         \"instantiations\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n+          \"count\": 3,\n+          \"covered\": 3,\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 16,\n-          \"covered\": 16,\n-          \"percent\": 100\n+          \"count\": 26,\n+          \"covered\": 19,\n+          \"percent\": 73.07692307692307\n         },\n         \"regions\": {\n-          \"count\": 6,\n-          \"covered\": 6,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 23,\n+          \"covered\": 17,\n+          \"notcovered\": 6,\n+          \"percent\": 73.91304347826086\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.generics.json"}, {"sha": "3b5d5eb42270277e09575ce6dd5679a6936cf553", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.abort.txt", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.abort.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.abort.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.abort.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,70 @@\n+    1|       |#![feature(unwind_attributes)]\n+    2|       |#![allow(unused_assignments)]\n+    3|       |\n+    4|       |#[unwind(aborts)]\n+    5|     12|fn might_abort(should_abort: bool) {\n+    6|     12|    if should_abort {\n+    7|      0|        println!(\"aborting...\");\n+    8|      0|        panic!(\"panics and aborts\");\n+    9|     12|    } else {\n+   10|     12|        println!(\"Don't Panic\");\n+   11|     12|    }\n+   12|     12|}\n+   13|       |\n+   14|      1|fn main() -> Result<(), u8> {\n+   15|      1|    let mut countdown = 10;\n+   16|     11|    while countdown > 0 {\n+   17|     10|        if countdown < 5 {\n+   18|      4|            might_abort(false);\n+   19|      6|        }\n+   20|       |        // See discussion (below the `Notes` section) on coverage results for the closing brace.\n+   21|     10|        if countdown < 5 { might_abort(false); } // Counts for different regions on one line.\n+                                       ^4                     ^6\n+   22|       |        // For the following example, the closing brace is the last character on the line.\n+   23|       |        // This shows the character after the closing brace is highlighted, even if that next\n+   24|       |        // character is a newline.\n+   25|     10|        if countdown < 5 { might_abort(false); }\n+                                       ^4                     ^6\n+   26|     10|        countdown -= 1;\n+   27|       |    }\n+   28|      1|    Ok(())\n+   29|      1|}\n+   30|       |\n+   31|       |// Notes:\n+   32|       |//   1. Compare this program and its coverage results to those of the similar tests\n+   33|       |//      `panic_unwind.rs` and `try_error_result.rs`.\n+   34|       |//   2. This test confirms the coverage generated when a program includes `TerminatorKind::Abort`.\n+   35|       |//   3. The test does not invoke the abort. By executing to a successful completion, the coverage\n+   36|       |//      results show where the program did and did not execute.\n+   37|       |//   4. If the program actually aborted, the coverage counters would not be saved (which \"works as\n+   38|       |//      intended\"). Coverage results would show no executed coverage regions.\n+   39|       |//   6. If `should_abort` is `true` and the program aborts, the program exits with a `132` status\n+   40|       |//      (on Linux at least).\n+   41|       |\n+   42|       |/*\n+   43|       |\n+   44|       |Expect the following coverage results:\n+   45|       |\n+   46|       |```text\n+   47|       |    16|     11|    while countdown > 0 {\n+   48|       |    17|     10|        if countdown < 5 {\n+   49|       |    18|      4|            might_abort(false);\n+   50|       |    19|      6|        }\n+   51|       |```\n+   52|       |\n+   53|       |This is actually correct.\n+   54|       |\n+   55|       |The condition `countdown < 5` executed 10 times (10 loop iterations).\n+   56|       |\n+   57|       |It evaluated to `true` 4 times, and executed the `might_abort()` call.\n+   58|       |\n+   59|       |It skipped the body of the `might_abort()` call 6 times. If an `if` does not include an explicit\n+   60|       |`else`, the coverage implementation injects a counter, at the character immediately after the `if`s\n+   61|       |closing brace, to count the \"implicit\" `else`. This is the only way to capture the coverage of the\n+   62|       |non-true condition.\n+   63|       |\n+   64|       |As another example of why this is important, say the condition was `countdown < 50`, which is always\n+   65|       |`true`. In that case, we wouldn't have a test for what happens if `might_abort()` is not called.\n+   66|       |The closing brace would have a count of `0`, highlighting the missed coverage.\n+   67|       |*/\n+"}, {"sha": "355b53f7f3b69aeaab05f98071121279062f10b3", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.assert.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.assert.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.assert.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.assert.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,34 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|      4|fn might_fail_assert(one_plus_one: u32) {\n+    5|      4|    println!(\"does 1 + 1 = {}?\", one_plus_one);\n+    6|      4|    assert_eq!(1 + 1, one_plus_one, \"the argument was wrong\");\n+                                                  ^1\n+    7|      3|}\n+    8|       |\n+    9|      1|fn main() -> Result<(),u8> {\n+   10|      1|    let mut countdown = 10;\n+   11|     10|    while countdown > 0 {\n+   12|     10|        if countdown == 1 {\n+   13|      0|            might_fail_assert(3);\n+   14|     10|        } else if countdown < 5 {\n+   15|      3|            might_fail_assert(2);\n+   16|      6|        }\n+   17|      9|        countdown -= 1;\n+   18|       |    }\n+   19|      0|    Ok(())\n+   20|      0|}\n+   21|       |\n+   22|       |// Notes:\n+   23|       |//   1. Compare this program and its coverage results to those of the very similar test\n+   24|       |//      `panic_unwind.rs`, and similar tests `abort.rs` and `try_error_result.rs`.\n+   25|       |//   2. This test confirms the coverage generated when a program passes or fails an `assert!()` or\n+   26|       |//      related `assert_*!()` macro.\n+   27|       |//   3. Notably, the `assert` macros *do not* generate `TerminatorKind::Assert`. The macros produce\n+   28|       |//      conditional expressions, `TerminatorKind::SwitchInt` branches, and a possible call to\n+   29|       |//      `begin_panic_fmt()` (that begins a panic unwind, if the assertion test fails).\n+   30|       |//   4. `TerminatoKind::Assert` is, however, also present in the MIR generated for this test\n+   31|       |//      (and in many other coverage tests). The `Assert` terminator is typically generated by the\n+   32|       |//      Rust compiler to check for runtime failures, such as numeric overflows.\n+"}, {"sha": "824bddaa4015534e10b612eacb2f859e5553581f", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.async.txt", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,135 @@\n+    1|       |#![allow(unused_assignments, dead_code)]\n+    2|       |\n+    3|       |// require-rust-edition-2018\n+    4|       |\n+    5|      1|async fn c(x: u8) -> u8 {\n+    6|      1|    if x == 8 {\n+    7|      1|        1\n+    8|       |    } else {\n+    9|      0|        0\n+   10|       |    }\n+   11|      1|}\n+   12|       |\n+   13|      0|async fn d() -> u8 { 1 }\n+   14|       |\n+   15|      0|async fn e() -> u8 { 1 } // unused function; executor does not block on `g()`\n+   16|       |\n+   17|      1|async fn f() -> u8 { 1 }\n+   18|       |\n+   19|      0|async fn foo() -> [bool; 10] { [false; 10] } // unused function; executor does not block on `h()`\n+   20|       |\n+   21|      1|pub async fn g(x: u8) {\n+   22|      0|    match x {\n+   23|      0|        y if e().await == y => (),\n+   24|      0|        y if f().await == y => (),\n+   25|      0|        _ => (),\n+   26|       |    }\n+   27|      0|}\n+   28|       |\n+   29|      1|async fn h(x: usize) { // The function signature is counted when called, but the body is not\n+   30|      0|                       // executed (not awaited) so the open brace has a `0` count (at least when\n+   31|      0|                       // displayed with `llvm-cov show` in color-mode).\n+   32|      0|    match x {\n+   33|      0|        y if foo().await[y] => (),\n+   34|      0|        _ => (),\n+   35|       |    }\n+   36|      0|}\n+   37|       |\n+   38|      1|async fn i(x: u8) { // line coverage is 1, but there are 2 regions:\n+   39|      1|                    // (a) the function signature, counted when the function is called; and\n+   40|      1|                    // (b) the open brace for the function body, counted once when the body is\n+   41|      1|                    // executed asynchronously.\n+   42|      1|    match x {\n+   43|      1|        y if c(x).await == y + 1 => { d().await; }\n+                      ^0                            ^0\n+   44|      1|        y if f().await == y + 1 => (),\n+                      ^0                         ^0\n+   45|      1|        _ => (),\n+   46|       |    }\n+   47|      1|}\n+   48|       |\n+   49|      1|fn j(x: u8) {\n+   50|      1|    // non-async versions of `c()`, `d()`, and `f()` to make it similar to async `i()`.\n+   51|      1|    fn c(x: u8) -> u8 {\n+   52|      1|        if x == 8 {\n+   53|      1|            1 // This line appears covered, but the 1-character expression span covering the `1`\n+                          ^0\n+   54|      1|              // is not executed. (`llvm-cov show` displays a `^0` below the `1` ). This is because\n+   55|      1|              // `fn j()` executes the open brace for the funciton body, followed by the function's\n+   56|      1|              // first executable statement, `match x`. Inner function declarations are not\n+   57|      1|              // \"visible\" to the MIR for `j()`, so the code region counts all lines between the\n+   58|      1|              // open brace and the first statement as executed, which is, in a sense, true.\n+   59|      1|              // `llvm-cov show` overcomes this kind of situation by showing the actual counts\n+   60|      1|              // of the enclosed coverages, (that is, the `1` expression was not executed, and\n+   61|      1|              // accurately displays a `0`).\n+   62|      1|        } else {\n+   63|      1|            0\n+   64|      1|        }\n+   65|      1|    }\n+   66|      1|    fn d() -> u8 { 1 }\n+   67|      1|    fn f() -> u8 { 1 }\n+   68|      1|    match x {\n+   69|      1|        y if c(x) == y + 1 => { d(); }\n+                      ^0                    ^0\n+   70|      1|        y if f() == y + 1 => (),\n+                      ^0                   ^0\n+   71|      1|        _ => (),\n+   72|       |    }\n+   73|      1|}\n+   74|       |\n+   75|      0|fn k(x: u8) { // unused function\n+   76|      0|    match x {\n+   77|      0|        1 => (),\n+   78|      0|        2 => (),\n+   79|      0|        _ => (),\n+   80|       |    }\n+   81|      0|}\n+   82|       |\n+   83|      1|fn l(x: u8) {\n+   84|      1|    match x {\n+   85|      0|        1 => (),\n+   86|      0|        2 => (),\n+   87|      1|        _ => (),\n+   88|       |    }\n+   89|      1|}\n+   90|       |\n+   91|      1|async fn m(x: u8) -> u8 { x - 1 }\n+                                      ^0\n+   92|       |\n+   93|      1|fn main() {\n+   94|      1|    let _ = g(10);\n+   95|      1|    let _ = h(9);\n+   96|      1|    let mut future = Box::pin(i(8));\n+   97|      1|    j(7);\n+   98|      1|    l(6);\n+   99|      1|    let _ = m(5);\n+  100|      1|    executor::block_on(future.as_mut());\n+  101|      1|}\n+  102|       |\n+  103|       |mod executor {\n+  104|       |    use core::{\n+  105|       |        future::Future,\n+  106|       |        pin::Pin,\n+  107|       |        task::{Context, Poll, RawWaker, RawWakerVTable, Waker},\n+  108|       |    };\n+  109|       |\n+  110|      1|    pub fn block_on<F: Future>(mut future: F) -> F::Output {\n+  111|      1|        let mut future = unsafe { Pin::new_unchecked(&mut future) };\n+  112|      1|\n+  113|      1|        static VTABLE: RawWakerVTable = RawWakerVTable::new(\n+  114|      1|            |_| unimplemented!(\"clone\"),\n+  115|      1|            |_| unimplemented!(\"wake\"),\n+  116|      1|            |_| unimplemented!(\"wake_by_ref\"),\n+  117|      1|            |_| (),\n+  118|      1|        );\n+  119|      1|        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &VTABLE)) };\n+  120|      1|        let mut context = Context::from_waker(&waker);\n+  121|       |\n+  122|       |        loop {\n+  123|      1|            if let Poll::Ready(val) = future.as_mut().poll(&mut context) {\n+  124|      1|                break val;\n+  125|      0|            }\n+  126|       |        }\n+  127|      1|    }\n+  128|       |}\n+"}, {"sha": "7261cf0a3b0da1d4b74f98176b82c146f0e75cca", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.closure.txt", "status": "renamed", "additions": 71, "deletions": 5, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.closure.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -16,7 +16,7 @@\n    16|      1|            unwrap_or_else\n    17|      1|        (\n    18|      1|            ||\n-   19|       |            {\n+   19|      0|            {\n    20|      0|                let mut countdown = 0;\n    21|      0|                if is_false {\n    22|      0|                    countdown = 10;\n@@ -31,7 +31,7 @@\n    31|      1|        a\n    32|      1|    =\n    33|      1|        ||\n-   34|       |    {\n+   34|      0|    {\n    35|      0|        let mut countdown = 0;\n    36|      0|        if is_false {\n    37|      0|            countdown = 10;\n@@ -58,7 +58,7 @@\n    58|      1|            unwrap_or_else\n    59|      1|        (\n    60|      1|            ||\n-   61|       |            {\n+   61|      1|            {\n    62|      1|                let mut countdown = 0;\n    63|      1|                if is_false {\n    64|      0|                    countdown = 10;\n@@ -73,7 +73,7 @@\n    73|      1|        a\n    74|      1|    =\n    75|      1|        ||\n-   76|       |    {\n+   76|      1|    {\n    77|      1|        let mut countdown = 0;\n    78|      1|        if is_false {\n    79|      0|            countdown = 10;\n@@ -90,5 +90,71 @@\n    90|      1|            a\n    91|      1|        )\n    92|      1|    );\n-   93|      1|}\n+   93|      1|\n+   94|      1|    let\n+   95|      1|        quote_closure\n+   96|      1|    =\n+   97|      1|        |val|\n+   98|      5|    {\n+   99|      5|        let mut countdown = 0;\n+  100|      5|        if is_false {\n+  101|      0|            countdown = 10;\n+  102|      5|        }\n+  103|      5|        format!(\"'{}'\", val)\n+  104|      5|    };\n+  105|      1|    println!(\n+  106|      1|        \"Repeated, quoted string: {:?}\"\n+  107|      1|        ,\n+  108|      1|        std::iter::repeat(\"repeat me\")\n+  109|      1|            .take(5)\n+  110|      1|            .map\n+  111|      1|        (\n+  112|      1|            quote_closure\n+  113|      1|        )\n+  114|      1|            .collect::<Vec<_>>()\n+  115|      1|    );\n+  116|      1|\n+  117|      1|    let\n+  118|      1|        _unused_closure\n+  119|      1|    =\n+  120|      1|        |\n+  121|       |            mut countdown\n+  122|       |        |\n+  123|      0|    {\n+  124|      0|        if is_false {\n+  125|      0|            countdown = 10;\n+  126|      0|        }\n+  127|      0|        \"closure should be unused\".to_owned()\n+  128|      1|    };\n+  129|      1|\n+  130|      1|    let mut countdown = 10;\n+  131|      1|    let _short_unused_closure = | _unused_arg: u8 | countdown += 1;\n+                                                                  ^0\n+  132|      1|\n+  133|      1|    // Macros can sometimes confuse the coverage results. Compare this next assignment, with an\n+  134|      1|    // unused closure that invokes the `println!()` macro, with the closure assignment above, that\n+  135|      1|    // does not use a macro. The closure above correctly shows `0` executions.\n+  136|      1|    let _short_unused_closure = | _unused_arg: u8 | println!(\"not called\");\n+  137|      1|    // The closure assignment above is executed, with a line count of `1`, but the `println!()`\n+  138|      1|    // could not have been called, and yet, there is no indication that it wasn't...\n+  139|      1|\n+  140|      1|    // ...but adding block braces gives the expected result, showing the block was not executed.\n+  141|      1|    let _short_unused_closure_block = | _unused_arg: u8 | { println!(\"not called\") };\n+                                                                        ^0\n+  142|      1|\n+  143|      1|    let _shortish_unused_closure = | _unused_arg: u8 | {\n+  144|      0|        println!(\"not called\")\n+  145|      1|    };\n+  146|      1|\n+  147|      1|    let _as_short_unused_closure = |\n+  148|       |        _unused_arg: u8\n+  149|      1|    | { println!(\"not called\") };\n+                    ^0\n+  150|      1|\n+  151|      1|    let _almost_as_short_unused_closure = |\n+  152|       |        _unused_arg: u8\n+  153|      1|    | { println!(\"not called\") }\n+                    ^0\n+  154|      1|    ;\n+  155|      1|}\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.closure.txt"}, {"sha": "656a26597759d337bac841ad5a4bfa956cac3a9b", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.conditions.txt", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.conditions.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,90 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|      1|fn main() {\n+    4|      1|    let mut countdown = 0;\n+    5|      1|    if true {\n+    6|      1|        countdown = 10;\n+    7|      1|    }\n+    8|       |\n+    9|       |    const B: u32 = 100;\n+   10|      1|    let x = if countdown > 7 {\n+   11|      1|        countdown -= 4;\n+   12|      1|        B\n+   13|      0|    } else if countdown > 2 {\n+   14|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   15|      0|            countdown = 0;\n+   16|      0|        }\n+   17|      0|        countdown -= 5;\n+   18|      0|        countdown\n+   19|       |    } else {\n+   20|      0|        return;\n+   21|       |    };\n+   22|       |\n+   23|      1|    let mut countdown = 0;\n+   24|      1|    if true {\n+   25|      1|        countdown = 10;\n+   26|      1|    }\n+   27|       |\n+   28|      1|    if countdown > 7 {\n+   29|      1|        countdown -= 4;\n+   30|      1|    } else if countdown > 2 {\n+                            ^0\n+   31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   32|      0|            countdown = 0;\n+   33|      0|        }\n+   34|      0|        countdown -= 5;\n+   35|       |    } else {\n+   36|      0|        return;\n+   37|       |    }\n+   38|       |\n+   39|      1|    if true {\n+   40|      1|        let mut countdown = 0;\n+   41|      1|        if true {\n+   42|      1|            countdown = 10;\n+   43|      1|        }\n+   44|       |\n+   45|      1|        if countdown > 7 {\n+   46|      1|            countdown -= 4;\n+   47|      1|        }\n+   48|      0|        else if countdown > 2 {\n+   49|      0|            if countdown < 1 || countdown > 5 || countdown != 9 {\n+   50|      0|                countdown = 0;\n+   51|      0|            }\n+   52|      0|            countdown -= 5;\n+   53|       |        } else {\n+   54|      0|            return;\n+   55|       |        }\n+   56|       |    } // Note: closing brace shows uncovered (vs. `0` for implicit else) because condition literal\n+   57|       |      // `true` was const-evaluated. The compiler knows the `if` block will be executed.\n+   58|       |\n+   59|      1|    let mut countdown = 0;\n+   60|      1|    if true {\n+   61|      1|        countdown = 1;\n+   62|      1|    }\n+   63|       |\n+   64|      1|    let z = if countdown > 7 {\n+                      ^0\n+   65|      0|        countdown -= 4;\n+   66|      1|    } else if countdown > 2 {\n+   67|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   68|      0|            countdown = 0;\n+   69|      0|        }\n+   70|      0|        countdown -= 5;\n+   71|       |    } else {\n+   72|      1|        let should_be_reachable = countdown;\n+   73|      1|        println!(\"reached\");\n+   74|      1|        return;\n+   75|       |    };\n+   76|       |\n+   77|      0|    let w = if countdown > 7 {\n+   78|      0|        countdown -= 4;\n+   79|      0|    } else if countdown > 2 {\n+   80|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   81|      0|            countdown = 0;\n+   82|      0|        }\n+   83|      0|        countdown -= 5;\n+   84|       |    } else {\n+   85|      0|        return;\n+   86|       |    };\n+   87|      1|}\n+"}, {"sha": "09ff14c6f27223268e0a3890583dfc1d68d73771", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.dead_code.txt", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.dead_code.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.dead_code.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.dead_code.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,39 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|      0|pub fn unused_pub_fn_not_in_library() {\n+    4|      0|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      0|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      0|    // dependent conditions.\n+    7|      0|    let is_true = std::env::args().len() == 1;\n+    8|      0|\n+    9|      0|    let mut countdown = 0;\n+   10|      0|    if is_true {\n+   11|      0|        countdown = 10;\n+   12|      0|    }\n+   13|      0|}\n+   14|       |\n+   15|      0|fn unused_fn() {\n+   16|      0|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+   17|      0|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+   18|      0|    // dependent conditions.\n+   19|      0|    let is_true = std::env::args().len() == 1;\n+   20|      0|\n+   21|      0|    let mut countdown = 0;\n+   22|      0|    if is_true {\n+   23|      0|        countdown = 10;\n+   24|      0|    }\n+   25|      0|}\n+   26|       |\n+   27|      1|fn main() {\n+   28|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+   29|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+   30|      1|    // dependent conditions.\n+   31|      1|    let is_true = std::env::args().len() == 1;\n+   32|      1|\n+   33|      1|    let mut countdown = 0;\n+   34|      1|    if is_true {\n+   35|      1|        countdown = 10;\n+   36|      1|    }\n+                   ^0\n+   37|      1|}\n+"}, {"sha": "fab5be41901c9b544ba12e3379b30cb96d331177", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.drop_trait.txt", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.drop_trait.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -11,11 +11,11 @@\n    11|      2|    }\n    12|       |}\n    13|       |\n-   14|       |fn main() -> Result<(),u8> {\n+   14|      1|fn main() -> Result<(),u8> {\n    15|      1|    let _firecracker = Firework { strength: 1 };\n    16|      1|\n    17|      1|    let _tnt = Firework { strength: 100 };\n-   18|       |\n+   18|      1|\n    19|      1|    if true {\n    20|      1|        println!(\"Exiting with error...\");\n    21|      1|        return Err(1);", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.drop_trait.txt"}, {"sha": "7b38ffb87cba89b257125b6585d09100014763df", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.generics.txt", "status": "renamed", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.generics.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -41,27 +41,31 @@\n   ------------------\n    20|       |}\n    21|       |\n-   22|       |fn main() -> Result<(),u8> {\n+   22|      1|fn main() -> Result<(),u8> {\n    23|      1|    let mut firecracker = Firework { strength: 1 };\n    24|      1|    firecracker.set_strength(2);\n    25|      1|\n    26|      1|    let mut tnt = Firework { strength: 100.1 };\n    27|      1|    tnt.set_strength(200.1);\n    28|      1|    tnt.set_strength(300.3);\n-   29|       |\n+   29|      1|\n    30|      1|    if true {\n    31|      1|        println!(\"Exiting with error...\");\n    32|      1|        return Err(1);\n-   33|       |    }\n-   34|       |\n-   35|       |    let _ = Firework { strength: 1000 };\n-   36|       |\n-   37|       |    Ok(())\n-   38|      1|}\n-   39|       |\n-   40|       |// Expected program output:\n-   41|       |//   Exiting with error...\n-   42|       |//   BOOM times 100!!!\n-   43|       |//   BOOM times 1!!!\n-   44|       |//   Error: 1\n+   33|       |    } // The remaining lines below have no coverage because `if true` (with the constant literal\n+   34|       |      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.\n+   35|       |      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown\n+   36|       |      // in other tests, the lines below would have coverage (which would show they had `0`\n+   37|       |      // executions, assuming the condition still evaluated to `true`).\n+   38|       |\n+   39|       |    let _ = Firework { strength: 1000 };\n+   40|       |\n+   41|       |    Ok(())\n+   42|      1|}\n+   43|       |\n+   44|       |// Expected program output:\n+   45|       |//   Exiting with error...\n+   46|       |//   BOOM times 100!!!\n+   47|       |//   BOOM times 1!!!\n+   48|       |//   Error: 1\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.generics.txt"}, {"sha": "0c9eff227ed0c562887f2bf0175b73529ece82cc", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.if.txt", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.if.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,10 +1,10 @@\n     1|       |#![allow(unused_assignments, unused_variables)]\n     2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n-    7|       |    let\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n+    7|      1|    let\n     8|      1|    is_true\n     9|      1|    =\n    10|      1|        std::env::args().len()\n@@ -16,8 +16,8 @@\n    16|      1|    countdown\n    17|      1|    =\n    18|      1|        0\n-   19|       |    ;\n-   20|       |    if\n+   19|      1|    ;\n+   20|      1|    if\n    21|      1|        is_true\n    22|      1|    {\n    23|      1|        countdown", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.if.txt"}, {"sha": "4285d31868689e7fd896bcb20711a9948bc9853a", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.if_else.txt", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.if_else.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,9 +1,9 @@\n-    1|       |#![allow(unused_assignments)]\n+    1|       |#![allow(unused_assignments, unused_variables)]\n     2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n     7|      1|    let is_true = std::env::args().len() == 1;\n     8|      1|\n     9|      1|    let mut countdown = 0;", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.if_else.txt"}, {"sha": "f5b5184044f65dccc327989669afe153a77edfb3", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.inner_items.txt", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inner_items.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,6 +1,6 @@\n-    1|       |#![allow(unused_assignments, unused_variables)]\n+    1|       |#![allow(unused_assignments, unused_variables, dead_code)]\n     2|       |\n-    3|       |fn main() {\n+    3|      1|fn main() {\n     4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n     5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n     6|       |    // dependent conditions.\n@@ -16,7 +16,7 @@\n    15|       |        const IN_MOD_CONST: u32 = 1000;\n    16|       |    }\n    17|       |\n-   18|       |    fn in_func(a: u32) {\n+   18|      3|    fn in_func(a: u32) {\n    19|      3|        let b = 1;\n    20|      3|        let c = a + b;\n    21|      3|        println!(\"c = {}\", c)\n@@ -38,7 +38,7 @@\n    37|       |    }\n    38|       |\n    39|       |    impl InTrait for InStruct {\n-   40|       |        fn trait_func(&mut self, incr: u32) {\n+   40|      1|        fn trait_func(&mut self, incr: u32) {\n    41|      1|            self.in_struct_field += incr;\n    42|      1|            in_func(self.in_struct_field);\n    43|      1|        }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.inner_items.txt"}, {"sha": "bd349df2fbce2bf300983e951bc23c3eebec1045", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.lazy_boolean.txt", "status": "renamed", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.lazy_boolean.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,9 +1,9 @@\n     1|       |#![allow(unused_assignments, unused_variables)]\n     2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n     7|      1|    let is_true = std::env::args().len() == 1;\n     8|      1|\n     9|      1|    let (mut a, mut b, mut c) = (0, 0, 0);\n@@ -18,8 +18,7 @@\n    17|       |        =\n    18|      1|            a < b\n    19|       |        ||\n-   20|      1|            b < c\n-                          ^0\n+   20|      0|            b < c\n    21|       |    ;\n    22|       |    let\n    23|      1|        somebool", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.lazy_boolean.txt"}, {"sha": "022fe4c596207ffe63b5523cbc8bff52fa77a215", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.loop_break_value.txt", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loop_break_value.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,4 +1,4 @@\n-    1|       |#![allow(unused_assignments)]\n+    1|       |#![allow(unused_assignments, unused_variables)]\n     2|       |\n     3|      1|fn main() {\n     4|      1|    let result", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.loop_break_value.txt"}, {"sha": "474f02b70073420a3d96cf403ba311bd90948d54", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.loops_branches.txt", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loops_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loops_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.loops_branches.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,12 +1,12 @@\n-    1|       |#![allow(unused_assignments)]\n+    1|       |#![allow(unused_assignments, unused_variables, while_true)]\n     2|       |\n     3|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n     4|       |// structure of this `fmt` function.\n     5|       |\n     6|       |struct DebugTest;\n     7|       |\n     8|       |impl std::fmt::Debug for DebugTest {\n-    9|       |    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+    9|      1|    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n    10|      1|        if true {\n    11|      1|            if false {\n    12|       |                while true {\n@@ -15,7 +15,7 @@\n    15|      1|            write!(f, \"error\")?;\n                                             ^0\n    16|       |        } else {\n-   17|      1|        }\n+   17|       |        }\n    18|      1|        Ok(())\n    19|      1|    }\n    20|       |}", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.loops_branches.txt"}, {"sha": "0dbd6bcf313e02beb681752227460ef51873902c", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.nested_loops.txt", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.nested_loops.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,4 +1,4 @@\n-    1|       |fn main() {\n+    1|      1|fn main() {\n     2|      1|    let is_true = std::env::args().len() == 1;\n     3|      1|    let mut countdown = 10;\n     4|       |\n@@ -8,19 +8,19 @@\n     8|      3|        for _ in 0..50 {\n     9|      3|            if a < 30 {\n    10|      0|                break;\n-   11|       |            }\n+   11|      3|            }\n    12|      3|            a -= 5;\n    13|      3|            b -= 5;\n    14|      3|            if b < 90 {\n    15|      1|                a -= 10;\n    16|      1|                if is_true {\n    17|      1|                    break 'outer;\n-   18|       |                } else {\n+   18|      0|                } else {\n    19|      0|                    a -= 2;\n    20|      0|                }\n    21|      2|            }\n-   22|      2|        }\n+   22|       |        }\n    23|      0|        countdown -= 1;\n-   24|      0|    }\n+   24|       |    }\n    25|      1|}\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.nested_loops.txt"}, {"sha": "4dccb3413eae9b9914448db31de8f3aca615bfa2", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.overflow.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.overflow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.overflow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.overflow.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,64 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|      4|fn might_overflow(to_add: u32) -> u32 {\n+    5|      4|    if to_add > 5 {\n+    6|      1|        println!(\"this will probably overflow\");\n+    7|      3|    }\n+    8|      4|    let add_to = u32::MAX - 5;\n+    9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+   10|      4|    let result = to_add + add_to;\n+   11|      4|    println!(\"continuing after overflow check\");\n+   12|      4|    result\n+   13|      4|}\n+   14|       |\n+   15|      1|fn main() -> Result<(),u8> {\n+   16|      1|    let mut countdown = 10;\n+   17|     10|    while countdown > 0 {\n+   18|     10|        if countdown == 1 {\n+   19|      0|            let result = might_overflow(10);\n+   20|      0|            println!(\"Result: {}\", result);\n+   21|     10|        } else if countdown < 5 {\n+   22|      3|            let result = might_overflow(1);\n+   23|      3|            println!(\"Result: {}\", result);\n+   24|      6|        }\n+   25|      9|        countdown -= 1;\n+   26|       |    }\n+   27|      0|    Ok(())\n+   28|      0|}\n+   29|       |\n+   30|       |// Notes:\n+   31|       |//   1. Compare this program and its coverage results to those of the very similar test `assert.rs`,\n+   32|       |//      and similar tests `panic_unwind.rs`, abort.rs` and `try_error_result.rs`.\n+   33|       |//   2. This test confirms the coverage generated when a program passes or fails a\n+   34|       |//      compiler-generated `TerminatorKind::Assert` (based on an overflow check, in this case).\n+   35|       |//   3. Similar to how the coverage instrumentation handles `TerminatorKind::Call`,\n+   36|       |//      compiler-generated assertion failures are assumed to be a symptom of a program bug, not\n+   37|       |//      expected behavior. To simplify the coverage graphs and keep instrumented programs as\n+   38|       |//      small and fast as possible, `Assert` terminators are assumed to always succeed, and\n+   39|       |//      therefore are considered \"non-branching\" terminators. So, an `Assert` terminator does not\n+   40|       |//      get its own coverage counter.\n+   41|       |//   4. After an unhandled panic or failed Assert, coverage results may not always be intuitive.\n+   42|       |//      In this test, the final count for the statements after the `if` block in `might_overflow()`\n+   43|       |//      is 4, even though the lines after `to_add + add_to` were executed only 3 times. Depending\n+   44|       |//      on the MIR graph and the structure of the code, this count could have been 3 (which might\n+   45|       |//      have been valid for the overflowed add `+`, but should have been 4 for the lines before\n+   46|       |//      the overflow. The reason for this potential uncertainty is, a `CounterKind` is incremented\n+   47|       |//      via StatementKind::Counter at the end of the block, but (as in the case in this test),\n+   48|       |//      a CounterKind::Expression is always evaluated. In this case, the expression was based on\n+   49|       |//      a `Counter` incremented as part of the evaluation of the `if` expression, which was\n+   50|       |//      executed, and counted, 4 times, before reaching the overflow add.\n+   51|       |\n+   52|       |// If the program did not overflow, the coverage for `might_overflow()` would look like this:\n+   53|       |//\n+   54|       |//     4|       |fn might_overflow(to_add: u32) -> u32 {\n+   55|       |//     5|      4|    if to_add > 5 {\n+   56|       |//     6|      0|        println!(\"this will probably overflow\");\n+   57|       |//     7|      4|    }\n+   58|       |//     8|      4|    let add_to = u32::MAX - 5;\n+   59|       |//     9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+   60|       |//    10|      4|    let result = to_add + add_to;\n+   61|       |//    11|      4|    println!(\"continuing after overflow check\");\n+   62|       |//    12|      4|    result\n+   63|       |//    13|      4|}\n+"}, {"sha": "9ae78fee4b5e1fdb190a9b15b79195ed8a158aa7", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.panic_unwind.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.panic_unwind.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.panic_unwind.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.panic_unwind.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,50 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|      4|fn might_panic(should_panic: bool) {\n+    5|      4|    if should_panic {\n+    6|      1|        println!(\"panicking...\");\n+    7|      1|        panic!(\"panics\");\n+    8|      3|    } else {\n+    9|      3|        println!(\"Don't Panic\");\n+   10|      3|    }\n+   11|      3|}\n+   12|       |\n+   13|      1|fn main() -> Result<(), u8> {\n+   14|      1|    let mut countdown = 10;\n+   15|     10|    while countdown > 0 {\n+   16|     10|        if countdown == 1 {\n+   17|      0|            might_panic(true);\n+   18|     10|        } else if countdown < 5 {\n+   19|      3|            might_panic(false);\n+   20|      6|        }\n+   21|      9|        countdown -= 1;\n+   22|       |    }\n+   23|      0|    Ok(())\n+   24|      0|}\n+   25|       |\n+   26|       |// Notes:\n+   27|       |//   1. Compare this program and its coverage results to those of the similar tests `abort.rs` and\n+   28|       |//      `try_error_result.rs`.\n+   29|       |//   2. Since the `panic_unwind.rs` test is allowed to unwind, it is also allowed to execute the\n+   30|       |//      normal program exit cleanup, including writing out the current values of the coverage\n+   31|       |//      counters.\n+   32|       |//   3. The coverage results show (interestingly) that the `panic!()` call did execute, but it does\n+   33|       |//      not show coverage of the `if countdown == 1` branch in `main()` that calls\n+   34|       |//      `might_panic(true)` (causing the call to `panic!()`).\n+   35|       |//   4. The reason `main()`s `if countdown == 1` branch, calling `might_panic(true)`, appears\n+   36|       |//      \"uncovered\" is, InstrumentCoverage (intentionally) treats `TerminatorKind::Call` terminators\n+   37|       |//      as non-branching, because when a program executes normally, they always are. Errors handled\n+   38|       |//      via the try `?` operator produce error handling branches that *are* treated as branches in\n+   39|       |//      coverage results. By treating calls without try `?` operators as non-branching (assumed to\n+   40|       |//      return normally and continue) the coverage graph can be simplified, producing smaller,\n+   41|       |//      faster binaries, and cleaner coverage results.\n+   42|       |//   5. The reason the coverage results actually show `panic!()` was called is most likely because\n+   43|       |//      `panic!()` is a macro, not a simple function call, and there are other `Statement`s and/or\n+   44|       |//      `Terminator`s that execute with a coverage counter before the panic and unwind occur.\n+   45|       |//   6. Since the common practice is not to use `panic!()` for error handling, the coverage\n+   46|       |//      implementation avoids incurring an additional cost (in program size and execution time) to\n+   47|       |//      improve coverage results for an event that is generally not \"supposed\" to happen.\n+   48|       |//   7. FIXME(#78544): This issue describes a feature request for a proposed option to enable\n+   49|       |//      more accurate coverage results for tests that intentionally panic.\n+"}, {"sha": "0fe124f12d906a366569214d1622764287118777", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.partial_eq.txt", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.partial_eq.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,63 @@\n+    1|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+    2|       |// structure of this test.\n+    3|       |\n+    4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+                       ^0            ^0      ^0 ^0  ^1       ^0 ^0^0\n+    5|       |pub struct Version {\n+    6|       |    major: usize,\n+    7|      1|    minor: usize, // Count: 1 - `PartialOrd` compared `minor` values in 3.2.1 vs. 3.3.0\n+    8|      0|    patch: usize, // Count: 0 - `PartialOrd` was determined by `minor` (2 < 3)\n+    9|       |}\n+   10|       |\n+   11|       |impl Version {\n+   12|      2|    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+   13|      2|        Self {\n+   14|      2|            major,\n+   15|      2|            minor,\n+   16|      2|            patch,\n+   17|      2|        }\n+   18|      2|    }\n+   19|       |}\n+   20|       |\n+   21|      1|fn main() {\n+   22|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n+   23|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n+   24|      1|\n+   25|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version_3_3_0);\n+   26|      1|}\n+   27|       |\n+   28|       |/*\n+   29|       |\n+   30|       |This test verifies a bug was fixed that otherwise generated this error:\n+   31|       |\n+   32|       |thread 'rustc' panicked at 'No counters provided the source_hash for function:\n+   33|       |    Instance {\n+   34|       |        def: Item(WithOptConstParam {\n+   35|       |            did: DefId(0:101 ~ autocfg[c44a]::version::{impl#2}::partial_cmp),\n+   36|       |            const_param_did: None\n+   37|       |        }),\n+   38|       |        substs: []\n+   39|       |    }'\n+   40|       |The `PartialOrd` derived by `Version` happened to generate a MIR that generated coverage\n+   41|       |without a code region associated with any `Counter`. Code regions were associated with at least\n+   42|       |one expression, which is allowed, but the `function_source_hash` was only passed to the codegen\n+   43|       |(coverage mapgen) phase from a `Counter`s code region. A new method was added to pass the\n+   44|       |`function_source_hash` without a code region, if necessary.\n+   45|       |\n+   46|       |*/\n+   47|       |\n+   48|       |// FIXME(#79626): The derived traits get coverage, which is great, but some of the traits appear\n+   49|       |// to get two coverage execution counts at different positions:\n+   50|       |//\n+   51|       |// ```text\n+   52|       |//    4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+   53|       |//                       ^0            ^0      ^0 ^0  ^1       ^0 ^0^0\n+   54|       |// ```text\n+   55|       |//\n+   56|       |// `PartialEq`, `PartialOrd`, and `Ord` (and possibly `Eq`, if the trait name was longer than 2\n+   57|       |// characters) have counts at their first and last characters.\n+   58|       |//\n+   59|       |// Why is this? Why does `PartialOrd` have two values (1 and 0)? This must mean we are checking\n+   60|       |// distinct coverages, so maybe we don't want to eliminate one of them. Should we merge them?\n+   61|       |// If merged, do we lose some information?\n+"}, {"sha": "feb83bad674d010237ce81064c8e4a8b1aa43048", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.simple_loop.txt", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.simple_loop.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,14 +1,14 @@\n     1|       |#![allow(unused_assignments)]\n     2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n     7|      1|    let is_true = std::env::args().len() == 1;\n     8|      1|\n     9|      1|    let mut countdown = 0;\n-   10|       |\n-   11|       |    if\n+   10|      1|\n+   11|      1|    if\n    12|      1|        is_true\n    13|      1|    {\n    14|      1|        countdown\n@@ -27,11 +27,11 @@\n    26|       |        {\n    27|      1|            break\n    28|       |            ;\n-   29|       |        }\n+   29|     10|        }\n    30|     10|        countdown\n    31|     10|        -=\n    32|     10|        1\n    33|       |        ;\n-   34|      1|    }\n+   34|       |    }\n    35|      1|}\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.simple_loop.txt"}, {"sha": "81b4c090a46c0e7bfd18d2910f02699831b43d7c", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.simple_match.txt", "status": "renamed", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.simple_match.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,9 +1,9 @@\n-    1|       |#![allow(unused_assignments)]\n+    1|       |#![allow(unused_assignments, unused_variables)]\n     2|       |\n-    3|       |fn main() {\n-    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n-    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n-    6|       |    // dependent conditions.\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n     7|      1|    let is_true = std::env::args().len() == 1;\n     8|      1|\n     9|      1|    let mut countdown = 1;\n@@ -27,7 +27,6 @@\n    26|      2|                x\n    27|      2|                    <\n    28|      2|                1\n-                               ^1\n    29|       |            =>\n    30|      1|            {\n    31|      1|                z = countdown\n@@ -41,6 +40,6 @@\n    39|       |            =>\n    40|      1|            {}\n    41|       |        }\n-   42|      3|    }\n+   42|       |    }\n    43|      1|}\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.simple_match.txt"}, {"sha": "5adeef7d0850b462b369da348651e695db38307b", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.tight_inf_loop.txt", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.tight_inf_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.tight_inf_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.tight_inf_loop.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,6 +1,6 @@\n-    1|       |fn main() {\n+    1|      1|fn main() {\n     2|      1|    if false {\n     3|       |        loop {}\n-    4|       |    }\n+    4|      1|    }\n     5|      1|}\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.tight_inf_loop.txt"}, {"sha": "c9ebffde039d842ecd660154a5383e5abf2cf917", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.try_error_result.txt", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.try_error_result.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,15 +1,15 @@\n     1|       |#![allow(unused_assignments)]\n     2|       |// expect-exit-status-1\n     3|       |\n-    4|       |fn call(return_error: bool) -> Result<(),()> {\n+    4|      6|fn call(return_error: bool) -> Result<(),()> {\n     5|      6|    if return_error {\n     6|      1|        Err(())\n     7|       |    } else {\n     8|      5|        Ok(())\n     9|       |    }\n    10|      6|}\n    11|       |\n-   12|       |fn main() -> Result<(),()> {\n+   12|      1|fn main() -> Result<(),()> {\n    13|      1|    let mut\n    14|      1|        countdown = 10\n    15|       |    ;\n@@ -31,8 +31,8 @@\n    31|       |        {\n    32|      5|            call(/*return_error=*/ false)?;\n                                                        ^0\n-   33|      5|        }\n-   34|      5|    }\n+   33|       |        }\n+   34|       |    }\n    35|      0|    Ok(())\n    36|      1|}\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.try_error_result.txt"}, {"sha": "e14e733fff6d4cbe55f76924985cb802434c4a49", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.uses_crate.txt", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,142 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |use std::fmt::Debug;\n+    4|       |\n+    5|      1|pub fn used_function() {\n+    6|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    7|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    8|       |    // dependent conditions.\n+    9|      1|    let is_true = std::env::args().len() == 1;\n+   10|      1|    let mut countdown = 0;\n+   11|      1|    if is_true {\n+   12|      1|        countdown = 10;\n+   13|      1|    }\n+                   ^0\n+   14|      1|    use_this_lib_crate();\n+   15|      1|}\n+   16|       |\n+   17|      2|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {\n+   18|      2|    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);\n+   19|      2|}\n+  ------------------\n+  | used_crate::used_only_from_bin_crate_generic_function::<&str>:\n+  |   17|      1|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {\n+  |   18|      1|    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);\n+  |   19|      1|}\n+  ------------------\n+  | used_crate::used_only_from_bin_crate_generic_function::<&alloc::vec::Vec<i32>>:\n+  |   17|      1|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {\n+  |   18|      1|    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);\n+  |   19|      1|}\n+  ------------------\n+   20|       |\n+   21|      2|pub fn used_only_from_this_lib_crate_generic_function<T: Debug>(arg: T) {\n+   22|      2|    println!(\"used_only_from_this_lib_crate_generic_function with {:?}\", arg);\n+   23|      2|}\n+  ------------------\n+  | used_crate::used_only_from_this_lib_crate_generic_function::<alloc::vec::Vec<i32>>:\n+  |   21|      1|pub fn used_only_from_this_lib_crate_generic_function<T: Debug>(arg: T) {\n+  |   22|      1|    println!(\"used_only_from_this_lib_crate_generic_function with {:?}\", arg);\n+  |   23|      1|}\n+  ------------------\n+  | used_crate::used_only_from_this_lib_crate_generic_function::<&str>:\n+  |   21|      1|pub fn used_only_from_this_lib_crate_generic_function<T: Debug>(arg: T) {\n+  |   22|      1|    println!(\"used_only_from_this_lib_crate_generic_function with {:?}\", arg);\n+  |   23|      1|}\n+  ------------------\n+   24|       |\n+   25|      2|pub fn used_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {\n+   26|      2|    println!(\"used_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);\n+   27|      2|}\n+  ------------------\n+  | used_crate::used_from_bin_crate_and_lib_crate_generic_function::<alloc::vec::Vec<i32>>:\n+  |   25|      1|pub fn used_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {\n+  |   26|      1|    println!(\"used_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);\n+  |   27|      1|}\n+  ------------------\n+  | used_crate::used_from_bin_crate_and_lib_crate_generic_function::<&str>:\n+  |   25|      1|pub fn used_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {\n+  |   26|      1|    println!(\"used_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);\n+  |   27|      1|}\n+  ------------------\n+   28|       |\n+   29|      2|pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {\n+   30|      2|    println!(\"used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);\n+   31|      2|}\n+   32|       |\n+   33|      0|pub fn unused_generic_function<T: Debug>(arg: T) {\n+   34|      0|    println!(\"unused_generic_function with {:?}\", arg);\n+   35|      0|}\n+   36|       |\n+   37|      0|pub fn unused_function() {\n+   38|      0|    let is_true = std::env::args().len() == 1;\n+   39|      0|    let mut countdown = 2;\n+   40|      0|    if !is_true {\n+   41|      0|        countdown = 20;\n+   42|      0|    }\n+   43|      0|}\n+   44|       |\n+   45|      0|fn unused_private_function() {\n+   46|      0|    let is_true = std::env::args().len() == 1;\n+   47|      0|    let mut countdown = 2;\n+   48|      0|    if !is_true {\n+   49|      0|        countdown = 20;\n+   50|      0|    }\n+   51|      0|}\n+   52|       |\n+   53|      1|fn use_this_lib_crate() {\n+   54|      1|    used_from_bin_crate_and_lib_crate_generic_function(\"used from library used_crate.rs\");\n+   55|      1|    used_with_same_type_from_bin_crate_and_lib_crate_generic_function(\n+   56|      1|        \"used from library used_crate.rs\",\n+   57|      1|    );\n+   58|      1|    let some_vec = vec![5, 6, 7, 8];\n+   59|      1|    used_only_from_this_lib_crate_generic_function(some_vec);\n+   60|      1|    used_only_from_this_lib_crate_generic_function(\"used ONLY from library used_crate.rs\");\n+   61|      1|}\n+  ------------------\n+  | Unexecuted instantiation: used_crate::use_this_lib_crate\n+  ------------------\n+   62|       |\n+   63|       |// FIXME(#79651): `used_from_bin_crate_and_lib_crate_generic_function()` is covered and executed\n+   64|       |// `2` times, but the coverage output also shows (at the bottom of the coverage report):\n+   65|       |//  ------------------\n+   66|       |//  | Unexecuted instantiation: <some function name here>\n+   67|       |//  ------------------\n+   68|       |//\n+   69|       |// Note, the function name shown in the error seems to change depending on the structure of the\n+   70|       |// code, for some reason, including:\n+   71|       |//\n+   72|       |// * used_crate::used_from_bin_crate_and_lib_crate_generic_function::<&str>\n+   73|       |// * used_crate::use_this_lib_crate\n+   74|       |//\n+   75|       |// The `Unexecuted instantiation` error may be related to more than one generic function. Since the\n+   76|       |// reporting is not consistent, it may not be obvious if there are multiple problems here; however,\n+   77|       |// `used_crate::used_from_bin_crate_and_lib_crate_generic_function::<&str>` (which I have seen\n+   78|       |// with this error) is the only generic function missing instantiaion coverage counts.\n+   79|       |//\n+   80|       |// The `&str` variant was called from within this `lib` crate, and the `bin` crate also calls this\n+   81|       |// function, but with `T` type `&Vec<i32>`.\n+   82|       |//\n+   83|       |// I believe the reason is that one or both crates are generating `Zero` counters for what it\n+   84|       |// believes are \"Unreachable\" instantiations, but those instantiations are counted from the\n+   85|       |// coverage map in the other crate.\n+   86|       |//\n+   87|       |// See `add_unreachable_coverage()` in `mapgen.rs` for more on how these `Zero` counters are added\n+   88|       |// for what the funciton believes are `DefId`s that did not get codegenned. I suspect the issue\n+   89|       |// may be related to this process, but this needs to be confirmed. It may not be possible to know\n+   90|       |// for sure if a function is truly unused and should be reported with `Zero` coverage if it may\n+   91|       |// still get used from an external crate. (Something to look at: If the `DefId` in MIR corresponds\n+   92|       |// _only_ to the generic function without type parameters, is the `DefId` in the codegenned set,\n+   93|       |// instantiated with one of the type parameters (in either or both crates) a *different* `DefId`?\n+   94|       |// If so, `add_unreachable_coverage()` would assume the MIR `DefId` was uncovered, and would add\n+   95|       |// unreachable coverage.\n+   96|       |//\n+   97|       |// I didn't think they could be different, but if they can, we would need to find the `DefId` for\n+   98|       |// the generic function MIR and include it in the set of \"codegenned\" DefIds if any instantiation\n+   99|       |// of that generic function does exist.\n+  100|       |//\n+  101|       |// Note, however, for `used_with_same_type_from_bin_crate_and_lib_crate_generic_function()` both\n+  102|       |// crates use this function with the same type variant. The function does not have multiple\n+  103|       |// instantiations, so the coverage analysis is not confused. No \"Unexecuted instantiations\" errors\n+  104|       |// are reported.\n+"}, {"sha": "efa7d083f0c6fd8af567d79852ba3c39ce6dd906", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.while.txt", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.while.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,4 +1,4 @@\n-    1|       |fn main() {\n+    1|      1|fn main() {\n     2|      1|    let num = 9;\n     3|      1|    while num >= 10 {\n     4|      0|    }", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.while.txt"}, {"sha": "d19afc0de61d390d4bfec2ad7ceda2852266f385", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.while_early_ret.txt", "status": "renamed", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.while_early_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.while_early_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.while_early_ret.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,7 +1,7 @@\n     1|       |#![allow(unused_assignments)]\n     2|       |// expect-exit-status-1\n     3|       |\n-    4|       |fn main() -> Result<(),u8> {\n+    4|      1|fn main() -> Result<(),u8> {\n     5|      1|    let mut countdown = 10;\n     6|       |    while\n     7|      7|        countdown\n@@ -26,7 +26,7 @@\n    26|      1|                    Err(1)\n    27|       |                }\n    28|       |                ;\n-   29|       |        }\n+   29|      6|        }\n    30|      6|        countdown\n    31|      6|            -=\n    32|      6|        1\n@@ -40,9 +40,4 @@\n    40|       |// and MacOS. But on Windows (MSVC, at least), the call to `std::process::exit()` exits the program\n    41|       |// without saving the InstrProf coverage counters. The use of `std::process:exit()` is not critical\n    42|       |// to the coverage test for early returns, but this is a limitation that should be fixed.\n-   43|       |//\n-   44|       |// FIXME(richkadel): Consider creating a new tests for coverage when calling `std::process::exit()`,\n-   45|       |// move the `ISSUE` comment to that test, and implement a new test directive that supports skipping\n-   46|       |// coverage tests when targeting specific platforms (at least skipping Windows, or MSVC if the\n-   47|       |// problem exists on MSVC only).\n ", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.while_early_ret.txt"}, {"sha": "6e2f23ee77b8df0426ef4aba9b09bdb20dfc6d32", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.yield.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.yield.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.yield.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.yield.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,38 @@\n+    1|       |#![feature(generators, generator_trait)]\n+    2|       |#![allow(unused_assignments)]\n+    3|       |\n+    4|       |use std::ops::{Generator, GeneratorState};\n+    5|       |use std::pin::Pin;\n+    6|       |\n+    7|      1|fn main() {\n+    8|      1|    let mut generator = || {\n+    9|      1|        yield 1;\n+   10|      1|        return \"foo\"\n+   11|      1|    };\n+   12|       |\n+   13|      1|    match Pin::new(&mut generator).resume(()) {\n+   14|      1|        GeneratorState::Yielded(1) => {}\n+   15|      0|        _ => panic!(\"unexpected value from resume\"),\n+   16|       |    }\n+   17|      1|    match Pin::new(&mut generator).resume(()) {\n+   18|      1|        GeneratorState::Complete(\"foo\") => {}\n+   19|      0|        _ => panic!(\"unexpected value from resume\"),\n+   20|       |    }\n+   21|       |\n+   22|      1|    let mut generator = || {\n+   23|      1|        yield 1;\n+   24|      1|        yield 2;\n+   25|      0|        yield 3;\n+   26|      0|        return \"foo\"\n+   27|      0|    };\n+   28|       |\n+   29|      1|    match Pin::new(&mut generator).resume(()) {\n+   30|      1|        GeneratorState::Yielded(1) => {}\n+   31|      0|        _ => panic!(\"unexpected value from resume\"),\n+   32|       |    }\n+   33|      1|    match Pin::new(&mut generator).resume(()) {\n+   34|      1|        GeneratorState::Yielded(2) => {}\n+   35|      0|        _ => panic!(\"unexpected value from resume\"),\n+   36|       |    }\n+   37|      1|}\n+"}, {"sha": "cbf7462eba5e6e8067392128981535c4ba90573e", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.abort.txt", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.abort.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.abort.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.abort.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,67 @@\n+Counter in file 0 14:1 -> 15:27, #1\n+Counter in file 0 16:11 -> 16:24, (#1 + (#2 + #3))\n+Counter in file 0 17:12 -> 17:25, ((#1 + (#2 + #3)) - #4)\n+Counter in file 0 17:26 -> 19:10, #5\n+Counter in file 0 19:10 -> 19:11, (((#1 + (#2 + #3)) - #4) - #5)\n+Counter in file 0 21:12 -> 21:25, (#5 + (((#1 + (#2 + #3)) - #4) - #5))\n+Counter in file 0 21:26 -> 21:49, #6\n+Counter in file 0 21:49 -> 21:50, ((#5 + (((#1 + (#2 + #3)) - #4) - #5)) - #6)\n+Counter in file 0 25:12 -> 25:25, (#6 + ((#5 + (((#1 + (#2 + #3)) - #4) - #5)) - #6))\n+Counter in file 0 25:26 -> 25:49, #2\n+Counter in file 0 25:49 -> 25:50, #3\n+Counter in file 0 26:9 -> 26:23, (#2 + #3)\n+Counter in file 0 28:5 -> 29:2, #4\n+Counter in file 0 5:1 -> 5:36, #1\n+Counter in file 0 6:8 -> 6:20, (#1 + 0)\n+Counter in file 0 7:9 -> 8:37, #2\n+Counter in file 0 9:12 -> 12:2, (#1 - #2)\n+Emitting segments for file: ../coverage/abort.rs\n+Combined regions:\n+  5:1 -> 5:36 (count=12)\n+  6:8 -> 6:20 (count=12)\n+  7:9 -> 8:37 (count=0)\n+  9:12 -> 12:2 (count=12)\n+  14:1 -> 15:27 (count=1)\n+  16:11 -> 16:24 (count=11)\n+  17:12 -> 17:25 (count=10)\n+  17:26 -> 19:10 (count=4)\n+  19:10 -> 19:11 (count=6)\n+  21:12 -> 21:25 (count=10)\n+  21:26 -> 21:49 (count=4)\n+  21:49 -> 21:50 (count=6)\n+  25:12 -> 25:25 (count=10)\n+  25:26 -> 25:49 (count=4)\n+  25:49 -> 25:50 (count=6)\n+  26:9 -> 26:23 (count=10)\n+  28:5 -> 29:2 (count=1)\n+Segment at 5:1 (count = 12), RegionEntry\n+Segment at 5:36 (count = 0), Skipped\n+Segment at 6:8 (count = 12), RegionEntry\n+Segment at 6:20 (count = 0), Skipped\n+Segment at 7:9 (count = 0), RegionEntry\n+Segment at 8:37 (count = 0), Skipped\n+Segment at 9:12 (count = 12), RegionEntry\n+Segment at 12:2 (count = 0), Skipped\n+Segment at 14:1 (count = 1), RegionEntry\n+Segment at 15:27 (count = 0), Skipped\n+Segment at 16:11 (count = 11), RegionEntry\n+Segment at 16:24 (count = 0), Skipped\n+Segment at 17:12 (count = 10), RegionEntry\n+Segment at 17:25 (count = 0), Skipped\n+Segment at 17:26 (count = 4), RegionEntry\n+Segment at 19:10 (count = 6), RegionEntry\n+Segment at 19:11 (count = 0), Skipped\n+Segment at 21:12 (count = 10), RegionEntry\n+Segment at 21:25 (count = 0), Skipped\n+Segment at 21:26 (count = 4), RegionEntry\n+Segment at 21:49 (count = 6), RegionEntry\n+Segment at 21:50 (count = 0), Skipped\n+Segment at 25:12 (count = 10), RegionEntry\n+Segment at 25:25 (count = 0), Skipped\n+Segment at 25:26 (count = 4), RegionEntry\n+Segment at 25:49 (count = 6), RegionEntry\n+Segment at 25:50 (count = 0), Skipped\n+Segment at 26:9 (count = 10), RegionEntry\n+Segment at 26:23 (count = 0), Skipped\n+Segment at 28:5 (count = 1), RegionEntry\n+Segment at 29:2 (count = 0), Skipped"}, {"sha": "916ebbbcc29d3f04515b8935b295a49df45a9522", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.assert.txt", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.assert.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.assert.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.assert.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,57 @@\n+Counter in file 0 9:1 -> 10:27, #1\n+Counter in file 0 11:11 -> 11:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 12:12 -> 12:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 12:27 -> 14:10, #2\n+Counter in file 0 14:19 -> 14:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 14:33 -> 16:10, #3\n+Counter in file 0 16:10 -> 16:11, #4\n+Counter in file 0 17:9 -> 17:23, (#2 + (#3 + #4))\n+Counter in file 0 19:5 -> 20:2, #5\n+Counter in file 0 4:1 -> 4:41, #1\n+Counter in file 0 5:5 -> 5:48, (#1 + 0)\n+Counter in file 0 6:16 -> 6:21, (#1 + 0)\n+Counter in file 0 6:37 -> 6:61, #2\n+Counter in file 0 7:1 -> 7:2, (#1 - #2)\n+Emitting segments for file: ../coverage/assert.rs\n+Combined regions:\n+  4:1 -> 4:41 (count=4)\n+  5:5 -> 5:48 (count=4)\n+  6:16 -> 6:21 (count=4)\n+  6:37 -> 6:61 (count=1)\n+  7:1 -> 7:2 (count=3)\n+  9:1 -> 10:27 (count=1)\n+  11:11 -> 11:24 (count=10)\n+  12:12 -> 12:26 (count=10)\n+  12:27 -> 14:10 (count=0)\n+  14:19 -> 14:32 (count=10)\n+  14:33 -> 16:10 (count=3)\n+  16:10 -> 16:11 (count=6)\n+  17:9 -> 17:23 (count=9)\n+  19:5 -> 20:2 (count=0)\n+Segment at 4:1 (count = 4), RegionEntry\n+Segment at 4:41 (count = 0), Skipped\n+Segment at 5:5 (count = 4), RegionEntry\n+Segment at 5:48 (count = 0), Skipped\n+Segment at 6:16 (count = 4), RegionEntry\n+Segment at 6:21 (count = 0), Skipped\n+Segment at 6:37 (count = 1), RegionEntry\n+Segment at 6:61 (count = 0), Skipped\n+Segment at 7:1 (count = 3), RegionEntry\n+Segment at 7:2 (count = 0), Skipped\n+Segment at 9:1 (count = 1), RegionEntry\n+Segment at 10:27 (count = 0), Skipped\n+Segment at 11:11 (count = 10), RegionEntry\n+Segment at 11:24 (count = 0), Skipped\n+Segment at 12:12 (count = 10), RegionEntry\n+Segment at 12:26 (count = 0), Skipped\n+Segment at 12:27 (count = 0), RegionEntry\n+Segment at 14:10 (count = 0), Skipped\n+Segment at 14:19 (count = 10), RegionEntry\n+Segment at 14:32 (count = 0), Skipped\n+Segment at 14:33 (count = 3), RegionEntry\n+Segment at 16:10 (count = 6), RegionEntry\n+Segment at 16:11 (count = 0), Skipped\n+Segment at 17:9 (count = 9), RegionEntry\n+Segment at 17:23 (count = 0), Skipped\n+Segment at 19:5 (count = 0), RegionEntry\n+Segment at 20:2 (count = 0), Skipped"}, {"sha": "82a4457b6ef1eb39c3eb4155101ce550fccc97a4", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.async.txt", "status": "added", "additions": 311, "deletions": 0, "changes": 311, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.async.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,311 @@\n+Counter in file 0 13:1 -> 13:20, #1\n+Counter in file 0 15:1 -> 15:20, 0\n+Counter in file 0 15:20 -> 15:21, 0\n+Counter in file 0 19:1 -> 19:30, 0\n+Counter in file 0 19:30 -> 19:31, 0\n+Counter in file 0 21:23 -> 22:12, 0\n+Counter in file 0 23:9 -> 23:10, 0\n+Counter in file 0 23:14 -> 23:17, 0\n+Counter in file 0 23:27 -> 23:28, 0\n+Counter in file 0 23:32 -> 23:34, 0\n+Counter in file 0 24:9 -> 24:10, 0\n+Counter in file 0 24:14 -> 24:17, 0\n+Counter in file 0 24:27 -> 24:28, 0\n+Counter in file 0 24:32 -> 24:34, 0\n+Counter in file 0 25:14 -> 25:16, 0\n+Counter in file 0 27:1 -> 27:2, 0\n+Counter in file 0 29:22 -> 32:12, 0\n+Counter in file 0 33:9 -> 33:10, 0\n+Counter in file 0 33:14 -> 33:19, 0\n+Counter in file 0 33:26 -> 33:27, 0\n+Counter in file 0 33:32 -> 33:34, 0\n+Counter in file 0 34:14 -> 34:16, 0\n+Counter in file 0 36:1 -> 36:2, 0\n+Counter in file 0 75:1 -> 76:12, 0\n+Counter in file 0 77:14 -> 77:16, 0\n+Counter in file 0 78:14 -> 78:16, 0\n+Counter in file 0 79:14 -> 79:16, 0\n+Counter in file 0 81:1 -> 81:2, 0\n+Counter in file 0 91:25 -> 91:34, 0\n+Counter in file 0 5:1 -> 5:25, #1\n+Counter in file 0 21:1 -> 21:23, #1\n+Counter in file 0 17:20 -> 17:21, #1\n+Counter in file 0 67:5 -> 67:23, #1\n+Counter in file 0 38:1 -> 38:19, #1\n+Counter in file 0 13:20 -> 13:21, #1\n+Counter in file 0 29:1 -> 29:22, #1\n+Counter in file 0 93:1 -> 101:2, #1\n+Counter in file 0 91:1 -> 91:25, #1\n+Counter in file 0 5:25 -> 6:14, #1\n+Counter in file 0 7:9 -> 7:10, #2\n+Counter in file 0 9:9 -> 9:10, (#1 - #2)\n+Counter in file 0 11:1 -> 11:2, (#2 + (#1 - #2))\n+Counter in file 0 38:19 -> 42:12, #1\n+Counter in file 0 43:9 -> 43:10, #3\n+Counter in file 0 43:14 -> 43:18, (#1 + 0)\n+Counter in file 0 43:28 -> 43:33, #2\n+Counter in file 0 43:39 -> 43:42, (#3 + 0)\n+Counter in file 0 44:9 -> 44:10, #6\n+Counter in file 0 44:14 -> 44:17, #4\n+Counter in file 0 44:27 -> 44:32, #8\n+Counter in file 0 44:36 -> 44:38, (#6 + 0)\n+Counter in file 0 45:14 -> 45:16, #7\n+Counter in file 0 47:1 -> 47:2, (#5 + (#6 + #7))\n+Counter in file 0 51:5 -> 52:18, #1\n+Counter in file 0 53:13 -> 53:14, #2\n+Counter in file 0 63:13 -> 63:14, (#1 - #2)\n+Counter in file 0 65:5 -> 65:6, (#2 + (#1 - #2))\n+Counter in file 0 49:1 -> 68:12, #1\n+Counter in file 0 69:9 -> 69:10, #2\n+Counter in file 0 69:14 -> 69:27, (#1 + 0)\n+Counter in file 0 69:31 -> 69:39, (#2 + 0)\n+Counter in file 0 70:9 -> 70:10, #3\n+Counter in file 0 70:14 -> 70:26, #5\n+Counter in file 0 70:30 -> 70:32, (#3 + 0)\n+Counter in file 0 71:14 -> 71:16, #4\n+Counter in file 0 73:1 -> 73:2, (#2 + (#3 + #4))\n+Counter in file 0 83:1 -> 84:12, #1\n+Counter in file 0 85:14 -> 85:16, (#1 - (#3 + #2))\n+Counter in file 0 86:14 -> 86:16, #2\n+Counter in file 0 87:14 -> 87:16, #3\n+Counter in file 0 89:1 -> 89:2, (#3 + (#2 + (#1 - (#3 + #2))))\n+Counter in file 0 17:1 -> 17:20, #1\n+Counter in file 0 66:5 -> 66:23, #1\n+Counter in file 0 17:9 -> 17:10, #1\n+Counter in file 0 17:9 -> 17:10, #1\n+Counter in file 0 117:17 -> 117:19, #1\n+Counter in file 0 17:9 -> 17:10, #1\n+Counter in file 0 110:5 -> 120:54, #1\n+Counter in file 0 123:32 -> 123:35, ((#1 + #2) - #2)\n+Counter in file 0 123:39 -> 123:73, (#1 + #2)\n+Counter in file 0 124:23 -> 124:26, (((#1 + #2) - #2) + 0)\n+Counter in file 0 125:14 -> 125:15, #2\n+Counter in file 0 127:5 -> 127:6, (((#1 + #2) - #2) + 0)\n+Emitting segments for file: ../coverage/async.rs\n+Combined regions:\n+  5:1 -> 5:25 (count=1)\n+  5:25 -> 6:14 (count=1)\n+  7:9 -> 7:10 (count=1)\n+  9:9 -> 9:10 (count=0)\n+  11:1 -> 11:2 (count=1)\n+  13:1 -> 13:20 (count=0)\n+  15:1 -> 15:20 (count=0)\n+  15:20 -> 15:21 (count=0)\n+  17:1 -> 17:20 (count=1)\n+  17:20 -> 17:21 (count=1)\n+  19:1 -> 19:30 (count=0)\n+  19:30 -> 19:31 (count=0)\n+  21:1 -> 21:23 (count=1)\n+  21:23 -> 22:12 (count=0)\n+  23:9 -> 23:10 (count=0)\n+  23:14 -> 23:17 (count=0)\n+  23:27 -> 23:28 (count=0)\n+  23:32 -> 23:34 (count=0)\n+  24:9 -> 24:10 (count=0)\n+  24:14 -> 24:17 (count=0)\n+  24:27 -> 24:28 (count=0)\n+  24:32 -> 24:34 (count=0)\n+  25:14 -> 25:16 (count=0)\n+  27:1 -> 27:2 (count=0)\n+  29:1 -> 29:22 (count=1)\n+  29:22 -> 32:12 (count=0)\n+  33:9 -> 33:10 (count=0)\n+  33:14 -> 33:19 (count=0)\n+  33:26 -> 33:27 (count=0)\n+  33:32 -> 33:34 (count=0)\n+  34:14 -> 34:16 (count=0)\n+  36:1 -> 36:2 (count=0)\n+  38:1 -> 38:19 (count=1)\n+  38:19 -> 42:12 (count=1)\n+  43:9 -> 43:10 (count=0)\n+  43:14 -> 43:18 (count=1)\n+  43:28 -> 43:33 (count=1)\n+  43:39 -> 43:42 (count=0)\n+  44:9 -> 44:10 (count=0)\n+  44:14 -> 44:17 (count=1)\n+  44:27 -> 44:32 (count=1)\n+  44:36 -> 44:38 (count=0)\n+  45:14 -> 45:16 (count=1)\n+  47:1 -> 47:2 (count=1)\n+  49:1 -> 68:12 (count=1)\n+  51:5 -> 52:18 (count=1)\n+  53:13 -> 53:14 (count=0)\n+  63:13 -> 63:14 (count=1)\n+  65:5 -> 65:6 (count=1)\n+  67:5 -> 67:23 (count=1)\n+  69:9 -> 69:10 (count=0)\n+  69:14 -> 69:27 (count=1)\n+  69:31 -> 69:39 (count=0)\n+  70:9 -> 70:10 (count=0)\n+  70:14 -> 70:26 (count=1)\n+  70:30 -> 70:32 (count=0)\n+  71:14 -> 71:16 (count=1)\n+  73:1 -> 73:2 (count=1)\n+  75:1 -> 76:12 (count=0)\n+  77:14 -> 77:16 (count=0)\n+  78:14 -> 78:16 (count=0)\n+  79:14 -> 79:16 (count=0)\n+  81:1 -> 81:2 (count=0)\n+  83:1 -> 84:12 (count=1)\n+  85:14 -> 85:16 (count=0)\n+  86:14 -> 86:16 (count=0)\n+  87:14 -> 87:16 (count=1)\n+  89:1 -> 89:2 (count=1)\n+  91:1 -> 91:25 (count=1)\n+  91:25 -> 91:34 (count=0)\n+  93:1 -> 101:2 (count=1)\n+  110:5 -> 120:54 (count=1)\n+  117:17 -> 117:19 (count=1)\n+  123:32 -> 123:35 (count=1)\n+  123:39 -> 123:73 (count=1)\n+  124:23 -> 124:26 (count=1)\n+  125:14 -> 125:15 (count=0)\n+  127:5 -> 127:6 (count=1)\n+Segment at 5:1 (count = 1), RegionEntry\n+Segment at 5:25 (count = 1), RegionEntry\n+Segment at 6:14 (count = 0), Skipped\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 7:10 (count = 0), Skipped\n+Segment at 9:9 (count = 0), RegionEntry\n+Segment at 9:10 (count = 0), Skipped\n+Segment at 11:1 (count = 1), RegionEntry\n+Segment at 11:2 (count = 0), Skipped\n+Segment at 13:1 (count = 0), RegionEntry\n+Segment at 13:20 (count = 0), Skipped\n+Segment at 15:1 (count = 0), RegionEntry\n+Segment at 15:20 (count = 0), RegionEntry\n+Segment at 15:21 (count = 0), Skipped\n+Segment at 17:1 (count = 1), RegionEntry\n+Segment at 17:20 (count = 1), RegionEntry\n+Segment at 17:21 (count = 0), Skipped\n+Segment at 19:1 (count = 0), RegionEntry\n+Segment at 19:30 (count = 0), RegionEntry\n+Segment at 19:31 (count = 0), Skipped\n+Segment at 21:1 (count = 1), RegionEntry\n+Segment at 21:23 (count = 0), RegionEntry\n+Segment at 22:12 (count = 0), Skipped\n+Segment at 23:9 (count = 0), RegionEntry\n+Segment at 23:10 (count = 0), Skipped\n+Segment at 23:14 (count = 0), RegionEntry\n+Segment at 23:17 (count = 0), Skipped\n+Segment at 23:27 (count = 0), RegionEntry\n+Segment at 23:28 (count = 0), Skipped\n+Segment at 23:32 (count = 0), RegionEntry\n+Segment at 23:34 (count = 0), Skipped\n+Segment at 24:9 (count = 0), RegionEntry\n+Segment at 24:10 (count = 0), Skipped\n+Segment at 24:14 (count = 0), RegionEntry\n+Segment at 24:17 (count = 0), Skipped\n+Segment at 24:27 (count = 0), RegionEntry\n+Segment at 24:28 (count = 0), Skipped\n+Segment at 24:32 (count = 0), RegionEntry\n+Segment at 24:34 (count = 0), Skipped\n+Segment at 25:14 (count = 0), RegionEntry\n+Segment at 25:16 (count = 0), Skipped\n+Segment at 27:1 (count = 0), RegionEntry\n+Segment at 27:2 (count = 0), Skipped\n+Segment at 29:1 (count = 1), RegionEntry\n+Segment at 29:22 (count = 0), RegionEntry\n+Segment at 32:12 (count = 0), Skipped\n+Segment at 33:9 (count = 0), RegionEntry\n+Segment at 33:10 (count = 0), Skipped\n+Segment at 33:14 (count = 0), RegionEntry\n+Segment at 33:19 (count = 0), Skipped\n+Segment at 33:26 (count = 0), RegionEntry\n+Segment at 33:27 (count = 0), Skipped\n+Segment at 33:32 (count = 0), RegionEntry\n+Segment at 33:34 (count = 0), Skipped\n+Segment at 34:14 (count = 0), RegionEntry\n+Segment at 34:16 (count = 0), Skipped\n+Segment at 36:1 (count = 0), RegionEntry\n+Segment at 36:2 (count = 0), Skipped\n+Segment at 38:1 (count = 1), RegionEntry\n+Segment at 38:19 (count = 1), RegionEntry\n+Segment at 42:12 (count = 0), Skipped\n+Segment at 43:9 (count = 0), RegionEntry\n+Segment at 43:10 (count = 0), Skipped\n+Segment at 43:14 (count = 1), RegionEntry\n+Segment at 43:18 (count = 0), Skipped\n+Segment at 43:28 (count = 1), RegionEntry\n+Segment at 43:33 (count = 0), Skipped\n+Segment at 43:39 (count = 0), RegionEntry\n+Segment at 43:42 (count = 0), Skipped\n+Segment at 44:9 (count = 0), RegionEntry\n+Segment at 44:10 (count = 0), Skipped\n+Segment at 44:14 (count = 1), RegionEntry\n+Segment at 44:17 (count = 0), Skipped\n+Segment at 44:27 (count = 1), RegionEntry\n+Segment at 44:32 (count = 0), Skipped\n+Segment at 44:36 (count = 0), RegionEntry\n+Segment at 44:38 (count = 0), Skipped\n+Segment at 45:14 (count = 1), RegionEntry\n+Segment at 45:16 (count = 0), Skipped\n+Segment at 47:1 (count = 1), RegionEntry\n+Segment at 47:2 (count = 0), Skipped\n+Segment at 49:1 (count = 1), RegionEntry\n+Segment at 51:5 (count = 1), RegionEntry\n+Segment at 52:18 (count = 1)\n+Segment at 53:13 (count = 0), RegionEntry\n+Segment at 53:14 (count = 1)\n+Segment at 63:13 (count = 1), RegionEntry\n+Segment at 63:14 (count = 1)\n+Segment at 65:5 (count = 1), RegionEntry\n+Segment at 65:6 (count = 1)\n+Segment at 67:5 (count = 1), RegionEntry\n+Segment at 67:23 (count = 1)\n+Segment at 68:12 (count = 0), Skipped\n+Segment at 69:9 (count = 0), RegionEntry\n+Segment at 69:10 (count = 0), Skipped\n+Segment at 69:14 (count = 1), RegionEntry\n+Segment at 69:27 (count = 0), Skipped\n+Segment at 69:31 (count = 0), RegionEntry\n+Segment at 69:39 (count = 0), Skipped\n+Segment at 70:9 (count = 0), RegionEntry\n+Segment at 70:10 (count = 0), Skipped\n+Segment at 70:14 (count = 1), RegionEntry\n+Segment at 70:26 (count = 0), Skipped\n+Segment at 70:30 (count = 0), RegionEntry\n+Segment at 70:32 (count = 0), Skipped\n+Segment at 71:14 (count = 1), RegionEntry\n+Segment at 71:16 (count = 0), Skipped\n+Segment at 73:1 (count = 1), RegionEntry\n+Segment at 73:2 (count = 0), Skipped\n+Segment at 75:1 (count = 0), RegionEntry\n+Segment at 76:12 (count = 0), Skipped\n+Segment at 77:14 (count = 0), RegionEntry\n+Segment at 77:16 (count = 0), Skipped\n+Segment at 78:14 (count = 0), RegionEntry\n+Segment at 78:16 (count = 0), Skipped\n+Segment at 79:14 (count = 0), RegionEntry\n+Segment at 79:16 (count = 0), Skipped\n+Segment at 81:1 (count = 0), RegionEntry\n+Segment at 81:2 (count = 0), Skipped\n+Segment at 83:1 (count = 1), RegionEntry\n+Segment at 84:12 (count = 0), Skipped\n+Segment at 85:14 (count = 0), RegionEntry\n+Segment at 85:16 (count = 0), Skipped\n+Segment at 86:14 (count = 0), RegionEntry\n+Segment at 86:16 (count = 0), Skipped\n+Segment at 87:14 (count = 1), RegionEntry\n+Segment at 87:16 (count = 0), Skipped\n+Segment at 89:1 (count = 1), RegionEntry\n+Segment at 89:2 (count = 0), Skipped\n+Segment at 91:1 (count = 1), RegionEntry\n+Segment at 91:25 (count = 0), RegionEntry\n+Segment at 91:34 (count = 0), Skipped\n+Segment at 93:1 (count = 1), RegionEntry\n+Segment at 101:2 (count = 0), Skipped\n+Segment at 110:5 (count = 1), RegionEntry\n+Segment at 117:17 (count = 1), RegionEntry\n+Segment at 117:19 (count = 1)\n+Segment at 120:54 (count = 0), Skipped\n+Segment at 123:32 (count = 1), RegionEntry\n+Segment at 123:35 (count = 0), Skipped\n+Segment at 123:39 (count = 1), RegionEntry\n+Segment at 123:73 (count = 0), Skipped\n+Segment at 124:23 (count = 1), RegionEntry\n+Segment at 124:26 (count = 0), Skipped\n+Segment at 125:14 (count = 0), RegionEntry\n+Segment at 125:15 (count = 0), Skipped\n+Segment at 127:5 (count = 1), RegionEntry\n+Segment at 127:6 (count = 0), Skipped"}, {"sha": "1aacac0ed251533113623602f2acfc8e6d3509a0", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.closure.txt", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.closure.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,153 @@\n+Counter in file 0 98:5 -> 100:20, #1\n+Counter in file 0 100:21 -> 102:10, #2\n+Counter in file 0 102:10 -> 102:11, (#1 - #2)\n+Counter in file 0 103:9 -> 104:6, (#2 + (#1 - #2))\n+Counter in file 0 123:5 -> 124:20, 0\n+Counter in file 0 124:21 -> 126:10, 0\n+Counter in file 0 126:10 -> 126:11, 0\n+Counter in file 0 127:9 -> 128:6, 0\n+Counter in file 0 131:53 -> 131:67, 0\n+Counter in file 0 141:59 -> 141:85, 0\n+Counter in file 0 143:56 -> 145:6, 0\n+Counter in file 0 149:7 -> 149:33, 0\n+Counter in file 0 153:7 -> 153:33, 0\n+Counter in file 0 3:1 -> 18:13, #1\n+Counter in file 0 25:14 -> 33:9, (#1 + 0)\n+Counter in file 0 40:6 -> 60:13, (#1 + 0)\n+Counter in file 0 67:14 -> 75:9, (#1 + 0)\n+Counter in file 0 82:6 -> 97:9, (#1 + 0)\n+Counter in file 0 104:6 -> 120:9, (#1 + 0)\n+Counter in file 0 128:6 -> 131:33, (#1 + 0)\n+Counter in file 0 131:67 -> 136:33, (#1 + 0)\n+Counter in file 0 136:75 -> 141:39, (#1 + 0)\n+Counter in file 0 141:85 -> 143:36, (#1 + 0)\n+Counter in file 0 145:6 -> 147:36, (#1 + 0)\n+Counter in file 0 149:33 -> 151:43, (#1 + 0)\n+Counter in file 0 153:33 -> 155:2, (#1 + 0)\n+Counter in file 0 61:13 -> 63:28, #1\n+Counter in file 0 63:29 -> 65:18, #2\n+Counter in file 0 65:18 -> 65:19, (#1 - #2)\n+Counter in file 0 66:17 -> 67:14, (#2 + (#1 - #2))\n+Counter in file 0 76:5 -> 78:20, #1\n+Counter in file 0 78:21 -> 80:10, #2\n+Counter in file 0 80:10 -> 80:11, (#1 - #2)\n+Counter in file 0 81:9 -> 82:6, (#2 + (#1 - #2))\n+Counter in file 0 34:5 -> 36:20, #1\n+Counter in file 0 36:21 -> 38:10, #2\n+Counter in file 0 38:10 -> 38:11, (#1 - #2)\n+Counter in file 0 39:9 -> 40:6, (#2 + (#1 - #2))\n+Counter in file 0 19:13 -> 21:28, #1\n+Counter in file 0 21:29 -> 23:18, #2\n+Counter in file 0 23:18 -> 23:19, (#1 - #2)\n+Counter in file 0 24:17 -> 25:14, (#2 + (#1 - #2))\n+Emitting segments for file: ../coverage/closure.rs\n+Combined regions:\n+  3:1 -> 18:13 (count=1)\n+  19:13 -> 21:28 (count=0)\n+  21:29 -> 23:18 (count=0)\n+  23:18 -> 23:19 (count=0)\n+  24:17 -> 25:14 (count=0)\n+  25:14 -> 33:9 (count=1)\n+  34:5 -> 36:20 (count=0)\n+  36:21 -> 38:10 (count=0)\n+  38:10 -> 38:11 (count=0)\n+  39:9 -> 40:6 (count=0)\n+  40:6 -> 60:13 (count=1)\n+  61:13 -> 63:28 (count=1)\n+  63:29 -> 65:18 (count=0)\n+  65:18 -> 65:19 (count=1)\n+  66:17 -> 67:14 (count=1)\n+  67:14 -> 75:9 (count=1)\n+  76:5 -> 78:20 (count=1)\n+  78:21 -> 80:10 (count=0)\n+  80:10 -> 80:11 (count=1)\n+  81:9 -> 82:6 (count=1)\n+  82:6 -> 97:9 (count=1)\n+  98:5 -> 100:20 (count=5)\n+  100:21 -> 102:10 (count=0)\n+  102:10 -> 102:11 (count=5)\n+  103:9 -> 104:6 (count=5)\n+  104:6 -> 120:9 (count=1)\n+  123:5 -> 124:20 (count=0)\n+  124:21 -> 126:10 (count=0)\n+  126:10 -> 126:11 (count=0)\n+  127:9 -> 128:6 (count=0)\n+  128:6 -> 131:33 (count=1)\n+  131:53 -> 131:67 (count=0)\n+  131:67 -> 136:33 (count=1)\n+  136:75 -> 141:39 (count=1)\n+  141:59 -> 141:85 (count=0)\n+  141:85 -> 143:36 (count=1)\n+  143:56 -> 145:6 (count=0)\n+  145:6 -> 147:36 (count=1)\n+  149:7 -> 149:33 (count=0)\n+  149:33 -> 151:43 (count=1)\n+  153:7 -> 153:33 (count=0)\n+  153:33 -> 155:2 (count=1)\n+Segment at 3:1 (count = 1), RegionEntry\n+Segment at 18:13 (count = 0), Skipped\n+Segment at 19:13 (count = 0), RegionEntry\n+Segment at 21:28 (count = 0), Skipped\n+Segment at 21:29 (count = 0), RegionEntry\n+Segment at 23:18 (count = 0), RegionEntry\n+Segment at 23:19 (count = 0), Skipped\n+Segment at 24:17 (count = 0), RegionEntry\n+Segment at 25:14 (count = 1), RegionEntry\n+Segment at 33:9 (count = 0), Skipped\n+Segment at 34:5 (count = 0), RegionEntry\n+Segment at 36:20 (count = 0), Skipped\n+Segment at 36:21 (count = 0), RegionEntry\n+Segment at 38:10 (count = 0), RegionEntry\n+Segment at 38:11 (count = 0), Skipped\n+Segment at 39:9 (count = 0), RegionEntry\n+Segment at 40:6 (count = 1), RegionEntry\n+Segment at 60:13 (count = 0), Skipped\n+Segment at 61:13 (count = 1), RegionEntry\n+Segment at 63:28 (count = 0), Skipped\n+Segment at 63:29 (count = 0), RegionEntry\n+Segment at 65:18 (count = 1), RegionEntry\n+Segment at 65:19 (count = 0), Skipped\n+Segment at 66:17 (count = 1), RegionEntry\n+Segment at 67:14 (count = 1), RegionEntry\n+Segment at 75:9 (count = 0), Skipped\n+Segment at 76:5 (count = 1), RegionEntry\n+Segment at 78:20 (count = 0), Skipped\n+Segment at 78:21 (count = 0), RegionEntry\n+Segment at 80:10 (count = 1), RegionEntry\n+Segment at 80:11 (count = 0), Skipped\n+Segment at 81:9 (count = 1), RegionEntry\n+Segment at 82:6 (count = 1), RegionEntry\n+Segment at 97:9 (count = 0), Skipped\n+Segment at 98:5 (count = 5), RegionEntry\n+Segment at 100:20 (count = 0), Skipped\n+Segment at 100:21 (count = 0), RegionEntry\n+Segment at 102:10 (count = 5), RegionEntry\n+Segment at 102:11 (count = 0), Skipped\n+Segment at 103:9 (count = 5), RegionEntry\n+Segment at 104:6 (count = 1), RegionEntry\n+Segment at 120:9 (count = 0), Skipped\n+Segment at 123:5 (count = 0), RegionEntry\n+Segment at 124:20 (count = 0), Skipped\n+Segment at 124:21 (count = 0), RegionEntry\n+Segment at 126:10 (count = 0), RegionEntry\n+Segment at 126:11 (count = 0), Skipped\n+Segment at 127:9 (count = 0), RegionEntry\n+Segment at 128:6 (count = 1), RegionEntry\n+Segment at 131:33 (count = 0), Skipped\n+Segment at 131:53 (count = 0), RegionEntry\n+Segment at 131:67 (count = 1), RegionEntry\n+Segment at 136:33 (count = 0), Skipped\n+Segment at 136:75 (count = 1), RegionEntry\n+Segment at 141:39 (count = 0), Skipped\n+Segment at 141:59 (count = 0), RegionEntry\n+Segment at 141:85 (count = 1), RegionEntry\n+Segment at 143:36 (count = 0), Skipped\n+Segment at 143:56 (count = 0), RegionEntry\n+Segment at 145:6 (count = 1), RegionEntry\n+Segment at 147:36 (count = 0), Skipped\n+Segment at 149:7 (count = 0), RegionEntry\n+Segment at 149:33 (count = 1), RegionEntry\n+Segment at 151:43 (count = 0), Skipped\n+Segment at 153:7 (count = 0), RegionEntry\n+Segment at 153:33 (count = 1), RegionEntry\n+Segment at 155:2 (count = 0), Skipped"}, {"sha": "3a9c6a9b92e9898223d954ab8c6f31bcc8550a8e", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.conditions.txt", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.conditions.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,253 @@\n+Counter in file 0 3:1 -> 3:11, #1\n+Counter in file 0 4:9 -> 5:12, (#1 + 0)\n+Counter in file 0 5:13 -> 7:6, #2\n+Counter in file 0 10:9 -> 10:10, (#3 + (#12 + #13))\n+Counter in file 0 10:16 -> 10:29, (#2 + 0)\n+Counter in file 0 11:9 -> 12:10, #3\n+Counter in file 0 13:15 -> 13:28, ((#2 + 0) - #3)\n+Counter in file 0 14:12 -> 14:25, #4\n+Counter in file 0 14:29 -> 14:42, (#4 - #15)\n+Counter in file 0 14:46 -> 14:60, #21\n+Counter in file 0 14:61 -> 16:10, #12\n+Counter in file 0 16:10 -> 16:11, #13\n+Counter in file 0 17:9 -> 18:18, (#12 + #13)\n+Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #4)\n+Counter in file 0 23:9 -> 24:12, ((#3 + (#12 + #13)) + 0)\n+Counter in file 0 24:13 -> 26:6, #14\n+Counter in file 0 28:8 -> 28:21, (#14 + 0)\n+Counter in file 0 28:22 -> 30:6, #16\n+Counter in file 0 30:15 -> 30:28, ((#14 + 0) - #16)\n+Counter in file 0 31:12 -> 31:25, (((#14 + 0) - #16) - #11)\n+Counter in file 0 31:29 -> 31:42, ((((#14 + 0) - #16) - #11) - #23)\n+Counter in file 0 31:46 -> 31:60, #31\n+Counter in file 0 31:61 -> 33:10, #18\n+Counter in file 0 33:10 -> 33:11, #19\n+Counter in file 0 34:9 -> 34:23, (#18 + #19)\n+Counter in file 0 36:9 -> 36:15, #11\n+Counter in file 0 39:8 -> 39:12, (#16 + (#18 + #19))\n+Counter in file 0 40:13 -> 41:16, #20\n+Counter in file 0 41:17 -> 43:10, #24\n+Counter in file 0 45:12 -> 45:25, (#24 + 0)\n+Counter in file 0 45:26 -> 47:10, #25\n+Counter in file 0 48:17 -> 48:30, ((#24 + 0) - #25)\n+Counter in file 0 49:16 -> 49:29, (((#24 + 0) - #25) - #10)\n+Counter in file 0 49:33 -> 49:46, ((((#24 + 0) - #25) - #10) - #35)\n+Counter in file 0 49:50 -> 49:64, #40\n+Counter in file 0 49:65 -> 51:14, #26\n+Counter in file 0 51:14 -> 51:15, #27\n+Counter in file 0 52:13 -> 52:27, (#26 + #27)\n+Counter in file 0 54:13 -> 54:19, #10\n+Counter in file 0 59:9 -> 60:12, ((#25 + (#26 + #27)) + 0)\n+Counter in file 0 60:13 -> 62:6, #28\n+Counter in file 0 64:9 -> 64:10, (#30 + (#33 + #34))\n+Counter in file 0 64:16 -> 64:29, (#28 + 0)\n+Counter in file 0 64:30 -> 66:6, #30\n+Counter in file 0 66:15 -> 66:28, ((#28 + 0) - #30)\n+Counter in file 0 67:12 -> 67:25, (((#28 + 0) - #30) - #9)\n+Counter in file 0 67:29 -> 67:42, ((((#28 + 0) - #30) - #9) - #36)\n+Counter in file 0 67:46 -> 67:60, #42\n+Counter in file 0 67:61 -> 69:10, #33\n+Counter in file 0 69:10 -> 69:11, #34\n+Counter in file 0 70:9 -> 70:23, (#33 + #34)\n+Counter in file 0 72:13 -> 74:15, #9\n+Counter in file 0 77:9 -> 77:10, (#5 + (#6 + #7))\n+Counter in file 0 77:16 -> 77:29, ((#30 + (#33 + #34)) + 0)\n+Counter in file 0 77:30 -> 79:6, #5\n+Counter in file 0 79:15 -> 79:28, ((#30 + (#33 + #34)) - #5)\n+Counter in file 0 80:12 -> 80:25, (((#30 + (#33 + #34)) - #5) - #8)\n+Counter in file 0 80:29 -> 80:42, ((((#30 + (#33 + #34)) - #5) - #8) - #39)\n+Counter in file 0 80:46 -> 80:60, #45\n+Counter in file 0 80:61 -> 82:10, #6\n+Counter in file 0 82:10 -> 82:11, #7\n+Counter in file 0 83:9 -> 83:23, (#6 + #7)\n+Counter in file 0 85:9 -> 85:15, #8\n+Counter in file 0 87:1 -> 87:2, ((#5 + (#6 + #7)) + (((#8 + #9) + (#10 + #11)) + (((#2 + 0) - #3) - #4)))\n+Emitting segments for file: ../coverage/conditions.rs\n+Combined regions:\n+  3:1 -> 3:11 (count=1)\n+  4:9 -> 5:12 (count=1)\n+  5:13 -> 7:6 (count=1)\n+  10:9 -> 10:10 (count=1)\n+  10:16 -> 10:29 (count=1)\n+  11:9 -> 12:10 (count=1)\n+  13:15 -> 13:28 (count=0)\n+  14:12 -> 14:25 (count=0)\n+  14:29 -> 14:42 (count=0)\n+  14:46 -> 14:60 (count=0)\n+  14:61 -> 16:10 (count=0)\n+  16:10 -> 16:11 (count=0)\n+  17:9 -> 18:18 (count=0)\n+  20:9 -> 20:15 (count=0)\n+  23:9 -> 24:12 (count=1)\n+  24:13 -> 26:6 (count=1)\n+  28:8 -> 28:21 (count=1)\n+  28:22 -> 30:6 (count=1)\n+  30:15 -> 30:28 (count=0)\n+  31:12 -> 31:25 (count=0)\n+  31:29 -> 31:42 (count=0)\n+  31:46 -> 31:60 (count=0)\n+  31:61 -> 33:10 (count=0)\n+  33:10 -> 33:11 (count=0)\n+  34:9 -> 34:23 (count=0)\n+  36:9 -> 36:15 (count=0)\n+  39:8 -> 39:12 (count=1)\n+  40:13 -> 41:16 (count=1)\n+  41:17 -> 43:10 (count=1)\n+  45:12 -> 45:25 (count=1)\n+  45:26 -> 47:10 (count=1)\n+  48:17 -> 48:30 (count=0)\n+  49:16 -> 49:29 (count=0)\n+  49:33 -> 49:46 (count=0)\n+  49:50 -> 49:64 (count=0)\n+  49:65 -> 51:14 (count=0)\n+  51:14 -> 51:15 (count=0)\n+  52:13 -> 52:27 (count=0)\n+  54:13 -> 54:19 (count=0)\n+  59:9 -> 60:12 (count=1)\n+  60:13 -> 62:6 (count=1)\n+  64:9 -> 64:10 (count=0)\n+  64:16 -> 64:29 (count=1)\n+  64:30 -> 66:6 (count=0)\n+  66:15 -> 66:28 (count=1)\n+  67:12 -> 67:25 (count=0)\n+  67:29 -> 67:42 (count=0)\n+  67:46 -> 67:60 (count=0)\n+  67:61 -> 69:10 (count=0)\n+  69:10 -> 69:11 (count=0)\n+  70:9 -> 70:23 (count=0)\n+  72:13 -> 74:15 (count=1)\n+  77:9 -> 77:10 (count=0)\n+  77:16 -> 77:29 (count=0)\n+  77:30 -> 79:6 (count=0)\n+  79:15 -> 79:28 (count=0)\n+  80:12 -> 80:25 (count=0)\n+  80:29 -> 80:42 (count=0)\n+  80:46 -> 80:60 (count=0)\n+  80:61 -> 82:10 (count=0)\n+  82:10 -> 82:11 (count=0)\n+  83:9 -> 83:23 (count=0)\n+  85:9 -> 85:15 (count=0)\n+  87:1 -> 87:2 (count=1)\n+Segment at 3:1 (count = 1), RegionEntry\n+Segment at 3:11 (count = 0), Skipped\n+Segment at 4:9 (count = 1), RegionEntry\n+Segment at 5:12 (count = 0), Skipped\n+Segment at 5:13 (count = 1), RegionEntry\n+Segment at 7:6 (count = 0), Skipped\n+Segment at 10:9 (count = 1), RegionEntry\n+Segment at 10:10 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 10:29 (count = 0), Skipped\n+Segment at 11:9 (count = 1), RegionEntry\n+Segment at 12:10 (count = 0), Skipped\n+Segment at 13:15 (count = 0), RegionEntry\n+Segment at 13:28 (count = 0), Skipped\n+Segment at 14:12 (count = 0), RegionEntry\n+Segment at 14:25 (count = 0), Skipped\n+Segment at 14:29 (count = 0), RegionEntry\n+Segment at 14:42 (count = 0), Skipped\n+Segment at 14:46 (count = 0), RegionEntry\n+Segment at 14:60 (count = 0), Skipped\n+Segment at 14:61 (count = 0), RegionEntry\n+Segment at 16:10 (count = 0), RegionEntry\n+Segment at 16:11 (count = 0), Skipped\n+Segment at 17:9 (count = 0), RegionEntry\n+Segment at 18:18 (count = 0), Skipped\n+Segment at 20:9 (count = 0), RegionEntry\n+Segment at 20:15 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 24:12 (count = 0), Skipped\n+Segment at 24:13 (count = 1), RegionEntry\n+Segment at 26:6 (count = 0), Skipped\n+Segment at 28:8 (count = 1), RegionEntry\n+Segment at 28:21 (count = 0), Skipped\n+Segment at 28:22 (count = 1), RegionEntry\n+Segment at 30:6 (count = 0), Skipped\n+Segment at 30:15 (count = 0), RegionEntry\n+Segment at 30:28 (count = 0), Skipped\n+Segment at 31:12 (count = 0), RegionEntry\n+Segment at 31:25 (count = 0), Skipped\n+Segment at 31:29 (count = 0), RegionEntry\n+Segment at 31:42 (count = 0), Skipped\n+Segment at 31:46 (count = 0), RegionEntry\n+Segment at 31:60 (count = 0), Skipped\n+Segment at 31:61 (count = 0), RegionEntry\n+Segment at 33:10 (count = 0), RegionEntry\n+Segment at 33:11 (count = 0), Skipped\n+Segment at 34:9 (count = 0), RegionEntry\n+Segment at 34:23 (count = 0), Skipped\n+Segment at 36:9 (count = 0), RegionEntry\n+Segment at 36:15 (count = 0), Skipped\n+Segment at 39:8 (count = 1), RegionEntry\n+Segment at 39:12 (count = 0), Skipped\n+Segment at 40:13 (count = 1), RegionEntry\n+Segment at 41:16 (count = 0), Skipped\n+Segment at 41:17 (count = 1), RegionEntry\n+Segment at 43:10 (count = 0), Skipped\n+Segment at 45:12 (count = 1), RegionEntry\n+Segment at 45:25 (count = 0), Skipped\n+Segment at 45:26 (count = 1), RegionEntry\n+Segment at 47:10 (count = 0), Skipped\n+Segment at 48:17 (count = 0), RegionEntry\n+Segment at 48:30 (count = 0), Skipped\n+Segment at 49:16 (count = 0), RegionEntry\n+Segment at 49:29 (count = 0), Skipped\n+Segment at 49:33 (count = 0), RegionEntry\n+Segment at 49:46 (count = 0), Skipped\n+Segment at 49:50 (count = 0), RegionEntry\n+Segment at 49:64 (count = 0), Skipped\n+Segment at 49:65 (count = 0), RegionEntry\n+Segment at 51:14 (count = 0), RegionEntry\n+Segment at 51:15 (count = 0), Skipped\n+Segment at 52:13 (count = 0), RegionEntry\n+Segment at 52:27 (count = 0), Skipped\n+Segment at 54:13 (count = 0), RegionEntry\n+Segment at 54:19 (count = 0), Skipped\n+Segment at 59:9 (count = 1), RegionEntry\n+Segment at 60:12 (count = 0), Skipped\n+Segment at 60:13 (count = 1), RegionEntry\n+Segment at 62:6 (count = 0), Skipped\n+Segment at 64:9 (count = 0), RegionEntry\n+Segment at 64:10 (count = 0), Skipped\n+Segment at 64:16 (count = 1), RegionEntry\n+Segment at 64:29 (count = 0), Skipped\n+Segment at 64:30 (count = 0), RegionEntry\n+Segment at 66:6 (count = 0), Skipped\n+Segment at 66:15 (count = 1), RegionEntry\n+Segment at 66:28 (count = 0), Skipped\n+Segment at 67:12 (count = 0), RegionEntry\n+Segment at 67:25 (count = 0), Skipped\n+Segment at 67:29 (count = 0), RegionEntry\n+Segment at 67:42 (count = 0), Skipped\n+Segment at 67:46 (count = 0), RegionEntry\n+Segment at 67:60 (count = 0), Skipped\n+Segment at 67:61 (count = 0), RegionEntry\n+Segment at 69:10 (count = 0), RegionEntry\n+Segment at 69:11 (count = 0), Skipped\n+Segment at 70:9 (count = 0), RegionEntry\n+Segment at 70:23 (count = 0), Skipped\n+Segment at 72:13 (count = 1), RegionEntry\n+Segment at 74:15 (count = 0), Skipped\n+Segment at 77:9 (count = 0), RegionEntry\n+Segment at 77:10 (count = 0), Skipped\n+Segment at 77:16 (count = 0), RegionEntry\n+Segment at 77:29 (count = 0), Skipped\n+Segment at 77:30 (count = 0), RegionEntry\n+Segment at 79:6 (count = 0), Skipped\n+Segment at 79:15 (count = 0), RegionEntry\n+Segment at 79:28 (count = 0), Skipped\n+Segment at 80:12 (count = 0), RegionEntry\n+Segment at 80:25 (count = 0), Skipped\n+Segment at 80:29 (count = 0), RegionEntry\n+Segment at 80:42 (count = 0), Skipped\n+Segment at 80:46 (count = 0), RegionEntry\n+Segment at 80:60 (count = 0), Skipped\n+Segment at 80:61 (count = 0), RegionEntry\n+Segment at 82:10 (count = 0), RegionEntry\n+Segment at 82:11 (count = 0), Skipped\n+Segment at 83:9 (count = 0), RegionEntry\n+Segment at 83:23 (count = 0), Skipped\n+Segment at 85:9 (count = 0), RegionEntry\n+Segment at 85:15 (count = 0), Skipped\n+Segment at 87:1 (count = 1), RegionEntry\n+Segment at 87:2 (count = 0), Skipped"}, {"sha": "a2187d477c82016190a11aa334d7b86ae69745d6", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.dead_code.txt", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.dead_code.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.dead_code.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.dead_code.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,47 @@\n+Counter in file 0 3:1 -> 10:15, 0\n+Counter in file 0 10:16 -> 12:6, 0\n+Counter in file 0 12:6 -> 12:7, 0\n+Counter in file 0 13:1 -> 13:2, 0\n+Counter in file 0 15:1 -> 22:15, 0\n+Counter in file 0 22:16 -> 24:6, 0\n+Counter in file 0 24:6 -> 24:7, 0\n+Counter in file 0 25:1 -> 25:2, 0\n+Counter in file 0 27:1 -> 34:15, #1\n+Counter in file 0 34:16 -> 36:6, #2\n+Counter in file 0 36:6 -> 36:7, (#1 - #2)\n+Counter in file 0 37:1 -> 37:2, (#2 + (#1 - #2))\n+Emitting segments for file: ../coverage/dead_code.rs\n+Combined regions:\n+  3:1 -> 10:15 (count=0)\n+  10:16 -> 12:6 (count=0)\n+  12:6 -> 12:7 (count=0)\n+  13:1 -> 13:2 (count=0)\n+  15:1 -> 22:15 (count=0)\n+  22:16 -> 24:6 (count=0)\n+  24:6 -> 24:7 (count=0)\n+  25:1 -> 25:2 (count=0)\n+  27:1 -> 34:15 (count=1)\n+  34:16 -> 36:6 (count=1)\n+  36:6 -> 36:7 (count=0)\n+  37:1 -> 37:2 (count=1)\n+Segment at 3:1 (count = 0), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 0), RegionEntry\n+Segment at 12:6 (count = 0), RegionEntry\n+Segment at 12:7 (count = 0), Skipped\n+Segment at 13:1 (count = 0), RegionEntry\n+Segment at 13:2 (count = 0), Skipped\n+Segment at 15:1 (count = 0), RegionEntry\n+Segment at 22:15 (count = 0), Skipped\n+Segment at 22:16 (count = 0), RegionEntry\n+Segment at 24:6 (count = 0), RegionEntry\n+Segment at 24:7 (count = 0), Skipped\n+Segment at 25:1 (count = 0), RegionEntry\n+Segment at 25:2 (count = 0), Skipped\n+Segment at 27:1 (count = 1), RegionEntry\n+Segment at 34:15 (count = 0), Skipped\n+Segment at 34:16 (count = 1), RegionEntry\n+Segment at 36:6 (count = 0), RegionEntry\n+Segment at 36:7 (count = 0), Skipped\n+Segment at 37:1 (count = 1), RegionEntry\n+Segment at 37:2 (count = 0), Skipped"}, {"sha": "66c51e3a2982dfd0f29b777bf05c4375321164a2", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.drop_trait.txt", "status": "renamed", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.drop_trait.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,20 +1,16 @@\n-Counter in file 0 9:24 -> 11:6, #1\n-Counter in file 0 15:9 -> 17:42, #1\n-Counter in file 0 19:8 -> 19:12, (#1 + 0)\n+Counter in file 0 9:5 -> 11:6, #1\n+Counter in file 0 14:1 -> 19:12, #1\n Counter in file 0 20:9 -> 21:22, #2\n Counter in file 0 27:1 -> 27:2, (#2 + 0)\n Emitting segments for file: ../coverage/drop_trait.rs\n Combined regions:\n-  9:24 -> 11:6 (count=2)\n-  15:9 -> 17:42 (count=1)\n-  19:8 -> 19:12 (count=1)\n+  9:5 -> 11:6 (count=2)\n+  14:1 -> 19:12 (count=1)\n   20:9 -> 21:22 (count=1)\n   27:1 -> 27:2 (count=1)\n-Segment at 9:24 (count = 2), RegionEntry\n+Segment at 9:5 (count = 2), RegionEntry\n Segment at 11:6 (count = 0), Skipped\n-Segment at 15:9 (count = 1), RegionEntry\n-Segment at 17:42 (count = 0), Skipped\n-Segment at 19:8 (count = 1), RegionEntry\n+Segment at 14:1 (count = 1), RegionEntry\n Segment at 19:12 (count = 0), Skipped\n Segment at 20:9 (count = 1), RegionEntry\n Segment at 21:22 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.drop_trait.txt"}, {"sha": "e2cbf6f709e6ef83654c7ff3b90d742b43f83ccd", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.generics.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.generics.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,44 @@\n+Counter in file 0 17:5 -> 19:6, #1\n+Counter in file 0 17:5 -> 19:6, #1\n+Counter in file 0 22:1 -> 30:12, #1\n+Counter in file 0 31:9 -> 32:22, #2\n+Counter in file 0 42:1 -> 42:2, (#2 + 0)\n+Counter in file 0 10:5 -> 12:6, #1\n+Counter in file 0 10:5 -> 12:6, #1\n+Emitting segments for file: ../coverage/generics.rs\n+Combined regions:\n+  10:5 -> 12:6 (count=3)\n+  17:5 -> 19:6 (count=2)\n+  22:1 -> 30:12 (count=1)\n+  31:9 -> 32:22 (count=1)\n+  42:1 -> 42:2 (count=1)\n+Segment at 10:5 (count = 3), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Segment at 17:5 (count = 2), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Segment at 22:1 (count = 1), RegionEntry\n+Segment at 30:12 (count = 0), Skipped\n+Segment at 31:9 (count = 1), RegionEntry\n+Segment at 32:22 (count = 0), Skipped\n+Segment at 42:1 (count = 1), RegionEntry\n+Segment at 42:2 (count = 0), Skipped\n+Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworkdE12set_strengthB2_\n+Combined regions:\n+  10:5 -> 12:6 (count=2)\n+Segment at 10:5 (count = 2), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworklE12set_strengthB2_\n+Combined regions:\n+  10:5 -> 12:6 (count=1)\n+Segment at 10:5 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworklENtNtNtCs3rFBWs28XFJ_4core3ops4drop4Drop4dropB4_\n+Combined regions:\n+  17:5 -> 19:6 (count=1)\n+Segment at 17:5 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworkdENtNtNtCs3rFBWs28XFJ_4core3ops4drop4Drop4dropB4_\n+Combined regions:\n+  17:5 -> 19:6 (count=1)\n+Segment at 17:5 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped"}, {"sha": "2e802a462ea2cf03ebfa20568d73e6e55ec58091", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.if.txt", "status": "renamed", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.if.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,18 +1,14 @@\n-Counter in file 0 8:5 -> 18:10, #1\n-Counter in file 0 21:9 -> 21:16, (#1 + 0)\n+Counter in file 0 3:1 -> 21:16, #1\n Counter in file 0 22:5 -> 27:6, #2\n Counter in file 0 27:6 -> 27:7, (#1 - #2)\n Counter in file 0 28:1 -> 28:2, (#2 + (#1 - #2))\n Emitting segments for file: ../coverage/if.rs\n Combined regions:\n-  8:5 -> 18:10 (count=1)\n-  21:9 -> 21:16 (count=1)\n+  3:1 -> 21:16 (count=1)\n   22:5 -> 27:6 (count=1)\n   27:6 -> 27:7 (count=0)\n   28:1 -> 28:2 (count=1)\n-Segment at 8:5 (count = 1), RegionEntry\n-Segment at 18:10 (count = 0), Skipped\n-Segment at 21:9 (count = 1), RegionEntry\n+Segment at 3:1 (count = 1), RegionEntry\n Segment at 21:16 (count = 0), Skipped\n Segment at 22:5 (count = 1), RegionEntry\n Segment at 27:6 (count = 0), RegionEntry", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.if.txt"}, {"sha": "03b35b0f00999539b8b6c271bdfcb82843e1c299", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.if_else.txt", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.if_else.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,4 +1,4 @@\n-Counter in file 0 7:9 -> 11:16, #1\n+Counter in file 0 3:1 -> 11:16, #1\n Counter in file 0 12:5 -> 17:6, #2\n Counter in file 0 20:9 -> 22:16, (#1 - #2)\n Counter in file 0 26:9 -> 26:16, (#2 + (#1 - #2))\n@@ -7,14 +7,14 @@ Counter in file 0 34:5 -> 39:6, ((#2 + (#1 - #2)) - #3)\n Counter in file 0 40:1 -> 40:2, (#3 + ((#2 + (#1 - #2)) - #3))\n Emitting segments for file: ../coverage/if_else.rs\n Combined regions:\n-  7:9 -> 11:16 (count=1)\n+  3:1 -> 11:16 (count=1)\n   12:5 -> 17:6 (count=1)\n   20:9 -> 22:16 (count=0)\n   26:9 -> 26:16 (count=1)\n   27:5 -> 32:6 (count=1)\n   34:5 -> 39:6 (count=0)\n   40:1 -> 40:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n+Segment at 3:1 (count = 1), RegionEntry\n Segment at 11:16 (count = 0), Skipped\n Segment at 12:5 (count = 1), RegionEntry\n Segment at 17:6 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.if_else.txt"}, {"sha": "5dc704d6149f164eebc819f6eb38d418081631f4", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.inner_items.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.inner_items.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,44 @@\n+Counter in file 0 18:5 -> 22:6, #1\n+Counter in file 0 3:1 -> 3:11, #1\n+Counter in file 0 7:9 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 12:6, #2\n+Counter in file 0 12:6 -> 12:7, (#1 - #2)\n+Counter in file 0 48:8 -> 48:15, (#2 + (#1 - #2))\n+Counter in file 0 48:16 -> 50:6, #3\n+Counter in file 0 50:6 -> 50:7, ((#2 + (#1 - #2)) - #3)\n+Counter in file 0 52:9 -> 57:2, (#3 + ((#2 + (#1 - #2)) - #3))\n+Counter in file 0 33:9 -> 36:10, #1\n+Counter in file 0 40:9 -> 43:10, #1\n+Emitting segments for file: ../coverage/inner_items.rs\n+Combined regions:\n+  3:1 -> 3:11 (count=1)\n+  7:9 -> 10:15 (count=1)\n+  10:16 -> 12:6 (count=1)\n+  12:6 -> 12:7 (count=0)\n+  18:5 -> 22:6 (count=3)\n+  33:9 -> 36:10 (count=1)\n+  40:9 -> 43:10 (count=1)\n+  48:8 -> 48:15 (count=1)\n+  48:16 -> 50:6 (count=1)\n+  50:6 -> 50:7 (count=0)\n+  52:9 -> 57:2 (count=1)\n+Segment at 3:1 (count = 1), RegionEntry\n+Segment at 3:11 (count = 0), Skipped\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), RegionEntry\n+Segment at 12:7 (count = 0), Skipped\n+Segment at 18:5 (count = 3), RegionEntry\n+Segment at 22:6 (count = 0), Skipped\n+Segment at 33:9 (count = 1), RegionEntry\n+Segment at 36:10 (count = 0), Skipped\n+Segment at 40:9 (count = 1), RegionEntry\n+Segment at 43:10 (count = 0), Skipped\n+Segment at 48:8 (count = 1), RegionEntry\n+Segment at 48:15 (count = 0), Skipped\n+Segment at 48:16 (count = 1), RegionEntry\n+Segment at 50:6 (count = 0), RegionEntry\n+Segment at 50:7 (count = 0), Skipped\n+Segment at 52:9 (count = 1), RegionEntry\n+Segment at 57:2 (count = 0), Skipped"}, {"sha": "d5667fb861e2c2429f9eec93b722c7ce67f19b0e", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.lazy_boolean.txt", "status": "renamed", "additions": 19, "deletions": 39, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.lazy_boolean.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,62 +1,48 @@\n-Counter in file 0 7:9 -> 9:42, #1\n-Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 3:1 -> 10:15, #1\n Counter in file 0 10:16 -> 14:6, #2\n Counter in file 0 14:6 -> 14:7, (#1 - #2)\n Counter in file 0 16:9 -> 16:17, ((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4))\n Counter in file 0 18:13 -> 18:18, (#2 + (#1 - #2))\n Counter in file 0 20:13 -> 20:18, ((#2 + (#1 - #2)) - #3)\n-Counter in file 0 20:18 -> 20:19, (#3 + #4)\n-Counter in file 0 20:18 -> 20:19, (((#2 + (#1 - #2)) - #3) - #4)\n Counter in file 0 23:9 -> 23:17, ((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6))\n Counter in file 0 25:13 -> 25:18, (((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) + 0)\n Counter in file 0 27:13 -> 27:18, (((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5)\n-Counter in file 0 27:18 -> 27:19, (#5 + #6)\n-Counter in file 0 27:18 -> 27:19, ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)\n-Counter in file 0 29:9 -> 29:17, ((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8))\n+Counter in file 0 29:9 -> 29:17, (#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8)))\n Counter in file 0 29:20 -> 29:25, (((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) + 0)\n Counter in file 0 29:29 -> 29:34, #7\n-Counter in file 0 29:34 -> 29:35, ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)\n-Counter in file 0 29:34 -> 29:35, (#7 - #8)\n-Counter in file 0 30:9 -> 30:17, ((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10))\n-Counter in file 0 30:20 -> 30:25, (((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) + 0)\n+Counter in file 0 30:9 -> 30:17, (#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10)))\n+Counter in file 0 30:20 -> 30:25, ((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) + 0)\n Counter in file 0 30:29 -> 30:34, #9\n-Counter in file 0 30:34 -> 30:35, ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)\n-Counter in file 0 30:34 -> 30:35, (#9 - #10)\n-Counter in file 0 33:9 -> 34:16, (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) + 0)\n+Counter in file 0 33:9 -> 34:16, ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) + 0)\n Counter in file 0 35:5 -> 38:6, #11\n-Counter in file 0 38:6 -> 38:7, (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)\n-Counter in file 0 41:9 -> 41:16, (#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11))\n+Counter in file 0 38:6 -> 38:7, ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)\n+Counter in file 0 41:9 -> 41:16, (#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11))\n Counter in file 0 42:5 -> 45:6, #12\n-Counter in file 0 47:5 -> 50:6, ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)\n-Counter in file 0 52:8 -> 52:16, (#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12))\n+Counter in file 0 47:5 -> 50:6, ((#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)) - #12)\n+Counter in file 0 52:8 -> 52:16, (#12 + ((#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)) - #12))\n Counter in file 0 52:17 -> 54:6, #13\n-Counter in file 0 54:6 -> 54:7, ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13)\n-Counter in file 0 56:8 -> 56:15, (#13 + ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13))\n+Counter in file 0 54:6 -> 54:7, ((#12 + ((#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)) - #12)) - #13)\n+Counter in file 0 56:8 -> 56:15, (#13 + ((#12 + ((#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)) - #12)) - #13))\n Counter in file 0 56:16 -> 58:6, #14\n-Counter in file 0 58:12 -> 60:6, ((#13 + ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13)) - #14)\n-Counter in file 0 61:1 -> 61:2, (#14 + ((#13 + ((#12 + ((#11 + (((#9 - #10) + ((((#7 - #8) + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + #8)) - #9) + #10)) - #11)) - #12)) - #13)) - #14))\n+Counter in file 0 58:12 -> 60:6, ((#13 + ((#12 + ((#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)) - #12)) - #13)) - #14)\n+Counter in file 0 61:1 -> 61:2, (#14 + ((#13 + ((#12 + ((#11 + ((#10 + (((#8 + ((((#5 + #6) + ((((#3 + #4) + (((#2 + (#1 - #2)) - #3) - #4)) - #5) - #6)) - #7) + (#7 - #8))) - #9) + (#9 - #10))) - #11)) - #12)) - #13)) - #14))\n Emitting segments for file: ../coverage/lazy_boolean.rs\n Combined regions:\n-  7:9 -> 9:42 (count=1)\n-  10:8 -> 10:15 (count=1)\n+  3:1 -> 10:15 (count=1)\n   10:16 -> 14:6 (count=1)\n   14:6 -> 14:7 (count=0)\n   16:9 -> 16:17 (count=1)\n   18:13 -> 18:18 (count=1)\n   20:13 -> 20:18 (count=0)\n-  20:18 -> 20:19 (count=1)\n   23:9 -> 23:17 (count=1)\n   25:13 -> 25:18 (count=1)\n   27:13 -> 27:18 (count=1)\n-  27:18 -> 27:19 (count=1)\n   29:9 -> 29:17 (count=1)\n   29:20 -> 29:25 (count=1)\n   29:29 -> 29:34 (count=1)\n-  29:34 -> 29:35 (count=1)\n   30:9 -> 30:17 (count=1)\n   30:20 -> 30:25 (count=1)\n   30:29 -> 30:34 (count=0)\n-  30:34 -> 30:35 (count=1)\n   33:9 -> 34:16 (count=1)\n   35:5 -> 38:6 (count=0)\n   38:6 -> 38:7 (count=1)\n@@ -70,9 +56,7 @@ Combined regions:\n   56:16 -> 58:6 (count=1)\n   58:12 -> 60:6 (count=0)\n   61:1 -> 61:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:42 (count = 0), Skipped\n-Segment at 10:8 (count = 1), RegionEntry\n+Segment at 3:1 (count = 1), RegionEntry\n Segment at 10:15 (count = 0), Skipped\n Segment at 10:16 (count = 1), RegionEntry\n Segment at 14:6 (count = 0), RegionEntry\n@@ -82,29 +66,25 @@ Segment at 16:17 (count = 0), Skipped\n Segment at 18:13 (count = 1), RegionEntry\n Segment at 18:18 (count = 0), Skipped\n Segment at 20:13 (count = 0), RegionEntry\n-Segment at 20:18 (count = 1), RegionEntry\n-Segment at 20:19 (count = 0), Skipped\n+Segment at 20:18 (count = 0), Skipped\n Segment at 23:9 (count = 1), RegionEntry\n Segment at 23:17 (count = 0), Skipped\n Segment at 25:13 (count = 1), RegionEntry\n Segment at 25:18 (count = 0), Skipped\n Segment at 27:13 (count = 1), RegionEntry\n-Segment at 27:18 (count = 1), RegionEntry\n-Segment at 27:19 (count = 0), Skipped\n+Segment at 27:18 (count = 0), Skipped\n Segment at 29:9 (count = 1), RegionEntry\n Segment at 29:17 (count = 0), Skipped\n Segment at 29:20 (count = 1), RegionEntry\n Segment at 29:25 (count = 0), Skipped\n Segment at 29:29 (count = 1), RegionEntry\n-Segment at 29:34 (count = 1), RegionEntry\n-Segment at 29:35 (count = 0), Skipped\n+Segment at 29:34 (count = 0), Skipped\n Segment at 30:9 (count = 1), RegionEntry\n Segment at 30:17 (count = 0), Skipped\n Segment at 30:20 (count = 1), RegionEntry\n Segment at 30:25 (count = 0), Skipped\n Segment at 30:29 (count = 0), RegionEntry\n-Segment at 30:34 (count = 1), RegionEntry\n-Segment at 30:35 (count = 0), Skipped\n+Segment at 30:34 (count = 0), Skipped\n Segment at 33:9 (count = 1), RegionEntry\n Segment at 34:16 (count = 0), Skipped\n Segment at 35:5 (count = 0), RegionEntry", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.lazy_boolean.txt"}, {"sha": "17bd5c2ff3186bd4d56c0cfa4d18b9f91fa2a0d8", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.loop_break_value.txt", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.loop_break_value.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,6 +1,6 @@\n-Counter in file 0 3:11 -> 13:2, #1\n+Counter in file 0 3:1 -> 13:2, #1\n Emitting segments for file: ../coverage/loop_break_value.rs\n Combined regions:\n-  3:11 -> 13:2 (count=1)\n-Segment at 3:11 (count = 1), RegionEntry\n+  3:1 -> 13:2 (count=1)\n+Segment at 3:1 (count = 1), RegionEntry\n Segment at 13:2 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.loop_break_value.txt"}, {"sha": "d1da50b1529e427846827cd3d308abba57747047", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.loops_branches.txt", "status": "renamed", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.loops_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.loops_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.loops_branches.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,24 +1,22 @@\n-Counter in file 0 10:12 -> 10:16, #1\n+Counter in file 0 9:5 -> 10:16, #1\n Counter in file 0 11:16 -> 11:21, #2\n Counter in file 0 14:14 -> 14:15, (#2 - #5)\n-Counter in file 0 15:13 -> 15:31, (0 + (#2 - #5))\n+Counter in file 0 15:13 -> 15:31, ((0 - #6) + (#2 - #5))\n Counter in file 0 15:31 -> 15:32, #4\n-Counter in file 0 17:10 -> 17:11, #3\n Counter in file 0 18:9 -> 18:15, (#3 + 0)\n Counter in file 0 19:5 -> 19:6, (#4 + (#3 + 0))\n-Counter in file 0 22:11 -> 25:2, #1\n+Counter in file 0 22:1 -> 25:2, #1\n Emitting segments for file: ../coverage/loops_branches.rs\n Combined regions:\n-  10:12 -> 10:16 (count=1)\n+  9:5 -> 10:16 (count=1)\n   11:16 -> 11:21 (count=1)\n   14:14 -> 14:15 (count=1)\n   15:13 -> 15:31 (count=1)\n   15:31 -> 15:32 (count=0)\n-  17:10 -> 17:11 (count=1)\n   18:9 -> 18:15 (count=1)\n   19:5 -> 19:6 (count=1)\n-  22:11 -> 25:2 (count=1)\n-Segment at 10:12 (count = 1), RegionEntry\n+  22:1 -> 25:2 (count=1)\n+Segment at 9:5 (count = 1), RegionEntry\n Segment at 10:16 (count = 0), Skipped\n Segment at 11:16 (count = 1), RegionEntry\n Segment at 11:21 (count = 0), Skipped\n@@ -27,11 +25,9 @@ Segment at 14:15 (count = 0), Skipped\n Segment at 15:13 (count = 1), RegionEntry\n Segment at 15:31 (count = 0), RegionEntry\n Segment at 15:32 (count = 0), Skipped\n-Segment at 17:10 (count = 1), RegionEntry\n-Segment at 17:11 (count = 0), Skipped\n Segment at 18:9 (count = 1), RegionEntry\n Segment at 18:15 (count = 0), Skipped\n Segment at 19:5 (count = 1), RegionEntry\n Segment at 19:6 (count = 0), Skipped\n-Segment at 22:11 (count = 1), RegionEntry\n+Segment at 22:1 (count = 1), RegionEntry\n Segment at 25:2 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.loops_branches.txt"}, {"sha": "f30dd9e37164e0a255b80fb29febfaa8301b33c7", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.nested_loops.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.nested_loops.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,58 @@\n+Counter in file 0 1:1 -> 3:27, #1\n+Counter in file 0 5:19 -> 5:32, (#1 + (#2 + #3))\n+Counter in file 0 6:13 -> 7:24, ((#1 + (#2 + #3)) - #4)\n+Counter in file 0 8:13 -> 8:14, ((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3)\n+Counter in file 0 8:18 -> 8:23, (((#1 + (#2 + #3)) - #4) + (#6 + #7))\n+Counter in file 0 9:16 -> 9:22, (((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) + 0)\n+Counter in file 0 10:17 -> 10:22, #2\n+Counter in file 0 11:14 -> 14:22, (((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2)\n+Counter in file 0 15:17 -> 16:27, ((((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2) - #7)\n+Counter in file 0 17:21 -> 17:33, #5\n+Counter in file 0 18:24 -> 20:18, #6\n+Counter in file 0 21:14 -> 21:15, #7\n+Counter in file 0 23:9 -> 23:23, (#2 + #3)\n+Counter in file 0 25:1 -> 25:2, (#5 + #4)\n+Emitting segments for file: ../coverage/nested_loops.rs\n+Combined regions:\n+  1:1 -> 3:27 (count=1)\n+  5:19 -> 5:32 (count=1)\n+  6:13 -> 7:24 (count=1)\n+  8:13 -> 8:14 (count=3)\n+  8:18 -> 8:23 (count=3)\n+  9:16 -> 9:22 (count=3)\n+  10:17 -> 10:22 (count=0)\n+  11:14 -> 14:22 (count=3)\n+  15:17 -> 16:27 (count=1)\n+  17:21 -> 17:33 (count=1)\n+  18:24 -> 20:18 (count=0)\n+  21:14 -> 21:15 (count=2)\n+  23:9 -> 23:23 (count=0)\n+  25:1 -> 25:2 (count=1)\n+Segment at 1:1 (count = 1), RegionEntry\n+Segment at 3:27 (count = 0), Skipped\n+Segment at 5:19 (count = 1), RegionEntry\n+Segment at 5:32 (count = 0), Skipped\n+Segment at 6:13 (count = 1), RegionEntry\n+Segment at 7:24 (count = 0), Skipped\n+Segment at 8:13 (count = 3), RegionEntry\n+Segment at 8:14 (count = 0), Skipped\n+Segment at 8:18 (count = 3), RegionEntry\n+Segment at 8:23 (count = 0), Skipped\n+Segment at 9:16 (count = 3), RegionEntry\n+Segment at 9:22 (count = 0), Skipped\n+Segment at 10:17 (count = 0), RegionEntry\n+Segment at 10:22 (count = 0), Skipped\n+Segment at 11:14 (count = 3), RegionEntry\n+Segment at 14:22 (count = 0), Skipped\n+Segment at 15:17 (count = 1), RegionEntry\n+Segment at 16:27 (count = 0), Skipped\n+Segment at 17:21 (count = 1), RegionEntry\n+Segment at 17:33 (count = 0), Skipped\n+Segment at 18:24 (count = 0), RegionEntry\n+Segment at 20:18 (count = 0), Skipped\n+Segment at 21:14 (count = 2), RegionEntry\n+Segment at 21:15 (count = 0), Skipped\n+Segment at 23:9 (count = 0), RegionEntry\n+Segment at 23:23 (count = 0), Skipped\n+Segment at 25:1 (count = 1), RegionEntry\n+Segment at 25:2 (count = 0), Skipped"}, {"sha": "fbc3adbfb6d70fd846cdfeae713ef3f7a7a2a616", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.overflow.txt", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.overflow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.overflow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.overflow.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,52 @@\n+Counter in file 0 15:1 -> 16:27, #1\n+Counter in file 0 17:11 -> 17:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 18:12 -> 18:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 18:27 -> 21:10, #2\n+Counter in file 0 21:19 -> 21:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 21:33 -> 24:10, #3\n+Counter in file 0 24:10 -> 24:11, #4\n+Counter in file 0 25:9 -> 25:23, (#2 + (#3 + #4))\n+Counter in file 0 27:5 -> 28:2, #5\n+Counter in file 0 4:1 -> 5:18, #1\n+Counter in file 0 5:19 -> 7:6, #2\n+Counter in file 0 7:6 -> 7:7, (#1 - #2)\n+Counter in file 0 8:9 -> 13:2, (#2 + (#1 - #2))\n+Emitting segments for file: ../coverage/overflow.rs\n+Combined regions:\n+  4:1 -> 5:18 (count=4)\n+  5:19 -> 7:6 (count=1)\n+  7:6 -> 7:7 (count=3)\n+  8:9 -> 13:2 (count=4)\n+  15:1 -> 16:27 (count=1)\n+  17:11 -> 17:24 (count=10)\n+  18:12 -> 18:26 (count=10)\n+  18:27 -> 21:10 (count=0)\n+  21:19 -> 21:32 (count=10)\n+  21:33 -> 24:10 (count=3)\n+  24:10 -> 24:11 (count=6)\n+  25:9 -> 25:23 (count=9)\n+  27:5 -> 28:2 (count=0)\n+Segment at 4:1 (count = 4), RegionEntry\n+Segment at 5:18 (count = 0), Skipped\n+Segment at 5:19 (count = 1), RegionEntry\n+Segment at 7:6 (count = 3), RegionEntry\n+Segment at 7:7 (count = 0), Skipped\n+Segment at 8:9 (count = 4), RegionEntry\n+Segment at 13:2 (count = 0), Skipped\n+Segment at 15:1 (count = 1), RegionEntry\n+Segment at 16:27 (count = 0), Skipped\n+Segment at 17:11 (count = 10), RegionEntry\n+Segment at 17:24 (count = 0), Skipped\n+Segment at 18:12 (count = 10), RegionEntry\n+Segment at 18:26 (count = 0), Skipped\n+Segment at 18:27 (count = 0), RegionEntry\n+Segment at 21:10 (count = 0), Skipped\n+Segment at 21:19 (count = 10), RegionEntry\n+Segment at 21:32 (count = 0), Skipped\n+Segment at 21:33 (count = 3), RegionEntry\n+Segment at 24:10 (count = 6), RegionEntry\n+Segment at 24:11 (count = 0), Skipped\n+Segment at 25:9 (count = 9), RegionEntry\n+Segment at 25:23 (count = 0), Skipped\n+Segment at 27:5 (count = 0), RegionEntry\n+Segment at 28:2 (count = 0), Skipped"}, {"sha": "ad87f03026d38e96a483ded8310abe45d8144020", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.panic_unwind.txt", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.panic_unwind.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.panic_unwind.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.panic_unwind.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,53 @@\n+Counter in file 0 13:1 -> 14:27, #1\n+Counter in file 0 15:11 -> 15:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 16:12 -> 16:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 16:27 -> 18:10, #2\n+Counter in file 0 18:19 -> 18:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 18:33 -> 20:10, #3\n+Counter in file 0 20:10 -> 20:11, #4\n+Counter in file 0 21:9 -> 21:23, (#2 + (#3 + #4))\n+Counter in file 0 23:5 -> 24:2, #5\n+Counter in file 0 4:1 -> 4:36, #1\n+Counter in file 0 5:8 -> 5:20, (#1 + 0)\n+Counter in file 0 6:9 -> 7:26, #2\n+Counter in file 0 8:12 -> 11:2, (#1 - #2)\n+Emitting segments for file: ../coverage/panic_unwind.rs\n+Combined regions:\n+  4:1 -> 4:36 (count=4)\n+  5:8 -> 5:20 (count=4)\n+  6:9 -> 7:26 (count=1)\n+  8:12 -> 11:2 (count=3)\n+  13:1 -> 14:27 (count=1)\n+  15:11 -> 15:24 (count=10)\n+  16:12 -> 16:26 (count=10)\n+  16:27 -> 18:10 (count=0)\n+  18:19 -> 18:32 (count=10)\n+  18:33 -> 20:10 (count=3)\n+  20:10 -> 20:11 (count=6)\n+  21:9 -> 21:23 (count=9)\n+  23:5 -> 24:2 (count=0)\n+Segment at 4:1 (count = 4), RegionEntry\n+Segment at 4:36 (count = 0), Skipped\n+Segment at 5:8 (count = 4), RegionEntry\n+Segment at 5:20 (count = 0), Skipped\n+Segment at 6:9 (count = 1), RegionEntry\n+Segment at 7:26 (count = 0), Skipped\n+Segment at 8:12 (count = 3), RegionEntry\n+Segment at 11:2 (count = 0), Skipped\n+Segment at 13:1 (count = 1), RegionEntry\n+Segment at 14:27 (count = 0), Skipped\n+Segment at 15:11 (count = 10), RegionEntry\n+Segment at 15:24 (count = 0), Skipped\n+Segment at 16:12 (count = 10), RegionEntry\n+Segment at 16:26 (count = 0), Skipped\n+Segment at 16:27 (count = 0), RegionEntry\n+Segment at 18:10 (count = 0), Skipped\n+Segment at 18:19 (count = 10), RegionEntry\n+Segment at 18:32 (count = 0), Skipped\n+Segment at 18:33 (count = 3), RegionEntry\n+Segment at 20:10 (count = 6), RegionEntry\n+Segment at 20:11 (count = 0), Skipped\n+Segment at 21:9 (count = 9), RegionEntry\n+Segment at 21:23 (count = 0), Skipped\n+Segment at 23:5 (count = 0), RegionEntry\n+Segment at 24:2 (count = 0), Skipped"}, {"sha": "fa5c12bb6f8e064c2a582ec70805840619afe351", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.partial_eq.txt", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.partial_eq.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,66 @@\n+Counter in file 0 4:10 -> 4:15, 0\n+Counter in file 0 4:24 -> 4:25, 0\n+Counter in file 0 4:24 -> 4:25, 0\n+Counter in file 0 4:32 -> 4:33, 0\n+Counter in file 0 4:32 -> 4:33, 0\n+Counter in file 0 4:35 -> 4:36, 0\n+Counter in file 0 4:39 -> 4:40, 0\n+Counter in file 0 4:39 -> 4:40, 0\n+Counter in file 0 4:39 -> 4:40, 0\n+Counter in file 0 4:39 -> 4:40, 0\n+Counter in file 0 4:48 -> 4:49, 0\n+Counter in file 0 4:51 -> 4:52, 0\n+Counter in file 0 4:53 -> 4:54, 0\n+Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 7:5 -> 7:6, 0\n+Counter in file 0 7:5 -> 7:6, 0\n+Counter in file 0 7:5 -> 7:6, 0\n+Counter in file 0 8:5 -> 8:17, 0\n+Counter in file 0 8:5 -> 8:17, 0\n+Counter in file 0 8:5 -> 8:17, 0\n+Counter in file 0 21:1 -> 26:2, #1\n+Counter in file 0 4:17 -> 4:22, #1\n+Counter in file 0 12:5 -> 18:6, #1\n+Counter in file 0 4:39 -> 4:40, #1\n+Counter in file 0 8:5 -> 8:17, #1\n+Emitting segments for file: ../coverage/partial_eq.rs\n+Combined regions:\n+  4:10 -> 4:15 (count=0)\n+  4:17 -> 4:22 (count=2)\n+  4:24 -> 4:25 (count=0)\n+  4:32 -> 4:33 (count=0)\n+  4:35 -> 4:36 (count=0)\n+  4:39 -> 4:40 (count=1)\n+  4:48 -> 4:49 (count=0)\n+  4:51 -> 4:52 (count=0)\n+  4:53 -> 4:54 (count=0)\n+  7:5 -> 7:6 (count=1)\n+  8:5 -> 8:17 (count=0)\n+  12:5 -> 18:6 (count=2)\n+  21:1 -> 26:2 (count=1)\n+Segment at 4:10 (count = 0), RegionEntry\n+Segment at 4:15 (count = 0), Skipped\n+Segment at 4:17 (count = 2), RegionEntry\n+Segment at 4:22 (count = 0), Skipped\n+Segment at 4:24 (count = 0), RegionEntry\n+Segment at 4:25 (count = 0), Skipped\n+Segment at 4:32 (count = 0), RegionEntry\n+Segment at 4:33 (count = 0), Skipped\n+Segment at 4:35 (count = 0), RegionEntry\n+Segment at 4:36 (count = 0), Skipped\n+Segment at 4:39 (count = 1), RegionEntry\n+Segment at 4:40 (count = 0), Skipped\n+Segment at 4:48 (count = 0), RegionEntry\n+Segment at 4:49 (count = 0), Skipped\n+Segment at 4:51 (count = 0), RegionEntry\n+Segment at 4:52 (count = 0), Skipped\n+Segment at 4:53 (count = 0), RegionEntry\n+Segment at 4:54 (count = 0), Skipped\n+Segment at 7:5 (count = 1), RegionEntry\n+Segment at 7:6 (count = 0), Skipped\n+Segment at 8:5 (count = 0), RegionEntry\n+Segment at 8:17 (count = 0), Skipped\n+Segment at 12:5 (count = 2), RegionEntry\n+Segment at 18:6 (count = 0), Skipped\n+Segment at 21:1 (count = 1), RegionEntry\n+Segment at 26:2 (count = 0), Skipped"}, {"sha": "c0b09486dfba44a2debf2551fc8030ebee0e8e49", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.simple_loop.txt", "status": "renamed", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.simple_loop.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,26 +1,20 @@\n-Counter in file 0 7:9 -> 9:26, #1\n-Counter in file 0 12:9 -> 12:16, (#1 + 0)\n+Counter in file 0 3:1 -> 12:16, #1\n Counter in file 0 13:5 -> 18:6, #2\n Counter in file 0 18:6 -> 18:7, (#1 - #2)\n Counter in file 0 23:13 -> 25:14, ((#2 + (#1 - #2)) + #3)\n-Counter in file 0 27:13 -> 27:18, #4\n-Counter in file 0 30:9 -> 32:10, #3\n-Counter in file 0 34:6 -> 34:7, (#2 + (#1 - #2))\n-Counter in file 0 35:1 -> 35:2, (#4 + 0)\n+Counter in file 0 27:13 -> 27:18, (((#2 + (#1 - #2)) + #3) - #3)\n+Counter in file 0 29:10 -> 32:10, #3\n+Counter in file 0 35:1 -> 35:2, ((((#2 + (#1 - #2)) + #3) - #3) + 0)\n Emitting segments for file: ../coverage/simple_loop.rs\n Combined regions:\n-  7:9 -> 9:26 (count=1)\n-  12:9 -> 12:16 (count=1)\n+  3:1 -> 12:16 (count=1)\n   13:5 -> 18:6 (count=1)\n   18:6 -> 18:7 (count=0)\n   23:13 -> 25:14 (count=11)\n   27:13 -> 27:18 (count=1)\n-  30:9 -> 32:10 (count=10)\n-  34:6 -> 34:7 (count=1)\n+  29:10 -> 32:10 (count=10)\n   35:1 -> 35:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:26 (count = 0), Skipped\n-Segment at 12:9 (count = 1), RegionEntry\n+Segment at 3:1 (count = 1), RegionEntry\n Segment at 12:16 (count = 0), Skipped\n Segment at 13:5 (count = 1), RegionEntry\n Segment at 18:6 (count = 0), RegionEntry\n@@ -29,9 +23,7 @@ Segment at 23:13 (count = 11), RegionEntry\n Segment at 25:14 (count = 0), Skipped\n Segment at 27:13 (count = 1), RegionEntry\n Segment at 27:18 (count = 0), Skipped\n-Segment at 30:9 (count = 10), RegionEntry\n+Segment at 29:10 (count = 10), RegionEntry\n Segment at 32:10 (count = 0), Skipped\n-Segment at 34:6 (count = 1), RegionEntry\n-Segment at 34:7 (count = 0), Skipped\n Segment at 35:1 (count = 1), RegionEntry\n Segment at 35:2 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.simple_loop.txt"}, {"sha": "c01630bd87bc91c91bc7345ad111e79cb6e9bcf5", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.simple_match.txt", "status": "renamed", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.simple_match.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,37 +1,28 @@\n-Counter in file 0 7:9 -> 9:26, #1\n-Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 3:1 -> 10:15, #1\n Counter in file 0 10:16 -> 12:6, #2\n Counter in file 0 12:6 -> 12:7, (#1 - #2)\n Counter in file 0 15:9 -> 15:10, (((#2 + (#1 - #2)) + (#3 + #4)) - #5)\n Counter in file 0 17:9 -> 17:13, ((#2 + (#1 - #2)) + (#3 + #4))\n Counter in file 0 22:13 -> 22:22, ((((#2 + (#1 - #2)) + (#3 + #4)) - #5) + 0)\n Counter in file 0 24:13 -> 24:14, #3\n Counter in file 0 26:17 -> 28:18, ((((#2 + (#1 - #2)) + (#3 + #4)) - #5) + 0)\n-Counter in file 0 28:18 -> 28:19, ((((#2 + (#1 - #2)) + (#3 + #4)) - #5) - #3)\n Counter in file 0 30:13 -> 37:14, (#3 + 0)\n Counter in file 0 40:13 -> 40:15, #4\n-Counter in file 0 42:6 -> 42:7, (#2 + (#1 - #2))\n-Counter in file 0 42:6 -> 42:7, (#3 + #4)\n Counter in file 0 43:1 -> 43:2, #5\n Emitting segments for file: ../coverage/simple_match.rs\n Combined regions:\n-  7:9 -> 9:26 (count=1)\n-  10:8 -> 10:15 (count=1)\n+  3:1 -> 10:15 (count=1)\n   10:16 -> 12:6 (count=1)\n   12:6 -> 12:7 (count=0)\n   15:9 -> 15:10 (count=2)\n   17:9 -> 17:13 (count=3)\n   22:13 -> 22:22 (count=2)\n   24:13 -> 24:14 (count=1)\n   26:17 -> 28:18 (count=2)\n-  28:18 -> 28:19 (count=1)\n   30:13 -> 37:14 (count=1)\n   40:13 -> 40:15 (count=1)\n-  42:6 -> 42:7 (count=3)\n   43:1 -> 43:2 (count=1)\n-Segment at 7:9 (count = 1), RegionEntry\n-Segment at 9:26 (count = 0), Skipped\n-Segment at 10:8 (count = 1), RegionEntry\n+Segment at 3:1 (count = 1), RegionEntry\n Segment at 10:15 (count = 0), Skipped\n Segment at 10:16 (count = 1), RegionEntry\n Segment at 12:6 (count = 0), RegionEntry\n@@ -45,13 +36,10 @@ Segment at 22:22 (count = 0), Skipped\n Segment at 24:13 (count = 1), RegionEntry\n Segment at 24:14 (count = 0), Skipped\n Segment at 26:17 (count = 2), RegionEntry\n-Segment at 28:18 (count = 1), RegionEntry\n-Segment at 28:19 (count = 0), Skipped\n+Segment at 28:18 (count = 0), Skipped\n Segment at 30:13 (count = 1), RegionEntry\n Segment at 37:14 (count = 0), Skipped\n Segment at 40:13 (count = 1), RegionEntry\n Segment at 40:15 (count = 0), Skipped\n-Segment at 42:6 (count = 3), RegionEntry\n-Segment at 42:7 (count = 0), Skipped\n Segment at 43:1 (count = 1), RegionEntry\n Segment at 43:2 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.simple_match.txt"}, {"sha": "a6cd4298808563c88849f00aa99be1878182ea8d", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.tight_inf_loop.txt", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.tight_inf_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.tight_inf_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.tight_inf_loop.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,10 @@\n+Counter in file 0 1:1 -> 2:13, #1\n+Counter in file 0 4:6 -> 5:2, (#1 - #2)\n+Emitting segments for file: ../coverage/tight_inf_loop.rs\n+Combined regions:\n+  1:1 -> 2:13 (count=1)\n+  4:6 -> 5:2 (count=1)\n+Segment at 1:1 (count = 1), RegionEntry\n+Segment at 2:13 (count = 0), Skipped\n+Segment at 4:6 (count = 1), RegionEntry\n+Segment at 5:2 (count = 0), Skipped"}, {"sha": "2b7962df2f9f9faf1dd0f24f47611e933e5a6810", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.try_error_result.txt", "status": "renamed", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.try_error_result.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,29 +1,26 @@\n-Counter in file 0 13:9 -> 14:23, #1\n+Counter in file 0 12:1 -> 14:23, #1\n Counter in file 0 17:9 -> 17:10, ((#1 + (#2 + #3)) - #4)\n Counter in file 0 19:9 -> 19:14, (#1 + (#2 + #3))\n-Counter in file 0 21:9 -> 25:26, #8\n-Counter in file 0 27:13 -> 27:41, #9\n+Counter in file 0 21:9 -> 25:26, (((#1 + (#2 + #3)) - #4) + 0)\n+Counter in file 0 27:13 -> 27:41, #8\n Counter in file 0 27:41 -> 27:42, #5\n-Counter in file 0 28:13 -> 28:42, (#9 - #5)\n+Counter in file 0 28:13 -> 28:42, (#8 - #5)\n Counter in file 0 28:42 -> 28:43, #6\n-Counter in file 0 32:13 -> 32:42, (#8 - #9)\n+Counter in file 0 32:13 -> 32:42, (((#1 + (#2 + #3)) - #4) - #8)\n Counter in file 0 32:42 -> 32:43, #7\n-Counter in file 0 33:10 -> 33:11, #2\n-Counter in file 0 33:10 -> 33:11, #3\n-Counter in file 0 34:6 -> 34:7, (#2 + #3)\n Counter in file 0 35:5 -> 35:11, #4\n Counter in file 0 36:1 -> 36:2, ((#5 + (#6 + #7)) + #4)\n-Counter in file 0 5:8 -> 5:20, #1\n+Counter in file 0 4:1 -> 5:20, #1\n Counter in file 0 6:9 -> 6:16, #2\n Counter in file 0 8:9 -> 8:15, (#1 - #2)\n Counter in file 0 10:1 -> 10:2, (#2 + (#1 - #2))\n Emitting segments for file: ../coverage/try_error_result.rs\n Combined regions:\n-  5:8 -> 5:20 (count=6)\n+  4:1 -> 5:20 (count=6)\n   6:9 -> 6:16 (count=1)\n   8:9 -> 8:15 (count=5)\n   10:1 -> 10:2 (count=6)\n-  13:9 -> 14:23 (count=1)\n+  12:1 -> 14:23 (count=1)\n   17:9 -> 17:10 (count=6)\n   19:9 -> 19:14 (count=6)\n   21:9 -> 25:26 (count=6)\n@@ -33,19 +30,17 @@ Combined regions:\n   28:42 -> 28:43 (count=0)\n   32:13 -> 32:42 (count=5)\n   32:42 -> 32:43 (count=0)\n-  33:10 -> 33:11 (count=5)\n-  34:6 -> 34:7 (count=5)\n   35:5 -> 35:11 (count=0)\n   36:1 -> 36:2 (count=1)\n-Segment at 5:8 (count = 6), RegionEntry\n+Segment at 4:1 (count = 6), RegionEntry\n Segment at 5:20 (count = 0), Skipped\n Segment at 6:9 (count = 1), RegionEntry\n Segment at 6:16 (count = 0), Skipped\n Segment at 8:9 (count = 5), RegionEntry\n Segment at 8:15 (count = 0), Skipped\n Segment at 10:1 (count = 6), RegionEntry\n Segment at 10:2 (count = 0), Skipped\n-Segment at 13:9 (count = 1), RegionEntry\n+Segment at 12:1 (count = 1), RegionEntry\n Segment at 14:23 (count = 0), Skipped\n Segment at 17:9 (count = 6), RegionEntry\n Segment at 17:10 (count = 0), Skipped\n@@ -62,10 +57,6 @@ Segment at 28:43 (count = 0), Skipped\n Segment at 32:13 (count = 5), RegionEntry\n Segment at 32:42 (count = 0), RegionEntry\n Segment at 32:43 (count = 0), Skipped\n-Segment at 33:10 (count = 5), RegionEntry\n-Segment at 33:11 (count = 0), Skipped\n-Segment at 34:6 (count = 5), RegionEntry\n-Segment at 34:7 (count = 0), Skipped\n Segment at 35:5 (count = 0), RegionEntry\n Segment at 35:11 (count = 0), Skipped\n Segment at 36:1 (count = 1), RegionEntry", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.try_error_result.txt"}, {"sha": "b0319cd9e189679630ee4c6c182a9a55ca42ea0e", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.uses_crate.txt", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.uses_crate.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.uses_crate.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.uses_crate.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,110 @@\n+Counter in file 0 17:1 -> 19:2, #1\n+Counter in file 0 25:1 -> 27:2, #1\n+Counter in file 0 17:1 -> 19:2, #1\n+Counter in file 0 5:1 -> 12:2, #1\n+Counter in file 0 17:1 -> 19:2, 0\n+Counter in file 0 33:1 -> 35:2, 0\n+Counter in file 0 45:1 -> 48:16, 0\n+Counter in file 0 48:17 -> 50:6, 0\n+Counter in file 0 50:6 -> 50:7, 0\n+Counter in file 0 51:1 -> 51:2, 0\n+Counter in file 0 53:1 -> 61:2, #1\n+Counter in file 0 25:1 -> 27:2, #1\n+Counter in file 0 29:1 -> 31:2, #1\n+Counter in file 0 21:1 -> 23:2, #1\n+Counter in file 0 5:1 -> 5:24, #1\n+Counter in file 0 9:9 -> 11:15, (#1 + 0)\n+Counter in file 0 11:16 -> 13:6, #2\n+Counter in file 0 13:6 -> 13:7, (#1 - #2)\n+Counter in file 0 14:5 -> 15:2, (#2 + (#1 - #2))\n+Counter in file 0 21:1 -> 23:2, #1\n+Counter in file 0 37:1 -> 40:16, #1\n+Counter in file 0 40:17 -> 42:6, #2\n+Counter in file 0 42:6 -> 42:7, (#1 - #2)\n+Counter in file 0 43:1 -> 43:2, (#2 + (#1 - #2))\n+Emitting segments for file: ../coverage/lib/used_crate.rs\n+Combined regions:\n+  5:1 -> 5:24 (count=1)\n+  9:9 -> 11:15 (count=1)\n+  11:16 -> 13:6 (count=1)\n+  13:6 -> 13:7 (count=0)\n+  14:5 -> 15:2 (count=1)\n+  17:1 -> 19:2 (count=2)\n+  21:1 -> 23:2 (count=2)\n+  25:1 -> 27:2 (count=2)\n+  29:1 -> 31:2 (count=2)\n+  33:1 -> 35:2 (count=0)\n+  37:1 -> 40:16 (count=0)\n+  40:17 -> 42:6 (count=0)\n+  42:6 -> 42:7 (count=0)\n+  43:1 -> 43:2 (count=0)\n+  45:1 -> 48:16 (count=0)\n+  48:17 -> 50:6 (count=0)\n+  50:6 -> 50:7 (count=0)\n+  51:1 -> 51:2 (count=0)\n+  53:1 -> 61:2 (count=1)\n+Segment at 5:1 (count = 1), RegionEntry\n+Segment at 5:24 (count = 0), Skipped\n+Segment at 9:9 (count = 1), RegionEntry\n+Segment at 11:15 (count = 0), Skipped\n+Segment at 11:16 (count = 1), RegionEntry\n+Segment at 13:6 (count = 0), RegionEntry\n+Segment at 13:7 (count = 0), Skipped\n+Segment at 14:5 (count = 1), RegionEntry\n+Segment at 15:2 (count = 0), Skipped\n+Segment at 17:1 (count = 2), RegionEntry\n+Segment at 19:2 (count = 0), Skipped\n+Segment at 21:1 (count = 2), RegionEntry\n+Segment at 23:2 (count = 0), Skipped\n+Segment at 25:1 (count = 2), RegionEntry\n+Segment at 27:2 (count = 0), Skipped\n+Segment at 29:1 (count = 2), RegionEntry\n+Segment at 31:2 (count = 0), Skipped\n+Segment at 33:1 (count = 0), RegionEntry\n+Segment at 35:2 (count = 0), Skipped\n+Segment at 37:1 (count = 0), RegionEntry\n+Segment at 40:16 (count = 0), Skipped\n+Segment at 40:17 (count = 0), RegionEntry\n+Segment at 42:6 (count = 0), RegionEntry\n+Segment at 42:7 (count = 0), Skipped\n+Segment at 43:1 (count = 0), RegionEntry\n+Segment at 43:2 (count = 0), Skipped\n+Segment at 45:1 (count = 0), RegionEntry\n+Segment at 48:16 (count = 0), Skipped\n+Segment at 48:17 (count = 0), RegionEntry\n+Segment at 50:6 (count = 0), RegionEntry\n+Segment at 50:7 (count = 0), Skipped\n+Segment at 51:1 (count = 0), RegionEntry\n+Segment at 51:2 (count = 0), Skipped\n+Segment at 53:1 (count = 1), RegionEntry\n+Segment at 61:2 (count = 0), Skipped\n+Emitting segments for function: _RINvCsbDqzXfLQacH_10used_crate41used_only_from_bin_crate_generic_functionReECs4fqI2P2rA04_10uses_crate\n+Combined regions:\n+  17:1 -> 19:2 (count=1)\n+Segment at 17:1 (count = 1), RegionEntry\n+Segment at 19:2 (count = 0), Skipped\n+Emitting segments for function: _RINvCsbDqzXfLQacH_10used_crate41used_only_from_bin_crate_generic_functionRINtNtCs3QflaznQylx_5alloc3vec3VeclEECs4fqI2P2rA04_10uses_crate\n+Combined regions:\n+  17:1 -> 19:2 (count=1)\n+Segment at 17:1 (count = 1), RegionEntry\n+Segment at 19:2 (count = 0), Skipped\n+Emitting segments for function: _RINvCsbDqzXfLQacH_10used_crate46used_only_from_this_lib_crate_generic_functionINtNtCs3QflaznQylx_5alloc3vec3VeclEEB2_\n+Combined regions:\n+  21:1 -> 23:2 (count=1)\n+Segment at 21:1 (count = 1), RegionEntry\n+Segment at 23:2 (count = 0), Skipped\n+Emitting segments for function: _RINvCsbDqzXfLQacH_10used_crate46used_only_from_this_lib_crate_generic_functionReEB2_\n+Combined regions:\n+  21:1 -> 23:2 (count=1)\n+Segment at 21:1 (count = 1), RegionEntry\n+Segment at 23:2 (count = 0), Skipped\n+Emitting segments for function: _RINvCsbDqzXfLQacH_10used_crate50used_from_bin_crate_and_lib_crate_generic_functionINtNtCs3QflaznQylx_5alloc3vec3VeclEECs4fqI2P2rA04_10uses_crate\n+Combined regions:\n+  25:1 -> 27:2 (count=1)\n+Segment at 25:1 (count = 1), RegionEntry\n+Segment at 27:2 (count = 0), Skipped\n+Emitting segments for function: _RINvCsbDqzXfLQacH_10used_crate50used_from_bin_crate_and_lib_crate_generic_functionReEB2_\n+Combined regions:\n+  25:1 -> 27:2 (count=1)\n+Segment at 25:1 (count = 1), RegionEntry\n+Segment at 27:2 (count = 0), Skipped"}, {"sha": "90629ac84cdf6a2dc8fe05596e74f590af7e07b7", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.while.txt", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.while.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,14 +1,14 @@\n-Counter in file 0 2:9 -> 2:16, #1\n+Counter in file 0 1:1 -> 2:16, #1\n Counter in file 0 3:11 -> 3:20, (#1 + #2)\n Counter in file 0 3:21 -> 4:6, #2\n Counter in file 0 5:1 -> 5:2, ((#1 + #2) - #2)\n Emitting segments for file: ../coverage/while.rs\n Combined regions:\n-  2:9 -> 2:16 (count=1)\n+  1:1 -> 2:16 (count=1)\n   3:11 -> 3:20 (count=1)\n   3:21 -> 4:6 (count=0)\n   5:1 -> 5:2 (count=1)\n-Segment at 2:9 (count = 1), RegionEntry\n+Segment at 1:1 (count = 1), RegionEntry\n Segment at 2:16 (count = 0), Skipped\n Segment at 3:11 (count = 1), RegionEntry\n Segment at 3:20 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.while.txt"}, {"sha": "12f444945a18ab14c0875c57530179f9294c4fda", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.while_early_ret.txt", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.while_early_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.while_early_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.while_early_ret.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,24 +1,24 @@\n-Counter in file 0 5:9 -> 5:27, #1\n+Counter in file 0 4:1 -> 5:27, #1\n Counter in file 0 7:9 -> 9:10, (#1 + #2)\n Counter in file 0 12:13 -> 14:14, ((#1 + #2) - #3)\n-Counter in file 0 18:21 -> 20:22, #6\n+Counter in file 0 18:21 -> 20:22, (((#1 + #2) - #3) - #2)\n Counter in file 0 22:21 -> 22:27, #4\n Counter in file 0 26:21 -> 26:27, #5\n-Counter in file 0 30:9 -> 32:10, #2\n+Counter in file 0 29:10 -> 32:10, #2\n Counter in file 0 35:5 -> 35:11, #3\n Counter in file 0 36:1 -> 36:2, ((#4 + #5) + #3)\n Emitting segments for file: ../coverage/while_early_ret.rs\n Combined regions:\n-  5:9 -> 5:27 (count=1)\n+  4:1 -> 5:27 (count=1)\n   7:9 -> 9:10 (count=7)\n   12:13 -> 14:14 (count=7)\n   18:21 -> 20:22 (count=1)\n   22:21 -> 22:27 (count=0)\n   26:21 -> 26:27 (count=1)\n-  30:9 -> 32:10 (count=6)\n+  29:10 -> 32:10 (count=6)\n   35:5 -> 35:11 (count=0)\n   36:1 -> 36:2 (count=1)\n-Segment at 5:9 (count = 1), RegionEntry\n+Segment at 4:1 (count = 1), RegionEntry\n Segment at 5:27 (count = 0), Skipped\n Segment at 7:9 (count = 7), RegionEntry\n Segment at 9:10 (count = 0), Skipped\n@@ -30,7 +30,7 @@ Segment at 22:21 (count = 0), RegionEntry\n Segment at 22:27 (count = 0), Skipped\n Segment at 26:21 (count = 1), RegionEntry\n Segment at 26:27 (count = 0), Skipped\n-Segment at 30:9 (count = 6), RegionEntry\n+Segment at 29:10 (count = 6), RegionEntry\n Segment at 32:10 (count = 0), Skipped\n Segment at 35:5 (count = 0), RegionEntry\n Segment at 35:11 (count = 0), Skipped", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.while_early_ret.txt"}, {"sha": "6ed3e465611e99b8220575ee061c045361503ca9", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.yield.txt", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.yield.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.yield.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.yield.txt?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,94 @@\n+Counter in file 0 7:1 -> 7:11, #1\n+Counter in file 0 8:9 -> 8:22, (#1 + 0)\n+Counter in file 0 13:11 -> 14:35, (#1 + 0)\n+Counter in file 0 14:39 -> 14:41, #4\n+Counter in file 0 15:14 -> 15:52, (#2 + #3)\n+Counter in file 0 17:11 -> 17:46, (#4 + 0)\n+Counter in file 0 18:34 -> 18:39, (#4 - #5)\n+Counter in file 0 18:44 -> 18:46, ((#4 - #5) - #6)\n+Counter in file 0 19:14 -> 19:52, (#5 + #6)\n+Counter in file 0 22:9 -> 22:22, (((#4 - #5) - #6) + 0)\n+Counter in file 0 29:11 -> 30:35, (((#4 - #5) - #6) + 0)\n+Counter in file 0 30:39 -> 30:41, #9\n+Counter in file 0 31:14 -> 31:52, (#7 + #8)\n+Counter in file 0 33:11 -> 34:35, (#9 + 0)\n+Counter in file 0 34:39 -> 34:41, #12\n+Counter in file 0 35:14 -> 35:52, (#10 + #11)\n+Counter in file 0 37:1 -> 37:2, (#12 + 0)\n+Counter in file 0 8:28 -> 9:16, #1\n+Counter in file 0 10:16 -> 11:6, #2\n+Counter in file 0 22:28 -> 23:16, #1\n+Counter in file 0 24:9 -> 24:16, #2\n+Counter in file 0 25:9 -> 25:16, #3\n+Counter in file 0 26:16 -> 27:6, #4\n+Emitting segments for file: ../coverage/yield.rs\n+Combined regions:\n+  7:1 -> 7:11 (count=1)\n+  8:9 -> 8:22 (count=1)\n+  8:28 -> 9:16 (count=1)\n+  10:16 -> 11:6 (count=1)\n+  13:11 -> 14:35 (count=1)\n+  14:39 -> 14:41 (count=1)\n+  15:14 -> 15:52 (count=0)\n+  17:11 -> 17:46 (count=1)\n+  18:34 -> 18:39 (count=1)\n+  18:44 -> 18:46 (count=1)\n+  19:14 -> 19:52 (count=0)\n+  22:9 -> 22:22 (count=1)\n+  22:28 -> 23:16 (count=1)\n+  24:9 -> 24:16 (count=1)\n+  25:9 -> 25:16 (count=0)\n+  26:16 -> 27:6 (count=0)\n+  29:11 -> 30:35 (count=1)\n+  30:39 -> 30:41 (count=1)\n+  31:14 -> 31:52 (count=0)\n+  33:11 -> 34:35 (count=1)\n+  34:39 -> 34:41 (count=1)\n+  35:14 -> 35:52 (count=0)\n+  37:1 -> 37:2 (count=1)\n+Segment at 7:1 (count = 1), RegionEntry\n+Segment at 7:11 (count = 0), Skipped\n+Segment at 8:9 (count = 1), RegionEntry\n+Segment at 8:22 (count = 0), Skipped\n+Segment at 8:28 (count = 1), RegionEntry\n+Segment at 9:16 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 11:6 (count = 0), Skipped\n+Segment at 13:11 (count = 1), RegionEntry\n+Segment at 14:35 (count = 0), Skipped\n+Segment at 14:39 (count = 1), RegionEntry\n+Segment at 14:41 (count = 0), Skipped\n+Segment at 15:14 (count = 0), RegionEntry\n+Segment at 15:52 (count = 0), Skipped\n+Segment at 17:11 (count = 1), RegionEntry\n+Segment at 17:46 (count = 0), Skipped\n+Segment at 18:34 (count = 1), RegionEntry\n+Segment at 18:39 (count = 0), Skipped\n+Segment at 18:44 (count = 1), RegionEntry\n+Segment at 18:46 (count = 0), Skipped\n+Segment at 19:14 (count = 0), RegionEntry\n+Segment at 19:52 (count = 0), Skipped\n+Segment at 22:9 (count = 1), RegionEntry\n+Segment at 22:22 (count = 0), Skipped\n+Segment at 22:28 (count = 1), RegionEntry\n+Segment at 23:16 (count = 0), Skipped\n+Segment at 24:9 (count = 1), RegionEntry\n+Segment at 24:16 (count = 0), Skipped\n+Segment at 25:9 (count = 0), RegionEntry\n+Segment at 25:16 (count = 0), Skipped\n+Segment at 26:16 (count = 0), RegionEntry\n+Segment at 27:6 (count = 0), Skipped\n+Segment at 29:11 (count = 1), RegionEntry\n+Segment at 30:35 (count = 0), Skipped\n+Segment at 30:39 (count = 1), RegionEntry\n+Segment at 30:41 (count = 0), Skipped\n+Segment at 31:14 (count = 0), RegionEntry\n+Segment at 31:52 (count = 0), Skipped\n+Segment at 33:11 (count = 1), RegionEntry\n+Segment at 34:35 (count = 0), Skipped\n+Segment at 34:39 (count = 1), RegionEntry\n+Segment at 34:41 (count = 0), Skipped\n+Segment at 35:14 (count = 0), RegionEntry\n+Segment at 35:52 (count = 0), Skipped\n+Segment at 37:1 (count = 1), RegionEntry\n+Segment at 37:2 (count = 0), Skipped"}, {"sha": "ed9279841f70e5929208cd14a21616cc6969876a", "filename": "src/test/run-make-fulldeps/coverage-reports/prettify_json.py", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fprettify_json.py", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fprettify_json.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fprettify_json.py?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-reports-base/prettify_json.py"}, {"sha": "2d179aa0f1147489bebf41691d8bbe499ab2ca99", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,95 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n-35:13-35:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\n-38:10-38:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\n-38:10-38:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\n-38:10-38:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n-39:9-39:23: @4[5]: _5 = &amp;(*_6)\n-39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-40:6-40:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 2\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n-39:9-39:23: @4[5]: _5 = &amp;(*_6)\n-39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-40:6-40:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "0614da6cee27f1f9d7450ac08af5cffdedd1cc3a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,95 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#2} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n-20:21-20:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\n-23:18-23:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\n-23:18-23:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\n-23:18-23:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n-24:17-24:31: @4[5]: _5 = &amp;(*_6)\n-24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-25:14-25:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 1\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n-24:17-24:31: @4[5]: _5 = &amp;(*_6)\n-24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-25:14-25:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "bbafb44017cf9c9b85f5f2d2e103adabcaa8b3c5", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,95 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#3} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n-62:21-62:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\n-65:18-65:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\n-65:18-65:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\n-65:18-65:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n-66:17-66:31: @4[5]: _5 = &amp;(*_6)\n-66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-67:14-67:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 3\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n-66:17-66:31: @4[5]: _5 = &amp;(*_6)\n-66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-67:14-67:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8d1938c0922becab34dd6bf90febe71df00685c3", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 4515, "changes": 4515, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae"}, {"sha": "cda1040c29114148ca7254cbed081bf9231309cf", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 263, "changes": 263, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,263 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>conditions.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n-4:9-4:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:12: @0[5]: _3 = const true\n-5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\n-7:6-7:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\n-7:6-7:6: @3.Goto: goto -&gt; bb4\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\n-7:6-7:6: @3.Goto: goto -&gt; bb4\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n-10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n-10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n-13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n-13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n-14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n-14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:42-14:42: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:42-14:42: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n-14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:60-14:60: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:60-14:60: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\n-16:10-16:10: @22.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\n-16:10-16:10: @22.Goto: goto -&gt; bb23\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\n-16:10-16:10: @22.Goto: goto -&gt; bb23\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown -= 5;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @25[3]: _21 = const 0_i32\n-23:9-23:22: @25[4]: FakeRead(ForLet, _21)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:12: @25[7]: _23 = const true\n-24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\n-26:6-26:6: @28.Goto: goto -&gt; bb29\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\n-26:6-26:6: @28.Goto: goto -&gt; bb29\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\n-26:6-26:6: @28.Goto: goto -&gt; bb29\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @27.Goto: goto -&gt; bb29\"><span class=\"annotation\">@27\u298a</span>\u2038<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n-28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n-28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @33[0]: _21 = move (_27.0: i32)\"><span class=\"annotation\">@33\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n-30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n-30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n-31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n-31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:42-31:42: @41.Goto: goto -&gt; bb44\"><span class=\"annotation\">@41\u298a</span>\u2038<span class=\"annotation\">\u2989@41</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:42-31:42: @42.Goto: goto -&gt; bb44\"><span class=\"annotation\">@42\u298a</span>\u2038<span class=\"annotation\">\u2989@42</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n-31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:60-31:60: @37.Goto: goto -&gt; bb40\"><span class=\"annotation\">@37\u298a</span>\u2038<span class=\"annotation\">\u2989@37</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:60-31:60: @38.Goto: goto -&gt; bb40\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\n-33:10-33:10: @47.Goto: goto -&gt; bb48\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\n-33:10-33:10: @47.Goto: goto -&gt; bb48\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\n-33:10-33:10: @47.Goto: goto -&gt; bb48\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46.Goto: goto -&gt; bb48\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:25-39:26: @50[3]: _41 = const 0_i32\n-39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n-40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">        countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @52.Goto: goto -&gt; bb54\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n-44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n-44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:9-45:23: @58[0]: _41 = move (_47.0: i32)\"><span class=\"annotation\">@58\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n-46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n-46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n-47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n-47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:42-47:42: @66.Goto: goto -&gt; bb69\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:42-47:42: @67.Goto: goto -&gt; bb69\"><span class=\"annotation\">@67\u298a</span>\u2038<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n-47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:60-47:60: @62.Goto: goto -&gt; bb65\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:60-47:60: @63.Goto: goto -&gt; bb65\"><span class=\"annotation\">@63\u298a</span>\u2038<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:10-49:10: @71.Goto: goto -&gt; bb73\"><span class=\"annotation\">@71\u298a</span>\u2038<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @74[0]: _41 = move (_59.0: i32)\"><span class=\"annotation\">@74\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\"><span class=\"annotation\">@60,75,76\u298a</span>should_be_reachable = countdown;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@60,75,76</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n-57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n-57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @81[0]: _41 = move (_77.0: i32)\"><span class=\"annotation\">@81\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n-59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n-59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n-60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n-60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:42-60:42: @89.Goto: goto -&gt; bb92\"><span class=\"annotation\">@89\u298a</span>\u2038<span class=\"annotation\">\u2989@89</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:42-60:42: @90.Goto: goto -&gt; bb92\"><span class=\"annotation\">@90\u298a</span>\u2038<span class=\"annotation\">\u2989@90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n-60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:60-60:60: @85.Goto: goto -&gt; bb88\"><span class=\"annotation\">@85\u298a</span>\u2038<span class=\"annotation\">\u2989@85</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:60-60:60: @86.Goto: goto -&gt; bb88\"><span class=\"annotation\">@86\u298a</span>\u2038<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"62:10-62:10: @94.Goto: goto -&gt; bb96\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:9-63:23: @97[0]: _41 = move (_89.0: i32)\"><span class=\"annotation\">@97\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:2-67:2: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "aebeb39fd51790f003eb9d6e6d30699f169b3aea", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,129 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>drop_trait.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>_firecracker = Firework { strength: 1 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\">    let _tnt = Firework { strength: 100 }<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n-20:18-20:41: @3[7]: _11 = &amp;(*_21)\n-20:18-20:41: @3[8]: _10 = &amp;(*_11)\n-20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-20:9-20:43: @3[15]: _17 = ()\n-20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n-20:9-20:43: @3[17]: _20 = const main::promoted[0]\n-20:9-20:43: @3[18]: _15 = &amp;(*_20)\n-20:9-20:43: @3[19]: _14 = &amp;(*_15)\n-20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n-20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n-20:9-20:43: @5[5]: _6 = const ()\n-21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,5,9,10\u298a</span>println!(\"Exiting with error...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n-20:18-20:41: @3[7]: _11 = &amp;(*_21)\n-20:18-20:41: @3[8]: _10 = &amp;(*_11)\n-20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-20:9-20:43: @3[15]: _17 = ()\n-20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n-20:9-20:43: @3[17]: _20 = const main::promoted[0]\n-20:9-20:43: @3[18]: _15 = &amp;(*_20)\n-20:9-20:43: @3[19]: _14 = &amp;(*_15)\n-20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n-20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n-20:9-20:43: @5[5]: _6 = const ()\n-21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,5,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let _ = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,6,7,8\u298a</span>Firework { strength: 1000 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "80a3d52fe43c94e1fa35f861c8282db1188056d5", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 177, "changes": 177, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,177 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>generics.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\"><span class=\"annotation\">@0,1,2,3\u298a</span>mut firecracker = Firework { strength: 1 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    firecracker.set_strength(2);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    let mut tnt = Firework { strength: 100.1 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    tnt.set_strength(200.1);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    tnt.set_strength(300.3)<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n-31:18-31:41: @6[7]: _17 = &amp;(*_27)\n-31:18-31:41: @6[8]: _16 = &amp;(*_17)\n-31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-31:9-31:43: @6[15]: _23 = ()\n-31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n-31:9-31:43: @6[17]: _26 = const main::promoted[0]\n-31:9-31:43: @6[18]: _21 = &amp;(*_26)\n-31:9-31:43: @6[19]: _20 = &amp;(*_21)\n-31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n-31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n-31:9-31:43: @8[5]: _12 = const ()\n-32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,8,12,13\u298a</span>println!(\"Exiting with error...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n-31:18-31:41: @6[7]: _17 = &amp;(*_27)\n-31:18-31:41: @6[8]: _16 = &amp;(*_17)\n-31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-31:9-31:43: @6[15]: _23 = ()\n-31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n-31:9-31:43: @6[17]: _26 = const main::promoted[0]\n-31:9-31:43: @6[18]: _21 = &amp;(*_26)\n-31:9-31:43: @6[19]: _20 = &amp;(*_21)\n-31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n-31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n-31:9-31:43: @8[5]: _12 = const ()\n-32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,8,12,13</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let _ = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-37:8-37:10: @9[2]: _25 = ()\n-37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,9,10,11\u298a</span>Firework { strength: 1000 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-37:8-37:10: @9[2]: _25 = ()\n-37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-37:8-37:10: @9[2]: _25 = ()\n-37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "77983f853908608d0427824a25a57c4e5778aedf", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 178, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,178 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>if.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        std::env::args().len()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    ==</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        1</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        mut</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\n-27:6-27:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\n-27:6-27:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\n-27:6-27:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\n-27:6-27:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\n-27:6-27:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\n-27:6-27:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:6-27:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8716ac45d5714ca3bca4f4cbfddc0d57fce11440", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 173, "changes": 173, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,173 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>if_else.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else // Note coverage region difference without semicolon</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n-20:9-22:16: @5[1]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n-20:9-22:16: @5[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n-20:9-22:16: @5[1]: _6 = const ()\">            100<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n-26:9-26:16: @7[4]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">            100</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "31bb57be81b53a798f1a6b2d3c8ffb1e94ace7fb", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,116 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main-in_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn in_func(a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\"><span class=\"annotation\">@1,2,3,4\u298a</span>println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "0388ca42ac88be0114677552dffdc34b20cc2ed1", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 229, "changes": 229, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,229 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>lazy_boolean.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\">    let (mut a, mut b, mut c) = (0, 0, 0)<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\n-14:6-14:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\n-14:6-14:6: @6.Goto: goto -&gt; bb7\">        a = 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\n-14:6-14:6: @6.Goto: goto -&gt; bb7\">        b = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\n-14:6-14:6: @6.Goto: goto -&gt; bb7\">        c = 100;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\n-14:6-14:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n-18:17-18:18: @7[7]: _14 = _6\n-18:13-18:18: @7[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@7\u298a</span>a &lt; b<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n-20:17-20:18: @10[4]: _17 = _7\n-20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:18-20:18: @8.Goto: goto -&gt; bb11\"><span class=\"annotation\">@8\u298a</span>\u2038<span class=\"annotation\">\u2989@8</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:18: @9.Goto: goto -&gt; bb11\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n-25:17-25:18: @11[8]: _21 = _5\n-25:13-25:18: @11[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@11\u298a</span>b &lt; a<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n-27:17-27:18: @14[4]: _24 = _7\n-27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:18-27:18: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:18-27:18: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:20-29:21: @15[6]: _27 = _5\n-29:24-29:25: @15[8]: _28 = _6\n-29:20-29:25: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:29-29:30: @18[2]: _30 = _6\n-29:33-29:34: @18[4]: _31 = _7\n-29:29-29:34: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:34-29:34: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:34-29:34: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:20-30:21: @19[6]: _34 = _6\n-30:24-30:25: @19[8]: _35 = _5\n-30:20-30:25: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:29-30:30: @22[2]: _37 = _6\n-30:33-30:34: @22[4]: _38 = _7\n-30:29-30:34: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:34-30:34: @20.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:34-30:34: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n-33:9-34:16: @23[7]: _40 = Not(move _41)\n-33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\"><span class=\"annotation\">@23\u298a</span>!</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n-33:9-34:16: @23[7]: _40 = Not(move _41)\n-33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\">        is_true<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\n-38:6-38:6: @26.Goto: goto -&gt; bb27\"><span class=\"annotation\">@24,26\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\n-38:6-38:6: @26.Goto: goto -&gt; bb27\">        a = 2</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\n-38:6-38:6: @26.Goto: goto -&gt; bb27\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\n-38:6-38:6: @26.Goto: goto -&gt; bb27\">    }<span class=\"annotation\">\u2989@24,26</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:6-38:6: @25.Goto: goto -&gt; bb27\"><span class=\"annotation\">@25\u298a</span>\u2038<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:16: @27[4]: _43 = _1\n-41:9-41:16: @27[5]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\"><span class=\"annotation\">@28,30\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\">        b = 30</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@28,30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\"><span class=\"annotation\">@29\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\">        c = 400</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:9-52:16: @31[5]: _46 = _1\n-52:8-52:16: @31[6]: _45 = Not(move _46)\n-52:8-52:16: @31[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@31\u298a</span>!is_true<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n-52:17-54:6: @34[1]: _44 = const ()\n-54:6-54:6: @34.Goto: goto -&gt; bb35\"><span class=\"annotation\">@32,34\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n-52:17-54:6: @34[1]: _44 = const ()\n-54:6-54:6: @34.Goto: goto -&gt; bb35\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n-52:17-54:6: @34[1]: _44 = const ()\n-54:6-54:6: @34.Goto: goto -&gt; bb35\">    }<span class=\"annotation\">\u2989@32,34</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"54:6-54:6: @33.Goto: goto -&gt; bb35\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"56:8-56:15: @35[3]: _47 = _1\n-56:8-56:15: @35[4]: FakeRead(ForMatchedPlace, _47)\"><span class=\"annotation\">@35\u298a</span>is_true<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n-56:16-58:6: @38[1]: _0 = const ()\"><span class=\"annotation\">@36,38\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n-56:16-58:6: @38[1]: _0 = const ()\">        b = 30;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n-56:16-58:6: @38[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@36,38</span></span></span><span class=\"code\" style=\"--layer: 0\"> else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n-58:12-60:6: @37[1]: _0 = const ()\"><span class=\"annotation\">@37\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n-58:12-60:6: @37[1]: _0 = const ()\">        c = 400;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n-58:12-60:6: @37[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@37</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:2-61:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "941bfca76f321de009e19b1a71d0d1182c192bcc", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,128 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>loop_break_value.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">    let result</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            loop</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">        {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            break</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">        }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "334a64b0bb8f9fd6ebaf0bdf2329e0efd5023d23", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loops_branches/loops_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,104 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loops_branches/loops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>loops_branches.{impl#0}-fmt - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\n-10:12-10:16: @0[3]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:16-11:21: @3[2]: _6 = const false\n-11:16-11:21: @3[3]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@1,3\u298a</span>false<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                while </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:23-12:27: @7[1]: _8 = const true\n-12:23-12:27: @7[2]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6,7\u298a</span>true<span class=\"annotation\">\u2989@6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\n-13:18-13:18: @10.Goto: goto -&gt; bb6\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\n-13:18-13:18: @10.Goto: goto -&gt; bb6\">                }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @9.Goto: goto -&gt; bb11\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:14-14:14: @5.Goto: goto -&gt; bb11\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:20-15:21: @11[6]: _13 = &amp;mut (*_2)\n-15:23-15:30: @11[11]: _32 = const &lt;DebugTest as Debug&gt;::fmt::promoted[1]\n-15:23-15:30: @11[12]: _17 = &amp;(*_32)\n-15:23-15:30: @11[13]: _16 = &amp;(*_17)\n-15:23-15:30: @11[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-15:13-15:31: @11[20]: _23 = ()\n-15:13-15:31: @11[21]: FakeRead(ForMatchedPlace, _23)\n-15:13-15:31: @11[22]: _31 = const &lt;DebugTest as Debug&gt;::fmt::promoted[0]\n-15:13-15:31: @11[23]: _21 = &amp;(*_31)\n-15:13-15:31: @11[24]: _20 = &amp;(*_21)\n-15:13-15:31: @11[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-15:13-15:31: @11.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb12, unwind: bb23]\n-15:13-15:31: @12.Call: _12 = Formatter::write_fmt(move _13, move _14) -&gt; [return: bb13, unwind: bb23]\"><span class=\"annotation\">@11,12,13,14\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@11,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:31-15:32: @18[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n-15:31-15:32: @18[4]: _28 = _25\n-15:31-15:32: @18.Call: _27 = &lt;std::fmt::Error as From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb19, unwind: bb23]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\">        }<span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:10-17:10: @15.Goto: goto -&gt; bb21\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @21[3]: _30 = ()\n-18:9-18:15: @21[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@21\u298a</span>Ok(())<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @22.Return: return\"><span class=\"annotation\">@22\u298a</span>\u2038<span class=\"annotation\">\u2989@22</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "7fbda5d0b3d2cc0627edf581de8edc7b1f37418a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 135, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,135 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>nested_loops.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n-2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n-2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n-3:25-3:27: @3[2]: _5 = const 10_i32\n-3:9-3:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n-2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n-2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n-3:25-3:27: @3[2]: _5 = const 10_i32\n-3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    'outer: while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:19-5:28: @5[2]: _8 = _5\n-5:19-5:32: @5[3]: _7 = Gt(move _8, const 0_i32)\n-5:19-5:32: @5[5]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@4,5\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n-6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n-7:21-7:24: @8[4]: _10 = const 100_i32\n-7:13-7:18: @8[5]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@6,8,9\u298a</span>mut a = 100;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n-6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n-7:21-7:24: @8[4]: _10 = const 100_i32\n-7:13-7:18: @8[5]: FakeRead(ForLet, _10)\">        let mut b = 100<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:13-8:14: @16[1]: _21 = ((_17 as Some).0: i32)\n-8:13-8:14: @16[3]: _22 = _21\n-8:13-8:14: @16[4]: _15 = move _22\n-8:13-8:14: @16[5]: _16 = const ()\"><span class=\"annotation\">@14,16\u298a</span>_<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:18-8:23: @11[5]: _19 = &amp;mut _14\n-8:18-8:23: @11[6]: _18 = &amp;mut (*_19)\n-8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb35]\n-8:18-8:23: @12[1]: FakeRead(ForMatchedPlace, _17)\"><span class=\"annotation\">@10,11,12\u298a</span>0..50<span class=\"annotation\">\u2989@10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:16-9:17: @16[15]: _27 = _9\n-9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\n-9:16-9:22: @16[18]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @19[0]: _11 = const ()\"><span class=\"annotation\">@17,19\u298a</span>break<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @20[0]: _9 = move (_29.0: i32)\"><span class=\"annotation\">@20\u298a</span>a -= 5<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@21\u298a</span>b -= 5<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n-14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n-16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@25\u298a</span>a -= 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n-16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@29\u298a</span>a -= 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\">                }</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a3c98e97bbd870cda723a13fd1372fc81dd386c2", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#0}-new.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,104 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#0}-new - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">pub fn new(major: usize, minor: usize, patch: usize) -&gt; Self {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>Self {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">            major,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">            minor,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">            patch,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">        }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "00b5d91b1cf91ade64c6455df5d7441beb95822b", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-gt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,83 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-gt-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-7:5-7:17: @0[5]: _4 = &amp;(*_5)\n-7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n-7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n-7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n-</body>\n-</html>"}, {"sha": "f1f78e46639493dc3b13b23dc818285e45e6e32f", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-gt.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,92 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-gt - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n-4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n-4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n-4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n-4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n-4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n-4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n-4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n-4:39-4:49: @0[20]: _14 = &amp;(*_6)\n-4:39-4:49: @0[21]: _13 = &amp;(*_14)\n-4:39-4:49: @0[24]: _16 = &amp;(*_3)\n-4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n-4:39-4:49: @2[4]: _19 = &amp;_7\n-4:39-4:49: @2[6]: _20 = &amp;_4\n-4:39-4:49: @2[8]: _21 = &amp;_8\n-4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "49ebcfaafb54eda1caa865feda59f721aaeb95c3", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-le.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,92 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-le - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n-4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n-4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n-4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n-4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n-4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n-4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n-4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n-4:39-4:49: @0[20]: _14 = &amp;(*_6)\n-4:39-4:49: @0[21]: _13 = &amp;(*_14)\n-4:39-4:49: @0[24]: _16 = &amp;(*_3)\n-4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n-4:39-4:49: @2[4]: _19 = &amp;_7\n-4:39-4:49: @2[6]: _20 = &amp;_4\n-4:39-4:49: @2[8]: _21 = &amp;_8\n-4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "812dc622ec038f12d8706a2a34181b4af7d312ee", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-lt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,83 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-lt-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-7:5-7:17: @0[5]: _4 = &amp;(*_5)\n-7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n-7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n-7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n-</body>\n-</html>"}, {"sha": "742b45773232b1718203861996bc3ca50d750b85", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-lt.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,92 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-lt - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n-4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n-4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n-4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n-4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n-4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n-4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n-4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n-4:39-4:49: @0[20]: _14 = &amp;(*_6)\n-4:39-4:49: @0[21]: _13 = &amp;(*_14)\n-4:39-4:49: @0[24]: _16 = &amp;(*_3)\n-4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n-4:39-4:49: @2[4]: _19 = &amp;_7\n-4:39-4:49: @2[6]: _20 = &amp;_4\n-4:39-4:49: @2[8]: _21 = &amp;_8\n-4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3714c774bae3f90b9b9a7605aee61a64b003d8b7", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-partial_cmp.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,78 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-partial_cmp - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">@17\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n-4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n-4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">@14,15\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:39-4:49: @16.Goto: goto -&gt; bb17\"><span class=\"annotation\">@16\u298a</span>PartialOrd<span class=\"annotation\">\u2989@16</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n-4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n-4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">\u2989@14,15</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">\u2989@17</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:49-4:49: @18.Return: return\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "be1f7f7d2e726585250cc0c15511ad3dfda36e29", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#6}-ne.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,81 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#6}-ne - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n-4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n-4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">@5\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n-4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">@6\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:24-4:33: @1[0]: _0 = const true\n-4:24-4:33: @1.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1\u298a</span>PartialEq<span class=\"annotation\">\u2989@1</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n-4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@6</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n-4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@5</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n-4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "914e829faa0bd1e556418863624e3b6962f731fe", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,143 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>simple_loop.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@13\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @7.Goto: goto -&gt; bb8\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "5c9baee5d805064462fbc274e362f0c51cc320c2", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,128 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>try_error_result.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),()&gt; {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n-13:9-14:18: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1\u298a</span>mut</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n-13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">        countdown = 10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @8[1]: _13 = ((_9 as Some).0: i32)\n-17:9-17:10: @8[3]: _14 = _13\n-17:9-17:10: @8[4]: _7 = move _14\n-17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8\u298a</span>_<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n-19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n-19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb40]\n-19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            -= 1</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        if</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb40]\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @18[1]: _24 = ((_21 as Err).0: ())\n-27:41-27:42: @18[4]: _27 = _24\n-27:41-27:42: @18.Call: _26 = &lt;() as From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb19, unwind: bb40]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:13-28:42: @15.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb40]\"><span class=\"annotation\">@15,21,22\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@15,21,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:42-28:43: @26[1]: _33 = ((_30 as Err).0: ())\n-28:42-28:43: @26[4]: _36 = _33\n-28:42-28:43: @26.Call: _35 = &lt;() as From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb27, unwind: bb40]\"><span class=\"annotation\">@24,26,27,28\u298a</span>?<span class=\"annotation\">\u2989@24,26,27,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:42: @11.Call: _40 = call(const false) -&gt; [return: bb29, unwind: bb40]\"><span class=\"annotation\">@11,29,30\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,29,30</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:42-32:43: @34[1]: _42 = ((_39 as Err).0: ())\n-32:42-32:43: @34[4]: _45 = _42\n-32:42-32:43: @34.Call: _44 = &lt;() as From&lt;()&gt;&gt;::from(move _45) -&gt; [return: bb35, unwind: bb40]\"><span class=\"annotation\">@32,34,35,36\u298a</span>?<span class=\"annotation\">\u2989@32,34,35,36</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @23.Goto: goto -&gt; bb37\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:10-33:10: @31.Goto: goto -&gt; bb37\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @37.Goto: goto -&gt; bb2\"><span class=\"annotation\">@37\u298a</span>\u2038<span class=\"annotation\">\u2989@37</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @5[9]: _47 = ()\n-35:5-35:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _47)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @38.Goto: goto -&gt; bb39\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "765e3b62c11c2f02e83d5e824b9002cb909e7f70", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 127, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,127 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>while_early_ret.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n-5:9-5:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">            &gt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n-12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n-12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">                &lt;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n-12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">            5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            return</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n-18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n-18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n-18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n-18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                        &gt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n-18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n-18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                    8<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @11[1]: _12 = ()\n-22:21-22:27: @11[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@9,11\u298a</span>Ok(())<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @10[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@10\u298a</span>Err(1)<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@12\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n-35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "826e85b35e5ff46de6047f7a09f567354c89b1cc", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/Makefile", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2FMakefile?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,11 +0,0 @@\n-# needs-profiler-support\n-# ignore-msvc\n-\n-# LINK_DEAD_CODE requires ignore-msvc due to Issue #76038\n-LINK_DEAD_CODE=yes\n-\n--include ../coverage-spanview-base/Makefile\n-\n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../coverage/coverage_tools.mk for more information."}, {"sha": "58e81a221d3a8ddfae1305650edeff88414d63ab", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,95 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#1} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n-77:13-77:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\n-80:10-80:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\n-80:10-80:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\n-80:10-80:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n-81:9-81:23: @4[5]: _5 = &amp;(*_6)\n-81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-82:6-82:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 4\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n-81:9-81:23: @4[5]: _5 = &amp;(*_6)\n-81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-82:6-82:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8d1938c0922becab34dd6bf90febe71df00685c3", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 4515, "changes": 4515, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae"}, {"sha": "cda1040c29114148ca7254cbed081bf9231309cf", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 263, "changes": 263, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,263 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>conditions.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n-4:9-4:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:12: @0[5]: _3 = const true\n-5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\n-7:6-7:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\n-7:6-7:6: @3.Goto: goto -&gt; bb4\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\n-7:6-7:6: @3.Goto: goto -&gt; bb4\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n-10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n-10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n-13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n-13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n-14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n-14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:42-14:42: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:42-14:42: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n-14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:60-14:60: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:60-14:60: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\n-16:10-16:10: @22.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\n-16:10-16:10: @22.Goto: goto -&gt; bb23\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\n-16:10-16:10: @22.Goto: goto -&gt; bb23\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown -= 5;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @25[3]: _21 = const 0_i32\n-23:9-23:22: @25[4]: FakeRead(ForLet, _21)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:12: @25[7]: _23 = const true\n-24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\n-26:6-26:6: @28.Goto: goto -&gt; bb29\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\n-26:6-26:6: @28.Goto: goto -&gt; bb29\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\n-26:6-26:6: @28.Goto: goto -&gt; bb29\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @27.Goto: goto -&gt; bb29\"><span class=\"annotation\">@27\u298a</span>\u2038<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n-28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n-28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @33[0]: _21 = move (_27.0: i32)\"><span class=\"annotation\">@33\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n-30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n-30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n-31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n-31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:42-31:42: @41.Goto: goto -&gt; bb44\"><span class=\"annotation\">@41\u298a</span>\u2038<span class=\"annotation\">\u2989@41</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:42-31:42: @42.Goto: goto -&gt; bb44\"><span class=\"annotation\">@42\u298a</span>\u2038<span class=\"annotation\">\u2989@42</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n-31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:60-31:60: @37.Goto: goto -&gt; bb40\"><span class=\"annotation\">@37\u298a</span>\u2038<span class=\"annotation\">\u2989@37</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:60-31:60: @38.Goto: goto -&gt; bb40\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\n-33:10-33:10: @47.Goto: goto -&gt; bb48\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\n-33:10-33:10: @47.Goto: goto -&gt; bb48\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\n-33:10-33:10: @47.Goto: goto -&gt; bb48\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46.Goto: goto -&gt; bb48\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:25-39:26: @50[3]: _41 = const 0_i32\n-39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n-40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">        countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @52.Goto: goto -&gt; bb54\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n-44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n-44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:9-45:23: @58[0]: _41 = move (_47.0: i32)\"><span class=\"annotation\">@58\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n-46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n-46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n-47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n-47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:42-47:42: @66.Goto: goto -&gt; bb69\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:42-47:42: @67.Goto: goto -&gt; bb69\"><span class=\"annotation\">@67\u298a</span>\u2038<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n-47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:60-47:60: @62.Goto: goto -&gt; bb65\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:60-47:60: @63.Goto: goto -&gt; bb65\"><span class=\"annotation\">@63\u298a</span>\u2038<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:10-49:10: @71.Goto: goto -&gt; bb73\"><span class=\"annotation\">@71\u298a</span>\u2038<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @74[0]: _41 = move (_59.0: i32)\"><span class=\"annotation\">@74\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\"><span class=\"annotation\">@60,75,76\u298a</span>should_be_reachable = countdown;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@60,75,76</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n-57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n-57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @81[0]: _41 = move (_77.0: i32)\"><span class=\"annotation\">@81\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n-59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n-59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n-60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n-60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:42-60:42: @89.Goto: goto -&gt; bb92\"><span class=\"annotation\">@89\u298a</span>\u2038<span class=\"annotation\">\u2989@89</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:42-60:42: @90.Goto: goto -&gt; bb92\"><span class=\"annotation\">@90\u298a</span>\u2038<span class=\"annotation\">\u2989@90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n-60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:60-60:60: @85.Goto: goto -&gt; bb88\"><span class=\"annotation\">@85\u298a</span>\u2038<span class=\"annotation\">\u2989@85</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:60-60:60: @86.Goto: goto -&gt; bb88\"><span class=\"annotation\">@86\u298a</span>\u2038<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"62:10-62:10: @94.Goto: goto -&gt; bb96\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:9-63:23: @97[0]: _41 = move (_89.0: i32)\"><span class=\"annotation\">@97\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:2-67:2: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "577491a4e247c45ac92b7b0ade185041fcc311dc", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.drop_trait/drop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>drop_trait.{impl#0}-drop - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn drop(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n-10:18-10:36: @0[7]: _7 = &amp;(*_19)\n-10:18-10:36: @0[8]: _6 = &amp;(*_7)\n-10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n-10:9-10:53: @0[18]: _13 = (move _14,)\n-10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n-10:9-10:53: @0[25]: _17 = &amp;(*_15)\n-10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-10:9-10:53: @1[2]: _12 = [move _16]\n-10:9-10:53: @1[5]: _11 = &amp;_12\n-10:9-10:53: @1[6]: _10 = &amp;(*_11)\n-10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-10:9-10:53: @3[6]: _2 = const ()\n-9:24-11:6: @3[8]: _0 = const ()\n-11:6-11:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n-10:18-10:36: @0[7]: _7 = &amp;(*_19)\n-10:18-10:36: @0[8]: _6 = &amp;(*_7)\n-10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n-10:9-10:53: @0[18]: _13 = (move _14,)\n-10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n-10:9-10:53: @0[25]: _17 = &amp;(*_15)\n-10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-10:9-10:53: @1[2]: _12 = [move _16]\n-10:9-10:53: @1[5]: _11 = &amp;_12\n-10:9-10:53: @1[6]: _10 = &amp;(*_11)\n-10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-10:9-10:53: @3[6]: _2 = const ()\n-9:24-11:6: @3[8]: _0 = const ()\n-11:6-11:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n-10:18-10:36: @0[7]: _7 = &amp;(*_19)\n-10:18-10:36: @0[8]: _6 = &amp;(*_7)\n-10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n-10:9-10:53: @0[18]: _13 = (move _14,)\n-10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n-10:9-10:53: @0[25]: _17 = &amp;(*_15)\n-10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-10:9-10:53: @1[2]: _12 = [move _16]\n-10:9-10:53: @1[5]: _11 = &amp;_12\n-10:9-10:53: @1[6]: _10 = &amp;(*_11)\n-10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-10:9-10:53: @3[6]: _2 = const ()\n-9:24-11:6: @3[8]: _0 = const ()\n-11:6-11:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "bfd7f6b4bb5a00bad3c46bb1c72e40b65f16a24e", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.generics/generics.{impl#0}-set_strength.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,85 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>generics.{impl#0}-set_strength - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 9\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn set_strength(&amp;mut self, new_strength: T) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n-11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n-10:49-12:6: @0[4]: _0 = const ()\n-12:6-12:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n-11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n-10:49-12:6: @0[4]: _0 = const ()\n-12:6-12:6: @0.Return: return\">        self.strength = new_strength;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n-11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n-10:49-12:6: @0[4]: _0 = const ()\n-12:6-12:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "58a528e341bef7c94a5ee3b0c8242932377d7913", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>generics.{impl#1}-drop - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn drop(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n-18:18-18:36: @0[7]: _7 = &amp;(*_19)\n-18:18-18:36: @0[8]: _6 = &amp;(*_7)\n-18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n-18:9-18:53: @0[18]: _13 = (move _14,)\n-18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n-18:9-18:53: @0[25]: _17 = &amp;(*_15)\n-18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-18:9-18:53: @1[2]: _12 = [move _16]\n-18:9-18:53: @1[5]: _11 = &amp;_12\n-18:9-18:53: @1[6]: _10 = &amp;(*_11)\n-18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-18:9-18:53: @3[6]: _2 = const ()\n-17:24-19:6: @3[8]: _0 = const ()\n-19:6-19:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n-18:18-18:36: @0[7]: _7 = &amp;(*_19)\n-18:18-18:36: @0[8]: _6 = &amp;(*_7)\n-18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n-18:9-18:53: @0[18]: _13 = (move _14,)\n-18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n-18:9-18:53: @0[25]: _17 = &amp;(*_15)\n-18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-18:9-18:53: @1[2]: _12 = [move _16]\n-18:9-18:53: @1[5]: _11 = &amp;_12\n-18:9-18:53: @1[6]: _10 = &amp;(*_11)\n-18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-18:9-18:53: @3[6]: _2 = const ()\n-17:24-19:6: @3[8]: _0 = const ()\n-19:6-19:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n-18:18-18:36: @0[7]: _7 = &amp;(*_19)\n-18:18-18:36: @0[8]: _6 = &amp;(*_7)\n-18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n-18:9-18:53: @0[18]: _13 = (move _14,)\n-18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n-18:9-18:53: @0[25]: _17 = &amp;(*_15)\n-18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-18:9-18:53: @1[2]: _12 = [move _16]\n-18:9-18:53: @1[5]: _11 = &amp;_12\n-18:9-18:53: @1[6]: _10 = &amp;(*_11)\n-18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-18:9-18:53: @3[6]: _2 = const ()\n-17:24-19:6: @3[8]: _0 = const ()\n-19:6-19:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "31bb57be81b53a798f1a6b2d3c8ffb1e94ace7fb", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,116 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main-in_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn in_func(a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\"><span class=\"annotation\">@1,2,3,4\u298a</span>println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "815d5efbce69f80ff2b875e692c5357e85556580", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 187, "changes": 187, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,187 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\n-12:6-12:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\n-12:6-12:6: @6.Goto: goto -&gt; bb7\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\n-12:6-12:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod in_mod {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const IN_MOD_CONST: u32 = 1000;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    fn in_func(a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let b = 1;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let c = a + b;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    struct InStruct {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        in_struct_field: u32,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const IN_CONST: u32 = 1234;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    trait InTrait {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn trait_func(&amp;mut self, incr: u32);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn default_trait_func(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            in_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.trait_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    impl InTrait for InStruct {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += incr;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InType = String;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n-48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n-49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\n-50:6-50:6: @11.Goto: goto -&gt; bb12\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n-49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\n-50:6-50:6: @11.Goto: goto -&gt; bb12\">        in_func(countdown);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n-49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\n-50:6-50:6: @11.Goto: goto -&gt; bb12\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @9.Goto: goto -&gt; bb12\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\"><span class=\"annotation\">@12,13\u298a</span>mut val = InStruct {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">        in_struct_field: 101,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">    };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">    val.default_trait_func();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">}<span class=\"annotation\">\u2989@12,13</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f1488d644d044b4345a29e7de3006d96930bba8c", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,161 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>loops_branches.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\">    let debug_test = DebugTest;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\">    println!(\"{:?}\", debug_test);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a7830911376bf59aa36815d736ee8a04e31e89ea", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 295, "changes": 295, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,295 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">    let version_3_2_1 = Version::new(3, 2, 1);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">    let version_3_3_0 = Version::new(3, 3, 0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">    println!(\"{:?} &lt; {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 &lt; version_3_3_0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "1a40b30099da673d25e90940bb5cc6cf9e9da79d", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#1}-cmp.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,76 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#1}-cmp - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n-4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">@11,12\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:51-4:54: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>Ord<span class=\"annotation\">\u2989@13</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n-4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">\u2989@11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:54-4:54: @15.Return: return\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "5399895992e11ed7ed1e68816e284983e7596ced", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#2}-ge-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,83 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-ge-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-7:5-7:17: @0[5]: _4 = &amp;(*_5)\n-7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n-7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n-7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n-</body>\n-</html>"}, {"sha": "044dd7eb9f5774356d9018be5b7f4819c3d90b99", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#2}-ge.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,92 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-ge - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n-4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n-4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n-4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n-4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n-4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n-4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n-4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n-4:39-4:49: @0[20]: _14 = &amp;(*_6)\n-4:39-4:49: @0[21]: _13 = &amp;(*_14)\n-4:39-4:49: @0[24]: _16 = &amp;(*_3)\n-4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n-4:39-4:49: @2[4]: _19 = &amp;_7\n-4:39-4:49: @2[6]: _20 = &amp;_4\n-4:39-4:49: @2[8]: _21 = &amp;_8\n-4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "30047ab79725bd2d566251fbdff8189b77e88de8", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#2}-gt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-gt-{closure#0}-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-8:5-8:17: @0[4]: _3 = &amp;(*_4)\n-8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Less\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n-8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "e8da313d18e0842a7c28bbc86553575bc10315db", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#2}-le-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-le-{closure#0}-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-8:5-8:17: @0[4]: _3 = &amp;(*_4)\n-8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Greater\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n-8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "55438a463c4209aea00c026722064232a3332dc0", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#2}-lt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-lt-{closure#0}-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-8:5-8:17: @0[4]: _3 = &amp;(*_4)\n-8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Greater\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n-8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3714c774bae3f90b9b9a7605aee61a64b003d8b7", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#2}-partial_cmp.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,78 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-partial_cmp - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">@17\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n-4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n-4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">@14,15\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:39-4:49: @16.Goto: goto -&gt; bb17\"><span class=\"annotation\">@16\u298a</span>PartialOrd<span class=\"annotation\">\u2989@16</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n-4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n-4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">\u2989@14,15</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">\u2989@17</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:49-4:49: @18.Return: return\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "be1f7f7d2e726585250cc0c15511ad3dfda36e29", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#6}-ne.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,81 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#6}-ne - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n-4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n-4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">@5\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n-4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">@6\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:24-4:33: @1[0]: _0 = const true\n-4:24-4:33: @1.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1\u298a</span>PartialEq<span class=\"annotation\">\u2989@1</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n-4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@6</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n-4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@5</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n-4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "65b95bae78d6e3a74f497c840ec0c53e1110b08f", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#7}-fmt.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,109 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#7}-fmt - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:17-4:22: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n-4:17-4:22: @0[2]: _3 = &amp;((*_1).0: usize)\n-4:17-4:22: @0[4]: _4 = &amp;((*_1).1: usize)\n-4:17-4:22: @0[6]: _5 = &amp;((*_1).2: usize)\n-4:17-4:22: @0[9]: _7 = &amp;mut (*_2)\n-4:17-4:22: @0[12]: _9 = const &quot;Version&quot;\n-4:17-4:22: @0[13]: _8 = &amp;(*_9)\n-4:17-4:22: @0.Call: _6 = Formatter::debug_struct(move _7, move _8) -&gt; [return: bb1, unwind: bb6]\n-4:17-4:22: @1[2]: FakeRead(ForLet, _6)\n-4:17-4:22: @1[6]: _11 = &amp;mut _6\n-4:17-4:22: @1[9]: _13 = const &quot;major&quot;\n-4:17-4:22: @1[10]: _12 = &amp;(*_13)\n-4:17-4:22: @1[15]: _17 = &amp;(*_3)\n-4:17-4:22: @1[16]: _16 = &amp;_17\n-4:17-4:22: @1[17]: _15 = &amp;(*_16)\n-4:17-4:22: @1[18]: _14 = move _15 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @1.Call: _10 = DebugStruct::field(move _11, move _12, move _14) -&gt; [return: bb2, unwind: bb6]\n-4:17-4:22: @2[9]: _19 = &amp;mut _6\n-4:17-4:22: @2[12]: _21 = const &quot;minor&quot;\n-4:17-4:22: @2[13]: _20 = &amp;(*_21)\n-4:17-4:22: @2[18]: _25 = &amp;(*_4)\n-4:17-4:22: @2[19]: _24 = &amp;_25\n-4:17-4:22: @2[20]: _23 = &amp;(*_24)\n-4:17-4:22: @2[21]: _22 = move _23 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @2.Call: _18 = DebugStruct::field(move _19, move _20, move _22) -&gt; [return: bb3, unwind: bb6]\n-4:17-4:22: @3[9]: _27 = &amp;mut _6\n-4:17-4:22: @3[12]: _29 = const &quot;patch&quot;\n-4:17-4:22: @3[13]: _28 = &amp;(*_29)\n-4:17-4:22: @3[18]: _33 = &amp;(*_5)\n-4:17-4:22: @3[19]: _32 = &amp;_33\n-4:17-4:22: @3[20]: _31 = &amp;(*_32)\n-4:17-4:22: @3[21]: _30 = move _31 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @3.Call: _26 = DebugStruct::field(move _27, move _28, move _30) -&gt; [return: bb4, unwind: bb6]\n-4:17-4:22: @4[8]: _34 = &amp;mut _6\n-4:17-4:22: @4.Call: _0 = DebugStruct::finish(move _34) -&gt; [return: bb5, unwind: bb6]\n-4:22-4:22: @5.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>Debug<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "914e829faa0bd1e556418863624e3b6962f731fe", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,143 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>simple_loop.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\n-18:6-18:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@13\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @7.Goto: goto -&gt; bb8\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "2488ac563e77e5cecc8bef6f10536b7f9e987d7c", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 188, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,188 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>simple_match.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 1<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\n-12:6-12:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\n-12:6-12:6: @6.Goto: goto -&gt; bb7\">        countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\n-12:6-12:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:9-15:10: @15[1]: _18 = ((_14 as Some).0: i32)\n-15:9-15:10: @15[3]: _19 = _18\n-15:9-15:10: @15[4]: _12 = move _19\n-15:9-15:10: @15[5]: _13 = const ()\"><span class=\"annotation\">@13,15,17\u298a</span>_<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @10[5]: _16 = &amp;mut _10\n-17:9-17:13: @10[6]: _15 = &amp;mut (*_16)\n-17:9-17:13: @10.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _15) -&gt; [return: bb11, unwind: bb22]\n-17:9-17:13: @11[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@9,10,11\u298a</span>0..2<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:14: @18[3]: _23 = _5\"><span class=\"annotation\">@18\u298a</span>x<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>x</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:18-28:18: @19.Goto: goto -&gt; bb16\"><span class=\"annotation\">@19\u298a</span>\u2038<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\"><span class=\"annotation\">@18\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                z = countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                let y = countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                countdown = 10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">            }<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            _</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:13-40:15: @16[0]: _21 = const ()\"><span class=\"annotation\">@16\u298a</span>{}<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @8.Goto: goto -&gt; bb9\"><span class=\"annotation\">@7,8\u298a</span>\u2038<span class=\"annotation\">\u2989@7,8</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:6-42:6: @20.Goto: goto -&gt; bb9\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3ba5135122b936bf9cb9407d0018ecc607f9dae2", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.while/while.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5be3f9f10e9fd59ea03816840a6051413fbdefae/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html?ref=5be3f9f10e9fd59ea03816840a6051413fbdefae", "patch": "@@ -1,81 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.while/while.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>while.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:15-2:16: @0[1]: _1 = const 9_i32\n-2:9-2:12: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>num = 9<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:11-3:14: @2[2]: _4 = _1\n-3:11-3:20: @2[3]: _3 = Ge(move _4, const 10_i32)\n-3:11-3:20: @2[5]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@1,2\u298a</span>num &gt;= 10<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\"><span class=\"annotation\">@3,5\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\">    }<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:2-5:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "84b5d0e522f8cacff53788e60f64b7815906e0f5", "filename": "src/test/run-make-fulldeps/coverage-spanview/Makefile", "status": "renamed", "additions": 42, "deletions": 9, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -1,20 +1,16 @@\n # needs-profiler-support\n \n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../coverage/coverage_tools.mk for more information.\n-\n -include ../coverage/coverage_tools.mk\n \n-BASEDIR=../coverage-spanview-base\n+BASEDIR=../coverage-spanview\n SOURCEDIR=../coverage\n \n define SPANVIEW_HEADER\n <!DOCTYPE html>\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.%s/%s\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.%s/%s\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -25,7 +21,7 @@ endef\n export SPANVIEW_HEADER\n \n ifeq ($(LLVM_VERSION_11_PLUS),true)\n-all: $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n+all: $(patsubst $(SOURCEDIR)/lib/%.rs,%,$(wildcard $(SOURCEDIR)/lib/*.rs)) $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n else\n $(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n all:\n@@ -40,11 +36,48 @@ endif\n \n -include clear_expected_if_blessed\n \n+# FIXME(richkadel): The actions for these two types of targets (libraries and binaries) should be\n+# combined.\n+\n+%: $(SOURCEDIR)/lib/%.rs\n+\t# Compile the test library with coverage instrumentation\n+\t$(RUSTC) $(SOURCEDIR)/lib/$@.rs \\\n+\t\t\t$$( grep -q '^\\/\\/ require-rust-edition-2018' $(SOURCEDIR)/lib/$@.rs && \\\n+\t\t\t\techo \"--edition=2018\" \\\n+\t\t\t) \\\n+\t\t\t--crate-type rlib \\\n+\t\t\t-Zinstrument-coverage \\\n+\t\t\t-Zdump-mir=InstrumentCoverage \\\n+\t\t\t-Zdump-mir-spanview \\\n+\t\t\t-Zdump-mir-dir=\"$(TMPDIR)\"/mir_dump.$@\n+\n+\tfor path in \"$(TMPDIR)\"/mir_dump.$@/*; do \\\n+\t\tfile=\"$$(basename \"$$path\")\"; \\\n+\t\turlescaped=\"$$(\"$(PYTHON)\" $(BASEDIR)/escape_url.py $$file)\" || exit $$?; \\\n+\t\tprintf \"$$SPANVIEW_HEADER\\n\" \"$@\" \"$$urlescaped\" > \"$$path\".modified; \\\n+\t\ttail -n +2 \"$$path\" >> \"$$path\".modified; \\\n+\t\tmv \"$$path\".modified \"$$path\"; \\\n+\tdone && true # for/done ends in non-zero status\n+\n+ifdef RUSTC_BLESS_TEST\n+\tmkdir -p expected_mir_dump.$@\n+\tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html expected_mir_dump.$@/\n+else\n+\t# Check that the selected `mir_dump` files match what we expect (`--bless` refreshes `expected`)\n+\tmkdir -p \"$(TMPDIR)\"/actual_mir_dump.$@\n+\trm -f \"$(TMPDIR)\"/actual_mir_dump.$@/*\n+\tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html \"$(TMPDIR)\"/actual_mir_dump.$@/\n+\t$(DIFF) -r expected_mir_dump.$@/ \"$(TMPDIR)\"/actual_mir_dump.$@/\n+endif\n+\n %: $(SOURCEDIR)/%.rs\n-\t# Compile the test program with coverage instrumentation and generate relevant MIR.\n+\t# Compile the test program with coverage instrumentation\n \t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n+\t\t\t$$( grep -q '^\\/\\/ require-rust-edition-2018' $(SOURCEDIR)/$@.rs && \\\n+\t\t\t\techo \"--edition=2018\" \\\n+\t\t\t) \\\n+\t\t\t-L \"$(TMPDIR)\" \\\n \t\t\t-Zinstrument-coverage \\\n-\t\t\t-Clink-dead-code=$(LINK_DEAD_CODE) \\\n \t\t\t-Zdump-mir=InstrumentCoverage \\\n \t\t\t-Zdump-mir-spanview \\\n \t\t\t-Zdump-mir-dir=\"$(TMPDIR)\"/mir_dump.$@", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/Makefile"}, {"sha": "b725ed46303020c357069dacd2af536f15e3a3de", "filename": "src/test/run-make-fulldeps/coverage-spanview/escape_url.py", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fescape_url.py", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fescape_url.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fescape_url.py?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/escape_url.py"}, {"sha": "9834124694ec7c7d051f97053afacc11fd4fea2f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,109 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>abort.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:25-15:27: @0[1]: _1 = const 10_i32\n+15:9-15:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(), u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:25-15:27: @0[1]: _1 = const 10_i32\n+15:9-15:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:11-16:20: @2[2]: _5 = _1\n+16:11-16:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+16:11-16:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:12-17:21: @5[3]: _8 = _1\n+17:12-17:25: @5[4]: _7 = Lt(move _8, const 5_i32)\n+17:12-17:25: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb22]\n+17:26-19:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb22]\n+17:26-19:10: @9[1]: _6 = const ()\">            might_abort(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb22]\n+17:26-19:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:10-19:10: @7[0]: _6 = const ()\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // See discussion (below the `Notes` section) on coverage results for the closing brace.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:12-21:21: @10[5]: _12 = _1\n+21:12-21:25: @10[6]: _11 = Lt(move _12, const 5_i32)\n+21:12-21:25: @10[8]: FakeRead(ForMatchedPlace, _11)\"><span class=\"annotation\">@10\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:28-21:46: @13.Call: _13 = might_abort(const false) -&gt; [return: bb14, unwind: bb22]\n+21:26-21:49: @14[1]: _10 = const ()\"><span class=\"annotation\">@11,13,14\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@11,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:49-21:49: @12[0]: _10 = const ()\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Counts for different regions on one line.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // For the following example, the closing brace is the last character on the line.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // This shows the character after the closing brace is highlighted, even if that next</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // character is a newline.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:12-25:21: @15[5]: _16 = _1\n+25:12-25:25: @15[6]: _15 = Lt(move _16, const 5_i32)\n+25:12-25:25: @15[8]: FakeRead(ForMatchedPlace, _15)\"><span class=\"annotation\">@15\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:28-25:46: @18.Call: _17 = might_abort(const false) -&gt; [return: bb19, unwind: bb22]\n+25:26-25:49: @19[1]: _14 = const ()\"><span class=\"annotation\">@16,18,19\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@16,18,19</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:49-25:49: @17[0]: _14 = const ()\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:23: @20[2]: _18 = CheckedSub(_1, const 1_i32)\n+26:9-26:23: @21[0]: _1 = move (_18.0: i32)\"><span class=\"annotation\">@20,21\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@20,21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n+28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)\n+29:2-29:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n+28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)\n+29:2-29:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ab7108ae570b796270cf4f54703682c604da849e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,164 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>abort.might_abort - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn might_abort(should_abort: bool) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:20: @0[1]: _2 = _1\n+6:8-6:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_abort<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @3[7]: _9 = &amp;(*_33)\n+7:18-7:31: @3[8]: _8 = &amp;(*_9)\n+7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @3[15]: _15 = ()\n+7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @3[18]: _13 = &amp;(*_32)\n+7:9-7:33: @3[19]: _12 = &amp;(*_13)\n+7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+7:9-7:33: @5[5]: _4 = const ()\n+8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"aborting...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @3[7]: _9 = &amp;(*_33)\n+7:18-7:31: @3[8]: _8 = &amp;(*_9)\n+7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @3[15]: _15 = ()\n+7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @3[18]: _13 = &amp;(*_32)\n+7:9-7:33: @3[19]: _12 = &amp;(*_13)\n+7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+7:9-7:33: @5[5]: _4 = const ()\n+8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">    }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "f24de8e08432a8aba24d4e35e64ee4c742f22fe0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,104 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>assert.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:25-10:27: @0[1]: _1 = const 10_i32\n+10:9-10:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:25-10:27: @0[1]: _1 = const 10_i32\n+10:9-10:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:11-11:20: @2[2]: _5 = _1\n+11:11-11:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+11:11-11:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:12-12:21: @5[3]: _8 = _1\n+12:12-12:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+12:12-12:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\">            might_fail_assert(3);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:19-14:28: @7[2]: _11 = _1\n+14:19-14:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n+14:19-14:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\">            might_fail_assert(2);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:10-16:10: @11[0]: _6 = const ()\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n+17:9-17:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+20:2-20:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+20:2-20:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "13cfebfe6e50e4fc3f7f0b3c80562c86e9d78e60", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,97 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>assert.might_fail_assert - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn might_fail_assert(one_plus_one: u32) <span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:32: @0[6]: _73 = const might_fail_assert::promoted[4]\n+5:14-5:32: @0[7]: _7 = &amp;(*_73)\n+5:14-5:32: @0[8]: _6 = &amp;(*_7)\n+5:14-5:32: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+5:34-5:46: @0[17]: _14 = &amp;_1\n+5:5-5:48: @0[18]: _13 = (move _14,)\n+5:5-5:48: @0[20]: FakeRead(ForMatchedPlace, _13)\n+5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n+5:5-5:48: @0[25]: _17 = &amp;(*_15)\n+5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:5-5:48: @0.Call: _16 = ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb13]\n+5:5-5:48: @1[2]: _12 = [move _16]\n+5:5-5:48: @1[5]: _11 = &amp;_12\n+5:5-5:48: @1[6]: _10 = &amp;(*_11)\n+5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+5:5-5:48: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb13]\n+5:5-5:48: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb13]\n+5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @7[28]: _70 = const might_fail_assert::promoted[1]\n+6:37-6:61: @7[29]: _50 = &amp;(*_70)\n+6:37-6:61: @7[30]: _49 = &amp;(*_50)\n+6:37-6:61: @7[31]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7,8,9,10,11,12\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:2-7:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "82a22ccb4e6735fa16c2bf682363f815fde76a90", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c-{closure#0}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>try_error_result.call - Coverage Spans</title>\n+<title>async.c-{closure#0} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,15 +69,16 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n-5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @3[1]: _3 = ()\n-6:9-6:16: @3[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1,3\u298a</span>Err(())<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\">                        <span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:9: @0[5]: _5 = _3\n+6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\n+6:8-6:14: @0[8]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:9: @0[5]: _5 = _3\n+6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\n+6:8-6:14: @0[8]: FakeRead(ForMatchedPlace, _4)\">    if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:10: @3[0]: _0 = const 1_u8\"><span class=\"annotation\">@1,3\u298a</span>1<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n-8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:10: @2[0]: _0 = const 0_u8\"><span class=\"annotation\">@2\u298a</span>0<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:2-11:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html"}, {"sha": "3eee0dd4100edcc0f838537a9f61699b9aa6d3b1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.c - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn c(x: u8) -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if x == 8 {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        0</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n+</body>\n+</html>"}, {"sha": "7cf34f077954f64bcba944fabf32d53dc5e60b7e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d-{closure#0}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>partial_eq.{impl#4}-assert_receiver_is_total_eq - Coverage Spans</title>\n+<title>async.d-{closure#0} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,7 +69,7 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:35-4:37: @0[0]: _0 = const ()\n-4:37-4:37: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>Eq<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\">                   <span><span class=\"code even\" style=\"--layer: 1\" title=\"13:22-13:23: @0[0]: _0 = const 1_u8\n+13:25-13:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#4}-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html"}, {"sha": "5c7f6e00224a060a18d3cae348d0238ee1a023a4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.d - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn d() -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n+</body>\n+</html>"}, {"sha": "1f95a7d35af8888a45e22e704fb1fde024702acc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.e-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\">                   <span><span class=\"code even\" style=\"--layer: 1\" title=\"15:22-15:23: @0[0]: _0 = const 1_u8\n+15:25-15:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n+</body>\n+</html>"}, {"sha": "ee3b7b1d7ffc72689f8b4d3d98a89cd11905a86d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.e - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn e() -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n+</body>\n+</html>"}, {"sha": "8f61257ca1baceb0f8ffa1f927157484b7b1f0b4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#0}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>partial_eq.{impl#1}-cmp - Coverage Spans</title>\n+<title>async.executor-block_on-VTABLE-{closure#0} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,8 +69,16 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n-4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">@11,12\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:51-4:54: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>Ord<span class=\"annotation\">\u2989@13</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n-4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">\u2989@11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:54-4:54: @15.Return: return\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:38-17:74: @1[3]: _13 = (move _14,)\n+17:38-17:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n+17:38-17:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n+17:38-17:74: @1[10]: _27 = &amp;(*_25)\n+17:38-17:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+17:38-17:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+17:38-17:74: @2[2]: _12 = [move _26]\n+17:38-17:74: @2[5]: _11 = &amp;_12\n+17:38-17:74: @2[6]: _10 = &amp;(*_11)\n+17:38-17:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+17:38-17:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#1}-cmp.-------.InstrumentCoverage.0.html"}, {"sha": "923c669e72d113994e07931fbedaf9ce9450521b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#1}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>partial_eq.{impl#2}-ge-{closure#0}-{closure#0} - Coverage Spans</title>\n+<title>async.executor-block_on-VTABLE-{closure#1} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,14 +69,16 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n-8:5-8:17: @0[4]: _3 = &amp;(*_4)\n-8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n-8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Less\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n-8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:38-17:74: @1[3]: _13 = (move _14,)\n+17:38-17:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n+17:38-17:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n+17:38-17:74: @1[10]: _27 = &amp;(*_25)\n+17:38-17:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+17:38-17:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+17:38-17:74: @2[2]: _12 = [move _26]\n+17:38-17:74: @2[5]: _11 = &amp;_12\n+17:38-17:74: @2[6]: _10 = &amp;(*_11)\n+17:38-17:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+17:38-17:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.{impl#2}-ge-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html"}, {"sha": "59f62959998ce428f6d3989b645dd88987555a22", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#2}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,84 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#2} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:38-17:74: @1[3]: _13 = (move _14,)\n+17:38-17:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n+17:38-17:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n+17:38-17:74: @1[10]: _27 = &amp;(*_25)\n+17:38-17:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+17:38-17:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+17:38-17:74: @2[2]: _12 = [move _26]\n+17:38-17:74: @2[5]: _11 = &amp;_12\n+17:38-17:74: @2[6]: _10 = &amp;(*_11)\n+17:38-17:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+17:38-17:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+</body>\n+</html>"}, {"sha": "ef2fe7d06825daf40e7e68dfe22ced004a7b7c32", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#3}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#3} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 116\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">|_| </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"117:17-117:19: @0[0]: _0 = ()\n+117:19-117:19: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>()<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "81310c8cb25aa9c55d2cf1f37ad616fdb7f78bf2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html", "status": "added", "additions": 239, "deletions": 0, "changes": 239, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,239 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 109\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>pub fn block_on&lt;F: Future&gt;(mut future: F) -&gt; F::Output {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let mut future = unsafe { Pin::new_unchecked(&amp;mut future) };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        static VTABLE: RawWakerVTable = RawWakerVTable::new(</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"clone\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake_by_ref\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| (),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        );</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &amp;VTABLE)) };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n+111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n+119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:79-119:86: @2[4]: _8 = &amp;(*_9)\n+119:79-119:86: @2[5]: _7 = &amp;(*_8)\n+119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n+120:47-120:53: @4[7]: _12 = &amp;_4\n+120:47-120:53: @4[8]: _11 = &amp;(*_12)\n+120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let mut context = Context::from_waker(&amp;waker)<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        loop {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if let Poll::Ready(</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"123:32-123:35: @12[1]: _20 = move ((_14 as Ready).0: &lt;F as std::future::Future&gt;::Output)\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">) = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"123:39-123:45: @7[3]: _16 = &amp;mut _2\n+123:39-123:54: @7.Call: _15 = Pin::&lt;&amp;mut F&gt;::as_mut(move _16) -&gt; [return: bb8, unwind: bb19]\n+123:60-123:72: @8[3]: _18 = &amp;mut _10\n+123:60-123:72: @8[4]: _17 = &amp;mut (*_18)\n+123:39-123:73: @8.Call: _14 = &lt;F as Future&gt;::poll(move _15, move _17) -&gt; [return: bb9, unwind: bb19]\n+123:39-123:73: @9[2]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@6,7,8,9\u298a</span>future.as_mut().poll(&amp;mut context)<span class=\"annotation\">\u2989@6,7,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                break </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"124:23-124:26: @12[2]: _0 = move _20\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"125:14-125:14: @11[0]: _13 = const ()\"><span class=\"annotation\">@11,13\u298a</span>\u2038<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:6-127:6: @17.Return: return\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "74b62673ac94bbe3f04aa3f406231236582d0280", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.f-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">                   <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:22-17:23: @0[0]: _0 = const 1_u8\n+17:25-17:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n+</body>\n+</html>"}, {"sha": "a31bca54df2e5ecda7a0de9bc6cdbc39962dc706", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.f - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn f() -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n+</body>\n+</html>"}, {"sha": "b8c53cccabda12156f5d73c0811353202f8155a8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.foo-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 18\"><span class=\"line\">                             <span><span class=\"code even\" style=\"--layer: 1\" title=\"19:32-19:43: @0[0]: _0 = [const false; 10]\n+19:45-19:45: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ [false; 10] }</span></span></div>\n+</body>\n+</html>"}, {"sha": "cf72a9d532c79d850d52511735f3f8af7289fb29", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.foo - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 18\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn foo() -&gt; [bool; 10] <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ [false; 10] }</span></span></div>\n+</body>\n+</html>"}, {"sha": "b10012621b7dd980754e87082cb27aeae38926e5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.g-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"22:11-22:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,3,4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:11-22:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:14-23:17: @3.Call: _8 = e() -&gt; [return: bb4, unwind: bb58]\n+23:14-23:17: @4[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,3,4\u298a</span>e()<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:27-23:28: @15[2]: _24 = (*_5)\"><span class=\"annotation\">@10,13,15,16\u298a</span>y<span class=\"annotation\">\u2989@10,13,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:32-23:34: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:9-24:10: @33[3]: _25 = _3\"><span class=\"annotation\">@33\u298a</span>y<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:14-24:17: @19.Call: _29 = f() -&gt; [return: bb20, unwind: bb51]\n+24:14-24:17: @20[0]: FakeRead(ForMatchedPlace, _29)\"><span class=\"annotation\">@1,19,20\u298a</span>f()<span class=\"annotation\">\u2989@1,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:27-24:28: @31[2]: _44 = (*_26)\"><span class=\"annotation\">@26,29,31,32\u298a</span>y<span class=\"annotation\">\u2989@26,29,31,32</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:32-24:34: @33[4]: _0 = ()\"><span class=\"annotation\">@33\u298a</span>()<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:14-25:16: @2[0]: _0 = ()\"><span class=\"annotation\">@2\u298a</span>()<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:2-27:2: @36.Return: return\"><span class=\"annotation\">@35,36\u298a</span>\u2038<span class=\"annotation\">\u2989@35,36</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "973995477b9aab4e69d2c8ce6cb1d0b32de305d0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.g - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>pub async fn g(x: u8) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if e().await == y =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n+</body>\n+</html>"}, {"sha": "6b4b43f836580d6515c9eda53aa81a948ed31f41", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.h-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 28\"><span class=\"line\">                     <span><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{ // The function signature is counted when called, but the body is not</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                       // executed (not awaited) so the open brace has a `0` count (at least when</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                       // displayed with `llvm-cov show` in color-mode).</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:9-33:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:14-33:19: @2.Call: _8 = foo() -&gt; [return: bb3, unwind: bb33]\n+33:14-33:19: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>foo()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await[</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:26-33:27: @14[2]: _24 = (*_5)\"><span class=\"annotation\">@9,12,14,15,16\u298a</span>y<span class=\"annotation\">\u2989@9,12,14,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">] =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:32-33:34: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:14-34:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @20.Return: return\"><span class=\"annotation\">@19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@19,20</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "f2ea01281fe1e59d597626c3ea58a48a5f9644bb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>inner_items.main-{impl#0}-trait_func - Coverage Spans</title>\n+<title>async.h - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,13 +69,13 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\"><span class=\"annotation\">@0\u298a</span>incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@1,2</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 28\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn h(x: usize) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ // The function signature is counted when called, but the body is not</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                       // executed (not awaited) so the open brace has a `0` count (at least when</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                       // displayed with `llvm-cov show` in color-mode).</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if foo().await[y] =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html"}, {"sha": "49297870fa0a75023bc1aed6b40b07429191ed46", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,91 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.i-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 37\"><span class=\"line\">                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,3,4\u298a</span>{ // line coverage is 1, but there are 2 regions:</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                    // (a) the function signature, counted when the function is called; and</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                    // (b) the open brace for the function body, counted once when the body is</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                    // executed asynchronously.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:10: @18[3]: _4 = _3\"><span class=\"annotation\">@18,20\u298a</span>y<span class=\"annotation\">\u2989@18,20</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:16-43:17: @3[6]: _9 = _3\n+43:14-43:18: @3.Call: _8 = c(move _9) -&gt; [return: bb4, unwind: bb88]\n+43:14-43:18: @4[1]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,3,4\u298a</span>c(x)<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:28-43:29: @15[3]: _26 = (*_5)\n+43:28-43:33: @15[4]: _27 = CheckedAdd(_26, const 1_u8)\n+43:28-43:33: @16[0]: _25 = move (_27.0: u8)\"><span class=\"annotation\">@10,13,15,16,17\u298a</span>y + 1<span class=\"annotation\">\u2989@10,13,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; { </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:39-43:42: @18.Call: _29 = d() -&gt; [return: bb20, unwind: bb79]\n+43:39-43:42: @20[0]: FakeRead(ForMatchedPlace, _29)\"><span class=\"annotation\">@18,20\u298a</span>d()<span class=\"annotation\">\u2989@18,20</span></span></span><span class=\"code\" style=\"--layer: 0\">.await; }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:9-44:10: @48[3]: _44 = _3\"><span class=\"annotation\">@48\u298a</span>y<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:14-44:17: @33.Call: _48 = f() -&gt; [return: bb34, unwind: bb72]\n+44:14-44:17: @34[0]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@1,33,34\u298a</span>f()<span class=\"annotation\">\u2989@1,33,34</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:27-44:28: @45[3]: _64 = (*_45)\n+44:27-44:32: @45[4]: _65 = CheckedAdd(_64, const 1_u8)\n+44:27-44:32: @46[0]: _63 = move (_65.0: u8)\"><span class=\"annotation\">@40,43,45,46,47\u298a</span>y + 1<span class=\"annotation\">\u2989@40,43,45,46,47</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:36-44:38: @48[4]: _0 = ()\"><span class=\"annotation\">@48\u298a</span>()<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:14-45:16: @2[0]: _0 = ()\"><span class=\"annotation\">@2\u298a</span>()<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:2-47:2: @51.Return: return\"><span class=\"annotation\">@50,51\u298a</span>\u2038<span class=\"annotation\">\u2989@50,51</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "e5dc6ecd4eb63cba7cd12d50f7fd989756dd2102", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.tight_inf_loop/tight_inf_loop.main.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>tight_inf_loop.main - Coverage Spans</title>\n+<title>async.i - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,12 +69,15 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\n-2:8-2:13: @0[2]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:9-3:16: @4.FalseUnwind: falseUnwind -&gt; [real: bb5, cleanup: bb6]\n-3:14-3:16: @5[0]: _3 = const ()\"><span class=\"annotation\">@4,5\u298a</span>loop {}<span class=\"annotation\">\u2989@4,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:16-3:16: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<div class=\"code\" style=\"counter-reset: line 37\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn i(x: u8) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ // line coverage is 1, but there are 2 regions:</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    // (a) the function signature, counted when the function is called; and</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    // (b) the open brace for the function body, counted once when the body is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    // executed asynchronously.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if c(x).await == y + 1 =&gt; { d().await; }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y + 1 =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:2-5:2: @2.Return: return\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.tight_inf_loop/tight_inf_loop.main.-------.InstrumentCoverage.0.html"}, {"sha": "a8e2d7e2f396e69cd08858167d3dc6c6b721ea8c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-c.-------.InstrumentCoverage.0.html", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,92 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-c.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.j-c - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 50\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"52:12-52:13: @0[2]: _3 = _1\n+52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\n+52:12-52:18: @0[5]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>fn c(x: u8) -&gt; u8 {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:12-52:13: @0[2]: _3 = _1\n+52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\n+52:12-52:18: @0[5]: FakeRead(ForMatchedPlace, _2)\">        if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"53:13-53:14: @3[0]: _0 = const 1_u8\"><span class=\"annotation\">@1,3\u298a</span>1<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> // This line appears covered, but the 1-character expression span covering the `1`</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // is not executed. (`llvm-cov show` displays a `^0` below the `1` ). This is because</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // `fn j()` executes the open brace for the funciton body, followed by the function's</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // first executable statement, `match x`. Inner function declarations are not</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // \"visible\" to the MIR for `j()`, so the code region counts all lines between the</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // open brace and the first statement as executed, which is, in a sense, true.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // `llvm-cov show` overcomes this kind of situation by showing the actual counts</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // of the enclosed coverages, (that is, the `1` expression was not executed, and</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // accurately displays a `0`).</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:13-63:14: @2[0]: _0 = const 0_u8\"><span class=\"annotation\">@2\u298a</span>0<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:6-65:6: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4eed8ee60dd64e11081fabed100754c42321fc64", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-d.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-d.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-d.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-d.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-d.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.j-d - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 65\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"66:20-66:21: @0[0]: _0 = const 1_u8\n+66:23-66:23: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>fn d() -&gt; u8 { 1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6e80c8c786ecb87b9b3cf51dece5470fc8869880", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-f.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-f.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-f.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-f.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-f.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.j-f - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 66\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"67:20-67:21: @0[0]: _0 = const 1_u8\n+67:23-67:23: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>fn f() -&gt; u8 { 1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "7cc751074a077522d17be7bde543c3d28e948154", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j.-------.InstrumentCoverage.0.html", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,108 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.j - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 48\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0,3,4,5\u298a</span>fn j(x: u8) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    // non-async versions of `c()`, `d()`, and `f()` to make it similar to async `i()`.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    fn c(x: u8) -&gt; u8 {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">        if x == 8 {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">            1 // This line appears covered, but the 1-character expression span covering the `1`</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // is not executed. (`llvm-cov show` displays a `^0` below the `1` ). This is because</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // `fn j()` executes the open brace for the funciton body, followed by the function's</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // first executable statement, `match x`. Inner function declarations are not</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // \"visible\" to the MIR for `j()`, so the code region counts all lines between the</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // open brace and the first statement as executed, which is, in a sense, true.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // `llvm-cov show` overcomes this kind of situation by showing the actual counts</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // of the enclosed coverages, (that is, the `1` expression was not executed, and</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // accurately displays a `0`).</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">        } else {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">            0</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">        }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    fn d() -&gt; u8 { 1 }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    fn f() -&gt; u8 { 1 }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    match x<span class=\"annotation\">\u2989@0,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:9-69:10: @6[3]: _2 = _1\"><span class=\"annotation\">@6,8\u298a</span>y<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"69:16-69:17: @3[5]: _6 = _1\n+69:14-69:18: @3.Call: _5 = j::c(move _6) -&gt; [return: bb4, unwind: bb15]\n+69:22-69:23: @4[3]: _8 = (*_3)\n+69:22-69:27: @4[4]: _9 = CheckedAdd(_8, const 1_u8)\n+69:22-69:27: @5[0]: _7 = move (_9.0: u8)\n+69:14-69:27: @5[2]: _4 = Eq(move _5, move _7)\"><span class=\"annotation\">@0,3,4,5\u298a</span>c(x) == y + 1<span class=\"annotation\">\u2989@0,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:33-69:36: @6.Call: _10 = j::d() -&gt; [return: bb8, unwind: bb15]\n+69:31-69:39: @8[1]: _0 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{ d(); }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:9-70:10: @12[3]: _11 = _1\"><span class=\"annotation\">@12\u298a</span>y<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"70:14-70:17: @9.Call: _14 = j::f() -&gt; [return: bb10, unwind: bb15]\n+70:21-70:22: @10[2]: _16 = (*_12)\n+70:21-70:26: @10[3]: _17 = CheckedAdd(_16, const 1_u8)\n+70:21-70:26: @11[0]: _15 = move (_17.0: u8)\n+70:14-70:26: @11[2]: _13 = Eq(move _14, move _15)\"><span class=\"annotation\">@1,9,10,11\u298a</span>f() == y + 1<span class=\"annotation\">\u2989@1,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:30-70:32: @12[4]: _0 = ()\"><span class=\"annotation\">@12\u298a</span>()<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"71:14-71:16: @2[0]: _0 = ()\"><span class=\"annotation\">@2\u298a</span>()<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"73:2-73:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "5792521bb2c57c323b05547c84ef260cb0d61f02", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.k.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.k.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.k.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.k.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.k.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.k - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"76:11-76:12: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>fn k(x: u8) { // unused function</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"76:11-76:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    match x<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"77:14-77:16: @4[0]: _0 = ()\"><span class=\"annotation\">@1,4\u298a</span>()<span class=\"annotation\">\u2989@1,4</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:14-78:16: @5[0]: _0 = ()\"><span class=\"annotation\">@2,5\u298a</span>()<span class=\"annotation\">\u2989@2,5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:14-79:16: @3[0]: _0 = ()\"><span class=\"annotation\">@3\u298a</span>()<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:2-81:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "cd92b88c24cbb4a1e71ceb3e9c8c08f97b5b9ccf", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.l.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.l.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.l.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.l.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.l.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.l - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 82\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"84:11-84:12: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>fn l(x: u8) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"84:11-84:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    match x<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"85:14-85:16: @4[0]: _0 = ()\"><span class=\"annotation\">@1,4\u298a</span>()<span class=\"annotation\">\u2989@1,4</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"86:14-86:16: @5[0]: _0 = ()\"><span class=\"annotation\">@2,5\u298a</span>()<span class=\"annotation\">\u2989@2,5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"87:14-87:16: @3[0]: _0 = ()\"><span class=\"annotation\">@3\u298a</span>()<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"89:2-89:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9cf86ce34a04dbc3dd5657b1c8a02a4abad5e288", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.m-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 90\"><span class=\"line\">                        <span><span class=\"code even\" style=\"--layer: 1\" title=\"91:25-91:34: @0[1]: _3 = (_1.0: u8)\n+91:25-91:34: @0[2]: FakeRead(ForLet, _3)\n+91:27-91:28: @0[4]: _4 = _3\n+91:27-91:32: @0[5]: _5 = CheckedSub(_4, const 1_u8)\n+91:27-91:32: @1[0]: _0 = move (_5.0: u8)\n+91:34-91:34: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>{ x - 1 }<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "04412c1d9942780ec21622e5ed8827a5cbbf5eff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.m - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 90\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn m(x: u8) -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ x - 1 }</span></span></div>\n+</body>\n+</html>"}, {"sha": "313a36ed6c2f27192ed8704f63bd88bf5b4567d1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,190 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 92\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9,10,11,12,13\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    let _ = g(10);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    let _ = h(9);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    let mut future = Box::pin(i(8));</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    j(7);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    l(6);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    let _ = m(5);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">    executor::block_on(future.as_mut());</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n+95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n+96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n+96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n+97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n+98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n+99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n+100:24-100:30: @10[4]: _10 = &amp;mut _3\n+100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+93:11-101:2: @12[2]: _0 = const ()\n+101:2-101:2: @13.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9,10,11,12,13</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "523e839a918dd09eeb0c5e90f4b7bbeb41b2fb75", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -70,19 +70,23 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n-35:13-35:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\n-38:10-38:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n+35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n+36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n+35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n+36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n+35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n+36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\n-38:10-38:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n+36:21-38:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\n-38:10-38:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+36:21-38:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @4[5]: _5 = &amp;(*_6)\n 39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html"}, {"sha": "fdae1a012bc72682319fc2dfd72bdef7311aedf4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#10}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>closure.main-{closure#2} - Coverage Spans</title>\n+<title>closure.main-{closure#10} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -70,19 +70,23 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n-20:21-20:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\n-23:18-23:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n+20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n+21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n+20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n+21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n+20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n+21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\n-23:18-23:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n+21:29-23:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\n-23:18-23:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+21:29-23:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @4[5]: _5 = &amp;(*_6)\n 24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html"}, {"sha": "48f3944b8b76265c7f2634748401c27ac8074c1a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#11}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>closure.main-{closure#3} - Coverage Spans</title>\n+<title>closure.main-{closure#11} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -70,19 +70,23 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n-62:21-62:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\n-65:18-65:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n+62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n+63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n+62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n+63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n+62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n+63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\n-65:18-65:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n+63:29-65:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\n-65:18-65:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+63:29-65:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @4[5]: _5 = &amp;(*_6)\n 66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html"}, {"sha": "233ebf11b2cdc3a5e08901af774c7f5a7437c45d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -70,19 +70,23 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n-77:13-77:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\n-80:10-80:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n+77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n+78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n+77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n+78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n+77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n+78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\n-80:10-80:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n+78:21-80:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\n-80:10-80:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+78:21-80:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @4[5]: _5 = &amp;(*_6)\n 81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html"}, {"sha": "8fcf91df85b9a7f19c6da4d11b622006b37e20d3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,131 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>closure.main-{closure#2} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 96\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">|val|</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n+99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n+100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n+100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n+99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n+100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n+100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\">        let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n+99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n+100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n+100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n+100:21-102:10: @3[1]: _4 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n+100:21-102:10: @3[1]: _4 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n+100:21-102:10: @3[1]: _4 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"102:10-102:10: @2[0]: _4 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n+103:17-103:23: @4[8]: _10 = &amp;(*_22)\n+103:17-103:23: @4[9]: _9 = &amp;(*_10)\n+103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+103:25-103:28: @4[18]: _17 = &amp;_2\n+103:9-103:29: @4[19]: _16 = (move _17,)\n+103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n+103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n+103:9-103:29: @4[26]: _20 = &amp;(*_18)\n+103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb9]\n+103:9-103:29: @5[2]: _15 = [move _19]\n+103:9-103:29: @5[5]: _14 = &amp;_15\n+103:9-103:29: @5[6]: _13 = &amp;(*_14)\n+103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb9]\n+103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb9]\n+103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n+103:9-103:29: @7[6]: _0 = move _6\n+104:6-104:6: @8.Return: return\"><span class=\"annotation\">@4,5,6,7,8\u298a</span>format!(\"'{}'\", val)</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n+103:17-103:23: @4[8]: _10 = &amp;(*_22)\n+103:17-103:23: @4[9]: _9 = &amp;(*_10)\n+103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+103:25-103:28: @4[18]: _17 = &amp;_2\n+103:9-103:29: @4[19]: _16 = (move _17,)\n+103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n+103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n+103:9-103:29: @4[26]: _20 = &amp;(*_18)\n+103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb9]\n+103:9-103:29: @5[2]: _15 = [move _19]\n+103:9-103:29: @5[5]: _14 = &amp;_15\n+103:9-103:29: @5[6]: _13 = &amp;(*_14)\n+103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb9]\n+103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb9]\n+103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n+103:9-103:29: @7[6]: _0 = move _6\n+104:6-104:6: @8.Return: return\">    }<span class=\"annotation\">\u2989@4,5,6,7,8</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "032a6a7e435c15668ffaaef5e62131f16fd6613c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,93 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>closure.main-{closure#3} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 119\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">|</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            mut countdown</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        |</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\n+124:12-124:20: @0[3]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\n+124:12-124:20: @0[3]: FakeRead(ForMatchedPlace, _4)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @3[0]: _2 = const 10_i32\n+124:21-126:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @3[0]: _2 = const 10_i32\n+124:21-126:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @3[0]: _2 = const 10_i32\n+124:21-126:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"126:10-126:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @4[4]: _6 = const &quot;closure should be unused&quot;\n+127:9-127:35: @4[5]: _5 = &amp;(*_6)\n+127:9-127:46: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+128:6-128:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"closure should be unused\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @4[4]: _6 = const &quot;closure should be unused&quot;\n+127:9-127:35: @4[5]: _5 = &amp;(*_6)\n+127:9-127:46: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+128:6-128:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "df0172bdf7067334643480d881c5fd7eac7e002c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#4}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,77 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>closure.main-{closure#4} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 130\"><span class=\"line\">                                <span class=\"code\" style=\"--layer: 0\">| _unused_arg: u8 | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"131:53-131:67: @0[0]: _3 = CheckedAdd((*((*_1).0: &amp;mut i32)), const 1_i32)\n+131:53-131:67: @1[0]: (*((*_1).0: &amp;mut i32)) = move (_3.0: i32)\n+131:53-131:67: @1[1]: _0 = const ()\n+131:67-131:67: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>countdown += 1<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "e28038fd3fec6e1f1626f103685469ed90698cc5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#5}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,115 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>closure.main-{closure#5} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 94\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"95:23-97:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n+95:23-97:6: @0[6]: _7 = &amp;(*_15)\n+95:23-97:6: @0[7]: _6 = &amp;(*_7)\n+95:23-97:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+96:28-96:61: @0[14]: _13 = ()\n+96:28-96:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n+96:28-96:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n+96:28-96:61: @0[17]: _11 = &amp;(*_14)\n+96:28-96:61: @0[18]: _10 = &amp;(*_11)\n+96:28-96:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+96:28-96:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+96:9-96:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+95:23-97:6: @2[5]: _0 = const ()\n+95:23-97:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"95:23-97:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n+95:23-97:6: @0[6]: _7 = &amp;(*_15)\n+95:23-97:6: @0[7]: _6 = &amp;(*_7)\n+95:23-97:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+96:28-96:61: @0[14]: _13 = ()\n+96:28-96:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n+96:28-96:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n+96:28-96:61: @0[17]: _11 = &amp;(*_14)\n+96:28-96:61: @0[18]: _10 = &amp;(*_11)\n+96:28-96:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+96:28-96:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+96:9-96:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+95:23-97:6: @2[5]: _0 = const ()\n+95:23-97:6: @2.Return: return\">        $crate::io::_print($crate::format_args_nl!($($arg)*));</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"95:23-97:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n+95:23-97:6: @0[6]: _7 = &amp;(*_15)\n+95:23-97:6: @0[7]: _6 = &amp;(*_7)\n+95:23-97:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+96:28-96:61: @0[14]: _13 = ()\n+96:28-96:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n+96:28-96:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n+96:28-96:61: @0[17]: _11 = &amp;(*_14)\n+96:28-96:61: @0[18]: _10 = &amp;(*_11)\n+96:28-96:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+96:28-96:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+96:9-96:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+95:23-97:6: @2[5]: _0 = const ()\n+95:23-97:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "d479211aa37e5da9c67818a5ac6ceb5916f7e790", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#6}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>partial_eq.{impl#8}-clone - Coverage Spans</title>\n+<title>closure.main-{closure#6} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,20 +69,19 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">         <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:10-4:15: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n-4:10-4:15: @0[2]: _2 = &amp;((*_1).0: usize)\n-4:10-4:15: @0[4]: _3 = &amp;((*_1).1: usize)\n-4:10-4:15: @0[6]: _4 = &amp;((*_1).2: usize)\n-4:10-4:15: @0[10]: _7 = &amp;(*_2)\n-4:10-4:15: @0[11]: _6 = &amp;(*_7)\n-4:10-4:15: @0.Call: _5 = &lt;usize as Clone&gt;::clone(move _6) -&gt; [return: bb1, unwind: bb4]\n-4:10-4:15: @1[4]: _10 = &amp;(*_3)\n-4:10-4:15: @1[5]: _9 = &amp;(*_10)\n-4:10-4:15: @1.Call: _8 = &lt;usize as Clone&gt;::clone(move _9) -&gt; [return: bb2, unwind: bb4]\n-4:10-4:15: @2[4]: _13 = &amp;(*_4)\n-4:10-4:15: @2[5]: _12 = &amp;(*_13)\n-4:10-4:15: @2.Call: _11 = &lt;usize as Clone&gt;::clone(move _12) -&gt; [return: bb3, unwind: bb4]\n-4:10-4:15: @3[1]: _0 = Version { major: move _5, minor: move _8, patch: move _11 }\n-4:15-4:15: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>Clone<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 140\"><span class=\"line\">                                      <span class=\"code\" style=\"--layer: 0\">| _unused_arg: u8 | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"141:70-141:82: @0[5]: _15 = const main::{closure#6}::promoted[1]\n+141:70-141:82: @0[6]: _7 = &amp;(*_15)\n+141:70-141:82: @0[7]: _6 = &amp;(*_7)\n+141:70-141:82: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+141:61-141:83: @0[14]: _13 = ()\n+141:61-141:83: @0[15]: FakeRead(ForMatchedPlace, _13)\n+141:61-141:83: @0[16]: _14 = const main::{closure#6}::promoted[0]\n+141:61-141:83: @0[17]: _11 = &amp;(*_14)\n+141:61-141:83: @0[18]: _10 = &amp;(*_11)\n+141:61-141:83: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+141:61-141:83: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+141:61-141:83: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+141:61-141:83: @2[5]: _0 = const ()\n+141:85-141:85: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq/partial_eq.{impl#8}-clone.-------.InstrumentCoverage.0.html"}, {"sha": "2734c0b24688c32a577aa0ea302c6d920cd22bd9", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#7}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,115 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>closure.main-{closure#7} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 142\"><span class=\"line\">                                   <span class=\"code\" style=\"--layer: 0\">| _unused_arg: u8 | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n+144:18-144:30: @0[6]: _7 = &amp;(*_15)\n+144:18-144:30: @0[7]: _6 = &amp;(*_7)\n+144:18-144:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+144:9-144:31: @0[14]: _13 = ()\n+144:9-144:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n+144:9-144:31: @0[16]: _14 = const main::{closure#7}::promoted[0]\n+144:9-144:31: @0[17]: _11 = &amp;(*_14)\n+144:9-144:31: @0[18]: _10 = &amp;(*_11)\n+144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+144:9-144:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+144:9-144:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+144:9-144:31: @2[5]: _0 = const ()\n+145:6-145:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n+144:18-144:30: @0[6]: _7 = &amp;(*_15)\n+144:18-144:30: @0[7]: _6 = &amp;(*_7)\n+144:18-144:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+144:9-144:31: @0[14]: _13 = ()\n+144:9-144:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n+144:9-144:31: @0[16]: _14 = const main::{closure#7}::promoted[0]\n+144:9-144:31: @0[17]: _11 = &amp;(*_14)\n+144:9-144:31: @0[18]: _10 = &amp;(*_11)\n+144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+144:9-144:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+144:9-144:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+144:9-144:31: @2[5]: _0 = const ()\n+145:6-145:6: @2.Return: return\">        println!(\"not called\")</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n+144:18-144:30: @0[6]: _7 = &amp;(*_15)\n+144:18-144:30: @0[7]: _6 = &amp;(*_7)\n+144:18-144:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+144:9-144:31: @0[14]: _13 = ()\n+144:9-144:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n+144:9-144:31: @0[16]: _14 = const main::{closure#7}::promoted[0]\n+144:9-144:31: @0[17]: _11 = &amp;(*_14)\n+144:9-144:31: @0[18]: _10 = &amp;(*_11)\n+144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+144:9-144:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+144:9-144:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+144:9-144:31: @2[5]: _0 = const ()\n+145:6-145:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "a032df54ea21cc96e1c4d2d977cdd5a09ff95b0a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#8}.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -2,7 +2,7 @@\n <!--\n \n Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html\n \n For revisions in Pull Requests (PR):\n   * Replace \"rust-lang\" with the github PR author\n@@ -11,7 +11,7 @@\n -->\n <html>\n <head>\n-<title>inner_items.main-{impl#0}-trait_func - Coverage Spans</title>\n+<title>closure.main-{closure#8} - Coverage Spans</title>\n <style>\n     .line {\n         counter-increment: line;\n@@ -69,13 +69,21 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\"><span class=\"annotation\">@0\u298a</span>incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@1,2</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 146\"><span class=\"line\">                                   <span class=\"code\" style=\"--layer: 0\">|</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _unused_arg: u8</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"149:18-149:30: @0[5]: _15 = const main::{closure#8}::promoted[1]\n+149:18-149:30: @0[6]: _7 = &amp;(*_15)\n+149:18-149:30: @0[7]: _6 = &amp;(*_7)\n+149:18-149:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+149:9-149:31: @0[14]: _13 = ()\n+149:9-149:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n+149:9-149:31: @0[16]: _14 = const main::{closure#8}::promoted[0]\n+149:9-149:31: @0[17]: _11 = &amp;(*_14)\n+149:9-149:31: @0[18]: _10 = &amp;(*_11)\n+149:9-149:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+149:9-149:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+149:9-149:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+149:9-149:31: @2[5]: _0 = const ()\n+149:33-149:33: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html"}, {"sha": "3c174e03ebe3535dd6aef73ad8f56da991511fb3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#9}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>closure.main-{closure#9} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 150\"><span class=\"line\">                                          <span class=\"code\" style=\"--layer: 0\">|</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _unused_arg: u8</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"153:18-153:30: @0[5]: _15 = const main::{closure#9}::promoted[1]\n+153:18-153:30: @0[6]: _7 = &amp;(*_15)\n+153:18-153:30: @0[7]: _6 = &amp;(*_7)\n+153:18-153:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+153:9-153:31: @0[14]: _13 = ()\n+153:9-153:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n+153:9-153:31: @0[16]: _14 = const main::{closure#9}::promoted[0]\n+153:9-153:31: @0[17]: _11 = &amp;(*_14)\n+153:9-153:31: @0[18]: _10 = &amp;(*_11)\n+153:9-153:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+153:9-153:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+153:9-153:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+153:9-153:31: @2[5]: _0 = const ()\n+153:33-153:33: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "702c7937064b75ed351bb47be067793841436f5b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "e16b366e2162e8894daf484ac190447a92e7c196", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 326, "deletions": 0, "changes": 326, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "59d00600738f0bbdfd516db1cb01b9676cbd1073", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "1a535b937887b246ddc29e5617c0a2c4de9e7566", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_fn.-------.InstrumentCoverage.0.html", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "6eff51ad89c7353e201008d0d773a7df6834cf2e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "fa3c4b3c312575113c1bef1aa9f39098a382461d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 44, "deletions": 15, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html"}, {"sha": "b5dedeec8ac7e9a33104c8ceb5c7bc8908b821e0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html"}, {"sha": "52c5d4f47b1d3306c2dd095c8cba3e5a031d898d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 93, "deletions": 24, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html"}, {"sha": "329641d47bdbc5ee18989b2968144a4a955fc7a8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.{impl#0}-set_strength.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.{impl#0}-set_strength.-------.InstrumentCoverage.0.html"}, {"sha": "c4e99bd679d0e761423a93f024656444288a59f7", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html"}, {"sha": "8eb6c1dcb877a1752231c2d56a7bd1754c472000", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 113, "deletions": 34, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html"}, {"sha": "5b2cce4f648fc1c9a3fcb609436ccf385f2daff6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 39, "deletions": 7, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html"}, {"sha": "29548fa1124213eaf75b990fc3866cd2a4a55aeb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html"}, {"sha": "8b5257b02bbd6f8712c1af309719f94e06bb2bd5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "ee1e0339049e1b5024cda6e0fa5081bda42164d8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html"}, {"sha": "693b15f15b9ca90ac084623c50d20e8af5c39a2a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html"}, {"sha": "f30f0ed9a8489c56d3df88fd34327dedc3d46b22", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 82, "deletions": 39, "changes": 121, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html"}, {"sha": "076d036c2aff781611c4d3f71daced38b45a88ff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html"}, {"sha": "54b1ea45cba9d53b40e0c95dc7bef51d76430de1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html"}, {"sha": "312d2ee7e8f0e18955bcf34f20f6f6da61b57daf", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.loops_branches/loops_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html"}, {"sha": "cb60276aa1228eb27f2cb3df5c1ffe8dd8297d24", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 63, "deletions": 25, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08", "previous_filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html"}, {"sha": "6739634f65b305cf25c6410a26f9303564238de9", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 260, "deletions": 0, "changes": 260, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "c72ad426356204dde191ecdac49ba077d9f11de7", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html", "status": "added", "additions": 396, "deletions": 0, "changes": 396, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}, {"sha": "bd6aac4103eb6297738813d59384fa055032fae3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/6513f5029183471993bab4b05ae5f5433f461b08/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html?ref=6513f5029183471993bab4b05ae5f5433f461b08"}]}