{"sha": "35e021ed53d3ab9e63686ec7d79bc3ca2af0c820", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZTAyMWVkNTNkM2FiOWU2MzY4NmVjN2Q3OWJjM2NhMmFmMGM4MjA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-14T19:33:26Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-14T19:33:26Z"}, "message": "rustc: Perform type substitutions when recording locals", "tree": {"sha": "81422e3913c5c583dbcc7285048da2c8f783d93e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81422e3913c5c583dbcc7285048da2c8f783d93e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35e021ed53d3ab9e63686ec7d79bc3ca2af0c820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35e021ed53d3ab9e63686ec7d79bc3ca2af0c820", "html_url": "https://github.com/rust-lang/rust/commit/35e021ed53d3ab9e63686ec7d79bc3ca2af0c820", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35e021ed53d3ab9e63686ec7d79bc3ca2af0c820/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee88f79f5d78de8bbebec6cfc4b04335fb597b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee88f79f5d78de8bbebec6cfc4b04335fb597b6", "html_url": "https://github.com/rust-lang/rust/commit/fee88f79f5d78de8bbebec6cfc4b04335fb597b6"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "211fb3498825fcfb6e8d0004323cf8a48cc67b7b", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/35e021ed53d3ab9e63686ec7d79bc3ca2af0c820/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e021ed53d3ab9e63686ec7d79bc3ca2af0c820/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=35e021ed53d3ab9e63686ec7d79bc3ca2af0c820", "patch": "@@ -858,6 +858,15 @@ mod Unify {\n                         }\n                     }\n                 }\n+\n+                // TODO: \"freeze\"\n+                let vec[@ty.t] param_substs_1 = vec();\n+                for (@ty.t subst in param_substs) {\n+                    param_substs_1 += vec(subst);\n+                }\n+\n+                unified_type =\n+                    ty.substitute_type_params(param_substs_1, unified_type);\n                 fcx.locals.insert(id, unified_type);\n             }\n             fn record_param(uint index, @ty.t binding) -> ty.unify_result {\n@@ -1617,7 +1626,8 @@ fn check_pat(&@fn_ctxt fcx, @ast.pat pat) -> @ast.pat {\n }\n \n fn check_expr(&@fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n-    // log \"typechecking expr \" + pretty.pprust.expr_to_str(expr);\n+    //fcx.ccx.sess.span_warn(expr.span, \"typechecking expr \" +\n+    //                       pretty.pprust.expr_to_str(expr));\n \n     // A generic function to factor out common logic from call and bind\n     // expressions."}]}