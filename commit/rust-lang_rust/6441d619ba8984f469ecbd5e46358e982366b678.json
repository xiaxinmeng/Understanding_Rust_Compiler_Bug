{"sha": "6441d619ba8984f469ecbd5e46358e982366b678", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDFkNjE5YmE4OTg0ZjQ2OWVjYmQ1ZTQ2MzU4ZTk4MjM2NmI2Nzg=", "commit": {"author": {"name": "Tycho Sci", "email": "tychosci@gmail.com", "date": "2013-01-13T22:33:47Z"}, "committer": {"name": "Tycho Sci", "email": "tychosci@gmail.com", "date": "2013-01-13T22:33:47Z"}, "message": "core: Use libc::readlink function properly\n\nThe specification of readlink() says it's not guaranteed that the\nreturned contents of the symbolic link is null-terminated.", "tree": {"sha": "687e2e8a00a913cd03a0d582822ade606e80fa34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/687e2e8a00a913cd03a0d582822ade606e80fa34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6441d619ba8984f469ecbd5e46358e982366b678", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6441d619ba8984f469ecbd5e46358e982366b678", "html_url": "https://github.com/rust-lang/rust/commit/6441d619ba8984f469ecbd5e46358e982366b678", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6441d619ba8984f469ecbd5e46358e982366b678/comments", "author": {"login": "tychosci", "id": 1026254, "node_id": "MDQ6VXNlcjEwMjYyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1026254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tychosci", "html_url": "https://github.com/tychosci", "followers_url": "https://api.github.com/users/tychosci/followers", "following_url": "https://api.github.com/users/tychosci/following{/other_user}", "gists_url": "https://api.github.com/users/tychosci/gists{/gist_id}", "starred_url": "https://api.github.com/users/tychosci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tychosci/subscriptions", "organizations_url": "https://api.github.com/users/tychosci/orgs", "repos_url": "https://api.github.com/users/tychosci/repos", "events_url": "https://api.github.com/users/tychosci/events{/privacy}", "received_events_url": "https://api.github.com/users/tychosci/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tychosci", "id": 1026254, "node_id": "MDQ6VXNlcjEwMjYyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1026254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tychosci", "html_url": "https://github.com/tychosci", "followers_url": "https://api.github.com/users/tychosci/followers", "following_url": "https://api.github.com/users/tychosci/following{/other_user}", "gists_url": "https://api.github.com/users/tychosci/gists{/gist_id}", "starred_url": "https://api.github.com/users/tychosci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tychosci/subscriptions", "organizations_url": "https://api.github.com/users/tychosci/orgs", "repos_url": "https://api.github.com/users/tychosci/repos", "events_url": "https://api.github.com/users/tychosci/events{/privacy}", "received_events_url": "https://api.github.com/users/tychosci/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "802d4751903ba4913255a195f6aa9d582e3bb7f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/802d4751903ba4913255a195f6aa9d582e3bb7f2", "html_url": "https://github.com/rust-lang/rust/commit/802d4751903ba4913255a195f6aa9d582e3bb7f2"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "f602b230f45e5c6fbf4582ead792cd4a86c30541", "filename": "src/libcore/os.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6441d619ba8984f469ecbd5e46358e982366b678/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6441d619ba8984f469ecbd5e46358e982366b678/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=6441d619ba8984f469ecbd5e46358e982366b678", "patch": "@@ -452,10 +452,19 @@ pub fn self_exe_path() -> Option<Path> {\n     fn load_self() -> Option<~str> {\n         unsafe {\n             use libc::funcs::posix01::unistd::readlink;\n-            do fill_charp_buf() |buf, sz| {\n+\n+            let mut path_str = str::with_capacity(tmpbuf_sz);\n+            let len = do str::as_c_str(path_str) |buf| {\n+                let buf = buf as *mut c_char;\n                 do as_c_charp(\"/proc/self/exe\") |proc_self_buf| {\n-                    readlink(proc_self_buf, buf, sz) != (-1 as ssize_t)\n+                    readlink(proc_self_buf, buf, tmpbuf_sz as size_t)\n                 }\n+            };\n+            if len == -1 {\n+                None\n+            } else {\n+                str::raw::set_len(&mut path_str, len as uint);\n+                Some(path_str)\n             }\n         }\n     }"}]}