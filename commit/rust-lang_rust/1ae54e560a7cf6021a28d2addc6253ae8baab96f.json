{"sha": "1ae54e560a7cf6021a28d2addc6253ae8baab96f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZTU0ZTU2MGE3Y2Y2MDIxYTI4ZDJhZGRjNjI1M2FlOGJhYWI5NmY=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-09-27T20:29:02Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:13Z"}, "message": "Change imports for `cfg(doc)`", "tree": {"sha": "18ba5c0629152b4db535aceef9d5daa7031ca66f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18ba5c0629152b4db535aceef9d5daa7031ca66f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ae54e560a7cf6021a28d2addc6253ae8baab96f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae54e560a7cf6021a28d2addc6253ae8baab96f", "html_url": "https://github.com/rust-lang/rust/commit/1ae54e560a7cf6021a28d2addc6253ae8baab96f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ae54e560a7cf6021a28d2addc6253ae8baab96f/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9bf69954c942085a775f3cdd035ac3b1273f974", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bf69954c942085a775f3cdd035ac3b1273f974", "html_url": "https://github.com/rust-lang/rust/commit/e9bf69954c942085a775f3cdd035ac3b1273f974"}], "stats": {"total": 59, "additions": 29, "deletions": 30}, "files": [{"sha": "1f9036242eb59bee8f670e0b9347660ad59a432a", "filename": "library/std/src/sys/unix/ext/net/addr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Faddr.rs?ref=1ae54e560a7cf6021a28d2addc6253ae8baab96f", "patch": "@@ -1,7 +1,7 @@\n use crate::ffi::OsStr;\n use crate::os::unix::ffi::OsStrExt;\n use crate::path::Path;\n-use crate::sys::unix::cvt;\n+use crate::sys::cvt;\n use crate::{ascii, fmt, io, mem};\n \n // FIXME(#43348): Make libc adapt #[doc(cfg(...))] so we don't need these fake definitions here?"}, {"sha": "9e8da6306ca2d66dff6c18576afa48d4ec1c9d46", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=1ae54e560a7cf6021a28d2addc6253ae8baab96f", "patch": "@@ -1,3 +1,4 @@\n+use super::{sockaddr_un, SocketAddr};\n use crate::convert::TryFrom;\n use crate::io::{self, IoSliceMut};\n use crate::marker::PhantomData;\n@@ -6,8 +7,7 @@ use crate::os::unix::io::RawFd;\n use crate::path::Path;\n use crate::ptr::read_unaligned;\n use crate::slice::from_raw_parts;\n-use crate::sys::unix::ext::net::addr::{sockaddr_un, SocketAddr};\n-use crate::sys::unix::net::Socket;\n+use crate::sys::net::Socket;\n \n #[cfg(any(target_os = \"android\", target_os = \"linux\",))]\n use libc::{gid_t, pid_t, uid_t};"}, {"sha": "ce91b403efd70f5dec0bfd03e9e99d0c332ef507", "filename": "library/std/src/sys/unix/ext/net/datagram.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fdatagram.rs?ref=1ae54e560a7cf6021a28d2addc6253ae8baab96f", "patch": "@@ -7,12 +7,10 @@\n     target_os = \"netbsd\",\n     target_os = \"openbsd\",\n ))]\n-use crate::io::IoSliceMut;\n-use crate::net::Shutdown;\n-use crate::os::unix::io::{AsRawFd, FromRawFd, IntoRawFd, RawFd};\n-use crate::path::Path;\n-use crate::sys::unix::cvt;\n-use crate::sys::unix::ext::net::addr::{sockaddr_un, SocketAddr};\n+use super::{\n+    recv_vectored_with_ancillary_from, send_vectored_with_ancillary_to, sockaddr_un, SocketAddr,\n+    SocketAncillary,\n+};\n #[cfg(any(\n     target_os = \"android\",\n     target_os = \"dragonfly\",\n@@ -22,10 +20,12 @@ use crate::sys::unix::ext::net::addr::{sockaddr_un, SocketAddr};\n     target_os = \"netbsd\",\n     target_os = \"openbsd\",\n ))]\n-use crate::sys::unix::ext::net::ancillary::{\n-    recv_vectored_with_ancillary_from, send_vectored_with_ancillary_to, SocketAncillary,\n-};\n-use crate::sys::unix::net::Socket;\n+use crate::io::IoSliceMut;\n+use crate::net::Shutdown;\n+use crate::os::unix::io::{AsRawFd, FromRawFd, IntoRawFd, RawFd};\n+use crate::path::Path;\n+use crate::sys::cvt;\n+use crate::sys::net::Socket;\n use crate::sys_common::{AsInner, FromInner, IntoInner};\n use crate::time::Duration;\n use crate::{fmt, io};"}, {"sha": "9803c6e27462c2dda9c222afed428dfa1038ed34", "filename": "library/std/src/sys/unix/ext/net/listener.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Flistener.rs?ref=1ae54e560a7cf6021a28d2addc6253ae8baab96f", "patch": "@@ -1,9 +1,8 @@\n+use super::{sockaddr_un, SocketAddr, UnixStream};\n use crate::os::unix::io::{AsRawFd, FromRawFd, IntoRawFd, RawFd};\n use crate::path::Path;\n+use crate::sys::cvt;\n use crate::sys::net::Socket;\n-use crate::sys::unix::cvt;\n-use crate::sys::unix::ext::net::addr::{sockaddr_un, SocketAddr};\n-use crate::sys::unix::ext::net::stream::UnixStream;\n use crate::sys_common::{AsInner, FromInner, IntoInner};\n use crate::{fmt, io, mem};\n "}, {"sha": "e13c863bdbb778f816853a28abf4f12efd48e4c5", "filename": "library/std/src/sys/unix/ext/net/stream.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fstream.rs?ref=1ae54e560a7cf6021a28d2addc6253ae8baab96f", "patch": "@@ -1,3 +1,16 @@\n+#[cfg(any(\n+    target_os = \"android\",\n+    target_os = \"dragonfly\",\n+    target_os = \"emscripten\",\n+    target_os = \"freebsd\",\n+    target_os = \"linux\",\n+    target_os = \"netbsd\",\n+    target_os = \"openbsd\",\n+))]\n+use super::{\n+    recv_vectored_with_ancillary_from, send_vectored_with_ancillary_to, sockaddr_un, SocketAddr,\n+    SocketAncillary,\n+};\n use crate::fmt;\n use crate::io::{self, Initializer, IoSlice, IoSliceMut};\n use crate::net::Shutdown;\n@@ -15,19 +28,6 @@ use crate::os::unix::ucred;\n use crate::path::Path;\n use crate::sys::cvt;\n use crate::sys::net::Socket;\n-use crate::sys::unix::ext::net::addr::{sockaddr_un, SocketAddr};\n-#[cfg(any(\n-    target_os = \"android\",\n-    target_os = \"dragonfly\",\n-    target_os = \"emscripten\",\n-    target_os = \"freebsd\",\n-    target_os = \"linux\",\n-    target_os = \"netbsd\",\n-    target_os = \"openbsd\",\n-))]\n-use crate::sys::unix::ext::net::ancillary::{\n-    recv_vectored_with_ancillary_from, send_vectored_with_ancillary_to, SocketAncillary,\n-};\n use crate::sys_common::{AsInner, FromInner, IntoInner};\n use crate::time::Duration;\n "}, {"sha": "bf114bbe6e5b832cfbab03df0b8872cc0635fd47", "filename": "library/std/src/sys/unix/ext/net/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae54e560a7cf6021a28d2addc6253ae8baab96f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs?ref=1ae54e560a7cf6021a28d2addc6253ae8baab96f", "patch": "@@ -2,7 +2,7 @@ use super::*;\n use crate::io::prelude::*;\n use crate::io::{self, ErrorKind, IoSlice, IoSliceMut};\n use crate::iter::FromIterator;\n-use crate::sys::unix::ext::io::AsRawFd;\n+use crate::os::unix::io::AsRawFd;\n use crate::sys_common::io::test::tmpdir;\n use crate::thread;\n use crate::time::Duration;"}]}