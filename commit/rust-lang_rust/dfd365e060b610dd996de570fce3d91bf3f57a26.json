{"sha": "dfd365e060b610dd996de570fce3d91bf3f57a26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZDM2NWUwNjBiNjEwZGQ5OTZkZTU3MGZjZTNkOTFiZjNmNTdhMjY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-12T10:40:42Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-12T10:40:42Z"}, "message": "Display crate name in the \"codegen mono items\" time message", "tree": {"sha": "aa953d9aa575353e3514be73c7a3b26b84bf5771", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa953d9aa575353e3514be73c7a3b26b84bf5771"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfd365e060b610dd996de570fce3d91bf3f57a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd365e060b610dd996de570fce3d91bf3f57a26", "html_url": "https://github.com/rust-lang/rust/commit/dfd365e060b610dd996de570fce3d91bf3f57a26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfd365e060b610dd996de570fce3d91bf3f57a26/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7666e9c2bf733c4f8f3271a3ab2a6e184396972", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7666e9c2bf733c4f8f3271a3ab2a6e184396972", "html_url": "https://github.com/rust-lang/rust/commit/f7666e9c2bf733c4f8f3271a3ab2a6e184396972"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "e56794bc4a94641583f871eb2680192dababfd53", "filename": "src/driver.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dfd365e060b610dd996de570fce3d91bf3f57a26/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd365e060b610dd996de570fce3d91bf3f57a26/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=dfd365e060b610dd996de570fce3d91bf3f57a26", "patch": "@@ -78,7 +78,7 @@ fn run_jit(tcx: TyCtxt<'_>) -> ! {\n         .into_iter()\n         .collect::<Vec<(_, (_, _))>>();\n \n-    time(tcx.sess, \"codegen mono items\", || {\n+    time(tcx, \"codegen mono items\", || {\n         codegen_mono_items(tcx, &mut jit_module, None, mono_items);\n     });\n     crate::main_shim::maybe_create_entry_wrapper(tcx, &mut jit_module);\n@@ -245,7 +245,7 @@ fn run_aot(\n         }\n     }\n \n-    let modules = time(tcx.sess, \"codegen mono items\", || {\n+    let modules = time(tcx, \"codegen mono items\", || {\n         cgus.iter().map(|cgu| {\n             let cgu_reuse = determine_cgu_reuse(tcx, cgu);\n             tcx.sess.cgu_reuse_tracker.set_actual_reuse(&cgu.name().as_str(), cgu_reuse);\n@@ -491,16 +491,16 @@ fn trans_mono_item<'clif, 'tcx, B: Backend + 'static>(\n     }\n }\n \n-fn time<R>(sess: &Session, name: &'static str, f: impl FnOnce() -> R) -> R {\n+fn time<R>(tcx: TyCtxt<'_>, name: &'static str, f: impl FnOnce() -> R) -> R {\n     if std::env::var(\"CG_CLIF_DISPLAY_CG_TIME\").is_ok() {\n-        println!(\"[{}] start\", name);\n+        println!(\"[{:<30}: {}] start\", tcx.crate_name(LOCAL_CRATE), name);\n         let before = std::time::Instant::now();\n-        let res = sess.time(name, f);\n+        let res = tcx.sess.time(name, f);\n         let after = std::time::Instant::now();\n-        println!(\"[{}] end time: {:?}\", name, after - before);\n+        println!(\"[{:<30}: {}] end time: {:?}\", tcx.crate_name(LOCAL_CRATE), name, after - before);\n         res\n     } else {\n-        sess.time(name, f)\n+        tcx.sess.time(name, f)\n     }\n }\n "}]}