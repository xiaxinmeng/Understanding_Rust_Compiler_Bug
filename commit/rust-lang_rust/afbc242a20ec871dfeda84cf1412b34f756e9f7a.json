{"sha": "afbc242a20ec871dfeda84cf1412b34f756e9f7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYmMyNDJhMjBlYzg3MWRmZWRhODRjZjE0MTJiMzRmNzU2ZTlmN2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-27T08:36:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-27T08:36:15Z"}, "message": "auto merge of #9527 : bmaxa/rust/master, r=alexcrichton\n\nthat is, if super trait had more methods, tnen subtrait, compiling would fail. I simply forgot to update\r\nvariable name. Updated test case , too.", "tree": {"sha": "5c17fb0ea75063c9ef692844d33bb0fee803e1c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c17fb0ea75063c9ef692844d33bb0fee803e1c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afbc242a20ec871dfeda84cf1412b34f756e9f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afbc242a20ec871dfeda84cf1412b34f756e9f7a", "html_url": "https://github.com/rust-lang/rust/commit/afbc242a20ec871dfeda84cf1412b34f756e9f7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afbc242a20ec871dfeda84cf1412b34f756e9f7a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6774f8c3992332c8958b10582083d3cff1bd5e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6774f8c3992332c8958b10582083d3cff1bd5e1", "html_url": "https://github.com/rust-lang/rust/commit/d6774f8c3992332c8958b10582083d3cff1bd5e1"}, {"sha": "a4b7474461f5ea96eb895adef7f17a079b42bad5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b7474461f5ea96eb895adef7f17a079b42bad5", "html_url": "https://github.com/rust-lang/rust/commit/a4b7474461f5ea96eb895adef7f17a079b42bad5"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "3cc93d3fea928f8137693d490e1469ae7a711ec1", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afbc242a20ec871dfeda84cf1412b34f756e9f7a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afbc242a20ec871dfeda84cf1412b34f756e9f7a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=afbc242a20ec871dfeda84cf1412b34f756e9f7a", "patch": "@@ -431,10 +431,10 @@ impl<'self> LookupContext<'self> {\n \n             Candidate {\n                 rcvr_match_condition: RcvrMatchesIfObject(did),\n-                rcvr_substs: trait_ref.substs.clone(),\n+                rcvr_substs: new_trait_ref.substs.clone(),\n                 method_ty: m,\n                 origin: method_object(method_object {\n-                        trait_id: trait_ref.def_id,\n+                        trait_id: new_trait_ref.def_id,\n                         object_trait_id: did,\n                         method_num: method_num,\n                         real_index: vtable_index"}, {"sha": "f2ee9206957ed27f86222e1dd24a217c4793fbc3", "filename": "src/test/run-pass/issue-9394-inherited-trait-calls.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/afbc242a20ec871dfeda84cf1412b34f756e9f7a/src%2Ftest%2Frun-pass%2Fissue-9394-inherited-trait-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afbc242a20ec871dfeda84cf1412b34f756e9f7a/src%2Ftest%2Frun-pass%2Fissue-9394-inherited-trait-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9394-inherited-trait-calls.rs?ref=afbc242a20ec871dfeda84cf1412b34f756e9f7a", "patch": "@@ -10,6 +10,10 @@\n \n trait Base: Base2 + Base3{\n     fn foo(&self) -> ~str;\n+    fn foo1(&self) -> ~str;\n+    fn foo2(&self) -> ~str{\n+        ~\"base foo2\"\n+    }\n }\n \n trait Base2: Base3{\n@@ -30,6 +34,9 @@ impl Base for X {\n     fn foo(&self) -> ~str{\n         ~\"base foo\"\n     }\n+    fn foo1(&self) -> ~str{\n+        ~\"base foo1\"\n+    }\n \n }\n \n@@ -56,6 +63,8 @@ pub fn main() {\n     let s = &n as &Super;\n     assert_eq!(s.bar(),~\"super bar\");\n     assert_eq!(s.foo(),~\"base foo\");\n+    assert_eq!(s.foo1(),~\"base foo1\");\n+    assert_eq!(s.foo2(),~\"base foo2\");\n     assert_eq!(s.baz(),~\"base2 baz\");\n     assert_eq!(s.root(),~\"base3 root\");\n }"}]}