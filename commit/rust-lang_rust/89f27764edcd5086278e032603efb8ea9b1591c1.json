{"sha": "89f27764edcd5086278e032603efb8ea9b1591c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZjI3NzY0ZWRjZDUwODYyNzhlMDMyNjAzZWZiOGVhOWIxNTkxYzE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-02T08:45:39Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-02T08:45:39Z"}, "message": "Cargo fmt and update tests", "tree": {"sha": "51c3c8ec3417314ec35a3748f70dd0e40e5ab036", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51c3c8ec3417314ec35a3748f70dd0e40e5ab036"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89f27764edcd5086278e032603efb8ea9b1591c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89f27764edcd5086278e032603efb8ea9b1591c1", "html_url": "https://github.com/rust-lang/rust/commit/89f27764edcd5086278e032603efb8ea9b1591c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89f27764edcd5086278e032603efb8ea9b1591c1/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c9bf028ab833ca4582f64f5640be37304de872", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c9bf028ab833ca4582f64f5640be37304de872", "html_url": "https://github.com/rust-lang/rust/commit/c4c9bf028ab833ca4582f64f5640be37304de872"}], "stats": {"total": 36, "additions": 0, "deletions": 36}, "files": [{"sha": "2643946236d6c2a52a5172046806a7851ff9ab3c", "filename": "build.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -14,7 +14,6 @@ use std::io::Write;\n use std::path::PathBuf;\n use std::process::Command;\n \n-\n fn main() {\n     let out_dir = PathBuf::from(env::var_os(\"OUT_DIR\").unwrap());\n "}, {"sha": "5e7cb458649b3b3d7328522764a8dc9166d5ac2b", "filename": "src/bin/git-fmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fbin%2Fgit-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fbin%2Fgit-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fgit-fmt.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -14,7 +14,6 @@ use getopts::{Matches, Options};\n use rustfmt::{run, Input};\n use rustfmt::config;\n \n-\n fn prune_files(files: Vec<&str>) -> Vec<&str> {\n     let prefixes: Vec<_> = files\n         .iter()"}, {"sha": "9bf268878817932bde55ec2662078581d7ae40af", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -10,7 +10,6 @@\n \n #![cfg(not(test))]\n \n-\n extern crate env_logger;\n extern crate getopts;\n extern crate rustfmt_nightly as rustfmt;"}, {"sha": "4b16199d82691fa64b05f0b9736a7642f50e6ab8", "filename": "src/comment.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -824,9 +824,6 @@ impl<'a> Iterator for UngroupedCommentCodeSlices<'a> {\n     }\n }\n \n-\n-\n-\n /// Iterator over an alternating sequence of functional and commented parts of\n /// a string. The first item is always a, possibly zero length, subslice of\n /// functional text. Line style comments contain their ending newlines.\n@@ -948,7 +945,6 @@ fn changed_comment_content(orig: &str, new: &str) -> bool {\n     res\n }\n \n-\n /// Iterator over the 'payload' characters of a comment.\n /// It skips whitespace, comment start/end marks, and '*' at the beginning of lines.\n /// The comment must be one comment, ie not more than one start mark (no multiple line comments,\n@@ -994,7 +990,6 @@ impl<'a> Iterator for CommentReducer<'a> {\n     }\n }\n \n-\n fn remove_comment_header(comment: &str) -> &str {\n     if comment.starts_with(\"///\") || comment.starts_with(\"//!\") {\n         &comment[3..]"}, {"sha": "4172710a0892040f2bca8eeb889e45d63073d28d", "filename": "src/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -21,7 +21,6 @@ use file_lines::FileLines;\n use lists::{ListTactic, SeparatorPlace, SeparatorTactic};\n use Summary;\n \n-\n macro_rules! is_nightly_channel {\n     () => {\n     env::var(\"CFG_RELEASE_CHANNEL\")\n@@ -88,7 +87,6 @@ configuration_option_enum! { TypeDensity:\n     Wide,\n }\n \n-\n impl Density {\n     pub fn to_list_tactic(self) -> ListTactic {\n         match self {\n@@ -579,8 +577,6 @@ pub fn get_toml_path(dir: &Path) -> Result<Option<PathBuf>, Error> {\n     Ok(None)\n }\n \n-\n-\n create_config! {\n     // Fundamental stuff\n     max_width: usize, 100, true, \"Maximum width of each line\";"}, {"sha": "f38e41eca8942ae3ceba5f1c814d4ea2e78afaa2", "filename": "src/imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -13,7 +13,6 @@ use std::cmp::Ordering;\n use syntax::ast;\n use syntax::codemap::{BytePos, Span};\n \n-\n use spanned::Spanned;\n use codemap::SpanUtils;\n use comment::combine_strs_with_missing_comments;"}, {"sha": "2fc3405735573ee4facdd223af3a9d12e3acc587", "filename": "src/items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -285,7 +285,6 @@ impl<'a> FmtVisitor<'a> {\n         self.format_item(item);\n     }\n \n-\n     fn format_foreign_item(&mut self, item: &ast::ForeignItem) {\n         let rewrite = item.rewrite(&self.get_context(), self.shape());\n         self.push_rewrite(item.span(), rewrite);"}, {"sha": "30deafd3f9e99d584ac987f0c22136a5c15546ad", "filename": "src/modules.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -18,7 +18,6 @@ use syntax::parse::parser;\n \n use utils::contains_skip;\n \n-\n /// List all the files containing modules of a crate.\n /// If a file is used twice in a crate, it appears only once.\n pub fn list_files<'a>("}, {"sha": "054a3075ca0c5aa675d7b0336ac632a1d1135920", "filename": "tests/target/control-brace-style-always-next-line.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fcontrol-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fcontrol-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcontrol-brace-style-always-next-line.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -7,28 +7,24 @@ fn main() {\n         ();\n     }\n \n-\n     'label: loop\n     // loop comment\n     {\n         ();\n     }\n \n-\n     cond = true;\n     while cond\n     {\n         ();\n     }\n \n-\n     'while_label: while cond\n     {\n         // while comment\n         ();\n     }\n \n-\n     for obj in iter\n     {\n         for sub_obj in obj"}, {"sha": "ae6bf4a56821c768fb4a54a03a9363b224b9a029", "filename": "tests/target/control-brace-style-always-same-line.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fcontrol-brace-style-always-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fcontrol-brace-style-always-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcontrol-brace-style-always-same-line.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -6,26 +6,22 @@ fn main() {\n         ();\n     }\n \n-\n     'label: loop\n     // loop comment\n     {\n         ();\n     }\n \n-\n     cond = true;\n     while cond {\n         ();\n     }\n \n-\n     'while_label: while cond {\n         // while comment\n         ();\n     }\n \n-\n     for obj in iter {\n         for sub_obj in obj {\n             'nested_while_label: while cond {"}, {"sha": "31e12cfa0d02e94eaa3ca8f1732b05c8a706c54a", "filename": "tests/target/else-if-brace-style-always-next-line.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Felse-if-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Felse-if-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Felse-if-brace-style-always-next-line.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -14,10 +14,8 @@ fn main() {\n         ();\n     }\n \n-\n     let a = if 0 > 1 { unreachable!() } else { 0x0 };\n \n-\n     if true\n     {\n         ();"}, {"sha": "5e5ab21a0d884ae7b701e793a9c1b3b0e772313b", "filename": "tests/target/else-if-brace-style-always-same-line.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Felse-if-brace-style-always-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Felse-if-brace-style-always-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Felse-if-brace-style-always-same-line.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -13,10 +13,8 @@ fn main() {\n         ();\n     }\n \n-\n     let a = if 0 > 1 { unreachable!() } else { 0x0 };\n \n-\n     if true {\n         ();\n     } else if false {"}, {"sha": "c99807dc06db460f8a447a4f85c798d3506e4d1b", "filename": "tests/target/else-if-brace-style-closing-next-line.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Felse-if-brace-style-closing-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Felse-if-brace-style-closing-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Felse-if-brace-style-closing-next-line.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -13,10 +13,8 @@ fn main() {\n         ();\n     }\n \n-\n     let a = if 0 > 1 { unreachable!() } else { 0x0 };\n \n-\n     if true {\n         ();\n     }"}, {"sha": "0b9a15e8a9261601edbc4e54e0ec9ca6782b8e23", "filename": "tests/target/empty-tuple-no-conversion-to-unit-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fempty-tuple-no-conversion-to-unit-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fempty-tuple-no-conversion-to-unit-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fempty-tuple-no-conversion-to-unit-struct.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -3,7 +3,6 @@ enum TestEnum {\n     Arm2,\n }\n \n-\n fn foo() {\n     let test = TestEnum::Arm1;\n     match test {"}, {"sha": "779c8b168a3a8299986d691d07f77508d5fec286", "filename": "tests/target/enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -95,7 +95,6 @@ where\n     Right { list: I, root: T }, // Post Comment\n }\n \n-\n enum EmtpyWithComment {\n     // Some comment\n }"}, {"sha": "4e6e649383559a02f2defadeb0002ffe8f3b4459", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -18,7 +18,6 @@ fn simple(\n     \"cool\"\n }\n \n-\n fn weird_comment(\n     // /*/ double level */ comment\n     x: Hello, // /*/* triple, even */*/"}, {"sha": "b78a8b5b21ed539ec543eccfb5399f1c1183f8bd", "filename": "tests/target/fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -24,7 +24,6 @@ where\n \n }\n \n-\n fn foo<U, T>(\n     a: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n     b: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB,"}, {"sha": "a743d7f3067df40ddb183c67bd02faa1f7594d4e", "filename": "tests/target/impls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -78,7 +78,6 @@ mod a {\n     }\n }\n \n-\n mod b {\n     mod a {\n         impl Foo {"}, {"sha": "b766eb72f68cf57282f617ca1f00c31ec350c453", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -129,7 +129,6 @@ fn main() {\n         println!(\"{}\", i);\n     }\n \n-\n     while true {\n         hello();\n     }"}, {"sha": "8833be9e1a0f0a9af925271a3e76ed5318af60d1", "filename": "tests/target/type_alias.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f27764edcd5086278e032603efb8ea9b1591c1/tests%2Ftarget%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftype_alias.rs?ref=89f27764edcd5086278e032603efb8ea9b1591c1", "patch": "@@ -52,7 +52,6 @@ pub type CommentTest<\n     T,\n > = ();\n \n-\n pub type WithWhereClause<LONGPARAMETERNAME, T>\n where\n     T: Clone,"}]}