{"sha": "e5873660fc872f92e904bac385645750eb4f84c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ODczNjYwZmM4NzJmOTJlOTA0YmFjMzg1NjQ1NzUwZWI0Zjg0YzQ=", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-05-20T22:15:39Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-05-20T22:36:48Z"}, "message": "doc: clarify Mutex::try_lock, etc. errors\n\nClarify error returns from Mutex::try_lock, RwLock::try_read,\nRwLock::try_write to make it more obvious that both poisoning\nand the lock being already locked are possible errors.", "tree": {"sha": "58c55d249dcfe966ded023ff9b73263e1ebd85c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c55d249dcfe966ded023ff9b73263e1ebd85c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5873660fc872f92e904bac385645750eb4f84c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5873660fc872f92e904bac385645750eb4f84c4", "html_url": "https://github.com/rust-lang/rust/commit/e5873660fc872f92e904bac385645750eb4f84c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5873660fc872f92e904bac385645750eb4f84c4/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99e3aef02079e9c10583638520cd0c134dc3a01d", "url": "https://api.github.com/repos/rust-lang/rust/commits/99e3aef02079e9c10583638520cd0c134dc3a01d", "html_url": "https://github.com/rust-lang/rust/commit/99e3aef02079e9c10583638520cd0c134dc3a01d"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "5ebb87792f2a2c408c5535f47d77d3d215f1b540", "filename": "library/std/src/sync/mutex.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5873660fc872f92e904bac385645750eb4f84c4/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5873660fc872f92e904bac385645750eb4f84c4/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs?ref=e5873660fc872f92e904bac385645750eb4f84c4", "patch": "@@ -294,8 +294,14 @@ impl<T: ?Sized> Mutex<T> {\n     /// # Errors\n     ///\n     /// If another user of this mutex panicked while holding the mutex, then\n-    /// this call will return an error if the mutex would otherwise be\n-    /// acquired.\n+    /// this call will return the error [`Poisoned`] if the mutex would\n+    /// otherwise be acquired.\n+    ///\n+    /// If the mutex could not be acquired because it is already locked, then\n+    /// this call will return [`WouldBlock`].\n+    ///\n+    /// [`Poisoned`]: TryLockError::Poisoned\n+    /// [`WouldBlock`]: TryLockError::WouldBlock\n     ///\n     /// # Examples\n     ///"}, {"sha": "161d2789c27ef06da9dc83bfeb31269deca26829", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e5873660fc872f92e904bac385645750eb4f84c4/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5873660fc872f92e904bac385645750eb4f84c4/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=e5873660fc872f92e904bac385645750eb4f84c4", "patch": "@@ -199,11 +199,17 @@ impl<T: ?Sized> RwLock<T> {\n     ///\n     /// # Errors\n     ///\n-    /// This function will return an error if the RwLock is poisoned. An RwLock\n-    /// is poisoned whenever a writer panics while holding an exclusive lock. An\n-    /// error will only be returned if the lock would have otherwise been\n+    /// This function will return the error [`Poisoned`] if the RwLock is poisoned.\n+    /// An RwLock is poisoned whenever a writer panics while holding an exclusive\n+    /// lock. `Poisoned` will only be returned if the lock would have otherwise been\n     /// acquired.\n     ///\n+    /// This function will return the error [`WouldBlock`] if the RwLock could not\n+    /// be acquired because it was already locked exclusively.\n+    ///\n+    /// [`Poisoned`]: TryLockError::Poisoned\n+    /// [`WouldBlock`]: TryLockError::WouldBlock\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -281,10 +287,17 @@ impl<T: ?Sized> RwLock<T> {\n     ///\n     /// # Errors\n     ///\n-    /// This function will return an error if the RwLock is poisoned. An RwLock\n-    /// is poisoned whenever a writer panics while holding an exclusive lock. An\n-    /// error will only be returned if the lock would have otherwise been\n-    /// acquired.\n+    /// This function will return the error [`Poisoned`] if the RwLock is\n+    /// poisoned. An RwLock is poisoned whenever a writer panics while holding\n+    /// an exclusive lock. `Poisoned` will only be returned if the lock would have\n+    /// otherwise been acquired.\n+    ///\n+    /// This function will return the error [`WouldBlock`] if the RwLock could not\n+    /// be acquired because it was already locked exclusively.\n+    ///\n+    /// [`Poisoned`]: TryLockError::Poisoned\n+    /// [`WouldBlock`]: TryLockError::WouldBlock\n+    ///\n     ///\n     /// # Examples\n     ///"}]}