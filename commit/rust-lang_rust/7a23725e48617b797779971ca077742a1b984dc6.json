{"sha": "7a23725e48617b797779971ca077742a1b984dc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMjM3MjVlNDg2MTdiNzk3Nzc5OTcxY2EwNzc3NDJhMWI5ODRkYzY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-26T21:11:02Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-13T23:46:35Z"}, "message": "Rename encode_info_for_generic_param to encode_info_for_ty_in_generic_param", "tree": {"sha": "7e5f8e6cb43aaf6b428ca5cf42c8e0aecc9556e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e5f8e6cb43aaf6b428ca5cf42c8e0aecc9556e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a23725e48617b797779971ca077742a1b984dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a23725e48617b797779971ca077742a1b984dc6", "html_url": "https://github.com/rust-lang/rust/commit/7a23725e48617b797779971ca077742a1b984dc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a23725e48617b797779971ca077742a1b984dc6/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b524ade782d20b63b84febbcfe58e2b54bfe7ab8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b524ade782d20b63b84febbcfe58e2b54bfe7ab8", "html_url": "https://github.com/rust-lang/rust/commit/b524ade782d20b63b84febbcfe58e2b54bfe7ab8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "712dc869a7d09ad7451f18fafcb9d63d73e1f810", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a23725e48617b797779971ca077742a1b984dc6/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a23725e48617b797779971ca077742a1b984dc6/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=7a23725e48617b797779971ca077742a1b984dc6", "patch": "@@ -1308,11 +1308,11 @@ impl<'a, 'b: 'a, 'tcx: 'b> IsolatedEncoder<'a, 'b, 'tcx> {\n         }\n     }\n \n-    fn encode_info_for_generic_param(\n+    fn encode_info_for_ty_in_generic_param(\n         &mut self,\n         (def_id, Untracked(encode_type)): (DefId, Untracked<bool>),\n     ) -> Entry<'tcx> {\n-        debug!(\"IsolatedEncoder::encode_info_for_generic_param({:?})\", def_id);\n+        debug!(\"IsolatedEncoder::encode_info_for_ty_in_generic_param({:?})\", def_id);\n         let tcx = self.tcx;\n         Entry {\n             kind: EntryKind::Type,\n@@ -1690,7 +1690,7 @@ impl<'a, 'b, 'tcx> IndexBuilder<'a, 'b, 'tcx> {\n             let def_id = self.tcx.hir().local_def_id_from_hir_id(param.hir_id);\n             self.record(\n                 def_id,\n-                IsolatedEncoder::encode_info_for_generic_param,\n+                IsolatedEncoder::encode_info_for_ty_in_generic_param,\n                 (def_id, Untracked(encode_type)),\n             );\n         }"}]}