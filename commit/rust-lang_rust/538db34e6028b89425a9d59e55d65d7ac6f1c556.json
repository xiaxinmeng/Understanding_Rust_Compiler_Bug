{"sha": "538db34e6028b89425a9d59e55d65d7ac6f1c556", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzOGRiMzRlNjAyOGI4OTQyNWE5ZDU5ZTU1ZDY1ZDdhYzZmMWM1NTY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-10T05:22:03Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-10T05:22:03Z"}, "message": "into_string() -> to_owned() (fix #27)", "tree": {"sha": "42948815175186f2a847e453682d73b84e35a15a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42948815175186f2a847e453682d73b84e35a15a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/538db34e6028b89425a9d59e55d65d7ac6f1c556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/538db34e6028b89425a9d59e55d65d7ac6f1c556", "html_url": "https://github.com/rust-lang/rust/commit/538db34e6028b89425a9d59e55d65d7ac6f1c556", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/538db34e6028b89425a9d59e55d65d7ac6f1c556/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7ecb6e7c72e00fe377560baf3c971b7457219d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ecb6e7c72e00fe377560baf3c971b7457219d4", "html_url": "https://github.com/rust-lang/rust/commit/b7ecb6e7c72e00fe377560baf3c971b7457219d4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3fb88e431da78f55a1e259c58dff4d5687a2f2ca", "filename": "src/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/538db34e6028b89425a9d59e55d65d7ac6f1c556/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538db34e6028b89425a9d59e55d65d7ac6f1c556/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=538db34e6028b89425a9d59e55d65d7ac6f1c556", "patch": "@@ -49,7 +49,7 @@ impl LintPass for MiscPass {\n }\n \n \n-declare_lint!(pub STR_TO_STRING, Warn, \"Warn when a String could use into_string() instead of to_string()\");\n+declare_lint!(pub STR_TO_STRING, Warn, \"Warn when a String could use to_owned() instead of to_string()\");\n \n #[allow(missing_copy_implementations)]\n pub struct StrToStringPass;\n@@ -64,7 +64,7 @@ impl LintPass for StrToStringPass {\n             ast::ExprMethodCall(ref method, _, ref args)\n                 if method.node.as_str() == \"to_string\"\n                 && is_str(cx, &*args[0]) => {\n-                cx.span_lint(STR_TO_STRING, expr.span, \"str.into_string() is faster\");\n+                cx.span_lint(STR_TO_STRING, expr.span, \"str.to_owned() is faster\");\n             },\n             _ => ()\n         }"}]}