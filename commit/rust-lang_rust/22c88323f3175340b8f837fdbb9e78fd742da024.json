{"sha": "22c88323f3175340b8f837fdbb9e78fd742da024", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYzg4MzIzZjMxNzUzNDBiOGY4MzdmZGJiOWU3OGZkNzQyZGEwMjQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-02-14T05:05:15Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-02-17T21:19:22Z"}, "message": "Add tests for the removal of the 'static superbound from Send.", "tree": {"sha": "cff0fe83d379d7a219f26bb30259005ba494d814", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cff0fe83d379d7a219f26bb30259005ba494d814"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22c88323f3175340b8f837fdbb9e78fd742da024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22c88323f3175340b8f837fdbb9e78fd742da024", "html_url": "https://github.com/rust-lang/rust/commit/22c88323f3175340b8f837fdbb9e78fd742da024", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22c88323f3175340b8f837fdbb9e78fd742da024/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35ca50bd5676db31a8074a216d1aadad7d434de8", "url": "https://api.github.com/repos/rust-lang/rust/commits/35ca50bd5676db31a8074a216d1aadad7d434de8", "html_url": "https://github.com/rust-lang/rust/commit/35ca50bd5676db31a8074a216d1aadad7d434de8"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "0b74892d66c2bcc6aebc4ab29a0e5ac84573b834", "filename": "src/test/compile-fail/send-is-not-static-ensures-scoping.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/22c88323f3175340b8f837fdbb9e78fd742da024/src%2Ftest%2Fcompile-fail%2Fsend-is-not-static-ensures-scoping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22c88323f3175340b8f837fdbb9e78fd742da024/src%2Ftest%2Fcompile-fail%2Fsend-is-not-static-ensures-scoping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsend-is-not-static-ensures-scoping.rs?ref=22c88323f3175340b8f837fdbb9e78fd742da024", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(core, std_misc)]\n+use std::thread::Thread;\n+\n+fn main() {\n+    let bad = {\n+        let x = 1;\n+        let y = &x;\n+\n+        Thread::scoped(|| { //~ ERROR cannot infer an appropriate lifetime\n+            let _z = y;\n+        })\n+    };\n+\n+    bad.join().ok().unwrap();\n+}"}, {"sha": "c6b64d97fbdd50709b8bb164fe263d5409ce4a3f", "filename": "src/test/run-pass/send-is-not-static-par-for.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/22c88323f3175340b8f837fdbb9e78fd742da024/src%2Ftest%2Frun-pass%2Fsend-is-not-static-par-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22c88323f3175340b8f837fdbb9e78fd742da024/src%2Ftest%2Frun-pass%2Fsend-is-not-static-par-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-is-not-static-par-for.rs?ref=22c88323f3175340b8f837fdbb9e78fd742da024", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(core, std_misc)]\n+use std::thread::Thread;\n+use std::sync::Mutex;\n+\n+fn par_for<I, F>(iter: I, f: F)\n+    where I: Iterator,\n+          <I as Iterator>::Item: Send,\n+          F: Fn(<I as Iterator>::Item) + Sync\n+{\n+    let f = &f;\n+    let _guards: Vec<_> = iter.map(|elem| {\n+        Thread::scoped(move || {\n+            f(elem)\n+        })\n+    }).collect();\n+\n+}\n+\n+fn sum(x: &[i32]) {\n+    let sum_lengths = Mutex::new(0);\n+    par_for(x.windows(4), |x| {\n+        *sum_lengths.lock().unwrap() += x.len()\n+    });\n+\n+    assert_eq!(*sum_lengths.lock().unwrap(), (x.len() - 3) * 4);\n+}\n+\n+fn main() {\n+    let mut elements = [0; 20];\n+\n+    // iterators over references into this stack frame\n+    par_for(elements.iter_mut().enumerate(), |(i, x)| {\n+        *x = i as i32\n+    });\n+\n+    sum(&elements)\n+}"}]}