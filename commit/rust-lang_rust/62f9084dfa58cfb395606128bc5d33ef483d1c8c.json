{"sha": "62f9084dfa58cfb395606128bc5d33ef483d1c8c", "node_id": "C_kwDOAAsO6NoAKDYyZjkwODRkZmE1OGNmYjM5NTYwNjEyOGJjNWQzM2VmNDgzZDFjOGM", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-12-17T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-12-17T18:34:45Z"}, "message": "Remove false edges in CleanupPostBorrowck", "tree": {"sha": "b962b7b9c3d01f3fdca38f911d825a67d399458d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b962b7b9c3d01f3fdca38f911d825a67d399458d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62f9084dfa58cfb395606128bc5d33ef483d1c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62f9084dfa58cfb395606128bc5d33ef483d1c8c", "html_url": "https://github.com/rust-lang/rust/commit/62f9084dfa58cfb395606128bc5d33ef483d1c8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62f9084dfa58cfb395606128bc5d33ef483d1c8c/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c3efc7f1b2dc4a815d3690c6995bed5a8c63ba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3efc7f1b2dc4a815d3690c6995bed5a8c63ba6", "html_url": "https://github.com/rust-lang/rust/commit/4c3efc7f1b2dc4a815d3690c6995bed5a8c63ba6"}], "stats": {"total": 62, "additions": 16, "deletions": 46}, "files": [{"sha": "d435d3ee69b76a94eda4fe73a4ff40d60eb8aa0d", "filename": "compiler/rustc_mir_transform/src/cleanup_post_borrowck.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/62f9084dfa58cfb395606128bc5d33ef483d1c8c/compiler%2Frustc_mir_transform%2Fsrc%2Fcleanup_post_borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f9084dfa58cfb395606128bc5d33ef483d1c8c/compiler%2Frustc_mir_transform%2Fsrc%2Fcleanup_post_borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcleanup_post_borrowck.rs?ref=62f9084dfa58cfb395606128bc5d33ef483d1c8c", "patch": "@@ -1,32 +1,26 @@\n-//! This module provides a pass to replacing the following statements with\n-//! [`Nop`]s\n+//! This module provides a pass that removes parts of MIR that are no longer relevant after\n+//! analysis phase and borrowck. In particular, it removes false edges, user type annotations and\n+//! replaces following statements with [`Nop`]s:\n //!\n //!   - [`AscribeUserType`]\n //!   - [`FakeRead`]\n //!   - [`Assign`] statements with a [`Shallow`] borrow\n //!\n-//! The `CleanFakeReadsAndBorrows` \"pass\" is actually implemented as two\n-//! traversals (aka visits) of the input MIR. The first traversal,\n-//! `DeleteAndRecordFakeReads`, deletes the fake reads and finds the\n-//! temporaries read by [`ForMatchGuard`] reads, and `DeleteFakeBorrows`\n-//! deletes the initialization of those temporaries.\n-//!\n //! [`AscribeUserType`]: rustc_middle::mir::StatementKind::AscribeUserType\n-//! [`Shallow`]: rustc_middle::mir::BorrowKind::Shallow\n-//! [`FakeRead`]: rustc_middle::mir::StatementKind::FakeRead\n //! [`Assign`]: rustc_middle::mir::StatementKind::Assign\n-//! [`ForMatchGuard`]: rustc_middle::mir::FakeReadCause::ForMatchGuard\n+//! [`FakeRead`]: rustc_middle::mir::StatementKind::FakeRead\n //! [`Nop`]: rustc_middle::mir::StatementKind::Nop\n+//! [`Shallow`]: rustc_middle::mir::BorrowKind::Shallow\n \n use crate::MirPass;\n-use rustc_middle::mir::{Body, BorrowKind, Rvalue, StatementKind};\n+use rustc_middle::mir::{Body, BorrowKind, Rvalue, StatementKind, TerminatorKind};\n use rustc_middle::ty::TyCtxt;\n \n pub struct CleanupPostBorrowck;\n \n impl<'tcx> MirPass<'tcx> for CleanupPostBorrowck {\n     fn run_pass(&self, _tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        for basic_block in body.basic_blocks.as_mut_preserves_cfg() {\n+        for basic_block in body.basic_blocks.as_mut() {\n             for statement in basic_block.statements.iter_mut() {\n                 match statement.kind {\n                     StatementKind::AscribeUserType(..)\n@@ -35,6 +29,14 @@ impl<'tcx> MirPass<'tcx> for CleanupPostBorrowck {\n                     _ => (),\n                 }\n             }\n+            let terminator = basic_block.terminator_mut();\n+            match terminator.kind {\n+                TerminatorKind::FalseEdge { real_target, .. }\n+                | TerminatorKind::FalseUnwind { real_target, .. } => {\n+                    terminator.kind = TerminatorKind::Goto { target: real_target };\n+                }\n+                _ => {}\n+            }\n         }\n \n         body.user_type_annotations.raw.clear();"}, {"sha": "aba5a8580f19485b78da4a3b034659ef63b1fefc", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/62f9084dfa58cfb395606128bc5d33ef483d1c8c/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f9084dfa58cfb395606128bc5d33ef483d1c8c/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=62f9084dfa58cfb395606128bc5d33ef483d1c8c", "patch": "@@ -77,8 +77,6 @@ mod match_branches;\n mod multiple_return_terminators;\n mod normalize_array_len;\n mod nrvo;\n-// This pass is public to allow external drivers to perform MIR cleanup\n-pub mod remove_false_edges;\n mod remove_noop_landing_pads;\n mod remove_storage_markers;\n mod remove_uninit_drops;\n@@ -494,10 +492,9 @@ fn run_analysis_to_runtime_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>\n /// After this series of passes, no lifetime analysis based on borrowing can be done.\n fn run_analysis_cleanup_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n     let passes: &[&dyn MirPass<'tcx>] = &[\n-        &remove_false_edges::RemoveFalseEdges,\n+        &cleanup_post_borrowck::CleanupPostBorrowck,\n         &simplify_branches::SimplifyConstCondition::new(\"initial\"),\n         &remove_noop_landing_pads::RemoveNoopLandingPads,\n-        &cleanup_post_borrowck::CleanupPostBorrowck,\n         &simplify::SimplifyCfg::new(\"early-opt\"),\n         &deref_separator::Derefer,\n     ];"}, {"sha": "71f5ccf7e2465330252f0f48a69ee033f109c86e", "filename": "compiler/rustc_mir_transform/src/remove_false_edges.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4c3efc7f1b2dc4a815d3690c6995bed5a8c63ba6/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3efc7f1b2dc4a815d3690c6995bed5a8c63ba6/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs?ref=4c3efc7f1b2dc4a815d3690c6995bed5a8c63ba6", "patch": "@@ -1,29 +0,0 @@\n-use rustc_middle::mir::{Body, TerminatorKind};\n-use rustc_middle::ty::TyCtxt;\n-\n-use crate::MirPass;\n-\n-/// Removes `FalseEdge` and `FalseUnwind` terminators from the MIR.\n-///\n-/// These are only needed for borrow checking, and can be removed afterwards.\n-///\n-/// FIXME: This should probably have its own MIR phase.\n-pub struct RemoveFalseEdges;\n-\n-impl<'tcx> MirPass<'tcx> for RemoveFalseEdges {\n-    fn run_pass(&self, _: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        for block in body.basic_blocks_mut() {\n-            let terminator = block.terminator_mut();\n-            terminator.kind = match terminator.kind {\n-                TerminatorKind::FalseEdge { real_target, .. } => {\n-                    TerminatorKind::Goto { target: real_target }\n-                }\n-                TerminatorKind::FalseUnwind { real_target, .. } => {\n-                    TerminatorKind::Goto { target: real_target }\n-                }\n-\n-                _ => continue,\n-            }\n-        }\n-    }\n-}"}]}