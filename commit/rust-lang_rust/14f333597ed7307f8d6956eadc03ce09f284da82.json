{"sha": "14f333597ed7307f8d6956eadc03ce09f284da82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZjMzMzU5N2VkNzMwN2Y4ZDY5NTZlYWRjMDNjZTA5ZjI4NGRhODI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-28T23:46:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-28T23:46:14Z"}, "message": "Rollup merge of #86671 - m-ou-se:non-fmt-panic-future-incompatible, r=nikomatsakis\n\nTurn non_fmt_panic into a future_incompatible edition lint.\n\nThis turns the `non_fmt_panic` lint into a future_incompatible edition lint, so it becomes part of the `rust_2021_compatibility` group. See https://github.com/rust-lang/rust/issues/85894.\n\nThis lint produces both warnings about semantical changes (e.g. `panic!(\"{{\")`) and things that will become hard errors (e.g. `panic!(\"{\")`). So I added a `explain_reason: false` that supresses the default \"this will become a hard error\" or \"the semantics will change\" message, and instead added a note depending on the situation. (cc `@rylev)`\n\nr? `@nikomatsakis`", "tree": {"sha": "0013df49c95419114de2e9c2c789bdf778d90ff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0013df49c95419114de2e9c2c789bdf778d90ff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f333597ed7307f8d6956eadc03ce09f284da82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg2l9GCRBK7hj4Ov3rIwAAfRcIAChPvSNf3dtXfaFRr6RjUxeB\nF5tfhFfTPBH9PsC9smJi3NIbP3GVqC6Mpi3Sa5aaa84MY94s5w1B2f9fj4rRdafJ\nJWfMTVAFw2V4rSSqYVoWO+6QXJiEGyuupAUCUp/ohO8YjDqkIzXOwGkWkHiEhjCZ\nnruwqLalDwVjVet2a4t38ub+QKbryHIgcB4CLPdU5AMemmt7VocHpeBQLr/UPoMF\nrnzvFr022acJZ+0OumFxN8RtKEkh42zL9ZQ6Fi3qCDXf05Q0OVpFqE3IyRk58fdr\niabfhO4+bx535r/tT/R+2JwFcMAOomaROEcFWi7FoTYEd0AsjImpmq5AQ0YgXzE=\n=bJvg\n-----END PGP SIGNATURE-----\n", "payload": "tree 0013df49c95419114de2e9c2c789bdf778d90ff6\nparent 22f2332b353c9522b31d004887dd6500aae55901\nparent 934e6058eb5b051eac862d611cbc73e58a09e6dd\nauthor Yuki Okushi <jtitor@2k36.org> 1624923974 +0900\ncommitter GitHub <noreply@github.com> 1624923974 +0900\n\nRollup merge of #86671 - m-ou-se:non-fmt-panic-future-incompatible, r=nikomatsakis\n\nTurn non_fmt_panic into a future_incompatible edition lint.\n\nThis turns the `non_fmt_panic` lint into a future_incompatible edition lint, so it becomes part of the `rust_2021_compatibility` group. See https://github.com/rust-lang/rust/issues/85894.\n\nThis lint produces both warnings about semantical changes (e.g. `panic!(\"{{\")`) and things that will become hard errors (e.g. `panic!(\"{\")`). So I added a `explain_reason: false` that supresses the default \"this will become a hard error\" or \"the semantics will change\" message, and instead added a note depending on the situation. (cc `@rylev)`\n\nr? `@nikomatsakis`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f333597ed7307f8d6956eadc03ce09f284da82", "html_url": "https://github.com/rust-lang/rust/commit/14f333597ed7307f8d6956eadc03ce09f284da82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f333597ed7307f8d6956eadc03ce09f284da82/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f2332b353c9522b31d004887dd6500aae55901", "url": "https://api.github.com/repos/rust-lang/rust/commits/22f2332b353c9522b31d004887dd6500aae55901", "html_url": "https://github.com/rust-lang/rust/commit/22f2332b353c9522b31d004887dd6500aae55901"}, {"sha": "934e6058eb5b051eac862d611cbc73e58a09e6dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/934e6058eb5b051eac862d611cbc73e58a09e6dd", "html_url": "https://github.com/rust-lang/rust/commit/934e6058eb5b051eac862d611cbc73e58a09e6dd"}], "stats": {"total": 62, "additions": 46, "deletions": 16}, "files": [{"sha": "3ea5a3bcc3b98a3b721472e2aa4040b9c8b9d68c", "filename": "compiler/rustc_lint/src/non_fmt_panic.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14f333597ed7307f8d6956eadc03ce09f284da82/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f333597ed7307f8d6956eadc03ce09f284da82/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs?ref=14f333597ed7307f8d6956eadc03ce09f284da82", "patch": "@@ -4,6 +4,8 @@ use rustc_errors::{pluralize, Applicability};\n use rustc_hir as hir;\n use rustc_middle::ty;\n use rustc_parse_format::{ParseMode, Parser, Piece};\n+use rustc_session::lint::FutureIncompatibilityReason;\n+use rustc_span::edition::Edition;\n use rustc_span::{hygiene, sym, symbol::kw, symbol::SymbolStr, InnerSpan, Span, Symbol};\n \n declare_lint! {\n@@ -30,6 +32,10 @@ declare_lint! {\n     NON_FMT_PANIC,\n     Warn,\n     \"detect single-argument panic!() invocations in which the argument is not a format string\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reason: FutureIncompatibilityReason::EditionSemanticsChange(Edition::Edition2021),\n+        explain_reason: false,\n+    };\n     report_in_external_macro\n }\n \n@@ -87,7 +93,8 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n \n     cx.struct_span_lint(NON_FMT_PANIC, arg_span, |lint| {\n         let mut l = lint.build(\"panic message is not a string literal\");\n-        l.note(\"this is no longer accepted in Rust 2021\");\n+        l.note(\"this usage of panic!() is deprecated; it will be a hard error in Rust 2021\");\n+        l.note(\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\");\n         if !span.contains(arg_span) {\n             // No clue where this argument is coming from.\n             l.emit();"}, {"sha": "202297152de584312c5b5bb7d0ad9349d652630f", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14f333597ed7307f8d6956eadc03ce09f284da82/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f333597ed7307f8d6956eadc03ce09f284da82/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=14f333597ed7307f8d6956eadc03ce09f284da82", "patch": "@@ -145,6 +145,11 @@ pub struct FutureIncompatibleInfo {\n     /// The reason for the lint used by diagnostics to provide\n     /// the right help message\n     pub reason: FutureIncompatibilityReason,\n+    /// Whether to explain the reason to the user.\n+    ///\n+    /// Set to false for lints that already include a more detailed\n+    /// explanation.\n+    pub explain_reason: bool,\n     /// Information about a future breakage, which will\n     /// be emitted in JSON messages to be displayed by Cargo\n     /// for upstream deps\n@@ -185,6 +190,7 @@ impl FutureIncompatibleInfo {\n         FutureIncompatibleInfo {\n             reference: \"\",\n             reason: FutureIncompatibilityReason::FutureReleaseError,\n+            explain_reason: true,\n             future_breakage: None,\n         }\n     }"}, {"sha": "8d0fdf9128a51d70c315e84e0084497ef3291422", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/14f333597ed7307f8d6956eadc03ce09f284da82/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f333597ed7307f8d6956eadc03ce09f284da82/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=14f333597ed7307f8d6956eadc03ce09f284da82", "patch": "@@ -398,9 +398,14 @@ pub fn struct_lint_level<'s, 'd>(\n                  it will become a hard error in a future release!\"\n                     .to_owned()\n             };\n-            let citation = format!(\"for more information, see {}\", future_incompatible.reference);\n-            err.warn(&explanation);\n-            err.note(&citation);\n+            if future_incompatible.explain_reason {\n+                err.warn(&explanation);\n+            }\n+            if !future_incompatible.reference.is_empty() {\n+                let citation =\n+                    format!(\"for more information, see {}\", future_incompatible.reference);\n+                err.note(&citation);\n+            }\n         }\n \n         // Finally, run `decorate`. This function is also responsible for emitting the diagnostic."}, {"sha": "0f451c1e0a9a3827d8ede3e1edee6dd1e8502d0b", "filename": "src/test/ui/non-fmt-panic.stderr", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/14f333597ed7307f8d6956eadc03ce09f284da82/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14f333597ed7307f8d6956eadc03ce09f284da82/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr?ref=14f333597ed7307f8d6956eadc03ce09f284da82", "patch": "@@ -61,7 +61,8 @@ warning: panic message is not a string literal\n LL |     assert!(false, S);\n    |                    ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     assert!(false, \"{}\", S);\n@@ -85,7 +86,8 @@ warning: panic message is not a string literal\n LL |     panic!(C);\n    |            ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", C);\n@@ -101,7 +103,8 @@ warning: panic message is not a string literal\n LL |     panic!(S);\n    |            ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", S);\n@@ -117,7 +120,8 @@ warning: panic message is not a string literal\n LL |     std::panic!(123);\n    |                 ^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     std::panic!(\"{}\", 123);\n@@ -133,7 +137,8 @@ warning: panic message is not a string literal\n LL |     core::panic!(&*\"abc\");\n    |                  ^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     core::panic!(\"{}\", &*\"abc\");\n@@ -181,15 +186,17 @@ warning: panic message is not a string literal\n LL |     fancy_panic::fancy_panic!(S);\n    |                               ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n \n warning: panic message is not a string literal\n   --> $DIR/non-fmt-panic.rs:36:12\n    |\n LL |     panic!(a!());\n    |            ^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", a!());\n@@ -205,7 +212,8 @@ warning: panic message is not a string literal\n LL |     panic!(format!(\"{}\", 1));\n    |            ^^^^^^^^^^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n    = note: the panic!() macro supports formatting, so there's no need for the format!() macro here\n help: remove the `format!(..)` macro call\n    |\n@@ -218,7 +226,8 @@ warning: panic message is not a string literal\n LL |     assert!(false, format!(\"{}\", 1));\n    |                    ^^^^^^^^^^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n    = note: the assert!() macro supports formatting, so there's no need for the format!() macro here\n help: remove the `format!(..)` macro call\n    |\n@@ -231,7 +240,8 @@ warning: panic message is not a string literal\n LL |     debug_assert!(false, format!(\"{}\", 1));\n    |                          ^^^^^^^^^^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n    = note: the debug_assert!() macro supports formatting, so there's no need for the format!() macro here\n help: remove the `format!(..)` macro call\n    |\n@@ -244,7 +254,8 @@ warning: panic message is not a string literal\n LL |     panic![123];\n    |            ^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic![\"{}\", 123];\n@@ -260,7 +271,8 @@ warning: panic message is not a string literal\n LL |     panic!{123};\n    |            ^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!{\"{}\", 123};"}]}