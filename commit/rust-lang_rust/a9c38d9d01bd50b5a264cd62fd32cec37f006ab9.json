{"sha": "a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YzM4ZDlkMDFiZDUwYjVhMjY0Y2Q2MmZkMzJjZWMzN2YwMDZhYjk=", "commit": {"author": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-09-18T20:14:33Z"}, "committer": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-09-18T20:14:33Z"}, "message": "Add more tests", "tree": {"sha": "97199225dd4af826491475fb0e057661c4a5a97e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97199225dd4af826491475fb0e057661c4a5a97e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEt/EOFp+yWvA8Dk28qHvO5SBc5IkFAl2CkC0ACgkQqHvO5SBc\n5Ik+ZggAkbeow2mW8N+mC2125lSGVruY+eg8+BHrhlrxsIESHN/I+Xb9wGIa/7h4\neM5Jr3FjfEr9yq4qGrKx40itglaaMp5nDiBfnAlPWXzfiUELakBJTCfyY+DMJE4Q\ncjBY6pzHWkkgaIRHeQY13vlI7yqY+mem8/fcEa5xwtnr7+gsBsyTko/ZnvtW1lyS\npofWOowXIcu9ljtAKZ8WGVYJFR2q2AOQlUEIqHKck/vokyizaUP1v4S0vtq/Bqw5\nKNwxICaFT8Br92BGIJJM2VtiE+YIwpIfp75P4LExf2SBeoYQYjI07uQ+HT0HRTu/\nuCPCWhFCngbR12fUNtkmQzrBmT7RVw==\n=rNVR\n-----END PGP SIGNATURE-----", "payload": "tree 97199225dd4af826491475fb0e057661c4a5a97e\nparent 3f004a1bc44859857f05a9f692a578124b3f3e01\nauthor Georg Semmler <georg_semmler_05@web.de> 1568837673 +0200\ncommitter Georg Semmler <georg_semmler_05@web.de> 1568837673 +0200\n\nAdd more tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "html_url": "https://github.com/rust-lang/rust/commit/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/comments", "author": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f004a1bc44859857f05a9f692a578124b3f3e01", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f004a1bc44859857f05a9f692a578124b3f3e01", "html_url": "https://github.com/rust-lang/rust/commit/3f004a1bc44859857f05a9f692a578124b3f3e01"}], "stats": {"total": 439, "additions": 439, "deletions": 0}, "files": [{"sha": "57738c64e37797a792a3bbb5096ba4f5128fbb29", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<u32> for f64 {\n+    //~^ ERROR only traits defined in the current crate can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "04e96f29230fb6ea5948277182bc99e7ffa96b8d", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,12 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[foreign]-for-foreign.rs:12:1\n+   |\n+LL | impl Remote1<u32> for f64 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "33e85c164763e806a65a32f00a36d57d9a69b29b", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-local.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-local.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<u32> for Local {\n+}\n+\n+fn main() {}"}, {"sha": "66a4d9d27346945960477fdf5a7127603887ec1d", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-fundamental[t].rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<u32> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, T> Remote1<u32> for &'a T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "2467097b1a8b3f7ac80cae005bf8191638403025", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-fundamental[t].stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<T> Remote1<u32> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:16:1\n+   |\n+LL | impl<'a, T> Remote1<u32> for &'a T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "0a67ebcbba44c0f55b31c9c13f9855747d9e026e", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-t.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<u32> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "5c28406f113fca56595ba0b55b6735383fbb3232", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-t.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[foreign]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<u32> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "24e0f309c45554d69a53c7ce2c427fc0a3cb772f", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t],local]-for-foreign.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%2Clocal%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%2Clocal%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%2Clocal%5D-for-foreign.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote2<Box<T>, Local> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, T> Remote2<&'a T, Local> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "da670bcfc3fc9974f58fd3e02ee06f41046f8e01", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t],local]-for-foreign.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%2Clocal%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%2Clocal%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%2Clocal%5D-for-foreign.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t],local]-for-foreign.rs:12:1\n+   |\n+LL | impl<T> Remote2<Box<T>, Local> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t],local]-for-foreign.rs:16:1\n+   |\n+LL | impl<'a, T> Remote2<&'a T, Local> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "71598dae96ab3950951ec76b93d4023fe61ad4f2", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-foreign.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Box<T>> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, T> Remote1<&'a T> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "dd9702650795eff3f7f90abd908c214849c2344c", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-foreign.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:12:1\n+   |\n+LL | impl<T> Remote1<Box<T>> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:16:1\n+   |\n+LL | impl<'a, T> Remote1<&'a T> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "7bf0306f29ba494d1964477a7fa6a7abe623ff7f", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<'a, T> Remote1<Box<T>> for &'a T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+impl<'a, T> Remote1<&'a T> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "eec57fccea762172a8e561c689380167d67ed397", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-fundamental[t].stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<'a, T> Remote1<Box<T>> for &'a T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:15:1\n+   |\n+LL | impl<'a, T> Remote1<&'a T> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "54d577c749248bf9a39a135b35c9ce38850d6d0a", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-local.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-local.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Box<T>> for Local {}\n+\n+impl<'a, T> Remote1<&'a T> for Local {}\n+\n+fn main() {}"}, {"sha": "7af929006ef7f94bd426581b13ea8b9b0aaa266e", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-t.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Box<T>> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+impl<'a, T> Remote1<&'a T> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "e017c3ffe6c0568be24f4a7899b6248eb0de48f4", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-t.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<Box<T>> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:15:1\n+   |\n+LL | impl<'a, T> Remote1<&'a T> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "be0875d0110fd1eafef01d3150a9a65ad80fccef", "filename": "src/test/ui/coherence/impl[t]-foreign[local, fundamental[t]]-for-foreign.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%2C%20fundamental%5Bt%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%2C%20fundamental%5Bt%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%2C%20fundamental%5Bt%5D%5D-for-foreign.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local2<T>(Rc<T>);\n+\n+impl<T> Remote2<Local, Box<T>> for u32 {}\n+impl<'a, T> Remote2<Local, &'a T> for u32 {}\n+impl<T> Remote2<Local2<T>, Box<T>> for u32 {}\n+impl<'a, T> Remote2<Local2<T>, &'a T> for u32 {}\n+\n+fn main() {}"}, {"sha": "81cf3c3f6eca9105d68afe7b36084298f71353d2", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-foreign.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Local> for Rc<T> {}\n+impl<T> Remote1<Local> for Vec<Box<T>> {}\n+\n+fn main() {}"}, {"sha": "6b1d93cd9444278bdc8ac7601639acd30f1d8a03", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-local.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-local.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,15 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<Local> for Local {}\n+\n+fn main() {}"}, {"sha": "5e89c2077330ada21dcadc71d032617ab46aa6ea", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-foreign.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "5544729b5d640150c2ff2a6fddd5667c69204e5a", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-foreign.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[t]-for-foreign.rs:12:1\n+   |\n+LL | impl<T> Remote1<T> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "300a2c4d48a9cf242be5984a4b96ca0bb07aa3ef", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-fundamental.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, A, B> Remote1<A> for &'a B {\n+    //~^ ERROR type parameter `B` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "be8cc29a6e5b04e0624c8d9f7c6a3380c7b67407", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-fundamental.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:12:1\n+   |\n+LL | impl<T> Remote1<T> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `B` must be used as the type parameter for some local type (e.g., `MyStruct<B>`)\n+  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:16:1\n+   |\n+LL | impl<'a, A, B> Remote1<A> for &'a B {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `B` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "769147ea7eabd7a43624fbbd899692b0600f1831", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-local.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-local.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,15 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for Local {}\n+\n+fn main() {}"}, {"sha": "c8513380ff73e2e4e302dd14f2ab99920d81a07c", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-t.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.rs?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "de857afd20b1592e81f9e6f302b5a8bfb22804a1", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-t.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9c38d9d01bd50b5a264cd62fd32cec37f006ab9/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr?ref=a9c38d9d01bd50b5a264cd62fd32cec37f006ab9", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[t]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<T> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}]}