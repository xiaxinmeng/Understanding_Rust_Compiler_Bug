{"sha": "a585dc8289120aa4ee232c1f8317a21eb5ae2c1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ODVkYzgyODkxMjBhYTRlZTIzMmMxZjgzMTdhMjFlYjVhZTJjMWE=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-16T20:39:21Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Add a missing newline.", "tree": {"sha": "398f5bd81da81ad6f4652c0a4123e5ff8a60add9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/398f5bd81da81ad6f4652c0a4123e5ff8a60add9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a585dc8289120aa4ee232c1f8317a21eb5ae2c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a585dc8289120aa4ee232c1f8317a21eb5ae2c1a", "html_url": "https://github.com/rust-lang/rust/commit/a585dc8289120aa4ee232c1f8317a21eb5ae2c1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a585dc8289120aa4ee232c1f8317a21eb5ae2c1a/comments", "author": null, "committer": null, "parents": [{"sha": "688cacbdd73427ec5bd86300cc75a07fa89ec310", "url": "https://api.github.com/repos/rust-lang/rust/commits/688cacbdd73427ec5bd86300cc75a07fa89ec310", "html_url": "https://github.com/rust-lang/rust/commit/688cacbdd73427ec5bd86300cc75a07fa89ec310"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "72584b7265577c89043ec3638ca4421db855b3a7", "filename": "src/threads.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a585dc8289120aa4ee232c1f8317a21eb5ae2c1a/src%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a585dc8289120aa4ee232c1f8317a21eb5ae2c1a/src%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthreads.rs?ref=a585dc8289120aa4ee232c1f8317a21eb5ae2c1a", "patch": "@@ -331,6 +331,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n         Ok(())\n     }\n+\n     /// Get a thread-specific allocation id for the given thread-local static.\n     /// If needed, allocate a new one.\n     ///"}]}