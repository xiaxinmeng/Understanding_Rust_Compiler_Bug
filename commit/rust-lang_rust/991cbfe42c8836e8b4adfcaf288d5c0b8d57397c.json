{"sha": "991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MWNiZmU0MmM4ODM2ZThiNGFkZmNhZjI4OGQ1YzBiOGQ1NzM5N2M=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-24T21:14:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-24T21:14:03Z"}, "message": "Revert \"rt: Call the Rust box annihilator; stop calling the cycle collector\" due to crashes\n\nThis reverts commit bb0ad11252c493ca8de85025411c3f068f529039.", "tree": {"sha": "3bc5d52fd888c010ea797f6570c92abe861c183a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bc5d52fd888c010ea797f6570c92abe861c183a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "html_url": "https://github.com/rust-lang/rust/commit/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0ad11252c493ca8de85025411c3f068f529039", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb0ad11252c493ca8de85025411c3f068f529039", "html_url": "https://github.com/rust-lang/rust/commit/bb0ad11252c493ca8de85025411c3f068f529039"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "705a96303d4eefda1f35c57bce5051dbd0577261", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "patch": "@@ -72,8 +72,6 @@ command_line_args : public kernel_owned<command_line_args>\n // FIXME (#2670): This belongs somewhere else\n int check_claims = 0;\n \n-void* global_crate_map = NULL;\n-\n /**\n    The runtime entrypoint. The (C ABI) main function generated by rustc calls\n    `rust_start`, providing the address of the Rust ABI main function, the\n@@ -88,8 +86,6 @@ rust_start(uintptr_t main_fn, int argc, char **argv, void* crate_map) {\n     // line as well.\n     rust_env *env = load_env();\n \n-    global_crate_map = crate_map;\n-\n     update_gc_metadata(crate_map);\n \n     update_log_settings(crate_map, env->logspec);"}, {"sha": "2d69edebd0e75815e1564760c5123460bed5cb21", "filename": "src/rt/rust_globals.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/src%2Frt%2Frust_globals.h", "raw_url": "https://github.com/rust-lang/rust/raw/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/src%2Frt%2Frust_globals.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_globals.h?ref=991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "patch": "@@ -101,6 +101,4 @@ static size_t const BUF_BYTES = 2048;\n // (writing), a port (reading) or a task (waiting).\n struct rust_cond { };\n \n-extern void* global_crate_map;\n-\n #endif /* RUST_GLOBALS_H */"}, {"sha": "1efd641b34327b0912b9fb3818eaefe7ace217e7", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/991cbfe42c8836e8b4adfcaf288d5c0b8d57397c/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=991cbfe42c8836e8b4adfcaf288d5c0b8d57397c", "patch": "@@ -9,8 +9,6 @@\n #include \"rust_cc.h\"\n #include \"rust_env.h\"\n #include \"rust_port.h\"\n-#include \"rust_globals.h\"\n-#include \"rust_crate_map.h\"\n \n // Tasks\n rust_task::rust_task(rust_sched_loop *sched_loop, rust_task_state state,\n@@ -127,9 +125,18 @@ cleanup_task(cleanup_args *args) {\n         main_task_failed_without_spawning = true;\n     }\n \n-    // Call the box annihilator.\n-    cratemap* map = reinterpret_cast<cratemap*>(global_crate_map);\n-    task->call_on_rust_stack(NULL, const_cast<void*>(map->annihilate_fn()));\n+    // FIXME (#2676): For performance we should do the annihilator\n+    // instead of the cycle collector even under normal termination, but\n+    // since that would hide memory management errors (like not derefing\n+    // boxes), it needs to be disableable in debug builds.\n+    if (threw_exception) {\n+        // FIXME (#2676): When the annihilator is more powerful and\n+        // successfully runs resource destructors, etc. we can get rid\n+        // of this cc\n+        cc::do_cc(task);\n+        annihilate_boxes(task);\n+    }\n+    cc::do_final_cc(task);\n \n     task->die();\n "}]}