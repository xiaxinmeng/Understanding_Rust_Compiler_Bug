{"sha": "0a480181e85eccf034f63d6653950869bd1be60f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNDgwMTgxZTg1ZWNjZjAzNGY2M2Q2NjUzOTUwODY5YmQxYmU2MGY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-04-06T00:41:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-06T00:41:13Z"}, "message": "Merge pull request #2600 from i1skn/error_on_unformatted\n\nFix error_on_unformatted and skip_children override", "tree": {"sha": "c301aada2463dc235f6d216300e619cacba12b6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c301aada2463dc235f6d216300e619cacba12b6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a480181e85eccf034f63d6653950869bd1be60f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaxsIpCRBK7hj4Ov3rIwAAdHIIAEsEjWW4yE4573rnYc6XaR/7\ni4HePg2SUVCbwRBirkJVAZI9lSvwjHf4nkmoXY27dgGlqwHmjeAvqVNaP5H5SP96\neNg70XpAERnbkyCCaK2MX8o39iyXWQFxD2SvEzEMeOpdKZ/IScEcmFc6ab4VK1xA\nC4LaSyOkrM4B9E4diHejIplzdEt2biKE86Yq9bpzj5C+F+9PqfLW20cX7V9PJBf+\n2xx7tTij+Yw4HtMWWSTJjTZtTRLLHZZSp9u8cMXtNKgyKZLGjc0lZ4Yeu//aLO4y\nBgIVV9JoZEVAo5D5eaUFiKjebHfBdeR6KyIyjWR+5MxaA3EH5zaLApn/FSdgXGI=\n=EYr1\n-----END PGP SIGNATURE-----\n", "payload": "tree c301aada2463dc235f6d216300e619cacba12b6d\nparent 4b2160e1b26cdff9f90961bfbd122c5883f63db4\nparent 3fe2233fd3281f80bf3109b4aebb2323fdf58649\nauthor Nick Cameron <nrc@ncameron.org> 1522975273 +1200\ncommitter GitHub <noreply@github.com> 1522975273 +1200\n\nMerge pull request #2600 from i1skn/error_on_unformatted\n\nFix error_on_unformatted and skip_children override"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a480181e85eccf034f63d6653950869bd1be60f", "html_url": "https://github.com/rust-lang/rust/commit/0a480181e85eccf034f63d6653950869bd1be60f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a480181e85eccf034f63d6653950869bd1be60f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b2160e1b26cdff9f90961bfbd122c5883f63db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b2160e1b26cdff9f90961bfbd122c5883f63db4", "html_url": "https://github.com/rust-lang/rust/commit/4b2160e1b26cdff9f90961bfbd122c5883f63db4"}, {"sha": "3fe2233fd3281f80bf3109b4aebb2323fdf58649", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe2233fd3281f80bf3109b4aebb2323fdf58649", "html_url": "https://github.com/rust-lang/rust/commit/3fe2233fd3281f80bf3109b4aebb2323fdf58649"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "3ad2d3088f0fa650a6b98310155001c5537c71d4", "filename": "src/bin/main.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0a480181e85eccf034f63d6653950869bd1be60f/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a480181e85eccf034f63d6653950869bd1be60f/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=0a480181e85eccf034f63d6653950869bd1be60f", "patch": "@@ -57,19 +57,18 @@ enum Operation {\n /// Parsed command line options.\n #[derive(Clone, Debug, Default)]\n struct CliOptions {\n-    skip_children: bool,\n+    skip_children: Option<bool>,\n     verbose: bool,\n     write_mode: Option<WriteMode>,\n     color: Option<Color>,\n     file_lines: FileLines, // Default is all lines in all files.\n     unstable_features: bool,\n-    error_on_unformatted: bool,\n+    error_on_unformatted: Option<bool>,\n }\n \n impl CliOptions {\n     fn from_matches(matches: &Matches) -> FmtResult<CliOptions> {\n         let mut options = CliOptions::default();\n-        options.skip_children = matches.opt_present(\"skip-children\");\n         options.verbose = matches.opt_present(\"verbose\");\n         let unstable_features = matches.opt_present(\"unstable-features\");\n         let rust_nightly = option_env!(\"CFG_RELEASE_CHANNEL\")\n@@ -105,19 +104,26 @@ impl CliOptions {\n             options.file_lines = file_lines.parse()?;\n         }\n \n+        if matches.opt_present(\"skip-children\") {\n+            options.skip_children = Some(true);\n+        }\n         if matches.opt_present(\"error-on-unformatted\") {\n-            options.error_on_unformatted = true;\n+            options.error_on_unformatted = Some(true);\n         }\n \n         Ok(options)\n     }\n \n     fn apply_to(self, config: &mut Config) {\n-        config.set().skip_children(self.skip_children);\n         config.set().verbose(self.verbose);\n         config.set().file_lines(self.file_lines);\n         config.set().unstable_features(self.unstable_features);\n-        config.set().error_on_unformatted(self.error_on_unformatted);\n+        if let Some(skip_children) = self.skip_children {\n+            config.set().skip_children(skip_children);\n+        }\n+        if let Some(error_on_unformatted) = self.error_on_unformatted {\n+            config.set().error_on_unformatted(error_on_unformatted);\n+        }\n         if let Some(write_mode) = self.write_mode {\n             config.set().write_mode(write_mode);\n         }"}]}