{"sha": "0509be1f6bc48da753d7383275d3c39591f3650c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MDliZTFmNmJjNDhkYTc1M2Q3MzgzMjc1ZDNjMzk1OTFmMzY1MGM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-07-25T22:37:12Z"}, "committer": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-29T08:29:59Z"}, "message": "Update parsing llvm-config output\n\nNow it prints full paths on MSVC, but we're only interested in path names", "tree": {"sha": "e842e8368d4b2f3763560bdac94b7746940d508f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e842e8368d4b2f3763560bdac94b7746940d508f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0509be1f6bc48da753d7383275d3c39591f3650c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0509be1f6bc48da753d7383275d3c39591f3650c", "html_url": "https://github.com/rust-lang/rust/commit/0509be1f6bc48da753d7383275d3c39591f3650c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0509be1f6bc48da753d7383275d3c39591f3650c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75bcda4cf1c2d16bda20d1efb0c87b227d973180", "url": "https://api.github.com/repos/rust-lang/rust/commits/75bcda4cf1c2d16bda20d1efb0c87b227d973180", "html_url": "https://github.com/rust-lang/rust/commit/75bcda4cf1c2d16bda20d1efb0c87b227d973180"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "24b007576aa24ad673a6687d246400f0dd16b459", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0509be1f6bc48da753d7383275d3c39591f3650c/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/0509be1f6bc48da753d7383275d3c39591f3650c/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=0509be1f6bc48da753d7383275d3c39591f3650c", "patch": "@@ -77,6 +77,13 @@ def runErr(args):\n         lib = lib.strip()[2:]\n     elif lib[0] == '-':\n         lib = lib.strip()[1:]\n+    # If this actually points at a literal file then we're on MSVC which now\n+    # prints full paths, so get just the name of the library and strip off the\n+    # trailing \".lib\"\n+    elif os.path.exists(lib):\n+        lib = os.path.basename(lib)[:-4]\n+    elif lib[-4:] == '.lib':\n+        lib = lib[:-4]\n     f.write(\"#[link(name = \\\"\" + lib + \"\\\"\")\n     if not llvm_shared and 'LLVM' in lib:\n         f.write(\", kind = \\\"static\\\"\")"}, {"sha": "085ea240a5055d3b92b99a721e19e01a24d96d4f", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0509be1f6bc48da753d7383275d3c39591f3650c/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0509be1f6bc48da753d7383275d3c39591f3650c/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=0509be1f6bc48da753d7383275d3c39591f3650c", "patch": "@@ -13,7 +13,7 @@ extern crate build_helper;\n \n use std::process::Command;\n use std::env;\n-use std::path::PathBuf;\n+use std::path::{PathBuf, Path};\n \n use build_helper::output;\n \n@@ -135,8 +135,17 @@ fn main() {\n             &lib[2..]\n         } else if lib.starts_with(\"-\") {\n             &lib[1..]\n+        } else if Path::new(lib).exists() {\n+            // On MSVC llvm-config will print the full name to libraries, but\n+            // we're only interested in the name part\n+            let name = Path::new(lib).file_name().unwrap().to_str().unwrap();\n+            name.trim_right_matches(\".lib\")\n+        } else if lib.ends_with(\".lib\") {\n+            // Some MSVC libraries just come up with `.lib` tacked on, so chop\n+            // that off\n+            lib.trim_right_matches(\".lib\")\n         } else {\n-            continue;\n+            continue\n         };\n \n         // Don't need or want this library, but LLVM's CMake build system\n@@ -145,7 +154,7 @@ fn main() {\n         // library and it otherwise may just pull in extra dependencies on\n         // libedit which we don't want\n         if name == \"LLVMLineEditor\" {\n-            continue;\n+            continue\n         }\n \n         let kind = if name.starts_with(\"LLVM\") {\n@@ -165,7 +174,9 @@ fn main() {\n     let mut cmd = Command::new(&llvm_config);\n     cmd.arg(\"--ldflags\");\n     for lib in output(&mut cmd).split_whitespace() {\n-        if is_crossed {\n+        if lib.starts_with(\"-LIBPATH:\") {\n+                println!(\"cargo:rustc-link-search=native={}\", &lib[9..]);\n+        } else if is_crossed {\n             if lib.starts_with(\"-L\") {\n                 println!(\"cargo:rustc-link-search=native={}\",\n                          lib[2..].replace(&host, &target));"}]}