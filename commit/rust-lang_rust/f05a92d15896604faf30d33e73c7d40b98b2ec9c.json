{"sha": "f05a92d15896604faf30d33e73c7d40b98b2ec9c", "node_id": "C_kwDOAAsO6NoAKGYwNWE5MmQxNTg5NjYwNGZhZjMwZDMzZTczYzdkNDBiOThiMmVjOWM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-27T14:52:56Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-28T18:38:22Z"}, "message": "Remove some comments, inline interner fn", "tree": {"sha": "26f4dba16c3b38c5b8aa1e5144dcdbcfb13f9ea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26f4dba16c3b38c5b8aa1e5144dcdbcfb13f9ea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f05a92d15896604faf30d33e73c7d40b98b2ec9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f05a92d15896604faf30d33e73c7d40b98b2ec9c", "html_url": "https://github.com/rust-lang/rust/commit/f05a92d15896604faf30d33e73c7d40b98b2ec9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f05a92d15896604faf30d33e73c7d40b98b2ec9c/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34e05812e029206add91fa39df86765fcb3f8b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/34e05812e029206add91fa39df86765fcb3f8b5a", "html_url": "https://github.com/rust-lang/rust/commit/34e05812e029206add91fa39df86765fcb3f8b5a"}], "stats": {"total": 43, "additions": 4, "deletions": 39}, "files": [{"sha": "d9f21fa9bb9ad8b4922166f36f5498befb8642c8", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=f05a92d15896604faf30d33e73c7d40b98b2ec9c", "patch": "@@ -382,6 +382,7 @@ impl<'a, 'tcx> TyDecoder for DecodeContext<'a, 'tcx> {\n \n     type I = TyInterner<'tcx>;\n \n+    #[inline]\n     fn interner(&self) -> Self::I {\n         TyInterner { tcx: self.tcx() }\n     }"}, {"sha": "c1c7e1389cb53dde4cf119d6a24e8949ac9426a6", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=f05a92d15896604faf30d33e73c7d40b98b2ec9c", "patch": "@@ -94,43 +94,6 @@ pub struct TyInterner<'tcx> {\n     pub tcx: TyCtxt<'tcx>,\n }\n \n-/*\n-/// We don't ever actually need this. It's only required for derives.\n-impl<'tcx> Hash for TyInterner<'tcx> {\n-    fn hash<H: Hasher>(&self, _state: &mut H) {}\n-}\n-\n-/// We don't ever actually need this. It's only required for derives.\n-impl<'tcx> Ord for TyInterner<'tcx> {\n-    fn cmp(&self, _other: &Self) -> Ordering {\n-        Ordering::Equal\n-    }\n-}\n-\n-/// We don't ever actually need this. It's only required for derives.\n-impl<'tcx> PartialOrd for TyInterner<'tcx> {\n-    fn partial_cmp(&self, _other: &Self) -> Option<Ordering> {\n-        None\n-    }\n-}\n-\n-/// We don't ever actually need this. It's only required for derives.\n-impl<'tcx> PartialEq for TyInterner<'tcx> {\n-    fn eq(&self, _other: &Self) -> bool {\n-        false\n-    }\n-}\n-\n-/// We don't ever actually need this. It's only required for derives.\n-impl<'tcx> Eq for TyInterner<'tcx> {}\n-\n-impl fmt::Debug for TyInterner<'_> {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        write!(f, \"TyInterner\")\n-    }\n-}\n-*/\n-\n #[allow(rustc::usage_of_ty_tykind)]\n impl<'tcx> Interner for TyInterner<'tcx> {\n     type AdtDef = ty::AdtDef<'tcx>;\n@@ -1140,6 +1103,7 @@ pub struct GlobalCtxt<'tcx> {\n }\n \n impl<'tcx> TyCtxt<'tcx> {\n+    #[inline]\n     pub fn interner(self) -> TyInterner<'tcx> {\n         TyInterner { tcx: self }\n     }"}, {"sha": "03e8a9cb96cc6584687a166c4ad191da6d1f4bb9", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=f05a92d15896604faf30d33e73c7d40b98b2ec9c", "patch": "@@ -463,7 +463,7 @@ static_assert_size!(WithStableHash<TyS<'_>>, 56);\n #[rustc_pass_by_value]\n pub struct Ty<'tcx>(Interned<'tcx, WithStableHash<TyS<'tcx>>>);\n \n-const LEAKED_BOOL_TY_ALREADY: std::sync::atomic::AtomicBool =\n+static LEAKED_BOOL_TY_ALREADY: std::sync::atomic::AtomicBool =\n     std::sync::atomic::AtomicBool::new(false);\n \n /// \"Static\" bool only used for internal testing."}, {"sha": "9cb57759b86c14a56765399ec05504a61284296e", "filename": "compiler/rustc_typeck/src/check/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a92d15896604faf30d33e73c7d40b98b2ec9c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs?ref=f05a92d15896604faf30d33e73c7d40b98b2ec9c", "patch": "@@ -4,7 +4,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_index::vec::Idx;\n use rustc_middle::ty::layout::{LayoutError, SizeSkeleton};\n-use rustc_middle::ty::{self, FloatTy, InferTy, IntTy, Ty, TyCtxt, TypeFoldable, UintTy, Article};\n+use rustc_middle::ty::{self, Article, FloatTy, InferTy, IntTy, Ty, TyCtxt, TypeFoldable, UintTy};\n use rustc_session::lint;\n use rustc_span::{Span, Symbol, DUMMY_SP};\n use rustc_target::abi::{Pointer, VariantIdx};"}]}