{"sha": "e997948c8a70d76ffac3c60867d47f98e698988f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OTc5NDhjOGE3MGQ3NmZmYWMzYzYwODY3ZDQ3Zjk4ZTY5ODk4OGY=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T00:39:08Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T01:03:28Z"}, "message": "Remove an invalid assert and some commented out code.", "tree": {"sha": "5cea97e8d0ce340aa423e7c94c3e396a46e5287f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cea97e8d0ce340aa423e7c94c3e396a46e5287f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e997948c8a70d76ffac3c60867d47f98e698988f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e997948c8a70d76ffac3c60867d47f98e698988f", "html_url": "https://github.com/rust-lang/rust/commit/e997948c8a70d76ffac3c60867d47f98e698988f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e997948c8a70d76ffac3c60867d47f98e698988f/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "url": "https://api.github.com/repos/rust-lang/rust/commits/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "html_url": "https://github.com/rust-lang/rust/commit/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "8a2dc361b3ee6ff2279a1fc694f8bef1ed2f3ca2", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e997948c8a70d76ffac3c60867d47f98e698988f/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e997948c8a70d76ffac3c60867d47f98e698988f/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=e997948c8a70d76ffac3c60867d47f98e698988f", "patch": "@@ -486,9 +486,7 @@ fn sender_terminate<T: send>(p: *packet<T>) {\n     let p = unsafe { &*p };\n     match swap_state_rel(p.header.state, terminated) {\n       empty => {\n-        assert p.header.blocked_task.is_null();\n         // The receiver will eventually clean up.\n-        //unsafe { forget(p) }\n       }\n       blocked => {\n         // wake up the target\n@@ -500,7 +498,6 @@ fn sender_terminate<T: send>(p: *packet<T>) {\n             rustrt::rust_task_deref(old_task);\n         }\n         // The receiver will eventually clean up.\n-        //unsafe { forget(p) }\n       }\n       full => {\n         // This is impossible\n@@ -520,7 +517,6 @@ fn receiver_terminate<T: send>(p: *packet<T>) {\n     match swap_state_rel(p.header.state, terminated) {\n       empty => {\n         // the sender will clean up\n-        //unsafe { forget(p) }\n       }\n       blocked => {\n         // this shouldn't happen."}]}