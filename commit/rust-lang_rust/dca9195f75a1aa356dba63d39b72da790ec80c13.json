{"sha": "dca9195f75a1aa356dba63d39b72da790ec80c13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYTkxOTVmNzVhMWFhMzU2ZGJhNjNkMzliNzJkYTc5MGVjODBjMTM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-01-10T19:11:23Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-01-10T19:11:23Z"}, "message": "Add missing expr cases for expand macro", "tree": {"sha": "df758cb96a83238d7c7f515f38333d2385ba587b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df758cb96a83238d7c7f515f38333d2385ba587b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dca9195f75a1aa356dba63d39b72da790ec80c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dca9195f75a1aa356dba63d39b72da790ec80c13", "html_url": "https://github.com/rust-lang/rust/commit/dca9195f75a1aa356dba63d39b72da790ec80c13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dca9195f75a1aa356dba63d39b72da790ec80c13/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "029c02982b4ab89dc785bc162456dbe25a22446c", "url": "https://api.github.com/repos/rust-lang/rust/commits/029c02982b4ab89dc785bc162456dbe25a22446c", "html_url": "https://github.com/rust-lang/rust/commit/029c02982b4ab89dc785bc162456dbe25a22446c"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "5d12c15846079d6a12ced3aeb60eac47ba2539b5", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dca9195f75a1aa356dba63d39b72da790ec80c13/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dca9195f75a1aa356dba63d39b72da790ec80c13/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=dca9195f75a1aa356dba63d39b72da790ec80c13", "patch": "@@ -178,6 +178,7 @@ fn to_fragment_kind(db: &dyn AstDatabase, macro_call_id: MacroCallId) -> Fragmen\n \n     match parent.kind() {\n         MACRO_ITEMS | SOURCE_FILE => FragmentKind::Items,\n+        ITEM_LIST => FragmentKind::Items,\n         LET_STMT => {\n             // FIXME: Handle Pattern\n             FragmentKind::Expr\n@@ -188,7 +189,28 @@ fn to_fragment_kind(db: &dyn AstDatabase, macro_call_id: MacroCallId) -> Fragmen\n         TRY_EXPR => FragmentKind::Expr,\n         TUPLE_EXPR => FragmentKind::Expr,\n         PAREN_EXPR => FragmentKind::Expr,\n-        ITEM_LIST => FragmentKind::Items,\n+\n+        // FIXME: Add tests for following cases in hir_ty\n+        FOR_EXPR => FragmentKind::Expr,\n+        PATH_EXPR => FragmentKind::Expr,\n+        LAMBDA_EXPR => FragmentKind::Expr,\n+        CONDITION => FragmentKind::Expr,\n+        BREAK_EXPR => FragmentKind::Expr,\n+        RETURN_EXPR => FragmentKind::Expr,\n+        BLOCK_EXPR => FragmentKind::Expr,\n+        MATCH_EXPR => FragmentKind::Expr,\n+        MATCH_ARM => FragmentKind::Expr,\n+        MATCH_GUARD => FragmentKind::Expr,\n+        RECORD_FIELD => FragmentKind::Expr,\n+        CALL_EXPR => FragmentKind::Expr,\n+        INDEX_EXPR => FragmentKind::Expr,\n+        METHOD_CALL_EXPR => FragmentKind::Expr,\n+        AWAIT_EXPR => FragmentKind::Expr,\n+        CAST_EXPR => FragmentKind::Expr,\n+        REF_EXPR => FragmentKind::Expr,\n+        PREFIX_EXPR => FragmentKind::Expr,\n+        RANGE_EXPR => FragmentKind::Expr,\n+        BIN_EXPR => FragmentKind::Expr,\n         _ => {\n             // Unknown , Just guess it is `Items`\n             FragmentKind::Items"}]}