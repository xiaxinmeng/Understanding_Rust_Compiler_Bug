{"sha": "a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MGZiZjY2MjBkZGFhY2MyZWY4MDVmYThjNGFjMmRjOWJmMDJmM2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-20T06:03:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-20T06:03:15Z"}, "message": "Auto merge of #83900 - torhovland:issue-83832, r=jyn514\n\nAdd stability tags to ImportItem.\n\nFixes #83832.", "tree": {"sha": "60bb10feeedfd7c83f078324c7548d697a601219", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60bb10feeedfd7c83f078324c7548d697a601219"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "html_url": "https://github.com/rust-lang/rust/commit/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2c20b51ed838368d3f2bdccb63f401bcddb7e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c20b51ed838368d3f2bdccb63f401bcddb7e1c", "html_url": "https://github.com/rust-lang/rust/commit/b2c20b51ed838368d3f2bdccb63f401bcddb7e1c"}, {"sha": "64a68ae69adf508c73e642ff8739d3e547878467", "url": "https://api.github.com/repos/rust-lang/rust/commits/64a68ae69adf508c73e642ff8739d3e547878467", "html_url": "https://github.com/rust-lang/rust/commit/64a68ae69adf508c73e642ff8739d3e547878467"}], "stats": {"total": 162, "additions": 153, "deletions": 9}, "files": [{"sha": "a303ca956d8fe9bd84c0ebaf429361e65cd85d4f", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -4,6 +4,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::dep_graph::DepContext;\n use rustc_middle::middle::stability;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::hygiene::MacroKind;\n@@ -282,11 +283,40 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n             }\n \n             clean::ImportItem(ref import) => {\n+                let (stab, stab_tags) = if let Some(import_def_id) = import.source.did {\n+                    let import_attrs = Box::new(clean::Attributes::from_ast(\n+                        cx.tcx().sess().diagnostic(),\n+                        cx.tcx().get_attrs(import_def_id),\n+                        None,\n+                    ));\n+\n+                    // Just need an item with the correct def_id and attrs\n+                    let import_item = clean::Item {\n+                        def_id: import_def_id,\n+                        attrs: import_attrs,\n+                        ..myitem.clone()\n+                    };\n+\n+                    let stab = import_item.stability_class(cx.tcx());\n+                    let stab_tags = Some(extra_info_tags(&import_item, item, cx.tcx()));\n+                    (stab, stab_tags)\n+                } else {\n+                    (None, None)\n+                };\n+\n+                let add = if stab.is_some() { \" \" } else { \"\" };\n+\n                 write!(\n                     w,\n-                    \"<tr><td><code>{}{}</code></td></tr>\",\n-                    myitem.visibility.print_with_space(myitem.def_id, cx),\n-                    import.print(cx),\n+                    \"<tr class=\\\"{stab}{add}import-item\\\">\\\n+                         <td><code>{vis}{imp}</code></td>\\\n+                         <td class=\\\"docblock-short\\\">{stab_tags}</td>\\\n+                     </tr>\",\n+                    stab = stab.unwrap_or_default(),\n+                    add = add,\n+                    vis = myitem.visibility.print_with_space(myitem.def_id, cx),\n+                    imp = import.print(cx),\n+                    stab_tags = stab_tags.unwrap_or_default(),\n                 );\n             }\n \n@@ -320,7 +350,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     docs = MarkdownSummaryLine(&doc_value, &myitem.links(cx)).into_string(),\n                     class = myitem.type_(),\n                     add = add,\n-                    stab = stab.unwrap_or_else(String::new),\n+                    stab = stab.unwrap_or_default(),\n                     unsafety_flag = unsafety_flag,\n                     href = item_path(myitem.type_(), &myitem.name.unwrap().as_str()),\n                     title = [full_path(cx, myitem), myitem.type_().to_string()]"}, {"sha": "8f11dda2fb205d2da44b85f9e37b6ed4523b7175", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -868,7 +868,8 @@ body.blur > :not(#help) {\n \t\t0 -1px 0 black;\n }\n \n-.module-item .stab {\n+.module-item .stab,\n+.import-item .stab {\n \tborder-radius: 3px;\n \tdisplay: inline-block;\n \tfont-size: 80%;\n@@ -879,7 +880,8 @@ body.blur > :not(#help) {\n \tvertical-align: text-bottom;\n }\n \n-.module-item.unstable {\n+.module-item.unstable,\n+.import-item.unstable {\n \topacity: 0.65;\n }\n "}, {"sha": "72396ec6b76bd936d7647b916b92ee8287165e5f", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -252,7 +252,8 @@ details.rustdoc-toggle > summary::before {\n \tcolor: #929292;\n }\n \n-.module-item .stab {\n+.module-item .stab,\n+.import-item .stab {\n \tcolor: #000;\n }\n "}, {"sha": "b2003b5274120c6237c1fd05de865a2ecb3e42cc", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -217,7 +217,8 @@ details.rustdoc-toggle > summary::before {\n \tbox-shadow: 0 0 8px 4px #078dd8;\n }\n \n-.module-item .stab {\n+.module-item .stab,\n+.import-item .stab {\n \tcolor: #ddd;\n }\n "}, {"sha": "04187773b64db85b6feb8b4af1e705bad406f4fa", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -215,7 +215,8 @@ details.rustdoc-toggle > summary::before {\n \tbox-shadow: 0 0 8px #078dd8;\n }\n \n-.module-item .stab {\n+.module-item .stab,\n+.import-item .stab {\n \tcolor: #000;\n }\n "}, {"sha": "a79d05904e31c4b16f367d0f433174b41f5efc6c", "filename": "src/test/rustdoc/reexport-stability-tags-deprecated-and-portability.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Ftest%2Frustdoc%2Freexport-stability-tags-deprecated-and-portability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Ftest%2Frustdoc%2Freexport-stability-tags-deprecated-and-portability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexport-stability-tags-deprecated-and-portability.rs?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -0,0 +1,48 @@\n+#![crate_name = \"foo\"]\n+#![feature(doc_cfg)]\n+\n+pub mod tag {\n+    #[deprecated(since = \"0.1.8\", note = \"Use bar() instead\")]\n+    pub trait Deprecated {}\n+\n+    #[doc(cfg(feature = \"sync\"))]\n+    pub trait Portability {}\n+\n+    #[deprecated(since = \"0.1.8\", note = \"Use bar() instead\")]\n+    #[doc(cfg(feature = \"sync\"))]\n+    pub trait Both {}\n+\n+    pub trait None {}\n+}\n+\n+// @has foo/mod1/index.html\n+pub mod mod1 {\n+    // @has - '//code' 'pub use tag::Deprecated;'\n+    // @has - '//span' 'Deprecated'\n+    // @!has - '//span' 'sync'\n+    pub use tag::Deprecated;\n+}\n+\n+// @has foo/mod2/index.html\n+pub mod mod2 {\n+    // @has - '//code' 'pub use tag::Portability;'\n+    // @!has - '//span' 'Deprecated'\n+    // @has - '//span' 'sync'\n+    pub use tag::Portability;\n+}\n+\n+// @has foo/mod3/index.html\n+pub mod mod3 {\n+    // @has - '//code' 'pub use tag::Both;'\n+    // @has - '//span' 'Deprecated'\n+    // @has - '//span' 'sync'\n+    pub use tag::Both;\n+}\n+\n+// @has foo/mod4/index.html\n+pub mod mod4 {\n+    // @has - '//code' 'pub use tag::None;'\n+    // @!has - '//span' 'Deprecated'\n+    // @!has - '//span' 'sync'\n+    pub use tag::None;\n+}"}, {"sha": "ff8a910f59f98fa9fa64be8e7c0558385af62c32", "filename": "src/test/rustdoc/reexport-stability-tags-unstable-and-portability.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Ftest%2Frustdoc%2Freexport-stability-tags-unstable-and-portability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c/src%2Ftest%2Frustdoc%2Freexport-stability-tags-unstable-and-portability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexport-stability-tags-unstable-and-portability.rs?ref=a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "patch": "@@ -0,0 +1,61 @@\n+#![crate_name = \"foo\"]\n+#![feature(doc_cfg)]\n+#![feature(staged_api)]\n+#![stable(feature = \"rust1\", since = \"1.0.0\")]\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub mod tag {\n+    #[unstable(feature = \"humans\", issue = \"none\")]\n+    pub trait Unstable {}\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[doc(cfg(feature = \"sync\"))]\n+    pub trait Portability {}\n+\n+    #[unstable(feature = \"humans\", issue = \"none\")]\n+    #[doc(cfg(feature = \"sync\"))]\n+    pub trait Both {}\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub trait None {}\n+}\n+\n+// @has foo/mod1/index.html\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub mod mod1 {\n+    // @has - '//code' 'pub use tag::Unstable;'\n+    // @has - '//span' 'Experimental'\n+    // @!has - '//span' 'sync'\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub use tag::Unstable;\n+}\n+\n+// @has foo/mod2/index.html\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub mod mod2 {\n+    // @has - '//code' 'pub use tag::Portability;'\n+    // @!has - '//span' 'Experimental'\n+    // @has - '//span' 'sync'\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub use tag::Portability;\n+}\n+\n+// @has foo/mod3/index.html\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub mod mod3 {\n+    // @has - '//code' 'pub use tag::Both;'\n+    // @has - '//span' 'Experimental'\n+    // @has - '//span' 'sync'\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub use tag::Both;\n+}\n+\n+// @has foo/mod4/index.html\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub mod mod4 {\n+    // @has - '//code' 'pub use tag::None;'\n+    // @!has - '//span' 'Experimental'\n+    // @!has - '//span' 'sync'\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub use tag::None;\n+}"}]}