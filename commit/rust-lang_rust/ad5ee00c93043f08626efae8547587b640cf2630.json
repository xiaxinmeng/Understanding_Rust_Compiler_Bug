{"sha": "ad5ee00c93043f08626efae8547587b640cf2630", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNWVlMDBjOTMwNDNmMDg2MjZlZmFlODU0NzU4N2I2NDBjZjI2MzA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-05-08T13:50:15Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-05-08T13:50:15Z"}, "message": "libstd: convert chained ifs to a match in base64.", "tree": {"sha": "f7e68bf7fa33129ba5613064f2181e7d8e7fa437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7e68bf7fa33129ba5613064f2181e7d8e7fa437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5ee00c93043f08626efae8547587b640cf2630", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5ee00c93043f08626efae8547587b640cf2630", "html_url": "https://github.com/rust-lang/rust/commit/ad5ee00c93043f08626efae8547587b640cf2630", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5ee00c93043f08626efae8547587b640cf2630/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6f9295654b8bcad0c3cdd0651741082cedd6e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f9295654b8bcad0c3cdd0651741082cedd6e75", "html_url": "https://github.com/rust-lang/rust/commit/b6f9295654b8bcad0c3cdd0651741082cedd6e75"}], "stats": {"total": 44, "additions": 20, "deletions": 24}, "files": [{"sha": "85ba2707863dc5ed17a8788b9dc6e6c0145e06a0", "filename": "src/libstd/base64.rs", "status": "modified", "additions": 20, "deletions": 24, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ad5ee00c93043f08626efae8547587b640cf2630/src%2Flibstd%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5ee00c93043f08626efae8547587b640cf2630/src%2Flibstd%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbase64.rs?ref=ad5ee00c93043f08626efae8547587b640cf2630", "patch": "@@ -156,31 +156,27 @@ impl FromBase64 for ~[u8] {\n                 let ch = self[i] as char;\n                 n <<= 6u;\n \n-                if ch >= 'A' && ch <= 'Z' {\n-                    n |= (ch as uint) - 0x41u;\n-                } else if ch >= 'a' && ch <= 'z' {\n-                    n |= (ch as uint) - 0x47u;\n-                } else if ch >= '0' && ch <= '9' {\n-                    n |= (ch as uint) + 0x04u;\n-                } else if ch == '+' {\n-                    n |= 0x3Eu;\n-                } else if ch == '/' {\n-                    n |= 0x3Fu;\n-                } else if ch == '=' {\n-                    match len - i {\n-                      1u => {\n-                        r.push(((n >> 16u) & 0xFFu) as u8);\n-                        r.push(((n >> 8u ) & 0xFFu) as u8);\n-                        return copy r;\n-                      }\n-                      2u => {\n-                        r.push(((n >> 10u) & 0xFFu) as u8);\n-                        return copy r;\n-                      }\n-                      _ => fail!(~\"invalid base64 padding\")\n+                match ch {\n+                    'A'..'Z' => n |= (ch as uint) - 0x41,\n+                    'a'..'z' => n |= (ch as uint) - 0x47,\n+                    '0'..'9' => n |= (ch as uint) + 0x04,\n+                    '+'      => n |= 0x3E,\n+                    '/'      => n |= 0x3F,\n+                    '='      => {\n+                        match len - i {\n+                            1u => {\n+                                r.push(((n >> 16u) & 0xFFu) as u8);\n+                                r.push(((n >> 8u ) & 0xFFu) as u8);\n+                                return copy r;\n+                            }\n+                            2u => {\n+                                r.push(((n >> 10u) & 0xFFu) as u8);\n+                                return copy r;\n+                            }\n+                            _ => fail!(~\"invalid base64 padding\")\n+                        }\n                     }\n-                } else {\n-                    fail!(~\"invalid base64 character\");\n+                    _ => fail!(~\"invalid base64 character\")\n                 }\n \n                 i += 1u;"}]}