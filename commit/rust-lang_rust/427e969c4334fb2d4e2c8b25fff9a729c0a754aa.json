{"sha": "427e969c4334fb2d4e2c8b25fff9a729c0a754aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyN2U5NjljNDMzNGZiMmQ0ZTJjOGIyNWZmZjlhNzI5YzBhNzU0YWE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-24T02:48:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-24T02:48:46Z"}, "message": "Rollup merge of #75826 - ayushmishra2005:misleading_documentation_for_derived_Ord_PartialOrd, r=KodrAus\n\nCorrected Misleading documentation for derived Ord/PartialOrd implementation\n\nCorrected Misleading documentation for derived Ord/PartialOrd implementation\n\nFixes #75620", "tree": {"sha": "ef21bf5d850a70df544730a7f6fc578c58440a24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef21bf5d850a70df544730a7f6fc578c58440a24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427e969c4334fb2d4e2c8b25fff9a729c0a754aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfQyqOCRBK7hj4Ov3rIwAAdHIIAHo53nRPbhrBiTm+MFuW6rlr\nvKLK29ZrkrbswJPVoKwKQSiw7MElCb3Vo49sosDtG5RJjlVivVaCxkQyFppYVHTI\nXQIx6kI7yV+zyx0eJPvxYPafI9Ip7MJVgeoG/BTO3FWcBLwDY925HWWtHnoNcri6\n9BYc1ywWrvq7o29Q4Bs20/EYL5n1Sj6wsfqxNw/P0Uw2gwvmIuE2DQoBZa/8+CXm\n7OregDAkkb5tDgtl8k6BUIUXX2QEavwa+CfXjeWeZ5elqrVvU43CNhKmeUm/zarI\nG2wqH1uhnkWPCv+SslKABaNgn3g4BK5pPOTb1LmXsHX+EKW5xnvkryFsxn4t0qM=\n=9RBI\n-----END PGP SIGNATURE-----\n", "payload": "tree ef21bf5d850a70df544730a7f6fc578c58440a24\nparent b8e456f2db80e2f9bf030232315ff2c9137be7fb\nparent 18f47d81dae6740a4b62262cf2518ea1cfe19e62\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1598237326 +0900\ncommitter GitHub <noreply@github.com> 1598237326 +0900\n\nRollup merge of #75826 - ayushmishra2005:misleading_documentation_for_derived_Ord_PartialOrd, r=KodrAus\n\nCorrected Misleading documentation for derived Ord/PartialOrd implementation\n\nCorrected Misleading documentation for derived Ord/PartialOrd implementation\n\nFixes #75620\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427e969c4334fb2d4e2c8b25fff9a729c0a754aa", "html_url": "https://github.com/rust-lang/rust/commit/427e969c4334fb2d4e2c8b25fff9a729c0a754aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427e969c4334fb2d4e2c8b25fff9a729c0a754aa/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8e456f2db80e2f9bf030232315ff2c9137be7fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8e456f2db80e2f9bf030232315ff2c9137be7fb", "html_url": "https://github.com/rust-lang/rust/commit/b8e456f2db80e2f9bf030232315ff2c9137be7fb"}, {"sha": "18f47d81dae6740a4b62262cf2518ea1cfe19e62", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f47d81dae6740a4b62262cf2518ea1cfe19e62", "html_url": "https://github.com/rust-lang/rust/commit/18f47d81dae6740a4b62262cf2518ea1cfe19e62"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ef691489f081c9a42b8191bd5e8ae21c02bef55e", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/427e969c4334fb2d4e2c8b25fff9a729c0a754aa/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427e969c4334fb2d4e2c8b25fff9a729c0a754aa/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=427e969c4334fb2d4e2c8b25fff9a729c0a754aa", "patch": "@@ -505,7 +505,7 @@ impl<T: Ord> Ord for Reverse<T> {\n ///\n /// This trait can be used with `#[derive]`. When `derive`d on structs, it will produce a\n /// lexicographic ordering based on the top-to-bottom declaration order of the struct's members.\n-/// When `derive`d on enums, variants are ordered by their top-to-bottom declaration order.\n+/// When `derive`d on enums, variants are ordered by their top-to-bottom discriminant order.\n ///\n /// ## How can I implement `Ord`?\n ///\n@@ -694,7 +694,7 @@ impl PartialOrd for Ordering {\n ///\n /// This trait can be used with `#[derive]`. When `derive`d on structs, it will produce a\n /// lexicographic ordering based on the top-to-bottom declaration order of the struct's members.\n-/// When `derive`d on enums, variants are ordered by their top-to-bottom declaration order.\n+/// When `derive`d on enums, variants are ordered by their top-to-bottom discriminant order.\n ///\n /// ## How can I implement `PartialOrd`?\n ///"}]}