{"sha": "48b5c093d62f670dc2ca4dd3fb65052a4bb20766", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YjVjMDkzZDYyZjY3MGRjMmNhNGRkM2ZiNjUwNTJhNGJiMjA3NjY=", "commit": {"author": {"name": "Ariadne Conill", "email": "ariadne@dereferenced.org", "date": "2021-02-16T00:46:14Z"}, "committer": {"name": "Ariadne Conill", "email": "ariadne@dereferenced.org", "date": "2021-02-19T03:14:28Z"}, "message": "add s390x-unknown-linux-musl target", "tree": {"sha": "4aa86077de0e2989ec21dc0220d4802fd50e7f6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aa86077de0e2989ec21dc0220d4802fd50e7f6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b5c093d62f670dc2ca4dd3fb65052a4bb20766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b5c093d62f670dc2ca4dd3fb65052a4bb20766", "html_url": "https://github.com/rust-lang/rust/commit/48b5c093d62f670dc2ca4dd3fb65052a4bb20766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b5c093d62f670dc2ca4dd3fb65052a4bb20766/comments", "author": {"login": "kaniini", "id": 1522444, "node_id": "MDQ6VXNlcjE1MjI0NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1522444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaniini", "html_url": "https://github.com/kaniini", "followers_url": "https://api.github.com/users/kaniini/followers", "following_url": "https://api.github.com/users/kaniini/following{/other_user}", "gists_url": "https://api.github.com/users/kaniini/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaniini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaniini/subscriptions", "organizations_url": "https://api.github.com/users/kaniini/orgs", "repos_url": "https://api.github.com/users/kaniini/repos", "events_url": "https://api.github.com/users/kaniini/events{/privacy}", "received_events_url": "https://api.github.com/users/kaniini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kaniini", "id": 1522444, "node_id": "MDQ6VXNlcjE1MjI0NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1522444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaniini", "html_url": "https://github.com/kaniini", "followers_url": "https://api.github.com/users/kaniini/followers", "following_url": "https://api.github.com/users/kaniini/following{/other_user}", "gists_url": "https://api.github.com/users/kaniini/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaniini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaniini/subscriptions", "organizations_url": "https://api.github.com/users/kaniini/orgs", "repos_url": "https://api.github.com/users/kaniini/repos", "events_url": "https://api.github.com/users/kaniini/events{/privacy}", "received_events_url": "https://api.github.com/users/kaniini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0148b971c921a0831fbf3357e5936eec724e3566", "url": "https://api.github.com/repos/rust-lang/rust/commits/0148b971c921a0831fbf3357e5936eec724e3566", "html_url": "https://github.com/rust-lang/rust/commit/0148b971c921a0831fbf3357e5936eec724e3566"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "f7b49ac52b0afff89eef6c391b0f12826bfce89e", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48b5c093d62f670dc2ca4dd3fb65052a4bb20766/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b5c093d62f670dc2ca4dd3fb65052a4bb20766/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=48b5c093d62f670dc2ca4dd3fb65052a4bb20766", "patch": "@@ -641,6 +641,7 @@ supported_targets! {\n     (\"powerpc64le-unknown-linux-gnu\", powerpc64le_unknown_linux_gnu),\n     (\"powerpc64le-unknown-linux-musl\", powerpc64le_unknown_linux_musl),\n     (\"s390x-unknown-linux-gnu\", s390x_unknown_linux_gnu),\n+    (\"s390x-unknown-linux-musl\", s390x_unknown_linux_musl),\n     (\"sparc-unknown-linux-gnu\", sparc_unknown_linux_gnu),\n     (\"sparc64-unknown-linux-gnu\", sparc64_unknown_linux_gnu),\n     (\"arm-unknown-linux-gnueabi\", arm_unknown_linux_gnueabi),"}, {"sha": "4f811ce98c181d4618a7436a4e23c680667b42f7", "filename": "compiler/rustc_target/src/spec/s390x_unknown_linux_musl.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/48b5c093d62f670dc2ca4dd3fb65052a4bb20766/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b5c093d62f670dc2ca4dd3fb65052a4bb20766/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_musl.rs?ref=48b5c093d62f670dc2ca4dd3fb65052a4bb20766", "patch": "@@ -0,0 +1,24 @@\n+use crate::abi::Endian;\n+use crate::spec::Target;\n+\n+pub fn target() -> Target {\n+    let mut base = super::linux_musl_base::opts();\n+    base.endian = Endian::Big;\n+    // z10 is the oldest CPU supported by LLVM\n+    base.cpu = \"z10\".to_string();\n+    // FIXME: The data_layout string below and the ABI implementation in\n+    // cabi_s390x.rs are for now hard-coded to assume the no-vector ABI.\n+    // Pass the -vector feature string to LLVM to respect this assumption.\n+    base.features = \"-vector\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.min_global_align = Some(16);\n+    base.static_position_independent_executables = true;\n+\n+    Target {\n+        llvm_target: \"s390x-unknown-linux-musl\".to_string(),\n+        pointer_width: 64,\n+        data_layout: \"E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64\".to_string(),\n+        arch: \"s390x\".to_string(),\n+        options: base,\n+    }\n+}"}]}