{"sha": "32e882789ba98cf6c02b1822beecacbcb8800269", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZTg4Mjc4OWJhOThjZjZjMDJiMTgyMmJlZWNhY2JjYjg4MDAyNjk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-06-12T03:50:43Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-06-13T02:37:04Z"}, "message": "Change defaults to RFC style", "tree": {"sha": "a27a741be29a17d9a6e4d732ef68a815f45f2577", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a27a741be29a17d9a6e4d732ef68a815f45f2577"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32e882789ba98cf6c02b1822beecacbcb8800269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32e882789ba98cf6c02b1822beecacbcb8800269", "html_url": "https://github.com/rust-lang/rust/commit/32e882789ba98cf6c02b1822beecacbcb8800269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32e882789ba98cf6c02b1822beecacbcb8800269/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f85079d62ac4375138fcf65f26207e7fd9e34a0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85079d62ac4375138fcf65f26207e7fd9e34a0d", "html_url": "https://github.com/rust-lang/rust/commit/f85079d62ac4375138fcf65f26207e7fd9e34a0d"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "a79c974b31ddf4a38eaad49bd144452b9798f15e", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32e882789ba98cf6c02b1822beecacbcb8800269/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/32e882789ba98cf6c02b1822beecacbcb8800269/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=32e882789ba98cf6c02b1822beecacbcb8800269", "patch": "@@ -1,7 +1,7 @@\n [package]\n \n name = \"rustfmt\"\n-version = \"0.8.6\"\n+version = \"0.9\"\n authors = [\"Nicholas Cameron <ncameron@mozilla.com>\", \"The Rustfmt developers\"]\n description = \"Tool to find and fix Rust formatting issues\"\n repository = \"https://github.com/rust-lang-nursery/rustfmt\""}, {"sha": "d60da4dec755a784177e3458a6d410c714fc2345", "filename": "README.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/32e882789ba98cf6c02b1822beecacbcb8800269/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/32e882789ba98cf6c02b1822beecacbcb8800269/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=32e882789ba98cf6c02b1822beecacbcb8800269", "patch": "@@ -5,6 +5,11 @@ A tool for formatting Rust code according to style guidelines.\n If you'd like to help out (and you should, it's a fun project!), see\n [Contributing.md](Contributing.md).\n \n+We are changing the default style used by rustfmt. There is an ongoing [RFC process](https://github.com/rust-lang-nursery/fmt-rfcs).\n+The last version using the old style was 0.8.5. From 0.9 onwards, the RFC style\n+is the default. If you want the old style back, you can use [legacy-rustfmt.toml](legacy-rustfmt.toml)\n+as your rustfmt.toml.\n+\n If you want latest and greatest, you should use the [libsyntax](https://github.com/rust-lang-nursery/rustfmt/tree/libsyntax)\n branch. It supports some newer Rust syntax which is missing from master and\n fixes some bugs. However, it links against libsyntax from the Rust compiler, so"}, {"sha": "da1da764b2e82ffffa909c0ffe09bede341de378", "filename": "legacy-rustfmt.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32e882789ba98cf6c02b1822beecacbcb8800269/legacy-rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/32e882789ba98cf6c02b1822beecacbcb8800269/legacy-rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/legacy-rustfmt.toml?ref=32e882789ba98cf6c02b1822beecacbcb8800269", "patch": "@@ -0,0 +1,8 @@\n+fn_args_layout = \"Visual\"\n+array_layout = \"Visual\"\n+control_style = \"Legacy\"\n+where_style = \"Legacy\"\n+generics_indent = \"Visual\"\n+fn_call_style = \"Visual\"\n+combine_control_expr = false\n+fn_args_paren_newline = true"}, {"sha": "893996bc7ff4e1c2d22d84fe55e584b3b09c8ae4", "filename": "rfc-rustfmt.toml", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f85079d62ac4375138fcf65f26207e7fd9e34a0d/rfc-rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f85079d62ac4375138fcf65f26207e7fd9e34a0d/rfc-rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rfc-rustfmt.toml?ref=f85079d62ac4375138fcf65f26207e7fd9e34a0d", "patch": "@@ -1,8 +0,0 @@\n-fn_args_layout = \"Block\"\n-array_layout = \"Block\"\n-control_style = \"Rfc\"\n-where_style = \"Rfc\"\n-generics_indent = \"Block\"\n-fn_call_style = \"Block\"\n-combine_control_expr = true\n-fn_args_paren_newline = false"}, {"sha": "55518ebad979a16c3a3eaf3e9d2d14220bfd682b", "filename": "src/config.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/32e882789ba98cf6c02b1822beecacbcb8800269/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e882789ba98cf6c02b1822beecacbcb8800269/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=32e882789ba98cf6c02b1822beecacbcb8800269", "patch": "@@ -498,7 +498,7 @@ create_config! {\n     newline_style: NewlineStyle, NewlineStyle::Unix, \"Unix or Windows line endings\";\n     fn_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for functions\";\n     item_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for structs and enums\";\n-    control_style: Style, Style::Legacy, \"Indent style for control flow statements\";\n+    control_style: Style, Style::Rfc, \"Indent style for control flow statements\";\n     control_brace_style: ControlBraceStyle, ControlBraceStyle::AlwaysSameLine,\n         \"Brace style for control flow constructs\";\n     impl_empty_single_line: bool, true, \"Put empty-body implementations on a single line\";\n@@ -508,16 +508,16 @@ create_config! {\n     fn_single_line: bool, false, \"Put single-expression functions on a single line\";\n     fn_return_indent: ReturnIndent, ReturnIndent::WithArgs,\n         \"Location of return type in function declaration\";\n-    fn_args_paren_newline: bool, true, \"If function argument parenthesis goes on a newline\";\n+    fn_args_paren_newline: bool, false, \"If function argument parenthesis goes on a newline\";\n     fn_args_density: Density, Density::Tall, \"Argument density in functions\";\n-    fn_args_layout: IndentStyle, IndentStyle::Visual,\n+    fn_args_layout: IndentStyle, IndentStyle::Block,\n         \"Layout of function arguments and tuple structs\";\n-    array_layout: IndentStyle, IndentStyle::Visual, \"Indent on arrays\";\n+    array_layout: IndentStyle, IndentStyle::Block, \"Indent on arrays\";\n     array_width: usize, 60,\n         \"Maximum width of an array literal before falling back to vertical formatting\";\n     type_punctuation_density: TypeDensity, TypeDensity::Wide,\n         \"Determines if '+' or '=' are wrapped in spaces in the punctuation of types\";\n-    where_style: Style, Style::Legacy, \"Overall strategy for where clauses\";\n+    where_style: Style, Style::Rfc, \"Overall strategy for where clauses\";\n     // TODO:\n     // 1. Should we at least try to put the where clause on the same line as the rest of the\n     // function decl?\n@@ -526,11 +526,11 @@ create_config! {\n     where_layout: ListTactic, ListTactic::Vertical, \"Element layout inside a where clause\";\n     where_pred_indent: IndentStyle, IndentStyle::Visual,\n         \"Indentation style of a where predicate\";\n-    generics_indent: IndentStyle, IndentStyle::Visual, \"Indentation of generics\";\n+    generics_indent: IndentStyle, IndentStyle::Block, \"Indentation of generics\";\n     struct_lit_style: IndentStyle, IndentStyle::Block, \"Style of struct definition\";\n     struct_lit_multiline_style: MultilineStyle, MultilineStyle::PreferSingle,\n         \"Multiline style on literal structs\";\n-    fn_call_style: IndentStyle, IndentStyle::Visual, \"Indentation for function calls, etc.\";\n+    fn_call_style: IndentStyle, IndentStyle::Block, \"Indentation for function calls, etc.\";\n     report_todo: ReportTactic, ReportTactic::Never,\n         \"Report all, none or unnumbered occurrences of TODO in source file comments\";\n     report_fixme: ReportTactic, ReportTactic::Never,\n@@ -580,7 +580,7 @@ create_config! {\n         \"What Write Mode to use when none is supplied: Replace, Overwrite, Display, Diff, Coverage\";\n     condense_wildcard_suffixes: bool, false, \"Replace strings of _ wildcards by a single .. in \\\n                                               tuple patterns\";\n-    combine_control_expr: bool, false, \"Combine control expressions with funciton calls.\"\n+    combine_control_expr: bool, true, \"Combine control expressions with funciton calls.\"\n }\n \n #[cfg(test)]"}]}