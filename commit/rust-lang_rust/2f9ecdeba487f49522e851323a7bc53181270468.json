{"sha": "2f9ecdeba487f49522e851323a7bc53181270468", "node_id": "C_kwDOAAsO6NoAKDJmOWVjZGViYTQ4N2Y0OTUyMmU4NTEzMjNhN2JjNTMxODEyNzA0Njg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-03T17:32:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-03T17:32:59Z"}, "message": "Auto merge of #1992 - RalfJung:sdiv, r=RalfJung\n\nadjust for div/rem overflow being UB\n\nThis is the Miri side of https://github.com/rust-lang/rust/pull/94512. Just some error messages change.", "tree": {"sha": "720179314de91aa61b8c70c17a0eeaa800c061ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/720179314de91aa61b8c70c17a0eeaa800c061ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f9ecdeba487f49522e851323a7bc53181270468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f9ecdeba487f49522e851323a7bc53181270468", "html_url": "https://github.com/rust-lang/rust/commit/2f9ecdeba487f49522e851323a7bc53181270468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f9ecdeba487f49522e851323a7bc53181270468/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b23786c48cc9e9b46a0e97eba8b3cf0fca48801", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b23786c48cc9e9b46a0e97eba8b3cf0fca48801", "html_url": "https://github.com/rust-lang/rust/commit/2b23786c48cc9e9b46a0e97eba8b3cf0fca48801"}, {"sha": "c0f72510550529ca8ddaaffd94709bec457debff", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f72510550529ca8ddaaffd94709bec457debff", "html_url": "https://github.com/rust-lang/rust/commit/c0f72510550529ca8ddaaffd94709bec457debff"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "56281423c527924bfc48d3b5db02885b2cc0d090", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f9ecdeba487f49522e851323a7bc53181270468/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/2f9ecdeba487f49522e851323a7bc53181270468/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=2f9ecdeba487f49522e851323a7bc53181270468", "patch": "@@ -1 +1 @@\n-f0c4da49983aa699f715caf681e3154b445fb60b\n+45660949132222ba7ec0905649b2affd68e0e13c"}, {"sha": "2831795de82ea364e3a70c405706ccacbf9e65be", "filename": "tests/compile-fail/intrinsics/exact_div4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Fcompile-fail%2Fintrinsics%2Fexact_div4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Fcompile-fail%2Fintrinsics%2Fexact_div4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fexact_div4.rs?ref=2f9ecdeba487f49522e851323a7bc53181270468", "patch": "@@ -1,5 +1,5 @@\n #![feature(core_intrinsics)]\n fn main() {\n     // divison of MIN by -1\n-    unsafe { std::intrinsics::exact_div(i64::MIN, -1); } //~ ERROR result of dividing MIN by -1 cannot be represented\n+    unsafe { std::intrinsics::exact_div(i64::MIN, -1); } //~ ERROR overflow in signed remainder (dividing MIN by -1)\n }"}, {"sha": "277b9e807baacf3d69a288364d2195084b293a30", "filename": "tests/compile-fail/intrinsics/simd-div-overflow.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Fcompile-fail%2Fintrinsics%2Fsimd-div-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Fcompile-fail%2Fintrinsics%2Fsimd-div-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fsimd-div-overflow.rs?ref=2f9ecdeba487f49522e851323a7bc53181270468", "patch": "@@ -0,0 +1,15 @@\n+#![feature(platform_intrinsics, repr_simd)]\n+\n+extern \"platform-intrinsic\" {\n+    pub(crate) fn simd_div<T>(x: T, y: T) -> T;\n+}\n+\n+#[repr(simd)]\n+#[allow(non_camel_case_types)]\n+struct i32x2(i32, i32);\n+\n+fn main() { unsafe {\n+    let x = i32x2(1, i32::MIN);\n+    let y = i32x2(1, -1);\n+    simd_div(x, y); //~ERROR Undefined Behavior: overflow in signed division\n+} }"}, {"sha": "08b654da3ed755bb4e3715a6544963abc0e98eb2", "filename": "tests/compile-fail/intrinsics/unchecked_div1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Fcompile-fail%2Fintrinsics%2Funchecked_div1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Fcompile-fail%2Fintrinsics%2Funchecked_div1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Funchecked_div1.rs?ref=2f9ecdeba487f49522e851323a7bc53181270468", "patch": "@@ -1,5 +1,5 @@\n #![feature(core_intrinsics)]\n fn main() {\n     // MIN/-1 cannot be represented\n-    unsafe { std::intrinsics::unchecked_div(i16::MIN, -1); } //~ ERROR overflow executing `unchecked_div`\n+    unsafe { std::intrinsics::unchecked_div(i16::MIN, -1); } //~ ERROR overflow in signed division (dividing MIN by -1)\n }"}, {"sha": "fde220d8f35e8d9c058ca96b0dab93aab791365a", "filename": "tests/run-pass/integer-ops.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Frun-pass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f9ecdeba487f49522e851323a7bc53181270468/tests%2Frun-pass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Finteger-ops.rs?ref=2f9ecdeba487f49522e851323a7bc53181270468", "patch": "@@ -116,6 +116,9 @@ pub fn main() {\n     assert_eq!(100i8.wrapping_rem(10), 0);\n     assert_eq!((-128i8).wrapping_rem(-1), 0);\n \n+    assert_eq!(i32::MIN.wrapping_div(-1), i32::MIN);\n+    assert_eq!(i32::MIN.wrapping_rem(-1), 0);\n+\n     assert_eq!(100i8.wrapping_neg(), -100);\n     assert_eq!((-128i8).wrapping_neg(), -128);\n "}]}