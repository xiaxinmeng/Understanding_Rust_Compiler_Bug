{"sha": "d375440dab2378dc3075755f388f2cbb242a3971", "node_id": "C_kwDOAAsO6NoAKGQzNzU0NDBkYWIyMzc4ZGMzMDc1NzU1ZjM4OGYyY2JiMjQyYTM5NzE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-06T03:33:57Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-11T19:53:15Z"}, "message": "label where constructor is defined and note that it should be called", "tree": {"sha": "da0cf559d1af5a8496033959f634bb7d134932a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da0cf559d1af5a8496033959f634bb7d134932a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d375440dab2378dc3075755f388f2cbb242a3971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d375440dab2378dc3075755f388f2cbb242a3971", "html_url": "https://github.com/rust-lang/rust/commit/d375440dab2378dc3075755f388f2cbb242a3971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d375440dab2378dc3075755f388f2cbb242a3971/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede5c31af4388b1259138f4f7d8eb52daeae7f5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede5c31af4388b1259138f4f7d8eb52daeae7f5f", "html_url": "https://github.com/rust-lang/rust/commit/ede5c31af4388b1259138f4f7d8eb52daeae7f5f"}], "stats": {"total": 68, "additions": 39, "deletions": 29}, "files": [{"sha": "3372a1b0dcbe06e5ddafc2c475378eacba1d4077", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/suggestions.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d375440dab2378dc3075755f388f2cbb242a3971/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d375440dab2378dc3075755f388f2cbb242a3971/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs?ref=d375440dab2378dc3075755f388f2cbb242a3971", "patch": "@@ -5,7 +5,7 @@ use crate::method::probe::{IsSuggestion, Mode, ProbeScope};\n use rustc_ast::util::parser::{ExprPrecedence, PREC_POSTFIX};\n use rustc_errors::{Applicability, Diagnostic, MultiSpan};\n use rustc_hir as hir;\n-use rustc_hir::def::{CtorOf, DefKind};\n+use rustc_hir::def::{CtorKind, CtorOf, DefKind};\n use rustc_hir::lang_items::LangItem;\n use rustc_hir::{\n     Expr, ExprKind, GenericBound, Node, Path, QPath, Stmt, StmtKind, TyKind, WherePredicate,\n@@ -417,10 +417,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         } else if self.suggest_else_fn_with_closure(err, expr, found, expected) {\n             return true;\n         } else if self.suggest_fn_call(err, expr, found, |output| self.can_coerce(output, expected))\n-            && let ty::FnDef(def_id, ..) = &found.kind()\n-            && let Some(sp) = self.tcx.hir().span_if_local(*def_id)\n+            && let ty::FnDef(def_id, ..) = *found.kind()\n+            && let Some(sp) = self.tcx.hir().span_if_local(def_id)\n         {\n-            err.span_label(sp, format!(\"{found} defined here\"));\n+            let name = self.tcx.item_name(def_id);\n+            let kind = self.tcx.def_kind(def_id);\n+            if let DefKind::Ctor(of, CtorKind::Fn) = kind {\n+                err.span_label(sp, format!(\"`{name}` defines {} constructor here, which should be called\", match of {\n+                    CtorOf::Struct => \"a struct\",\n+                    CtorOf::Variant => \"an enum variant\",\n+                }));\n+            } else {\n+                let descr = kind.descr(def_id);\n+                err.span_label(sp, format!(\"{descr} `{name}` defined here\"));\n+            }\n             return true;\n         } else if self.check_for_cast(err, expr, found, expected, expected_ty_expr) {\n             return true;"}, {"sha": "b50eac05c6bcc9a03a615b7294653654c702a8c0", "filename": "tests/ui/associated-types/substs-ppaux.normal.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fassociated-types%2Fsubsts-ppaux.normal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fassociated-types%2Fsubsts-ppaux.normal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fsubsts-ppaux.normal.stderr?ref=d375440dab2378dc3075755f388f2cbb242a3971", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:16:17\n    |\n LL |     fn bar<'a, T>() where T: 'a {}\n-   |     --------------------------- fn() {<i8 as Foo<'static, 'static, u8>>::bar::<'static, char>} defined here\n+   |     --------------------------- associated function `bar` defined here\n ...\n LL |     let x: () = <i8 as Foo<'static, 'static,  u8>>::bar::<'static, char>;\n    |            --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found fn item\n@@ -20,7 +20,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:25:17\n    |\n LL |     fn bar<'a, T>() where T: 'a {}\n-   |     --------------------------- fn() {<i8 as Foo<'static, 'static>>::bar::<'static, char>} defined here\n+   |     --------------------------- associated function `bar` defined here\n ...\n LL |     let x: () = <i8 as Foo<'static, 'static,  u32>>::bar::<'static, char>;\n    |            --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found fn item\n@@ -38,7 +38,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:33:17\n    |\n LL |     fn baz() {}\n-   |     -------- fn() {<i8 as Foo<'static, 'static, u8>>::baz} defined here\n+   |     -------- associated function `baz` defined here\n ...\n LL |     let x: () = <i8 as Foo<'static, 'static,  u8>>::baz;\n    |            --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found fn item\n@@ -56,7 +56,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:41:17\n    |\n LL | fn foo<'z>() where &'z (): Sized {\n-   | -------------------------------- fn() {foo::<'static>} defined here\n+   | -------------------------------- function `foo` defined here\n ...\n LL |     let x: () = foo::<'static>;\n    |            --   ^^^^^^^^^^^^^^ expected `()`, found fn item"}, {"sha": "a81924d8b3c582e18aecda18e70d0e9d4d28bc61", "filename": "tests/ui/associated-types/substs-ppaux.verbose.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fassociated-types%2Fsubsts-ppaux.verbose.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fassociated-types%2Fsubsts-ppaux.verbose.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fsubsts-ppaux.verbose.stderr?ref=d375440dab2378dc3075755f388f2cbb242a3971", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:16:17\n    |\n LL |     fn bar<'a, T>() where T: 'a {}\n-   |     --------------------------- fn() {<i8 as Foo<ReStatic, ReStatic, u8>>::bar::<ReStatic, char>} defined here\n+   |     --------------------------- associated function `bar` defined here\n ...\n LL |     let x: () = <i8 as Foo<'static, 'static,  u8>>::bar::<'static, char>;\n    |            --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found fn item\n@@ -20,7 +20,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:25:17\n    |\n LL |     fn bar<'a, T>() where T: 'a {}\n-   |     --------------------------- fn() {<i8 as Foo<ReStatic, ReStatic>>::bar::<ReStatic, char>} defined here\n+   |     --------------------------- associated function `bar` defined here\n ...\n LL |     let x: () = <i8 as Foo<'static, 'static,  u32>>::bar::<'static, char>;\n    |            --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found fn item\n@@ -38,7 +38,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:33:17\n    |\n LL |     fn baz() {}\n-   |     -------- fn() {<i8 as Foo<ReStatic, ReStatic, u8>>::baz} defined here\n+   |     -------- associated function `baz` defined here\n ...\n LL |     let x: () = <i8 as Foo<'static, 'static,  u8>>::baz;\n    |            --   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found fn item\n@@ -56,7 +56,7 @@ error[E0308]: mismatched types\n   --> $DIR/substs-ppaux.rs:41:17\n    |\n LL | fn foo<'z>() where &'z (): Sized {\n-   | -------------------------------- fn() {foo::<ReStatic>} defined here\n+   | -------------------------------- function `foo` defined here\n ...\n LL |     let x: () = foo::<'static>;\n    |            --   ^^^^^^^^^^^^^^ expected `()`, found fn item"}, {"sha": "d600e934bd5775d2d543935f26df470c4e31caa6", "filename": "tests/ui/issues/issue-35241.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fissues%2Fissue-35241.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fissues%2Fissue-35241.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-35241.stderr?ref=d375440dab2378dc3075755f388f2cbb242a3971", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-35241.rs:3:20\n    |\n LL | struct Foo(u32);\n-   | ---------- fn(u32) -> Foo {Foo} defined here\n+   | ---------- `Foo` defines a struct constructor here, which should be called\n LL |\n LL | fn test() -> Foo { Foo }\n    |              ---   ^^^ expected struct `Foo`, found struct constructor"}, {"sha": "a24fe4d23ea2547e63c99936b3408afeb0db1a53", "filename": "tests/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=d375440dab2378dc3075755f388f2cbb242a3971", "patch": "@@ -264,7 +264,7 @@ error[E0308]: mismatched types\n   --> $DIR/privacy-enum-ctor.rs:27:20\n    |\n LL |             Fn(u8),\n-   |             -- fn(u8) -> Z {Z::Fn} defined here\n+   |             -- `Fn` defines an enum variant constructor here, which should be called\n ...\n LL |         let _: Z = Z::Fn;\n    |                -   ^^^^^ expected enum `Z`, found enum constructor\n@@ -305,7 +305,7 @@ error[E0308]: mismatched types\n   --> $DIR/privacy-enum-ctor.rs:43:16\n    |\n LL |         Fn(u8),\n-   |         -- fn(u8) -> E {E::Fn} defined here\n+   |         -- `Fn` defines an enum variant constructor here, which should be called\n ...\n LL |     let _: E = m::E::Fn;\n    |            -   ^^^^^^^^ expected enum `E`, found enum constructor\n@@ -346,7 +346,7 @@ error[E0308]: mismatched types\n   --> $DIR/privacy-enum-ctor.rs:51:16\n    |\n LL |         Fn(u8),\n-   |         -- fn(u8) -> E {E::Fn} defined here\n+   |         -- `Fn` defines an enum variant constructor here, which should be called\n ...\n LL |     let _: E = E::Fn;\n    |            -   ^^^^^ expected enum `E`, found enum constructor"}, {"sha": "4cbcd31fa5ec1f6e062f15791dedcc4e2fd3916b", "filename": "tests/ui/suggestions/fn-or-tuple-struct-without-args.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d375440dab2378dc3075755f388f2cbb242a3971/tests%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr?ref=d375440dab2378dc3075755f388f2cbb242a3971", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:29:20\n    |\n LL | fn foo(a: usize, b: usize) -> usize { a }\n-   | ----------------------------------- fn(usize, usize) -> usize {foo} defined here\n+   | ----------------------------------- function `foo` defined here\n ...\n LL |     let _: usize = foo;\n    |            -----   ^^^ expected `usize`, found fn item\n@@ -20,7 +20,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:30:16\n    |\n LL | struct S(usize, usize);\n-   | -------- fn(usize, usize) -> S {S} defined here\n+   | -------- `S` defines a struct constructor here, which should be called\n ...\n LL |     let _: S = S;\n    |            -   ^ expected struct `S`, found struct constructor\n@@ -38,7 +38,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:31:20\n    |\n LL | fn bar() -> usize { 42 }\n-   | ----------------- fn() -> usize {bar} defined here\n+   | ----------------- function `bar` defined here\n ...\n LL |     let _: usize = bar;\n    |            -----   ^^^ expected `usize`, found fn item\n@@ -56,7 +56,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:32:16\n    |\n LL | struct V();\n-   | -------- fn() -> V {V} defined here\n+   | -------- `V` defines a struct constructor here, which should be called\n ...\n LL |     let _: V = V;\n    |            -   ^ expected struct `V`, found struct constructor\n@@ -74,7 +74,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:33:20\n    |\n LL |     fn baz(x: usize, y: usize) -> usize { x }\n-   |     ----------------------------------- fn(usize, usize) -> usize {<_ as T>::baz} defined here\n+   |     ----------------------------------- associated function `baz` defined here\n ...\n LL |     let _: usize = T::baz;\n    |            -----   ^^^^^^ expected `usize`, found fn item\n@@ -92,7 +92,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:34:20\n    |\n LL |     fn bat(x: usize) -> usize { 42 }\n-   |     ------------------------- fn(usize) -> usize {<_ as T>::bat} defined here\n+   |     ------------------------- associated function `bat` defined here\n ...\n LL |     let _: usize = T::bat;\n    |            -----   ^^^^^^ expected `usize`, found fn item\n@@ -110,7 +110,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:35:16\n    |\n LL |     A(usize),\n-   |     - fn(usize) -> E {E::A} defined here\n+   |     - `A` defines an enum variant constructor here, which should be called\n ...\n LL |     let _: E = E::A;\n    |            -   ^^^^ expected enum `E`, found enum constructor\n@@ -134,7 +134,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:37:20\n    |\n LL |     fn baz(x: usize, y: usize) -> usize { x }\n-   |     ----------------------------------- fn(usize, usize) -> usize {<X as T>::baz} defined here\n+   |     ----------------------------------- associated function `baz` defined here\n ...\n LL |     let _: usize = X::baz;\n    |            -----   ^^^^^^ expected `usize`, found fn item\n@@ -152,7 +152,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:38:20\n    |\n LL |     fn bat(x: usize) -> usize { 42 }\n-   |     ------------------------- fn(usize) -> usize {<X as T>::bat} defined here\n+   |     ------------------------- associated function `bat` defined here\n ...\n LL |     let _: usize = X::bat;\n    |            -----   ^^^^^^ expected `usize`, found fn item\n@@ -170,7 +170,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:39:20\n    |\n LL |     fn bax(x: usize) -> usize { 42 }\n-   |     ------------------------- fn(usize) -> usize {<X as T>::bax} defined here\n+   |     ------------------------- associated function `bax` defined here\n ...\n LL |     let _: usize = X::bax;\n    |            -----   ^^^^^^ expected `usize`, found fn item\n@@ -188,7 +188,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:40:20\n    |\n LL |     fn bach(x: usize) -> usize;\n-   |     --------------------------- fn(usize) -> usize {<X as T>::bach} defined here\n+   |     --------------------------- associated function `bach` defined here\n ...\n LL |     let _: usize = X::bach;\n    |            -----   ^^^^^^^ expected `usize`, found fn item\n@@ -206,7 +206,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:41:20\n    |\n LL |     fn ban(&self) -> usize { 42 }\n-   |     ---------------------- for<'a> fn(&'a X) -> usize {<X as T>::ban} defined here\n+   |     ---------------------- associated function `ban` defined here\n ...\n LL |     let _: usize = X::ban;\n    |            -----   ^^^^^^ expected `usize`, found fn item\n@@ -224,7 +224,7 @@ error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:42:20\n    |\n LL |     fn bal(&self) -> usize;\n-   |     ----------------------- for<'a> fn(&'a X) -> usize {<X as T>::bal} defined here\n+   |     ----------------------- associated function `bal` defined here\n ...\n LL |     let _: usize = X::bal;\n    |            -----   ^^^^^^ expected `usize`, found fn item"}]}