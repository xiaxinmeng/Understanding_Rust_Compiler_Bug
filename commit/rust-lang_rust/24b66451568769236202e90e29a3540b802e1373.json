{"sha": "24b66451568769236202e90e29a3540b802e1373", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YjY2NDUxNTY4NzY5MjM2MjAyZTkwZTI5YTM1NDBiODAyZTEzNzM=", "commit": {"author": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-11-11T03:37:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-11T03:53:28Z"}, "message": "str: add escape()\n\nSigned-off-by: Elly Jones <elly@leptoquark.net>", "tree": {"sha": "43c293ea2b8b54c0b4be68638107e112131ff7da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43c293ea2b8b54c0b4be68638107e112131ff7da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24b66451568769236202e90e29a3540b802e1373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24b66451568769236202e90e29a3540b802e1373", "html_url": "https://github.com/rust-lang/rust/commit/24b66451568769236202e90e29a3540b802e1373", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24b66451568769236202e90e29a3540b802e1373/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee8b852fd9eb1b4acb4ee48714487c6b3b35e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee8b852fd9eb1b4acb4ee48714487c6b3b35e98", "html_url": "https://github.com/rust-lang/rust/commit/7ee8b852fd9eb1b4acb4ee48714487c6b3b35e98"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "2d76aa0017ddf8c4d1380cb5bc8eefee72d6874d", "filename": "src/lib/str.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/24b66451568769236202e90e29a3540b802e1373/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b66451568769236202e90e29a3540b802e1373/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=24b66451568769236202e90e29a3540b802e1373", "patch": "@@ -13,7 +13,8 @@ export eq, lteq, hash, is_empty, is_not_empty, is_whitespace, byte_len,\n        shift_byte, pop_byte,\n        unsafe_from_byte, unsafe_from_bytes, from_char, char_range_at,\n        str_from_cstr, sbuf, as_buf, push_byte, utf8_char_width, safe_slice,\n-       contains, iter_chars, loop_chars, loop_chars_sub;\n+       contains, iter_chars, loop_chars, loop_chars_sub,\n+       escape;\n \n native \"cdecl\" mod rustrt {\n     fn rust_str_push(&s: str, ch: u8);\n@@ -367,7 +368,7 @@ fn loop_chars(s: str, it: block(char) -> bool) -> bool{\n }\n \n /*\n-Function: loop_chars\n+Function: loop_chars_sub\n \n Loop through a substring, char by char\n \n@@ -928,3 +929,32 @@ unsafe fn str_from_cstr(cstr: sbuf) -> str {\n     ret res;\n }\n \n+/*\n+Function: escape_char\n+\n+Escapes a single character.\n+*/\n+fn escape_char(c: char) -> str {\n+    alt c {\n+        '\"' { \"\\\\\\\"\" }\n+        '\\\\' { \"\\\\\\\\\" }\n+// TODO: uncomment these when https://github.com/graydon/rust/issues/1170 is\n+// fixed.\n+//        '\\n' { \"\\\\n\" }\n+//        '\\t' { \"\\\\t\" }\n+//        '\\r' { \"\\\\r\" }\n+        '\\x00' to '\\x1f' { #fmt[\"\\\\x%02x\", c as uint] }\n+        v { from_char(c) }\n+    }\n+}\n+\n+/*\n+Function: escape\n+\n+Escapes special characters inside the string, making it safe for transfer.\n+*/\n+fn escape(s: str) -> str {\n+    let r = \"\";\n+    loop_chars(s, { |c| r += escape_char(c); true });\n+    r\n+}"}, {"sha": "cc23eb5bb1b6119cb58e8feab5450bbc8ccc4d36", "filename": "src/test/stdtest/str.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/24b66451568769236202e90e29a3540b802e1373/src%2Ftest%2Fstdtest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b66451568769236202e90e29a3540b802e1373/src%2Ftest%2Fstdtest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstr.rs?ref=24b66451568769236202e90e29a3540b802e1373", "patch": "@@ -328,3 +328,11 @@ fn iter_chars() {\n         i += 1;\n     }\n }\n+\n+#[test]\n+fn escape() {\n+    assert(str::escape(\"abcdef\") == \"abcdef\");\n+    assert(str::escape(\"abc\\\\def\") == \"abc\\\\\\\\def\");\n+    assert(str::escape(\"abc\\ndef\") == \"abc\\\\x0adef\");\n+    assert(str::escape(\"abc\\\"def\") == \"abc\\\\\\\"def\");\n+}"}]}