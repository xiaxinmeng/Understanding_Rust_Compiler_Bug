{"sha": "280633a7283c21c6d95a556816bfb698845c34d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MDYzM2E3MjgzYzIxYzZkOTVhNTU2ODE2YmZiNjk4ODQ1YzM0ZDg=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-23T07:26:09Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-23T16:00:19Z"}, "message": "(core::str) do some replacements", "tree": {"sha": "cb24c5c8b458f8bbf7e2beb3a501c71b693c7d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb24c5c8b458f8bbf7e2beb3a501c71b693c7d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/280633a7283c21c6d95a556816bfb698845c34d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/280633a7283c21c6d95a556816bfb698845c34d8", "html_url": "https://github.com/rust-lang/rust/commit/280633a7283c21c6d95a556816bfb698845c34d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/280633a7283c21c6d95a556816bfb698845c34d8/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2756a61e3442c378d10cf4e3bee3d35392623cec", "url": "https://api.github.com/repos/rust-lang/rust/commits/2756a61e3442c378d10cf4e3bee3d35392623cec", "html_url": "https://github.com/rust-lang/rust/commit/2756a61e3442c378d10cf4e3bee3d35392623cec"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "d6b2cf8b0ec917a9ee05450135d04fb2b9a97925", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/280633a7283c21c6d95a556816bfb698845c34d8/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280633a7283c21c6d95a556816bfb698845c34d8/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=280633a7283c21c6d95a556816bfb698845c34d8", "patch": "@@ -286,8 +286,8 @@ fn check_variants_T<T: copy>(\n }\n \n fn last_part(filename: str) -> str {\n-  let ix = option::get(str::rindex_chars(filename, '/'));\n-  str::slice_chars(filename, ix + 1u, str::len_chars(filename) - 3u)\n+  let ix = option::get(str::rindex(filename, '/'));\n+  str::slice(filename, ix + 1u, str::len_bytes(filename) - 3u)\n }\n \n enum happiness { passed, cleanly_rejected(str), known_bug(str), failed(str), }"}, {"sha": "4f315541da2a2deeafe5b7d25a3300f7c20b1803", "filename": "src/libcore/str.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/280633a7283c21c6d95a556816bfb698845c34d8/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280633a7283c21c6d95a556816bfb698845c34d8/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=280633a7283c21c6d95a556816bfb698845c34d8", "patch": "@@ -36,6 +36,7 @@ export\n    bytes,\n    chars,\n    substr,\n+   slice,\n    slice_chars,\n    split,\n    split_str,\n@@ -72,8 +73,8 @@ export\n    index_chars,\n    byte_index,\n    byte_index_from,\n-   //rindex,\n-   rindex_chars,\n+   rindex,\n+   //rindex_chars,\n    find_chars,\n    find_bytes,\n    find_from_bytes,"}, {"sha": "167e0f125d6a3702be938551767f4b580b66a2ce", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/280633a7283c21c6d95a556816bfb698845c34d8/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280633a7283c21c6d95a556816bfb698845c34d8/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=280633a7283c21c6d95a556816bfb698845c34d8", "patch": "@@ -34,18 +34,18 @@ type path = str;\n \n fn splitDirnameBasename (pp: path) -> {dirname: str, basename: str} {\n     let ii;\n-    alt str::rindex_chars(pp, os_fs::path_sep) {\n+    alt str::rindex(pp, os_fs::path_sep) {\n         option::some(xx) { ii = xx; }\n         option::none {\n-            alt str::rindex_chars(pp, os_fs::alt_path_sep) {\n+            alt str::rindex(pp, os_fs::alt_path_sep) {\n                 option::some(xx) { ii = xx; }\n                 option::none { ret {dirname: \".\", basename: pp}; }\n             }\n         }\n     }\n \n-    ret {dirname: str::slice_chars(pp, 0u, ii),\n-         basename: str::slice_chars(pp, ii + 1u, str::len_chars(pp))};\n+    ret {dirname: str::slice(pp, 0u, ii),\n+         basename: str::slice(pp, ii + 1u, str::len_bytes(pp))};\n }\n \n /*"}]}