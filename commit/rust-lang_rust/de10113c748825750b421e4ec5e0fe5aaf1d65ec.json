{"sha": "de10113c748825750b421e4ec5e0fe5aaf1d65ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTAxMTNjNzQ4ODI1NzUwYjQyMWU0ZWM1ZTBmZTVhYWYxZDY1ZWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-15T07:26:46Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-15T07:55:31Z"}, "message": "Update tests\n\nAdd more patterns and types", "tree": {"sha": "2420d620ecc30a2473bd81e4f67ced9d1880329d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2420d620ecc30a2473bd81e4f67ced9d1880329d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de10113c748825750b421e4ec5e0fe5aaf1d65ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de10113c748825750b421e4ec5e0fe5aaf1d65ec", "html_url": "https://github.com/rust-lang/rust/commit/de10113c748825750b421e4ec5e0fe5aaf1d65ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de10113c748825750b421e4ec5e0fe5aaf1d65ec/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a6e9f689b09421b281e0e9dc4f014001097def8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a6e9f689b09421b281e0e9dc4f014001097def8", "html_url": "https://github.com/rust-lang/rust/commit/8a6e9f689b09421b281e0e9dc4f014001097def8"}], "stats": {"total": 119, "additions": 73, "deletions": 46}, "files": [{"sha": "3ca8aa52455f0626f580f98ca01fdad1b15539fb", "filename": "src/patterns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -265,6 +265,7 @@ pub fn can_be_overflowed_pat(context: &RewriteContext, pat: &TuplePatField, len:\n     match pat {\n         &TuplePatField::Pat(ref pat) => {\n             match pat.node {\n+                ast::PatKind::Path(..) |\n                 ast::PatKind::Tuple(..) |\n                 ast::PatKind::Struct(..) => context.use_block_indent() && len == 1,\n                 ast::PatKind::Ref(ref p, _) |"}, {"sha": "57a7b301f5423f87132904e9009fd6447ed72732", "filename": "src/types.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -802,7 +802,10 @@ pub fn join_bounds(context: &RewriteContext, shape: Shape, type_strs: &Vec<Strin\n \n pub fn can_be_overflowed_type(context: &RewriteContext, ty: &ast::Ty, len: usize) -> bool {\n     match ty.node {\n+        ast::TyKind::Path(..) |\n         ast::TyKind::Tup(..) => context.use_block_indent() && len == 1,\n+        ast::TyKind::Rptr(_, ref mutty) |\n+        ast::TyKind::Ptr(ref mutty) => can_be_overflowed_type(context, &*mutty.ty, len),\n         _ => false,\n     }\n }"}, {"sha": "47d8c6bf166f23cd4c239b6ac10ed3c0f9a8ea90", "filename": "tests/target/closure.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -128,18 +128,20 @@ fn issue470() {\n     {\n         {\n             {\n-                let explicit_arg_decls = explicit_arguments.into_iter().enumerate().map(|(index,\n-                  (ty,\n-                   pattern))| {\n-                    let lvalue = Lvalue::Arg(index as u32);\n-                    block = this.pattern(\n-                        block,\n-                        argument_extent,\n-                        hair::PatternRef::Hair(pattern),\n-                        &lvalue,\n-                    );\n-                    ArgDecl { ty: ty }\n-                });\n+                let explicit_arg_decls =\n+                    explicit_arguments.into_iter().enumerate().map(|(\n+                        index,\n+                        (ty, pattern),\n+                    )| {\n+                        let lvalue = Lvalue::Arg(index as u32);\n+                        block = this.pattern(\n+                            block,\n+                            argument_extent,\n+                            hair::PatternRef::Hair(pattern),\n+                            &lvalue,\n+                        );\n+                        ArgDecl { ty: ty }\n+                    });\n             }\n         }\n     }"}, {"sha": "7741939df459bf3b53fb612efd1b2321c560dd3e", "filename": "tests/target/expr.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -52,18 +52,22 @@ fn foo() -> bool {\n                           aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa)\n     {}\n \n-    if let (some_very_large,\n-            tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) = 1 + 2 + 3\n-    {\n-    }\n+    if let (\n+        some_very_large,\n+        tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple,\n+    ) = 1 + 2 + 3\n+    {}\n \n-    if let (some_very_large,\n-            tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) =\n-        1111 + 2222\n+    if let (\n+        some_very_large,\n+        tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple,\n+    ) = 1111 + 2222\n     {}\n \n-    if let (some_very_large,\n-            tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) = 1 + 2 + 3\n+    if let (\n+        some_very_large,\n+        tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple,\n+    ) = 1 + 2 + 3\n     {}\n \n     let test = if true { 5 } else { 3 };"}, {"sha": "68919b1039c8bc7c4e5422614f10c49345b40b8a", "filename": "tests/target/hard-tabs.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhard-tabs.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -21,8 +21,10 @@ fn main() {\n \n \tlet str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAa\";\n \n-\tif let (some_very_large,\n-\t        tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) = 1 + 2 + 3\n+\tif let (\n+\t\tsome_very_large,\n+\t\ttuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple,\n+\t) = 1 + 2 + 3\n \t{}\n \n \tif cond() {"}, {"sha": "7034740734614ebefb78ac967993620fd18d4cf1", "filename": "tests/target/issue-1021.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fissue-1021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fissue-1021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1021.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -6,11 +6,15 @@ fn main() {\n         S(.., true) => (),\n         S(..) => (),\n         S(_) => (),\n-        S(// ..\n-          ..) => (),\n-        S(// ..\n-          ..,\n-          true) => (),\n+        S(\n+            // ..\n+            ..\n+        ) => (),\n+        S(\n+            // ..\n+            ..,\n+            true,\n+        ) => (),\n     }\n \n     match y {\n@@ -19,10 +23,14 @@ fn main() {\n         (.., true) => (),\n         (..) => (),\n         (_,) => (),\n-        (// ..\n-         ..) => (),\n-        (// ..\n-         ..,\n-         true) => (),\n+        (\n+            // ..\n+            ..\n+        ) => (),\n+        (\n+            // ..\n+            ..,\n+            true,\n+        ) => (),\n     }\n }"}, {"sha": "1bfd1cd00413265db8c2e8dfce8a092945b3a465", "filename": "tests/target/issue-913.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fissue-913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fissue-913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-913.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -10,11 +10,13 @@ mod client {\n             };\n \n             let next_state = match self.state {\n-                State::V5(v5::State::Command(v5::comand::State::WriteVersion(ref mut response))) => {\n+                State::V5(\n+                    v5::State::Command(v5::comand::State::WriteVersion(ref mut response)),\n+                ) => {\n                     // The pattern cannot be formatted in a way that the match stays\n                     // within the column limit. The rewrite should therefore be\n                     // skipped.\n-                    let x =  dont . reformat . meeee();\n+                    let x = dont.reformat.meeee();\n                 }\n             };\n         }"}, {"sha": "d47e94b6464ed983ebf025036f31af307ed7b929", "filename": "tests/target/match.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -262,10 +262,12 @@ fn issue507() {\n \n fn issue508() {\n     match s.type_id() {\n-        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n-                    HTMLElementTypeId::HTMLCanvasElement))) => true,\n-        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n-                        HTMLElementTypeId::HTMLObjectElement))) => s.has_object_data(),\n+        Some(\n+            NodeTypeId::Element(ElementTypeId::HTMLElement(HTMLElementTypeId::HTMLCanvasElement)),\n+        ) => true,\n+        Some(\n+            NodeTypeId::Element(ElementTypeId::HTMLElement(HTMLElementTypeId::HTMLObjectElement)),\n+        ) => s.has_object_data(),\n         Some(NodeTypeId::Element(_)) => false,\n     }\n }"}, {"sha": "9f630f6dada602c626cb1158ec79047cdfbf120a", "filename": "tests/target/pattern-condense-wildcards.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fpattern-condense-wildcards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fpattern-condense-wildcards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpattern-condense-wildcards.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -7,10 +7,12 @@ fn main() {\n         Tup(_) => \"nah\",\n         Quad(_, _, x, _) => \" also no rewrite\",\n         Quad(x, ..) => \"condense me pls\",\n-        Weird(x,\n-              _,\n-              _,\n-              // dont condense before\n-              ..) => \"pls work\",\n+        Weird(\n+            x,\n+            _,\n+            _,\n+            // dont condense before\n+            ..\n+        ) => \"pls work\",\n     }\n }"}, {"sha": "39a8408a6301a4428c99859facfe8beea92f9843", "filename": "tests/target/pattern.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de10113c748825750b421e4ec5e0fe5aaf1d65ec/tests%2Ftarget%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpattern.rs?ref=de10113c748825750b421e4ec5e0fe5aaf1d65ec", "patch": "@@ -47,8 +47,9 @@ fn main() {\n impl<'a, 'b> ResolveGeneratedContentFragmentMutator<'a, 'b> {\n     fn mutate_fragment(&mut self, fragment: &mut Fragment) {\n         match **info {\n-            GeneratedContentInfo::ContentItem(ContentItem::Counter(ref counter_name,\n-                                                                   counter_style)) => {}\n+            GeneratedContentInfo::ContentItem(\n+                ContentItem::Counter(ref counter_name, counter_style),\n+            ) => {}\n         }\n     }\n }"}]}