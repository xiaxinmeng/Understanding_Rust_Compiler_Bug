{"sha": "2313d32c36db3cd29b34e5db99a8b1812ee52c04", "node_id": "C_kwDOAAsO6NoAKDIzMTNkMzJjMzZkYjNjZDI5YjM0ZTVkYjk5YThiMTgxMmVlNTJjMDQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-09T13:51:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-09T13:51:23Z"}, "message": "Rollup merge of #103933 - nicholasbishop:bishop-uefi-tier-2, r=JohnTitor\n\nPromote {aarch64,i686,x86_64}-unknown-uefi to Tier 2\n\nMCP: https://github.com/rust-lang/compiler-team/issues/555\n\nCC `@dvdhrm`", "tree": {"sha": "9cc3988b453d380b4ae11364b70f8452db11f705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc3988b453d380b4ae11364b70f8452db11f705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2313d32c36db3cd29b34e5db99a8b1812ee52c04", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJja7BbCRBK7hj4Ov3rIwAAad0IAAsWallPw+vJPrTOolkRUVe/\nLB2HxaAPkWrAcDK5uXKZI8EDTM6GzF0IUSh9l+eXB32Nj338y8N73CatqfIhd14P\nY6JZdg85eDIAkjOdtG9xh0OeXNUZXESrBZxHMhJSzO4/OwpdSuDnyBBQljgoQUr9\nFLZseS+6XdFy6lCeEsJuErQ71yoo7JRmkwzZ3b9IQw0TRJJ/rcbH3XLPZ/0hJvWD\nSRN5em8CLA2jiFlZPzNDptFuTnAIq3fcHJJi5623/LiAgkfiC5uZ88jOdJ1n2qgM\nFvovLnLbEFKrv30oHek9D47XJznNsnq2Xs8pJnmbo+T8Xfpcrs6PA3iE1l+OCBI=\n=D5Ay\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cc3988b453d380b4ae11364b70f8452db11f705\nparent 4b50fb3745a2c634de45df9e363a5c3abad52b0a\nparent 971a146e5547b0b4963480a880e22d138f1240de\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1668001883 +0530\ncommitter GitHub <noreply@github.com> 1668001883 +0530\n\nRollup merge of #103933 - nicholasbishop:bishop-uefi-tier-2, r=JohnTitor\n\nPromote {aarch64,i686,x86_64}-unknown-uefi to Tier 2\n\nMCP: https://github.com/rust-lang/compiler-team/issues/555\n\nCC `@dvdhrm`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2313d32c36db3cd29b34e5db99a8b1812ee52c04", "html_url": "https://github.com/rust-lang/rust/commit/2313d32c36db3cd29b34e5db99a8b1812ee52c04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2313d32c36db3cd29b34e5db99a8b1812ee52c04/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b50fb3745a2c634de45df9e363a5c3abad52b0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b50fb3745a2c634de45df9e363a5c3abad52b0a", "html_url": "https://github.com/rust-lang/rust/commit/4b50fb3745a2c634de45df9e363a5c3abad52b0a"}, {"sha": "971a146e5547b0b4963480a880e22d138f1240de", "url": "https://api.github.com/repos/rust-lang/rust/commits/971a146e5547b0b4963480a880e22d138f1240de", "html_url": "https://github.com/rust-lang/rust/commit/971a146e5547b0b4963480a880e22d138f1240de"}], "stats": {"total": 50, "additions": 17, "deletions": 33}, "files": [{"sha": "e1adabaac9b568b32723e98201603bc30187ff47", "filename": "src/ci/docker/host-x86_64/dist-various-2/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile?ref=2313d32c36db3cd29b34e5db99a8b1812ee52c04", "patch": "@@ -118,6 +118,9 @@ ENV TARGETS=$TARGETS,armv7-unknown-linux-gnueabi\n ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabi\n ENV TARGETS=$TARGETS,i686-unknown-freebsd\n ENV TARGETS=$TARGETS,x86_64-unknown-none\n+ENV TARGETS=$TARGETS,aarch64-unknown-uefi\n+ENV TARGETS=$TARGETS,i686-unknown-uefi\n+ENV TARGETS=$TARGETS,x86_64-unknown-uefi\n \n # As per https://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/1300211\n # we need asm in the search path for gcc-8 (for gnux32) but not in the search path of the"}, {"sha": "5b4e436da7d57cf522b66b72b62b4c633857949e", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=2313d32c36db3cd29b34e5db99a8b1812ee52c04", "patch": "@@ -128,6 +128,7 @@ target | std | notes\n [`aarch64-linux-android`](platform-support/android.md) | \u2713 | ARM64 Android\n `aarch64-unknown-none-softfloat` | * | Bare ARM64, softfloat\n `aarch64-unknown-none` | * | Bare ARM64, hardfloat\n+[`aarch64-unknown-uefi`](platform-support/unknown-uefi.md) | * | ARM64 UEFI\n [`arm-linux-androideabi`](platform-support/android.md) | \u2713 | ARMv7 Android\n `arm-unknown-linux-musleabi` | \u2713 | ARMv6 Linux with MUSL\n `arm-unknown-linux-musleabihf` | \u2713 | ARMv6 Linux with MUSL, hardfloat\n@@ -149,6 +150,7 @@ target | std | notes\n [`i686-linux-android`](platform-support/android.md) | \u2713 | 32-bit x86 Android\n `i686-unknown-freebsd` | \u2713 | 32-bit FreeBSD\n `i686-unknown-linux-musl` | \u2713 | 32-bit Linux with MUSL\n+[`i686-unknown-uefi`](platform-support/unknown-uefi.md) | * | 32-bit UEFI\n `mips-unknown-linux-musl` | \u2713 | MIPS Linux with MUSL\n `mips64-unknown-linux-muslabi64` | \u2713 | MIPS64 Linux, n64 ABI, MUSL\n `mips64el-unknown-linux-muslabi64` | \u2713 | MIPS64 (LE) Linux, n64 ABI, MUSL\n@@ -181,6 +183,7 @@ target | std | notes\n `x86_64-unknown-linux-gnux32` | \u2713 | 64-bit Linux (x32 ABI) (kernel 4.15, glibc 2.27)\n [`x86_64-unknown-none`](platform-support/x86_64-unknown-none.md) | * | Freestanding/bare-metal x86_64, softfloat\n `x86_64-unknown-redox` | \u2713 | Redox OS\n+[`x86_64-unknown-uefi`](platform-support/unknown-uefi.md) | * | 64-bit UEFI\n \n [Fortanix ABI]: https://edp.fortanix.com/\n \n@@ -213,7 +216,6 @@ target | std | host | notes\n [`aarch64-pc-windows-gnullvm`](platform-support/pc-windows-gnullvm.md) | \u2713 | \u2713 |\n `aarch64-unknown-freebsd` | \u2713 | \u2713 | ARM64 FreeBSD\n `aarch64-unknown-hermit` | \u2713 |  | ARM64 HermitCore\n-[`aarch64-unknown-uefi`](platform-support/unknown-uefi.md) | * |  | ARM64 UEFI\n `aarch64-unknown-linux-gnu_ilp32` | \u2713 | \u2713 | ARM64 Linux (ILP32 ABI)\n `aarch64-unknown-netbsd` | \u2713 | \u2713 |\n [`aarch64-unknown-openbsd`](platform-support/openbsd.md) | \u2713 | \u2713 | ARM64 OpenBSD\n@@ -252,7 +254,6 @@ target | std | host | notes\n `i686-unknown-haiku` | \u2713 | \u2713 | 32-bit Haiku\n `i686-unknown-netbsd` | \u2713 | \u2713 | NetBSD/i386 with SSE2\n [`i686-unknown-openbsd`](platform-support/openbsd.md) | \u2713 | \u2713 | 32-bit OpenBSD\n-[`i686-unknown-uefi`](platform-support/unknown-uefi.md) | * |  | 32-bit UEFI\n `i686-uwp-windows-gnu` | ? |  |\n `i686-uwp-windows-msvc` | ? |  |\n `i686-wrs-vxworks` | ? |  |\n@@ -311,7 +312,6 @@ target | std | host | notes\n `x86_64-unknown-l4re-uclibc` | ? |  |\n `x86_64-unknown-none-linuxkernel` | * |  | Linux kernel modules\n [`x86_64-unknown-openbsd`](platform-support/openbsd.md) | \u2713 | \u2713 | 64-bit OpenBSD\n-[`x86_64-unknown-uefi`](platform-support/unknown-uefi.md) | * |  | 64-bit UEFI\n `x86_64-uwp-windows-gnu` | \u2713 |  |\n `x86_64-uwp-windows-msvc` | \u2713 |  |\n `x86_64-wrs-vxworks` | ? |  |"}, {"sha": "e2bdf73a92990cc4879e44ad7cb3ab6118c8adf3", "filename": "src/doc/rustc/src/platform-support/unknown-uefi.md", "status": "modified", "additions": 8, "deletions": 30, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Funknown-uefi.md", "raw_url": "https://github.com/rust-lang/rust/raw/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Funknown-uefi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Funknown-uefi.md?ref=2313d32c36db3cd29b34e5db99a8b1812ee52c04", "patch": "@@ -1,6 +1,6 @@\n # `*-unknown-uefi`\n \n-**Tier: 3**\n+**Tier: 2**\n \n Unified Extensible Firmware Interface (UEFI) targets for application, driver,\n and core UEFI binaries.\n@@ -72,28 +72,14 @@ target = [\"x86_64-unknown-uefi\"]\n \n ## Building Rust programs\n \n-Rust does not yet ship pre-compiled artifacts for this target. To compile for\n-this target, you will either need to build Rust with the target enabled (see\n-\"Building rust for UEFI targets\" above), or build your own copy of `core` by\n-using `build-std`, `cargo-buildx`, or similar.\n-\n-A native build with the unstable `build-std`-feature can be achieved via:\n-\n-```sh\n-cargo +nightly build \\\n-    -Zbuild-std=core,compiler_builtins \\\n-    -Zbuild-std-features=compiler-builtins-mem \\\n-    --target x86_64-unknown-uefi\n-```\n-\n-Alternatively, you can install `cargo-xbuild` via\n-`cargo install --force cargo-xbuild` and build for the UEFI targets via:\n+Starting with Rust 1.67, precompiled artifacts are provided via\n+`rustup`. For example, to use `x86_64-unknown-uefi`:\n \n ```sh\n-cargo \\\n-    +nightly \\\n-    xbuild \\\n-    --target x86_64-unknown-uefi\n+# install cross-compile toolchain\n+rustup target add x86_64-unknown-uefi\n+# target flag may be used with any cargo or rustc command\n+cargo build --target x86_64-unknown-uefi\n ```\n \n ## Testing\n@@ -167,18 +153,10 @@ The following code is a valid UEFI application returning immediately upon\n execution with an exit code of 0. A panic handler is provided. This is executed\n by rust on panic. For simplicity, we simply end up in an infinite loop.\n \n-Note that as of rust-1.31.0, all features used here are stabilized. No unstable\n-features are required, nor do we rely on nightly compilers. However, if you do\n-not compile rustc for the UEFI targets, you need a nightly compiler to support\n-the `-Z build-std` flag.\n-\n This example can be compiled as binary crate via `cargo`:\n \n ```sh\n-cargo +nightly build \\\n-    -Zbuild-std=core,compiler_builtins \\\n-    -Zbuild-std-features=compiler-builtins-mem \\\n-    --target x86_64-unknown-uefi\n+cargo build --target x86_64-unknown-uefi\n ```\n \n ```rust,ignore (platform-specific,eh-personality-is-unstable)"}, {"sha": "0551e835bb0e75ec71288c34b5c894245d354f8a", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2313d32c36db3cd29b34e5db99a8b1812ee52c04/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=2313d32c36db3cd29b34e5db99a8b1812ee52c04", "patch": "@@ -60,6 +60,7 @@ static TARGETS: &[&str] = &[\n     \"aarch64-unknown-none\",\n     \"aarch64-unknown-none-softfloat\",\n     \"aarch64-unknown-redox\",\n+    \"aarch64-unknown-uefi\",\n     \"arm-linux-androideabi\",\n     \"arm-unknown-linux-gnueabi\",\n     \"arm-unknown-linux-gnueabihf\",\n@@ -95,6 +96,7 @@ static TARGETS: &[&str] = &[\n     \"i686-unknown-freebsd\",\n     \"i686-unknown-linux-gnu\",\n     \"i686-unknown-linux-musl\",\n+    \"i686-unknown-uefi\",\n     \"m68k-unknown-linux-gnu\",\n     \"mips-unknown-linux-gnu\",\n     \"mips-unknown-linux-musl\",\n@@ -151,6 +153,7 @@ static TARGETS: &[&str] = &[\n     \"x86_64-unknown-none\",\n     \"x86_64-unknown-redox\",\n     \"x86_64-unknown-hermit\",\n+    \"x86_64-unknown-uefi\",\n ];\n \n /// This allows the manifest to contain rust-docs for hosts that don't build"}]}