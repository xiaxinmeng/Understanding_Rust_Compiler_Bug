{"sha": "8318035726c9e2fc2bcb6055855969cb97512b69", "node_id": "C_kwDOAAsO6NoAKDgzMTgwMzU3MjZjOWUyZmMyYmNiNjA1NTg1NTk2OWNiOTc1MTJiNjk", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-20T13:05:02Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-20T13:05:02Z"}, "message": "Fix last few warnings manually", "tree": {"sha": "a3fcbe01138576aabd53adc931622243a325c2b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3fcbe01138576aabd53adc931622243a325c2b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8318035726c9e2fc2bcb6055855969cb97512b69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8318035726c9e2fc2bcb6055855969cb97512b69", "html_url": "https://github.com/rust-lang/rust/commit/8318035726c9e2fc2bcb6055855969cb97512b69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8318035726c9e2fc2bcb6055855969cb97512b69/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "816f7fe12a8584eb4bdd48ff3da8e4fc95f571a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/816f7fe12a8584eb4bdd48ff3da8e4fc95f571a0", "html_url": "https://github.com/rust-lang/rust/commit/816f7fe12a8584eb4bdd48ff3da8e4fc95f571a0"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "ac0fdf85a774ed7605c37a3f1b1a789e5e7fbff7", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=8318035726c9e2fc2bcb6055855969cb97512b69", "patch": "@@ -1277,7 +1277,7 @@ macro_rules! create_bool_or_string_de {\n             impl<'de> serde::de::Visitor<'de> for V {\n                 type Value = ();\n \n-                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+                fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {\n                     formatter.write_str(concat!(\n                         stringify!($bool),\n                         \" or \\\"\",\n@@ -1344,7 +1344,7 @@ macro_rules! named_unit_variant {\n             struct V;\n             impl<'de> serde::de::Visitor<'de> for V {\n                 type Value = ();\n-                fn expecting(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+                fn expecting(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n                     f.write_str(concat!(\"\\\"\", stringify!($variant), \"\\\"\"))\n                 }\n                 fn visit_str<E: serde::de::Error>(self, value: &str) -> Result<Self::Value, E> {\n@@ -1405,7 +1405,7 @@ where\n     impl<'de> serde::de::Visitor<'de> for SingleOrVec {\n         type Value = Vec<String>;\n \n-        fn expecting(&self, formatter: &mut std::fmt::Formatter) -> std::fmt::Result {\n+        fn expecting(&self, formatter: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n             formatter.write_str(\"string or array of strings\")\n         }\n "}, {"sha": "3fcfb4a1b08aacfb2791290d2164a013393e3cf0", "filename": "crates/rust-analyzer/src/diff.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Fdiff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Fdiff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiff.rs?ref=8318035726c9e2fc2bcb6055855969cb97512b69", "patch": "@@ -7,7 +7,7 @@ pub(crate) fn diff(left: &str, right: &str) -> TextEdit {\n     textedit_from_chunks(chunks)\n }\n \n-fn textedit_from_chunks(chunks: Vec<dissimilar::Chunk>) -> TextEdit {\n+fn textedit_from_chunks(chunks: Vec<dissimilar::Chunk<'_>>) -> TextEdit {\n     let mut builder = TextEdit::builder();\n     let mut pos = TextSize::default();\n "}, {"sha": "552379752fa64e46f65e32a4978ce5e379325539", "filename": "crates/rust-analyzer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flib.rs?ref=8318035726c9e2fc2bcb6055855969cb97512b69", "patch": "@@ -72,7 +72,7 @@ impl LspError {\n }\n \n impl fmt::Display for LspError {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"Language Server request failed with {}. ({})\", self.code, self.message)\n     }\n }"}, {"sha": "5845cf712c899d6dd578956bcea77d4a37a69968", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8318035726c9e2fc2bcb6055855969cb97512b69/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=8318035726c9e2fc2bcb6055855969cb97512b69", "patch": "@@ -75,8 +75,8 @@ pub(crate) enum PrimeCachesProgress {\n }\n \n impl fmt::Debug for Event {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        let debug_verbose_not = |not: &Notification, f: &mut fmt::Formatter| {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let debug_verbose_not = |not: &Notification, f: &mut fmt::Formatter<'_>| {\n             f.debug_struct(\"Notification\").field(\"method\", &not.method).finish()\n         };\n "}]}