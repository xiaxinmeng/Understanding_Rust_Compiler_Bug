{"sha": "60b7c2aaefebe2ea6819414ebaf6e374031fc76d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYjdjMmFhZWZlYmUyZWE2ODE5NDE0ZWJhZjZlMzc0MDMxZmM3NmQ=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-08-21T17:42:06Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-08-21T17:42:06Z"}, "message": "More inline asm register name fixups for LLVM\n\nFixes #75761", "tree": {"sha": "ceeee2f464d5417b5397d09ef24f59352369a61b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceeee2f464d5417b5397d09ef24f59352369a61b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60b7c2aaefebe2ea6819414ebaf6e374031fc76d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60b7c2aaefebe2ea6819414ebaf6e374031fc76d", "html_url": "https://github.com/rust-lang/rust/commit/60b7c2aaefebe2ea6819414ebaf6e374031fc76d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60b7c2aaefebe2ea6819414ebaf6e374031fc76d/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "521db88cd9f55ffaeda43df8c10387f74396fe67", "url": "https://api.github.com/repos/rust-lang/rust/commits/521db88cd9f55ffaeda43df8c10387f74396fe67", "html_url": "https://github.com/rust-lang/rust/commit/521db88cd9f55ffaeda43df8c10387f74396fe67"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "4fef94dde5f7a3f41dc60a31cceff88262bd3172", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/60b7c2aaefebe2ea6819414ebaf6e374031fc76d/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60b7c2aaefebe2ea6819414ebaf6e374031fc76d/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=60b7c2aaefebe2ea6819414ebaf6e374031fc76d", "patch": "@@ -479,10 +479,13 @@ fn reg_to_llvm(reg: InlineAsmRegOrRegClass, layout: Option<&TyAndLayout<'tcx>>)\n                         _ => unreachable!(),\n                     }\n                 } else {\n-                    // We use i32 as the type for discarded outputs\n-                    's'\n+                    // We use i64x2 as the type for discarded outputs\n+                    'q'\n                 };\n                 format!(\"{{{}{}}}\", class, idx)\n+            } else if reg == InlineAsmReg::AArch64(AArch64InlineAsmReg::x30) {\n+                // LLVM doesn't recognize x30\n+                \"lr\".to_string()\n             } else {\n                 format!(\"{{{}}}\", reg.name())\n             }"}]}