{"sha": "91f28e43a2686d0ac06f73b5fed11351aad428a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZjI4ZTQzYTI2ODZkMGFjMDZmNzNiNWZlZDExMzUxYWFkNDI4YTk=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-08T08:26:17Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-08T12:02:52Z"}, "message": "Fix expansion of format_args", "tree": {"sha": "14e5dfa7099cfbb2e80c865d16f573405a01aaad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e5dfa7099cfbb2e80c865d16f573405a01aaad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91f28e43a2686d0ac06f73b5fed11351aad428a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91f28e43a2686d0ac06f73b5fed11351aad428a9", "html_url": "https://github.com/rust-lang/rust/commit/91f28e43a2686d0ac06f73b5fed11351aad428a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91f28e43a2686d0ac06f73b5fed11351aad428a9/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "596e6db46c9c79b2b2be20a4b5461dca35d44b0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/596e6db46c9c79b2b2be20a4b5461dca35d44b0f", "html_url": "https://github.com/rust-lang/rust/commit/596e6db46c9c79b2b2be20a4b5461dca35d44b0f"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "ec5ace757c663767fe1f04eb5c251a6ef60037bc", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/91f28e43a2686d0ac06f73b5fed11351aad428a9/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f28e43a2686d0ac06f73b5fed11351aad428a9/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=91f28e43a2686d0ac06f73b5fed11351aad428a9", "patch": "@@ -208,15 +208,20 @@ fn format_args_expand(\n     _id: MacroCallId,\n     tt: &tt::Subtree,\n ) -> Result<tt::Subtree, mbe::ExpandError> {\n-    // We expand `format_args!(\"\", arg1, arg2)` to\n-    // `std::fmt::Arguments::new_v1(&[], &[&arg1, &arg2])`,\n+    // We expand `format_args!(\"\", a1, a2)` to\n+    // ```\n+    // std::fmt::Arguments::new_v1(&[], &[\n+    //   std::fmt::ArgumentV1::new(&arg1,std::fmt::Display::fmt),\n+    //   std::fmt::ArgumentV1::new(&arg2,std::fmt::Display::fmt),\n+    // ])\n+    // ```,\n     // which is still not really correct, but close enough for now\n     let mut args = Vec::new();\n     let mut current = Vec::new();\n     for tt in tt.token_trees.iter().cloned() {\n         match tt {\n             tt::TokenTree::Leaf(tt::Leaf::Punct(p)) if p.char == ',' => {\n-                args.push(tt::Subtree { delimiter: tt::Delimiter::None, token_trees: current });\n+                args.push(current);\n                 current = Vec::new();\n             }\n             _ => {\n@@ -225,13 +230,15 @@ fn format_args_expand(\n         }\n     }\n     if !current.is_empty() {\n-        args.push(tt::Subtree { delimiter: tt::Delimiter::None, token_trees: current });\n+        args.push(current);\n     }\n     if args.is_empty() {\n         return Err(mbe::ExpandError::NoMatchingRule);\n     }\n     let _format_string = args.remove(0);\n-    let arg_tts = args.into_iter().flat_map(|arg| (quote! { & #arg , }).token_trees);\n+    let arg_tts = args.into_iter().flat_map(|arg| {\n+        quote! { std::fmt::ArgumentV1::new(&(##arg), std::fmt::Display::fmt), }\n+    }.token_trees).collect::<Vec<_>>();\n     let expanded = quote! {\n         std::fmt::Arguments::new_v1(&[], &[##arg_tts])\n     };\n@@ -360,6 +367,6 @@ mod tests {\n             BuiltinFnLikeExpander::FormatArgs,\n         );\n \n-        assert_eq!(expanded, r#\"std::fmt::Arguments::new_v1(&[] ,&[&arg1(a,b,c),&arg2,])\"#);\n+        assert_eq!(expanded, r#\"std::fmt::Arguments::new_v1(&[] ,&[std::fmt::ArgumentV1::new(&(arg1(a,b,c)),std::fmt::Display::fmt),std::fmt::ArgumentV1::new(&(arg2),std::fmt::Display::fmt),])\"#);\n     }\n }"}, {"sha": "077b0beda69ec07f42974ae040f0faf542107349", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91f28e43a2686d0ac06f73b5fed11351aad428a9/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f28e43a2686d0ac06f73b5fed11351aad428a9/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=91f28e43a2686d0ac06f73b5fed11351aad428a9", "patch": "@@ -693,7 +693,6 @@ mod tests {\n         );\n     }\n \n-    #[should_panic] // currently failing because of expr mapping problems\n     #[test]\n     fn goto_through_format() {\n         check_goto("}]}