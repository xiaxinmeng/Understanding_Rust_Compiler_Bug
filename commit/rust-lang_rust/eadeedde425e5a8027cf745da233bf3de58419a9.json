{"sha": "eadeedde425e5a8027cf745da233bf3de58419a9", "node_id": "C_kwDOAAsO6NoAKGVhZGVlZGRlNDI1ZTVhODAyN2NmNzQ1ZGEyMzNiZjNkZTU4NDE5YTk", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-12-05T13:54:25Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-12-05T19:47:29Z"}, "message": "Handle uninit data in pthread_condattr_destroy", "tree": {"sha": "86d4e198b5e196fb3b4b7f0bab093abba2901edd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86d4e198b5e196fb3b4b7f0bab093abba2901edd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eadeedde425e5a8027cf745da233bf3de58419a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eadeedde425e5a8027cf745da233bf3de58419a9", "html_url": "https://github.com/rust-lang/rust/commit/eadeedde425e5a8027cf745da233bf3de58419a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eadeedde425e5a8027cf745da233bf3de58419a9/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e9cf62b894a1df015d8601d8a5ffb5f04b44827", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e9cf62b894a1df015d8601d8a5ffb5f04b44827", "html_url": "https://github.com/rust-lang/rust/commit/5e9cf62b894a1df015d8601d8a5ffb5f04b44827"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "abf52a94e7e7d0e927ce4e642f98aba6b4588000", "filename": "src/shims/posix/sync.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eadeedde425e5a8027cf745da233bf3de58419a9/src%2Fshims%2Fposix%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eadeedde425e5a8027cf745da233bf3de58419a9/src%2Fshims%2Fposix%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fsync.rs?ref=eadeedde425e5a8027cf745da233bf3de58419a9", "patch": "@@ -189,6 +189,14 @@ fn condattr_set_clock_id<'mir, 'tcx: 'mir>(\n     ecx.write_scalar_at_offset(attr_op, 0, clock_id, ecx.machine.layouts.i32)\n }\n \n+fn condattr_deinit_clock_id<'mir, 'tcx: 'mir>(\n+    ecx: &mut MiriEvalContext<'mir, 'tcx>,\n+    attr_op: &OpTy<'tcx, Tag>,\n+) -> InterpResult<'tcx, ()> {\n+    let layout = layout_of_maybe_uninit(ecx.tcx, ecx.machine.layouts.i32.ty);\n+    ecx.write_scalar_at_offset(attr_op, 0, ScalarMaybeUninit::Uninit, layout)\n+}\n+\n // pthread_cond_t\n \n // Our chosen memory layout for the emulated conditional variable (does not have\n@@ -652,7 +660,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     fn pthread_condattr_destroy(&mut self, attr_op: &OpTy<'tcx, Tag>) -> InterpResult<'tcx, i32> {\n         let this = self.eval_context_mut();\n \n-        condattr_set_clock_id(this, attr_op, ScalarMaybeUninit::Uninit)?;\n+        condattr_get_clock_id(this, attr_op)?.check_init()?;\n+\n+        condattr_deinit_clock_id(this, attr_op)?;\n \n         Ok(0)\n     }"}, {"sha": "44af51a3e8711661a478cb6b2f08da11c2bf9f96", "filename": "tests/compile-fail/sync/libc_pthread_condattr_double_destroy.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/eadeedde425e5a8027cf745da233bf3de58419a9/tests%2Fcompile-fail%2Fsync%2Flibc_pthread_condattr_double_destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eadeedde425e5a8027cf745da233bf3de58419a9/tests%2Fcompile-fail%2Fsync%2Flibc_pthread_condattr_double_destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fsync%2Flibc_pthread_condattr_double_destroy.rs?ref=eadeedde425e5a8027cf745da233bf3de58419a9", "patch": "@@ -0,0 +1,19 @@\n+// ignore-windows: No libc on Windows\n+#![feature(rustc_private)]\n+\n+/// Test that destroying a pthread_condattr twice fails, even without a check for number validity\n+extern crate libc;\n+\n+fn main() {\n+    unsafe {\n+        use core::mem::MaybeUninit;\n+        let mut attr = MaybeUninit::<libc::pthread_condattr_t>::uninit();\n+\n+        libc::pthread_condattr_init(attr.as_mut_ptr());\n+\n+        libc::pthread_condattr_destroy(attr.as_mut_ptr());\n+\n+        libc::pthread_condattr_destroy(attr.as_mut_ptr());\n+        //~^ Undefined Behavior: using uninitialized data, but this operation requires initialized memory\n+    }\n+}"}, {"sha": "285c6014e2d930425576dd0be2f1bd1522660ef2", "filename": "tests/run-pass/concurrency/pthread_condattr_init.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eadeedde425e5a8027cf745da233bf3de58419a9/tests%2Frun-pass%2Fconcurrency%2Fpthread_condattr_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eadeedde425e5a8027cf745da233bf3de58419a9/tests%2Frun-pass%2Fconcurrency%2Fpthread_condattr_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fpthread_condattr_init.rs?ref=eadeedde425e5a8027cf745da233bf3de58419a9", "patch": "@@ -0,0 +1,20 @@\n+// ignore-windows: No libc on Windows\n+// compile-flags: -Zmiri-check-number-validity\n+\n+#![feature(rustc_private)]\n+\n+/// Test that pthread_condattr_destroy doesn't trigger a number validity error.\n+extern crate libc;\n+\n+fn main() {\n+    unsafe {\n+        use core::mem::MaybeUninit;\n+        let mut attr = MaybeUninit::<libc::pthread_condattr_t>::uninit();\n+\n+        let r = libc::pthread_condattr_init(attr.as_mut_ptr());\n+        assert_eq!(r, 0);\n+\n+        let r = libc::pthread_condattr_destroy(attr.as_mut_ptr());\n+        assert_eq!(r, 0);\n+    }\n+}"}]}