{"sha": "469fd526338492f66b14c64b151eb058fe1e70a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OWZkNTI2MzM4NDkyZjY2YjE0YzY0YjE1MWViMDU4ZmUxZTcwYTI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-07-12T20:13:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-12T20:13:48Z"}, "message": "Merge pull request #1787 from euclio/errors\n\nassert no errors on formatting test source", "tree": {"sha": "8c8a19551994ee199aa39e864dd59b77e0f5b04f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c8a19551994ee199aa39e864dd59b77e0f5b04f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469fd526338492f66b14c64b151eb058fe1e70a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469fd526338492f66b14c64b151eb058fe1e70a2", "html_url": "https://github.com/rust-lang/rust/commit/469fd526338492f66b14c64b151eb058fe1e70a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469fd526338492f66b14c64b151eb058fe1e70a2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69bdc86580ee82d0709790b46043fccaaabe4a77", "url": "https://api.github.com/repos/rust-lang/rust/commits/69bdc86580ee82d0709790b46043fccaaabe4a77", "html_url": "https://github.com/rust-lang/rust/commit/69bdc86580ee82d0709790b46043fccaaabe4a77"}, {"sha": "86d48981eedd4ae21886c43fdfd2565a6bc34d21", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d48981eedd4ae21886c43fdfd2565a6bc34d21", "html_url": "https://github.com/rust-lang/rust/commit/86d48981eedd4ae21886c43fdfd2565a6bc34d21"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "b22a22afd696f29ca452677d99c264e234b482c6", "filename": "tests/system.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/469fd526338492f66b14c64b151eb058fe1e70a2/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469fd526338492f66b14c64b151eb058fe1e70a2/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=469fd526338492f66b14c64b151eb058fe1e70a2", "patch": "@@ -35,8 +35,6 @@ fn get_path_string(dir_entry: io::Result<fs::DirEntry>) -> String {\n // to their equivalent in tests/target. The target file and config can be\n // overridden by annotations in the source file. The input and output must match\n // exactly.\n-// FIXME(#28) would be good to check for error messages and fail on them, or at\n-// least report.\n #[test]\n fn system_tests() {\n     // Get all files in the tests/source directory.\n@@ -240,10 +238,17 @@ fn read_config(filename: &str) -> Config {\n     config\n }\n \n-fn format_file<P: Into<PathBuf>>(filename: P, config: &Config) -> (FileMap, FormatReport) {\n-    let input = Input::File(filename.into());\n-    let (_error_summary, file_map, report) =\n+fn format_file<P: Into<PathBuf>>(filepath: P, config: &Config) -> (FileMap, FormatReport) {\n+    let filepath = filepath.into();\n+    let display_path = filepath.display().to_string();\n+    let input = Input::File(filepath);\n+    let (error_summary, file_map, report) =\n         format_input::<io::Stdout>(input, &config, None).unwrap();\n+    assert!(\n+        error_summary.has_no_errors(),\n+        \"Encountered errors formatting {}\",\n+        display_path\n+    );\n     return (file_map, report);\n }\n "}]}