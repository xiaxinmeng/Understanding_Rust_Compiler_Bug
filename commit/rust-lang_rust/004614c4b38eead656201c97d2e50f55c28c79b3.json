{"sha": "004614c4b38eead656201c97d2e50f55c28c79b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNDYxNGM0YjM4ZWVhZDY1NjIwMWM5N2QyZTUwZjU1YzI4Yzc5YjM=", "commit": {"author": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2021-05-21T16:09:07Z"}, "committer": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2021-05-21T16:09:07Z"}, "message": "native lib: defer the duplicate check after relevant_lib check.", "tree": {"sha": "c87278508efc80af2730f995e088a55794870483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c87278508efc80af2730f995e088a55794870483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/004614c4b38eead656201c97d2e50f55c28c79b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEERq7VLWSlisBf3CZ8l3hfrfOKl9wFAmCn2yMACgkQl3hfrfOK\nl9xxtBAAixg7usFjQhOwcfItZD266jG39v2WszgB9KS9T3NA8fyrbizxPvoqAO26\n/PsgyBnv6C1kk3rk2iaq0x5XW6hzRRnGgDkrLf2F8iusgIJ7pPDOaznMAqJ0eKY4\nh6jeH9SZ69NWRr/Kx3ous84gtJbUVuEJfHPhk42NCk/HsASEs2aoTbpZp4j+qGt4\nqkWq07BfwU5h9GVvhyvq/PMuY2RGlGJTeWgvF9NkUskUr0LvHGcnlNEx6kC9yV0w\nSwZjno0c1DcwFaAmxHHkJ3H/LXh+MH0ExAnwLOZmevpT3lmfeNMj8MfO5JsKZ/SU\n76HqWcYBPbjjLpacY97M4xEYRCzSeLFHM9rx8ZUMv8+SWD2uuHDt9DBJfrRP6+d3\nxRbDhxpZ9EpxSLp//Yvy1cCjlN+NG3+jVrfcVdXCjlSTSjKHYsriPaPzsnp2kWK3\nOSwysK5/ulIUfk7QoOS5nnd8y/wIHEonJNpWecSR7V3oBXiX7fcrObjbth3xpCJk\nsZwpYBhpZVr6hhwMCudjov6yoxgj3DSA17UMhvZsnJQp4RhrhDNKK23NJbRCHAaZ\niddUs4Y8V6k1rU8ttI5Ix/KAClGND9YiRPv7Kg6ZffEQyQ4KuyLYPV1SMD1gpAQr\nvU3YR6yKi0G66IIFFhFVD42HO3gvxvIqzHdR/lrpf0H7MwwqCuY=\n=27QM\n-----END PGP SIGNATURE-----", "payload": "tree c87278508efc80af2730f995e088a55794870483\nparent fc81ad22c453776de16acf9938976930cf8c9401\nauthor 12101111 <w12101111@gmail.com> 1621613347 +0800\ncommitter 12101111 <w12101111@gmail.com> 1621613347 +0800\n\nnative lib: defer the duplicate check after relevant_lib check.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/004614c4b38eead656201c97d2e50f55c28c79b3", "html_url": "https://github.com/rust-lang/rust/commit/004614c4b38eead656201c97d2e50f55c28c79b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/004614c4b38eead656201c97d2e50f55c28c79b3/comments", "author": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc81ad22c453776de16acf9938976930cf8c9401", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc81ad22c453776de16acf9938976930cf8c9401", "html_url": "https://github.com/rust-lang/rust/commit/fc81ad22c453776de16acf9938976930cf8c9401"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "32275e9b073481d97b4b7c41fc960ac500743fc8", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/004614c4b38eead656201c97d2e50f55c28c79b3/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004614c4b38eead656201c97d2e50f55c28c79b3/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=004614c4b38eead656201c97d2e50f55c28c79b3", "patch": "@@ -1805,13 +1805,14 @@ fn add_local_native_libraries(\n     let search_path = archive_search_paths(sess);\n     let mut last = (NativeLibKind::Unspecified, None);\n     for lib in relevant_libs {\n-        // Skip if this library is the same as the last.\n-        last = if (lib.kind, lib.name) == last { continue } else { (lib.kind, lib.name) };\n-\n         let name = match lib.name {\n             Some(l) => l,\n             None => continue,\n         };\n+\n+        // Skip if this library is the same as the last.\n+        last = if (lib.kind, lib.name) == last { continue } else { (lib.kind, lib.name) };\n+\n         let verbatim = lib.verbatim.unwrap_or(false);\n         match lib.kind {\n             NativeLibKind::Dylib { as_needed } => {\n@@ -2144,16 +2145,17 @@ fn add_upstream_native_libraries(\n     let mut last = (NativeLibKind::Unspecified, None);\n     for &(cnum, _) in crates {\n         for lib in codegen_results.crate_info.native_libraries[&cnum].iter() {\n-            // Skip if this library is the same as the last.\n-            last = if (lib.kind, lib.name) == last { continue } else { (lib.kind, lib.name) };\n-\n             let name = match lib.name {\n                 Some(l) => l,\n                 None => continue,\n             };\n             if !relevant_lib(sess, &lib) {\n                 continue;\n             }\n+\n+            // Skip if this library is the same as the last.\n+            last = if (lib.kind, lib.name) == last { continue } else { (lib.kind, lib.name) };\n+\n             let verbatim = lib.verbatim.unwrap_or(false);\n             match lib.kind {\n                 NativeLibKind::Dylib { as_needed } => {"}]}