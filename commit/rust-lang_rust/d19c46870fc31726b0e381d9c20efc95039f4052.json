{"sha": "d19c46870fc31726b0e381d9c20efc95039f4052", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxOWM0Njg3MGZjMzE3MjZiMGUzODFkOWMyMGVmYzk1MDM5ZjQwNTI=", "commit": {"author": {"name": "Chris Pardy", "email": "chrispardy36@gmail.com", "date": "2021-04-29T01:53:59Z"}, "committer": {"name": "Chris Pardy", "email": "chrispardy36@gmail.com", "date": "2021-05-01T23:01:06Z"}, "message": "add docstrings and add issue to FIXMEs", "tree": {"sha": "dbac682b32f4513b1ab72c60773d4973b0035556", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbac682b32f4513b1ab72c60773d4973b0035556"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d19c46870fc31726b0e381d9c20efc95039f4052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d19c46870fc31726b0e381d9c20efc95039f4052", "html_url": "https://github.com/rust-lang/rust/commit/d19c46870fc31726b0e381d9c20efc95039f4052", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d19c46870fc31726b0e381d9c20efc95039f4052/comments", "author": {"login": "ChrisPardy", "id": 25291724, "node_id": "MDQ6VXNlcjI1MjkxNzI0", "avatar_url": "https://avatars.githubusercontent.com/u/25291724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisPardy", "html_url": "https://github.com/ChrisPardy", "followers_url": "https://api.github.com/users/ChrisPardy/followers", "following_url": "https://api.github.com/users/ChrisPardy/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisPardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisPardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisPardy/subscriptions", "organizations_url": "https://api.github.com/users/ChrisPardy/orgs", "repos_url": "https://api.github.com/users/ChrisPardy/repos", "events_url": "https://api.github.com/users/ChrisPardy/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisPardy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisPardy", "id": 25291724, "node_id": "MDQ6VXNlcjI1MjkxNzI0", "avatar_url": "https://avatars.githubusercontent.com/u/25291724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisPardy", "html_url": "https://github.com/ChrisPardy", "followers_url": "https://api.github.com/users/ChrisPardy/followers", "following_url": "https://api.github.com/users/ChrisPardy/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisPardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisPardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisPardy/subscriptions", "organizations_url": "https://api.github.com/users/ChrisPardy/orgs", "repos_url": "https://api.github.com/users/ChrisPardy/repos", "events_url": "https://api.github.com/users/ChrisPardy/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisPardy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e612f7abfcab0789fe3acdd206643f726a6303c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e612f7abfcab0789fe3acdd206643f726a6303c9", "html_url": "https://github.com/rust-lang/rust/commit/e612f7abfcab0789fe3acdd206643f726a6303c9"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "f9da80f1bf74e3f8c99530df7e008f005256e984", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d19c46870fc31726b0e381d9c20efc95039f4052/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19c46870fc31726b0e381d9c20efc95039f4052/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=d19c46870fc31726b0e381d9c20efc95039f4052", "patch": "@@ -2378,7 +2378,7 @@ impl<'tcx> Debug for Rvalue<'tcx> {\n                             };\n                             let mut struct_fmt = fmt.debug_struct(&name);\n \n-                            // FIXME: This should be a list of capture names/places\n+                            // FIXME(project-rfc-2229#48): This should be a list of capture names/places\n                             if let Some(upvars) = tcx.upvars_mentioned(def_id) {\n                                 for (&var_id, place) in iter::zip(upvars.keys(), places) {\n                                     let var_name = tcx.hir().name(var_id);\n@@ -2398,7 +2398,7 @@ impl<'tcx> Debug for Rvalue<'tcx> {\n                             let name = format!(\"[generator@{:?}]\", tcx.hir().span(hir_id));\n                             let mut struct_fmt = fmt.debug_struct(&name);\n \n-                            // FIXME: This should be a list of capture names/places\n+                            // FIXME(project-rfc-2229#48): This should be a list of capture names/places\n                             if let Some(upvars) = tcx.upvars_mentioned(def_id) {\n                                 for (&var_id, place) in iter::zip(upvars.keys(), places) {\n                                     let var_name = tcx.hir().name(var_id);"}, {"sha": "1bb8c7ebe5afd177473d556837f58f48da7eeece", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d19c46870fc31726b0e381d9c20efc95039f4052/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19c46870fc31726b0e381d9c20efc95039f4052/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=d19c46870fc31726b0e381d9c20efc95039f4052", "patch": "@@ -608,6 +608,7 @@ impl UseSpans<'_> {\n         }\n     }\n \n+    /// Returns the span of `self`, in the case of a `ClosureUse` returns the `path_span`\n     pub(super) fn var_or_use_path_span(self) -> Span {\n         match self {\n             UseSpans::ClosureUse { path_span: span, .. }\n@@ -620,6 +621,7 @@ impl UseSpans<'_> {\n         }\n     }\n \n+    /// Returns the span of `self`, in the case of a `ClosureUse` returns the `capture_kind_span`\n     pub(super) fn var_or_use(self) -> Span {\n         match self {\n             UseSpans::ClosureUse { capture_kind_span: span, .. }"}, {"sha": "8665ef06126a1b395c80fc8d71cbbc4e13b5352e", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d19c46870fc31726b0e381d9c20efc95039f4052/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19c46870fc31726b0e381d9c20efc95039f4052/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=d19c46870fc31726b0e381d9c20efc95039f4052", "patch": "@@ -385,7 +385,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n \n         diag.span_label(*span, message);\n \n-        // FIXME: This should store a captured_place not a hir id\n+        // FIXME(project-rfc-2229#48): This should store a captured_place not a hir id\n         if let ReturnConstraint::ClosureUpvar(upvar) = kind {\n             let def_id = match self.regioncx.universal_regions().defining_ty {\n                 DefiningTy::Closure(def_id, _) => def_id,"}]}