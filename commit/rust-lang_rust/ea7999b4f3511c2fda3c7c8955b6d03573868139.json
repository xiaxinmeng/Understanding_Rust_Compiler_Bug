{"sha": "ea7999b4f3511c2fda3c7c8955b6d03573868139", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNzk5OWI0ZjM1MTFjMmZkYTNjN2M4OTU1YjZkMDM1NzM4NjgxMzk=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-22T12:15:02Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-04T05:29:06Z"}, "message": "tests: add tests for lifetime and const params of opaque types.", "tree": {"sha": "10ec2753ae19de8c69b74f9aee2d1bdd5714235d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10ec2753ae19de8c69b74f9aee2d1bdd5714235d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea7999b4f3511c2fda3c7c8955b6d03573868139", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea7999b4f3511c2fda3c7c8955b6d03573868139", "html_url": "https://github.com/rust-lang/rust/commit/ea7999b4f3511c2fda3c7c8955b6d03573868139", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea7999b4f3511c2fda3c7c8955b6d03573868139/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8807b00dd832d199c0e3b83f8311f0842545f528", "url": "https://api.github.com/repos/rust-lang/rust/commits/8807b00dd832d199c0e3b83f8311f0842545f528", "html_url": "https://github.com/rust-lang/rust/commit/8807b00dd832d199c0e3b83f8311f0842545f528"}], "stats": {"total": 121, "additions": 94, "deletions": 27}, "files": [{"sha": "4503607a836385cfd2072e0a3877b8e64eed2cdb", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.rs?ref=ea7999b4f3511c2fda3c7c8955b6d03573868139", "patch": "@@ -1,13 +1,26 @@\n-#![feature(type_alias_impl_trait)]\n+#![feature(type_alias_impl_trait, const_generics)]\n+#![allow(incomplete_features)]\n \n use std::fmt::Debug;\n \n fn main() {}\n \n // test that unused generic parameters are ok\n-type Two<T, U> = impl Debug;\n+type TwoTys<T, U> = impl Debug;\n+type TwoLifetimes<'a, 'b> = impl Debug;\n+type TwoConsts<const X: usize, const Y: usize> = impl Debug;\n \n-fn one<T: Debug>(t: T) -> Two<T, T> {\n+fn one_ty<T: Debug>(t: T) -> TwoTys<T, T> {\n+//~^ ERROR non-defining opaque type use in defining scope\n+    t\n+}\n+\n+fn one_lifetime<'a>(t: &'a u32) -> TwoLifetimes<'a, 'a> {\n+//~^ ERROR non-defining opaque type use in defining scope\n+    t\n+}\n+\n+fn one_const<const N: usize>(t: *mut [u8; N]) -> TwoConsts<N, N> {\n //~^ ERROR non-defining opaque type use in defining scope\n     t\n }"}, {"sha": "b4757e2763d0699d2503f5b0e3ca894fa222a616", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use.stderr", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.stderr?ref=ea7999b4f3511c2fda3c7c8955b6d03573868139", "patch": "@@ -1,14 +1,38 @@\n error: non-defining opaque type use in defining scope\n-  --> $DIR/generic_duplicate_param_use.rs:10:27\n+  --> $DIR/generic_duplicate_param_use.rs:13:30\n    |\n-LL | fn one<T: Debug>(t: T) -> Two<T, T> {\n-   |                           ^^^^^^^^^\n+LL | fn one_ty<T: Debug>(t: T) -> TwoTys<T, T> {\n+   |                              ^^^^^^^^^^^^\n    |\n note: type used multiple times\n-  --> $DIR/generic_duplicate_param_use.rs:8:10\n+  --> $DIR/generic_duplicate_param_use.rs:9:13\n    |\n-LL | type Two<T, U> = impl Debug;\n-   |          ^  ^\n+LL | type TwoTys<T, U> = impl Debug;\n+   |             ^  ^\n \n-error: aborting due to previous error\n+error: non-defining opaque type use in defining scope\n+  --> $DIR/generic_duplicate_param_use.rs:18:36\n+   |\n+LL | fn one_lifetime<'a>(t: &'a u32) -> TwoLifetimes<'a, 'a> {\n+   |                                    ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lifetime used multiple times\n+  --> $DIR/generic_duplicate_param_use.rs:10:19\n+   |\n+LL | type TwoLifetimes<'a, 'b> = impl Debug;\n+   |                   ^^  ^^\n+\n+error: non-defining opaque type use in defining scope\n+  --> $DIR/generic_duplicate_param_use.rs:23:50\n+   |\n+LL | fn one_const<const N: usize>(t: *mut [u8; N]) -> TwoConsts<N, N> {\n+   |                                                  ^^^^^^^^^^^^^^^\n+   |\n+note: constant used multiple times\n+  --> $DIR/generic_duplicate_param_use.rs:11:22\n+   |\n+LL | type TwoConsts<const X: usize, const Y: usize> = impl Debug;\n+   |                      ^               ^\n+\n+error: aborting due to 3 previous errors\n "}, {"sha": "b1782120f84cc10b3fa900bfda29c762a12fde9c", "filename": "src/test/ui/type-alias-impl-trait/generic_nondefining_use.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.rs?ref=ea7999b4f3511c2fda3c7c8955b6d03573868139", "patch": "@@ -1,12 +1,27 @@\n-#![feature(type_alias_impl_trait)]\n+#![feature(type_alias_impl_trait, const_generics)]\n+#![allow(incomplete_features)]\n+\n+use std::fmt::Debug;\n \n fn main() {}\n \n-type Cmp<T> = impl 'static;\n-//~^ ERROR: at least one trait must be specified\n+type OneTy<T> = impl Debug;\n+type OneLifetime<'a> = impl Debug;\n+type OneConst<const X: usize> = impl Debug;\n \n+// Not defining uses, because they doesn't define *all* possible generics.\n \n-// not a defining use, because it doesn't define *all* possible generics\n-fn cmp() -> Cmp<u32> { //~ ERROR non-defining opaque type use in defining scope\n+fn concrete_ty() -> OneTy<u32> {\n+//~^ ERROR non-defining opaque type use in defining scope\n     5u32\n }\n+\n+fn concrete_lifetime() -> OneLifetime<'static> {\n+//~^ ERROR non-defining opaque type use in defining scope\n+    6u32\n+}\n+\n+fn concrete_const() -> OneConst<{123}> {\n+//~^ ERROR non-defining opaque type use in defining scope\n+    7u32\n+}"}, {"sha": "b0ffc4a5ef61dc1a3025bbad04c348592f722b47", "filename": "src/test/ui/type-alias-impl-trait/generic_nondefining_use.stderr", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea7999b4f3511c2fda3c7c8955b6d03573868139/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr?ref=ea7999b4f3511c2fda3c7c8955b6d03573868139", "patch": "@@ -1,20 +1,35 @@\n-error: at least one trait must be specified\n-  --> $DIR/generic_nondefining_use.rs:5:15\n+error: non-defining opaque type use in defining scope\n+  --> $DIR/generic_nondefining_use.rs:14:21\n+   |\n+LL | fn concrete_ty() -> OneTy<u32> {\n+   |                     ^^^^^^^^^^\n+   |\n+note: used non-generic type `u32` for generic parameter\n+  --> $DIR/generic_nondefining_use.rs:8:12\n    |\n-LL | type Cmp<T> = impl 'static;\n-   |               ^^^^^^^^^^^^\n+LL | type OneTy<T> = impl Debug;\n+   |            ^\n \n error: non-defining opaque type use in defining scope\n-  --> $DIR/generic_nondefining_use.rs:10:13\n+  --> $DIR/generic_nondefining_use.rs:19:27\n    |\n-LL | fn cmp() -> Cmp<u32> {\n-   |             ^^^^^^^^\n+LL | type OneLifetime<'a> = impl Debug;\n+   |                  -- cannot use static lifetime; use a bound lifetime instead or remove the lifetime parameter from the opaque type\n+...\n+LL | fn concrete_lifetime() -> OneLifetime<'static> {\n+   |                           ^^^^^^^^^^^^^^^^^^^^\n+\n+error: non-defining opaque type use in defining scope\n+  --> $DIR/generic_nondefining_use.rs:24:24\n    |\n-note: used non-generic type `u32` for generic parameter\n-  --> $DIR/generic_nondefining_use.rs:5:10\n+LL | fn concrete_const() -> OneConst<{123}> {\n+   |                        ^^^^^^^^^^^^^^^\n+   |\n+note: used non-generic constant `123usize` for generic parameter\n+  --> $DIR/generic_nondefining_use.rs:10:21\n    |\n-LL | type Cmp<T> = impl 'static;\n-   |          ^\n+LL | type OneConst<const X: usize> = impl Debug;\n+   |                     ^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n "}]}