{"sha": "6d82ee839d105c5fe6a142aabbbc7e48f55ee195", "node_id": "C_kwDOAAsO6NoAKDZkODJlZTgzOWQxMDVjNWZlNmExNDJhYWJiYmM3ZTQ4ZjU1ZWUxOTU", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T03:01:31Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T20:07:42Z"}, "message": "Remove `GetDefId` impl for `FnRetTy`\n\nIt was only used in one place, so it seems better to use ordinary\nfunctions.", "tree": {"sha": "cff40e13f1ef26501547c0c71d69b915dafbf315", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cff40e13f1ef26501547c0c71d69b915dafbf315"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d82ee839d105c5fe6a142aabbbc7e48f55ee195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d82ee839d105c5fe6a142aabbbc7e48f55ee195", "html_url": "https://github.com/rust-lang/rust/commit/6d82ee839d105c5fe6a142aabbbc7e48f55ee195", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d82ee839d105c5fe6a142aabbbc7e48f55ee195/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1da8659fa6f4b73cd33885f7e0caeecd273a4e61", "url": "https://api.github.com/repos/rust-lang/rust/commits/1da8659fa6f4b73cd33885f7e0caeecd273a4e61", "html_url": "https://github.com/rust-lang/rust/commit/1da8659fa6f4b73cd33885f7e0caeecd273a4e61"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "c872d6480fef68a086f27ab4895526d4484580ca", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6d82ee839d105c5fe6a142aabbbc7e48f55ee195/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d82ee839d105c5fe6a142aabbbc7e48f55ee195/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=6d82ee839d105c5fe6a142aabbbc7e48f55ee195", "patch": "@@ -1370,17 +1370,10 @@ crate enum FnRetTy {\n     DefaultReturn,\n }\n \n-impl GetDefId for FnRetTy {\n-    fn def_id(&self) -> Option<DefId> {\n-        match *self {\n-            Return(ref ty) => ty.def_id(),\n-            DefaultReturn => None,\n-        }\n-    }\n-\n-    fn def_id_full(&self, cache: &Cache) -> Option<DefId> {\n-        match *self {\n-            Return(ref ty) => ty.def_id_full(cache),\n+impl FnRetTy {\n+    crate fn as_return(&self) -> Option<&Type> {\n+        match self {\n+            Return(ret) => Some(ret),\n             DefaultReturn => None,\n         }\n     }"}, {"sha": "a559d19d4f3d8d96f09d2ce3d8ebd986c3e67c55", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d82ee839d105c5fe6a142aabbbc7e48f55ee195/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d82ee839d105c5fe6a142aabbbc7e48f55ee195/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=6d82ee839d105c5fe6a142aabbbc7e48f55ee195", "patch": "@@ -1215,7 +1215,7 @@ fn should_render_item(item: &clean::Item, deref_mut_: bool, tcx: TyCtxt<'_>) ->\n fn notable_traits_decl(decl: &clean::FnDecl, cx: &Context<'_>) -> String {\n     let mut out = Buffer::html();\n \n-    if let Some(did) = decl.output.def_id_full(cx.cache()) {\n+    if let Some(did) = decl.output.as_return().and_then(|t| t.def_id_full(cx.cache())) {\n         if let Some(impls) = cx.cache().impls.get(&did) {\n             for i in impls {\n                 let impl_ = i.inner_impl();"}]}