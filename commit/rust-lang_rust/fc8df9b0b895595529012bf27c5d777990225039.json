{"sha": "fc8df9b0b895595529012bf27c5d777990225039", "node_id": "C_kwDOAAsO6NoAKGZjOGRmOWIwYjg5NTU5NTUyOTAxMmJmMjdjNWQ3Nzc5OTAyMjUwMzk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-26T04:14:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-26T04:14:07Z"}, "message": "Rollup merge of #90241 - DrMeepster:thiscall_lint_upgrade, r=petrochenkov\n\nMake thiscall abi on unsupported platforms a hard error\n\nAs suggested in https://github.com/rust-lang/rust/issues/42202#issuecomment-950205016, this PR makes use of the `thiscall` abi on unsupported a hard error instead of a lint.", "tree": {"sha": "63284f3190241ef1224284b273e574e7880779e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63284f3190241ef1224284b273e574e7880779e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc8df9b0b895595529012bf27c5d777990225039", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhd4CPCRBK7hj4Ov3rIwAABcoIAKyYf8QCs6I5frqkNoBvwi+U\nB2rMUtbrRONQhDS6WXrtr4MAsFyNlJBp1AjZtnbvxkpy992L1Lw/ISbKE7YycE7Z\nqsaRJoebWBfE5Cx8ChM8E6RE3Sbo057w+hz4Y96a/XiCX7rYNA4KgbgsNs9S+FlJ\nn7AH2gwyh65crqg1z9+LpvwWQ1tFCHa0wR5q70uiCigz/nAB1nmDNwkPdOsrZYxm\nFGy7RADnNlMgn8D5yRZ3SMKeJq5CRzTk+hDKtkgl64cSdWALQKNZRbUDtqatQ//R\n4Vm8gQEOB3XbVVxxqaga0ywue2IR6er6Nzu+5nHqMm0dJEthykpT5zIwV6G6KH4=\n=ERP5\n-----END PGP SIGNATURE-----\n", "payload": "tree 63284f3190241ef1224284b273e574e7880779e5\nparent b0df3af5c38a4e0cfd50160032949ae8f1b97b00\nparent a46daf050b863bc3d89e232a19c08f4bc015e92d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635221647 +0200\ncommitter GitHub <noreply@github.com> 1635221647 +0200\n\nRollup merge of #90241 - DrMeepster:thiscall_lint_upgrade, r=petrochenkov\n\nMake thiscall abi on unsupported platforms a hard error\n\nAs suggested in https://github.com/rust-lang/rust/issues/42202#issuecomment-950205016, this PR makes use of the `thiscall` abi on unsupported a hard error instead of a lint.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc8df9b0b895595529012bf27c5d777990225039", "html_url": "https://github.com/rust-lang/rust/commit/fc8df9b0b895595529012bf27c5d777990225039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc8df9b0b895595529012bf27c5d777990225039/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0df3af5c38a4e0cfd50160032949ae8f1b97b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0df3af5c38a4e0cfd50160032949ae8f1b97b00", "html_url": "https://github.com/rust-lang/rust/commit/b0df3af5c38a4e0cfd50160032949ae8f1b97b00"}, {"sha": "a46daf050b863bc3d89e232a19c08f4bc015e92d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a46daf050b863bc3d89e232a19c08f4bc015e92d", "html_url": "https://github.com/rust-lang/rust/commit/a46daf050b863bc3d89e232a19c08f4bc015e92d"}], "stats": {"total": 77, "additions": 32, "deletions": 45}, "files": [{"sha": "537a190211e553bb85a0ce2953266eb78b50ef3c", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fc8df9b0b895595529012bf27c5d777990225039/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc8df9b0b895595529012bf27c5d777990225039/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=fc8df9b0b895595529012bf27c5d777990225039", "patch": "@@ -1522,6 +1522,7 @@ impl Target {\n             AmdGpuKernel => self.arch == \"amdgcn\",\n             AvrInterrupt | AvrNonBlockingInterrupt => self.arch == \"avr\",\n             Wasm => [\"wasm32\", \"wasm64\"].contains(&&self.arch[..]),\n+            Thiscall { .. } => self.arch == \"x86\",\n             // On windows these fall-back to platform native calling convention (C) when the\n             // architecture is not supported.\n             //\n@@ -1552,15 +1553,13 @@ impl Target {\n             // > convention is used.\n             //\n             // -- https://docs.microsoft.com/en-us/cpp/cpp/argument-passing-and-naming-conventions\n-            Stdcall { .. } | Fastcall | Thiscall { .. } | Vectorcall if self.is_like_windows => {\n-                true\n-            }\n+            Stdcall { .. } | Fastcall | Vectorcall if self.is_like_windows => true,\n             // Outside of Windows we want to only support these calling conventions for the\n             // architectures for which these calling conventions are actually well defined.\n-            Stdcall { .. } | Fastcall | Thiscall { .. } if self.arch == \"x86\" => true,\n+            Stdcall { .. } | Fastcall if self.arch == \"x86\" => true,\n             Vectorcall if [\"x86\", \"x86_64\"].contains(&&self.arch[..]) => true,\n             // Return a `None` for other cases so that we know to emit a future compat lint.\n-            Stdcall { .. } | Fastcall | Thiscall { .. } | Vectorcall => return None,\n+            Stdcall { .. } | Fastcall | Vectorcall => return None,\n         })\n     }\n "}, {"sha": "a948947dbdb610df2e36d4d6193f6fc70f03d107", "filename": "src/test/ui/abi/unsupported.aarch64.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.aarch64.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.aarch64.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.aarch64.stderr?ref=fc8df9b0b895595529012bf27c5d777990225039", "patch": "@@ -40,25 +40,22 @@ error[E0570]: `\"x86-interrupt\"` is not a supported ABI for the current target\n LL | extern \"x86-interrupt\" fn x86() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: use of calling convention not supported on this target\n+error[E0570]: `\"thiscall\"` is not a supported ABI for the current target\n   --> $DIR/unsupported.rs:43:1\n    |\n-LL | extern \"stdcall\" fn stdcall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unsupported_calling_conventions)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n+LL | extern \"thiscall\" fn thiscall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of calling convention not supported on this target\n-  --> $DIR/unsupported.rs:50:1\n+  --> $DIR/unsupported.rs:47:1\n    |\n-LL | extern \"thiscall\" fn thiscall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | extern \"stdcall\" fn stdcall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: `#[warn(unsupported_calling_conventions)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n \n-error: aborting due to 7 previous errors; 2 warnings emitted\n+error: aborting due to 8 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0570`."}, {"sha": "297354c28289569d064fd1e0f42fd81e4b522aab", "filename": "src/test/ui/abi/unsupported.arm.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.arm.stderr?ref=fc8df9b0b895595529012bf27c5d777990225039", "patch": "@@ -34,25 +34,22 @@ error[E0570]: `\"x86-interrupt\"` is not a supported ABI for the current target\n LL | extern \"x86-interrupt\" fn x86() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: use of calling convention not supported on this target\n+error[E0570]: `\"thiscall\"` is not a supported ABI for the current target\n   --> $DIR/unsupported.rs:43:1\n    |\n-LL | extern \"stdcall\" fn stdcall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unsupported_calling_conventions)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n+LL | extern \"thiscall\" fn thiscall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of calling convention not supported on this target\n-  --> $DIR/unsupported.rs:50:1\n+  --> $DIR/unsupported.rs:47:1\n    |\n-LL | extern \"thiscall\" fn thiscall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | extern \"stdcall\" fn stdcall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: `#[warn(unsupported_calling_conventions)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n \n-error: aborting due to 6 previous errors; 2 warnings emitted\n+error: aborting due to 7 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0570`."}, {"sha": "6427a5695c0297c032f5d2601da51e91654b60cc", "filename": "src/test/ui/abi/unsupported.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.rs?ref=fc8df9b0b895595529012bf27c5d777990225039", "patch": "@@ -40,14 +40,11 @@ extern \"avr-interrupt\" fn avr() {}\n extern \"x86-interrupt\" fn x86() {}\n //[aarch64]~^ ERROR is not a supported ABI\n //[arm]~^^ ERROR is not a supported ABI\n-extern \"stdcall\" fn stdcall() {}\n-//[x64]~^ WARN use of calling convention not supported\n-//[x64]~^^ WARN this was previously accepted\n-//[aarch64]~^^^ WARN use of calling convention not supported\n-//[aarch64]~^^^^ WARN this was previously accepted\n-//[arm]~^^^^^ WARN use of calling convention not supported\n-//[arm]~^^^^^^ WARN this was previously accepted\n extern \"thiscall\" fn thiscall() {}\n+//[x64]~^ ERROR is not a supported ABI\n+//[aarch64]~^^ ERROR is not a supported ABI\n+//[arm]~^^^ ERROR is not a supported ABI\n+extern \"stdcall\" fn stdcall() {}\n //[x64]~^ WARN use of calling convention not supported\n //[x64]~^^ WARN this was previously accepted\n //[aarch64]~^^^ WARN use of calling convention not supported"}, {"sha": "49b88cd3fac939c559b2bfda5d4ad4fba8024aa3", "filename": "src/test/ui/abi/unsupported.x64.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.x64.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc8df9b0b895595529012bf27c5d777990225039/src%2Ftest%2Fui%2Fabi%2Funsupported.x64.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Funsupported.x64.stderr?ref=fc8df9b0b895595529012bf27c5d777990225039", "patch": "@@ -34,25 +34,22 @@ error[E0570]: `\"avr-interrupt\"` is not a supported ABI for the current target\n LL | extern \"avr-interrupt\" fn avr() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: use of calling convention not supported on this target\n+error[E0570]: `\"thiscall\"` is not a supported ABI for the current target\n   --> $DIR/unsupported.rs:43:1\n    |\n-LL | extern \"stdcall\" fn stdcall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unsupported_calling_conventions)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n+LL | extern \"thiscall\" fn thiscall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of calling convention not supported on this target\n-  --> $DIR/unsupported.rs:50:1\n+  --> $DIR/unsupported.rs:47:1\n    |\n-LL | extern \"thiscall\" fn thiscall() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | extern \"stdcall\" fn stdcall() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: `#[warn(unsupported_calling_conventions)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #87678 <https://github.com/rust-lang/rust/issues/87678>\n \n-error: aborting due to 6 previous errors; 2 warnings emitted\n+error: aborting due to 7 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0570`."}]}