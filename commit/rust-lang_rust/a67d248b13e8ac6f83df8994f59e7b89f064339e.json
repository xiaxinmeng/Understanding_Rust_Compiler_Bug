{"sha": "a67d248b13e8ac6f83df8994f59e7b89f064339e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2N2QyNDhiMTNlOGFjNmY4M2RmODk5NGY1OWU3Yjg5ZjA2NDMzOWU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-13T03:26:17Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-13T03:26:17Z"}, "message": "Properly encode spans with a dummy location and non-root `SyntaxContext`\n\nPreviously, we would throw away the `SyntaxContext` of any span with a\ndummy location during metadata encoding. This commit makes metadata Span\nencoding consistent with incr-cache Span encoding - an 'invalid span'\ntag is only used when it doesn't lose any information.", "tree": {"sha": "71a3a624d11b9bafb692710ac5adcc82264b6309", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71a3a624d11b9bafb692710ac5adcc82264b6309"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a67d248b13e8ac6f83df8994f59e7b89f064339e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl9dkaEACgkQtAh+UQ6Y\nsWRTuRAApW4NUzIIihqDDPKJRXa2+SY2X6e3O+lgBwt6LYbpLHp15eDrKRtj3CNR\npnxF5PIsddAouV84SwHUVxyKkOnfIoI+d10j6lN8n5aPrE4sIGVtkSloUFL616A1\nYpibUmbw80rfwswkvNgQBab/AkSitag1apuZHKll+gxhcn8IAceqliLDECvRKHio\n2nw8bF9PdzBO1EmjglXovBucwX7JyebFxkLIZT6UTRRAZMO1AY0fxqGe9xVDpT5z\neaUO2c5+tUMJZFA7nINNmjd2zIXblg3Qii0rXmWZG/ygut1VqlyFhNh8Sv84GWhn\nPqEGz5+Y/8G74V82BkiddbwdZ0tyYp8tKIDLUT++KgHYFZ3OojGl7F8SlSMkQF1X\n94cfaXLl6ZXQv52DucCM/2iKvu6QGW3ymMrFwZg6uyW7m6FpY59oe5EPXt7mB4Qa\nqno9i5pjcI8lpHaBMOMd2v0L7SHY6IaMQodz7Wc4061wbMMZES/rmjdi7QUXvayH\nlBaauJqi2C4VllxDRe0zc+J+rsbxQaWOIA1OZP4+yQ1P9jUSgfEGr2HA+YImrkTp\nv23OUhnIjXoIRAXilsv5G3/RFYrwPRdiCrVraIMTDlfgtAbvUp/RKZPMnZATTbBK\n6kvKoIsmbe9SvBtaae/Svlauh0royrah1ms+UZoSMWDlPjTtf3A=\n=TB67\n-----END PGP SIGNATURE-----", "payload": "tree 71a3a624d11b9bafb692710ac5adcc82264b6309\nparent 498dab02562a67d503fc1cf0eca0968f44cfecfa\nauthor Aaron Hill <aa1ronham@gmail.com> 1599967577 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1599967577 -0400\n\nProperly encode spans with a dummy location and non-root `SyntaxContext`\n\nPreviously, we would throw away the `SyntaxContext` of any span with a\ndummy location during metadata encoding. This commit makes metadata Span\nencoding consistent with incr-cache Span encoding - an 'invalid span'\ntag is only used when it doesn't lose any information.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a67d248b13e8ac6f83df8994f59e7b89f064339e", "html_url": "https://github.com/rust-lang/rust/commit/a67d248b13e8ac6f83df8994f59e7b89f064339e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a67d248b13e8ac6f83df8994f59e7b89f064339e/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498dab02562a67d503fc1cf0eca0968f44cfecfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/498dab02562a67d503fc1cf0eca0968f44cfecfa", "html_url": "https://github.com/rust-lang/rust/commit/498dab02562a67d503fc1cf0eca0968f44cfecfa"}], "stats": {"total": 318, "additions": 160, "deletions": 158}, "files": [{"sha": "1786969a88905c37b4ac9a4c81f173359339dbc5", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -162,7 +162,7 @@ impl<'a, 'tcx> Encodable<EncodeContext<'a, 'tcx>> for ExpnId {\n \n impl<'a, 'tcx> Encodable<EncodeContext<'a, 'tcx>> for Span {\n     fn encode(&self, s: &mut EncodeContext<'a, 'tcx>) -> opaque::EncodeResult {\n-        if self.is_dummy() {\n+        if *self == rustc_span::DUMMY_SP {\n             return TAG_INVALID_SPAN.encode(s);\n         }\n "}, {"sha": "0e7b429d621ff788ef901924f9d7b201120a14f3", "filename": "src/test/ui/proc-macro/capture-macro-rules-invoke.stdout", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -8,7 +8,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:36:24: 36:28 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:21:21: 21:26 (#3),\n+        span: $DIR/capture-macro-rules-invoke.rs:21:21: 21:26 (#4),\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): 1 + 1, { \"a\" }, let a = 1;, String, my_name, 'a, my_val = 30,\n@@ -37,12 +37,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:38:17: 38:18 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:14:29: 14:34 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:29: 14:34 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:14:34: 14:35 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:34: 14:35 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -60,12 +60,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:39:13: 39:20 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:14:36: 14:42 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:36: 14:42 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:14:42: 14:43 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:42: 14:43 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -90,12 +90,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:40:21: 40:22 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:14:44: 14:49 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:44: 14:49 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:14:49: 14:50 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:49: 14:50 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -105,12 +105,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:41:13: 41:19 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:14:51: 14:54 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:51: 14:54 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:14:54: 14:55 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:54: 14:55 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -120,12 +120,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:42:13: 42:20 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:14:56: 14:62 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:56: 14:62 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:14:62: 14:63 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:14:62: 14:63 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -140,12 +140,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:43:13: 43:15 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:15:29: 15:38 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:29: 15:38 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:15:38: 15:39 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:38: 15:39 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -166,12 +166,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:44:22: 44:24 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:15:40: 15:45 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:40: 15:45 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:15:45: 15:46 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:45: 15:46 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -209,12 +209,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:45:26: 45:32 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:15:47: 15:52 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:47: 15:52 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:15:52: 15:53 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:52: 15:53 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -252,12 +252,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:46:16: 46:31 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:15:54: 15:58 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:54: 15:58 (#8),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:15:58: 15:59 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:58: 15:59 (#8),\n     },\n     Group {\n         delimiter: Bracket,\n@@ -280,7 +280,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/capture-macro-rules-invoke.rs:15:63: 15:64 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:63: 15:64 (#8),\n     },\n     Group {\n         delimiter: None,\n@@ -297,7 +297,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:48:14: 48:16 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:15:65: 15:69 (#7),\n+        span: $DIR/capture-macro-rules-invoke.rs:15:65: 15:69 (#8),\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): (a, b)\n@@ -325,6 +325,6 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/capture-macro-rules-invoke.rs:52:26: 52:32 (#0),\n             },\n         ],\n-        span: $DIR/capture-macro-rules-invoke.rs:27:21: 27:25 (#11),\n+        span: $DIR/capture-macro-rules-invoke.rs:27:21: 27:25 (#12),\n     },\n ]"}, {"sha": "c0c9ed72c5ab98af71d8fda74eb57091dca6c129", "filename": "src/test/ui/proc-macro/dollar-crate-issue-57089.stdout", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -2,79 +2,79 @@ PRINT-BANG INPUT (DISPLAY): struct M($crate :: S) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/dollar-crate-issue-57089.rs:17:13: 17:19 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:17:13: 17:19 (#4),\n     },\n     Ident {\n         ident: \"M\",\n-        span: $DIR/dollar-crate-issue-57089.rs:17:20: 17:21 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:17:20: 17:21 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/dollar-crate-issue-57089.rs:17:22: 17:28 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:17:22: 17:28 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:30 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:30 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:30 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:30 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/dollar-crate-issue-57089.rs:17:30: 17:31 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:17:30: 17:31 (#4),\n             },\n         ],\n-        span: $DIR/dollar-crate-issue-57089.rs:17:21: 17:32 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:17:21: 17:32 (#4),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/dollar-crate-issue-57089.rs:17:32: 17:33 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:17:32: 17:33 (#4),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A($crate :: S) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/dollar-crate-issue-57089.rs:21:9: 21:15 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:21:9: 21:15 (#4),\n     },\n     Ident {\n         ident: \"A\",\n-        span: $DIR/dollar-crate-issue-57089.rs:21:16: 21:17 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:21:16: 21:17 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/dollar-crate-issue-57089.rs:21:18: 21:24 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:21:18: 21:24 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:26 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:26 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:26 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:26 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/dollar-crate-issue-57089.rs:21:26: 21:27 (#3),\n+                span: $DIR/dollar-crate-issue-57089.rs:21:26: 21:27 (#4),\n             },\n         ],\n-        span: $DIR/dollar-crate-issue-57089.rs:21:17: 21:28 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:21:17: 21:28 (#4),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/dollar-crate-issue-57089.rs:21:28: 21:29 (#3),\n+        span: $DIR/dollar-crate-issue-57089.rs:21:28: 21:29 (#4),\n     },\n ]"}, {"sha": "7f133fd05d704f62590226e7775065c6b07d0b51", "filename": "src/test/ui/proc-macro/dollar-crate-issue-62325.stdout", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -2,109 +2,109 @@ PRINT-ATTR INPUT (DISPLAY): struct A(identity ! ($crate :: S)) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/dollar-crate-issue-62325.rs:19:5: 19:11 (#3),\n+        span: $DIR/dollar-crate-issue-62325.rs:19:5: 19:11 (#4),\n     },\n     Ident {\n         ident: \"A\",\n-        span: $DIR/dollar-crate-issue-62325.rs:19:12: 19:13 (#3),\n+        span: $DIR/dollar-crate-issue-62325.rs:19:12: 19:13 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"identity\",\n-                span: $DIR/dollar-crate-issue-62325.rs:19:14: 19:22 (#3),\n+                span: $DIR/dollar-crate-issue-62325.rs:19:14: 19:22 (#4),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate-issue-62325.rs:19:22: 19:23 (#3),\n+                span: $DIR/dollar-crate-issue-62325.rs:19:22: 19:23 (#4),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"$crate\",\n-                        span: $DIR/dollar-crate-issue-62325.rs:19:24: 19:30 (#3),\n+                        span: $DIR/dollar-crate-issue-62325.rs:19:24: 19:30 (#4),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Joint,\n-                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:32 (#3),\n+                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:32 (#4),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Alone,\n-                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:32 (#3),\n+                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:32 (#4),\n                     },\n                     Ident {\n                         ident: \"S\",\n-                        span: $DIR/dollar-crate-issue-62325.rs:19:32: 19:33 (#3),\n+                        span: $DIR/dollar-crate-issue-62325.rs:19:32: 19:33 (#4),\n                     },\n                 ],\n-                span: $DIR/dollar-crate-issue-62325.rs:19:23: 19:34 (#3),\n+                span: $DIR/dollar-crate-issue-62325.rs:19:23: 19:34 (#4),\n             },\n         ],\n-        span: $DIR/dollar-crate-issue-62325.rs:19:13: 19:35 (#3),\n+        span: $DIR/dollar-crate-issue-62325.rs:19:13: 19:35 (#4),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/dollar-crate-issue-62325.rs:19:35: 19:36 (#3),\n+        span: $DIR/dollar-crate-issue-62325.rs:19:35: 19:36 (#4),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct B(identity ! ($crate :: S)) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:21:5: 21:11 (#10),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:21:5: 21:11 (#12),\n     },\n     Ident {\n         ident: \"B\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:21:12: 21:13 (#10),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:21:12: 21:13 (#12),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"identity\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:21:14: 21:22 (#10),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:21:14: 21:22 (#12),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:21:22: 21:23 (#10),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:21:22: 21:23 (#12),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"$crate\",\n-                        span: $DIR/auxiliary/dollar-crate-external.rs:21:24: 21:30 (#10),\n+                        span: $DIR/auxiliary/dollar-crate-external.rs:21:24: 21:30 (#12),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Joint,\n-                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:32 (#10),\n+                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:32 (#12),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Alone,\n-                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:32 (#10),\n+                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:32 (#12),\n                     },\n                     Ident {\n                         ident: \"S\",\n-                        span: $DIR/auxiliary/dollar-crate-external.rs:21:32: 21:33 (#10),\n+                        span: $DIR/auxiliary/dollar-crate-external.rs:21:32: 21:33 (#12),\n                     },\n                 ],\n-                span: $DIR/auxiliary/dollar-crate-external.rs:21:23: 21:34 (#10),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:21:23: 21:34 (#12),\n             },\n         ],\n-        span: $DIR/auxiliary/dollar-crate-external.rs:21:13: 21:35 (#10),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:21:13: 21:35 (#12),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/auxiliary/dollar-crate-external.rs:21:35: 21:36 (#10),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:21:35: 21:36 (#12),\n     },\n ]"}, {"sha": "d01fcb9d0e49875fc391017105989de62963095a", "filename": "src/test/ui/proc-macro/dollar-crate.stdout", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -2,239 +2,239 @@ PRINT-BANG INPUT (DISPLAY): struct M($crate :: S) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/dollar-crate.rs:20:17: 20:23 (#3),\n+        span: $DIR/dollar-crate.rs:20:17: 20:23 (#4),\n     },\n     Ident {\n         ident: \"M\",\n-        span: $DIR/dollar-crate.rs:20:24: 20:25 (#3),\n+        span: $DIR/dollar-crate.rs:20:24: 20:25 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/dollar-crate.rs:20:26: 20:32 (#3),\n+                span: $DIR/dollar-crate.rs:20:26: 20:32 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate.rs:20:32: 20:34 (#3),\n+                span: $DIR/dollar-crate.rs:20:32: 20:34 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate.rs:20:32: 20:34 (#3),\n+                span: $DIR/dollar-crate.rs:20:32: 20:34 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/dollar-crate.rs:20:34: 20:35 (#3),\n+                span: $DIR/dollar-crate.rs:20:34: 20:35 (#4),\n             },\n         ],\n-        span: $DIR/dollar-crate.rs:20:25: 20:36 (#3),\n+        span: $DIR/dollar-crate.rs:20:25: 20:36 (#4),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/dollar-crate.rs:20:36: 20:37 (#3),\n+        span: $DIR/dollar-crate.rs:20:36: 20:37 (#4),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A($crate :: S) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/dollar-crate.rs:24:13: 24:19 (#3),\n+        span: $DIR/dollar-crate.rs:24:13: 24:19 (#4),\n     },\n     Ident {\n         ident: \"A\",\n-        span: $DIR/dollar-crate.rs:24:20: 24:21 (#3),\n+        span: $DIR/dollar-crate.rs:24:20: 24:21 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/dollar-crate.rs:24:22: 24:28 (#3),\n+                span: $DIR/dollar-crate.rs:24:22: 24:28 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate.rs:24:28: 24:30 (#3),\n+                span: $DIR/dollar-crate.rs:24:28: 24:30 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate.rs:24:28: 24:30 (#3),\n+                span: $DIR/dollar-crate.rs:24:28: 24:30 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/dollar-crate.rs:24:30: 24:31 (#3),\n+                span: $DIR/dollar-crate.rs:24:30: 24:31 (#4),\n             },\n         ],\n-        span: $DIR/dollar-crate.rs:24:21: 24:32 (#3),\n+        span: $DIR/dollar-crate.rs:24:21: 24:32 (#4),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/dollar-crate.rs:24:32: 24:33 (#3),\n+        span: $DIR/dollar-crate.rs:24:32: 24:33 (#4),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct D($crate :: S) ;\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/dollar-crate.rs:27:13: 27:19 (#3),\n+        span: $DIR/dollar-crate.rs:27:13: 27:19 (#4),\n     },\n     Ident {\n         ident: \"D\",\n-        span: $DIR/dollar-crate.rs:27:20: 27:21 (#3),\n+        span: $DIR/dollar-crate.rs:27:20: 27:21 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/dollar-crate.rs:27:22: 27:28 (#3),\n+                span: $DIR/dollar-crate.rs:27:22: 27:28 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate.rs:27:28: 27:30 (#3),\n+                span: $DIR/dollar-crate.rs:27:28: 27:30 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate.rs:27:28: 27:30 (#3),\n+                span: $DIR/dollar-crate.rs:27:28: 27:30 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/dollar-crate.rs:27:30: 27:31 (#3),\n+                span: $DIR/dollar-crate.rs:27:30: 27:31 (#4),\n             },\n         ],\n-        span: $DIR/dollar-crate.rs:27:21: 27:32 (#3),\n+        span: $DIR/dollar-crate.rs:27:21: 27:32 (#4),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/dollar-crate.rs:27:32: 27:33 (#3),\n+        span: $DIR/dollar-crate.rs:27:32: 27:33 (#4),\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): struct M($crate :: S) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:7:13: 7:19 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:7:13: 7:19 (#15),\n     },\n     Ident {\n         ident: \"M\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:7:20: 7:21 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:7:20: 7:21 (#15),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:7:22: 7:28 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:7:22: 7:28 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:30 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:30 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:30 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:30 (#15),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:7:30: 7:31 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:7:30: 7:31 (#15),\n             },\n         ],\n-        span: $DIR/auxiliary/dollar-crate-external.rs:7:21: 7:32 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:7:21: 7:32 (#15),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/auxiliary/dollar-crate-external.rs:7:32: 7:33 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:7:32: 7:33 (#15),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A($crate :: S) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:11:9: 11:15 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:11:9: 11:15 (#15),\n     },\n     Ident {\n         ident: \"A\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:11:16: 11:17 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:11:16: 11:17 (#15),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:11:18: 11:24 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:11:18: 11:24 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:26 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:26 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:26 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:26 (#15),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:11:26: 11:27 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:11:26: 11:27 (#15),\n             },\n         ],\n-        span: $DIR/auxiliary/dollar-crate-external.rs:11:17: 11:28 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:11:17: 11:28 (#15),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/auxiliary/dollar-crate-external.rs:11:28: 11:29 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:11:28: 11:29 (#15),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct D($crate :: S) ;\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:14:9: 14:15 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:14:9: 14:15 (#15),\n     },\n     Ident {\n         ident: \"D\",\n-        span: $DIR/auxiliary/dollar-crate-external.rs:14:16: 14:17 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:14:16: 14:17 (#15),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Ident {\n                 ident: \"$crate\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:14:18: 14:24 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:14:18: 14:24 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:26 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:26 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:26 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:26 (#15),\n             },\n             Ident {\n                 ident: \"S\",\n-                span: $DIR/auxiliary/dollar-crate-external.rs:14:26: 14:27 (#13),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:14:26: 14:27 (#15),\n             },\n         ],\n-        span: $DIR/auxiliary/dollar-crate-external.rs:14:17: 14:28 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:14:17: 14:28 (#15),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/auxiliary/dollar-crate-external.rs:14:28: 14:29 (#13),\n+        span: $DIR/auxiliary/dollar-crate-external.rs:14:28: 14:29 (#15),\n     },\n ]"}, {"sha": "e83bc9f8fca7a26c2abf5e037ca050754257fbf2", "filename": "src/test/ui/proc-macro/group-compat-hack/group-compat-hack.stdout", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -1,6 +1,6 @@\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/time-macros-impl/src/lib.rs:5:21: 5:27 (#5) }, Ident { ident: \"One\", span: $DIR/time-macros-impl/src/lib.rs:5:28: 5:31 (#5) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:27:18: 27:21 (#0) }], span: $DIR/time-macros-impl/src/lib.rs:5:31: 5:38 (#5) }, Punct { ch: ';', spacing: Alone, span: $DIR/time-macros-impl/src/lib.rs:5:38: 5:39 (#5) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys/src/lib.rs:5:21: 5:27 (#9) }, Ident { ident: \"Two\", span: $DIR/js-sys/src/lib.rs:5:28: 5:31 (#9) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:28:13: 28:16 (#0) }], span: $DIR/js-sys/src/lib.rs:5:31: 5:38 (#9) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys/src/lib.rs:5:38: 5:39 (#9) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:22:25: 22:31 (#13) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:22:32: 22:37 (#13) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:29:12: 29:15 (#0) }], span: $DIR/group-compat-hack.rs:22:38: 22:43 (#13) }], span: $DIR/group-compat-hack.rs:22:37: 22:44 (#13) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:22:44: 22:45 (#13) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:21: 5:27 (#19) }, Ident { ident: \"One\", span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:28: 5:31 (#19) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:43:18: 43:21 (#0) }], span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:31: 5:38 (#19) }, Punct { ch: ';', spacing: Alone, span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:38: 5:39 (#19) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys-0.3.17/src/lib.rs:5:21: 5:27 (#23) }, Ident { ident: \"Two\", span: $DIR/js-sys-0.3.17/src/lib.rs:5:28: 5:31 (#23) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:44:13: 44:16 (#0) }], span: $DIR/js-sys-0.3.17/src/lib.rs:5:31: 5:38 (#23) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys-0.3.17/src/lib.rs:5:38: 5:39 (#23) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:38:25: 38:31 (#27) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:38:32: 38:37 (#27) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:45:12: 45:15 (#0) }], span: $DIR/group-compat-hack.rs:38:38: 38:43 (#27) }], span: $DIR/group-compat-hack.rs:38:37: 38:44 (#27) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:38:44: 38:45 (#27) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/time-macros-impl/src/lib.rs:5:21: 5:27 (#6) }, Ident { ident: \"One\", span: $DIR/time-macros-impl/src/lib.rs:5:28: 5:31 (#6) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:27:18: 27:21 (#0) }], span: $DIR/time-macros-impl/src/lib.rs:5:31: 5:38 (#6) }, Punct { ch: ';', spacing: Alone, span: $DIR/time-macros-impl/src/lib.rs:5:38: 5:39 (#6) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys/src/lib.rs:5:21: 5:27 (#10) }, Ident { ident: \"Two\", span: $DIR/js-sys/src/lib.rs:5:28: 5:31 (#10) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:28:13: 28:16 (#0) }], span: $DIR/js-sys/src/lib.rs:5:31: 5:38 (#10) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys/src/lib.rs:5:38: 5:39 (#10) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:22:25: 22:31 (#14) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:22:32: 22:37 (#14) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:29:12: 29:15 (#0) }], span: $DIR/group-compat-hack.rs:22:38: 22:43 (#14) }], span: $DIR/group-compat-hack.rs:22:37: 22:44 (#14) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:22:44: 22:45 (#14) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:21: 5:27 (#20) }, Ident { ident: \"One\", span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:28: 5:31 (#20) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:43:18: 43:21 (#0) }], span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:31: 5:38 (#20) }, Punct { ch: ';', spacing: Alone, span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:38: 5:39 (#20) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys-0.3.17/src/lib.rs:5:21: 5:27 (#24) }, Ident { ident: \"Two\", span: $DIR/js-sys-0.3.17/src/lib.rs:5:28: 5:31 (#24) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:44:13: 44:16 (#0) }], span: $DIR/js-sys-0.3.17/src/lib.rs:5:31: 5:38 (#24) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys-0.3.17/src/lib.rs:5:38: 5:39 (#24) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:38:25: 38:31 (#28) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:38:32: 38:37 (#28) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:45:12: 45:15 (#0) }], span: $DIR/group-compat-hack.rs:38:38: 38:43 (#28) }], span: $DIR/group-compat-hack.rs:38:37: 38:44 (#28) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:38:44: 38:45 (#28) }]"}, {"sha": "866608e4d8e1d0a1aa5be7855fed1b6ec311c14c", "filename": "src/test/ui/proc-macro/input-interpolated.stdout", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -8,14 +8,14 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: #0 bytes(503..504),\n             },\n         ],\n-        span: #3 bytes(370..372),\n+        span: #4 bytes(370..372),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): const A : u8 = 0 ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"const\",\n-        span: #3 bytes(416..421),\n+        span: #4 bytes(416..421),\n     },\n     Group {\n         delimiter: None,\n@@ -25,39 +25,39 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                 span: #0 bytes(503..504),\n             },\n         ],\n-        span: #3 bytes(422..424),\n+        span: #4 bytes(422..424),\n     },\n     Punct {\n         ch: ':',\n         spacing: Alone,\n-        span: #3 bytes(424..425),\n+        span: #4 bytes(424..425),\n     },\n     Ident {\n         ident: \"u8\",\n-        span: #3 bytes(426..428),\n+        span: #4 bytes(426..428),\n     },\n     Punct {\n         ch: '=',\n         spacing: Alone,\n-        span: #3 bytes(429..430),\n+        span: #4 bytes(429..430),\n     },\n     Literal {\n         kind: Integer,\n         symbol: \"0\",\n         suffix: None,\n-        span: #3 bytes(431..432),\n+        span: #4 bytes(431..432),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: #3 bytes(432..433),\n+        span: #4 bytes(432..433),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct A { }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: #3 bytes(468..474),\n+        span: #4 bytes(468..474),\n     },\n     Group {\n         delimiter: None,\n@@ -67,11 +67,11 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n                 span: #0 bytes(503..504),\n             },\n         ],\n-        span: #3 bytes(475..477),\n+        span: #4 bytes(475..477),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: #3 bytes(478..480),\n+        span: #4 bytes(478..480),\n     },\n ]"}, {"sha": "e522bd258e14b0d36cb1fe109103fac76e3c5a50", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.stdout", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -1,6 +1,6 @@\n-Def site: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4)\n-Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:24:37: 24:43 (#3) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#3) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#3) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:24:45: 24:50 (#3) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:50: 24:51 (#3) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:24:51: 24:53 (#3) }]\n-Respanned: TokenStream [Ident { ident: \"$crate\", span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4) }, Punct { ch: ':', spacing: Joint, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4) }, Punct { ch: ':', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4) }, Ident { ident: \"dummy\", span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4) }, Punct { ch: '!', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4) }]\n+Def site: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5)\n+Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:24:37: 24:43 (#4) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#4) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#4) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:24:45: 24:50 (#4) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:50: 24:51 (#4) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:24:51: 24:53 (#4) }]\n+Respanned: TokenStream [Ident { ident: \"$crate\", span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5) }, Punct { ch: ':', spacing: Joint, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5) }, Punct { ch: ':', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5) }, Ident { ident: \"dummy\", span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5) }, Punct { ch: '!', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#5) }]\n #![feature /* 0#0 */(prelude_import)]\n // ignore-tidy-linelength\n // aux-build:make-macro.rs\n@@ -47,18 +47,20 @@ Expansions:\n 0: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: Root\n 1: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: AstPass(StdImports)\n 2: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"produce_it\")\n-3: parent: ExpnId(2), call_site_ctxt: #3, def_site_ctxt: #0, kind: Macro(Bang, \"meta_macro::print_def_site\")\n-4: parent: ExpnId(3), call_site_ctxt: #4, def_site_ctxt: #0, kind: Macro(Bang, \"$crate::dummy\")\n+3: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: AstPass(StdImports)\n+4: parent: ExpnId(2), call_site_ctxt: #4, def_site_ctxt: #0, kind: Macro(Bang, \"meta_macro::print_def_site\")\n+5: parent: ExpnId(4), call_site_ctxt: #5, def_site_ctxt: #0, kind: Macro(Bang, \"$crate::dummy\")\n \n SyntaxContexts:\n #0: parent: #0, outer_mark: (ExpnId(0), Opaque)\n #1: parent: #0, outer_mark: (ExpnId(1), Opaque)\n #2: parent: #0, outer_mark: (ExpnId(1), Transparent)\n-#3: parent: #0, outer_mark: (ExpnId(2), SemiTransparent)\n-#4: parent: #0, outer_mark: (ExpnId(3), Opaque)\n-#5: parent: #3, outer_mark: (ExpnId(3), Transparent)\n-#6: parent: #0, outer_mark: (ExpnId(3), SemiTransparent)\n-#7: parent: #0, outer_mark: (ExpnId(4), Opaque)\n-#8: parent: #4, outer_mark: (ExpnId(4), Transparent)\n-#9: parent: #4, outer_mark: (ExpnId(4), SemiTransparent)\n+#3: parent: #0, outer_mark: (ExpnId(3), Opaque)\n+#4: parent: #0, outer_mark: (ExpnId(2), SemiTransparent)\n+#5: parent: #0, outer_mark: (ExpnId(4), Opaque)\n+#6: parent: #4, outer_mark: (ExpnId(4), Transparent)\n+#7: parent: #0, outer_mark: (ExpnId(4), SemiTransparent)\n+#8: parent: #0, outer_mark: (ExpnId(5), Opaque)\n+#9: parent: #5, outer_mark: (ExpnId(5), Transparent)\n+#10: parent: #5, outer_mark: (ExpnId(5), SemiTransparent)\n */"}, {"sha": "dddde482ef99b9c7ca5b0ba1d6bd1e10d0888804", "filename": "src/test/ui/proc-macro/meta-macro.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -1,3 +1,3 @@\n-Def site: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#3)\n+Def site: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#4)\n Input: TokenStream []\n Respanned: TokenStream []"}, {"sha": "dcafe3b4bda6003cc09e8cac1c586f0764fedf90", "filename": "src/test/ui/proc-macro/nested-macro-rules.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fnested-macro-rules.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fnested-macro-rules.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnested-macro-rules.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -5,10 +5,10 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n         stream: TokenStream [\n             Ident {\n                 ident: \"FirstStruct\",\n-                span: $DIR/auxiliary/nested-macro-rules.rs:15:14: 15:25 (#5),\n+                span: $DIR/auxiliary/nested-macro-rules.rs:15:14: 15:25 (#7),\n             },\n         ],\n-        span: $DIR/auxiliary/nested-macro-rules.rs:9:27: 9:32 (#4),\n+        span: $DIR/auxiliary/nested-macro-rules.rs:9:27: 9:32 (#6),\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): SecondStruct\n@@ -18,9 +18,9 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n         stream: TokenStream [\n             Ident {\n                 ident: \"SecondStruct\",\n-                span: $DIR/nested-macro-rules.rs:21:38: 21:50 (#11),\n+                span: $DIR/nested-macro-rules.rs:21:38: 21:50 (#13),\n             },\n         ],\n-        span: $DIR/auxiliary/nested-macro-rules.rs:9:27: 9:32 (#10),\n+        span: $DIR/auxiliary/nested-macro-rules.rs:9:27: 9:32 (#12),\n     },\n ]"}, {"sha": "6b410f0bfb7e3b856c06f1db4deb0e5248aac630", "filename": "src/test/ui/proc-macro/nodelim-groups.stdout", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a67d248b13e8ac6f83df8994f59e7b89f064339e/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout?ref=a67d248b13e8ac6f83df8994f59e7b89f064339e", "patch": "@@ -4,7 +4,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n         kind: Str,\n         symbol: \"hi\",\n         suffix: None,\n-        span: $DIR/nodelim-groups.rs:16:42: 16:46 (#3),\n+        span: $DIR/nodelim-groups.rs:16:42: 16:46 (#4),\n     },\n     Group {\n         delimiter: None,\n@@ -44,7 +44,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 span: $DIR/nodelim-groups.rs:20:27: 20:28 (#0),\n             },\n         ],\n-        span: $DIR/nodelim-groups.rs:16:47: 16:51 (#3),\n+        span: $DIR/nodelim-groups.rs:16:47: 16:51 (#4),\n     },\n     Group {\n         delimiter: Parenthesis,\n@@ -53,21 +53,21 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 kind: Integer,\n                 symbol: \"1\",\n                 suffix: None,\n-                span: $DIR/nodelim-groups.rs:16:53: 16:54 (#3),\n+                span: $DIR/nodelim-groups.rs:16:53: 16:54 (#4),\n             },\n             Punct {\n                 ch: '+',\n                 spacing: Alone,\n-                span: $DIR/nodelim-groups.rs:16:55: 16:56 (#3),\n+                span: $DIR/nodelim-groups.rs:16:55: 16:56 (#4),\n             },\n             Literal {\n                 kind: Integer,\n                 symbol: \"1\",\n                 suffix: None,\n-                span: $DIR/nodelim-groups.rs:16:57: 16:58 (#3),\n+                span: $DIR/nodelim-groups.rs:16:57: 16:58 (#4),\n             },\n         ],\n-        span: $DIR/nodelim-groups.rs:16:52: 16:59 (#3),\n+        span: $DIR/nodelim-groups.rs:16:52: 16:59 (#4),\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): \"hi\" \"hello\".len() + \"world\".len() (1 + 1)\n@@ -76,7 +76,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n         kind: Str,\n         symbol: \"hi\",\n         suffix: None,\n-        span: $DIR/nodelim-groups.rs:16:42: 16:46 (#8),\n+        span: $DIR/nodelim-groups.rs:16:42: 16:46 (#9),\n     },\n     Group {\n         delimiter: None,\n@@ -105,12 +105,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                         span: $DIR/nodelim-groups.rs:21:28: 21:30 (#0),\n                     },\n                 ],\n-                span: $DIR/nodelim-groups.rs:15:49: 15:54 (#7),\n+                span: $DIR/nodelim-groups.rs:15:49: 15:54 (#8),\n             },\n             Punct {\n                 ch: '+',\n                 spacing: Alone,\n-                span: $DIR/nodelim-groups.rs:15:55: 15:56 (#7),\n+                span: $DIR/nodelim-groups.rs:15:55: 15:56 (#8),\n             },\n             Group {\n                 delimiter: None,\n@@ -136,10 +136,10 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                         span: $DIR/nodelim-groups.rs:21:44: 21:46 (#0),\n                     },\n                 ],\n-                span: $DIR/nodelim-groups.rs:15:57: 15:62 (#7),\n+                span: $DIR/nodelim-groups.rs:15:57: 15:62 (#8),\n             },\n         ],\n-        span: $DIR/nodelim-groups.rs:16:47: 16:51 (#8),\n+        span: $DIR/nodelim-groups.rs:16:47: 16:51 (#9),\n     },\n     Group {\n         delimiter: Parenthesis,\n@@ -148,20 +148,20 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                 kind: Integer,\n                 symbol: \"1\",\n                 suffix: None,\n-                span: $DIR/nodelim-groups.rs:16:53: 16:54 (#8),\n+                span: $DIR/nodelim-groups.rs:16:53: 16:54 (#9),\n             },\n             Punct {\n                 ch: '+',\n                 spacing: Alone,\n-                span: $DIR/nodelim-groups.rs:16:55: 16:56 (#8),\n+                span: $DIR/nodelim-groups.rs:16:55: 16:56 (#9),\n             },\n             Literal {\n                 kind: Integer,\n                 symbol: \"1\",\n                 suffix: None,\n-                span: $DIR/nodelim-groups.rs:16:57: 16:58 (#8),\n+                span: $DIR/nodelim-groups.rs:16:57: 16:58 (#9),\n             },\n         ],\n-        span: $DIR/nodelim-groups.rs:16:52: 16:59 (#8),\n+        span: $DIR/nodelim-groups.rs:16:52: 16:59 (#9),\n     },\n ]"}]}