{"sha": "310ecb0a5c0d9161679c256052822f34c6eb548a", "node_id": "C_kwDOAAsO6NoAKDMxMGVjYjBhNWMwZDkxNjE2NzljMjU2MDUyODIyZjM0YzZlYjU0OGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-30T13:29:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-30T13:29:56Z"}, "message": "Auto merge of #7899 - mikerite:fullint-20211030, r=xFrednet\n\nRefactoring `FullInt`\n\nRefactoring `FullInt`\n\nchangelog: None", "tree": {"sha": "0fa961c9d63ed644b92f79f69d9f7b80cae9bae5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fa961c9d63ed644b92f79f69d9f7b80cae9bae5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/310ecb0a5c0d9161679c256052822f34c6eb548a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/310ecb0a5c0d9161679c256052822f34c6eb548a", "html_url": "https://github.com/rust-lang/rust/commit/310ecb0a5c0d9161679c256052822f34c6eb548a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/310ecb0a5c0d9161679c256052822f34c6eb548a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c70c182c092c4b12c6bc737b808d024ffea6165", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c70c182c092c4b12c6bc737b808d024ffea6165", "html_url": "https://github.com/rust-lang/rust/commit/4c70c182c092c4b12c6bc737b808d024ffea6165"}, {"sha": "e8c4046841b43e4b3ea3ff8f5c22858f34c8fe9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c4046841b43e4b3ea3ff8f5c22858f34c8fe9f", "html_url": "https://github.com/rust-lang/rust/commit/e8c4046841b43e4b3ea3ff8f5c22858f34c8fe9f"}], "stats": {"total": 37, "additions": 14, "deletions": 23}, "files": [{"sha": "04347672e0fbb35e12241580aacfeac22de28fbc", "filename": "clippy_utils/src/consts.rs", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/310ecb0a5c0d9161679c256052822f34c6eb548a/clippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310ecb0a5c0d9161679c256052822f34c6eb548a/clippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fconsts.rs?ref=310ecb0a5c0d9161679c256052822f34c6eb548a", "patch": "@@ -229,44 +229,35 @@ pub enum FullInt {\n     U(u128),\n }\n \n-impl FullInt {\n-    #[allow(clippy::cast_sign_loss)]\n-    #[must_use]\n-    fn cmp_s_u(s: i128, u: u128) -> Ordering {\n-        if s < 0 {\n-            Ordering::Less\n-        } else if u > (i128::MAX as u128) {\n-            Ordering::Greater\n-        } else {\n-            (s as u128).cmp(&u)\n-        }\n-    }\n-}\n-\n impl PartialEq for FullInt {\n     #[must_use]\n     fn eq(&self, other: &Self) -> bool {\n-        self.partial_cmp(other).expect(\"`partial_cmp` only returns `Some(_)`\") == Ordering::Equal\n+        self.cmp(other) == Ordering::Equal\n     }\n }\n \n impl PartialOrd for FullInt {\n     #[must_use]\n     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n-        Some(match (self, other) {\n-            (&Self::S(s), &Self::S(o)) => s.cmp(&o),\n-            (&Self::U(s), &Self::U(o)) => s.cmp(&o),\n-            (&Self::S(s), &Self::U(o)) => Self::cmp_s_u(s, o),\n-            (&Self::U(s), &Self::S(o)) => Self::cmp_s_u(o, s).reverse(),\n-        })\n+        Some(self.cmp(other))\n     }\n }\n \n impl Ord for FullInt {\n     #[must_use]\n     fn cmp(&self, other: &Self) -> Ordering {\n-        self.partial_cmp(other)\n-            .expect(\"`partial_cmp` for FullInt can never return `None`\")\n+        use FullInt::{S, U};\n+\n+        fn cmp_s_u(s: i128, u: u128) -> Ordering {\n+            u128::try_from(s).map_or(Ordering::Less, |x| x.cmp(&u))\n+        }\n+\n+        match (*self, *other) {\n+            (S(s), S(o)) => s.cmp(&o),\n+            (U(s), U(o)) => s.cmp(&o),\n+            (S(s), U(o)) => cmp_s_u(s, o),\n+            (U(s), S(o)) => cmp_s_u(o, s).reverse(),\n+        }\n     }\n }\n "}]}