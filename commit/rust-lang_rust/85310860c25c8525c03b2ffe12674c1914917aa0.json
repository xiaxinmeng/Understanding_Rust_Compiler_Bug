{"sha": "85310860c25c8525c03b2ffe12674c1914917aa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MzEwODYwYzI1Yzg1MjVjMDNiMmZmZTEyNjc0YzE5MTQ5MTdhYTA=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-04-02T16:10:44Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-04-02T16:33:27Z"}, "message": "Add performance note to fs::read docs", "tree": {"sha": "c92eedbd668eacf5ab68e5c04f77ccf7d587ee9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c92eedbd668eacf5ab68e5c04f77ccf7d587ee9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85310860c25c8525c03b2ffe12674c1914917aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85310860c25c8525c03b2ffe12674c1914917aa0", "html_url": "https://github.com/rust-lang/rust/commit/85310860c25c8525c03b2ffe12674c1914917aa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85310860c25c8525c03b2ffe12674c1914917aa0/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "097efa9a998d4f3a4aee3af126e8f8a9eba1ae07", "url": "https://api.github.com/repos/rust-lang/rust/commits/097efa9a998d4f3a4aee3af126e8f8a9eba1ae07", "html_url": "https://github.com/rust-lang/rust/commit/097efa9a998d4f3a4aee3af126e8f8a9eba1ae07"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "7bd1adc411ae4b1c0f19009c51f0faf1ff046643", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85310860c25c8525c03b2ffe12674c1914917aa0/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85310860c25c8525c03b2ffe12674c1914917aa0/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=85310860c25c8525c03b2ffe12674c1914917aa0", "patch": "@@ -231,7 +231,9 @@ fn initial_buffer_size(file: &File) -> usize {\n /// Read the entire contents of a file into a bytes vector.\n ///\n /// This is a convenience function for using [`File::open`] and [`read_to_end`]\n-/// with fewer imports and without an intermediate variable.\n+/// with fewer imports and without an intermediate variable.  It pre-allocates a\n+/// buffer based on the file size when available, so it is generally faster than\n+/// reading into a vector created with `Vec::new()`.\n ///\n /// [`File::open`]: struct.File.html#method.open\n /// [`read_to_end`]: ../io/trait.Read.html#method.read_to_end\n@@ -270,7 +272,9 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n /// Read the entire contents of a file into a string.\n ///\n /// This is a convenience function for using [`File::open`] and [`read_to_string`]\n-/// with fewer imports and without an intermediate variable.\n+/// with fewer imports and without an intermediate variable.  It pre-allocates a\n+/// buffer based on the file size when available, so it is generally faster than\n+/// reading into a string created with `String::new()`.\n ///\n /// [`File::open`]: struct.File.html#method.open\n /// [`read_to_string`]: ../io/trait.Read.html#method.read_to_string"}]}