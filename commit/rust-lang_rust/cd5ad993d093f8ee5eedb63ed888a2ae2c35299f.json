{"sha": "cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNWFkOTkzZDA5M2Y4ZWU1ZWVkYjYzZWQ4ODhhMmFlMmMzNTI5OWY=", "commit": {"author": {"name": "John VanEnk", "email": "jvanenk@fastly.com", "date": "2020-01-11T01:16:04Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-02-08T04:17:02Z"}, "message": "Add a test that demonstrates a segfault when calling into rust with non-c-like-enum.", "tree": {"sha": "d8f4fc78ea1109943a5b7c3c2b9b0aec7d84b758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8f4fc78ea1109943a5b7c3c2b9b0aec7d84b758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "html_url": "https://github.com/rust-lang/rust/commit/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/comments", "author": {"login": "sw17ch", "id": 95705, "node_id": "MDQ6VXNlcjk1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/95705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sw17ch", "html_url": "https://github.com/sw17ch", "followers_url": "https://api.github.com/users/sw17ch/followers", "following_url": "https://api.github.com/users/sw17ch/following{/other_user}", "gists_url": "https://api.github.com/users/sw17ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sw17ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sw17ch/subscriptions", "organizations_url": "https://api.github.com/users/sw17ch/orgs", "repos_url": "https://api.github.com/users/sw17ch/repos", "events_url": "https://api.github.com/users/sw17ch/events{/privacy}", "received_events_url": "https://api.github.com/users/sw17ch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8498c5f5b02dbb4ed58a1eb4901b0b733342c35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8498c5f5b02dbb4ed58a1eb4901b0b733342c35f", "html_url": "https://github.com/rust-lang/rust/commit/8498c5f5b02dbb4ed58a1eb4901b0b733342c35f"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "5b5d620efe655f3e31f80d150beaabbeb6facd79", "filename": "src/test/run-make-fulldeps/return-non-c-like-enum/Makefile", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2FMakefile?ref=cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "patch": "@@ -0,0 +1,7 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --crate-type=staticlib nonclike.rs\n+\t$(CC) test.c $(call STATICLIB,nonclike) $(call OUT_EXE,test) \\\n+\t\t$(EXTRACFLAGS) $(EXTRACXXFLAGS)\n+\t$(call RUN,test)"}, {"sha": "36f618b05e843b6f0f7f4df0e9554b86c2ecef1b", "filename": "src/test/run-make-fulldeps/return-non-c-like-enum/nonclike.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2Fnonclike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2Fnonclike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2Fnonclike.rs?ref=cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "patch": "@@ -0,0 +1,13 @@\n+#![crate_type = \"lib\"]\n+#![crate_name = \"nonclike\"]\n+\n+#[repr(C,u8)]\n+pub enum T {\n+    A(u64),\n+    B,\n+}\n+\n+#[no_mangle]\n+pub extern \"C\" fn t_new(a: u64) -> T {\n+    T::A(a)\n+}"}, {"sha": "bcc17c0008d9cb84c9147b92bd32d2e546a9682b", "filename": "src/test/run-make-fulldeps/return-non-c-like-enum/test.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2Ftest.c", "raw_url": "https://github.com/rust-lang/rust/raw/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2Ftest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Freturn-non-c-like-enum%2Ftest.c?ref=cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "patch": "@@ -0,0 +1,35 @@\n+#include <stdint.h>\n+#include <assert.h>\n+\n+/* This is the code generated by cbindgen 0.12.1 for the `enum T` type\n+ * in nonclike.rs . */\n+enum T_Tag {\n+  A,\n+  B,\n+};\n+typedef uint8_t T_Tag;\n+\n+typedef struct {\n+  uint64_t _0;\n+} A_Body;\n+\n+typedef struct {\n+  T_Tag tag;\n+  union {\n+    A_Body a;\n+  };\n+} T;\n+\n+/* This symbol is defined by the Rust staticlib built from\n+ * nonclike.rs. */\n+extern T t_new(uint64_t v);\n+\n+int main(int argc, char *argv[]) {\n+  (void)argc; (void)argv;\n+\n+  T t = t_new(10);\n+  assert(A == t.tag);\n+  assert(10 == t.a._0);\n+\n+  return 0;\n+}"}]}