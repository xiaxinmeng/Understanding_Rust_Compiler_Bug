{"sha": "88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZDlkNDE3YTFlZTNmMzM3OWE5NTU4M2M5MGE3OGZkN2U3Y2IyZDI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-02T18:19:40Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-03T20:55:10Z"}, "message": "oldmap: remove the legacy each_value method", "tree": {"sha": "4811542a9c4685bd9925c4c6b6d3f0659a3a32de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4811542a9c4685bd9925c4c6b6d3f0659a3a32de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "html_url": "https://github.com/rust-lang/rust/commit/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "643479f2e54913a6e16449742bdf023f6a753380", "url": "https://api.github.com/repos/rust-lang/rust/commits/643479f2e54913a6e16449742bdf023f6a753380", "html_url": "https://github.com/rust-lang/rust/commit/643479f2e54913a6e16449742bdf023f6a753380"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "93a4d3dc2bf433d3baf1f84f1e564bb05b619792", "filename": "src/libcargo/cargo.rc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibcargo%2Fcargo.rc", "raw_url": "https://github.com/rust-lang/rust/raw/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibcargo%2Fcargo.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcargo%2Fcargo.rc?ref=88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "patch": "@@ -748,7 +748,7 @@ pub fn configure(opts: Options) -> Cargo {\n }\n \n pub fn for_each_package(c: &Cargo, b: fn(s: @Source, p: &Package)) {\n-    for c.sources.each_value |v| {\n+    for c.sources.each_value_ref |&v| {\n         for v.packages.each |p| {\n             b(v, p);\n         }\n@@ -1569,7 +1569,7 @@ pub fn cmd_list(c: &Cargo) {\n             }\n         }\n     } else {\n-        for c.sources.each_value |v| {\n+        for c.sources.each_value_ref |&v| {\n             print_source(v);\n         }\n     }\n@@ -1675,7 +1675,7 @@ pub fn copy_warn(srcfile: &Path, destfile: &Path) {\n \n pub fn cmd_sources(c: &Cargo) {\n     if vec::len(c.opts.free) < 3u {\n-        for c.sources.each_value |v| {\n+        for c.sources.each_value_ref |&v| {\n             info(fmt!(\"%s (%s) via %s\",\n                       v.name, v.url, v.method));\n         }"}, {"sha": "541ea0e40f5409bdeccfe82255a72fa0710b050c", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "patch": "@@ -148,7 +148,7 @@ pub fn get_dep_hashes(cstore: CStore) -> ~[~str] {\n     type crate_hash = {name: ~str, hash: ~str};\n     let mut result = ~[];\n \n-    for p(cstore).use_crate_map.each_value |cnum| {\n+    for p(cstore).use_crate_map.each_value_ref |&cnum| {\n         let cdata = cstore::get_crate_data(cstore, cnum);\n         let hash = decoder::get_crate_hash(cdata.data);\n         debug!(\"Add hash[%s]: %s\", cdata.name, hash);"}, {"sha": "3b168b1d5f7979ada6a996da9a53ea0bfe7b50b4", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "patch": "@@ -1085,7 +1085,7 @@ pub fn store_non_ref_bindings(bcx: block,\n      */\n \n     let mut bcx = bcx;\n-    for data.bindings_map.each_value |binding_info| {\n+    for data.bindings_map.each_value_ref |&binding_info| {\n         match binding_info.trmode {\n             TrByValue(is_move, lldest) => {\n                 let llval = Load(bcx, binding_info.llmatch); // get a T*\n@@ -1119,7 +1119,7 @@ pub fn insert_lllocals(bcx: block,\n      * the `fcx.lllocals` map.  If add_cleans is true, then adds cleanups for\n      * the bindings. */\n \n-    for data.bindings_map.each_value |binding_info| {\n+    for data.bindings_map.each_value_ref |&binding_info| {\n         let llval = match binding_info.trmode {\n             // By value bindings: use the stack slot that we\n             // copied/moved the value into\n@@ -1191,7 +1191,7 @@ pub fn compile_guard(bcx: block,\n \n     fn drop_bindings(bcx: block, data: &ArmData) -> block {\n         let mut bcx = bcx;\n-        for data.bindings_map.each_value |binding_info| {\n+        for data.bindings_map.each_value_ref |&binding_info| {\n             match binding_info.trmode {\n                 TrByValue(_, llval) => {\n                     bcx = glue::drop_ty(bcx, llval, binding_info.ty);"}, {"sha": "2ca3ca9346e284f0bcfd704f3d4171bf65baa564", "filename": "src/libstd/oldmap.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibstd%2Foldmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2/src%2Flibstd%2Foldmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foldmap.rs?ref=88d9d417a1ee3f3379a95583c90a78fd7e7cb2d2", "patch": "@@ -324,10 +324,6 @@ pub mod chained {\n             self.each_key_ref(|p| blk(*p))\n         }\n \n-        pure fn each_value(blk: fn(value: V) -> bool) {\n-            self.each_value_ref(|p| blk(*p))\n-        }\n-\n         pure fn each_ref(blk: fn(key: &K, value: &V) -> bool) {\n             for self.each_entry |entry| {\n                 if !blk(&entry.key, &entry.value) { break; }"}]}