{"sha": "ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMTE3M2E4ZmZhZjUxMzM1YTRlYjcxOThjZDBjZTdmNTA4YWJmZDA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-10-24T15:14:38Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-10-24T15:14:38Z"}, "message": "self-profiling: Update measureme to 0.4.0 and use new RAII-based API.", "tree": {"sha": "d65e66347b9218a1d116d6b4da4a8792ab54642e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d65e66347b9218a1d116d6b4da4a8792ab54642e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "html_url": "https://github.com/rust-lang/rust/commit/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "html_url": "https://github.com/rust-lang/rust/commit/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9"}], "stats": {"total": 46, "additions": 13, "deletions": 33}, "files": [{"sha": "8e0db18e1577feb07b98d582522f900b563f96b8", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "patch": "@@ -1954,9 +1954,9 @@ dependencies = [\n \n [[package]]\n name = \"measureme\"\n-version = \"0.3.0\"\n+version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d09de7dafa3aa334bc806447c7e4de69419723312f4b88b80b561dea66601ce8\"\n+checksum = \"cd21b0e6e1af976b269ce062038fe5e1b9ca2f817ab7a3af09ec4210aebf0d30\"\n dependencies = [\n  \"byteorder\",\n  \"memmap\","}, {"sha": "38631224fd359fd1651561207f19233851a5a11b", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "patch": "@@ -37,4 +37,4 @@ byteorder = { version = \"1.3\" }\n chalk-engine = { version = \"0.9.0\", default-features=false }\n rustc_fs_util = { path = \"../librustc_fs_util\" }\n smallvec = { version = \"0.6.8\", features = [\"union\", \"may_dangle\"] }\n-measureme = \"0.3\"\n+measureme = \"0.4\""}, {"sha": "08cd68655aa5c45ce496f66e1ac0695a1db7766a", "filename": "src/librustc/util/profiling.rs", "status": "modified", "additions": 10, "deletions": 30, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/src%2Flibrustc%2Futil%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0/src%2Flibrustc%2Futil%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fprofiling.rs?ref=ee1173a8ffaf51335a4eb7198cd0ce7f508abfd0", "patch": "@@ -14,9 +14,12 @@ use measureme::{StringId, TimestampKind};\n /// MmapSerializatioSink is faster on macOS and Linux\n /// but FileSerializationSink is faster on Windows\n #[cfg(not(windows))]\n-type Profiler = measureme::Profiler<measureme::MmapSerializationSink>;\n+type SerializationSink = measureme::MmapSerializationSink;\n #[cfg(windows)]\n-type Profiler = measureme::Profiler<measureme::FileSerializationSink>;\n+type SerializationSink = measureme::FileSerializationSink;\n+\n+type Profiler = measureme::Profiler<SerializationSink>;\n+\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Ord, PartialOrd)]\n pub enum ProfileCategory {\n@@ -298,14 +301,7 @@ impl SelfProfiler {\n }\n \n #[must_use]\n-pub struct TimingGuard<'a>(Option<TimingGuardInternal<'a>>);\n-\n-struct TimingGuardInternal<'a> {\n-    raw_profiler: &'a Profiler,\n-    event_id: StringId,\n-    event_kind: StringId,\n-    thread_id: u64,\n-}\n+pub struct TimingGuard<'a>(Option<measureme::TimingGuard<'a, SerializationSink>>);\n \n impl<'a> TimingGuard<'a> {\n     #[inline]\n@@ -316,30 +312,14 @@ impl<'a> TimingGuard<'a> {\n     ) -> TimingGuard<'a> {\n         let thread_id = thread_id_to_u64(std::thread::current().id());\n         let raw_profiler = &profiler.profiler;\n-        raw_profiler.record_event(event_kind, event_id, thread_id, TimestampKind::Start);\n-\n-        TimingGuard(Some(TimingGuardInternal {\n-            raw_profiler,\n-            event_kind,\n-            event_id,\n-            thread_id,\n-        }))\n+        let timing_guard = raw_profiler.start_recording_interval_event(event_kind,\n+                                                                       event_id,\n+                                                                       thread_id);\n+        TimingGuard(Some(timing_guard))\n     }\n \n     #[inline]\n     pub fn none() -> TimingGuard<'a> {\n         TimingGuard(None)\n     }\n }\n-\n-impl<'a> Drop for TimingGuardInternal<'a> {\n-    #[inline]\n-    fn drop(&mut self) {\n-        self.raw_profiler.record_event(\n-            self.event_kind,\n-            self.event_id,\n-            self.thread_id,\n-            TimestampKind::End\n-        );\n-    }\n-}"}]}