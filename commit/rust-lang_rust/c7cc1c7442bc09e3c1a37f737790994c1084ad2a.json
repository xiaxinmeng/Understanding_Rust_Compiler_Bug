{"sha": "c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "node_id": "C_kwDOAAsO6NoAKGM3Y2MxYzc0NDJiYzA5ZTNjMWEzN2Y3Mzc3OTA5OTRjMTA4NGFkMmE", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-16T22:35:27Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-17T18:36:02Z"}, "message": "Fix generics mismatch errors for RPITITs on -Zlower-impl-trait-in-trait-to-assoc-ty", "tree": {"sha": "f244bbc2cf5a0213b79311b3a48383b66d284736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f244bbc2cf5a0213b79311b3a48383b66d284736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmQUsxIACgkQgTGiTgx5\n76/oHRAAkK02Jt2B1n2o0i0D8/LT/Xf8f4IZCLiBmNCkLVA1i4fYVjZXrqGOm3G6\nbWuiESHKSMsoEuVszPGzzkBTH10nnTfOfUObPEjMf5ztRxZhRgB7HJms1EWvMq+N\nQlpuRsqWxxxKpfAmn6+BPB7oM8CUK8N3FwEgxp9h1Ij6JKxWWmQIACpFZ6DlPPSU\n0khptTCBeCBPHL10mICG9NIE6eJCUHMzf6Eroc6dBHXNauwfTdBwoq7qv0rzTeay\nkV0c0kOd9dhxcwQ1hGtd8mU9NXH2z4qVLXCJyYbbP1mKf97w6zZbt9pRthrrpHhh\nRkmtY9TkTuTrg4LGFxWXBIq/vdFjWat3Mm9MLqyRGIkHxiKZAsloosqWOxDrYVjG\nPevESsmcZg8//FqqBugDvD6bsz+4N7PzKAfoycvfnXTebL8yIosJduPY/7DvnEKD\ne31wTv24/ycZPk1z3s2XN7FU4HpnVQ/gGpKa7EmJbMnX+BMt3FiRSAsFaYA5lDHy\n1xKyEbr7rAdEEknor6FatrTKwoCnfH2QBYMy5VN+ry2a2giLVPJrEb7aVkWRSg8B\niMMp/WM5KBpS8Fl/E7ey6p/HsSqHQd3cYgim3OJ5ZoY0Y64DIVQVBTI1dTNLUB8i\njjE2hdgiHt2DAN5ahQNxDe+Yhu2Tf6BaDb9ylgmJdplnk7sm6nw=\n=6z1C\n-----END PGP SIGNATURE-----", "payload": "tree f244bbc2cf5a0213b79311b3a48383b66d284736\nparent 03b01c5bec658081605ab078ad3fbcdb6b30f6c2\nauthor Santiago Pastorino <spastorino@gmail.com> 1679006127 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1679078162 -0300\n\nFix generics mismatch errors for RPITITs on -Zlower-impl-trait-in-trait-to-assoc-ty\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "html_url": "https://github.com/rust-lang/rust/commit/c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03b01c5bec658081605ab078ad3fbcdb6b30f6c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/03b01c5bec658081605ab078ad3fbcdb6b30f6c2", "html_url": "https://github.com/rust-lang/rust/commit/03b01c5bec658081605ab078ad3fbcdb6b30f6c2"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "32b6aeed5f8cc3de34a03a97587dd9bd4b14ecbc", "filename": "compiler/rustc_hir_analysis/src/check/compare_impl_item.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs?ref=c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "patch": "@@ -1205,6 +1205,17 @@ fn compare_number_of_generics<'tcx>(\n         return Ok(());\n     }\n \n+    // We never need to emit a separate error for RPITITs, since if an RPITIT\n+    // has mismatched type or const generic arguments, then the method that it's\n+    // inheriting the generics from will also have mismatched arguments, and\n+    // we'll report an error for that instead. Delay a bug for safety, though.\n+    if tcx.opt_rpitit_info(trait_.def_id).is_some() {\n+        return Err(tcx.sess.delay_span_bug(\n+            rustc_span::DUMMY_SP,\n+            \"errors comparing numbers of generics of trait/impl functions were not emitted\",\n+        ));\n+    }\n+\n     let matchings = [\n         (\"type\", trait_own_counts.types, impl_own_counts.types),\n         (\"const\", trait_own_counts.consts, impl_own_counts.consts),"}, {"sha": "310edbcb6cd1efc175144c569bdecf7c16c4f0a9", "filename": "tests/ui/impl-trait/in-trait/generics-mismatch.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.current.stderr?ref=c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "patch": "@@ -1,5 +1,5 @@\n error[E0049]: method `bar` has 1 type parameter but its trait declaration has 0 type parameters\n-  --> $DIR/generics-mismatch.rs:11:12\n+  --> $DIR/generics-mismatch.rs:14:12\n    |\n LL |     fn bar(&self) -> impl Sized;\n    |           - expected 0 type parameters", "previous_filename": "tests/ui/impl-trait/in-trait/generics-mismatch.stderr"}, {"sha": "310edbcb6cd1efc175144c569bdecf7c16c4f0a9", "filename": "tests/ui/impl-trait/in-trait/generics-mismatch.next.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.next.stderr?ref=c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "patch": "@@ -0,0 +1,12 @@\n+error[E0049]: method `bar` has 1 type parameter but its trait declaration has 0 type parameters\n+  --> $DIR/generics-mismatch.rs:14:12\n+   |\n+LL |     fn bar(&self) -> impl Sized;\n+   |           - expected 0 type parameters\n+...\n+LL |     fn bar<T>(&self) {}\n+   |            ^ found 1 type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0049`."}, {"sha": "9259ca193d1de79e085334798fe1a2cfbdcac029", "filename": "tests/ui/impl-trait/in-trait/generics-mismatch.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7cc1c7442bc09e3c1a37f737790994c1084ad2a/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.rs?ref=c7cc1c7442bc09e3c1a37f737790994c1084ad2a", "patch": "@@ -1,3 +1,6 @@\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n+\n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]\n "}]}