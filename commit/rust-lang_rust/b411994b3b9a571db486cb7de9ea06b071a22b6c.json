{"sha": "b411994b3b9a571db486cb7de9ea06b071a22b6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MTE5OTRiM2I5YTU3MWRiNDg2Y2I3ZGU5ZWEwNmIwNzFhMjJiNmM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-10T21:56:05Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-10T22:04:26Z"}, "message": "new trait alias tests\n\nCo-authored-by: Alexander Regueiro <alexreg@me.com>", "tree": {"sha": "159b4021c4f819e1aa9dce59c7d399cb43e94caa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/159b4021c4f819e1aa9dce59c7d399cb43e94caa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b411994b3b9a571db486cb7de9ea06b071a22b6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b411994b3b9a571db486cb7de9ea06b071a22b6c", "html_url": "https://github.com/rust-lang/rust/commit/b411994b3b9a571db486cb7de9ea06b071a22b6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b411994b3b9a571db486cb7de9ea06b071a22b6c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1336b8e8c7417fdde5384119a588a11ef0818cf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1336b8e8c7417fdde5384119a588a11ef0818cf3", "html_url": "https://github.com/rust-lang/rust/commit/1336b8e8c7417fdde5384119a588a11ef0818cf3"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "e2f3996927b7f8b93d850c779fd4fe83f78833cc", "filename": "src/test/ui/issues/issue-56488.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Fissues%2Fissue-56488.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Fissues%2Fissue-56488.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56488.rs?ref=b411994b3b9a571db486cb7de9ea06b071a22b6c", "patch": "@@ -0,0 +1,13 @@\n+// run-pass\n+\n+#![feature(trait_alias)]\n+\n+mod alpha {\n+    pub trait A {}\n+    pub trait C = A;\n+}\n+\n+#[allow(unused_imports)]\n+use alpha::C;\n+\n+fn main() {}"}, {"sha": "0d18965ee73387b6ae1715785235c2d1233f8423", "filename": "src/test/ui/lint/lint-incoherent-auto-trait-objects.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.rs?ref=b411994b3b9a571db486cb7de9ea06b071a22b6c", "patch": "@@ -0,0 +1,21 @@\n+// ignore-tidy-linelength\n+\n+trait Foo {}\n+\n+impl Foo for dyn Send {}\n+\n+impl Foo for dyn Send + Send {}\n+//~^ ERROR conflicting implementations\n+//~| hard error\n+\n+impl Foo for dyn Send + Sync {}\n+\n+impl Foo for dyn Sync + Send {}\n+//~^ ERROR conflicting implementations\n+//~| hard error\n+\n+impl Foo for dyn Send + Sync + Send {}\n+//~^ ERROR conflicting implementations\n+//~| hard error\n+\n+fn main() {}"}, {"sha": "928c92ef9165531c2beb0c723b1431cd6830113f", "filename": "src/test/ui/lint/lint-incoherent-auto-trait-objects.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr?ref=b411994b3b9a571db486cb7de9ea06b071a22b6c", "patch": "@@ -0,0 +1,39 @@\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + 'static)`: (E0119)\n+  --> $DIR/lint-incoherent-auto-trait-objects.rs:7:1\n+   |\n+LL | impl Foo for dyn Send {}\n+   | --------------------- first implementation here\n+LL | \n+LL | impl Foo for dyn Send + Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n+   |\n+   = note: #[deny(order_dependent_trait_objects)] on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/lint-incoherent-auto-trait-objects.rs:13:1\n+   |\n+LL | impl Foo for dyn Send + Sync {}\n+   | ---------------------------- first implementation here\n+LL | \n+LL | impl Foo for dyn Sync + Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/lint-incoherent-auto-trait-objects.rs:17:1\n+   |\n+LL | impl Foo for dyn Sync + Send {}\n+   | ---------------------------- first implementation here\n+...\n+LL | impl Foo for dyn Send + Sync + Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "9e56b87e088133d6e632ec47f25b066698297922", "filename": "src/test/ui/traits/auxiliary/trait_alias.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Ftraits%2Fauxiliary%2Ftrait_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Ftraits%2Fauxiliary%2Ftrait_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fauxiliary%2Ftrait_alias.rs?ref=b411994b3b9a571db486cb7de9ea06b071a22b6c", "patch": "@@ -0,0 +1,3 @@\n+#![feature(trait_alias)]\n+\n+pub trait SendSync = Send + Sync;"}, {"sha": "259fc4fa5d1ce9ef2ce92eeb1df727027bd290dd", "filename": "src/test/ui/traits/trait-alias-cross-crate.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-cross-crate.rs?ref=b411994b3b9a571db486cb7de9ea06b071a22b6c", "patch": "@@ -0,0 +1,17 @@\n+// aux-build:trait_alias.rs\n+\n+#![feature(trait_alias)]\n+\n+extern crate trait_alias;\n+\n+use std::rc::Rc;\n+use trait_alias::SendSync;\n+\n+fn use_alias<T: SendSync>() {}\n+\n+fn main() {\n+    use_alias::<u32>();\n+    use_alias::<Rc<u32>>();\n+    //~^ ERROR `std::rc::Rc<u32>` cannot be sent between threads safely [E0277]\n+    //~^^ ERROR `std::rc::Rc<u32>` cannot be shared between threads safely [E0277]\n+}"}, {"sha": "972d213ac8f8f30a79de429403850aa998dfbeb9", "filename": "src/test/ui/traits/trait-alias-cross-crate.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-cross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b411994b3b9a571db486cb7de9ea06b071a22b6c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-cross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-cross-crate.stderr?ref=b411994b3b9a571db486cb7de9ea06b071a22b6c", "patch": "@@ -0,0 +1,29 @@\n+error[E0277]: `std::rc::Rc<u32>` cannot be sent between threads safely\n+  --> $DIR/trait-alias-cross-crate.rs:14:5\n+   |\n+LL |     use_alias::<Rc<u32>>();\n+   |     ^^^^^^^^^^^^^^^^^^^^ `std::rc::Rc<u32>` cannot be sent between threads safely\n+   |\n+   = help: the trait `std::marker::Send` is not implemented for `std::rc::Rc<u32>`\n+note: required by `use_alias`\n+  --> $DIR/trait-alias-cross-crate.rs:10:1\n+   |\n+LL | fn use_alias<T: SendSync>() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: `std::rc::Rc<u32>` cannot be shared between threads safely\n+  --> $DIR/trait-alias-cross-crate.rs:14:5\n+   |\n+LL |     use_alias::<Rc<u32>>();\n+   |     ^^^^^^^^^^^^^^^^^^^^ `std::rc::Rc<u32>` cannot be shared between threads safely\n+   |\n+   = help: the trait `std::marker::Sync` is not implemented for `std::rc::Rc<u32>`\n+note: required by `use_alias`\n+  --> $DIR/trait-alias-cross-crate.rs:10:1\n+   |\n+LL | fn use_alias<T: SendSync>() {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}