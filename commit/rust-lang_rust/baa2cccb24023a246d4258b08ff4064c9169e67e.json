{"sha": "baa2cccb24023a246d4258b08ff4064c9169e67e", "node_id": "C_kwDOAAsO6NoAKGJhYTJjY2NiMjQwMjNhMjQ2ZDQyNThiMDhmZjQwNjRjOTE2OWU2N2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-16T17:13:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-16T17:13:44Z"}, "message": "Auto merge of #13038 - Veykril:rev-12947, r=Veykril\n\nRevert #12947, trigger workspace switches on all structure changes again\n\nCloses https://github.com/rust-lang/rust-analyzer/issues/13029", "tree": {"sha": "8969a8a4083c9781fa5e69a9262ecd16f732a028", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8969a8a4083c9781fa5e69a9262ecd16f732a028"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baa2cccb24023a246d4258b08ff4064c9169e67e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baa2cccb24023a246d4258b08ff4064c9169e67e", "html_url": "https://github.com/rust-lang/rust/commit/baa2cccb24023a246d4258b08ff4064c9169e67e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baa2cccb24023a246d4258b08ff4064c9169e67e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fa8bf18473b3661710f9f893fe5e3150d1246d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fa8bf18473b3661710f9f893fe5e3150d1246d6", "html_url": "https://github.com/rust-lang/rust/commit/8fa8bf18473b3661710f9f893fe5e3150d1246d6"}, {"sha": "1f73cbe8390d4a8ebe4e4039891567d8358c2c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f73cbe8390d4a8ebe4e4039891567d8358c2c70", "html_url": "https://github.com/rust-lang/rust/commit/1f73cbe8390d4a8ebe4e4039891567d8358c2c70"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "c55bbbbe6ef7c2c442e8593179daebe778e70303", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/baa2cccb24023a246d4258b08ff4064c9169e67e/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa2cccb24023a246d4258b08ff4064c9169e67e/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=baa2cccb24023a246d4258b08ff4064c9169e67e", "patch": "@@ -8,7 +8,7 @@ use std::{sync::Arc, time::Instant};\n use crossbeam_channel::{unbounded, Receiver, Sender};\n use flycheck::FlycheckHandle;\n use ide::{Analysis, AnalysisHost, Cancellable, Change, FileId};\n-use ide_db::base_db::{CrateId, FileLoader, SourceDatabase, SourceDatabaseExt};\n+use ide_db::base_db::{CrateId, FileLoader, SourceDatabase};\n use lsp_types::{SemanticTokens, Url};\n use parking_lot::{Mutex, RwLock};\n use proc_macro_api::ProcMacroServer;\n@@ -176,9 +176,9 @@ impl GlobalState {\n \n     pub(crate) fn process_changes(&mut self) -> bool {\n         let _p = profile::span(\"GlobalState::process_changes\");\n-        let mut fs_refresh_changes = Vec::new();\n         // A file was added or deleted\n         let mut has_structure_changes = false;\n+        let mut workspace_structure_change = None;\n \n         let (change, changed_files) = {\n             let mut change = Change::new();\n@@ -192,7 +192,7 @@ impl GlobalState {\n                 if let Some(path) = vfs.file_path(file.file_id).as_path() {\n                     let path = path.to_path_buf();\n                     if reload::should_refresh_for_change(&path, file.change_kind) {\n-                        fs_refresh_changes.push((path, file.file_id));\n+                        workspace_structure_change = Some(path);\n                     }\n                     if file.is_created_or_deleted() {\n                         has_structure_changes = true;\n@@ -227,11 +227,10 @@ impl GlobalState {\n \n         {\n             let raw_database = self.analysis_host.raw_database();\n-            let workspace_structure_change =\n-                fs_refresh_changes.into_iter().find(|&(_, file_id)| {\n-                    !raw_database.source_root(raw_database.file_source_root(file_id)).is_library\n-                });\n-            if let Some((path, _)) = workspace_structure_change {\n+            // FIXME: ideally we should only trigger a workspace fetch for non-library changes\n+            // but somethings going wrong with the source root business when we add a new local\n+            // crate see https://github.com/rust-lang/rust-analyzer/issues/13029\n+            if let Some(path) = workspace_structure_change {\n                 self.fetch_workspaces_queue\n                     .request_op(format!(\"workspace vfs file change: {}\", path.display()));\n             }"}]}