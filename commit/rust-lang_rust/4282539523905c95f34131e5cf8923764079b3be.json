{"sha": "4282539523905c95f34131e5cf8923764079b3be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyODI1Mzk1MjM5MDVjOTVmMzQxMzFlNWNmODkyMzc2NDA3OWIzYmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-08T21:41:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-08T21:41:07Z"}, "message": "std::rt: Add a hack to allocate different test port ranges to different bots", "tree": {"sha": "60d7a82cddbee8e86cff2818592775d7516fd87d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60d7a82cddbee8e86cff2818592775d7516fd87d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4282539523905c95f34131e5cf8923764079b3be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4282539523905c95f34131e5cf8923764079b3be", "html_url": "https://github.com/rust-lang/rust/commit/4282539523905c95f34131e5cf8923764079b3be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4282539523905c95f34131e5cf8923764079b3be/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1098d6980b13dc00e3f20deae987423e3bcae9ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/1098d6980b13dc00e3f20deae987423e3bcae9ce", "html_url": "https://github.com/rust-lang/rust/commit/1098d6980b13dc00e3f20deae987423e3bcae9ce"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "89687cf3fd2f780b9bc8ee1e208d996a2f310f1a", "filename": "src/libstd/rt/test.rs", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/4282539523905c95f34131e5cf8923764079b3be/src%2Flibstd%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4282539523905c95f34131e5cf8923764079b3be/src%2Flibstd%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftest.rs?ref=4282539523905c95f34131e5cf8923764079b3be", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use cell::Cell;\n+use libc;\n use uint;\n use option::{Some, None};\n use rt::sched::Scheduler;\n@@ -316,10 +317,10 @@ pub fn spawntask_thread(f: ~fn()) -> Thread {\n /// Get a port number, starting at 9600, for use in tests\n pub fn next_test_port() -> u16 {\n     unsafe {\n-        return rust_dbg_next_port() as u16;\n+        return rust_dbg_next_port(base_port() as libc::uintptr_t) as u16;\n     }\n     extern {\n-        fn rust_dbg_next_port() -> ::libc::uintptr_t;\n+        fn rust_dbg_next_port(base: libc::uintptr_t) -> libc::uintptr_t;\n     }\n }\n \n@@ -328,6 +329,47 @@ pub fn next_test_ip4() -> IpAddr {\n     Ipv4(127, 0, 0, 1, next_test_port())\n }\n \n+/*\n+XXX: Welcome to MegaHack City.\n+\n+The bots run multiple builds at the same time, and these builds\n+all want to use ports. This function figures out which workspace\n+it is running in and assigns a port range based on it.\n+*/\n+fn base_port() -> uint {\n+    use os;\n+    use str::StrSlice;\n+    use to_str::ToStr;\n+    use vec::ImmutableVector;\n+\n+    let base = 9600u;\n+    let range = 1000;\n+\n+    let bases = [\n+        (\"32-opt\", base + range * 1),\n+        (\"32-noopt\", base + range * 2),\n+        (\"64-opt\", base + range * 3),\n+        (\"64-noopt\", base + range * 4),\n+        (\"64-opt-vg\", base + range * 5),\n+        (\"all-opt\", base + range * 6),\n+        (\"snap3\", base + range * 7),\n+        (\"dist\", base + range * 8)\n+    ];\n+\n+    let path = os::getcwd().to_str();\n+\n+    let mut final_base = base;\n+\n+    for bases.iter().advance |&(dir, base)| {\n+        if path.contains(dir) {\n+            final_base = base;\n+            break;\n+        }\n+    }\n+\n+    return final_base;\n+}\n+\n /// Get a constant that represents the number of times to repeat\n /// stress tests. Default 1.\n pub fn stress_factor() -> uint {"}, {"sha": "2cfd5cf1eb63c0653165323ef675fb1f0dd1c27f", "filename": "src/rt/rust_test_helpers.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4282539523905c95f34131e5cf8923764079b3be/src%2Frt%2Frust_test_helpers.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4282539523905c95f34131e5cf8923764079b3be/src%2Frt%2Frust_test_helpers.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.cpp?ref=4282539523905c95f34131e5cf8923764079b3be", "patch": "@@ -168,11 +168,11 @@ rust_dbg_extern_identity_TwoDoubles(TwoDoubles u) {\n \n // Generates increasing port numbers for network testing\n extern \"C\" CDECL uintptr_t\n-rust_dbg_next_port() {\n+rust_dbg_next_port(uintptr_t base_port) {\n   static lock_and_signal dbg_port_lock;\n-  static uintptr_t next_port = 9600;\n+  static uintptr_t next_offset = 0;\n   scoped_lock with(dbg_port_lock);\n-  uintptr_t this_port = next_port;\n-  next_port += 1;\n+  uintptr_t this_port = base_port + next_offset;\n+  next_offset += 1;\n   return this_port;\n }"}]}