{"sha": "dbacacda8ac5dba72afd57b971c71a71242e7f67", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYWNhY2RhOGFjNWRiYTcyYWZkNTdiOTcxYzcxYTcxMjQyZTdmNjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-05T05:20:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-05T05:20:27Z"}, "message": "Auto merge of #30708 - GuillaumeGomez:malformed_macro, r=sanxiyn\n\nPart of #30669", "tree": {"sha": "809ee77b45119612ff208903a6beaa7cd8b1cbbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/809ee77b45119612ff208903a6beaa7cd8b1cbbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbacacda8ac5dba72afd57b971c71a71242e7f67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbacacda8ac5dba72afd57b971c71a71242e7f67", "html_url": "https://github.com/rust-lang/rust/commit/dbacacda8ac5dba72afd57b971c71a71242e7f67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbacacda8ac5dba72afd57b971c71a71242e7f67/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "803c3e2ee8be0516d68131d4c8bae31cfce67891", "url": "https://api.github.com/repos/rust-lang/rust/commits/803c3e2ee8be0516d68131d4c8bae31cfce67891", "html_url": "https://github.com/rust-lang/rust/commit/803c3e2ee8be0516d68131d4c8bae31cfce67891"}, {"sha": "6e68cdfcc212943fdee9ac5bf4c5e7e243790aae", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e68cdfcc212943fdee9ac5bf4c5e7e243790aae", "html_url": "https://github.com/rust-lang/rust/commit/6e68cdfcc212943fdee9ac5bf4c5e7e243790aae"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "38e6c21375c764cb835ae84e8808305ab11ce220", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbacacda8ac5dba72afd57b971c71a71242e7f67/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbacacda8ac5dba72afd57b971c71a71242e7f67/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=dbacacda8ac5dba72afd57b971c71a71242e7f67", "patch": "@@ -178,15 +178,15 @@ fn generic_extension<'cx>(cx: &'cx ExtCtxt,\n     for (i, lhs) in lhses.iter().enumerate() { // try each arm's matchers\n         let lhs_tt = match *lhs {\n             TokenTree::Delimited(_, ref delim) => &delim.tts[..],\n-            _ => cx.span_bug(sp, \"malformed macro lhs\")\n+            _ => cx.span_fatal(sp, \"malformed macro lhs\")\n         };\n \n         match TokenTree::parse(cx, lhs_tt, arg) {\n             Success(named_matches) => {\n                 let rhs = match rhses[i] {\n                     // ignore delimiters\n                     TokenTree::Delimited(_, ref delimed) => delimed.tts.clone(),\n-                    _ => cx.span_bug(sp, \"malformed macro rhs\"),\n+                    _ => cx.span_fatal(sp, \"malformed macro rhs\"),\n                 };\n                 // rhs has holes ( `$id` and `$(...)` that need filled)\n                 let trncbr = new_tt_reader(&cx.parse_sess().span_diagnostic,"}, {"sha": "88e19af2eea07514deb9b64789f24c8531550e37", "filename": "src/test/compile-fail/malformed_macro_lhs.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dbacacda8ac5dba72afd57b971c71a71242e7f67/src%2Ftest%2Fcompile-fail%2Fmalformed_macro_lhs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbacacda8ac5dba72afd57b971c71a71242e7f67/src%2Ftest%2Fcompile-fail%2Fmalformed_macro_lhs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmalformed_macro_lhs.rs?ref=dbacacda8ac5dba72afd57b971c71a71242e7f67", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! my_precioooous {\n+    $($t:tt)* => (1);\n+}\n+\n+fn main() {\n+    my_precioooous!(); //~ ERROR malformed macro lhs\n+}"}]}