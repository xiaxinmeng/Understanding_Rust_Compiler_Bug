{"sha": "6971b0d199579247a46aa2675f70d7a35ddcdbfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NzFiMGQxOTk1NzkyNDdhNDZhYTI2NzVmNzBkN2EzNWRkY2RiZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-27T14:44:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-27T14:44:02Z"}, "message": "Auto merge of #6812 - Y-Nak:fix-6792, r=matthiaskrgr\n\nFix ICEs 6792 and 6793\n\nfixes #6792, fixes #6793.\nr? `@matthiaskrgr`\n\nFixes the ICEs by replacing `TyCtxt::type_of` with `TypeckResults::expr_ty`.\n\nchangelog: none", "tree": {"sha": "23233c7d059efd040f0f31f185f7287925f54aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23233c7d059efd040f0f31f185f7287925f54aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6971b0d199579247a46aa2675f70d7a35ddcdbfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6971b0d199579247a46aa2675f70d7a35ddcdbfa", "html_url": "https://github.com/rust-lang/rust/commit/6971b0d199579247a46aa2675f70d7a35ddcdbfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6971b0d199579247a46aa2675f70d7a35ddcdbfa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7154b2360114977cd67bb844114cf429fa9cdb88", "url": "https://api.github.com/repos/rust-lang/rust/commits/7154b2360114977cd67bb844114cf429fa9cdb88", "html_url": "https://github.com/rust-lang/rust/commit/7154b2360114977cd67bb844114cf429fa9cdb88"}, {"sha": "e51bb0ee26413c8db8264abe413cc06c95bd9a13", "url": "https://api.github.com/repos/rust-lang/rust/commits/e51bb0ee26413c8db8264abe413cc06c95bd9a13", "html_url": "https://github.com/rust-lang/rust/commit/e51bb0ee26413c8db8264abe413cc06c95bd9a13"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "369efacc9bcf47f87aea5360875ba04f40cae2b4", "filename": "clippy_lints/src/default_numeric_fallback.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6971b0d199579247a46aa2675f70d7a35ddcdbfa/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971b0d199579247a46aa2675f70d7a35ddcdbfa/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs?ref=6971b0d199579247a46aa2675f70d7a35ddcdbfa", "patch": "@@ -130,10 +130,9 @@ impl<'a, 'tcx> Visitor<'tcx> for NumericFallbackVisitor<'a, 'tcx> {\n                 }\n             },\n \n-            ExprKind::Struct(qpath, fields, base) => {\n+            ExprKind::Struct(_, fields, base) => {\n                 if_chain! {\n-                    if let Some(def_id) = self.cx.qpath_res(qpath, expr.hir_id).opt_def_id();\n-                    let ty = self.cx.tcx.type_of(def_id);\n+                    let ty = self.cx.typeck_results().expr_ty(expr);\n                     if let Some(adt_def) = ty.ty_adt_def();\n                     if adt_def.is_struct();\n                     if let Some(variant) = adt_def.variants.iter().next();"}, {"sha": "4f35e13c85a1c7cc771425ffec4422f09b3defb4", "filename": "clippy_lints/src/inconsistent_struct_constructor.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6971b0d199579247a46aa2675f70d7a35ddcdbfa/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971b0d199579247a46aa2675f70d7a35ddcdbfa/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs?ref=6971b0d199579247a46aa2675f70d7a35ddcdbfa", "patch": "@@ -66,8 +66,7 @@ impl LateLintPass<'_> for InconsistentStructConstructor {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n         if_chain! {\n             if let ExprKind::Struct(qpath, fields, base) = expr.kind;\n-            if let Some(def_id)  = cx.qpath_res(qpath, expr.hir_id).opt_def_id();\n-            let ty = cx.tcx.type_of(def_id);\n+            let ty = cx.typeck_results().expr_ty(expr);\n             if let Some(adt_def) = ty.ty_adt_def();\n             if adt_def.is_struct();\n             if let Some(variant) = adt_def.variants.iter().next();"}, {"sha": "0e2ab1a39b82f98c0faefe4187c36f3c52b5a78f", "filename": "tests/ui/crashes/ice-6792.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6971b0d199579247a46aa2675f70d7a35ddcdbfa/tests%2Fui%2Fcrashes%2Fice-6792.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971b0d199579247a46aa2675f70d7a35ddcdbfa/tests%2Fui%2Fcrashes%2Fice-6792.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6792.rs?ref=6971b0d199579247a46aa2675f70d7a35ddcdbfa", "patch": "@@ -0,0 +1,20 @@\n+//! This is a reproducer for the ICE 6792: https://github.com/rust-lang/rust-clippy/issues/6792.\n+//! The ICE is caused by using `TyCtxt::type_of(assoc_type_id)`.\n+\n+trait Trait {\n+    type Ty;\n+\n+    fn broken() -> Self::Ty;\n+}\n+\n+struct Foo {}\n+\n+impl Trait for Foo {\n+    type Ty = Foo;\n+\n+    fn broken() -> Self::Ty {\n+        Self::Ty {}\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "12a4a0d25ef5d79cb30f741bcc60a7d27489c481", "filename": "tests/ui/crashes/ice-6793.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6971b0d199579247a46aa2675f70d7a35ddcdbfa/tests%2Fui%2Fcrashes%2Fice-6793.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971b0d199579247a46aa2675f70d7a35ddcdbfa/tests%2Fui%2Fcrashes%2Fice-6793.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6793.rs?ref=6971b0d199579247a46aa2675f70d7a35ddcdbfa", "patch": "@@ -0,0 +1,23 @@\n+//! This is a reproducer for the ICE 6793: https://github.com/rust-lang/rust-clippy/issues/6793.\n+//! The ICE is caused by using `TyCtxt::type_of(assoc_type_id)`, which is the same as the ICE 6792.\n+\n+trait Trait {\n+    type Ty: 'static + Clone;\n+\n+    fn broken() -> Self::Ty;\n+}\n+\n+#[derive(Clone)]\n+struct MyType {\n+    x: i32,\n+}\n+\n+impl Trait for MyType {\n+    type Ty = MyType;\n+\n+    fn broken() -> Self::Ty {\n+        Self::Ty { x: 1 }\n+    }\n+}\n+\n+fn main() {}"}]}