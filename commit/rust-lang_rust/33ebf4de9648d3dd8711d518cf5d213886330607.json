{"sha": "33ebf4de9648d3dd8711d518cf5d213886330607", "node_id": "C_kwDOAAsO6NoAKDMzZWJmNGRlOTY0OGQzZGQ4NzExZDUxOGNmNWQyMTM4ODYzMzA2MDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-11T15:02:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T15:02:47Z"}, "message": "Rollup merge of #91682 - camelid:alias-layout, r=jyn514\n\nrustdoc: Show type layout for type aliases\n\nFixes #91265.\n\nAt first, you might think, \"Why not just click through to the aliased\ntype?\" But, if a type alias instantiates all of the generic parameters\nof the aliased type, then it can show layout info even though the\naliased type cannot (because we can't compute layout for generic types).\nSo, I think it's useful to show layout info for type aliases.\n\nThis is a followup of 78d4b453ad2e19d44011b26fc55c949bff5dba3d\n(originally part of #83501).", "tree": {"sha": "c865bdc36e75c14f83330582b998480623a1e93b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c865bdc36e75c14f83330582b998480623a1e93b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33ebf4de9648d3dd8711d518cf5d213886330607", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtL2XCRBK7hj4Ov3rIwAAM/gIAJ5b24nmdBPV49VF7bb3kJyQ\n1FHDxAOdZiZtPMzUIQ9LIe1A/KfK6tPPKXYSYO3N+2XCHZz+So00GgeaE0pand9R\n/nTC9XArdR4PJ8soBDFmY5jLnAgOWFTCCJzWFw8GGccaThQoVnQpcTHU/myJnMlA\nEWl0BVe5s8sW762LWHoT03lkvUQloD5oBs8PLrSK9iMhm6aPD3/HonZ6qmmSrWN1\npnqHZ5A/psnb9C1a2ycfJsbpmpKYba79qPMzoxp4Xx5C55jekJhLoSpE0/WbsD2t\ne1t5x5mNm7sQt5Nicv4rjzo9CmO5QRbif0KD5E+cq4n1ClzGtyeidX2iLmykxUo=\n=U9fy\n-----END PGP SIGNATURE-----\n", "payload": "tree c865bdc36e75c14f83330582b998480623a1e93b\nparent 7083f8edfd24b1c7f2c6375badd5cc16359c84fe\nparent e36da67a5ea12cdc0dd589f89b57b21d70385720\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639234967 +0100\ncommitter GitHub <noreply@github.com> 1639234967 +0100\n\nRollup merge of #91682 - camelid:alias-layout, r=jyn514\n\nrustdoc: Show type layout for type aliases\n\nFixes #91265.\n\nAt first, you might think, \"Why not just click through to the aliased\ntype?\" But, if a type alias instantiates all of the generic parameters\nof the aliased type, then it can show layout info even though the\naliased type cannot (because we can't compute layout for generic types).\nSo, I think it's useful to show layout info for type aliases.\n\nThis is a followup of 78d4b453ad2e19d44011b26fc55c949bff5dba3d\n(originally part of #83501).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33ebf4de9648d3dd8711d518cf5d213886330607", "html_url": "https://github.com/rust-lang/rust/commit/33ebf4de9648d3dd8711d518cf5d213886330607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33ebf4de9648d3dd8711d518cf5d213886330607/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7083f8edfd24b1c7f2c6375badd5cc16359c84fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/7083f8edfd24b1c7f2c6375badd5cc16359c84fe", "html_url": "https://github.com/rust-lang/rust/commit/7083f8edfd24b1c7f2c6375badd5cc16359c84fe"}, {"sha": "e36da67a5ea12cdc0dd589f89b57b21d70385720", "url": "https://api.github.com/repos/rust-lang/rust/commits/e36da67a5ea12cdc0dd589f89b57b21d70385720", "html_url": "https://github.com/rust-lang/rust/commit/e36da67a5ea12cdc0dd589f89b57b21d70385720"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "9943e23b9281c1b07d54b485cc890391e0a4064e", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33ebf4de9648d3dd8711d518cf5d213886330607/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ebf4de9648d3dd8711d518cf5d213886330607/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=33ebf4de9648d3dd8711d518cf5d213886330607", "patch": "@@ -976,6 +976,7 @@ fn item_typedef(\n     // associated items from the aliased type (see discussion in #32077), but\n     // we need #14072 to make sense of the generics.\n     render_assoc_items(w, cx, it, def_id, AssocItemRender::All);\n+    document_type_layout(w, cx, def_id);\n }\n \n fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Union) {"}, {"sha": "4eea9809ac58f66e19e5bab3f29307c6a6c19d6d", "filename": "src/test/rustdoc/type-layout.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/33ebf4de9648d3dd8711d518cf5d213886330607/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ebf4de9648d3dd8711d518cf5d213886330607/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout.rs?ref=33ebf4de9648d3dd8711d518cf5d213886330607", "patch": "@@ -50,6 +50,18 @@ pub struct GenericLifetimes<'a>(&'a str);\n // @has - '(unsized)'\n pub struct Unsized([u8]);\n \n+// @has type_layout/type.TypeAlias.html 'Size: '\n+// @has - ' bytes'\n+pub type TypeAlias = X;\n+\n+// @has type_layout/type.GenericTypeAlias.html 'Size: '\n+// @has - '8 bytes'\n+pub type GenericTypeAlias = (Generic<(u32, ())>, Generic<u32>);\n+\n+// Regression test for the rustdoc equivalent of #85103.\n+// @has type_layout/type.Edges.html 'Encountered an error during type layout; the type failed to be normalized.'\n+pub type Edges<'a, E> = std::borrow::Cow<'a, [E]>;\n+\n // @!has type_layout/trait.MyTrait.html 'Size: '\n pub trait MyTrait {}\n "}]}