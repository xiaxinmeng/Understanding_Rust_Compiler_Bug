{"sha": "b658050846f5ebb81f862934e130a1fa17927fe0", "node_id": "C_kwDOAAsO6NoAKGI2NTgwNTA4NDZmNWViYjgxZjg2MjkzNGUxMzBhMWZhMTc5MjdmZTA", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-20T00:42:18Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-20T02:56:48Z"}, "message": "Demonstrate the bug", "tree": {"sha": "b8fb0910d27f15d956b97086101fd7f344bde1c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8fb0910d27f15d956b97086101fd7f344bde1c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b658050846f5ebb81f862934e130a1fa17927fe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b658050846f5ebb81f862934e130a1fa17927fe0", "html_url": "https://github.com/rust-lang/rust/commit/b658050846f5ebb81f862934e130a1fa17927fe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b658050846f5ebb81f862934e130a1fa17927fe0/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39c6804b92aa202369e402525cee329556bc1db0", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c6804b92aa202369e402525cee329556bc1db0", "html_url": "https://github.com/rust-lang/rust/commit/39c6804b92aa202369e402525cee329556bc1db0"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "09779d789e535e540f014d4b08d5ce6f9c0eb173", "filename": "tests/mir-opt/instcombine_duplicate_switch_targets_e2e.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b658050846f5ebb81f862934e130a1fa17927fe0/tests%2Fmir-opt%2Finstcombine_duplicate_switch_targets_e2e.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b658050846f5ebb81f862934e130a1fa17927fe0/tests%2Fmir-opt%2Finstcombine_duplicate_switch_targets_e2e.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finstcombine_duplicate_switch_targets_e2e.rs?ref=b658050846f5ebb81f862934e130a1fa17927fe0", "patch": "@@ -0,0 +1,16 @@\n+// compile-flags: -Zmir-opt-level=2 -Zinline-mir\n+// ignore-debug: standard library debug assertions add a panic that breaks this optimization\n+#![crate_type = \"lib\"]\n+\n+pub enum Thing {\n+    A,\n+    B,\n+}\n+\n+// EMIT_MIR instcombine_duplicate_switch_targets_e2e.ub_if_b.PreCodegen.after.mir\n+pub unsafe fn ub_if_b(t: Thing) -> Thing {\n+    match t {\n+        Thing::A => t,\n+        Thing::B => std::hint::unreachable_unchecked(),\n+    }\n+}"}, {"sha": "ac60c0381c26aae575144ef072ac9aacbde0782e", "filename": "tests/mir-opt/instcombine_duplicate_switch_targets_e2e.ub_if_b.PreCodegen.after.mir", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b658050846f5ebb81f862934e130a1fa17927fe0/tests%2Fmir-opt%2Finstcombine_duplicate_switch_targets_e2e.ub_if_b.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b658050846f5ebb81f862934e130a1fa17927fe0/tests%2Fmir-opt%2Finstcombine_duplicate_switch_targets_e2e.ub_if_b.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finstcombine_duplicate_switch_targets_e2e.ub_if_b.PreCodegen.after.mir?ref=b658050846f5ebb81f862934e130a1fa17927fe0", "patch": "@@ -0,0 +1,27 @@\n+// MIR for `ub_if_b` after PreCodegen\n+\n+fn ub_if_b(_1: Thing) -> Thing {\n+    debug t => _1;                       // in scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+0:23: +0:24\n+    let mut _0: Thing;                   // return place in scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+0:36: +0:41\n+    let mut _2: isize;                   // in scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+2:9: +2:17\n+    scope 1 (inlined unreachable_unchecked) { // at $DIR/instcombine_duplicate_switch_targets_e2e.rs:14:21: 14:55\n+        scope 2 {\n+            scope 3 (inlined unreachable_unchecked::runtime) { // at $SRC_DIR/core/src/intrinsics.rs:LL:COL\n+            }\n+        }\n+    }\n+\n+    bb0: {\n+        _2 = discriminant(_1);           // scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+1:11: +1:12\n+        switchInt(move _2) -> [0: bb2, 1: bb1, otherwise: bb1]; // scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+1:5: +1:12\n+    }\n+\n+    bb1: {\n+        unreachable;                     // scope 2 at $SRC_DIR/core/src/intrinsics.rs:LL:COL\n+    }\n+\n+    bb2: {\n+        _0 = move _1;                    // scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+2:21: +2:22\n+        return;                          // scope 0 at $DIR/instcombine_duplicate_switch_targets_e2e.rs:+5:2: +5:2\n+    }\n+}"}]}