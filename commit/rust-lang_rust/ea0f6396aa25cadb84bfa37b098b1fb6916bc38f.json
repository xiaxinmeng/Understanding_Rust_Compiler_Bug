{"sha": "ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMGY2Mzk2YWEyNWNhZGI4NGJmYTM3YjA5OGIxZmI2OTE2YmMzOGY=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-01-01T21:35:56Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-01-01T21:35:56Z"}, "message": "const_generics_defaults: don't use todo\n\nSo that at least it won't ICE for users whether or not they enable the gate. For developers the FIXMEs are enough.", "tree": {"sha": "daff838f7384a49dfb781b84f8f036cef276d243", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daff838f7384a49dfb781b84f8f036cef276d243"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "html_url": "https://github.com/rust-lang/rust/commit/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "206ee1eea3467fd1d7f1efdbeafe27880897bb2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/206ee1eea3467fd1d7f1efdbeafe27880897bb2c", "html_url": "https://github.com/rust-lang/rust/commit/206ee1eea3467fd1d7f1efdbeafe27880897bb2c"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "0e4f2798bd313e97c6d71bac84bd8f47447dc10b", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "patch": "@@ -2677,7 +2677,6 @@ impl<'a> State<'a> {\n                     s.print_type_bounds(\":\", &param.bounds);\n                     if let Some(ref _default) = default {\n                         // FIXME(const_generics_defaults): print the `default` value here\n-                        todo!();\n                     }\n                 }\n             }"}, {"sha": "eb6c65fcd8c8114b0d2742c076dbed9d820f8f59", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "patch": "@@ -2210,7 +2210,6 @@ impl<'a> State<'a> {\n                 self.print_type(ty);\n                 if let Some(ref _default) = default {\n                     // FIXME(const_generics_defaults): print the `default` value here\n-                    todo!();\n                 }\n             }\n         }"}, {"sha": "ab3da270fe66faf6cd6481adf88a072551ea29a6", "filename": "compiler/rustc_save_analysis/src/sig.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0f6396aa25cadb84bfa37b098b1fb6916bc38f/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs?ref=ea0f6396aa25cadb84bfa37b098b1fb6916bc38f", "patch": "@@ -619,7 +619,6 @@ impl<'hir> Sig for hir::Generics<'hir> {\n                 param_text.push_str(&ty_to_string(&ty));\n                 if let Some(ref _default) = default {\n                     // FIXME(const_generics_defaults): push the `default` value here\n-                    todo!();\n                 }\n             }\n             if !param.bounds.is_empty() {"}]}