{"sha": "6f9539a15c4f09dfa296d5f815ca341af1345382", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOTUzOWExNWM0ZjA5ZGZhMjk2ZDVmODE1Y2EzNDFhZjEzNDUzODI=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-09-13T19:01:15Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-09-13T19:01:15Z"}, "message": "Merge pull request #3487 from Blei/fix-3465\n\nrt: Implement ThreadPerCore scheduling mode", "tree": {"sha": "e8978f0a7c7b59358ae5561fad9f9df94e96a80a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8978f0a7c7b59358ae5561fad9f9df94e96a80a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f9539a15c4f09dfa296d5f815ca341af1345382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9539a15c4f09dfa296d5f815ca341af1345382", "html_url": "https://github.com/rust-lang/rust/commit/6f9539a15c4f09dfa296d5f815ca341af1345382", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f9539a15c4f09dfa296d5f815ca341af1345382/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b776395263bfc9908d8fec80d7d1d0f67b8490e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b776395263bfc9908d8fec80d7d1d0f67b8490e8", "html_url": "https://github.com/rust-lang/rust/commit/b776395263bfc9908d8fec80d7d1d0f67b8490e8"}, {"sha": "62b51d9152e3289c8054792035ea63088247fead", "url": "https://api.github.com/repos/rust-lang/rust/commits/62b51d9152e3289c8054792035ea63088247fead", "html_url": "https://github.com/rust-lang/rust/commit/62b51d9152e3289c8054792035ea63088247fead"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "2780836599e31e6fb1c4636cf28510950442026c", "filename": "src/libcore/task.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6f9539a15c4f09dfa296d5f815ca341af1345382/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9539a15c4f09dfa296d5f815ca341af1345382/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=6f9539a15c4f09dfa296d5f815ca341af1345382", "patch": "@@ -1403,11 +1403,9 @@ fn spawn_raw(+opts: TaskOpts, +f: fn~()) {\n \n         let num_threads = match opts.mode {\n           SingleThreaded => 1u,\n-          ThreadPerCore => {\n-            fail ~\"thread_per_core scheduling mode unimplemented\"\n-          }\n+          ThreadPerCore => rustrt::rust_num_threads(),\n           ThreadPerTask => {\n-            fail ~\"thread_per_task scheduling mode unimplemented\"\n+            fail ~\"ThreadPerTask scheduling mode unimplemented\"\n           }\n           ManualThreads(threads) => {\n             if threads == 0u {\n@@ -1657,6 +1655,8 @@ extern mod rustrt {\n \n     fn rust_get_sched_id() -> sched_id;\n     fn rust_new_sched(num_threads: libc::uintptr_t) -> sched_id;\n+    fn sched_threads() -> libc::size_t;\n+    fn rust_num_threads() -> libc::uintptr_t;\n \n     fn get_task_id() -> task_id;\n     #[rust_stack]\n@@ -2422,3 +2422,13 @@ fn test_tls_cleanup_on_failure() unsafe {\n     local_data_set(int_key, @31337);\n     fail;\n }\n+\n+#[test]\n+fn test_sched_thread_per_core() {\n+    let cores = rustrt::rust_num_threads();\n+    let mut reported_threads = 0u;\n+    do spawn_sched(ThreadPerCore) {\n+        reported_threads = rustrt::sched_threads();\n+    }\n+    assert(cores == reported_threads);\n+}"}, {"sha": "a601908359c8c2a394955285d56a9dc6d3d1f391", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6f9539a15c4f09dfa296d5f815ca341af1345382/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6f9539a15c4f09dfa296d5f815ca341af1345382/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=6f9539a15c4f09dfa296d5f815ca341af1345382", "patch": "@@ -572,6 +572,12 @@ rust_get_sched_id() {\n     return task->sched->get_id();\n }\n \n+extern \"C\" CDECL uintptr_t\n+rust_num_threads() {\n+    rust_task *task = rust_get_current_task();\n+    return task->kernel->env->num_sched_threads;\n+}\n+\n extern \"C\" CDECL rust_sched_id\n rust_new_sched(uintptr_t threads) {\n     rust_task *task = rust_get_current_task();\n@@ -620,7 +626,7 @@ start_task(rust_task *target, fn_env_pair *f) {\n     target->start(f->f, f->env, NULL);\n }\n \n-extern \"C\" CDECL int\n+extern \"C\" CDECL size_t\n sched_threads() {\n     rust_task *task = rust_get_current_task();\n     return task->sched->number_of_threads();"}, {"sha": "cb2f36fe31ba40f5b5abbb2f1864ea9941dde503", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f9539a15c4f09dfa296d5f815ca341af1345382/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/6f9539a15c4f09dfa296d5f815ca341af1345382/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=6f9539a15c4f09dfa296d5f815ca341af1345382", "patch": "@@ -32,6 +32,7 @@ rand_seed\n rust_get_sched_id\n rust_new_sched\n rust_new_task_in_sched\n+rust_num_threads\n rust_path_is_dir\n rust_path_exists\n rust_getcwd"}]}