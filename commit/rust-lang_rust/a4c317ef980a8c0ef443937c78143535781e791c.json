{"sha": "a4c317ef980a8c0ef443937c78143535781e791c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YzMxN2VmOTgwYThjMGVmNDQzOTM3Yzc4MTQzNTM1NzgxZTc5MWM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-19T16:44:46Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-19T16:44:46Z"}, "message": "Be more cheerful and helpful", "tree": {"sha": "8cc2b0d73bf11b9cc1b5e086477c19f3db1fe58e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cc2b0d73bf11b9cc1b5e086477c19f3db1fe58e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4c317ef980a8c0ef443937c78143535781e791c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4c317ef980a8c0ef443937c78143535781e791c", "html_url": "https://github.com/rust-lang/rust/commit/a4c317ef980a8c0ef443937c78143535781e791c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4c317ef980a8c0ef443937c78143535781e791c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab5fc7fb5b2028323ac30a0f67bf13202071936c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab5fc7fb5b2028323ac30a0f67bf13202071936c", "html_url": "https://github.com/rust-lang/rust/commit/ab5fc7fb5b2028323ac30a0f67bf13202071936c"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "fbb3bc9a75154a78189221626cdce31bfd786127", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 28, "deletions": 13, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a4c317ef980a8c0ef443937c78143535781e791c/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/a4c317ef980a8c0ef443937c78143535781e791c/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=a4c317ef980a8c0ef443937c78143535781e791c", "patch": "@@ -34,6 +34,17 @@\n     'rust-by-example': '@steveklabnik @marioidival @projektir',\n }\n \n+REPOS = {\n+    'miri': 'https://github.com/solson/miri',\n+    'clippy-driver': 'https://github.com/rust-lang/rust-clippy',\n+    'rls': 'https://github.com/rust-lang/rls',\n+    'rustfmt': 'https://github.com/rust-lang/rustfmt',\n+    'book': 'https://github.com/rust-lang/book',\n+    'nomicon': 'https://github.com/rust-lang-nursery/nomicon',\n+    'reference': 'https://github.com/rust-lang-nursery/reference',\n+    'rust-by-example': 'https://github.com/rust-lang/rust-by-example',\n+}\n+\n \n def read_current_status(current_commit, path):\n     '''Reads build status of `current_commit` from content of `history/*.tsv`\n@@ -50,7 +61,7 @@ def issue(\n     maintainers,\n     relevant_pr_number,\n     relevant_pr_user,\n-    msg,\n+    pr_reviewer,\n ):\n     # Open an issue about the toolstate failure.\n     gh_url = 'https://api.github.com/repos/rust-lang/rust/issues'\n@@ -60,15 +71,16 @@ def issue(\n         gh_url,\n         json.dumps({\n             'body': '''\\\n-            @{}: your PR ({}) broke {}\n+            Hello, this is your friendly neighborhood mergebot.\n+            After merging PR {}, I observed that the tool {} no longer builds.\n+            A follow-up PR to the repository {} is needed to fix the fallout.\n \n-            If you have the time it would be great if you could open a PR against {} that\n-            fixes the fallout from your PR.\n+            cc @{}, do you think you would have time to do the follow-up work? If so, that would be great!\n \n-            {}\n+            cc @{}, the PR reviewer, and @rust-lang/compiler -- nominating for prioritization.\n \n-            '''.format(relevant_pr_user, relevant_pr_number, tool, tool, msg),\n-            'title': '\ud83d\udc94 {}'.format(tool),\n+            '''.format(relevant_pr_number, tool, REPOS[tool], relevant_pr_user, pr_reviewer),\n+            'title': '`{}` no longer builds after {}'.format(tool, relevant_pr_number),\n             'assignees': assignees,\n             'labels': ['T-compiler', 'I-nominated'],\n         }),\n@@ -84,6 +96,7 @@ def update_latest(\n     relevant_pr_number,\n     relevant_pr_url,\n     relevant_pr_user,\n+    pr_reviewer,\n     current_datetime\n ):\n     '''Updates `_data/latest.json` to match build result of the given commit.\n@@ -108,7 +121,7 @@ def update_latest(\n         for status in latest:\n             tool = status['tool']\n             changed = False\n-            failures = ''\n+            build_failed = False\n \n             for os, s in current_status.items():\n                 old = status[os]\n@@ -128,11 +141,10 @@ def update_latest(\n                         .format(title, MAINTAINERS.get(tool))\n                     # only create issues for build failures. Other failures can be spurious\n                     if new == 'build-fail':\n-                        failures += title\n-                        failures += '\\n'\n+                        build_failed = True\n \n-            if failures != '':\n-                issue(tool, MAINTAINERS.get(tool), relevant_pr_number, relevant_pr_user, failures)\n+            if build_failed:\n+                issue(tool, MAINTAINERS.get(tool), relevant_pr_number, relevant_pr_user, pr_reviewer)\n \n             if changed:\n                 status['commit'] = current_commit\n@@ -156,23 +168,26 @@ def update_latest(\n     github_token = sys.argv[4]\n \n     # assume that PR authors are also owners of the repo where the branch lives\n-    relevant_pr_match = re.search('Auto merge of #([0-9]+) - ([^:]+)', cur_commit_msg)\n+    relevant_pr_match = re.search('Auto merge of #([0-9]+) - ([^:]+):[^,]+ r=([^\\s]+)', cur_commit_msg)\n     if relevant_pr_match:\n         number = relevant_pr_match.group(1)\n         relevant_pr_user = relevant_pr_match.group(2)\n         relevant_pr_number = 'rust-lang/rust#' + number\n         relevant_pr_url = 'https://github.com/rust-lang/rust/pull/' + number\n+        pr_reviewer = relevant_pr_match.group(3)\n     else:\n         number = '-1'\n         relevant_pr_user = '<unknown user>'\n         relevant_pr_number = '<unknown PR>'\n         relevant_pr_url = '<unknown>'\n+        pr_reviewer = '<unknown reviewer>'\n \n     message = update_latest(\n         cur_commit,\n         relevant_pr_number,\n         relevant_pr_url,\n         relevant_pr_user,\n+        pr_reviewer,\n         cur_datetime\n     )\n     if not message:"}]}