{"sha": "869160215113c17cdcc419b8ed8ae24be927058c", "node_id": "C_kwDOAAsO6NoAKDg2OTE2MDIxNTExM2MxN2NkY2M0MTliOGVkOGFlMjRiZTkyNzA1OGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-29T19:03:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-29T19:03:35Z"}, "message": "Rollup merge of #106540 - lowr:patch/remove-paren-whitespace, r=cjgillot\n\nInsert whitespace to avoid ident concatenation in suggestion\n\nThis PR tweaks the suggestion of removing misplaced parentheses around trait bounds so as to avoid concatenating two identifiers. Although subtle, this should make outputs less surprising especially when applying the `MachineApplicable` suggestions automatically.", "tree": {"sha": "935e882bb3d4c892960e0fc6e298c6fe188e5d20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/935e882bb3d4c892960e0fc6e298c6fe188e5d20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/869160215113c17cdcc419b8ed8ae24be927058c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj1sMHCRBK7hj4Ov3rIwAAmSMIAEV4z5hH5cxiiYZLCRclYGhz\nORpQj6fwf14DNSNTkcRLbkzc12ZdDMIQhmktSSRX18JrzEDN9dUJ+PH5s8khUtIF\nQ7v/JYvXrYb5C52w//gQaU/+Z3vk/zklJ/I8U01u2YJUSUYNaODry4bjtx6qnbva\nXM9BfDAPLRwlffPRAEuM4xrDshagsUGBQTilGtoZktPKNydqL/xIGBUAXYawsU7k\nAdX6P9IX4UvbWFFdu9PxPRdEDF8nDhlffvARjFdnPfKkJ368ONupwRpc90EubbpN\nVUFVhclDpg0HQC5f48S6g5m77gcryLS0bsJFHkB91tpaG2btIqU4ZNF3JQAS2TU=\n=8axD\n-----END PGP SIGNATURE-----\n", "payload": "tree 935e882bb3d4c892960e0fc6e298c6fe188e5d20\nparent 309fb1923f0b55b057565472fce3971ed8eb4378\nparent 807ebac887a535b047da349297bdd8d14e31f794\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675019015 +0100\ncommitter GitHub <noreply@github.com> 1675019015 +0100\n\nRollup merge of #106540 - lowr:patch/remove-paren-whitespace, r=cjgillot\n\nInsert whitespace to avoid ident concatenation in suggestion\n\nThis PR tweaks the suggestion of removing misplaced parentheses around trait bounds so as to avoid concatenating two identifiers. Although subtle, this should make outputs less surprising especially when applying the `MachineApplicable` suggestions automatically.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/869160215113c17cdcc419b8ed8ae24be927058c", "html_url": "https://github.com/rust-lang/rust/commit/869160215113c17cdcc419b8ed8ae24be927058c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/869160215113c17cdcc419b8ed8ae24be927058c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "309fb1923f0b55b057565472fce3971ed8eb4378", "url": "https://api.github.com/repos/rust-lang/rust/commits/309fb1923f0b55b057565472fce3971ed8eb4378", "html_url": "https://github.com/rust-lang/rust/commit/309fb1923f0b55b057565472fce3971ed8eb4378"}, {"sha": "807ebac887a535b047da349297bdd8d14e31f794", "url": "https://api.github.com/repos/rust-lang/rust/commits/807ebac887a535b047da349297bdd8d14e31f794", "html_url": "https://github.com/rust-lang/rust/commit/807ebac887a535b047da349297bdd8d14e31f794"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "82d9138c7a331948c16e4c50bf711f558a845d33", "filename": "compiler/rustc_parse/src/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869160215113c17cdcc419b8ed8ae24be927058c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869160215113c17cdcc419b8ed8ae24be927058c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs?ref=869160215113c17cdcc419b8ed8ae24be927058c", "patch": "@@ -1048,7 +1048,7 @@ impl<'a> Parser<'a> {\n                 self.parse_remaining_bounds(bounds, true)?;\n                 self.expect(&token::CloseDelim(Delimiter::Parenthesis))?;\n                 let sp = vec![lo, self.prev_token.span];\n-                let sugg: Vec<_> = sp.iter().map(|sp| (*sp, String::new())).collect();\n+                let sugg = vec![(lo, String::from(\" \")), (self.prev_token.span, String::new())];\n                 self.struct_span_err(sp, \"incorrect braces around trait bounds\")\n                     .multipart_suggestion(\n                         \"remove the parentheses\","}, {"sha": "c41cda18743c81c37c7369a5d315bbf6ce749fae", "filename": "tests/ui/parser/trait-object-delimiters.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869160215113c17cdcc419b8ed8ae24be927058c/tests%2Fui%2Fparser%2Ftrait-object-delimiters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869160215113c17cdcc419b8ed8ae24be927058c/tests%2Fui%2Fparser%2Ftrait-object-delimiters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-object-delimiters.rs?ref=869160215113c17cdcc419b8ed8ae24be927058c", "patch": "@@ -5,6 +5,8 @@ fn foo1(_: &dyn Drop + AsRef<str>) {} //~ ERROR ambiguous `+` in a type\n \n fn foo2(_: &dyn (Drop + AsRef<str>)) {} //~ ERROR incorrect braces around trait bounds\n \n+fn foo2_no_space(_: &dyn(Drop + AsRef<str>)) {} //~ ERROR incorrect braces around trait bounds\n+\n fn foo3(_: &dyn {Drop + AsRef<str>}) {} //~ ERROR expected parameter name, found `{`\n //~^ ERROR expected one of `!`, `(`, `)`, `*`, `,`, `?`, `for`, `~`, lifetime, or path, found `{`\n //~| ERROR at least one trait is required for an object type"}, {"sha": "ccce3a8053e703c4e15030c576873eddc0abbb11", "filename": "tests/ui/parser/trait-object-delimiters.stderr", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/869160215113c17cdcc419b8ed8ae24be927058c/tests%2Fui%2Fparser%2Ftrait-object-delimiters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/869160215113c17cdcc419b8ed8ae24be927058c/tests%2Fui%2Fparser%2Ftrait-object-delimiters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-object-delimiters.stderr?ref=869160215113c17cdcc419b8ed8ae24be927058c", "patch": "@@ -13,31 +13,43 @@ LL | fn foo2(_: &dyn (Drop + AsRef<str>)) {}\n help: remove the parentheses\n    |\n LL - fn foo2(_: &dyn (Drop + AsRef<str>)) {}\n-LL + fn foo2(_: &dyn Drop + AsRef<str>) {}\n+LL + fn foo2(_: &dyn  Drop + AsRef<str>) {}\n+   |\n+\n+error: incorrect braces around trait bounds\n+  --> $DIR/trait-object-delimiters.rs:8:25\n+   |\n+LL | fn foo2_no_space(_: &dyn(Drop + AsRef<str>)) {}\n+   |                         ^                 ^\n+   |\n+help: remove the parentheses\n+   |\n+LL - fn foo2_no_space(_: &dyn(Drop + AsRef<str>)) {}\n+LL + fn foo2_no_space(_: &dyn Drop + AsRef<str>) {}\n    |\n \n error: expected parameter name, found `{`\n-  --> $DIR/trait-object-delimiters.rs:8:17\n+  --> $DIR/trait-object-delimiters.rs:10:17\n    |\n LL | fn foo3(_: &dyn {Drop + AsRef<str>}) {}\n    |                 ^ expected parameter name\n \n error: expected one of `!`, `(`, `)`, `*`, `,`, `?`, `for`, `~`, lifetime, or path, found `{`\n-  --> $DIR/trait-object-delimiters.rs:8:17\n+  --> $DIR/trait-object-delimiters.rs:10:17\n    |\n LL | fn foo3(_: &dyn {Drop + AsRef<str>}) {}\n    |                -^ expected one of 10 possible tokens\n    |                |\n    |                help: missing `,`\n \n error: expected identifier, found `<`\n-  --> $DIR/trait-object-delimiters.rs:12:17\n+  --> $DIR/trait-object-delimiters.rs:14:17\n    |\n LL | fn foo4(_: &dyn <Drop + AsRef<str>>) {}\n    |                 ^ expected identifier\n \n error: invalid `dyn` keyword\n-  --> $DIR/trait-object-delimiters.rs:14:25\n+  --> $DIR/trait-object-delimiters.rs:16:25\n    |\n LL | fn foo5(_: &(dyn Drop + dyn AsRef<str>)) {}\n    |                         ^^^ help: remove this keyword\n@@ -56,13 +68,13 @@ LL | fn foo1(_: &dyn Drop + AsRef<str>) {}\n    = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0224]: at least one trait is required for an object type\n-  --> $DIR/trait-object-delimiters.rs:8:13\n+  --> $DIR/trait-object-delimiters.rs:10:13\n    |\n LL | fn foo3(_: &dyn {Drop + AsRef<str>}) {}\n    |             ^^^\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n-  --> $DIR/trait-object-delimiters.rs:14:29\n+  --> $DIR/trait-object-delimiters.rs:16:29\n    |\n LL | fn foo5(_: &(dyn Drop + dyn AsRef<str>)) {}\n    |                  ----       ^^^^^^^^^^ additional non-auto trait\n@@ -72,7 +84,7 @@ LL | fn foo5(_: &(dyn Drop + dyn AsRef<str>)) {}\n    = help: consider creating a new trait with all of these as supertraits and using that trait here instead: `trait NewTrait: Drop + AsRef<str> {}`\n    = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0224, E0225.\n For more information about an error, try `rustc --explain E0224`."}]}