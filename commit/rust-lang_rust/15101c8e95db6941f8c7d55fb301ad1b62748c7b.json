{"sha": "15101c8e95db6941f8c7d55fb301ad1b62748c7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MTAxYzhlOTVkYjY5NDFmOGM3ZDU1ZmIzMDFhZDFiNjI3NDhjN2I=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-07T00:17:51Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-09T00:32:03Z"}, "message": "remove debug stmts", "tree": {"sha": "487f88be0512d7c7e62e71aa73ae38f3a15d4f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/487f88be0512d7c7e62e71aa73ae38f3a15d4f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15101c8e95db6941f8c7d55fb301ad1b62748c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15101c8e95db6941f8c7d55fb301ad1b62748c7b", "html_url": "https://github.com/rust-lang/rust/commit/15101c8e95db6941f8c7d55fb301ad1b62748c7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15101c8e95db6941f8c7d55fb301ad1b62748c7b/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f57f8b9032fa0f83aa59f634ac72f1e63a1cfa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f57f8b9032fa0f83aa59f634ac72f1e63a1cfa2", "html_url": "https://github.com/rust-lang/rust/commit/1f57f8b9032fa0f83aa59f634ac72f1e63a1cfa2"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "e931c686dde593c0f4fd9a8371eb334d169e1381", "filename": "compiler/rustc_mir_build/src/build/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs?ref=15101c8e95db6941f8c7d55fb301ad1b62748c7b", "patch": "@@ -28,7 +28,6 @@ crate fn mir_built<'tcx>(\n     if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_built(def);\n     }\n-    debug!(\"mir_built: def={:?}\", def);\n \n     let mut body = mir_build(tcx, def);\n     if def.const_param_did.is_some() {\n@@ -41,7 +40,6 @@ crate fn mir_built<'tcx>(\n \n /// Construct the MIR for a given `DefId`.\n fn mir_build(tcx: TyCtxt<'_>, def: ty::WithOptConstParam<LocalDefId>) -> Body<'_> {\n-    debug!(\"mir_build: def={:?}\", def);\n     let id = tcx.hir().local_def_id_to_hir_id(def.did);\n     let body_owner_kind = tcx.hir().body_owner_kind(id);\n     let typeck_results = tcx.typeck_opt_const_arg(def);"}, {"sha": "66005be05df75683ba3427c2c9719262317287fc", "filename": "compiler/rustc_mir_build/src/thir/cx/expr.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs?ref=15101c8e95db6941f8c7d55fb301ad1b62748c7b", "patch": "@@ -149,9 +149,7 @@ impl<'tcx> Cx<'tcx> {\n     }\n \n     fn make_mirror_unadjusted(&mut self, expr: &'tcx hir::Expr<'tcx>) -> Expr<'tcx> {\n-        debug!(\"Expr::make_mirror_unadjusted: expr={:?}\", expr);\n         let expr_ty = self.typeck_results().expr_ty(expr);\n-        debug!(\"Expr::make_mirror_unadjusted: expr_ty={:?}\", expr_ty);\n         let temp_lifetime = self.region_scope_tree.temporary_scope(expr.hir_id.local_id);\n \n         let kind = match expr.kind {\n@@ -764,7 +762,6 @@ impl<'tcx> Cx<'tcx> {\n             hir::ExprKind::Err => unreachable!(),\n         };\n \n-        debug!(\"Expr::make_mirror_unadjusted: finish\");\n         Expr { temp_lifetime, ty: expr_ty, span: expr.span, kind }\n     }\n "}, {"sha": "5059dd939d92d7ce005e1473c8cbbee263ba6d28", "filename": "compiler/rustc_mir_build/src/thir/cx/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs?ref=15101c8e95db6941f8c7d55fb301ad1b62748c7b", "patch": "@@ -20,7 +20,6 @@ crate fn thir_body<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     owner_def: ty::WithOptConstParam<LocalDefId>,\n ) -> (&'tcx Steal<Thir<'tcx>>, ExprId) {\n-    debug!(\"thir_body: {:?}\", owner_def);\n     let hir = tcx.hir();\n     let body = hir.body(hir.body_owned_by(hir.local_def_id_to_hir_id(owner_def.did)));\n     let mut cx = Cx::new(tcx, owner_def);"}, {"sha": "4251dc5e93904fac32c29e21237920aba9127193", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15101c8e95db6941f8c7d55fb301ad1b62748c7b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=15101c8e95db6941f8c7d55fb301ad1b62748c7b", "patch": "@@ -435,9 +435,8 @@ pub(super) fn mir_abstract_const<'tcx>(\n             DefKind::AnonConst => (),\n             _ => return Ok(None),\n         }\n-        debug!(\"mir_abstract_const: {:?}\", def);\n+        \n         let body = tcx.thir_body(def);\n-\n         if body.0.borrow().exprs.is_empty() {\n             // type error in constant, there is no thir\n             return Err(ErrorReported);"}]}