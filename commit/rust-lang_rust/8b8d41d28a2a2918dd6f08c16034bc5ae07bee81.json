{"sha": "8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiOGQ0MWQyOGEyYTI5MThkZDZmMDhjMTYwMzRiYzVhZTA3YmVlODE=", "commit": {"author": {"name": "xales", "email": "xales@naveria.com", "date": "2014-01-25T17:48:57Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-06T21:50:39Z"}, "message": "Allow mutable slices in statics.\n\nFixes #11411", "tree": {"sha": "3cf4529f4bca5f63c8585c4166feca34b0079c32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cf4529f4bca5f63c8585c4166feca34b0079c32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "html_url": "https://github.com/rust-lang/rust/commit/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/comments", "author": {"login": "xales", "id": 341605, "node_id": "MDQ6VXNlcjM0MTYwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/341605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xales", "html_url": "https://github.com/xales", "followers_url": "https://api.github.com/users/xales/followers", "following_url": "https://api.github.com/users/xales/following{/other_user}", "gists_url": "https://api.github.com/users/xales/gists{/gist_id}", "starred_url": "https://api.github.com/users/xales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xales/subscriptions", "organizations_url": "https://api.github.com/users/xales/orgs", "repos_url": "https://api.github.com/users/xales/repos", "events_url": "https://api.github.com/users/xales/events{/privacy}", "received_events_url": "https://api.github.com/users/xales/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb3f63d9d6b2239a6907b8dec5ee8bb371e3e0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb3f63d9d6b2239a6907b8dec5ee8bb371e3e0e", "html_url": "https://github.com/rust-lang/rust/commit/1eb3f63d9d6b2239a6907b8dec5ee8bb371e3e0e"}], "stats": {"total": 62, "additions": 54, "deletions": 8}, "files": [{"sha": "c30ac8c56ed13cd0a69f85a1ed69ffa206fab3ec", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "patch": "@@ -520,6 +520,9 @@ impl<'a> CheckLoanCtxt<'a> {\n                 None => {\n                     return true;\n                 }\n+                Some(mc::AliasableStaticMut) => {\n+                    return true;\n+                }\n                 Some(cause) => {\n                     this.bccx.report_aliasability_violation(\n                         expr.span,"}, {"sha": "b1b073c3ecb8b0fd978e93a3266d845167f1e310", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "patch": "@@ -29,14 +29,15 @@ pub struct CheckCrateVisitor {\n \n impl Visitor<bool> for CheckCrateVisitor {\n     fn visit_item(&mut self, i: &Item, env: bool) {\n-        check_item(self, self.sess, self.def_map, i, env);\n+        check_item(self, self.sess, self.def_map, self.method_map,\n+                   self.tcx, i, env)\n     }\n     fn visit_pat(&mut self, p: &Pat, env: bool) {\n         check_pat(self, p, env);\n     }\n     fn visit_expr(&mut self, ex: &Expr, env: bool) {\n         check_expr(self, self.sess, self.def_map, self.method_map,\n-                   self.tcx, ex, env);\n+                   self.tcx, ex, env, false);\n     }\n }\n \n@@ -58,11 +59,13 @@ pub fn check_crate(sess: Session,\n pub fn check_item(v: &mut CheckCrateVisitor,\n                   sess: Session,\n                   def_map: resolve::DefMap,\n+                  method_map: typeck::method_map,\n+                  tcx: ty::ctxt,\n                   it: &Item,\n                   _is_const: bool) {\n     match it.node {\n-        ItemStatic(_, _, ex) => {\n-            v.visit_expr(ex, true);\n+        ItemStatic(_, mut_, ex) => {\n+            check_expr(v, sess, def_map, method_map, tcx, ex, true, mut_ == MutMutable);\n             check_item_recursion(sess, &v.tcx.map, def_map, it);\n         }\n         ItemEnum(ref enum_definition, _) => {\n@@ -105,7 +108,8 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n                   method_map: typeck::MethodMap,\n                   tcx: ty::ctxt,\n                   e: &Expr,\n-                  is_const: bool) {\n+                  is_const: bool,\n+                  is_static_mut: bool) {\n     if is_const {\n         match e.node {\n           ExprUnary(UnDeref, _) => { }\n@@ -187,6 +191,11 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n                     e.span,\n                     \"references in constants may only refer to \\\n                      immutable values\");\n+          }\n+          ExprVstore(_, ExprVstoreMutSlice) => {\n+              if !is_static_mut {\n+                  sess.span_err(e.span, \"mutable slice is not allowed in immutable constants\")\n+              }\n           },\n           ExprVstore(_, ExprVstoreUniq) => {\n               sess.span_err(e.span, \"cannot allocate vectors in constant expressions\")"}, {"sha": "d85da2ae3ef8178e73a74bd7a5c045bc64f82e90", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "patch": "@@ -10,7 +10,8 @@\n \n \n use back::abi;\n-use lib::llvm::{llvm, ConstFCmp, ConstICmp, SetLinkage, PrivateLinkage, ValueRef, Bool, True};\n+use lib::llvm::{llvm, ConstFCmp, ConstICmp, SetLinkage, PrivateLinkage, ValueRef, Bool, True,\n+    False};\n use lib::llvm::{IntEQ, IntNE, IntUGT, IntUGE, IntULT, IntULE, IntSGT, IntSGE, IntSLT, IntSLE,\n     RealOEQ, RealOGT, RealOGE, RealOLT, RealOLE, RealONE};\n \n@@ -572,7 +573,8 @@ fn const_expr_unadjusted(cx: @CrateContext, e: &ast::Expr,\n                                                is_local);\n             (v, inlineable)\n           }\n-          ast::ExprVstore(sub, ast::ExprVstoreSlice) => {\n+          ast::ExprVstore(sub, store @ ast::ExprVstoreSlice) |\n+              ast::ExprVstore(sub, store @ ast::ExprVstoreMutSlice) => {\n             match sub.node {\n               ast::ExprLit(ref lit) => {\n                 match lit.node {\n@@ -590,7 +592,8 @@ fn const_expr_unadjusted(cx: @CrateContext, e: &ast::Expr,\n                     llvm::LLVMAddGlobal(cx.llmod, llty.to_ref(), name)\n                 });\n                 llvm::LLVMSetInitializer(gv, cv);\n-                llvm::LLVMSetGlobalConstant(gv, True);\n+                llvm::LLVMSetGlobalConstant(gv,\n+                      if store == ast::ExprVstoreMutSlice { False } else { True });\n                 SetLinkage(gv, PrivateLinkage);\n                 let p = const_ptrcast(cx, gv, llunitty);\n                 (C_struct([p, C_uint(cx, es.len())], false), false)"}, {"sha": "4ccee2b40c1ad8cb24d0e3ece2fd28104f0ade71", "filename": "src/test/compile-fail/issue-11411.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Ftest%2Fcompile-fail%2Fissue-11411.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Ftest%2Fcompile-fail%2Fissue-11411.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11411.rs?ref=8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static TEST: &'static mut [int] = &mut []; //~ ERROR mutable slice is not allowed\n+\n+fn main() { }"}, {"sha": "e0da80702d758847d66d9be54697c7d94d0f5192", "filename": "src/test/run-pass/issue-11411.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Ftest%2Frun-pass%2Fissue-11411.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81/src%2Ftest%2Frun-pass%2Fissue-11411.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11411.rs?ref=8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+static mut TEST: &'static mut [int] = &mut [1];\n+\n+pub fn main() {\n+    unsafe {\n+        TEST[0] += 1;\n+    }\n+}"}]}