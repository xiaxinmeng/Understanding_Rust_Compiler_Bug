{"sha": "e59025867da9032ecacc36987b207a8a1e531fee", "node_id": "C_kwDOAAsO6NoAKGU1OTAyNTg2N2RhOTAzMmVjYWNjMzY5ODdiMjA3YThhMWU1MzFmZWU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-01T19:58:34Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-01T20:29:18Z"}, "message": "Create a hacky fail-fast mode that stops tests at the first failure", "tree": {"sha": "9a7bdfe72bfae43faf3df256ca591eab75335ba1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a7bdfe72bfae43faf3df256ca591eab75335ba1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e59025867da9032ecacc36987b207a8a1e531fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e59025867da9032ecacc36987b207a8a1e531fee", "html_url": "https://github.com/rust-lang/rust/commit/e59025867da9032ecacc36987b207a8a1e531fee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e59025867da9032ecacc36987b207a8a1e531fee/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "744a97b98c3f2722e1a43486c05203b04e499e21", "url": "https://api.github.com/repos/rust-lang/rust/commits/744a97b98c3f2722e1a43486c05203b04e499e21", "html_url": "https://github.com/rust-lang/rust/commit/744a97b98c3f2722e1a43486c05203b04e499e21"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "524658bce139d73794a18ca88237241a6aec1dce", "filename": "library/test/src/cli.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fcli.rs?ref=e59025867da9032ecacc36987b207a8a1e531fee", "patch": "@@ -26,6 +26,10 @@ pub struct TestOpts {\n     pub test_threads: Option<usize>,\n     pub skip: Vec<String>,\n     pub time_options: Option<TestTimeOptions>,\n+    /// Stop at first failing test.\n+    /// May run a few more tests due to threading, but will\n+    /// abort as soon as possible.\n+    pub fail_fast: bool,\n     pub options: Options,\n }\n \n@@ -296,6 +300,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n         skip,\n         time_options,\n         options,\n+        fail_fast: false,\n     };\n \n     Ok(test_opts)"}, {"sha": "a3c39f71f08b88ef38fd3e7673a78d062a78f630", "filename": "library/test/src/console.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Fconsole.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Fconsole.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fconsole.rs?ref=e59025867da9032ecacc36987b207a8a1e531fee", "patch": "@@ -293,7 +293,7 @@ pub fn run_tests_console(opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Resu\n     run_tests(opts, tests, |x| on_test_event(&x, &mut st, &mut *out))?;\n     st.exec_time = start_time.map(|t| TestSuiteExecTime(t.elapsed()));\n \n-    assert!(st.current_test_count() == st.total);\n+    assert!(opts.fail_fast || st.current_test_count() == st.total);\n \n     out.write_run_finish(&st)\n }"}, {"sha": "256c9e8d141e0baa57684ec5ebdb9c74cb5fc7c0", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=e59025867da9032ecacc36987b207a8a1e531fee", "patch": "@@ -384,8 +384,17 @@ where\n             let mut completed_test = rx.recv().unwrap();\n             RunningTest { join_handle }.join(&mut completed_test);\n \n+            let fail_fast = match completed_test.result {\n+                TrIgnored | TrOk | TrBench(_) => false,\n+                TrFailed | TrFailedMsg(_) | TrTimedFail => opts.fail_fast,\n+            };\n+\n             let event = TestEvent::TeResult(completed_test);\n             notify_about_test_event(event)?;\n+\n+            if fail_fast {\n+                return Ok(());\n+            }\n         }\n     } else {\n         while pending > 0 || !remaining.is_empty() {\n@@ -431,9 +440,20 @@ where\n             let running_test = running_tests.remove(&completed_test.id).unwrap();\n             running_test.join(&mut completed_test);\n \n+            let fail_fast = match completed_test.result {\n+                TrIgnored | TrOk | TrBench(_) => false,\n+                TrFailed | TrFailedMsg(_) | TrTimedFail => opts.fail_fast,\n+            };\n+\n             let event = TestEvent::TeResult(completed_test);\n             notify_about_test_event(event)?;\n             pending -= 1;\n+\n+            if fail_fast {\n+                // Prevent remaining test threads from panicking\n+                std::mem::forget(rx);\n+                return Ok(());\n+            }\n         }\n     }\n "}, {"sha": "3a0260f86cf5d081f08a4b6122a0f40c3ed77b38", "filename": "library/test/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59025867da9032ecacc36987b207a8a1e531fee/library%2Ftest%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftests.rs?ref=e59025867da9032ecacc36987b207a8a1e531fee", "patch": "@@ -51,6 +51,7 @@ impl TestOpts {\n             skip: vec![],\n             time_options: None,\n             options: Options::new(),\n+            fail_fast: false,\n         }\n     }\n }"}, {"sha": "91c701a5ddd2e469b9115fc02af7eab28dd5349e", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e59025867da9032ecacc36987b207a8a1e531fee/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59025867da9032ecacc36987b207a8a1e531fee/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=e59025867da9032ecacc36987b207a8a1e531fee", "patch": "@@ -514,6 +514,7 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n         options: test::Options::new(),\n         time_options: None,\n         force_run_in_process: false,\n+        fail_fast: std::env::var_os(\"RUSTC_TEST_FAIL_FAST\").is_some(),\n     }\n }\n "}]}