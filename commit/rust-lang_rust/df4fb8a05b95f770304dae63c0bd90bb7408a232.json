{"sha": "df4fb8a05b95f770304dae63c0bd90bb7408a232", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNGZiOGEwNWI5NWY3NzAzMDRkYWU2M2MwYmQ5MGJiNzQwOGEyMzI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-24T03:48:23Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-24T03:49:35Z"}, "message": "Reformatting after rebase", "tree": {"sha": "1873f3b349943c1f287e465914c886ebcf5fb9b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1873f3b349943c1f287e465914c886ebcf5fb9b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df4fb8a05b95f770304dae63c0bd90bb7408a232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df4fb8a05b95f770304dae63c0bd90bb7408a232", "html_url": "https://github.com/rust-lang/rust/commit/df4fb8a05b95f770304dae63c0bd90bb7408a232", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df4fb8a05b95f770304dae63c0bd90bb7408a232/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcf9f61635a02b95d3ac351faac0da43859a9b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf9f61635a02b95d3ac351faac0da43859a9b62", "html_url": "https://github.com/rust-lang/rust/commit/dcf9f61635a02b95d3ac351faac0da43859a9b62"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "7acb9b9126f471daae475e447f2d75fc7b8fa935", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=df4fb8a05b95f770304dae63c0bd90bb7408a232", "patch": "@@ -302,7 +302,7 @@ trait ChainFormatter {\n     // foo.bar\n     //     .baz()\n     // ```\n-    // If `bar` were not part of the root, then baz would be orphaned and 'float'.\n+    // If `bar` were not part of the root, then foo would be orphaned and 'float'.\n     fn format_root(\n         &mut self,\n         parent: &ChainItem,"}, {"sha": "c03c8e6b6065616a86273d1eb1ee6003d02849b8", "filename": "src/closures.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=df4fb8a05b95f770304dae63c0bd90bb7408a232", "patch": "@@ -376,7 +376,8 @@ where\n                     ast::ExprKind::Closure(..) => true,\n                     _ => false,\n                 }).unwrap_or(false)\n-        }).count() > 1\n+        }).count()\n+        > 1\n }\n \n fn is_block_closure_forced(context: &RewriteContext, expr: &ast::Expr) -> bool {"}, {"sha": "42ab4e89c3bc6b3f45172b6265535023598d9f43", "filename": "src/formatting.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=df4fb8a05b95f770304dae63c0bd90bb7408a232", "patch": "@@ -246,8 +246,7 @@ impl FormattingError {\n                     fl.file\n                         .get_line(fl.lines[0].line_index)\n                         .map(|l| l.into_owned())\n-                })\n-                .unwrap_or_else(|| String::new()),\n+                }).unwrap_or_else(|| String::new()),\n         }\n     }\n "}, {"sha": "b55375b949c19ef1e48b72a62d2ef93c2d287697", "filename": "src/macros.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=df4fb8a05b95f770304dae63c0bd90bb7408a232", "patch": "@@ -1118,22 +1118,21 @@ fn indent_macro_snippet(\n         }).min()?;\n \n     Some(\n-        first_line + \"\\n\"\n-            + &trimmed_lines\n-                .iter()\n-                .map(\n-                    |&(trimmed, ref line, prefix_space_width)| match prefix_space_width {\n-                        _ if !trimmed => line.to_owned(),\n-                        Some(original_indent_width) => {\n-                            let new_indent_width = indent.width()\n-                                + original_indent_width.saturating_sub(min_prefix_space_width);\n-                            let new_indent = Indent::from_width(context.config, new_indent_width);\n-                            format!(\"{}{}\", new_indent.to_string(context.config), line.trim())\n-                        }\n-                        None => String::new(),\n-                    },\n-                ).collect::<Vec<_>>()\n-                .join(\"\\n\"),\n+        first_line + \"\\n\" + &trimmed_lines\n+            .iter()\n+            .map(\n+                |&(trimmed, ref line, prefix_space_width)| match prefix_space_width {\n+                    _ if !trimmed => line.to_owned(),\n+                    Some(original_indent_width) => {\n+                        let new_indent_width = indent.width() + original_indent_width\n+                            .saturating_sub(min_prefix_space_width);\n+                        let new_indent = Indent::from_width(context.config, new_indent_width);\n+                        format!(\"{}{}\", new_indent.to_string(context.config), line.trim())\n+                    }\n+                    None => String::new(),\n+                },\n+            ).collect::<Vec<_>>()\n+            .join(\"\\n\"),\n     )\n }\n "}, {"sha": "17b869750226c05967892dea4304edb7005d267d", "filename": "src/pairs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fpairs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Fpairs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpairs.rs?ref=df4fb8a05b95f770304dae63c0bd90bb7408a232", "patch": "@@ -125,7 +125,7 @@ fn rewrite_pairs_multiline<T: Rewrite>(\n         IndentStyle::Visual => shape.visual_indent(0),\n         IndentStyle::Block => shape.block_indent(context.config.tab_spaces()),\n     }).with_max_width(&context.config)\n-        .sub_width(rhs_offset)?;\n+    .sub_width(rhs_offset)?;\n \n     let indent_str = nested_shape.indent.to_string_with_newline(context.config);\n     let mut result = String::new();"}, {"sha": "48ddd116337993e4f3608b6233dbecc15365c5b8", "filename": "src/reorder.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4fb8a05b95f770304dae63c0bd90bb7408a232/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=df4fb8a05b95f770304dae63c0bd90bb7408a232", "patch": "@@ -241,12 +241,13 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         let item_length = items\n             .iter()\n             .take_while(|ppi| {\n-                item_kind.is_same_item_kind(&***ppi) && (!in_group || {\n-                    let current = self.codemap.lookup_line_range(ppi.span());\n-                    let in_same_group = current.lo < last.hi + 2;\n-                    last = current;\n-                    in_same_group\n-                })\n+                item_kind.is_same_item_kind(&***ppi)\n+                    && (!in_group || {\n+                        let current = self.codemap.lookup_line_range(ppi.span());\n+                        let in_same_group = current.lo < last.hi + 2;\n+                        last = current;\n+                        in_same_group\n+                    })\n             }).count();\n         let items = &items[..item_length];\n "}]}