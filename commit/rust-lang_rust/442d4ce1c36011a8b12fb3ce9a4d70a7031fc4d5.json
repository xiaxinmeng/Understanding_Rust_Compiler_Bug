{"sha": "442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5", "node_id": "C_kwDOAAsO6NoAKDQ0MmQ0Y2UxYzM2MDExYThiMTJmYjNjZTlhNGQ3MGE3MDMxZmM0ZDU", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-03-16T02:31:07Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-03-16T02:31:07Z"}, "message": "Don't lint fat pointer to `(usize, usize)` conversion in `transmute_undefined_repr`", "tree": {"sha": "61d53c86d05cd6cc7e0d15d40efaadf672c6b9ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61d53c86d05cd6cc7e0d15d40efaadf672c6b9ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5", "html_url": "https://github.com/rust-lang/rust/commit/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e71ac41d44fd2fdffcb94f6000ad2cffad5c61cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e71ac41d44fd2fdffcb94f6000ad2cffad5c61cd", "html_url": "https://github.com/rust-lang/rust/commit/e71ac41d44fd2fdffcb94f6000ad2cffad5c61cd"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "30059e5ba2bc949c51aa73b7ce83f3bfb3205b4d", "filename": "clippy_lints/src/transmute/transmute_undefined_repr.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs?ref=442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::ty::is_c_void;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, Ty, TypeAndMut};\n+use rustc_middle::ty::{self, IntTy, Ty, TypeAndMut, UintTy};\n use rustc_span::Span;\n \n #[allow(clippy::too_many_lines)]\n@@ -24,6 +24,7 @@ pub(super) fn check<'tcx>(\n                 to_ty: to_sub_ty,\n             } => match reduce_ty(cx, to_sub_ty) {\n                 ReducedTy::IntArray | ReducedTy::TypeErasure => break,\n+                ReducedTy::UnorderedFields(ty) if is_size_pair(ty) => break,\n                 ReducedTy::Ref(to_sub_ty) => {\n                     from_ty = unsized_ty;\n                     to_ty = to_sub_ty;\n@@ -49,6 +50,7 @@ pub(super) fn check<'tcx>(\n                 from_ty: from_sub_ty,\n             } => match reduce_ty(cx, from_sub_ty) {\n                 ReducedTy::IntArray | ReducedTy::TypeErasure => break,\n+                ReducedTy::UnorderedFields(ty) if is_size_pair(ty) => break,\n                 ReducedTy::Ref(from_sub_ty) => {\n                     from_ty = from_sub_ty;\n                     to_ty = unsized_ty;\n@@ -333,3 +335,14 @@ fn is_zero_sized_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n         }\n     }\n }\n+\n+fn is_size_pair(ty: Ty<'_>) -> bool {\n+    if let ty::Tuple(tys) = *ty.kind()\n+        && let [ty1, ty2] = &**tys\n+    {\n+        matches!(ty1.kind(), ty::Int(IntTy::Isize) | ty::Uint(UintTy::Usize))\n+            && matches!(ty2.kind(), ty::Int(IntTy::Isize) | ty::Uint(UintTy::Usize))\n+    } else {\n+        false\n+    }\n+}"}, {"sha": "13d8cb10e9846ecf27d7bb09820f005ce582b323", "filename": "tests/ui/transmute_undefined_repr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5/tests%2Fui%2Ftransmute_undefined_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5/tests%2Fui%2Ftransmute_undefined_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_undefined_repr.rs?ref=442d4ce1c36011a8b12fb3ce9a4d70a7031fc4d5", "patch": "@@ -96,5 +96,12 @@ fn main() {\n \n         let _: Ty2<u32, u32> = transmute(value::<((), Ty2<u32, u32>)>()); // Ok\n         let _: ((), Ty2<u32, u32>) = transmute(value::<Ty2<u32, u32>>()); // Ok\n+\n+        let _: (usize, usize) = transmute(value::<&[u8]>()); // Ok\n+        let _: &[u8] = transmute(value::<(usize, usize)>()); // Ok\n+\n+        trait Trait {}\n+        let _: (isize, isize) = transmute(value::<&dyn Trait>()); // Ok\n+        let _: &dyn Trait = transmute(value::<(isize, isize)>()); // Ok\n     }\n }"}]}