{"sha": "aad48f71b309192882789f5d5187012bd060952f", "node_id": "C_kwDOAAsO6NoAKGFhZDQ4ZjcxYjMwOTE5Mjg4Mjc4OWY1ZDUxODcwMTJiZDA2MDk1MmY", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-10-09T16:55:29Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-10-20T00:23:24Z"}, "message": "replace format!(\"\") with String::new()\n\nuse array explicitly instead of vec for const content (even if optimizer smart enought to remove allocation)", "tree": {"sha": "82e47d98d19ad41fde4d9ef93c764d9f3933b3ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82e47d98d19ad41fde4d9ef93c764d9f3933b3ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aad48f71b309192882789f5d5187012bd060952f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aad48f71b309192882789f5d5187012bd060952f", "html_url": "https://github.com/rust-lang/rust/commit/aad48f71b309192882789f5d5187012bd060952f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aad48f71b309192882789f5d5187012bd060952f/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af55d19c7a9189374d89472f97dc119659bb67e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af55d19c7a9189374d89472f97dc119659bb67e", "html_url": "https://github.com/rust-lang/rust/commit/1af55d19c7a9189374d89472f97dc119659bb67e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2c03e0cfba9c1b9217b3a491c5c8dc0d5d823986", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad48f71b309192882789f5d5187012bd060952f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad48f71b309192882789f5d5187012bd060952f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=aad48f71b309192882789f5d5187012bd060952f", "patch": "@@ -1074,7 +1074,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         min_captures: Option<&ty::RootVariableMinCaptureList<'tcx>>,\n     ) -> (Vec<MigrationDiagnosticInfo>, String) {\n         let Some(upvars) = self.tcx.upvars_mentioned(closure_def_id) else {\n-            return (Vec::new(), format!(\"\"));\n+            return (Vec::new(), String::new());\n         };\n \n         let mut need_migrations = Vec::new();"}]}