{"sha": "7b1c5b66be8b4986a85b3d3889ebd0e905484420", "node_id": "C_kwDOAAsO6NoAKDdiMWM1YjY2YmU4YjQ5ODZhODViM2QzODg5ZWJkMGU5MDU0ODQ0MjA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-18T10:22:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-18T10:22:38Z"}, "message": "Auto merge of #2814 - saethlin:warn-on-optimization, r=RalfJung\n\nEmit a warning when Miri is used with optimizations\n\nThis may address https://github.com/rust-lang/miri/issues/2797, by clarifying to the user what is going on and what the consequences of their choices are.\n\nFixes https://github.com/rust-lang/miri/issues/2797", "tree": {"sha": "8337c605f1d65aa7cf1c663fa1036210fcd629ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8337c605f1d65aa7cf1c663fa1036210fcd629ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b1c5b66be8b4986a85b3d3889ebd0e905484420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1c5b66be8b4986a85b3d3889ebd0e905484420", "html_url": "https://github.com/rust-lang/rust/commit/7b1c5b66be8b4986a85b3d3889ebd0e905484420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b1c5b66be8b4986a85b3d3889ebd0e905484420/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3831a254905873af4da996ab21c6f9f3d4050051", "url": "https://api.github.com/repos/rust-lang/rust/commits/3831a254905873af4da996ab21c6f9f3d4050051", "html_url": "https://github.com/rust-lang/rust/commit/3831a254905873af4da996ab21c6f9f3d4050051"}, {"sha": "c3780602ec5c90e2feede53d06efb84ca07e87cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3780602ec5c90e2feede53d06efb84ca07e87cf", "html_url": "https://github.com/rust-lang/rust/commit/c3780602ec5c90e2feede53d06efb84ca07e87cf"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "b5b3b211b05f0446a311221aa9abe0297fcb8f04", "filename": "src/tools/miri/ci.sh", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b1c5b66be8b4986a85b3d3889ebd0e905484420/src%2Ftools%2Fmiri%2Fci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7b1c5b66be8b4986a85b3d3889ebd0e905484420/src%2Ftools%2Fmiri%2Fci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fci.sh?ref=7b1c5b66be8b4986a85b3d3889ebd0e905484420", "patch": "@@ -43,7 +43,9 @@ function run_tests {\n     # optimizations up all the way, too).\n     # Optimizations change diagnostics (mostly backtraces), so we don't check\n     # them. Also error locations change so we don't run the failing tests.\n-    MIRIFLAGS=\"${MIRIFLAGS:-} -O -Zmir-opt-level=4\" MIRI_SKIP_UI_CHECKS=1 ./miri test -- tests/{pass,panic}\n+    # We explicitly enable debug-assertions here, they are disabled by -O but we have tests\n+    # which exist to check that we panic on debug assertion failures.\n+    MIRIFLAGS=\"${MIRIFLAGS:-} -O -Zmir-opt-level=4 -Cdebug-assertions=yes\" MIRI_SKIP_UI_CHECKS=1 ./miri test -- tests/{pass,panic}\n \n     # Also run some many-seeds tests. 64 seeds means this takes around a minute per test.\n     for FILE in tests/many-seeds/*.rs; do"}, {"sha": "e73ee005f359f46865ad039b0bcdbc8662caaa96", "filename": "src/tools/miri/src/bin/miri.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7b1c5b66be8b4986a85b3d3889ebd0e905484420/src%2Ftools%2Fmiri%2Fsrc%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1c5b66be8b4986a85b3d3889ebd0e905484420/src%2Ftools%2Fmiri%2Fsrc%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fbin%2Fmiri.rs?ref=7b1c5b66be8b4986a85b3d3889ebd0e905484420", "patch": "@@ -30,6 +30,8 @@ use rustc_middle::{\n     },\n     ty::{query::ExternProviders, TyCtxt},\n };\n+use rustc_session::config::OptLevel;\n+\n use rustc_session::{config::CrateType, search_paths::PathKind, CtfeBacktrace};\n \n use miri::{BacktraceStyle, BorrowTrackerMethod, ProvenanceMode, RetagFields};\n@@ -82,6 +84,21 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                 env::set_current_dir(cwd).unwrap();\n             }\n \n+            if tcx.sess.opts.optimize != OptLevel::No {\n+                tcx.sess.warn(\"Miri does not support optimizations. If you have enabled optimizations \\\n+                    by selecting a Cargo profile (such as --release) which changes other profile settings \\\n+                    such as whether debug assertions and overflow checks are enabled, those settings are \\\n+                    still applied.\");\n+            }\n+            if tcx.sess.mir_opt_level() > 0 {\n+                tcx.sess.warn(\"You have explicitly enabled MIR optimizations, overriding Miri's default \\\n+                    which is to completely disable them. Any optimizations may hide UB that Miri would \\\n+                    otherwise detect, and it is not necessarily possible to predict what kind of UB will \\\n+                    be missed. If you are enabling optimizations to make Miri run faster, we advise using \\\n+                    cfg(miri) to shrink your workload instead. The performance benefit of enabling MIR \\\n+                    optimizations is usually marginal at best.\");\n+            }\n+\n             if let Some(return_code) = miri::eval_entry(tcx, entry_def_id, entry_type, config) {\n                 std::process::exit(\n                     i32::try_from(return_code).expect(\"Return value was too large!\"),"}, {"sha": "f95fe585a8f75d82a85551b4a6a688d3fb10aabe", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b1c5b66be8b4986a85b3d3889ebd0e905484420/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1c5b66be8b4986a85b3d3889ebd0e905484420/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=7b1c5b66be8b4986a85b3d3889ebd0e905484420", "patch": "@@ -126,10 +126,9 @@ pub use crate::tag_gc::{EvalContextExt as _, VisitTags};\n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n pub const MIRI_DEFAULT_ARGS: &[&str] = &[\n+    \"--cfg=miri\",\n     \"-Zalways-encode-mir\",\n+    \"-Zextra-const-ub-checks\",\n     \"-Zmir-emit-retag\",\n     \"-Zmir-opt-level=0\",\n-    \"--cfg=miri\",\n-    \"-Cdebug-assertions=on\",\n-    \"-Zextra-const-ub-checks\",\n ];"}]}