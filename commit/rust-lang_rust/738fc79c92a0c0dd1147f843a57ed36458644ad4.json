{"sha": "738fc79c92a0c0dd1147f843a57ed36458644ad4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczOGZjNzljOTJhMGMwZGQxMTQ3Zjg0M2E1N2VkMzY0NTg2NDRhZDQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-09T11:56:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-09T11:56:45Z"}, "message": "Remove allocations from LCA\n\nI haven't actually profiled this, but not allocating a hash map (or\nanything, really) seems like a good idea", "tree": {"sha": "49448cb990672c8385dc7b9688b7a7741049a55d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49448cb990672c8385dc7b9688b7a7741049a55d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/738fc79c92a0c0dd1147f843a57ed36458644ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/738fc79c92a0c0dd1147f843a57ed36458644ad4", "html_url": "https://github.com/rust-lang/rust/commit/738fc79c92a0c0dd1147f843a57ed36458644ad4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/738fc79c92a0c0dd1147f843a57ed36458644ad4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0", "html_url": "https://github.com/rust-lang/rust/commit/1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "7f87f421262e067485412ea91f831e76e991ada6", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/738fc79c92a0c0dd1147f843a57ed36458644ad4/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/738fc79c92a0c0dd1147f843a57ed36458644ad4/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=738fc79c92a0c0dd1147f843a57ed36458644ad4", "patch": "@@ -7,7 +7,7 @@ use std::{\n \n use itertools::Itertools;\n use ra_text_edit::TextEditBuilder;\n-use rustc_hash::{FxHashMap, FxHashSet};\n+use rustc_hash::FxHashMap;\n \n use crate::{\n     AstNode, Direction, NodeOrToken, SyntaxElement, SyntaxNode, SyntaxNodePtr, SyntaxToken,\n@@ -72,8 +72,18 @@ pub fn find_covering_element(root: &SyntaxNode, range: TextRange) -> SyntaxEleme\n }\n \n pub fn least_common_ancestor(u: &SyntaxNode, v: &SyntaxNode) -> Option<SyntaxNode> {\n-    let u_ancestors = u.ancestors().collect::<FxHashSet<SyntaxNode>>();\n-    v.ancestors().find(|it| u_ancestors.contains(it))\n+    if u == v {\n+        return Some(u.clone());\n+    }\n+\n+    let u_depth = u.ancestors().count();\n+    let v_depth = v.ancestors().count();\n+    let keep = u_depth.min(v_depth);\n+\n+    let u_candidates = u.ancestors().skip(u_depth - keep);\n+    let v_canidates = v.ancestors().skip(v_depth - keep);\n+    let (res, _) = u_candidates.zip(v_canidates).find(|(x, y)| x == y)?;\n+    Some(res)\n }\n \n pub fn neighbor<T: AstNode>(me: &T, direction: Direction) -> Option<T> {"}]}