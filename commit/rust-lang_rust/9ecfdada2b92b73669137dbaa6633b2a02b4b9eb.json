{"sha": "9ecfdada2b92b73669137dbaa6633b2a02b4b9eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllY2ZkYWRhMmI5MmI3MzY2OTEzN2RiYWE2NjMzYjJhMDJiNGI5ZWI=", "commit": {"author": {"name": "mdinger", "email": "mdinger.bugzilla@gmail.com", "date": "2015-04-24T17:57:37Z"}, "committer": {"name": "mdinger", "email": "mdinger.bugzilla@gmail.com", "date": "2015-04-24T20:50:23Z"}, "message": "Updates to grammar", "tree": {"sha": "5b5a6277ee3db72ddaa3f9b24c358d80d47202ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b5a6277ee3db72ddaa3f9b24c358d80d47202ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ecfdada2b92b73669137dbaa6633b2a02b4b9eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ecfdada2b92b73669137dbaa6633b2a02b4b9eb", "html_url": "https://github.com/rust-lang/rust/commit/9ecfdada2b92b73669137dbaa6633b2a02b4b9eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ecfdada2b92b73669137dbaa6633b2a02b4b9eb/comments", "author": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cf255268ce57ae508179c14ae4bec3a1ae70846", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf255268ce57ae508179c14ae4bec3a1ae70846", "html_url": "https://github.com/rust-lang/rust/commit/8cf255268ce57ae508179c14ae4bec3a1ae70846"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "542815e7afe3ce8522cf278692e2bacfd0f1c1a0", "filename": "src/doc/grammar.md", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9ecfdada2b92b73669137dbaa6633b2a02b4b9eb/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ecfdada2b92b73669137dbaa6633b2a02b4b9eb/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=9ecfdada2b92b73669137dbaa6633b2a02b4b9eb", "patch": "@@ -152,19 +152,19 @@ token : simple_token | ident | literal | symbol | whitespace token ;\n \n <p id=\"keyword-table-marker\"></p>\n \n-|          |          |          |          |        |\n-|----------|----------|----------|----------|--------|\n-| abstract | alignof  | as       | become   | box    |\n-| break    | const    | continue | crate    | do     |\n-| else     | enum     | extern   | false    | final  |\n-| fn       | for      | if       | impl     | in     |\n-| let      | loop     | match    | mod      | move   |\n-| mut      | offsetof | once     | override | priv   |\n-| proc     | pub      | pure     | ref      | return |\n-| sizeof   | static   | self     | struct   | super  |\n-| true     | trait    | type     | typeof   | unsafe |\n-| unsized  | use      | virtual  | where    | while  |\n-| yield    |          |          |          |        |\n+|          |          |          |          |         |\n+|----------|----------|----------|----------|---------|\n+| abstract | alignof  | as       | become   | box     |\n+| break    | const    | continue | crate    | do      |\n+| else     | enum     | extern   | false    | final   |\n+| fn       | for      | if       | impl     | in      |\n+| let      | loop     | macro    | match    | mod     |\n+| move     | mut      | offsetof | override | priv    |\n+| proc     | pub      | pure     | ref      | return  |\n+| Self     | self     | sizeof   | static   | struct  |\n+| super    | trait    | true     | type     | typeof  |\n+| unsafe   | unsized  | use      | virtual  | where   |\n+| while    | yield    |          |          |         |\n \n \n Each of these keywords has special meaning in its grammar, and all of them are\n@@ -524,6 +524,15 @@ array_elems : [expr [',' expr]*] | [expr ',' \"..\" expr] ;\n idx_expr : expr '[' expr ']' ;\n ```\n \n+### Range expressions\n+\n+```antlr\n+range_expr : expr \"..\" expr |\n+             expr \"..\" |\n+             \"..\" expr |\n+             \"..\" ;\n+```\n+\n ### Unary operator expressions\n \n **FIXME:** grammar?\n@@ -610,7 +619,7 @@ lambda_expr : '|' ident_list '|' expr ;\n ### While loops\n \n ```antlr\n-while_expr : \"while\" no_struct_literal_expr '{' block '}' ;\n+while_expr : [ lifetime ':' ] \"while\" no_struct_literal_expr '{' block '}' ;\n ```\n \n ### Infinite loops\n@@ -634,7 +643,7 @@ continue_expr : \"continue\" [ lifetime ];\n ### For expressions\n \n ```antlr\n-for_expr : \"for\" pat \"in\" no_struct_literal_expr '{' block '}' ;\n+for_expr : [ lifetime ':' ] \"for\" pat \"in\" no_struct_literal_expr '{' block '}' ;\n ```\n \n ### If expressions"}]}