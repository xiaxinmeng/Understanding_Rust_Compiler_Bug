{"sha": "e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZGJmNDIyMTRjNWRmZTM5YjhmZDY4OTYxNzFhYWE4ZmVlZTc1ODI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-24T21:16:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-24T21:55:16Z"}, "message": "rustc: Fix type_need_unwind_cleanup. Closes #2272", "tree": {"sha": "461537fc368efdd0c047635a70c33b5e7e4fa68d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/461537fc368efdd0c047635a70c33b5e7e4fa68d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "html_url": "https://github.com/rust-lang/rust/commit/e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5437a045fc653eea0efafb28f0e13b12f0bfa3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5437a045fc653eea0efafb28f0e13b12f0bfa3d5", "html_url": "https://github.com/rust-lang/rust/commit/5437a045fc653eea0efafb28f0e13b12f0bfa3d5"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "68da6e6d734f8d6f2146a846a74be4ed2793b430", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "patch": "@@ -1176,7 +1176,8 @@ fn type_needs_unwind_cleanup_(cx: ctxt, ty: t,\n     let mut encountered_box = encountered_box;\n     let mut needs_unwind_cleanup = false;\n     maybe_walk_ty(ty) {|ty|\n-        alt get(ty).struct {\n+        let old_encountered_box = encountered_box;\n+        let result = alt get(ty).struct {\n           ty_box(_) | ty_opaque_box {\n             encountered_box = true;\n             true\n@@ -1216,7 +1217,10 @@ fn type_needs_unwind_cleanup_(cx: ctxt, ty: t,\n             needs_unwind_cleanup = true;\n             false\n           }\n-        }\n+        };\n+\n+        encountered_box = old_encountered_box;\n+        result\n     }\n \n     ret needs_unwind_cleanup;"}, {"sha": "7a2a7ad4f949254a87a3492e64a4f7f3a2d4110a", "filename": "src/test/compile-fail/class-implements-int.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Ftest%2Fcompile-fail%2Fclass-implements-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Ftest%2Fcompile-fail%2Fclass-implements-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclass-implements-int.rs?ref=e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "patch": "@@ -1,10 +1,3 @@\n-// xfail-test\n-/*\n-  tjc: currently this results in a memory leak after a call to\n-  span_fatal in typeck. I think it's the same issue as #2272, because\n-  if I make type_needs_unwind_cleanup always return true, the test passes.\n-  FIXME: Un-xfail this when #2272 is fixed.\n- */\n class cat implements int { //! ERROR can only implement interface types\n   let meows: uint;\n   new(in_x : uint) { self.meows = in_x; }"}, {"sha": "fa49f605306f1890438bb717d28b89168a4770a6", "filename": "src/test/compile-fail/infinite-instantiation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Ftest%2Fcompile-fail%2Finfinite-instantiation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Ftest%2Fcompile-fail%2Finfinite-instantiation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-instantiation.rs?ref=e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "patch": "@@ -1,7 +1,5 @@\n // error-pattern: overly deep expansion\n // issue 2258\n-// This is currently exposing a memory leak, and xfailed for that reason\n-// xfail-test\n \n iface to_opt {\n     fn to_option() -> option<self>;"}, {"sha": "5aa1f4a92f6d73d735fb2d593d34762c637673bf", "filename": "src/test/run-fail/issue-2272.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Ftest%2Frun-fail%2Fissue-2272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7dbf42214c5dfe39b8fd6896171aaa8feee7582/src%2Ftest%2Frun-fail%2Fissue-2272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2272.rs?ref=e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "patch": "@@ -0,0 +1,12 @@\n+// error-pattern:explicit failure\n+// Issue #2272 - unwind this without leaking the unique pointer\n+\n+fn main() {\n+    let _x = {\n+        y: {\n+            z: @0\n+        },\n+        a: ~0\n+    };\n+    fail;\n+}\n\\ No newline at end of file"}]}