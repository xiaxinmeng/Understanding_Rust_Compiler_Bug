{"sha": "a30587e0fe5bc35f4ca9ea885b27bc93dbfced89", "node_id": "C_kwDOAAsO6NoAKGEzMDU4N2UwZmU1YmMzNWY0Y2E5ZWE4ODViMjdiYzkzZGJmY2VkODk", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-05-15T00:08:10Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-05-15T00:08:10Z"}, "message": "Switch input to `type=number`; Separate version validation out of `byVersion`", "tree": {"sha": "8b31b49499a9199d56a02bb026aad6ce5ca64cbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b31b49499a9199d56a02bb026aad6ce5ca64cbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89", "html_url": "https://github.com/rust-lang/rust/commit/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ed52bf13ecdc69a31e7be6a0bc9ba2a3e1a1932", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed52bf13ecdc69a31e7be6a0bc9ba2a3e1a1932", "html_url": "https://github.com/rust-lang/rust/commit/4ed52bf13ecdc69a31e7be6a0bc9ba2a3e1a1932"}], "stats": {"total": 115, "additions": 58, "deletions": 57}, "files": [{"sha": "8bba9640a7741d19eda6c4b435945e346d3bace1", "filename": "util/gh-pages/index.html", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89/util%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89/util%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Findex.html?ref=a30587e0fe5bc35f4ca9ea885b27bc93dbfced89", "patch": "@@ -291,7 +291,7 @@\n             border: 1px solid var(--theme-popup-border);\n         }\n \n-        #version-filter-selector .checkbox {\n+        #version-filter-selector .item {\n             display: flex;\n         }\n \n@@ -440,23 +440,24 @@ <h1>Clippy Lints</h1>\n                                     <span class=\"caret\"></span>\n                                 </button>\n                                 <ul id=\"version-filter-selector\" class=\"dropdown-menu\">\n-                                    <li class=\"checkbox\">\n+                                    <li class=\"item\">\n                                         <label ng-click=\"clearVersionFilters()\">\n                                             <input type=\"checkbox\" class=\"invisible\" />\n                                             Clear filters\n                                         </label>\n                                     </li>\n                                     <li role=\"separator\" class=\"divider\"></li>\n-                                    <li class=\"checkbox\" ng-repeat=\"(filter, vars) in versionFilters\">\n+                                    <li class=\"item\" ng-repeat=\"(filter, vars) in versionFilters\">\n                                         <label ng-attr-for=\"filter-{filter}\">{{filter}}</label>\n                                         <span>1.</span>\n-                                        <input type=\"text\"\n+                                        <input type=\"number\"\n+                                                min=\"29\"\n                                                 ng-attr-id=\"filter-{filter}\"\n                                                 class=\"version-filter-input form-control filter-input\"\n                                                 maxlength=\"2\"\n-                                                placeholder=\"xx\"\n                                                 ng-model=\"versionFilters[filter].minorVersion\"\n-                                                ng-model-options=\"{debounce: 50}\" />\n+                                                ng-model-options=\"{debounce: 50}\"\n+                                                ng-change=\"updateVersionFilters()\" />\n                                         <span>.0</span>\n                                     </li>\n                                 </ul>"}, {"sha": "f72fe8c7f8bb3f11dc8dec9262d4f6f98219bc74", "filename": "util/gh-pages/script.js", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89/util%2Fgh-pages%2Fscript.js", "raw_url": "https://github.com/rust-lang/rust/raw/a30587e0fe5bc35f4ca9ea885b27bc93dbfced89/util%2Fgh-pages%2Fscript.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Fscript.js?ref=a30587e0fe5bc35f4ca9ea885b27bc93dbfced89", "patch": "@@ -137,9 +137,9 @@\n             $scope.themes = THEMES_DEFAULT;\n \n             $scope.versionFilters = {\n-                \"\u2265\": {enabled: false, minorVersion: \"\"},\n-                \"\u2264\": {enabled: false, minorVersion: \"\"},\n-                \"=\": {enabled: false, minorVersion: \"\"},\n+                \"\u2265\": {enabled: false, minorVersion: null },\n+                \"\u2264\": {enabled: false, minorVersion: null },\n+                \"=\": {enabled: false, minorVersion: null },\n             };\n \n             $scope.selectTheme = function (theme) {\n@@ -170,70 +170,70 @@\n \n             $scope.clearVersionFilters = function () {\n                 for (let filter in $scope.versionFilters) {\n-                    $scope.versionFilters[filter] = { enabled: false, minorVersion: \"\" };\n+                    $scope.versionFilters[filter] = { enabled: false, minorVersion: null };\n                 }\n             }\n \n             $scope.versionFilterCount = function(obj) {\n                 return Object.values(obj).filter(x => x.enabled).length;\n             }\n \n-            $scope.byVersion = function(lint) {\n-                function validateVersionStr(ver) {\n-                    return ver.length === 2 && !isNaN(ver);\n-                }\n+            $scope.updateVersionFilters = function() {\n+                for (const filter in $scope.versionFilters) {\n+                    let minorVersion = $scope.versionFilters[filter].minorVersion;\n \n-                let filters = $scope.versionFilters;\n+                    // 1.29.0 and greater\n+                    if (minorVersion && minorVersion > 28) {\n+                        $scope.versionFilters[filter].enabled = true;\n+                    }\n \n-                // Strip the \"pre \" prefix for pre 1.29.0 lints\n-                let lintVersion = lint.version.startsWith(\"pre \") ? lint.version.substring(4, lint.version.length) : lint.version;\n-                let lintMinorVersion = lintVersion.substring(2, 4);\n+                    $scope.versionFilters[filter].enabled = false;\n+                }\n+            }\n \n+            $scope.byVersion = function(lint) {\n+                let filters = $scope.versionFilters;\n                 for (const filter in filters) {\n-                    let minorVersion = filters[filter].minorVersion;\n-\n-                    // Skip the work for version strings with invalid lengths or characters\n-                    if (!validateVersionStr(minorVersion)) {\n-                        filters[filter].enabled = false;\n-                        continue;\n-                    }\n+                    if (filters[filter].enabled) {\n+                        let minorVersion = filters[filter].minorVersion;\n+\n+                        // Strip the \"pre \" prefix for pre 1.29.0 lints\n+                        let lintVersion = lint.version.startsWith(\"pre \") ? lint.version.substring(4, lint.version.length) : lint.version;\n+                        let lintMinorVersion = lintVersion.substring(2, 4);\n+\n+                        let result;\n+                        switch (filter) {\n+                            case \"\u2265\":\n+                                result = (lintMinorVersion >= minorVersion);\n+                                break;\n+                            case \"\u2264\":\n+                                result = (lintMinorVersion <= minorVersion);\n+                                break;\n+                            // \"=\" gets the highest priority, since all filters are inclusive\n+                            case \"=\":\n+                                return (lintMinorVersion == minorVersion);\n+                            default:\n+                                return true\n+                        }\n \n-                    filters[filter].enabled = true;\n-\n-                    let result;\n-                    switch (filter) {\n-                        case \"\u2265\":\n-                            result = (lintMinorVersion >= minorVersion);\n-                            break;\n-                        case \"\u2264\":\n-                            result = (lintMinorVersion <= minorVersion);\n-                            break;\n-                        // \"=\" gets the highest priority, since all filters are inclusive\n-                        case \"=\":\n-                            return (lintMinorVersion === minorVersion);\n-                        default:\n-                            return true\n-                    }\n+                        if (!result) {\n+                            return false;\n+                        }\n \n-                    if (!result) {\n-                        return false;\n-                    }\n+                        let cmpFilter;\n+                        if (filter === \"\u2265\") {\n+                            cmpFilter = \"\u2264\";\n+                        } else {\n+                            cmpFilter = \"\u2265\";\n+                        }\n \n-                    let cmpFilter;\n-                    if (filter === \"\u2265\") {\n-                        cmpFilter = \"\u2264\";\n-                    } else {\n-                        cmpFilter = \"\u2265\";\n-                    }\n+                        if (filters[cmpFilter].enabled) {\n+                            let cmpMinorVersion = filters[cmpFilter].minorVersion;\n+                            result = (cmpFilter === \"\u2265\") ? (lintMinorVersion >= cmpMinorVersion) : (lintMinorVersion <= cmpMinorVersion);\n+                        }\n \n-                    let cmpMinorVersion = filters[cmpFilter].minorVersion;\n-                    if (!validateVersionStr(cmpMinorVersion)) {\n-                        filters[cmpFilter].enabled = false;\n-                        return true;\n+                        return result;\n                     }\n-\n-                    filters[cmpFilter].enabled = true;\n-                    return (cmpFilter === \"\u2265\") ? (lintMinorVersion >= cmpMinorVersion) : (lintMinorVersion <= cmpMinorVersion);\n                 }\n \n                 return true;"}]}