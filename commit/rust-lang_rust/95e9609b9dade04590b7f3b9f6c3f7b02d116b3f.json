{"sha": "95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZTk2MDliOWRhZGUwNDU5MGI3ZjNiOWY2YzNmN2IwMmQxMTZiM2Y=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-11-24T17:18:22Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-11-24T22:28:12Z"}, "message": "std: Flag Windows TLS dtor symbol as #[used]\n\nTurns out ThinLTO was internalizing this symbol and eliminating it. Worse yet if\nyou compiled with LTO turns out no TLS destructors would run on Windows! The\n`#[used]` annotation should be a more bulletproof implementation (in the face of\nLTO) of preserving this symbol all the way through in LLVM and ensuring it makes\nit all the way to the linker which will take care of it.", "tree": {"sha": "db9f1c8b5d7206af995858eb4f39fac066317cc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db9f1c8b5d7206af995858eb4f39fac066317cc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "html_url": "https://github.com/rust-lang/rust/commit/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47498dea0934f481dcca00c9b19a9bd9b099a408", "url": "https://api.github.com/repos/rust-lang/rust/commits/47498dea0934f481dcca00c9b19a9bd9b099a408", "html_url": "https://github.com/rust-lang/rust/commit/47498dea0934f481dcca00c9b19a9bd9b099a408"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "9587bb424bd4edd5c775844ea1f2aceac243fae2", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "patch": "@@ -332,6 +332,7 @@\n #![feature(doc_spotlight)]\n #![cfg_attr(test, feature(update_panic_count))]\n #![cfg_attr(windows, feature(const_atomic_ptr_new))]\n+#![cfg_attr(windows, feature(used))]\n \n #![default_lib_allocator]\n "}, {"sha": "cdad320e122415c0e1712b8e506583661aaa0adb", "filename": "src/libstd/sys/windows/thread_local.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs?ref=95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "patch": "@@ -200,8 +200,9 @@ unsafe fn register_dtor(key: Key, dtor: Dtor) {\n // the address of the symbol to ensure it sticks around.\n \n #[link_section = \".CRT$XLB\"]\n-#[linkage = \"external\"]\n #[allow(dead_code, unused_variables)]\n+#[used] // we don't want LLVM eliminating this symbol for any reason, and\n+        // when the symbol makes it to the linker the linker will take over\n pub static p_thread_callback: unsafe extern \"system\" fn(c::LPVOID, c::DWORD,\n                                                         c::LPVOID) =\n         on_tls_callback;"}, {"sha": "91fb7aa51d4b0aa4f68bc40e18b1e968bcb08f03", "filename": "src/test/run-pass/lto-still-runs-thread-dtors.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/src%2Ftest%2Frun-pass%2Flto-still-runs-thread-dtors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e9609b9dade04590b7f3b9f6c3f7b02d116b3f/src%2Ftest%2Frun-pass%2Flto-still-runs-thread-dtors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flto-still-runs-thread-dtors.rs?ref=95e9609b9dade04590b7f3b9f6c3f7b02d116b3f", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C lto\n+// no-prefer-dynamic\n+// ignore-emscripten no threads support\n+\n+use std::thread;\n+\n+static mut HIT: usize = 0;\n+\n+thread_local!(static A: Foo = Foo);\n+\n+struct Foo;\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        unsafe {\n+            HIT += 1;\n+        }\n+    }\n+}\n+\n+fn main() {\n+    unsafe {\n+        assert_eq!(HIT, 0);\n+        thread::spawn(|| {\n+            assert_eq!(HIT, 0);\n+            A.with(|_| ());\n+            assert_eq!(HIT, 0);\n+        }).join().unwrap();\n+        assert_eq!(HIT, 1);\n+    }\n+}"}]}