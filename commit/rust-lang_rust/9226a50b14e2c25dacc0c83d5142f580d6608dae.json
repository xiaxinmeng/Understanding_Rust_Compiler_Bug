{"sha": "9226a50b14e2c25dacc0c83d5142f580d6608dae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMjZhNTBiMTRlMmMyNWRhY2MwYzgzZDUxNDJmNTgwZDY2MDhkYWU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-18T05:38:30Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-20T20:58:53Z"}, "message": "Fix and tweak integration tests", "tree": {"sha": "73fbed51080e5df78dd98ddba6619fa95b4e486c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73fbed51080e5df78dd98ddba6619fa95b4e486c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9226a50b14e2c25dacc0c83d5142f580d6608dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9226a50b14e2c25dacc0c83d5142f580d6608dae", "html_url": "https://github.com/rust-lang/rust/commit/9226a50b14e2c25dacc0c83d5142f580d6608dae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9226a50b14e2c25dacc0c83d5142f580d6608dae/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab13c455a4db5269236e0ab5cccf8adc91033a70", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab13c455a4db5269236e0ab5cccf8adc91033a70", "html_url": "https://github.com/rust-lang/rust/commit/ab13c455a4db5269236e0ab5cccf8adc91033a70"}], "stats": {"total": 51, "additions": 19, "deletions": 32}, "files": [{"sha": "2c82af7d218837c1837d57eca5aeecf7f6a16794", "filename": ".travis.yml", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9226a50b14e2c25dacc0c83d5142f580d6608dae/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9226a50b14e2c25dacc0c83d5142f580d6608dae/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=9226a50b14e2c25dacc0c83d5142f580d6608dae", "patch": "@@ -19,34 +19,31 @@ matrix:\n     - env: CFG_RELEASE_CHANNEL=beta\n     - os: osx\n     - env: INTEGRATION=cargo\n+    - env: INTEGRATION=chalk\n     - env: INTEGRATION=rust-clippy\n     - env: INTEGRATION=mdbook\n     - env: INTEGRATION=stdsimd\n-    - env: INTEGRATION=rust-semverver\n-    - env: INTEGRATION=chalk\n     - env: INTEGRATION=crater\n     - env: INTEGRATION=futures-rs\n     - env: INTEGRATION=rand\n     - env: INTEGRATION=failure\n     - env: INTEGRATION=error-chain\n     - env: INTEGRATION=bitflags\n     - env: INTEGRATION=log\n+    - env: INTEGRATION=glob\n+    - env: INTEGRATION=tempdir\n+    - env: INTEGRATION=rust-semverver\n   allow_failures:\n-    - env: INTEGRATION=cargo\n-    - env: INTEGRATION=stdsimd\n-    - env: INTEGRATION=mdbook\n+    # PR sent\n     - env: INTEGRATION=crater\n-    - env: INTEGRATION=rust-semverver\n-    - env: INTEGRATION=rust-clippy\n-    - env: INTEGRATION=chalk\n-    - env: INTEGRATION=bitflags\n-    - env: INTEGRATION=error-chain\n-    - env: INTEGRATION=failure\n-    - env: INTEGRATION=futures-rs\n-    - env: INTEGRATION=log\n+    # #2721\n     - env: INTEGRATION=rand\n-    - env: INTEGRATION=glob\n-    - env: INTEGRATION=tempdir\n+    # dues to a test failure (fails before Rustfmt'ing too)\n+    - env: INTEGRATION=stdsimd\n+    # Need to run an lalrpop build step before testing?\n+    - env: INTEGRATION=chalk\n+    # Doesn't build\n+    - env: INTEGRATION=rust-semverver\n \n before_script:\n - |"}, {"sha": "0bce1671d4eed4c2ce99289da93a81d3fad476ee", "filename": "ci/integration.sh", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9226a50b14e2c25dacc0c83d5142f580d6608dae/ci%2Fintegration.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9226a50b14e2c25dacc0c83d5142f580d6608dae/ci%2Fintegration.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fintegration.sh?ref=9226a50b14e2c25dacc0c83d5142f580d6608dae", "patch": "@@ -4,8 +4,7 @@ set -ex\n \n : ${INTEGRATION?\"The INTEGRATION environment variable must be set.\"}\n \n-# FIXME: this is causing the build to fail when rustfmt is found in .cargo/bin\n-# but cargo-fmt is not found.\n+# FIXME: this means we can get a stale cargo-fmt from a previous run.\n #\n # `which rustfmt` fails if rustfmt is not found. Since we don't install\n # `rustfmt` via `rustup`, this is the case unless we manually install it. Once\n@@ -15,12 +14,14 @@ set -ex\n # here after the first installation will find `rustfmt` and won't need to build\n # it again.\n #\n-# which rustfmt || cargo install --force\n+#which cargo-fmt || cargo install --force\n cargo install --force\n \n echo \"Integration tests for: ${INTEGRATION}\"\n+cargo fmt -- --version\n \n function check_fmt {\n+    touch rustfmt.toml\n     cargo fmt --all -v 2>&1 | tee rustfmt_output\n     if [[ $? != 0 ]]; then\n         cat rustfmt_output\n@@ -45,35 +46,24 @@ function check_fmt {\n     fi\n }\n \n-function check {\n-    cargo test --all\n-    if [[ $? != 0 ]]; then\n-        return 1\n-    fi\n-    check_fmt\n-    if [[ $? != 0 ]]; then\n-        return 1\n-    fi\n-}\n-\n case ${INTEGRATION} in\n     cargo)\n         git clone --depth=1 https://github.com/rust-lang/${INTEGRATION}.git\n         cd ${INTEGRATION}\n         export CFG_DISABLE_CROSS_TESTS=1\n-        check\n+        check_fmt\n         cd -\n         ;;\n     failure)\n         git clone --depth=1 https://github.com/rust-lang-nursery/${INTEGRATION}.git\n         cd ${INTEGRATION}/failure-1.X\n-        check\n+        check_fmt\n         cd -\n         ;;\n     *)\n         git clone --depth=1 https://github.com/rust-lang-nursery/${INTEGRATION}.git\n         cd ${INTEGRATION}\n-        check\n+        check_fmt\n         cd -\n         ;;\n esac"}]}