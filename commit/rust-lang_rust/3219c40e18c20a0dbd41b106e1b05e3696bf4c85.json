{"sha": "3219c40e18c20a0dbd41b106e1b05e3696bf4c85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMTljNDBlMThjMjBhMGRiZDQxYjEwNmUxYjA1ZTM2OTZiZjRjODU=", "commit": {"author": {"name": "David Rajchenbach-Teller", "email": "dteller@mozilla.com", "date": "2011-10-12T08:22:26Z"}, "committer": {"name": "David Rajchenbach-Teller", "email": "dteller@mozilla.com", "date": "2011-10-12T08:56:05Z"}, "message": "[Optim] int.rs: reimplemented pow with fast exponentiation", "tree": {"sha": "6d2a6e1847a490002c063d7be964419ceae69194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d2a6e1847a490002c063d7be964419ceae69194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3219c40e18c20a0dbd41b106e1b05e3696bf4c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3219c40e18c20a0dbd41b106e1b05e3696bf4c85", "html_url": "https://github.com/rust-lang/rust/commit/3219c40e18c20a0dbd41b106e1b05e3696bf4c85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3219c40e18c20a0dbd41b106e1b05e3696bf4c85/comments", "author": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d43e90172c364a5f92a0f4447a5030274f18832", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d43e90172c364a5f92a0f4447a5030274f18832", "html_url": "https://github.com/rust-lang/rust/commit/0d43e90172c364a5f92a0f4447a5030274f18832"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "fe7689e3e28729fbc2d7e1edf4318f617dcb982a", "filename": "src/lib/int.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3219c40e18c20a0dbd41b106e1b05e3696bf4c85/src%2Flib%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3219c40e18c20a0dbd41b106e1b05e3696bf4c85/src%2Flib%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fint.rs?ref=3219c40e18c20a0dbd41b106e1b05e3696bf4c85", "patch": "@@ -73,16 +73,19 @@ fn to_str(n: int, radix: uint) -> str {\n fn str(i: int) -> str { ret to_str(i, 10u); }\n \n fn pow(base: int, exponent: uint) -> int {\n-    ret if exponent == 0u {\n-            1\n-        } else if base == 0 {\n-            0\n-        } else {\n-            let accum = base;\n-            let count = exponent;\n-            while count > 1u { accum *= base; count -= 1u; }\n-            accum\n-        };\n+    if exponent == 0u { ret 1; } //Not mathemtically true if [base == 0]\n+    if base     == 0  { ret 0; }\n+    let my_pow  = exponent;\n+    let acc     = 1;\n+    let multiplier = base;\n+    while(my_pow > 0u) {\n+      if my_pow % 2u == 1u {\n+         acc *= multiplier;\n+      }\n+      my_pow     /= 2u;\n+      multiplier *= multiplier;\n+    }\n+    ret acc;\n }\n // Local Variables:\n // mode: rust;"}]}