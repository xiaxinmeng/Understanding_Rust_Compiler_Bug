{"sha": "e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YmMyOWYxMjI4MTNiYjNjNjlkMWY4Y2Q2MGRkNmFiNGRkOWE0YmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-17T17:54:11Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-17T17:54:11Z"}, "message": "simplify overlay handling", "tree": {"sha": "8aa4def850e5984bd72725995f420d432957f94a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8aa4def850e5984bd72725995f420d432957f94a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "html_url": "https://github.com/rust-lang/rust/commit/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b719a6cc07772f4c50fe34865e7dc82c4df11dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b719a6cc07772f4c50fe34865e7dc82c4df11dfb", "html_url": "https://github.com/rust-lang/rust/commit/b719a6cc07772f4c50fe34865e7dc82c4df11dfb"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "ddbc38163d4dcaab770a5cc9146ca3062a36cd04", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "patch": "@@ -145,7 +145,7 @@ impl Vfs {\n         if let Ok(text) = fs::read_to_string(&full_path) {\n             self.do_change_file(file, text, true);\n         } else {\n-            self.do_remove_file(root, rel_path, file, true);\n+            self.do_remove_file(root, rel_path, file);\n         }\n         Some(file)\n     }\n@@ -183,9 +183,13 @@ impl Vfs {\n                 self.pending_changes.push(change);\n             }\n             TaskResult::SingleFile { root, path, text } => {\n-                match (self.find_file(root, &path), text) {\n+                let file = self.find_file(root, &path);\n+                if file.map(|file| self.files[file].is_overlayed) == Some(true) {\n+                    return;\n+                }\n+                match (file, text) {\n                     (Some(file), None) => {\n-                        self.do_remove_file(root, path, file, false);\n+                        self.do_remove_file(root, path, file);\n                     }\n                     (None, Some(text)) => {\n                         self.do_add_file(root, path, text, false);\n@@ -213,24 +217,12 @@ impl Vfs {\n     }\n \n     fn do_change_file(&mut self, file: VfsFile, text: String, is_overlay: bool) {\n-        if !is_overlay && self.files[file].is_overlayed {\n-            return;\n-        }\n         let text = Arc::new(text);\n         self.change_file(file, text.clone(), is_overlay);\n         self.pending_changes.push(VfsChange::ChangeFile { file, text });\n     }\n \n-    fn do_remove_file(\n-        &mut self,\n-        root: VfsRoot,\n-        path: RelativePathBuf,\n-        file: VfsFile,\n-        is_overlay: bool,\n-    ) {\n-        if !is_overlay && self.files[file].is_overlayed {\n-            return;\n-        }\n+    fn do_remove_file(&mut self, root: VfsRoot, path: RelativePathBuf, file: VfsFile) {\n         self.remove_file(file);\n         self.pending_changes.push(VfsChange::RemoveFile { root, path, file });\n     }"}]}