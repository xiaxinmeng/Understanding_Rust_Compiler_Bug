{"sha": "362d2439bdd221b0efa4f0d28bb51bfde0ea9484", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MmQyNDM5YmRkMjIxYjBlZmE0ZjBkMjhiYjUxYmZkZTBlYTk0ODQ=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-03-29T04:54:50Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-03-29T04:54:50Z"}, "message": "Fix error in Rust 2018 + no_core environment", "tree": {"sha": "416f7d3bc4cee35aeca763a85adc25a9b45b4df6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/416f7d3bc4cee35aeca763a85adc25a9b45b4df6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/362d2439bdd221b0efa4f0d28bb51bfde0ea9484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/362d2439bdd221b0efa4f0d28bb51bfde0ea9484", "html_url": "https://github.com/rust-lang/rust/commit/362d2439bdd221b0efa4f0d28bb51bfde0ea9484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/362d2439bdd221b0efa4f0d28bb51bfde0ea9484/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d59b46fd49022c1396e203d942103d3483840adf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d59b46fd49022c1396e203d942103d3483840adf", "html_url": "https://github.com/rust-lang/rust/commit/d59b46fd49022c1396e203d942103d3483840adf"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "ab3d87fafdac7c5c2d3f04174274e112e9caadb2", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/362d2439bdd221b0efa4f0d28bb51bfde0ea9484/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/362d2439bdd221b0efa4f0d28bb51bfde0ea9484/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=362d2439bdd221b0efa4f0d28bb51bfde0ea9484", "patch": "@@ -1697,7 +1697,12 @@ impl<'a> hir::lowering::Resolver for Resolver<'a> {\n         components: &[&str],\n         is_value: bool\n     ) -> hir::Path {\n-        let segments = iter::once(keywords::PathRoot.ident())\n+        let root = if crate_root.is_some() {\n+            keywords::PathRoot\n+        } else {\n+            keywords::Crate\n+        };\n+        let segments = iter::once(root.ident())\n             .chain(\n                 crate_root.into_iter()\n                     .chain(components.iter().cloned())"}]}