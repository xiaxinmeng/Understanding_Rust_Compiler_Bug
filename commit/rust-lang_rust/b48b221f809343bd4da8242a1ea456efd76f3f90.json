{"sha": "b48b221f809343bd4da8242a1ea456efd76f3f90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0OGIyMjFmODA5MzQzYmQ0ZGE4MjQyYTFlYTQ1NmVmZDc2ZjNmOTA=", "commit": {"author": {"name": "Krishna Sai Veera Reddy", "email": "veerareddy@email.arizona.edu", "date": "2020-02-09T22:12:40Z"}, "committer": {"name": "Krishna Sai Veera Reddy", "email": "veerareddy@email.arizona.edu", "date": "2020-02-09T23:35:51Z"}, "message": "Use `PATH` environment variable for testing\n\nThe tests were failing on windows because the `HOME` env variable\ndoesn't exist on it so using the `PATH` variable to test instead.", "tree": {"sha": "89955710bdfcfd4159781edc7541cacecb63b49f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89955710bdfcfd4159781edc7541cacecb63b49f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b48b221f809343bd4da8242a1ea456efd76f3f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b48b221f809343bd4da8242a1ea456efd76f3f90", "html_url": "https://github.com/rust-lang/rust/commit/b48b221f809343bd4da8242a1ea456efd76f3f90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b48b221f809343bd4da8242a1ea456efd76f3f90/comments", "author": {"login": "krishna-veerareddy", "id": 41484652, "node_id": "MDQ6VXNlcjQxNDg0NjUy", "avatar_url": "https://avatars.githubusercontent.com/u/41484652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishna-veerareddy", "html_url": "https://github.com/krishna-veerareddy", "followers_url": "https://api.github.com/users/krishna-veerareddy/followers", "following_url": "https://api.github.com/users/krishna-veerareddy/following{/other_user}", "gists_url": "https://api.github.com/users/krishna-veerareddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishna-veerareddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishna-veerareddy/subscriptions", "organizations_url": "https://api.github.com/users/krishna-veerareddy/orgs", "repos_url": "https://api.github.com/users/krishna-veerareddy/repos", "events_url": "https://api.github.com/users/krishna-veerareddy/events{/privacy}", "received_events_url": "https://api.github.com/users/krishna-veerareddy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krishna-veerareddy", "id": 41484652, "node_id": "MDQ6VXNlcjQxNDg0NjUy", "avatar_url": "https://avatars.githubusercontent.com/u/41484652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishna-veerareddy", "html_url": "https://github.com/krishna-veerareddy", "followers_url": "https://api.github.com/users/krishna-veerareddy/followers", "following_url": "https://api.github.com/users/krishna-veerareddy/following{/other_user}", "gists_url": "https://api.github.com/users/krishna-veerareddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishna-veerareddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishna-veerareddy/subscriptions", "organizations_url": "https://api.github.com/users/krishna-veerareddy/orgs", "repos_url": "https://api.github.com/users/krishna-veerareddy/repos", "events_url": "https://api.github.com/users/krishna-veerareddy/events{/privacy}", "received_events_url": "https://api.github.com/users/krishna-veerareddy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3a1587a1c5b7df413729e34923ada495f3fff94", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a1587a1c5b7df413729e34923ada495f3fff94", "html_url": "https://github.com/rust-lang/rust/commit/a3a1587a1c5b7df413729e34923ada495f3fff94"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "642c77460a3407076ed9be98fa17eeb94feb1196", "filename": "tests/ui/option_env_unwrap.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b48b221f809343bd4da8242a1ea456efd76f3f90/tests%2Fui%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b48b221f809343bd4da8242a1ea456efd76f3f90/tests%2Fui%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_env_unwrap.rs?ref=b48b221f809343bd4da8242a1ea456efd76f3f90", "patch": "@@ -14,10 +14,10 @@ macro_rules! option_env_unwrap {\n }\n \n fn main() {\n-    let _ = option_env!(\"HOME\").unwrap();\n-    let _ = option_env!(\"HOME\").expect(\"environment variable HOME isn't set\");\n-    let _ = option_env_unwrap!(\"HOME\");\n-    let _ = option_env_unwrap!(\"HOME\", \"environment variable HOME isn't set\");\n-    let _ = option_env_unwrap_external!(\"HOME\");\n-    let _ = option_env_unwrap_external!(\"HOME\", \"environment variable HOME isn't set\");\n+    let _ = option_env!(\"PATH\").unwrap();\n+    let _ = option_env!(\"PATH\").expect(\"environment variable PATH isn't set\");\n+    let _ = option_env_unwrap!(\"PATH\");\n+    let _ = option_env_unwrap!(\"PATH\", \"environment variable PATH isn't set\");\n+    let _ = option_env_unwrap_external!(\"PATH\");\n+    let _ = option_env_unwrap_external!(\"PATH\", \"environment variable PATH isn't set\");\n }"}, {"sha": "8de9c8a9d29e0a1da2b4c59bef6ccdd48b8b7491", "filename": "tests/ui/option_env_unwrap.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b48b221f809343bd4da8242a1ea456efd76f3f90/tests%2Fui%2Foption_env_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b48b221f809343bd4da8242a1ea456efd76f3f90/tests%2Fui%2Foption_env_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_env_unwrap.stderr?ref=b48b221f809343bd4da8242a1ea456efd76f3f90", "patch": "@@ -1,7 +1,7 @@\n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n   --> $DIR/option_env_unwrap.rs:17:13\n    |\n-LL |     let _ = option_env!(\"HOME\").unwrap();\n+LL |     let _ = option_env!(\"PATH\").unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::option-env-unwrap` implied by `-D warnings`\n@@ -10,7 +10,7 @@ LL |     let _ = option_env!(\"HOME\").unwrap();\n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n   --> $DIR/option_env_unwrap.rs:18:13\n    |\n-LL |     let _ = option_env!(\"HOME\").expect(\"environment variable HOME isn't set\");\n+LL |     let _ = option_env!(\"PATH\").expect(\"environment variable PATH isn't set\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using the `env!` macro instead\n@@ -21,7 +21,7 @@ error: this will panic at run-time if the environment variable doesn't exist at\n LL |         option_env!($env).unwrap()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n-LL |     let _ = option_env_unwrap!(\"HOME\");\n+LL |     let _ = option_env_unwrap!(\"PATH\");\n    |             -------------------------- in this macro invocation\n    |\n    = help: consider using the `env!` macro instead\n@@ -33,7 +33,7 @@ error: this will panic at run-time if the environment variable doesn't exist at\n LL |         option_env!($env).expect($message)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n-LL |     let _ = option_env_unwrap!(\"HOME\", \"environment variable HOME isn't set\");\n+LL |     let _ = option_env_unwrap!(\"PATH\", \"environment variable PATH isn't set\");\n    |             ----------------------------------------------------------------- in this macro invocation\n    |\n    = help: consider using the `env!` macro instead\n@@ -42,7 +42,7 @@ LL |     let _ = option_env_unwrap!(\"HOME\", \"environment variable HOME isn't set\n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n   --> $DIR/option_env_unwrap.rs:21:13\n    |\n-LL |     let _ = option_env_unwrap_external!(\"HOME\");\n+LL |     let _ = option_env_unwrap_external!(\"PATH\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using the `env!` macro instead\n@@ -51,7 +51,7 @@ LL |     let _ = option_env_unwrap_external!(\"HOME\");\n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n   --> $DIR/option_env_unwrap.rs:22:13\n    |\n-LL |     let _ = option_env_unwrap_external!(\"HOME\", \"environment variable HOME isn't set\");\n+LL |     let _ = option_env_unwrap_external!(\"PATH\", \"environment variable PATH isn't set\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using the `env!` macro instead"}]}