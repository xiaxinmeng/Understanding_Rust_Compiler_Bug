{"sha": "6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOGZiM2ZiZDgyOTYzNWJhYTBlZjU2YTMzNGEyN2FkMjNmNWFjMGE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-26T23:53:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-26T23:53:16Z"}, "message": "Rollup merge of #77107 - bugadani:perf, r=oli-obk\n\nEnable const propagation into operands at mir_opt_level=2\n\nFeature was added in #74507 but gated with `mir_opt_level>=3` because of compile time regressions. Let's see whether the LLVM 11 update solves that.\n\nAs the [perf results](https://github.com/rust-lang/rust/pull/77107#issuecomment-697668154) show, enabling this optimization results in a lot less regression as before.\n\ncc @oli-obk\n\nr? @ghost", "tree": {"sha": "135b884fc9b18d19dc5bd219468682f8fead72a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/135b884fc9b18d19dc5bd219468682f8fead72a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfb9RtCRBK7hj4Ov3rIwAAdHIIAHpyuK97lccyJVeVoVRxhd/T\n2+roXaKLmIpdnpkR9TN+kpVM1JGCgIeB04TPamyJ5yY4kPu71xR4gpRjeNGt4kmQ\n6GNVhg+PfylzHuSdQDLDUocDmbIeMK/KVN5wVl+nVPa2mhP5rkPt+wlGsoVCq7ww\nJJRtB7HAqOicThntKQ1VKZEOo14GikEPzOkYOpmIUSBlBkcg9cxSI80uJFkXI322\nmnk/rktUvk4s0MTlLo9lc2eawo4Q+YOhxPZXFwyyuf3mOwq6UvkQ+xSyzt3J+Yto\nnOGmP1CUaeDk0aBUzLfmphFe8zwUF7CYbAvpW+ni8cSoNopeIkcItG//6C63maw=\n=Ky1E\n-----END PGP SIGNATURE-----\n", "payload": "tree 135b884fc9b18d19dc5bd219468682f8fead72a7\nparent 9ab95c36e23151c1010686950fd5fb8ba99fd350\nparent 90c7731f6cca6e4c741c5f465b307b4ac4a7f31f\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601164396 +0200\ncommitter GitHub <noreply@github.com> 1601164396 +0200\n\nRollup merge of #77107 - bugadani:perf, r=oli-obk\n\nEnable const propagation into operands at mir_opt_level=2\n\nFeature was added in #74507 but gated with `mir_opt_level>=3` because of compile time regressions. Let's see whether the LLVM 11 update solves that.\n\nAs the [perf results](https://github.com/rust-lang/rust/pull/77107#issuecomment-697668154) show, enabling this optimization results in a lot less regression as before.\n\ncc @oli-obk\n\nr? @ghost\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a", "html_url": "https://github.com/rust-lang/rust/commit/6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ab95c36e23151c1010686950fd5fb8ba99fd350", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab95c36e23151c1010686950fd5fb8ba99fd350", "html_url": "https://github.com/rust-lang/rust/commit/9ab95c36e23151c1010686950fd5fb8ba99fd350"}, {"sha": "90c7731f6cca6e4c741c5f465b307b4ac4a7f31f", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c7731f6cca6e4c741c5f465b307b4ac4a7f31f", "html_url": "https://github.com/rust-lang/rust/commit/90c7731f6cca6e4c741c5f465b307b4ac4a7f31f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0f04ead94dd33e480f0ce0c59e10e84e99850f17", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=6b8fb3fbd829635baa0ef56a334a27ad23f5ac0a", "patch": "@@ -1046,9 +1046,9 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n     fn visit_operand(&mut self, operand: &mut Operand<'tcx>, location: Location) {\n         self.super_operand(operand, location);\n \n-        // Only const prop copies and moves on `mir_opt_level=3` as doing so\n-        // currently increases compile time.\n-        if self.tcx.sess.opts.debugging_opts.mir_opt_level >= 3 {\n+        // Only const prop copies and moves on `mir_opt_level=2` as doing so\n+        // currently slightly increases compile time in some cases.\n+        if self.tcx.sess.opts.debugging_opts.mir_opt_level >= 2 {\n             self.propagate_operand(operand)\n         }\n     }\n@@ -1246,8 +1246,8 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n             | TerminatorKind::InlineAsm { .. } => {}\n             // Every argument in our function calls have already been propagated in `visit_operand`.\n             //\n-            // NOTE: because LLVM codegen gives performance regressions with it, so this is gated\n-            // on `mir_opt_level=3`.\n+            // NOTE: because LLVM codegen gives slight performance regressions with it, so this is\n+            // gated on `mir_opt_level=2`.\n             TerminatorKind::Call { .. } => {}\n         }\n "}]}