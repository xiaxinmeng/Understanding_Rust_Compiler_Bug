{"sha": "7d761fe0462ba0f671a237d0bb35e3579b8ba0e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNzYxZmUwNDYyYmEwZjY3MWEyMzdkMGJiMzVlMzU3OWI4YmEwZTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-24T07:37:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-24T07:37:01Z"}, "message": "Auto merge of #66322 - lzutao:consistent-result-map_or_else, r=dtolnay\n\nStabilize Result::map_or_else\n\nStabilized this API:\n```rust\nimpl<T, E> Result<T, E> {\n    pub fn map_or_else<U, D: FnOnce(E) -> U, F: FnOnce(T) -> U>(self, default: D, f: F) -> U {\n        match self {\n            Ok(t) => f(t),\n            Err(e) => default(e),\n        }\n    }\n}\n```\n\nCloses #53268\nr? @SimonSapin", "tree": {"sha": "d7d3f93996e6f797a33361a13f051d2d7fe27457", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7d3f93996e6f797a33361a13f051d2d7fe27457"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d761fe0462ba0f671a237d0bb35e3579b8ba0e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d761fe0462ba0f671a237d0bb35e3579b8ba0e8", "html_url": "https://github.com/rust-lang/rust/commit/7d761fe0462ba0f671a237d0bb35e3579b8ba0e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d761fe0462ba0f671a237d0bb35e3579b8ba0e8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f", "html_url": "https://github.com/rust-lang/rust/commit/e41ced3f8d8e2f3f377ef931458e612d5f3d1f3f"}, {"sha": "c06a8ea727c720ed47b3f54192e92c449252d231", "url": "https://api.github.com/repos/rust-lang/rust/commits/c06a8ea727c720ed47b3f54192e92c449252d231", "html_url": "https://github.com/rust-lang/rust/commit/c06a8ea727c720ed47b3f54192e92c449252d231"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "1a0845f3a6dda5a16fd84bd873ee6fc8f8ae6273", "filename": "src/libcore/result.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d761fe0462ba0f671a237d0bb35e3579b8ba0e8/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d761fe0462ba0f671a237d0bb35e3579b8ba0e8/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=7d761fe0462ba0f671a237d0bb35e3579b8ba0e8", "patch": "@@ -551,7 +551,6 @@ impl<T, E> Result<T, E> {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(result_map_or_else)]\n     /// let k = 21;\n     ///\n     /// let x : Result<_, &str> = Ok(\"foo\");\n@@ -561,9 +560,12 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.map_or_else(|e| k * 2, |v| v.len()), 42);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"result_map_or_else\", issue = \"53268\")]\n-    pub fn map_or_else<U, M: FnOnce(T) -> U, F: FnOnce(E) -> U>(self, fallback: F, map: M) -> U {\n-        self.map(map).unwrap_or_else(fallback)\n+    #[stable(feature = \"result_map_or_else\", since = \"1.41.0\")]\n+    pub fn map_or_else<U, D: FnOnce(E) -> U, F: FnOnce(T) -> U>(self, default: D, f: F) -> U {\n+        match self {\n+            Ok(t) => f(t),\n+            Err(e) => default(e),\n+        }\n     }\n \n     /// Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a"}]}