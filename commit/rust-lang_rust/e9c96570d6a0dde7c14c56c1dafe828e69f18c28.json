{"sha": "e9c96570d6a0dde7c14c56c1dafe828e69f18c28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Yzk2NTcwZDZhMGRkZTdjMTRjNTZjMWRhZmU4MjhlNjlmMThjMjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-12T20:22:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-12T20:22:22Z"}, "message": "miri engine: fix treatment of abort intrinsic", "tree": {"sha": "695e399c1f9d8910f331c231c1c15819d939e1cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/695e399c1f9d8910f331c231c1c15819d939e1cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c96570d6a0dde7c14c56c1dafe828e69f18c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c96570d6a0dde7c14c56c1dafe828e69f18c28", "html_url": "https://github.com/rust-lang/rust/commit/e9c96570d6a0dde7c14c56c1dafe828e69f18c28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c96570d6a0dde7c14c56c1dafe828e69f18c28/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54b7d21f59a363e53eb1c31d76b40af2ff99321c", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b7d21f59a363e53eb1c31d76b40af2ff99321c", "html_url": "https://github.com/rust-lang/rust/commit/54b7d21f59a363e53eb1c31d76b40af2ff99321c"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "37a60bcc8368d35fb62b49124478b2af34a4ab67", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e9c96570d6a0dde7c14c56c1dafe828e69f18c28/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c96570d6a0dde7c14c56c1dafe828e69f18c28/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=e9c96570d6a0dde7c14c56c1dafe828e69f18c28", "patch": "@@ -84,14 +84,15 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let substs = instance.substs;\n         let intrinsic_name = self.tcx.item_name(instance.def_id());\n \n-        // We currently do not handle any intrinsics that are *allowed* to diverge,\n-        // but `transmute` could lack a return place in case of UB.\n+        // First handle intrinsics without return place.\n         let (dest, ret) = match ret {\n-            Some(p) => p,\n             None => match intrinsic_name {\n-                sym::transmute => throw_ub!(Unreachable),\n+                sym::transmute => throw_ub_format!(\"transmuting to uninhabited type\"),\n+                sym::abort => M::abort(self)?,\n+                // Unsupported diverging intrinsic.\n                 _ => return Ok(false),\n             },\n+            Some(p) => p,\n         };\n \n         // Keep the patterns in this match ordered the same as the list in\n@@ -103,10 +104,6 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 self.write_scalar(location.ptr, dest)?;\n             }\n \n-            sym::abort => {\n-                M::abort(self)?;\n-            }\n-\n             sym::min_align_of\n             | sym::pref_align_of\n             | sym::needs_drop"}]}