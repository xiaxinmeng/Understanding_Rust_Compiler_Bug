{"sha": "5fb6e6364b6b10e98430140554e644697f29eb06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYjZlNjM2NGI2YjEwZTk4NDMwMTQwNTU0ZTY0NDY5N2YyOWViMDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-05T18:34:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-05T18:34:45Z"}, "message": "rustc: Add a binding to LLVM's bitcode parser", "tree": {"sha": "3332fcffda123b9c9d02f94d337597cef2b3a610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3332fcffda123b9c9d02f94d337597cef2b3a610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fb6e6364b6b10e98430140554e644697f29eb06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb6e6364b6b10e98430140554e644697f29eb06", "html_url": "https://github.com/rust-lang/rust/commit/5fb6e6364b6b10e98430140554e644697f29eb06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fb6e6364b6b10e98430140554e644697f29eb06/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b742aec91f1c2615ab8e01ba027dfff3008a7f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b742aec91f1c2615ab8e01ba027dfff3008a7f7", "html_url": "https://github.com/rust-lang/rust/commit/6b742aec91f1c2615ab8e01ba027dfff3008a7f7"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "da165787477e4befbbb05061cf24dcb402b88a5e", "filename": "src/comp/back/Link.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Fcomp%2Fback%2FLink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Fcomp%2Fback%2FLink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2FLink.rs?ref=5fb6e6364b6b10e98430140554e644697f29eb06", "patch": "@@ -16,6 +16,10 @@ tag output_type {\n     output_type_object;\n }\n \n+fn link_intrinsics(session.session sess, ModuleRef llmod) {\n+    // TODO\n+}\n+\n mod Write {\n     fn is_object_or_assembly(output_type ot) -> bool {\n         if (ot == output_type_assembly) {\n@@ -41,6 +45,8 @@ mod Write {\n     }\n \n     fn run_passes(session.session sess, ModuleRef llmod, str output) {\n+        link_intrinsics(sess, llmod);\n+\n         auto pm = mk_pass_manager();\n         auto opts = sess.get_opts();\n "}, {"sha": "cfa82b0346dfc0b353af74cfa1b1d3351e2fb9b1", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=5fb6e6364b6b10e98430140554e644697f29eb06", "patch": "@@ -848,6 +848,9 @@ native mod llvm = llvm_lib {\n         call. */\n     fn LLVMRustGetLastError() -> sbuf;\n \n+    /** Parses the bitcode in the given memory buffer. */\n+    fn LLVMRustParseBitcode(MemoryBufferRef MemBuf) -> ModuleRef;\n+\n     /** Links LLVM modules together. `Src` is destroyed by this call and\n         must never be referenced again. */\n     fn LLVMLinkModules(ModuleRef Dest, ModuleRef Src) -> Bool;"}, {"sha": "3c9588305f1cc51ca0f9858ef90c73ae32d5fe9f", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=5fb6e6364b6b10e98430140554e644697f29eb06", "patch": "@@ -21,6 +21,7 @@\n #include \"llvm/Target/TargetRegistry.h\"\n #include \"llvm/Target/TargetOptions.h\"\n #include \"llvm-c/Core.h\"\n+#include \"llvm-c/BitReader.h\"\n #include \"llvm-c/Object.h\"\n #include <cstdlib>\n \n@@ -98,3 +99,10 @@ extern \"C\" void LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n   (void)foo;\n   PM->run(*unwrap(M));\n }\n+\n+extern \"C\" LLVMModuleRef LLVMRustParseBitcode(LLVMMemoryBufferRef MemBuf) {\n+  LLVMModuleRef M;\n+  return LLVMParseBitcode(MemBuf, &M, const_cast<char **>(&LLVMRustError))\n+         ? NULL : M;\n+}\n+"}, {"sha": "a5ffa04ebcccd369a5e8512cca69bfaf9ae80ec6", "filename": "src/rustllvm/rustllvm.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Frustllvm%2Frustllvm.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/5fb6e6364b6b10e98430140554e644697f29eb06/src%2Frustllvm%2Frustllvm.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def.in?ref=5fb6e6364b6b10e98430140554e644697f29eb06", "patch": "@@ -1,6 +1,7 @@\n LLVMRustCreateMemoryBufferWithContentsOfFile\n LLVMRustWriteOutputFile\n LLVMRustGetLastError\n+LLVMRustParseBitcode\n LLVMLinkModules\n LLVMCreateObjectFile\n LLVMDisposeObjectFile"}]}