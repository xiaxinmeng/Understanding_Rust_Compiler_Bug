{"sha": "036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNmNlNWNkYzRhMmNkNWMwYmRmYWE4M2VkM2NlNjQ2NDRiYmRjZGU=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-19T18:41:22Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-19T18:41:22Z"}, "message": "Fix compiletest `trim` deprecation warnings", "tree": {"sha": "97a9cb8436d30336dc459f1c8c47b81cb8d15f9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97a9cb8436d30336dc459f1c8c47b81cb8d15f9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlwakPcACgkQtvoGpuDi\nZlvGLg/+L6Fbd/TYvEvX829mcY8NanYWNy0jvf+mTvLOoLI+57ngkGpaQqg8sKas\nRHf3uUmGkq9BTBa11aqSMQyr30m504X2rbwQx5zRPPz6OB3b0rp8Psg0ed35PeDK\nnXIEXXgHPdiRW/VZTpk4aCYSIygexn4jg/6CskZyahh+gl+7D3EJse0lngzHBblI\nCmhrp4CdnsJKJ1kYBviykAlNogsfioyB7eXrihc8lL2Ym16QbwrSzslVYwX7DZX1\nvdX5M4FYFey1p5x6htCuoHvogBvR77XBSLidYglwWOxcs26uy3qUco0+p/HE0EDa\n4MEOGJuvfjDIjXAD0UWja/XMM54Txb8WOiPqifFgTFJuhrcURDFvpv73DO0zIYuD\nxtDp7xRfjbYJ3Yt7SEgK2z9EhXCafgOfZIPL+oDqme5b0XgK55MTrC4Nug+L3cw1\nQX0WxNKb/EtvQRUeabot4jTXvHZoKAsjwvOu2vGiFOwvd0Mb7FHCNHywtdmKWvCV\n34RpAIpPq5+ZRU1x1H29/axR3pcYb/zG5W6Fyh5ee1MEFCEYZaYWGTmI/jubN0dU\nUROIu/6ABIgVt+u0hM/1yuvC0bZcwsO7qFGNTqNxLhtK9W6KBAy8TTFfIcVk0het\nI12O8gDqgOD3MVwLRkDfTZeSMK0QNZUcUHf+IEbco6/s+jGQmPU=\n=d+tY\n-----END PGP SIGNATURE-----", "payload": "tree 97a9cb8436d30336dc459f1c8c47b81cb8d15f9e\nparent 748d354af3145d4292ea84142f73bb8114e3db12\nauthor Philipp Hansch <dev@phansch.net> 1545244882 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1545244882 +0100\n\nFix compiletest `trim` deprecation warnings\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde", "html_url": "https://github.com/rust-lang/rust/commit/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "748d354af3145d4292ea84142f73bb8114e3db12", "url": "https://api.github.com/repos/rust-lang/rust/commits/748d354af3145d4292ea84142f73bb8114e3db12", "html_url": "https://github.com/rust-lang/rust/commit/748d354af3145d4292ea84142f73bb8114e3db12"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "4e25e3a77110a1ad23d61dcb63beb2eed5171dc3", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde", "patch": "@@ -205,7 +205,7 @@ impl EarlyProps {\n         fn ignore_lldb(config: &Config, line: &str) -> bool {\n             if let Some(ref actual_version) = config.lldb_version {\n                 if line.starts_with(\"min-lldb-version\") {\n-                    let min_version = line.trim_right()\n+                    let min_version = line.trim_end()\n                         .rsplit(' ')\n                         .next()\n                         .expect(\"Malformed lldb version directive\");\n@@ -228,15 +228,15 @@ impl EarlyProps {\n             }\n             if let Some(ref actual_version) = config.llvm_version {\n                 if line.starts_with(\"min-llvm-version\") {\n-                    let min_version = line.trim_right()\n+                    let min_version = line.trim_end()\n                         .rsplit(' ')\n                         .next()\n                         .expect(\"Malformed llvm version directive\");\n                     // Ignore if actual version is smaller the minimum required\n                     // version\n                     &actual_version[..] < min_version\n                 } else if line.starts_with(\"min-system-llvm-version\") {\n-                    let min_version = line.trim_right()\n+                    let min_version = line.trim_end()\n                         .rsplit(' ')\n                         .next()\n                         .expect(\"Malformed llvm version directive\");\n@@ -573,14 +573,14 @@ fn iter_header(testfile: &Path, cfg: Option<&str>, it: &mut dyn FnMut(&str)) {\n                     None => false,\n                 };\n                 if matches {\n-                    it(ln[(close_brace + 1)..].trim_left());\n+                    it(ln[(close_brace + 1)..].trim_start());\n                 }\n             } else {\n                 panic!(\"malformed condition directive: expected `{}foo]`, found `{}`\",\n                         comment_with_brace, ln)\n             }\n         } else if ln.starts_with(comment) {\n-            it(ln[comment.len() ..].trim_left());\n+            it(ln[comment.len() ..].trim_start());\n         }\n     }\n     return;"}, {"sha": "cddaf93b671322850f86395404e2101aa3fdbe6e", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=036ce5cdc4a2cd5c0bdfaa83ed3ce64644bbdcde", "patch": "@@ -1079,7 +1079,7 @@ impl<'test> TestCx<'test> {\n             match line {\n                 Ok(line) => {\n                     let line = if line.starts_with(\"//\") {\n-                        line[2..].trim_left()\n+                        line[2..].trim_start()\n                     } else {\n                         line.as_str()\n                     };\n@@ -2143,8 +2143,8 @@ impl<'test> TestCx<'test> {\n             .lines()\n             .enumerate()\n             .filter_map(|(line_nb, line)| {\n-                if (line.trim_left().starts_with(\"pub mod \")\n-                    || line.trim_left().starts_with(\"mod \"))\n+                if (line.trim_start().starts_with(\"pub mod \")\n+                    || line.trim_start().starts_with(\"mod \"))\n                     && line.ends_with(';')\n                 {\n                     if let Some(ref mut other_files) = other_files {\n@@ -2153,7 +2153,7 @@ impl<'test> TestCx<'test> {\n                     None\n                 } else {\n                     let sline = line.split(\"///\").last().unwrap_or(\"\");\n-                    let line = sline.trim_left();\n+                    let line = sline.trim_start();\n                     if line.starts_with(\"```\") {\n                         if ignore {\n                             ignore = false;\n@@ -3284,7 +3284,7 @@ fn normalize_mir_line(line: &str) -> String {\n fn nocomment_mir_line(line: &str) -> &str {\n     if let Some(idx) = line.find(\"//\") {\n         let (l, _) = line.split_at(idx);\n-        l.trim_right()\n+        l.trim_end()\n     } else {\n         line\n     }"}]}