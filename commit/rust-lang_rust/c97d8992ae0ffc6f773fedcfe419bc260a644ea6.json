{"sha": "c97d8992ae0ffc6f773fedcfe419bc260a644ea6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5N2Q4OTkyYWUwZmZjNmY3NzNmZWRjZmU0MTliYzI2MGE2NDRlYTY=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-25T00:22:29Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-29T03:27:27Z"}, "message": "spanview debug output caused ICE when a function had no body", "tree": {"sha": "503e0df1ac761ece4f869ba75fd839230bc79ce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/503e0df1ac761ece4f869ba75fd839230bc79ce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c97d8992ae0ffc6f773fedcfe419bc260a644ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c97d8992ae0ffc6f773fedcfe419bc260a644ea6", "html_url": "https://github.com/rust-lang/rust/commit/c97d8992ae0ffc6f773fedcfe419bc260a644ea6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c97d8992ae0ffc6f773fedcfe419bc260a644ea6/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f12795f8a0c499a9297182cdc3bb240b36712822", "url": "https://api.github.com/repos/rust-lang/rust/commits/f12795f8a0c499a9297182cdc3bb240b36712822", "html_url": "https://github.com/rust-lang/rust/commit/f12795f8a0c499a9297182cdc3bb240b36712822"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "9abfa4a8dc68b7856be0d07aea205157a3dd8e22", "filename": "compiler/rustc_mir/src/util/spanview.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c97d8992ae0ffc6f773fedcfe419bc260a644ea6/compiler%2Frustc_mir%2Fsrc%2Futil%2Fspanview.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97d8992ae0ffc6f773fedcfe419bc260a644ea6/compiler%2Frustc_mir%2Fsrc%2Futil%2Fspanview.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fspanview.rs?ref=c97d8992ae0ffc6f773fedcfe419bc260a644ea6", "patch": "@@ -99,7 +99,11 @@ where\n     W: Write,\n {\n     let def_id = body.source.def_id();\n-    let body_span = hir_body(tcx, def_id).value.span;\n+    let hir_body = hir_body(tcx, def_id);\n+    if hir_body.is_none() {\n+        return Ok(());\n+    }\n+    let body_span = hir_body.unwrap().value.span;\n     let mut span_viewables = Vec::new();\n     for (bb, data) in body.basic_blocks().iter_enumerated() {\n         match spanview {\n@@ -664,19 +668,16 @@ fn fn_span<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Span {\n     let hir_id =\n         tcx.hir().local_def_id_to_hir_id(def_id.as_local().expect(\"expected DefId is local\"));\n     let fn_decl_span = tcx.hir().span(hir_id);\n-    let body_span = hir_body(tcx, def_id).value.span;\n-    if fn_decl_span.ctxt() == body_span.ctxt() {\n-        fn_decl_span.to(body_span)\n+    if let Some(body_span) = hir_body(tcx, def_id).map(|hir_body| hir_body.value.span) {\n+        if fn_decl_span.ctxt() == body_span.ctxt() { fn_decl_span.to(body_span) } else { body_span }\n     } else {\n-        // This probably occurs for functions defined via macros\n-        body_span\n+        fn_decl_span\n     }\n }\n \n-fn hir_body<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> &'tcx rustc_hir::Body<'tcx> {\n+fn hir_body<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Option<&'tcx rustc_hir::Body<'tcx>> {\n     let hir_node = tcx.hir().get_if_local(def_id).expect(\"expected DefId is local\");\n-    let fn_body_id = hir::map::associated_body(hir_node).expect(\"HIR node is a function with body\");\n-    tcx.hir().body(fn_body_id)\n+    hir::map::associated_body(hir_node).map(|fn_body_id| tcx.hir().body(fn_body_id))\n }\n \n fn escape_html(s: &str) -> String {"}]}