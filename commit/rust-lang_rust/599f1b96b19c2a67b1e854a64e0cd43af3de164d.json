{"sha": "599f1b96b19c2a67b1e854a64e0cd43af3de164d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5OWYxYjk2YjE5YzJhNjdiMWU4NTRhNjRlMGNkNDNhZjNkZTE2NGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-23T03:51:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-23T03:51:54Z"}, "message": "Auto merge of #35766 - brson:bump, r=alexcrichton\n\nUpgrade bootstrap compiler to 1.12\n\nr? @alexcrichton", "tree": {"sha": "ee510c9f3483653fce5e2a3af263642995215481", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee510c9f3483653fce5e2a3af263642995215481"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/599f1b96b19c2a67b1e854a64e0cd43af3de164d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/599f1b96b19c2a67b1e854a64e0cd43af3de164d", "html_url": "https://github.com/rust-lang/rust/commit/599f1b96b19c2a67b1e854a64e0cd43af3de164d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/599f1b96b19c2a67b1e854a64e0cd43af3de164d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0da7f6af9d8547376d9497042eb3f4e6013776d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0da7f6af9d8547376d9497042eb3f4e6013776d", "html_url": "https://github.com/rust-lang/rust/commit/d0da7f6af9d8547376d9497042eb3f4e6013776d"}, {"sha": "144cc7285f44fca41fc5c336e0942acadac1019d", "url": "https://api.github.com/repos/rust-lang/rust/commits/144cc7285f44fca41fc5c336e0942acadac1019d", "html_url": "https://github.com/rust-lang/rust/commit/144cc7285f44fca41fc5c336e0942acadac1019d"}], "stats": {"total": 164, "additions": 71, "deletions": 93}, "files": [{"sha": "36b94e4ebea32d4136abc26919eb7f89f4fe0d8d", "filename": "src/bootstrap/Cargo.lock", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Fbootstrap%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Fbootstrap%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.lock?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -157,3 +157,24 @@ name = \"winapi-build\"\n version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[metadata]\n+\"checksum aho-corasick 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2b3fb52b09c1710b961acb35390d514be82e4ac96a9969a8e38565a29b878dc9\"\n+\"checksum cmake 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dfcf5bcece56ef953b8ea042509e9dcbdfe97820b7e20d86beb53df30ed94978\"\n+\"checksum filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5363ab8e4139b8568a6237db5248646e5a8a2f89bd5ccb02092182b11fd3e922\"\n+\"checksum gcc 0.3.31 (git+https://github.com/alexcrichton/gcc-rs)\" = \"<none>\"\n+\"checksum gcc 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cfe877476e53690ebb0ce7325d0bf43e198d9500291b54b3c65e518de5039b07\"\n+\"checksum getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9047cfbd08a437050b363d35ef160452c5fe8ea5187ae0a624708c91581d685\"\n+\"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n+\"checksum libc 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"55f3730be7e803cf350d32061958171731c2395831fbd67a61083782808183e0\"\n+\"checksum md5 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a5539a8dee9b4ae308c9c406a379838b435a8f2c84cf9fedc6d5a576be9888db\"\n+\"checksum memchr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d8b629fb514376c675b98c1421e80b151d3817ac42d7c667717d282761418d20\"\n+\"checksum num_cpus 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"51fedae97a05f7353612fe017ab705a37e6db8f4d67c5c6fe739a9e70d6eed09\"\n+\"checksum regex 0.1.73 (registry+https://github.com/rust-lang/crates.io-index)\" = \"56b7ee9f764ecf412c6e2fff779bca4b22980517ae335a21aeaf4e32625a5df2\"\n+\"checksum regex-syntax 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"31040aad7470ad9d8c46302dcffba337bb4289ca5da2e3cd6e37b64109a85199\"\n+\"checksum rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6159e4e6e559c81bd706afe9c8fd68f547d3e851ce12e76b1de7914bab61691b\"\n+\"checksum thread-id 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a9539db560102d1cef46b8b78ce737ff0bb64e7e18d35b2a5688f7d097d0ff03\"\n+\"checksum thread_local 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"55dd963dbaeadc08aa7266bf7f91c3154a7805e32bb94b820b769d2ef3b4744d\"\n+\"checksum toml 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fcd27a04ca509aff336ba5eb2abc58d456f52c4ff64d9724d88acb85ead560b6\"\n+\"checksum utf8-ranges 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1ca13c08c41c9c3e04224ed9ff80461d97e121589ff27c753a16cb10830ae0f\"\n+\"checksum winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4dfaaa8fbdaa618fa6914b59b2769d690dd7521920a18d84b42d254678dd5fd4\"\n+\"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\""}, {"sha": "b40dbfde4a4a5af0cd25554091f1079abf5e17ab", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -543,6 +543,10 @@ impl Build {\n              .arg(\"-j\").arg(self.jobs().to_string())\n              .arg(\"--target\").arg(target);\n \n+        // FIXME: Temporary fix for https://github.com/rust-lang/cargo/issues/3005\n+        // Force cargo to output binaries with disambiguating hashes in the name\n+        cargo.env(\"__CARGO_DEFAULT_LIB_METADATA\", \"1\");\n+\n         let stage;\n         if compiler.stage == 0 && self.local_rebuild {\n             // Assume the local-rebuild rustc already has stage1 features."}, {"sha": "9bba6cd38e5567d9611d4f84affb00e4049f653b", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 18, "deletions": 27, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -699,38 +699,29 @@ mod impls {\n \n     ord_impl! { char usize u8 u16 u32 u64 isize i8 i16 i32 i64 }\n \n-    // Note: This macro is a temporary hack that can be remove once we are building with a compiler\n-    // that supports `!`\n-    macro_rules! not_stage0 {\n-        () => {\n-            #[unstable(feature = \"never_type\", issue = \"35121\")]\n-            impl PartialEq for ! {\n-                fn eq(&self, _: &!) -> bool {\n-                    *self\n-                }\n-            }\n+    #[unstable(feature = \"never_type\", issue = \"35121\")]\n+    impl PartialEq for ! {\n+        fn eq(&self, _: &!) -> bool {\n+            *self\n+        }\n+    }\n \n-            #[unstable(feature = \"never_type\", issue = \"35121\")]\n-            impl Eq for ! {}\n+    #[unstable(feature = \"never_type\", issue = \"35121\")]\n+    impl Eq for ! {}\n \n-            #[unstable(feature = \"never_type\", issue = \"35121\")]\n-            impl PartialOrd for ! {\n-                fn partial_cmp(&self, _: &!) -> Option<Ordering> {\n-                    *self\n-                }\n-            }\n-\n-            #[unstable(feature = \"never_type\", issue = \"35121\")]\n-            impl Ord for ! {\n-                fn cmp(&self, _: &!) -> Ordering {\n-                    *self\n-                }\n-            }\n+    #[unstable(feature = \"never_type\", issue = \"35121\")]\n+    impl PartialOrd for ! {\n+        fn partial_cmp(&self, _: &!) -> Option<Ordering> {\n+            *self\n         }\n     }\n \n-    #[cfg(not(stage0))]\n-    not_stage0!();\n+    #[unstable(feature = \"never_type\", issue = \"35121\")]\n+    impl Ord for ! {\n+        fn cmp(&self, _: &!) -> Ordering {\n+            *self\n+        }\n+    }\n \n     // & pointers\n "}, {"sha": "7688da971eb1dde87c2bb8409d13a2f2030535a9", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -1363,28 +1363,19 @@ macro_rules! fmt_refs {\n \n fmt_refs! { Debug, Display, Octal, Binary, LowerHex, UpperHex, LowerExp, UpperExp }\n \n-// Note: This macro is a temporary hack that can be remove once we are building with a compiler\n-// that supports `!`\n-macro_rules! not_stage0 {\n-    () => {\n-        #[unstable(feature = \"never_type\", issue = \"35121\")]\n-        impl Debug for ! {\n-            fn fmt(&self, _: &mut Formatter) -> Result {\n-                *self\n-            }\n-        }\n-\n-        #[unstable(feature = \"never_type\", issue = \"35121\")]\n-        impl Display for ! {\n-            fn fmt(&self, _: &mut Formatter) -> Result {\n-                *self\n-            }\n-        }\n+#[unstable(feature = \"never_type\", issue = \"35121\")]\n+impl Debug for ! {\n+    fn fmt(&self, _: &mut Formatter) -> Result {\n+        *self\n     }\n }\n \n-#[cfg(not(stage0))]\n-not_stage0!();\n+#[unstable(feature = \"never_type\", issue = \"35121\")]\n+impl Display for ! {\n+    fn fmt(&self, _: &mut Formatter) -> Result {\n+        *self\n+    }\n+}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Debug for bool {"}, {"sha": "fbeddf26b939a4014dddf8e527d6d5f365bf5f5b", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -67,8 +67,6 @@\n #![deny(missing_debug_implementations)]\n #![cfg_attr(not(stage0), deny(warnings))]\n \n-#![cfg_attr(stage0, allow(unused_attributes))]\n-\n #![feature(allow_internal_unstable)]\n #![feature(asm)]\n #![feature(associated_type_defaults)]\n@@ -92,9 +90,7 @@\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n #![feature(question_mark)]\n-\n-// NOTE: remove the cfg_attr next snapshot\n-#![cfg_attr(not(stage0), feature(never_type))]\n+#![feature(never_type)]\n \n #[macro_use]\n mod macros;"}, {"sha": "bd0c2f5126d133c4965963dfb450c80bbcd314ea", "filename": "src/libpanic_unwind/gcc.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibpanic_unwind%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibpanic_unwind%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fgcc.rs?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -264,30 +264,6 @@ unsafe fn find_eh_action(context: *mut uw::_Unwind_Context) -> EHAction {\n     eh::find_eh_action(lsda, &eh_context)\n }\n \n-// *** Delete after a new snapshot ***\n-#[cfg(all(stage0, any(target_os = \"ios\", not(target_arch = \"arm\"))))]\n-#[lang = \"eh_personality_catch\"]\n-#[no_mangle]\n-pub unsafe extern \"C\" fn rust_eh_personality_catch(version: c_int,\n-                                                    actions: uw::_Unwind_Action,\n-                                                    exception_class: uw::_Unwind_Exception_Class,\n-                                                    ue_header: *mut uw::_Unwind_Exception,\n-                                                    context: *mut uw::_Unwind_Context)\n-                                                    -> uw::_Unwind_Reason_Code {\n-    rust_eh_personality(version, actions, exception_class, ue_header, context)\n-}\n-\n-// *** Delete after a new snapshot ***\n-#[cfg(all(stage0, target_arch = \"arm\", not(target_os = \"ios\")))]\n-#[lang = \"eh_personality_catch\"]\n-#[no_mangle]\n-pub unsafe extern \"C\" fn rust_eh_personality_catch(state: uw::_Unwind_State,\n-                                                    ue_header: *mut uw::_Unwind_Exception,\n-                                                    context: *mut uw::_Unwind_Context)\n-                                                    -> uw::_Unwind_Reason_Code {\n-    rust_eh_personality(state, ue_header, context)\n-}\n-\n // See docs in the `unwind` module.\n #[cfg(all(target_os=\"windows\", target_arch = \"x86\", target_env=\"gnu\"))]\n #[lang = \"eh_unwind_resume\"]"}, {"sha": "e6d3920b29cb0106da0f6e02a0ec5c09561a0929", "filename": "src/libpanic_unwind/seh64_gnu.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibpanic_unwind%2Fseh64_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Flibpanic_unwind%2Fseh64_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fseh64_gnu.rs?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -81,21 +81,6 @@ pub unsafe fn cleanup(ptr: *mut u8) -> Box<Any + Send> {\n // This is considered acceptable, because the behavior of throwing exceptions\n // through a C ABI boundary is undefined.\n \n-// *** Delete after a new snapshot ***\n-#[cfg(stage0)]\n-#[lang = \"eh_personality_catch\"]\n-#[cfg(not(test))]\n-unsafe extern \"C\" fn rust_eh_personality_catch(exceptionRecord: *mut c::EXCEPTION_RECORD,\n-                                               establisherFrame: c::LPVOID,\n-                                               contextRecord: *mut c::CONTEXT,\n-                                               dispatcherContext: *mut c::DISPATCHER_CONTEXT)\n-                                               -> c::EXCEPTION_DISPOSITION {\n-    rust_eh_personality(exceptionRecord,\n-                        establisherFrame,\n-                        contextRecord,\n-                        dispatcherContext)\n-}\n-\n #[lang = \"eh_personality\"]\n #[cfg(not(test))]\n unsafe extern \"C\" fn rust_eh_personality(exceptionRecord: *mut c::EXCEPTION_RECORD,"}, {"sha": "c0db651d7d2b46de2c8e502a828d1d62e68d6503", "filename": "src/rustc/Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Frustc%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Frustc%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.lock?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -410,3 +410,5 @@ dependencies = [\n  \"serialize 0.0.0\",\n ]\n \n+[metadata]\n+\"checksum gcc 0.3.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3da3a2cbaeb01363c8e3704fd9fd0eb2ceb17c6f27abd4c1ef040fb57d20dc79\""}, {"sha": "d47b541b4c3bc5ece7d8916d768d883d25d21bb1", "filename": "src/rustc/std_shim/Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Frustc%2Fstd_shim%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Frustc%2Fstd_shim%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fstd_shim%2FCargo.lock?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -118,3 +118,5 @@ dependencies = [\n  \"libc 0.0.0\",\n ]\n \n+[metadata]\n+\"checksum gcc 0.3.27 (registry+https://github.com/rust-lang/crates.io-index)\" = \"806e63121fbf30760b060a5fc2d1e9f47e1bd356d183e8870367c6c12cc9d5ed\""}, {"sha": "f9cf819dc9487649557a1b10888f73e5b6bea165", "filename": "src/stage0.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -12,6 +12,6 @@\n # tarball for a stable release you'll likely see `1.x.0-$date` where `1.x.0` was\n # released on `$date`\n \n-rustc: beta-2016-07-06\n-rustc_key: 411fd48b\n-cargo: nightly-2016-07-05\n+rustc: beta-2016-08-17\n+rustc_key: 195e6261\n+cargo: nightly-2016-08-21"}, {"sha": "755697806a00e579b852752221d23fd51281ca08", "filename": "src/tools/compiletest/Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Ftools%2Fcompiletest%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/599f1b96b19c2a67b1e854a64e0cd43af3de164d/src%2Ftools%2Fcompiletest%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.lock?ref=599f1b96b19c2a67b1e854a64e0cd43af3de164d", "patch": "@@ -80,3 +80,13 @@ name = \"utf8-ranges\"\n version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[metadata]\n+\"checksum aho-corasick 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"67077478f0a03952bed2e6786338d400d40c25e9836e08ad50af96607317fd03\"\n+\"checksum env_logger 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aba65b63ffcc17ffacd6cf5aa843da7c5a25e3bd4bbe0b7def8b214e411250e5\"\n+\"checksum libc 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"95ca44454e7cfe7f8a2095a41a10c79d96a177c0b1672cbf1a30d901a9c16ee5\"\n+\"checksum log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab83497bf8bf4ed2a74259c1c802351fcd67a65baa86394b6ba73c36f4838054\"\n+\"checksum memchr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d8b629fb514376c675b98c1421e80b151d3817ac42d7c667717d282761418d20\"\n+\"checksum mempool 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f997e65fe3eb7a6f8557a7a477de9ed5c511850c85363d13f7b0145b526ed36a\"\n+\"checksum regex 0.1.62 (registry+https://github.com/rust-lang/crates.io-index)\" = \"22bdab319e36735729aa280752c9293b29ec0053a6810679d697515f80a986fe\"\n+\"checksum regex-syntax 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"841591b1e05609a643e3b4d0045fce04f701daba7151ddcd3ad47b080693d5a9\"\n+\"checksum utf8-ranges 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1ca13c08c41c9c3e04224ed9ff80461d97e121589ff27c753a16cb10830ae0f\""}]}