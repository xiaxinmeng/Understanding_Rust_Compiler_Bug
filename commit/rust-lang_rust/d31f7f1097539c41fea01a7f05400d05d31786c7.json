{"sha": "d31f7f1097539c41fea01a7f05400d05d31786c7", "node_id": "C_kwDOAAsO6NoAKGQzMWY3ZjEwOTc1MzljNDFmZWEwMWE3ZjA1NDAwZDA1ZDMxNzg2Yzc", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-12-18T16:25:05Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-12-18T16:26:15Z"}, "message": "Ignore other `PredicateKind`s in rustdoc auto trait finder\n\nFixes #92073\n\nThere's not really anything we can do with them, and they're\ncausing ICEs. I'm not using a wildcard match, as we should check\nthat any new `PredicateKind`s are handled properly by rustdoc.", "tree": {"sha": "770b83d3edd367841e8006a0b1d86a83bcbd4707", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/770b83d3edd367841e8006a0b1d86a83bcbd4707"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d31f7f1097539c41fea01a7f05400d05d31786c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmG+C7AACgkQtAh+UQ6Y\nsWSNqRAAlynlniIuF4uyg+x4+yr4lv4jxtc3RIQmimjkveLV6ei1Atm2xcwdRv+B\nlukO/vdWApZd6cKT/oOxJNySITjmd1CuHCH7jDDgToZMawBE70LbpxYTfVc0IORH\n1b9wLEU1zgsR2JEyAjpx90uZhrT8OPP6zqcDyUqpry9WfiFPsS0VwI8kFbtI3FDW\n5sXn1klVwrovUsVudi+qBluWKoeD5/6Zz7dolB9xk9W9efh1S/BFHmsgzhU1NUE+\njlpn3X1cvwpHHNr0zGUfFRij06xeYah3GoNfqz47rIFj3xtYjyzkzL5ZA3BWj7fc\nu1rGZWV/yhX0QuY+GyEUF6Z+8C/b9XBNsCi2XY/nMmFU2Yk3LcHRAZ/+wkcqS7PA\nn3OmzhyBeB4wZsmyTyceL2G8mBmnVb+I0ysch2t29ryZqOoyhf4gIHcGBH1lirkB\nbQPLOhiPbWhBoxEqJXwRG/R0Jd+U2AOG/Hr6CFAbsi6Dmv9BnlO7wFdkHdnner9b\nnINjJjMehjorZl6/9nJbsQr5QgJq9yCaBKpn11lVdcm1mt/pm2CGmF5vYwE1GwQC\nhLwm13GTD8yU6ygxgQam3AHqN6jrslnwFrc9x+YEODjJNU0POZ4e5ApwxQVGg4aB\nT5Q8RCa7zYwi4JDNFLEpe65FmaVPWzbWHU5LwDgk/wJnBCX1IWY=\n=U6tK\n-----END PGP SIGNATURE-----", "payload": "tree 770b83d3edd367841e8006a0b1d86a83bcbd4707\nparent 7abab1efb21617ba6845fa86328dffa16cfcf1dc\nauthor Aaron Hill <aa1ronham@gmail.com> 1639844705 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1639844775 -0500\n\nIgnore other `PredicateKind`s in rustdoc auto trait finder\n\nFixes #92073\n\nThere's not really anything we can do with them, and they're\ncausing ICEs. I'm not using a wildcard match, as we should check\nthat any new `PredicateKind`s are handled properly by rustdoc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d31f7f1097539c41fea01a7f05400d05d31786c7", "html_url": "https://github.com/rust-lang/rust/commit/d31f7f1097539c41fea01a7f05400d05d31786c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d31f7f1097539c41fea01a7f05400d05d31786c7/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7abab1efb21617ba6845fa86328dffa16cfcf1dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7abab1efb21617ba6845fa86328dffa16cfcf1dc", "html_url": "https://github.com/rust-lang/rust/commit/7abab1efb21617ba6845fa86328dffa16cfcf1dc"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "05d2a373dc6390977b0659d2037b0d34b8450d6c", "filename": "compiler/rustc_trait_selection/src/traits/auto_trait.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d31f7f1097539c41fea01a7f05400d05d31786c7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d31f7f1097539c41fea01a7f05400d05d31786c7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs?ref=d31f7f1097539c41fea01a7f05400d05d31786c7", "patch": "@@ -839,7 +839,17 @@ impl<'tcx> AutoTraitFinder<'tcx> {\n                         _ => return false,\n                     }\n                 }\n-                _ => panic!(\"Unexpected predicate {:?} {:?}\", ty, predicate),\n+                // There's not really much we can do with these predicates -\n+                // we start out with a `ParamEnv` with no inference variables,\n+                // and these don't correspond to adding any new bounds to\n+                // the `ParamEnv`.\n+                ty::PredicateKind::WellFormed(..)\n+                | ty::PredicateKind::ObjectSafe(..)\n+                | ty::PredicateKind::ClosureKind(..)\n+                | ty::PredicateKind::Subtype(..)\n+                | ty::PredicateKind::ConstEvaluatable(..)\n+                | ty::PredicateKind::Coerce(..)\n+                | ty::PredicateKind::TypeWellFormedFromEnv(..) => {}\n             };\n         }\n         true"}]}