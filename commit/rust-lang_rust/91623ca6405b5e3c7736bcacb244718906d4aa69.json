{"sha": "91623ca6405b5e3c7736bcacb244718906d4aa69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNjIzY2E2NDA1YjVlM2M3NzM2YmNhY2IyNDQ3MTg5MDZkNGFhNjk=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-02T18:25:20Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-24T00:24:40Z"}, "message": "Add `HAS_TY_PLACEHOLDER` flag", "tree": {"sha": "0fabadc8369c325d736b5e29ebd3f10030856948", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fabadc8369c325d736b5e29ebd3f10030856948"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91623ca6405b5e3c7736bcacb244718906d4aa69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91623ca6405b5e3c7736bcacb244718906d4aa69", "html_url": "https://github.com/rust-lang/rust/commit/91623ca6405b5e3c7736bcacb244718906d4aa69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91623ca6405b5e3c7736bcacb244718906d4aa69/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da3def3ebffaefc4e8abbdba99981141ab74e4e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/da3def3ebffaefc4e8abbdba99981141ab74e4e4", "html_url": "https://github.com/rust-lang/rust/commit/da3def3ebffaefc4e8abbdba99981141ab74e4e4"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "a9c6c3b50853dbbbefcf54b4aba444c1a7e07813", "filename": "src/librustc/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=91623ca6405b5e3c7736bcacb244718906d4aa69", "patch": "@@ -409,9 +409,13 @@ impl<'cx, 'gcx, 'tcx> Canonicalizer<'cx, 'gcx, 'tcx> {\n         V: TypeFoldable<'tcx> + Lift<'gcx>,\n     {\n         let needs_canonical_flags = if canonicalize_region_mode.any() {\n-            TypeFlags::HAS_FREE_REGIONS | TypeFlags::KEEP_IN_LOCAL_TCX\n+            TypeFlags::KEEP_IN_LOCAL_TCX |\n+            TypeFlags::HAS_FREE_REGIONS | // `HAS_RE_PLACEHOLDER` implies `HAS_FREE_REGIONS`\n+            TypeFlags::HAS_TY_PLACEHOLDER\n         } else {\n-            TypeFlags::KEEP_IN_LOCAL_TCX\n+            TypeFlags::KEEP_IN_LOCAL_TCX |\n+            TypeFlags::HAS_RE_PLACEHOLDER |\n+            TypeFlags::HAS_TY_PLACEHOLDER\n         };\n \n         let gcx = tcx.global_tcx();"}, {"sha": "3b84e7b54bdf340592dfc5d45725fd430b77db9a", "filename": "src/librustc/ty/flags.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fflags.rs?ref=91623ca6405b5e3c7736bcacb244718906d4aa69", "patch": "@@ -74,7 +74,6 @@ impl FlagComputation {\n             &ty::Uint(_) |\n             &ty::Never |\n             &ty::Str |\n-            &ty::Placeholder(..) |\n             &ty::Foreign(..) => {\n             }\n \n@@ -120,6 +119,10 @@ impl FlagComputation {\n                 self.add_binder(bound_ty.index);\n             }\n \n+            &ty::Placeholder(..) => {\n+                self.add_flags(TypeFlags::HAS_TY_PLACEHOLDER);\n+            }\n+\n             &ty::Infer(infer) => {\n                 self.add_flags(TypeFlags::HAS_FREE_LOCAL_NAMES); // it might, right?\n                 self.add_flags(TypeFlags::HAS_TY_INFER);"}, {"sha": "16de146cf4e4ffda1c588c331bbd1ad3bca81f3d", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=91623ca6405b5e3c7736bcacb244718906d4aa69", "patch": "@@ -103,7 +103,7 @@ pub trait TypeFoldable<'tcx>: fmt::Debug + Clone {\n         self.has_type_flags(TypeFlags::HAS_TY_INFER | TypeFlags::HAS_RE_INFER)\n     }\n     fn has_placeholders(&self) -> bool {\n-        self.has_type_flags(TypeFlags::HAS_RE_PLACEHOLDER)\n+        self.has_type_flags(TypeFlags::HAS_RE_PLACEHOLDER | TypeFlags::HAS_TY_PLACEHOLDER)\n     }\n     fn needs_subst(&self) -> bool {\n         self.has_type_flags(TypeFlags::NEEDS_SUBST)"}, {"sha": "b371f4532e5fac560ce59551c8264a524c0a50a1", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91623ca6405b5e3c7736bcacb244718906d4aa69/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=91623ca6405b5e3c7736bcacb244718906d4aa69", "patch": "@@ -467,6 +467,8 @@ bitflags! {\n         /// if a global bound is safe to evaluate.\n         const HAS_RE_LATE_BOUND = 1 << 13;\n \n+        const HAS_TY_PLACEHOLDER = 1 << 14;\n+\n         const NEEDS_SUBST        = TypeFlags::HAS_PARAMS.bits |\n                                    TypeFlags::HAS_SELF.bits |\n                                    TypeFlags::HAS_RE_EARLY_BOUND.bits;\n@@ -486,7 +488,8 @@ bitflags! {\n                                   TypeFlags::HAS_TY_CLOSURE.bits |\n                                   TypeFlags::HAS_FREE_LOCAL_NAMES.bits |\n                                   TypeFlags::KEEP_IN_LOCAL_TCX.bits |\n-                                  TypeFlags::HAS_RE_LATE_BOUND.bits;\n+                                  TypeFlags::HAS_RE_LATE_BOUND.bits |\n+                                  TypeFlags::HAS_TY_PLACEHOLDER.bits;\n     }\n }\n "}]}