{"sha": "ccb704c73d5800048c16a836a906a12d909f962f", "node_id": "C_kwDOAAsO6NoAKGNjYjcwNGM3M2Q1ODAwMDQ4YzE2YTgzNmE5MDZhMTJkOTA5Zjk2MmY", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-04-04T23:09:49Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-04-04T23:09:49Z"}, "message": "Update panic docs to make it clearer when to use panic vs Result", "tree": {"sha": "efd8c200753f5ea7f9c593a888bad7505f963c15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efd8c200753f5ea7f9c593a888bad7505f963c15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccb704c73d5800048c16a836a906a12d909f962f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb704c73d5800048c16a836a906a12d909f962f", "html_url": "https://github.com/rust-lang/rust/commit/ccb704c73d5800048c16a836a906a12d909f962f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccb704c73d5800048c16a836a906a12d909f962f/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "297a8018b525c28ef10ee6a91d61954839b508b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/297a8018b525c28ef10ee6a91d61954839b508b9", "html_url": "https://github.com/rust-lang/rust/commit/297a8018b525c28ef10ee6a91d61954839b508b9"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "d8206e789311481c97cf8c6f3339bd02759db883", "filename": "library/core/src/macros/panic.md", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ccb704c73d5800048c16a836a906a12d909f962f/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccb704c73d5800048c16a836a906a12d909f962f/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md?ref=ccb704c73d5800048c16a836a906a12d909f962f", "patch": "@@ -1,8 +1,7 @@\n Panics the current thread.\n \n This allows a program to terminate immediately and provide feedback\n-to the caller of the program. `panic!` should be used when a program reaches\n-an unrecoverable state.\n+to the caller of the program.\n \n This macro is the perfect way to assert conditions in example code and in\n tests. `panic!` is closely tied with the `unwrap` method of both\n@@ -21,13 +20,25 @@ Inside the hook a panic can be accessed as a `&dyn Any + Send`,\n which contains either a `&str` or `String` for regular `panic!()` invocations.\n To panic with a value of another other type, [`panic_any`] can be used.\n \n-[`Result`] enum is often a better solution for recovering from errors than\n-using the `panic!` macro. This macro should be used to avoid proceeding using\n-incorrect values, such as from external sources. Detailed information about\n-error handling is found in the [book].\n-\n See also the macro [`compile_error!`], for raising errors during compilation.\n \n+# When to use `panic!` vs `Result`\n+\n+The Rust model of error handling groups errors into two major categories:\n+recoverable and unrecoverable errors. For a recoverable error, such as a file\n+not found error, it\u2019s reasonable to report the problem to the user and retry\n+the operation. Unrecoverable errors are always symptoms of bugs, like trying to\n+access a location beyond the end of an array.\n+\n+The Rust language and standard library provides `Result` and `panic!` as parts\n+of two complementary systems for representing, reporting, propagating, reacting\n+to, and discarding errors for in these two categories.\n+\n+The `panic!` macro is provided to represent unrecoverable errors, whereas the\n+`Result` enum is provided to represent recoverable errors. For more detailed\n+information about error handling check out the [book] or the [`std::result`]\n+module docs.\n+\n [ounwrap]: Option::unwrap\n [runwrap]: Result::unwrap\n [`std::panic::set_hook()`]: ../std/panic/fn.set_hook.html\n@@ -36,6 +47,7 @@ See also the macro [`compile_error!`], for raising errors during compilation.\n [`Any`]: crate::any::Any\n [`format!`]: ../std/macro.format.html\n [book]: ../book/ch09-00-error-handling.html\n+[`std::result`]: ../std/result/index.html\n \n # Current implementation\n "}]}