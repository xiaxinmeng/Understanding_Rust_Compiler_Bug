{"sha": "1cad4089ba0dc46248da2459af904e38243f294d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYWQ0MDg5YmEwZGM0NjI0OGRhMjQ1OWFmOTA0ZTM4MjQzZjI5NGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-26T04:41:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-26T04:41:10Z"}, "message": "auto merge of #16753 : luqmana/rust/typer-ty, r=nikomatsakis\n\nWe shouldn't be making calls directly to `ty::node_id_to_type` since the typer may be bcx which also has to monomorphize the type.\r\n\r\nFixes #16643.", "tree": {"sha": "e0255281376835e8bc5db2074f2aadf4308aee83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0255281376835e8bc5db2074f2aadf4308aee83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cad4089ba0dc46248da2459af904e38243f294d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cad4089ba0dc46248da2459af904e38243f294d", "html_url": "https://github.com/rust-lang/rust/commit/1cad4089ba0dc46248da2459af904e38243f294d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cad4089ba0dc46248da2459af904e38243f294d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fb2dfaa200f2cb32e77c54ae8a5e0f4823b65c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb2dfaa200f2cb32e77c54ae8a5e0f4823b65c8", "html_url": "https://github.com/rust-lang/rust/commit/5fb2dfaa200f2cb32e77c54ae8a5e0f4823b65c8"}, {"sha": "2ab4486cbb450a6d1fb6a71bdeb6372c3bcef6c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab4486cbb450a6d1fb6a71bdeb6372c3bcef6c2", "html_url": "https://github.com/rust-lang/rust/commit/2ab4486cbb450a6d1fb6a71bdeb6372c3bcef6c2"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "0b71c35d2f8873178ef6e04f9c4a35e687589e7d", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cad4089ba0dc46248da2459af904e38243f294d/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cad4089ba0dc46248da2459af904e38243f294d/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=1cad4089ba0dc46248da2459af904e38243f294d", "patch": "@@ -234,7 +234,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n                          decl: &ast::FnDecl,\n                          body: &ast::Block) {\n         for arg in decl.inputs.iter() {\n-            let arg_ty = ty::node_id_to_type(self.tcx(), arg.pat.id);\n+            let arg_ty = return_if_err!(self.typer.node_ty(arg.pat.id));\n \n             let arg_cmt = self.mc.cat_rvalue(\n                 arg.id,\n@@ -414,7 +414,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n \n                 // Fetch the type of the value that the iteration yields to\n                 // produce the pattern's categorized mutable type.\n-                let pattern_type = ty::node_id_to_type(self.tcx(), pat.id);\n+                let pattern_type = return_if_err!(self.typer.node_ty(pat.id));\n                 let pat_cmt = self.mc.cat_rvalue(pat.id,\n                                                  pat.span,\n                                                  ty::ReScope(blk.id),\n@@ -828,7 +828,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n                        pat.repr(tcx));\n \n                 // pat_ty: the type of the binding being produced.\n-                let pat_ty = ty::node_id_to_type(tcx, pat.id);\n+                let pat_ty = return_if_err!(typer.node_ty(pat.id));\n \n                 // Each match binding is effectively an assignment to the\n                 // binding being produced.\n@@ -971,7 +971,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n         // Create the cmt for the variable being borrowed, from the\n         // caller's perspective\n         let var_id = upvar_def.def_id().node;\n-        let var_ty = ty::node_id_to_type(self.tcx(), var_id);\n+        let var_ty = try!(self.typer.node_ty(var_id));\n         self.mc.cat_def(closure_id, closure_span, var_ty, upvar_def)\n     }\n }"}, {"sha": "b30ccb4dded0d02a2289e7c7d3457bc3aabfe52a", "filename": "src/test/auxiliary/issue-16643.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1cad4089ba0dc46248da2459af904e38243f294d/src%2Ftest%2Fauxiliary%2Fissue-16643.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cad4089ba0dc46248da2459af904e38243f294d/src%2Ftest%2Fauxiliary%2Fissue-16643.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-16643.rs?ref=1cad4089ba0dc46248da2459af904e38243f294d", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub struct TreeBuilder<H>;\n+\n+impl<H> TreeBuilder<H> {\n+    pub fn process_token(&mut self) {\n+        match self {\n+            _ => for _y in *self {}\n+        }\n+    }\n+}\n+\n+impl<H> Iterator<H> for TreeBuilder<H> {\n+    fn next(&mut self) -> Option<H> {\n+        None\n+    }\n+}"}, {"sha": "db877aaafcaf95fc77693b551d275e59711db1ca", "filename": "src/test/run-pass/issue-16643.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1cad4089ba0dc46248da2459af904e38243f294d/src%2Ftest%2Frun-pass%2Fissue-16643.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cad4089ba0dc46248da2459af904e38243f294d/src%2Ftest%2Frun-pass%2Fissue-16643.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16643.rs?ref=1cad4089ba0dc46248da2459af904e38243f294d", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-16643.rs\n+\n+extern crate i = \"issue-16643\";\n+\n+pub fn main() {\n+    i::TreeBuilder::<uint>.process_token();\n+}"}]}