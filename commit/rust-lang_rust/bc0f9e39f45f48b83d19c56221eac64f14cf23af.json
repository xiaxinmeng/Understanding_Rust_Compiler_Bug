{"sha": "bc0f9e39f45f48b83d19c56221eac64f14cf23af", "node_id": "C_kwDOAAsO6NoAKGJjMGY5ZTM5ZjQ1ZjQ4YjgzZDE5YzU2MjIxZWFjNjRmMTRjZjIzYWY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-11T17:17:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-11T17:17:05Z"}, "message": "Rollup merge of #100391 - nnethercote:improve-size-assertions, r=lqd\n\nImprove size assertions\n\nr? `@lqd`", "tree": {"sha": "ad339bef443bc8d7b2f82c675c21478d7fbf8ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad339bef443bc8d7b2f82c675c21478d7fbf8ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc0f9e39f45f48b83d19c56221eac64f14cf23af", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi9TmRCRBK7hj4Ov3rIwAAeQ4IAFfzwancNjK6foYDEJzMqvdu\n7ouOZbk46k2h7ZnPjcEK6du9fizCxvbwhUAGq3VvTfVXc8ic7tcXIJBCYobqjNQ0\nBEjpxHDF7dpjE8sGYNkzkRwMGK0fGLkeaGquP7DxTXsRB/dCblE47qJcxVCYw0F3\nA+C6ZmgKWznEGIHquZfD3NLTMGXAJuDVEb48BiuiSJY8HumbTT0gAvXQWKNur7pQ\n0T6ulrbXkUocTjb6rSvY1VuAxr79NfIeu8P3/cDai8w/DCzTatN7tPzInvMWW4cg\nULUbvSRdp/OZLPyiv5fqVF/oQ0GdSl8lJGkx0BzDkZWZI5Q9An2f7nWetZG35s4=\n=Ud2I\n-----END PGP SIGNATURE-----\n", "payload": "tree ad339bef443bc8d7b2f82c675c21478d7fbf8ed0\nparent 1d0954570274a4264f78eeb284f6a130c4eb5bed\nparent 0658e8cbcaa6f5d3952a0958ab7657fc8bba32d9\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1660238225 +0530\ncommitter GitHub <noreply@github.com> 1660238225 +0530\n\nRollup merge of #100391 - nnethercote:improve-size-assertions, r=lqd\n\nImprove size assertions\n\nr? `@lqd`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0f9e39f45f48b83d19c56221eac64f14cf23af", "html_url": "https://github.com/rust-lang/rust/commit/bc0f9e39f45f48b83d19c56221eac64f14cf23af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc0f9e39f45f48b83d19c56221eac64f14cf23af/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d0954570274a4264f78eeb284f6a130c4eb5bed", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d0954570274a4264f78eeb284f6a130c4eb5bed", "html_url": "https://github.com/rust-lang/rust/commit/1d0954570274a4264f78eeb284f6a130c4eb5bed"}, {"sha": "0658e8cbcaa6f5d3952a0958ab7657fc8bba32d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0658e8cbcaa6f5d3952a0958ab7657fc8bba32d9", "html_url": "https://github.com/rust-lang/rust/commit/0658e8cbcaa6f5d3952a0958ab7657fc8bba32d9"}], "stats": {"total": 108, "additions": 57, "deletions": 51}, "files": [{"sha": "2809f0b719f7ba21aa3990d0b00ce9fec010bf01", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=bc0f9e39f45f48b83d19c56221eac64f14cf23af", "patch": "@@ -3029,22 +3029,25 @@ pub type ForeignItem = Item<ForeignItemKind>;\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n mod size_asserts {\n     use super::*;\n+    use rustc_data_structures::static_assert_size;\n     // These are in alphabetical order, which is easy to maintain.\n-    rustc_data_structures::static_assert_size!(AssocItemKind, 72);\n-    rustc_data_structures::static_assert_size!(Attribute, 152);\n-    rustc_data_structures::static_assert_size!(Block, 48);\n-    rustc_data_structures::static_assert_size!(Expr, 104);\n-    rustc_data_structures::static_assert_size!(Fn, 192);\n-    rustc_data_structures::static_assert_size!(ForeignItemKind, 72);\n-    rustc_data_structures::static_assert_size!(GenericBound, 88);\n-    rustc_data_structures::static_assert_size!(Generics, 72);\n-    rustc_data_structures::static_assert_size!(Impl, 200);\n-    rustc_data_structures::static_assert_size!(Item, 200);\n-    rustc_data_structures::static_assert_size!(ItemKind, 112);\n-    rustc_data_structures::static_assert_size!(Lit, 48);\n-    rustc_data_structures::static_assert_size!(Pat, 120);\n-    rustc_data_structures::static_assert_size!(Path, 40);\n-    rustc_data_structures::static_assert_size!(PathSegment, 24);\n-    rustc_data_structures::static_assert_size!(Stmt, 32);\n-    rustc_data_structures::static_assert_size!(Ty, 96);\n+    static_assert_size!(AssocItem, 160);\n+    static_assert_size!(AssocItemKind, 72);\n+    static_assert_size!(Attribute, 152);\n+    static_assert_size!(Block, 48);\n+    static_assert_size!(Expr, 104);\n+    static_assert_size!(Fn, 192);\n+    static_assert_size!(ForeignItem, 160);\n+    static_assert_size!(ForeignItemKind, 72);\n+    static_assert_size!(GenericBound, 88);\n+    static_assert_size!(Generics, 72);\n+    static_assert_size!(Impl, 200);\n+    static_assert_size!(Item, 200);\n+    static_assert_size!(ItemKind, 112);\n+    static_assert_size!(Lit, 48);\n+    static_assert_size!(Pat, 120);\n+    static_assert_size!(Path, 40);\n+    static_assert_size!(PathSegment, 24);\n+    static_assert_size!(Stmt, 32);\n+    static_assert_size!(Ty, 96);\n }"}, {"sha": "fe80a55dfd28ce9fbd6bb9a4273c4e04ea7b2960", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=bc0f9e39f45f48b83d19c56221eac64f14cf23af", "patch": "@@ -823,9 +823,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n mod size_asserts {\n     use super::*;\n+    use rustc_data_structures::static_assert_size;\n     // These are in alphabetical order, which is easy to maintain.\n-    rustc_data_structures::static_assert_size!(Immediate, 56);\n-    rustc_data_structures::static_assert_size!(ImmTy<'_>, 72);\n-    rustc_data_structures::static_assert_size!(Operand, 64);\n-    rustc_data_structures::static_assert_size!(OpTy<'_>, 88);\n+    static_assert_size!(Immediate, 56);\n+    static_assert_size!(ImmTy<'_>, 72);\n+    static_assert_size!(Operand, 64);\n+    static_assert_size!(OpTy<'_>, 88);\n }"}, {"sha": "97fe23cb5bcf3ee5f4e7741778635645c9730227", "filename": "compiler/rustc_const_eval/src/interpret/place.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs?ref=bc0f9e39f45f48b83d19c56221eac64f14cf23af", "patch": "@@ -891,10 +891,11 @@ where\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n mod size_asserts {\n     use super::*;\n+    use rustc_data_structures::static_assert_size;\n     // These are in alphabetical order, which is easy to maintain.\n-    rustc_data_structures::static_assert_size!(MemPlaceMeta, 24);\n-    rustc_data_structures::static_assert_size!(MemPlace, 40);\n-    rustc_data_structures::static_assert_size!(MPlaceTy<'_>, 64);\n-    rustc_data_structures::static_assert_size!(Place, 48);\n-    rustc_data_structures::static_assert_size!(PlaceTy<'_>, 72);\n+    static_assert_size!(MemPlaceMeta, 24);\n+    static_assert_size!(MemPlace, 40);\n+    static_assert_size!(MPlaceTy<'_>, 64);\n+    static_assert_size!(Place, 48);\n+    static_assert_size!(PlaceTy<'_>, 72);\n }"}, {"sha": "7a87a3e4882601700eb7e5ebd1ef9272d4769d8a", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=bc0f9e39f45f48b83d19c56221eac64f14cf23af", "patch": "@@ -3491,16 +3491,16 @@ impl<'hir> Node<'hir> {\n mod size_asserts {\n     use super::*;\n     // These are in alphabetical order, which is easy to maintain.\n-    rustc_data_structures::static_assert_size!(Block<'static>, 48);\n-    rustc_data_structures::static_assert_size!(Expr<'static>, 56);\n-    rustc_data_structures::static_assert_size!(ForeignItem<'static>, 72);\n-    rustc_data_structures::static_assert_size!(GenericBound<'_>, 48);\n-    rustc_data_structures::static_assert_size!(Generics<'static>, 56);\n-    rustc_data_structures::static_assert_size!(ImplItem<'static>, 88);\n-    rustc_data_structures::static_assert_size!(Impl<'static>, 80);\n-    rustc_data_structures::static_assert_size!(Item<'static>, 80);\n-    rustc_data_structures::static_assert_size!(Pat<'static>, 88);\n-    rustc_data_structures::static_assert_size!(QPath<'static>, 24);\n-    rustc_data_structures::static_assert_size!(TraitItem<'static>, 96);\n-    rustc_data_structures::static_assert_size!(Ty<'static>, 72);\n+    static_assert_size!(Block<'static>, 48);\n+    static_assert_size!(Expr<'static>, 56);\n+    static_assert_size!(ForeignItem<'static>, 72);\n+    static_assert_size!(GenericBound<'_>, 48);\n+    static_assert_size!(Generics<'static>, 56);\n+    static_assert_size!(ImplItem<'static>, 88);\n+    static_assert_size!(Impl<'static>, 80);\n+    static_assert_size!(Item<'static>, 80);\n+    static_assert_size!(Pat<'static>, 88);\n+    static_assert_size!(QPath<'static>, 24);\n+    static_assert_size!(TraitItem<'static>, 96);\n+    static_assert_size!(Ty<'static>, 72);\n }"}, {"sha": "5e26a52900eaf404ce2e4f819ddaf64bd116f7f6", "filename": "compiler/rustc_middle/src/thir.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_middle%2Fsrc%2Fthir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0f9e39f45f48b83d19c56221eac64f14cf23af/compiler%2Frustc_middle%2Fsrc%2Fthir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fthir.rs?ref=bc0f9e39f45f48b83d19c56221eac64f14cf23af", "patch": "@@ -814,8 +814,8 @@ impl<'tcx> fmt::Display for Pat<'tcx> {\n mod size_asserts {\n     use super::*;\n     // These are in alphabetical order, which is easy to maintain.\n-    rustc_data_structures::static_assert_size!(Block, 56);\n-    rustc_data_structures::static_assert_size!(Expr<'_>, 104);\n-    rustc_data_structures::static_assert_size!(Pat<'_>, 24);\n-    rustc_data_structures::static_assert_size!(Stmt<'_>, 120);\n+    static_assert_size!(Block, 56);\n+    static_assert_size!(Expr<'_>, 104);\n+    static_assert_size!(Pat<'_>, 24);\n+    static_assert_size!(Stmt<'_>, 120);\n }"}, {"sha": "91d5758077c94fd98b7f9d1c22425af573274dab", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bc0f9e39f45f48b83d19c56221eac64f14cf23af/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0f9e39f45f48b83d19c56221eac64f14cf23af/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=bc0f9e39f45f48b83d19c56221eac64f14cf23af", "patch": "@@ -2495,14 +2495,15 @@ impl SubstParam {\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n mod size_asserts {\n     use super::*;\n+    use rustc_data_structures::static_assert_size;\n     // These are in alphabetical order, which is easy to maintain.\n-    rustc_data_structures::static_assert_size!(Crate, 72); // frequently moved by-value\n-    rustc_data_structures::static_assert_size!(DocFragment, 32);\n-    rustc_data_structures::static_assert_size!(GenericArg, 80);\n-    rustc_data_structures::static_assert_size!(GenericArgs, 32);\n-    rustc_data_structures::static_assert_size!(GenericParamDef, 56);\n-    rustc_data_structures::static_assert_size!(Item, 56);\n-    rustc_data_structures::static_assert_size!(ItemKind, 112);\n-    rustc_data_structures::static_assert_size!(PathSegment, 40);\n-    rustc_data_structures::static_assert_size!(Type, 72);\n+    static_assert_size!(Crate, 72); // frequently moved by-value\n+    static_assert_size!(DocFragment, 32);\n+    static_assert_size!(GenericArg, 80);\n+    static_assert_size!(GenericArgs, 32);\n+    static_assert_size!(GenericParamDef, 56);\n+    static_assert_size!(Item, 56);\n+    static_assert_size!(ItemKind, 112);\n+    static_assert_size!(PathSegment, 40);\n+    static_assert_size!(Type, 72);\n }"}]}