{"sha": "beb373b317dcf25a5d9e3eab121b9fbda25a88d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjM3M2IzMTdkY2YyNWE1ZDllM2VhYjEyMWI5ZmJkYTI1YTg4ZDU=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-23T16:33:53Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-25T21:40:52Z"}, "message": "`qquote-2.rs` -> `run-fail/qquote.rs`\n\nRe-enables the test.", "tree": {"sha": "4642dc04b783bcd6e0f809111a497bb513a775f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4642dc04b783bcd6e0f809111a497bb513a775f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb373b317dcf25a5d9e3eab121b9fbda25a88d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb373b317dcf25a5d9e3eab121b9fbda25a88d5", "html_url": "https://github.com/rust-lang/rust/commit/beb373b317dcf25a5d9e3eab121b9fbda25a88d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb373b317dcf25a5d9e3eab121b9fbda25a88d5/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00cb5c40a2c6f0d9ccc0ffc2986e246e431b97a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/00cb5c40a2c6f0d9ccc0ffc2986e246e431b97a5", "html_url": "https://github.com/rust-lang/rust/commit/00cb5c40a2c6f0d9ccc0ffc2986e246e431b97a5"}], "stats": {"total": 120, "additions": 57, "deletions": 63}, "files": [{"sha": "ac501d31beebdc6e7359f2f6a81b5a1d17e108ac", "filename": "src/test/parse-fail/qquote-2.rs", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/00cb5c40a2c6f0d9ccc0ffc2986e246e431b97a5/src%2Ftest%2Fparse-fail%2Fqquote-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00cb5c40a2c6f0d9ccc0ffc2986e246e431b97a5/src%2Ftest%2Fparse-fail%2Fqquote-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fqquote-2.rs?ref=00cb5c40a2c6f0d9ccc0ffc2986e246e431b97a5", "patch": "@@ -1,63 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags: -Z parse-only\n-\n-// ignore-test Can't use syntax crate here\n-\n-#![feature(quote)]\n-\n-extern crate syntax;\n-\n-use syntax::diagnostic;\n-use syntax::ast;\n-use syntax::codemap;\n-use syntax::parse::parser;\n-use syntax::print::*;\n-\n-trait fake_ext_ctxt {\n-    fn cfg() -> ast::CrateConfig;\n-    fn parse_sess() -> parse::parse_sess;\n-    fn call_site() -> span;\n-    fn ident_of(st: &str) -> ast::ident;\n-}\n-\n-type fake_session = parse::parse_sess;\n-\n-impl fake_ext_ctxt for fake_session {\n-    fn cfg() -> ast::CrateConfig { Vec::new() }\n-    fn parse_sess() -> parse::parse_sess { self }\n-    fn call_site() -> span {\n-        codemap::span {\n-            lo: codemap::BytePos(0),\n-            hi: codemap::BytePos(0),\n-            expn_id: codemap::NO_EXPANSION\n-        }\n-    }\n-    fn ident_of(st: &str) -> ast::ident {\n-        self.interner.intern(st)\n-    }\n-}\n-\n-fn mk_ctxt() -> fake_ext_ctxt {\n-    parse::new_parse_sess(None) as fake_ext_ctxt\n-}\n-\n-\n-fn main() {\n-    let cx = mk_ctxt();\n-\n-    let stmt = quote_stmt!(cx, let x isize = 20;); //~ ERROR expected end-of-string\n-    check_pp(*stmt,  pprust::print_stmt, \"\");\n-}\n-\n-fn check_pp<T>(expr: T, f: |pprust::ps, T|, expect: str) {\n-    panic!();\n-}"}, {"sha": "fe582bc9bf780691a28e8aa9ff090a5389ea77ac", "filename": "src/test/run-fail/qquote.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/beb373b317dcf25a5d9e3eab121b9fbda25a88d5/src%2Ftest%2Frun-fail%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb373b317dcf25a5d9e3eab121b9fbda25a88d5/src%2Ftest%2Frun-fail%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fqquote.rs?ref=beb373b317dcf25a5d9e3eab121b9fbda25a88d5", "patch": "@@ -0,0 +1,57 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-cross-compile\n+\n+// error-pattern:expected identifier, found keyword `let`\n+\n+#![feature(quote, rustc_private)]\n+\n+extern crate syntax;\n+\n+use syntax::ast;\n+use syntax::codemap;\n+use syntax::parse;\n+use syntax::print::pprust;\n+\n+trait FakeExtCtxt {\n+    fn call_site(&self) -> codemap::Span;\n+    fn cfg(&self) -> ast::CrateConfig;\n+    fn ident_of(&self, st: &str) -> ast::Ident;\n+    fn name_of(&self, st: &str) -> ast::Name;\n+    fn parse_sess(&self) -> &parse::ParseSess;\n+}\n+\n+impl FakeExtCtxt for parse::ParseSess {\n+    fn call_site(&self) -> codemap::Span {\n+        codemap::Span {\n+            lo: codemap::BytePos(0),\n+            hi: codemap::BytePos(0),\n+            expn_id: codemap::NO_EXPANSION,\n+        }\n+    }\n+    fn cfg(&self) -> ast::CrateConfig { Vec::new() }\n+    fn ident_of(&self, st: &str) -> ast::Ident {\n+        parse::token::str_to_ident(st)\n+    }\n+    fn name_of(&self, st: &str) -> ast::Name {\n+        parse::token::intern(st)\n+    }\n+    fn parse_sess(&self) -> &parse::ParseSess { self }\n+}\n+\n+fn main() {\n+    let cx = parse::new_parse_sess();\n+\n+    assert_eq!(pprust::expr_to_string(&*quote_expr!(&cx, 23)), \"23\");\n+\n+    let expr = quote_expr!(&cx, let x isize = 20;);\n+    assert_eq!(pprust::expr_to_string(&*expr), \"let x isize = 20;\");\n+}"}]}