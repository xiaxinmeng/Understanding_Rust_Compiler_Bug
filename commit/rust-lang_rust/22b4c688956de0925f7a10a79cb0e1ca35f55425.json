{"sha": "22b4c688956de0925f7a10a79cb0e1ca35f55425", "node_id": "C_kwDOAAsO6NoAKDIyYjRjNjg4OTU2ZGUwOTI1ZjdhMTBhNzljYjBlMWNhMzVmNTU0MjU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-12T07:28:43Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-12T07:28:43Z"}, "message": "Make `// SAFETY` comment part of the doctest, and not surrounding code", "tree": {"sha": "af1aec2ead61ac1ea302b73f82bc3e119ae85051", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af1aec2ead61ac1ea302b73f82bc3e119ae85051"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22b4c688956de0925f7a10a79cb0e1ca35f55425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22b4c688956de0925f7a10a79cb0e1ca35f55425", "html_url": "https://github.com/rust-lang/rust/commit/22b4c688956de0925f7a10a79cb0e1ca35f55425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22b4c688956de0925f7a10a79cb0e1ca35f55425/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a63bc2dd5a092ef5384c11f77c8d16d4b9fcc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a63bc2dd5a092ef5384c11f77c8d16d4b9fcc1", "html_url": "https://github.com/rust-lang/rust/commit/f1a63bc2dd5a092ef5384c11f77c8d16d4b9fcc1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "14367eb09bc75e0e00c13ec9a4025638df8630f0", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22b4c688956de0925f7a10a79cb0e1ca35f55425/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b4c688956de0925f7a10a79cb0e1ca35f55425/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=22b4c688956de0925f7a10a79cb0e1ca35f55425", "patch": "@@ -2716,7 +2716,7 @@ macro_rules! atomic_int {\n             ///\n             #[doc = concat!(\"let atomic = \", stringify!($atomic_type), \"::new(1);\")]\n             ///\n-            // SAFETY: Safe as long as `my_atomic_op` is atomic.\n+            /// // SAFETY: Safe as long as `my_atomic_op` is atomic.\n             /// unsafe {\n             ///     my_atomic_op(atomic.as_mut_ptr());\n             /// }"}]}