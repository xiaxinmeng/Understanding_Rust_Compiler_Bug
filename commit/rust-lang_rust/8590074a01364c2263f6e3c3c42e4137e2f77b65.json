{"sha": "8590074a01364c2263f6e3c3c42e4137e2f77b65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1OTAwNzRhMDEzNjRjMjI2M2Y2ZTNjM2M0MmU0MTM3ZTJmNzdiNjU=", "commit": {"author": {"name": "Adrian Friedli", "email": "adi@koalatux.ch", "date": "2019-06-09T20:45:11Z"}, "committer": {"name": "Adrian Friedli", "email": "adi@koalatux.ch", "date": "2019-06-09T20:45:11Z"}, "message": "implement nth_back for RangeInclusive", "tree": {"sha": "7c078f9978a506519652ad19bdbeebdfb4b117d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c078f9978a506519652ad19bdbeebdfb4b117d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8590074a01364c2263f6e3c3c42e4137e2f77b65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEGnYr8qNFpHvEa2L+ckiDAaWCRHcFAlz9b+EACgkQckiDAaWC\nRHfagA/+O3cAfTQozVJthZ7i4KYTKrq8UdFACj/Y+E4ZKX02rhOXg6aIwteBKFvl\nm94laq2dwCsNPz+c/eYtB5YWRNNnD7nPKmYHTH1CX8a+qHA3tM9HAWrdFeaE/BFF\nfMJE8wZczdmrBMvtGLL7igzCBl+ndvTIFTXALubWfganV4ydIDo4o0gK5bgv5Ew1\nRhJM+vfMWM/IWhwSAM66wytoNHUYJlJRWnxly+K5HROf2wl0XdH4XCrCDN0Me70c\neX1UWvR/uCNz+PUf7iyRQ5hpj7GfqSoJs4bNeGMIphJ6qNCO+SQt04sGpCGf+/Gw\nuYL4sY7yJb+Mnr9850P3y+8LLK1yktV6SrIJlwUxlAswOXN4yyiiESWoUiJX9XGd\nfcSH9ag2Mgahi8Zfp0R/tR149mUms9tXvjyZh0yX3p2LJyo8fCNI2/nmCTN5AJkh\nV7Jvf5WzV8jST2JgL1l9L+VHAsiU4LJdsim+TodS3ne0o1gdKA0Unv17tz6E4H9b\nq/XsSeZIc0WIuoSkXczQ+gDBEI7Zra2z9k/y3JOLCbnVOKUiDgJ/cnRPkzBUjAPO\n6lwHY+sioiamzqTa+avADU0lKEIithSE9z3kCtWG8LEERNjU7buLuIHPSTgTudWo\nwUdH54SRfalZmmxCEAMXj8exHE6rzNMKQaCup79kvuwzfxgwvAA=\n=AbWl\n-----END PGP SIGNATURE-----", "payload": "tree 7c078f9978a506519652ad19bdbeebdfb4b117d6\nparent 26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c\nauthor Adrian Friedli <adi@koalatux.ch> 1560113111 +0200\ncommitter Adrian Friedli <adi@koalatux.ch> 1560113111 +0200\n\nimplement nth_back for RangeInclusive\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8590074a01364c2263f6e3c3c42e4137e2f77b65", "html_url": "https://github.com/rust-lang/rust/commit/8590074a01364c2263f6e3c3c42e4137e2f77b65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8590074a01364c2263f6e3c3c42e4137e2f77b65/comments", "author": {"login": "koalatux", "id": 973758, "node_id": "MDQ6VXNlcjk3Mzc1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/973758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koalatux", "html_url": "https://github.com/koalatux", "followers_url": "https://api.github.com/users/koalatux/followers", "following_url": "https://api.github.com/users/koalatux/following{/other_user}", "gists_url": "https://api.github.com/users/koalatux/gists{/gist_id}", "starred_url": "https://api.github.com/users/koalatux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koalatux/subscriptions", "organizations_url": "https://api.github.com/users/koalatux/orgs", "repos_url": "https://api.github.com/users/koalatux/repos", "events_url": "https://api.github.com/users/koalatux/events{/privacy}", "received_events_url": "https://api.github.com/users/koalatux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koalatux", "id": 973758, "node_id": "MDQ6VXNlcjk3Mzc1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/973758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koalatux", "html_url": "https://github.com/koalatux", "followers_url": "https://api.github.com/users/koalatux/followers", "following_url": "https://api.github.com/users/koalatux/following{/other_user}", "gists_url": "https://api.github.com/users/koalatux/gists{/gist_id}", "starred_url": "https://api.github.com/users/koalatux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koalatux/subscriptions", "organizations_url": "https://api.github.com/users/koalatux/orgs", "repos_url": "https://api.github.com/users/koalatux/repos", "events_url": "https://api.github.com/users/koalatux/events{/privacy}", "received_events_url": "https://api.github.com/users/koalatux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "html_url": "https://github.com/rust-lang/rust/commit/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "efda3b263cc97fae94f08fb2dda1522424763779", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8590074a01364c2263f6e3c3c42e4137e2f77b65/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8590074a01364c2263f6e3c3c42e4137e2f77b65/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=8590074a01364c2263f6e3c3c42e4137e2f77b65", "patch": "@@ -451,6 +451,34 @@ impl<A: Step> DoubleEndedIterator for ops::RangeInclusive<A> {\n         })\n     }\n \n+    #[inline]\n+    fn nth_back(&mut self, n: usize) -> Option<A> {\n+        self.compute_is_empty();\n+        if self.is_empty.unwrap_or_default() {\n+            return None;\n+        }\n+\n+        if let Some(minus_n) = self.end.sub_usize(n) {\n+            use crate::cmp::Ordering::*;\n+\n+            match minus_n.partial_cmp(&self.start) {\n+                Some(Greater) => {\n+                    self.is_empty = Some(false);\n+                    self.end = minus_n.sub_one();\n+                    return Some(minus_n);\n+                }\n+                Some(Equal) => {\n+                    self.is_empty = Some(true);\n+                    return Some(minus_n);\n+                }\n+                _ => {}\n+            }\n+        }\n+\n+        self.is_empty = Some(true);\n+        None\n+    }\n+\n     #[inline]\n     fn try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R where\n         Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>"}, {"sha": "020618ae7aeedb04a7898b3bed2ad28ebb6d41c4", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8590074a01364c2263f6e3c3c42e4137e2f77b65/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8590074a01364c2263f6e3c3c42e4137e2f77b65/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=8590074a01364c2263f6e3c3c42e4137e2f77b65", "patch": "@@ -1731,6 +1731,26 @@ fn test_range_inclusive_nth() {\n     assert_eq!(ExactSizeIterator::is_empty(&r), true);\n }\n \n+#[test]\n+fn test_range_inclusive_nth_back() {\n+    assert_eq!((10..=15).nth_back(0), Some(15));\n+    assert_eq!((10..=15).nth_back(1), Some(14));\n+    assert_eq!((10..=15).nth_back(5), Some(10));\n+    assert_eq!((10..=15).nth_back(6), None);\n+    assert_eq!((-120..=80_i8).nth_back(200), Some(-120));\n+\n+    let mut r = 10_u8..=20;\n+    assert_eq!(r.nth_back(2), Some(18));\n+    assert_eq!(r, 10..=17);\n+    assert_eq!(r.nth_back(2), Some(15));\n+    assert_eq!(r, 10..=14);\n+    assert_eq!(r.is_empty(), false);\n+    assert_eq!(ExactSizeIterator::is_empty(&r), false);\n+    assert_eq!(r.nth_back(10), None);\n+    assert_eq!(r.is_empty(), true);\n+    assert_eq!(ExactSizeIterator::is_empty(&r), true);\n+}\n+\n #[test]\n fn test_range_step() {\n     #![allow(deprecated)]"}]}