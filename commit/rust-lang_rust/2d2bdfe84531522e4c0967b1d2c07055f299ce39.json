{"sha": "2d2bdfe84531522e4c0967b1d2c07055f299ce39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMmJkZmU4NDUzMTUyMmU0YzA5NjdiMWQyYzA3MDU1ZjI5OWNlMzk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-20T02:58:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-20T02:59:02Z"}, "message": "rustdoc: Write markdown for function signatures", "tree": {"sha": "09c83da7447830c16d97f4f45fc8a7912e3b9931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09c83da7447830c16d97f4f45fc8a7912e3b9931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d2bdfe84531522e4c0967b1d2c07055f299ce39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d2bdfe84531522e4c0967b1d2c07055f299ce39", "html_url": "https://github.com/rust-lang/rust/commit/2d2bdfe84531522e4c0967b1d2c07055f299ce39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d2bdfe84531522e4c0967b1d2c07055f299ce39/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1fe5820407fdf381a335971da1bbca123536112", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1fe5820407fdf381a335971da1bbca123536112", "html_url": "https://github.com/rust-lang/rust/commit/d1fe5820407fdf381a335971da1bbca123536112"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "6d4cabba0d4f165e5dd5bdbe130a75233bc25939", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2d2bdfe84531522e4c0967b1d2c07055f299ce39/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d2bdfe84531522e4c0967b1d2c07055f299ce39/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=2d2bdfe84531522e4c0967b1d2c07055f299ce39", "patch": "@@ -129,13 +129,11 @@ fn fold_fn(\n         attrs: attr_parser::fn_attrs\n     ) -> doc::fndoc {\n         ret ~{\n-            id: doc.id,\n-            name: doc.name,\n             brief: attrs.brief,\n             desc: attrs.desc,\n             args: merge_arg_attrs(doc.args, attrs.args),\n-            return: merge_ret_attrs(doc.return, attrs.return),\n-            sig: none\n+            return: merge_ret_attrs(doc.return, attrs.return)\n+            with *doc\n         };\n     }\n \n@@ -207,4 +205,15 @@ fn fold_fn_should_extract_return_attributes() {\n     let fold = fold::default_seq_fold(srv);\n     let doc = fold_fn(fold, doc.topmod.fns[0]);\n     assert option::get(doc.return).desc == some(\"what\");\n+}\n+\n+#[test]\n+fn fold_fn_should_preserve_sig() {\n+    let source = \"fn a() -> int { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = tystr_pass::mk_pass()(srv, doc);\n+    let fold = fold::default_seq_fold(srv);\n+    let doc = fold_fn(fold, doc.topmod.fns[0]);\n+    assert doc.sig == some(\"fn a() -> int\");\n }\n\\ No newline at end of file"}, {"sha": "b365de6e6f55444959064062328479295c41fe36", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/2d2bdfe84531522e4c0967b1d2c07055f299ce39/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d2bdfe84531522e4c0967b1d2c07055f299ce39/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=2d2bdfe84531522e4c0967b1d2c07055f299ce39", "patch": "@@ -107,12 +107,37 @@ fn write_fn(\n     doc: doc::fndoc\n ) {\n     write_header(ctxt, h3, #fmt(\"Function `%s`\", doc.name));\n+    write_sig(ctxt, doc.sig);\n     write_brief(ctxt, doc.brief);\n     write_desc(ctxt, doc.desc);\n     write_args(ctxt, doc.args);\n     write_return(ctxt, doc.return);\n }\n \n+fn write_sig(ctxt: ctxt, sig: option<str>) {\n+    alt sig {\n+      some(sig) {\n+        ctxt.w.write_line(\"```\");\n+        ctxt.w.write_line(#fmt(\"%s\", sig));\n+        ctxt.w.write_line(\"```\");\n+        ctxt.w.write_line(\"\");\n+      }\n+      none { fail \"unimplemented\" }\n+    }\n+}\n+\n+#[test]\n+fn should_write_the_function_signature() {\n+    let markdown = test::render(\"#[doc = \\\"f\\\"] fn a() { }\");\n+    assert str::contains(markdown, \"```\\nfn a()\\n```\");\n+}\n+\n+#[test]\n+fn should_insert_blank_line_after_fn_signature() {\n+    let markdown = test::render(\"#[doc = \\\"f\\\"] fn a() { }\");\n+    assert str::contains(markdown, \"fn a()\\n```\\n\\n\");\n+}\n+\n fn write_brief(\n     ctxt: ctxt,\n     brief: option<str>\n@@ -254,9 +279,13 @@ mod test {\n     fn render(source: str) -> str {\n         let srv = astsrv::mk_srv_from_str(source);\n         let doc = extract::from_srv(srv, \"\");\n+        #debug(\"doc (extract): %?\", doc);\n         let doc = tystr_pass::mk_pass()(srv, doc);\n+        #debug(\"doc (tystr): %?\", doc);\n         let doc = path_pass::mk_pass()(srv, doc);\n+        #debug(\"doc (path): %?\", doc);\n         let doc = attr_pass::mk_pass()(srv, doc);\n+        #debug(\"doc (attr): %?\", doc);\n         let markdown = write_markdown_str(doc);\n         #debug(\"markdown: %s\", markdown);\n         markdown\n@@ -299,9 +328,9 @@ mod test {\n     }\n \n     #[test]\n-    fn should_leave_blank_line_between_fn_header_and_brief() {\n+    fn should_leave_blank_line_between_fn_header_and_sig() {\n         let markdown = render(\"#[doc(brief = \\\"brief\\\")] fn a() { }\");\n-        assert str::contains(markdown, \"Function `a`\\n\\nbrief\");\n+        assert str::contains(markdown, \"Function `a`\\n\\n```\\nfn a()\");\n     }\n \n     #[test]"}]}