{"sha": "49516b3f5705c201a915c1b0c690d0f112da6c6a", "node_id": "C_kwDOAAsO6NoAKDQ5NTE2YjNmNTcwNWMyMDFhOTE1YzFiMGM2OTBkMGYxMTJkYTZjNmE", "commit": {"author": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2023-02-23T18:35:41Z"}, "committer": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2023-02-23T18:35:41Z"}, "message": "support `x fmt` for sub and outside of rust directories\n\nSigned-off-by: ozkanonur <work@onurozkan.dev>", "tree": {"sha": "a6f90c2e9cabff7a826f2f3e3171839292c246b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6f90c2e9cabff7a826f2f3e3171839292c246b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49516b3f5705c201a915c1b0c690d0f112da6c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49516b3f5705c201a915c1b0c690d0f112da6c6a", "html_url": "https://github.com/rust-lang/rust/commit/49516b3f5705c201a915c1b0c690d0f112da6c6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49516b3f5705c201a915c1b0c690d0f112da6c6a/comments", "author": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea218392a4ce119c4dfcd8fb94a7fee77f76f2c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea218392a4ce119c4dfcd8fb94a7fee77f76f2c5", "html_url": "https://github.com/rust-lang/rust/commit/ea218392a4ce119c4dfcd8fb94a7fee77f76f2c5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ae72a42973cd143af82f0d7158499b00e950bf97", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49516b3f5705c201a915c1b0c690d0f112da6c6a/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49516b3f5705c201a915c1b0c690d0f112da6c6a/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=49516b3f5705c201a915c1b0c690d0f112da6c6a", "patch": "@@ -218,7 +218,7 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n                     WalkBuilder::new(first)\n                 }\n             } else {\n-                WalkBuilder::new(first)\n+                WalkBuilder::new(src.join(first))\n             };\n \n             for path in &paths[1..] {\n@@ -229,7 +229,7 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n                         walker.add(path);\n                     }\n                 } else {\n-                    walker.add(path);\n+                    walker.add(src.join(path));\n                 }\n             }\n "}]}