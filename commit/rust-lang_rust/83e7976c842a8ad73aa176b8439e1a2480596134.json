{"sha": "83e7976c842a8ad73aa176b8439e1a2480596134", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZTc5NzZjODQyYThhZDczYWExNzZiODQzOWUxYTI0ODA1OTYxMzQ=", "commit": {"author": {"name": "Baoshan", "email": "pangbw@gmail.com", "date": "2019-09-11T00:53:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-11T00:53:54Z"}, "message": "Merge pull request #20 from Wind-River/rand\n\nuse randSecure and randABytes", "tree": {"sha": "e43bff810f818bc89e8e0b6326107690efacaf3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e43bff810f818bc89e8e0b6326107690efacaf3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83e7976c842a8ad73aa176b8439e1a2480596134", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdeEWiCRBK7hj4Ov3rIwAAdHIIAGEQt1VLZYqRtYE9JNpVetTb\nmZu4KttDr5QmekANflIyoWCzYf9g5HmzMpPS2YhoqeFzVxzHnrizqyJlyhuDAP5A\nCSnQG+UdG5jTF9CKub/MiGtAgcyz/o2m1nn5gb6FTamFe9gtwMhntN380Xvap/TG\n8UtgUNnSQieyFLqdOeN5R++70v5zmPStzJKmWIcpPnFYyzbKPgEb7+Y/D2Le8VHl\nDnnYmp30uBo/zUgT2NgqBZZulT8wqWI9pwhGGi6xEsjul2rm2ptuWYOsMVf5NW5K\nKyxfzKpf/5NnxYGgmz5omW2Xa+Qe7mzmRiit7PODSnXZlFt304cAlhkajWbAclw=\n=/31H\n-----END PGP SIGNATURE-----\n", "payload": "tree e43bff810f818bc89e8e0b6326107690efacaf3b\nparent 414d1047291348b5b8bf49e1d76fec978238d89f\nparent 5287885481c018eeef3ee815f9ceab4b4106d5a2\nauthor Baoshan <pangbw@gmail.com> 1568163234 -0700\ncommitter GitHub <noreply@github.com> 1568163234 -0700\n\nMerge pull request #20 from Wind-River/rand\n\nuse randSecure and randABytes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83e7976c842a8ad73aa176b8439e1a2480596134", "html_url": "https://github.com/rust-lang/rust/commit/83e7976c842a8ad73aa176b8439e1a2480596134", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83e7976c842a8ad73aa176b8439e1a2480596134/comments", "author": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "414d1047291348b5b8bf49e1d76fec978238d89f", "url": "https://api.github.com/repos/rust-lang/rust/commits/414d1047291348b5b8bf49e1d76fec978238d89f", "html_url": "https://github.com/rust-lang/rust/commit/414d1047291348b5b8bf49e1d76fec978238d89f"}, {"sha": "5287885481c018eeef3ee815f9ceab4b4106d5a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5287885481c018eeef3ee815f9ceab4b4106d5a2", "html_url": "https://github.com/rust-lang/rust/commit/5287885481c018eeef3ee815f9ceab4b4106d5a2"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "c22880db2bf032cae9cdf6a9beb9d8540f3afa98", "filename": "src/libstd/sys/vxworks/rand.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/83e7976c842a8ad73aa176b8439e1a2480596134/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e7976c842a8ad73aa176b8439e1a2480596134/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs?ref=83e7976c842a8ad73aa176b8439e1a2480596134", "patch": "@@ -14,17 +14,24 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n mod imp {\n     use libc;\n     use crate::io;\n-\n-    extern \"C\" {\n-        fn randBytes (randBuf: *mut libc::c_uchar,\n-                      numOfBytes: libc::c_int) -> libc::c_int;\n-    }\n+    use core::sync::atomic::{AtomicBool, Ordering::Relaxed};\n \n     pub fn fill_bytes(v: &mut [u8]) {\n+        static RNG_INIT: AtomicBool = AtomicBool::new(false);\n+        while !RNG_INIT.load(Relaxed) {\n+            let ret = unsafe { libc::randSecure() };\n+            if ret < 0 {\n+                panic!(\"couldn't generate random bytes: {}\", io::Error::last_os_error());\n+            } else if ret > 0 {\n+                RNG_INIT.store(true, Relaxed);\n+                break;\n+            }\n+            unsafe { libc::usleep(10) };\n+        }\n         let ret = unsafe {\n-            randBytes(v.as_mut_ptr() as *mut libc::c_uchar, v.len() as libc::c_int)\n+            libc::randABytes(v.as_mut_ptr() as *mut libc::c_uchar, v.len() as libc::c_int)\n         };\n-        if ret == -1 {\n+        if ret < 0 {\n             panic!(\"couldn't generate random bytes: {}\", io::Error::last_os_error());\n         }\n     }"}]}