{"sha": "fb592d76aa24e8fe74694038c283f56ea83ab568", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNTkyZDc2YWEyNGU4ZmU3NDY5NDAzOGMyODNmNTZlYTgzYWI1Njg=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T06:28:50Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T22:05:07Z"}, "message": "Fix clippy::into_iter_on_ref", "tree": {"sha": "414c1366892c61cc42812c1697726308ac1f25a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/414c1366892c61cc42812c1697726308ac1f25a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb592d76aa24e8fe74694038c283f56ea83ab568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb592d76aa24e8fe74694038c283f56ea83ab568", "html_url": "https://github.com/rust-lang/rust/commit/fb592d76aa24e8fe74694038c283f56ea83ab568", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb592d76aa24e8fe74694038c283f56ea83ab568/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "619a61529878f82daf7aed571bc4f6a10bd6dd9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/619a61529878f82daf7aed571bc4f6a10bd6dd9f", "html_url": "https://github.com/rust-lang/rust/commit/619a61529878f82daf7aed571bc4f6a10bd6dd9f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "592f558f25de3ae95edc5838d1f90248baee9cf9", "filename": "crates/ra_hir/src/expr/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb592d76aa24e8fe74694038c283f56ea83ab568/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb592d76aa24e8fe74694038c283f56ea83ab568/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs?ref=fb592d76aa24e8fe74694038c283f56ea83ab568", "patch": "@@ -57,7 +57,7 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n             _ => return,\n         };\n \n-        let lit_fields: FxHashSet<_> = fields.into_iter().map(|f| &f.name).collect();\n+        let lit_fields: FxHashSet<_> = fields.iter().map(|f| &f.name).collect();\n         let missed_fields: Vec<Name> = struct_def\n             .fields(db)\n             .iter()"}, {"sha": "58cfcd8a24cf1558db4f6f583f4da1694f2e0da6", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb592d76aa24e8fe74694038c283f56ea83ab568/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb592d76aa24e8fe74694038c283f56ea83ab568/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=fb592d76aa24e8fe74694038c283f56ea83ab568", "patch": "@@ -1044,7 +1044,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n             Expr::StructLit { path, fields, spread } => {\n                 let (ty, def_id) = self.resolve_variant(path.as_ref());\n                 let substs = ty.substs().unwrap_or_else(Substs::empty);\n-                for (field_idx, field) in fields.into_iter().enumerate() {\n+                for (field_idx, field) in fields.iter().enumerate() {\n                     let field_ty = def_id\n                         .and_then(|it| match it.field(self.db, &field.name) {\n                             Some(field) => Some(field),"}, {"sha": "4400ff2323e5455699f85fd0ad1fd23873f73659", "filename": "crates/ra_ide_api/src/folding_ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb592d76aa24e8fe74694038c283f56ea83ab568/crates%2Fra_ide_api%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb592d76aa24e8fe74694038c283f56ea83ab568/crates%2Fra_ide_api%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Ffolding_ranges.rs?ref=fb592d76aa24e8fe74694038c283f56ea83ab568", "patch": "@@ -205,7 +205,7 @@ mod tests {\n             \"The amount of fold kinds is different than the expected amount\"\n         );\n         for ((fold, range), fold_kind) in\n-            folds.into_iter().zip(ranges.into_iter()).zip(fold_kinds.into_iter())\n+            folds.iter().zip(ranges.into_iter()).zip(fold_kinds.iter())\n         {\n             assert_eq!(fold.range.start(), range.start());\n             assert_eq!(fold.range.end(), range.end());"}]}