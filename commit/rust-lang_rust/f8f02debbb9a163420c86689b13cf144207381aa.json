{"sha": "f8f02debbb9a163420c86689b13cf144207381aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZjAyZGViYmI5YTE2MzQyMGM4NjY4OWIxM2NmMTQ0MjA3MzgxYWE=", "commit": {"author": {"name": "Jim Blandy", "email": "jimb@red-bean.com", "date": "2019-04-20T02:25:40Z"}, "committer": {"name": "Jim Blandy", "email": "jimb@red-bean.com", "date": "2019-04-20T02:25:40Z"}, "message": "core::future::Future: Fix markup typo in docs.", "tree": {"sha": "027355a03950b156006fc4d6528d8c3d441a1f07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/027355a03950b156006fc4d6528d8c3d441a1f07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8f02debbb9a163420c86689b13cf144207381aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f02debbb9a163420c86689b13cf144207381aa", "html_url": "https://github.com/rust-lang/rust/commit/f8f02debbb9a163420c86689b13cf144207381aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8f02debbb9a163420c86689b13cf144207381aa/comments", "author": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b84e9a8bae8a8b68e1da88c08f06b4b56b5c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b84e9a8bae8a8b68e1da88c08f06b4b56b5c0f", "html_url": "https://github.com/rust-lang/rust/commit/d0b84e9a8bae8a8b68e1da88c08f06b4b56b5c0f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e1ab67873a025ef241555c27194673617c3bed5b", "filename": "src/libcore/future/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8f02debbb9a163420c86689b13cf144207381aa/src%2Flibcore%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8f02debbb9a163420c86689b13cf144207381aa/src%2Flibcore%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture%2Ffuture.rs?ref=f8f02debbb9a163420c86689b13cf144207381aa", "patch": "@@ -49,7 +49,7 @@ pub trait Future {\n     /// For example, a future waiting for a socket to become\n     /// readable would call `.clone()` on the [`Waker`] and store it.\n     /// When a signal arrives elsewhere indicating that the socket is readable,\n-    /// `[Waker::wake]` is called and the socket future's task is awoken.\n+    /// [`Waker::wake`] is called and the socket future's task is awoken.\n     /// Once a task has been woken up, it should attempt to `poll` the future\n     /// again, which may or may not produce a final value.\n     ///"}]}