{"sha": "ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlODkzYmI5YWJhMjdhOGRkMDljZjdlZTVmZmY1Y2M2OWM4ZDJhY2Y=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-12-12T22:42:00Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-12-12T22:53:08Z"}, "message": "Add short emoji status to toolstate updates", "tree": {"sha": "92b941d61942564f50ea281216d155e5a1a78265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92b941d61942564f50ea281216d155e5a1a78265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf", "html_url": "https://github.com/rust-lang/rust/commit/ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd8fc7dc06dea00afbd365468cf4804f68a3531c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd8fc7dc06dea00afbd365468cf4804f68a3531c", "html_url": "https://github.com/rust-lang/rust/commit/dd8fc7dc06dea00afbd365468cf4804f68a3531c"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "a65d263d2e3a3e3a7f5507a7fcd8e13c43234e14", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=ae893bb9aba27a8dd09cf7ee5fff5cc69c8d2acf", "patch": "@@ -34,6 +34,16 @@\n     'rust-by-example': '@steveklabnik @marioidival @projektir',\n }\n \n+EMOJI = {\n+    'miri': '\ud83d\udef0\ufe0f',\n+    'clippy-driver': '\ud83d\udcce',\n+    'rls': '\ud83d\udcbb',\n+    'rustfmt': '\ud83d\udcdd',\n+    'book': '\ud83d\udcd6',\n+    'nomicon': '\ud83d\udc7f',\n+    'reference': '\ud83d\udcda',\n+    'rust-by-example': '\ud83d\udc69\u200d\ud83c\udfeb',\n+}\n \n def read_current_status(current_commit, path):\n     '''Reads build status of `current_commit` from content of `history/*.tsv`\n@@ -63,13 +73,12 @@ def update_latest(\n         }\n \n         slug = 'rust-lang/rust'\n-        message = textwrap.dedent('''\\\n-            \ud83d\udce3 Toolstate changed by {}!\n-\n+        long_message = textwrap.dedent('''\\\n             Tested on commit {}@{}.\n             Direct link to PR: <{}>\n \n-        ''').format(relevant_pr_number, slug, current_commit, relevant_pr_url)\n+        ''').format(slug, current_commit, relevant_pr_url)\n+        emoji_status = []\n         anything_changed = False\n         for status in latest:\n             tool = status['tool']\n@@ -81,12 +90,18 @@ def update_latest(\n                 status[os] = new\n                 if new > old:\n                     changed = True\n-                    message += '\ud83c\udf89 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n-                        .format(tool, os, old, new, MAINTAINERS.get(tool))\n+                    long_message += '\ud83c\udf89 {} on {}: {} \u2192 {}.\\n' \\\n+                        .format(tool, os, old, new)\n+                    emoji = \"{}\ud83c\udf89\".format(EMOJI.get(tool))\n+                    if msg not in emoji_status:\n+                        emoji_status += [msg]\n                 elif new < old:\n                     changed = True\n-                    message += '\ud83d\udc94 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n+                    long_message += '\ud83d\udc94 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n                         .format(tool, os, old, new, MAINTAINERS.get(tool))\n+                    emoji = \"{}\ud83d\udc94\".format(EMOJI.get(tool))\n+                    if msg not in emoji_status:\n+                        emoji_status += [msg]\n \n             if changed:\n                 status['commit'] = current_commit\n@@ -96,6 +111,9 @@ def update_latest(\n         if not anything_changed:\n             return ''\n \n+        short_message = \"\ud83d\udce3 Toolstate changed by {}! ({})\"\n+            .format(relevant_pr_number, '/'.join(emoji_status))\n+        message = short_message + \"\\n\\n\" + long_message\n         f.seek(0)\n         f.truncate(0)\n         json.dump(latest, f, indent=4, separators=(',', ': '))"}]}