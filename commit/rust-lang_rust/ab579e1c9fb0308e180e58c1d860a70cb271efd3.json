{"sha": "ab579e1c9fb0308e180e58c1d860a70cb271efd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNTc5ZTFjOWZiMDMwOGUxODBlNThjMWQ4NjBhNzBjYjI3MWVmZDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T21:27:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T21:28:11Z"}, "message": "stdlib: Port std::either over to interior vectors", "tree": {"sha": "0af84d024fa2e578ca357a3b21158d934fe3d231", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0af84d024fa2e578ca357a3b21158d934fe3d231"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab579e1c9fb0308e180e58c1d860a70cb271efd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab579e1c9fb0308e180e58c1d860a70cb271efd3", "html_url": "https://github.com/rust-lang/rust/commit/ab579e1c9fb0308e180e58c1d860a70cb271efd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab579e1c9fb0308e180e58c1d860a70cb271efd3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b062bbdb8e71d469a202a07dd4bf22faff0f8704", "url": "https://api.github.com/repos/rust-lang/rust/commits/b062bbdb8e71d469a202a07dd4bf22faff0f8704", "html_url": "https://github.com/rust-lang/rust/commit/b062bbdb8e71d469a202a07dd4bf22faff0f8704"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "2c175c18f36b97f6c7b45d316c1011515e037777", "filename": "src/lib/either.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ab579e1c9fb0308e180e58c1d860a70cb271efd3/src%2Flib%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab579e1c9fb0308e180e58c1d860a70cb271efd3/src%2Flib%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Feither.rs?ref=ab579e1c9fb0308e180e58c1d860a70cb271efd3", "patch": "@@ -16,35 +16,35 @@ fn either[T, U,\n     }\n }\n \n-fn lefts[T, U](&vec[t[T, U]] eithers) -> vec[T] {\n-    let vec[T] result = [];\n+fn lefts[T, U](&(t[T, U])[] eithers) -> T[] {\n+    let T[] result = ~[];\n     for (t[T, U] elt in eithers) {\n         alt (elt) {\n-            case (left(?l)) { result += [l] }\n+            case (left(?l)) { result += ~[l] }\n             case (_) {/* fallthrough */ }\n         }\n     }\n     ret result;\n }\n \n-fn rights[T, U](&vec[t[T, U]] eithers) -> vec[U] {\n-    let vec[U] result = [];\n+fn rights[T, U](&(t[T, U])[] eithers) -> U[] {\n+    let U[] result = ~[];\n     for (t[T, U] elt in eithers) {\n         alt (elt) {\n-            case (right(?r)) { result += [r] }\n+            case (right(?r)) { result += ~[r] }\n             case (_) {/* fallthrough */ }\n         }\n     }\n     ret result;\n }\n \n-fn partition[T, U](&vec[t[T, U]] eithers) -> tup(vec[T], vec[U]) {\n-    let vec[T] lefts = [];\n-    let vec[U] rights = [];\n+fn partition[T, U](&(t[T, U])[] eithers) -> tup(T[], U[]) {\n+    let T[] lefts = ~[];\n+    let U[] rights = ~[];\n     for (t[T, U] elt in eithers) {\n         alt (elt) {\n-            case (left(?l)) { lefts += [l] }\n-            case (right(?r)) { rights += [r] }\n+            case (left(?l)) { lefts += ~[l] }\n+            case (right(?r)) { rights += ~[r] }\n         }\n     }\n     ret tup(lefts, rights);"}]}