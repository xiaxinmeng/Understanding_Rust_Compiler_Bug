{"sha": "af404b998c87bb28ffb0a36a2f779a7d8371a0d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNDA0Yjk5OGM4N2JiMjhmZmIwYTM2YTJmNzc5YTdkODM3MWEwZDE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-06T09:44:33Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-06T09:44:33Z"}, "message": "Factor out rewrite_extern_crate()", "tree": {"sha": "d81e423fd289ed2f9399d5a7c25350fdf22b874d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d81e423fd289ed2f9399d5a7c25350fdf22b874d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af404b998c87bb28ffb0a36a2f779a7d8371a0d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af404b998c87bb28ffb0a36a2f779a7d8371a0d1", "html_url": "https://github.com/rust-lang/rust/commit/af404b998c87bb28ffb0a36a2f779a7d8371a0d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af404b998c87bb28ffb0a36a2f779a7d8371a0d1/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "435ab867c34ffdf54ce376aa63fc8ed06f1b7964", "url": "https://api.github.com/repos/rust-lang/rust/commits/435ab867c34ffdf54ce376aa63fc8ed06f1b7964", "html_url": "https://github.com/rust-lang/rust/commit/435ab867c34ffdf54ce376aa63fc8ed06f1b7964"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "2de2f6865df1625b3537507325d3bdf740328749", "filename": "src/visitor.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/af404b998c87bb28ffb0a36a2f779a7d8371a0d1/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af404b998c87bb28ffb0a36a2f779a7d8371a0d1/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=af404b998c87bb28ffb0a36a2f779a7d8371a0d1", "patch": "@@ -367,17 +367,8 @@ impl<'a> FmtVisitor<'a> {\n                 }\n             }\n             ast::ItemKind::ExternCrate(_) => {\n-                self.format_missing_with_indent(source!(self, item.span).lo());\n-                let new_str = self.snippet(item.span);\n-                if contains_comment(&new_str) {\n-                    self.buffer.push_str(&new_str)\n-                } else {\n-                    let no_whitespace =\n-                        &new_str.split_whitespace().collect::<Vec<&str>>().join(\" \");\n-                    self.buffer\n-                        .push_str(&Regex::new(r\"\\s;\").unwrap().replace(no_whitespace, \";\"));\n-                }\n-                self.last_pos = source!(self, item.span).hi();\n+                let rw = rewrite_extern_crate(&self.get_context(), item);\n+                self.push_rewrite(item.span, rw);\n             }\n             ast::ItemKind::Struct(ref def, ref generics) => {\n                 let rewrite = {\n@@ -1046,3 +1037,15 @@ fn get_derive_args(context: &RewriteContext, attr: &ast::Attribute) -> Option<Ve\n         _ => None,\n     })\n }\n+\n+// Rewrite `extern crate foo;` WITHOUT attributes.\n+pub fn rewrite_extern_crate(context: &RewriteContext, item: &ast::Item) -> Option<String> {\n+    assert!(is_extern_crate(item));\n+    let new_str = context.snippet(item.span);\n+    Some(if contains_comment(&new_str) {\n+        new_str\n+    } else {\n+        let no_whitespace = &new_str.split_whitespace().collect::<Vec<&str>>().join(\" \");\n+        String::from(&*Regex::new(r\"\\s;\").unwrap().replace(no_whitespace, \";\"))\n+    })\n+}"}]}