{"sha": "01cf0bde2773dc915fbe751d809cc46b873f71a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxY2YwYmRlMjc3M2RjOTE1ZmJlNzUxZDgwOWNjNDZiODczZjcxYTE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-30T04:13:34Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-01T23:39:47Z"}, "message": "Document rustfmt on nightly-rustc\n\nThe recursion_limit attribute avoids the following error:\n\n```\nerror[E0275]: overflow evaluating the requirement `std::ptr::Unique<rustc_ast::Pat>: std::marker::Send`\n  |\n  = help: consider adding a `#![recursion_limit=\"256\"]` attribute to your crate (`rustfmt_nightly`)\n```", "tree": {"sha": "40eab193ed95dd272306e4453259ddd78edd4de2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40eab193ed95dd272306e4453259ddd78edd4de2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01cf0bde2773dc915fbe751d809cc46b873f71a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01cf0bde2773dc915fbe751d809cc46b873f71a1", "html_url": "https://github.com/rust-lang/rust/commit/01cf0bde2773dc915fbe751d809cc46b873f71a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01cf0bde2773dc915fbe751d809cc46b873f71a1/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81f3ab6bca611ce2661f622fd5bf11b684169e7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/81f3ab6bca611ce2661f622fd5bf11b684169e7a", "html_url": "https://github.com/rust-lang/rust/commit/81f3ab6bca611ce2661f622fd5bf11b684169e7a"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "56ecc6e68a98c8af8f1f233985b06ab89c84ab5f", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01cf0bde2773dc915fbe751d809cc46b873f71a1/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cf0bde2773dc915fbe751d809cc46b873f71a1/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=01cf0bde2773dc915fbe751d809cc46b873f71a1", "patch": "@@ -465,7 +465,7 @@ impl<'a> Builder<'a> {\n                 doc::Std,\n                 doc::Rustc,\n                 doc::Rustdoc,\n-                // doc::Rustfmt,\n+                doc::Rustfmt,\n                 doc::ErrorIndex,\n                 doc::Nomicon,\n                 doc::Reference,"}, {"sha": "8603361362cc77bbc3a60528f74e477e7967ab0d", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/01cf0bde2773dc915fbe751d809cc46b873f71a1/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cf0bde2773dc915fbe751d809cc46b873f71a1/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=01cf0bde2773dc915fbe751d809cc46b873f71a1", "patch": "@@ -594,7 +594,7 @@ impl Step for Rustc {\n }\n \n macro_rules! tool_doc {\n-    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?]) => {\n+    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?] $(, binary=$bin:expr)?) => {\n         #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n         pub struct $tool {\n             stage: u32,\n@@ -639,9 +639,6 @@ macro_rules! tool_doc {\n                 // Build rustc docs so that we generate relative links.\n                 builder.ensure(Rustc { stage, target });\n \n-                // Build the tool.\n-                builder.ensure(tool::$tool { compiler });\n-\n                 // Symlink compiler docs to the output directory of rustdoc documentation.\n                 let out_dir = builder.stage_out(compiler, Mode::ToolRustc).join(target.triple).join(\"doc\");\n                 t!(fs::create_dir_all(&out_dir));\n@@ -666,7 +663,9 @@ macro_rules! tool_doc {\n                     cargo.arg(\"-p\").arg($krate);\n                 )+\n \n-                cargo.rustdocflag(\"--document-private-items\");\n+                $(if !$bin {\n+                    cargo.rustdocflag(\"--document-private-items\");\n+                })?\n                 cargo.rustdocflag(\"--enable-index-page\");\n                 cargo.rustdocflag(\"--show-type-layout\");\n                 cargo.rustdocflag(\"-Zunstable-options\");\n@@ -677,6 +676,13 @@ macro_rules! tool_doc {\n }\n \n tool_doc!(Rustdoc, \"rustdoc-tool\", \"src/tools/rustdoc\", [\"rustdoc\", \"rustdoc-json-types\"]);\n+tool_doc!(\n+    Rustfmt,\n+    \"rustfmt-nightly\",\n+    \"src/tools/rustfmt\",\n+    [\"rustfmt-nightly\", \"rustfmt-config_proc_macro\"],\n+    binary = true\n+);\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct ErrorIndex {"}, {"sha": "ce8a45eea65312dd5fee34d9918b852e9ce10114", "filename": "src/tools/rustfmt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01cf0bde2773dc915fbe751d809cc46b873f71a1/src%2Ftools%2Frustfmt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cf0bde2773dc915fbe751d809cc46b873f71a1/src%2Ftools%2Frustfmt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Flib.rs?ref=01cf0bde2773dc915fbe751d809cc46b873f71a1", "patch": "@@ -1,6 +1,7 @@\n #![feature(rustc_private)]\n #![deny(rust_2018_idioms)]\n #![warn(unreachable_pub)]\n+#![recursion_limit = \"256\"]\n \n #[macro_use]\n extern crate derive_new;"}]}