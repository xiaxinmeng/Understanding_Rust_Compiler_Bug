{"sha": "f3bd14ab112ff77565dbb57a69540bbae2607ee9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYmQxNGFiMTEyZmY3NzU2NWRiYjU3YTY5NTQwYmJhZTI2MDdlZTk=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-25T16:11:15Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-25T16:36:10Z"}, "message": "Turn some alloca_no_lifetime() calls into plain alloca() calls\n\nThe issues that the comments referred to were fixed before the PR even\nlanded but we never got around to remove the hack of skipping the\nlifetime start.", "tree": {"sha": "69170459a8a512ef4c215d68c1cd8a9cfab7a4a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69170459a8a512ef4c215d68c1cd8a9cfab7a4a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3bd14ab112ff77565dbb57a69540bbae2607ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3bd14ab112ff77565dbb57a69540bbae2607ee9", "html_url": "https://github.com/rust-lang/rust/commit/f3bd14ab112ff77565dbb57a69540bbae2607ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3bd14ab112ff77565dbb57a69540bbae2607ee9/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e60fdba1794893dbd1855f01fb0f6b32b70137a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e60fdba1794893dbd1855f01fb0f6b32b70137a", "html_url": "https://github.com/rust-lang/rust/commit/6e60fdba1794893dbd1855f01fb0f6b32b70137a"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "8d56f8829eea4da56300fb0752a897765519a5ed", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3bd14ab112ff77565dbb57a69540bbae2607ee9/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3bd14ab112ff77565dbb57a69540bbae2607ee9/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=f3bd14ab112ff77565dbb57a69540bbae2607ee9", "patch": "@@ -247,8 +247,7 @@ pub fn trans<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n             immediate_rvalue(load_ty(bcx, global, const_ty), const_ty)\n         } else {\n             let llty = type_of::type_of(bcx.ccx(), const_ty);\n-            // HACK(eddyb) get around issues with lifetime intrinsics.\n-            let scratch = alloca_no_lifetime(bcx, llty, \"const\");\n+            let scratch = alloca(bcx, llty, \"const\");\n             let lldest = if !const_ty.is_structural() {\n                 // Cast pointer to slot, because constants have different types.\n                 PointerCast(bcx, scratch, val_ty(global))\n@@ -412,8 +411,7 @@ fn apply_adjustments<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                 let target = bcx.monomorphize(&target);\n                 let llty = type_of::type_of(bcx.ccx(), target);\n \n-                // HACK(eddyb) get around issues with lifetime intrinsics.\n-                let scratch = alloca_no_lifetime(bcx, llty, \"__coerce_target\");\n+                let scratch = alloca(bcx, llty, \"__coerce_target\");\n                 let target_datum = Datum::new(scratch, target,\n                                               Rvalue::new(ByRef));\n                 bcx = coerce_unsized(bcx, expr.span, source_datum, target_datum);"}]}