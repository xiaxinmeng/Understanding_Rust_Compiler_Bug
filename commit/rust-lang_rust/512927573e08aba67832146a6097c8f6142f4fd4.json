{"sha": "512927573e08aba67832146a6097c8f6142f4fd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMjkyNzU3M2UwOGFiYTY3ODMyMTQ2YTYwOTdjOGY2MTQyZjRmZDQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-22T23:58:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-23T00:24:49Z"}, "message": "syntax: Replace token::DOLLAR_PAREN, DOLLAR_NUM with just DOLLAR\n\nFigure the rest out in the parser", "tree": {"sha": "86f92f103367b8b47c0675c6313a0abd9c7a7ce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f92f103367b8b47c0675c6313a0abd9c7a7ce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/512927573e08aba67832146a6097c8f6142f4fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/512927573e08aba67832146a6097c8f6142f4fd4", "html_url": "https://github.com/rust-lang/rust/commit/512927573e08aba67832146a6097c8f6142f4fd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/512927573e08aba67832146a6097c8f6142f4fd4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7321c1717128d8904f1c7862fb782250fdba6d92", "url": "https://api.github.com/repos/rust-lang/rust/commits/7321c1717128d8904f1c7862fb782250fdba6d92", "html_url": "https://github.com/rust-lang/rust/commit/7321c1717128d8904f1c7862fb782250fdba6d92"}], "stats": {"total": 60, "additions": 23, "deletions": 37}, "files": [{"sha": "ec9f785db2fb8813fdeae8a58fd6043fd8ddc8f5", "filename": "src/librustsyntax/parse/lexer.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/512927573e08aba67832146a6097c8f6142f4fd4/src%2Flibrustsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512927573e08aba67832146a6097c8f6142f4fd4/src%2Flibrustsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Flexer.rs?ref=512927573e08aba67832146a6097c8f6142f4fd4", "patch": "@@ -367,23 +367,7 @@ fn next_token_inner(rdr: reader) -> token::token {\n         } else { ret token::COLON; }\n       }\n \n-      '$' {\n-        rdr.bump();\n-        if is_dec_digit(rdr.curr) {\n-            let mut val = dec_digit_val(rdr.curr) as uint;\n-            while is_dec_digit(rdr.next()) {\n-                rdr.bump();\n-                val = val * 10u + (dec_digit_val(rdr.curr) as uint);\n-            }\n-            rdr.bump();\n-            ret token::DOLLAR_NUM(val);\n-        } else if rdr.curr == '(' {\n-            rdr.bump();\n-            ret token::DOLLAR_LPAREN;\n-        } else {\n-            rdr.fatal(\"expected digit\");\n-        }\n-      }\n+      '$' { rdr.bump(); ret token::DOLLAR; }\n \n \n "}, {"sha": "d4160e89bcaaabbfb57728fe84d1acfed602d430", "filename": "src/librustsyntax/parse/parser.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/512927573e08aba67832146a6097c8f6142f4fd4/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512927573e08aba67832146a6097c8f6142f4fd4/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fparser.rs?ref=512927573e08aba67832146a6097c8f6142f4fd4", "patch": "@@ -327,7 +327,7 @@ fn parse_region(p: parser) -> ast::region {\n fn parse_ty(p: parser, colons_before_params: bool) -> @ast::ty {\n     let lo = p.span.lo;\n \n-    alt have_dollar(p) {\n+    alt maybe_parse_dollar_mac(p) {\n       some(e) {\n         ret @{id: p.get_id(),\n               node: ast::ty_mac(spanned(lo, p.span.hi, e)),\n@@ -440,19 +440,27 @@ fn parse_fn_block_arg(p: parser) -> ast::arg {\n     ret {mode: m, ty: t, ident: i, id: p.get_id()};\n }\n \n-fn have_dollar(p: parser) -> option<ast::mac_> {\n+fn maybe_parse_dollar_mac(p: parser) -> option<ast::mac_> {\n     alt p.token {\n-      token::DOLLAR_NUM(num) {\n-        p.bump();\n-        some(ast::mac_var(num))\n-      }\n-      token::DOLLAR_LPAREN {\n+      token::DOLLAR {\n         let lo = p.span.lo;\n         p.bump();\n-        let e = parse_expr(p);\n-        expect(p, token::RPAREN);\n-        let hi = p.last_span.hi;\n-        some(ast::mac_aq(ast_util::mk_sp(lo,hi), e))\n+        alt p.token {\n+          token::LIT_INT(num, ast::ty_i) {\n+            p.bump();\n+            some(ast::mac_var(num as uint))\n+          }\n+          token::LPAREN {\n+            p.bump();\n+            let e = parse_expr(p);\n+            expect(p, token::RPAREN);\n+            let hi = p.last_span.hi;\n+            some(ast::mac_aq(ast_util::mk_sp(lo,hi), e))\n+          }\n+          _ {\n+            p.fatal(\"expected `(` or integer literal\");\n+          }\n+        }\n       }\n       _ {none}\n     }\n@@ -623,7 +631,7 @@ fn parse_bottom_expr(p: parser) -> pexpr {\n \n     let mut ex: ast::expr_;\n \n-    alt have_dollar(p) {\n+    alt maybe_parse_dollar_mac(p) {\n       some(x) {ret pexpr(mk_mac_expr(p, lo, p.span.hi, x));}\n       _ {}\n     }"}, {"sha": "8e274969551e66ce83aedf1659b40693be8dca0f", "filename": "src/librustsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/512927573e08aba67832146a6097c8f6142f4fd4/src%2Flibrustsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512927573e08aba67832146a6097c8f6142f4fd4/src%2Flibrustsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Ftoken.rs?ref=512927573e08aba67832146a6097c8f6142f4fd4", "patch": "@@ -53,9 +53,7 @@ enum token {\n     LBRACE,\n     RBRACE,\n     POUND,\n-\n-    DOLLAR_LPAREN,\n-    DOLLAR_NUM(uint),\n+    DOLLAR,\n \n     /* Literals */\n     LIT_INT(i64, ast::int_ty),\n@@ -122,11 +120,7 @@ fn to_str(in: interner<str>, t: token) -> str {\n       LBRACE { ret \"{\"; }\n       RBRACE { ret \"}\"; }\n       POUND { ret \"#\"; }\n-\n-      DOLLAR_LPAREN { ret \"$(\"; }\n-      DOLLAR_NUM(u) {\n-        ret \"$\" + uint::to_str(u as uint, 10u);\n-      }\n+      DOLLAR { ret \"$\"; }\n \n       /* Literals */\n       LIT_INT(c, ast::ty_char) {"}]}