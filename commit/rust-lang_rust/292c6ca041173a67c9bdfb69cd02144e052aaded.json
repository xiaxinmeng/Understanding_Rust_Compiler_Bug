{"sha": "292c6ca041173a67c9bdfb69cd02144e052aaded", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MmM2Y2EwNDExNzNhNjdjOWJkZmI2OWNkMDIxNDRlMDUyYWFkZWQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-15T17:49:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-15T17:49:44Z"}, "message": "Rollup merge of #48959 - alexcrichton:signext, r=eddyb\n\nrustc: Start a custom cabi module for wasm32\n\nIt actually was already using the `cabi_asmjs` module but that was by accident,\nso route the new `wasm32-unknown-unknown` target to a new `cabi_wasm32` module.\nThe first entries in this module are to use `signext` and `zeroext` for types\nthat are under 32 bytes in size\n\nCloses rust-lang-nursery/rust-wasm#88", "tree": {"sha": "ba1726e94bf7072cfe869b4a2a5673f4fa4961c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba1726e94bf7072cfe869b4a2a5673f4fa4961c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/292c6ca041173a67c9bdfb69cd02144e052aaded", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaqrI4CRBK7hj4Ov3rIwAAdHIIAJKwuFRxDmTCLcCc8BGKgfGZ\nBqTDCJDcdAHNxmcyEyyMzdsKuOZ+0ejyC0ZldreqtQFNIbNXlZOr2SAi9aXkmjYP\nxuikpIQE/1AwcYkyC9DPIq3pcdqwJ1aaB5JQMiHieXNP39uO2PUU88WbphLG9vIT\nTSaAmg3qklsTQvileVOr2siyb9FRlQnZkelfgwRsn4yXS8wSGZH362EjQnDMj22F\nlW4QzJ2xIyBGdnzTa8hWzv4Cgfhx/ZZmQ9I0FFy/h38wGqiPGA9X5A+ONd0CQ0r2\nLBDmTGT6R35yzP+ElrAPfgPNFx8tSvSAxOSBP9iHaNBf66HHletl5n/oQ7fJVnA=\n=Mb/m\n-----END PGP SIGNATURE-----\n", "payload": "tree ba1726e94bf7072cfe869b4a2a5673f4fa4961c6\nparent 35b008cb926503f6b66313db059be52136470221\nparent 74f5dd07cff8dba348f91cfef4df5242ab33a311\nauthor kennytm <kennytm@gmail.com> 1521136184 +0800\ncommitter GitHub <noreply@github.com> 1521136184 +0800\n\nRollup merge of #48959 - alexcrichton:signext, r=eddyb\n\nrustc: Start a custom cabi module for wasm32\n\nIt actually was already using the `cabi_asmjs` module but that was by accident,\nso route the new `wasm32-unknown-unknown` target to a new `cabi_wasm32` module.\nThe first entries in this module are to use `signext` and `zeroext` for types\nthat are under 32 bytes in size\n\nCloses rust-lang-nursery/rust-wasm#88\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/292c6ca041173a67c9bdfb69cd02144e052aaded", "html_url": "https://github.com/rust-lang/rust/commit/292c6ca041173a67c9bdfb69cd02144e052aaded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/292c6ca041173a67c9bdfb69cd02144e052aaded/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35b008cb926503f6b66313db059be52136470221", "url": "https://api.github.com/repos/rust-lang/rust/commits/35b008cb926503f6b66313db059be52136470221", "html_url": "https://github.com/rust-lang/rust/commit/35b008cb926503f6b66313db059be52136470221"}, {"sha": "74f5dd07cff8dba348f91cfef4df5242ab33a311", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f5dd07cff8dba348f91cfef4df5242ab33a311", "html_url": "https://github.com/rust-lang/rust/commit/74f5dd07cff8dba348f91cfef4df5242ab33a311"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "44c18c371a40f348be58487b8943374494d053af", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/292c6ca041173a67c9bdfb69cd02144e052aaded/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/292c6ca041173a67c9bdfb69cd02144e052aaded/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=292c6ca041173a67c9bdfb69cd02144e052aaded", "patch": "@@ -30,6 +30,7 @@ use cabi_sparc64;\n use cabi_nvptx;\n use cabi_nvptx64;\n use cabi_hexagon;\n+use cabi_wasm32;\n use mir::place::PlaceRef;\n use mir::operand::OperandValue;\n use type_::Type;\n@@ -948,7 +949,13 @@ impl<'a, 'tcx> FnType<'tcx> {\n             \"powerpc64\" => cabi_powerpc64::compute_abi_info(cx, self),\n             \"s390x\" => cabi_s390x::compute_abi_info(cx, self),\n             \"asmjs\" => cabi_asmjs::compute_abi_info(cx, self),\n-            \"wasm32\" => cabi_asmjs::compute_abi_info(cx, self),\n+            \"wasm32\" => {\n+                if cx.sess().opts.target_triple.contains(\"emscripten\") {\n+                    cabi_asmjs::compute_abi_info(cx, self)\n+                } else {\n+                    cabi_wasm32::compute_abi_info(cx, self)\n+                }\n+            }\n             \"msp430\" => cabi_msp430::compute_abi_info(self),\n             \"sparc\" => cabi_sparc::compute_abi_info(cx, self),\n             \"sparc64\" => cabi_sparc64::compute_abi_info(cx, self),"}, {"sha": "5530a03d65dda2207b51e675e427755f9396fe92", "filename": "src/librustc_trans/cabi_wasm32.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/292c6ca041173a67c9bdfb69cd02144e052aaded/src%2Flibrustc_trans%2Fcabi_wasm32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/292c6ca041173a67c9bdfb69cd02144e052aaded/src%2Flibrustc_trans%2Fcabi_wasm32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcabi_wasm32.rs?ref=292c6ca041173a67c9bdfb69cd02144e052aaded", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use abi::{FnType, ArgType};\n+use context::CodegenCx;\n+\n+fn classify_ret_ty<'a, 'tcx>(_cx: &CodegenCx<'a, 'tcx>, ret: &mut ArgType<'tcx>) {\n+    ret.extend_integer_width_to(32);\n+}\n+\n+fn classify_arg_ty(arg: &mut ArgType) {\n+    arg.extend_integer_width_to(32);\n+}\n+\n+pub fn compute_abi_info<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>, fty: &mut FnType<'tcx>) {\n+    if !fty.ret.is_ignore() {\n+        classify_ret_ty(cx, &mut fty.ret);\n+    }\n+\n+    for arg in &mut fty.args {\n+        if arg.is_ignore() { continue; }\n+        classify_arg_ty(arg);\n+    }\n+}"}, {"sha": "4a32b614c05d4a40a6cd52574cbd426dc09bc1bc", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/292c6ca041173a67c9bdfb69cd02144e052aaded/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/292c6ca041173a67c9bdfb69cd02144e052aaded/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=292c6ca041173a67c9bdfb69cd02144e052aaded", "patch": "@@ -123,6 +123,7 @@ mod cabi_sparc64;\n mod cabi_x86;\n mod cabi_x86_64;\n mod cabi_x86_win64;\n+mod cabi_wasm32;\n mod callee;\n mod common;\n mod consts;"}]}