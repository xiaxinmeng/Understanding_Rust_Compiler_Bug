{"sha": "013fca8698eb858b19c0a2c31fa1f1487b1e582d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxM2ZjYTg2OThlYjg1OGIxOWMwYTJjMzFmYTFmMTQ4N2IxZTU4MmQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-20T08:59:24Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-27T09:17:25Z"}, "message": "Generate `DefId`s for impl Trait in the def_collector", "tree": {"sha": "58266f29a94529e1c5e186af0ec809c67ffd0174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58266f29a94529e1c5e186af0ec809c67ffd0174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/013fca8698eb858b19c0a2c31fa1f1487b1e582d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/013fca8698eb858b19c0a2c31fa1f1487b1e582d", "html_url": "https://github.com/rust-lang/rust/commit/013fca8698eb858b19c0a2c31fa1f1487b1e582d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/013fca8698eb858b19c0a2c31fa1f1487b1e582d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "html_url": "https://github.com/rust-lang/rust/commit/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9"}], "stats": {"total": 46, "additions": 17, "deletions": 29}, "files": [{"sha": "a21d2b6913510a9f08d3737f7e7b5ea2d2316f68", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=013fca8698eb858b19c0a2c31fa1f1487b1e582d", "patch": "@@ -1179,14 +1179,11 @@ impl<'a> LoweringContext<'a> {\n                     ImplTraitContext::Universal(def_id) => {\n                         self.lower_node_id(def_node_id);\n                         // Add a definition for the in-band TyParam\n-                        let def_index = self.resolver.definitions().create_def_with_parent(\n-                            def_id.index,\n-                            def_node_id,\n-                            DefPathData::UniversalImplTrait,\n-                            DefIndexAddressSpace::High,\n-                            Mark::root(),\n-                            span,\n-                        );\n+                        let def_index = self\n+                            .resolver\n+                            .definitions()\n+                            .opt_def_index(def_node_id)\n+                            .unwrap();\n \n                         let hir_bounds = self.lower_param_bounds(bounds, itctx);\n                         // Set the name to `impl Bound1 + Bound2`\n@@ -1254,18 +1251,12 @@ impl<'a> LoweringContext<'a> {\n             span,\n         );\n \n-        // Pull a new definition from the ether\n         let exist_ty_def_index = self\n             .resolver\n             .definitions()\n-            .create_def_with_parent(\n-            fn_def_id.index,\n-            exist_ty_node_id,\n-            DefPathData::ExistentialImplTrait,\n-            DefIndexAddressSpace::High,\n-            Mark::root(),\n-            exist_ty_span,\n-        );\n+            .opt_def_index(exist_ty_node_id)\n+            .unwrap();\n+\n \n         self.allocate_hir_id_counter(exist_ty_node_id, &\"existential impl trait\");\n "}, {"sha": "4884d4407577a38fb4ac702f5bdf129ee7689e72", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=013fca8698eb858b19c0a2c31fa1f1487b1e582d", "patch": "@@ -302,6 +302,9 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n     fn visit_ty(&mut self, ty: &'a Ty) {\n         match ty.node {\n             TyKind::Mac(..) => return self.visit_macro_invoc(ty.id),\n+            TyKind::ImplTrait(node_id, _) => {\n+                self.create_def(node_id, DefPathData::ImplTrait, REGULAR_SPACE, ty.span);\n+            }\n             _ => {}\n         }\n         visit::walk_ty(self, ty);"}, {"sha": "ca2789f04f2e2fe2a12df24b93b6f55129be0704", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=013fca8698eb858b19c0a2c31fa1f1487b1e582d", "patch": "@@ -374,10 +374,8 @@ pub enum DefPathData {\n     StructCtor,\n     /// A constant expression (see {ast,hir}::AnonConst).\n     AnonConst,\n-    /// An `impl Trait` type node in argument position.\n-    UniversalImplTrait,\n-    /// An `impl Trait` type node in return position.\n-    ExistentialImplTrait,\n+    /// An `impl Trait` type node\n+    ImplTrait,\n \n     /// GlobalMetaData identifies a piece of crate metadata that is global to\n     /// a whole crate (as opposed to just one item). GlobalMetaData components\n@@ -641,8 +639,7 @@ impl DefPathData {\n             ClosureExpr |\n             StructCtor |\n             AnonConst |\n-            ExistentialImplTrait |\n-            UniversalImplTrait => None\n+            ImplTrait => None\n         }\n     }\n \n@@ -672,8 +669,7 @@ impl DefPathData {\n             ClosureExpr => \"{{closure}}\",\n             StructCtor => \"{{constructor}}\",\n             AnonConst => \"{{constant}}\",\n-            ExistentialImplTrait => \"{{exist-impl-Trait}}\",\n-            UniversalImplTrait => \"{{univ-impl-Trait}}\",\n+            ImplTrait => \"{{impl-Trait}}\",\n         };\n \n         Symbol::intern(s).as_interned_str()"}, {"sha": "95da68bc9ffc2e147125a0300eff1a13a4a191c6", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=013fca8698eb858b19c0a2c31fa1f1487b1e582d", "patch": "@@ -221,8 +221,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             data @ DefPathData::AnonConst |\n             data @ DefPathData::MacroDef(..) |\n             data @ DefPathData::ClosureExpr |\n-            data @ DefPathData::ExistentialImplTrait |\n-            data @ DefPathData::UniversalImplTrait |\n+            data @ DefPathData::ImplTrait |\n             data @ DefPathData::GlobalMetaData(..) => {\n                 let parent_def_id = self.parent_def_id(def_id).unwrap();\n                 self.push_item_path(buffer, parent_def_id);"}, {"sha": "24bda3a47442a665bbf9e9317c69eb36006d71df", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013fca8698eb858b19c0a2c31fa1f1487b1e582d/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=013fca8698eb858b19c0a2c31fa1f1487b1e582d", "patch": "@@ -291,8 +291,7 @@ impl PrintContext {\n                     DefPathData::Field(_) |\n                     DefPathData::StructCtor |\n                     DefPathData::AnonConst |\n-                    DefPathData::ExistentialImplTrait |\n-                    DefPathData::UniversalImplTrait |\n+                    DefPathData::ImplTrait |\n                     DefPathData::GlobalMetaData(_) => {\n                         // if we're making a symbol for something, there ought\n                         // to be a value or type-def or something in there"}]}