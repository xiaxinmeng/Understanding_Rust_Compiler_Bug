{"sha": "8703c8067fb8a22ec9b296efea162aac3e7f9521", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MDNjODA2N2ZiOGEyMmVjOWIyOTZlZmVhMTYyYWFjM2U3Zjk1MjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-05T21:21:32Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-05T21:52:48Z"}, "message": "FIx native wrapper generation to handle more arg types.", "tree": {"sha": "c83079b978da5eb7db59ba80810c96bdfeb71099", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c83079b978da5eb7db59ba80810c96bdfeb71099"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8703c8067fb8a22ec9b296efea162aac3e7f9521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8703c8067fb8a22ec9b296efea162aac3e7f9521", "html_url": "https://github.com/rust-lang/rust/commit/8703c8067fb8a22ec9b296efea162aac3e7f9521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8703c8067fb8a22ec9b296efea162aac3e7f9521/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "361ee5a68bf23c9fc65aee39618b5d1b0db4941b", "url": "https://api.github.com/repos/rust-lang/rust/commits/361ee5a68bf23c9fc65aee39618b5d1b0db4941b", "html_url": "https://github.com/rust-lang/rust/commit/361ee5a68bf23c9fc65aee39618b5d1b0db4941b"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "6e3550bde35f50575b2520921c40b1cd2e53e7d9", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8703c8067fb8a22ec9b296efea162aac3e7f9521/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8703c8067fb8a22ec9b296efea162aac3e7f9521/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=8703c8067fb8a22ec9b296efea162aac3e7f9521", "patch": "@@ -6148,15 +6148,15 @@ fn decl_native_fn_and_pair(@crate_ctxt cx,\n     auto arg_n = 3u;\n     auto pass_task;\n \n-    auto lltaskptr = bcx.build.PtrToInt(fcx.lltaskptr, T_int());\n+    auto lltaskptr = vp2i(bcx, fcx.lltaskptr);\n     alt (abi) {\n         case (ast.native_abi_rust) {\n             pass_task = true;\n             call_args += vec(lltaskptr);\n             for each (uint i in _uint.range(0u, num_ty_param)) {\n                 auto llarg = llvm.LLVMGetParam(fcx.llfn, arg_n);\n                 check (llarg as int != 0);\n-                call_args += vec(bcx.build.PointerCast(llarg, T_i32()));\n+                call_args += vec(vp2i(bcx, llarg));\n                 arg_n += 1u;\n             }\n         }\n@@ -6169,6 +6169,26 @@ fn decl_native_fn_and_pair(@crate_ctxt cx,\n         }\n     }\n \n+    fn push_arg(@block_ctxt cx,\n+                &mutable vec[ValueRef] args,\n+                ValueRef v,\n+                @ty.t t) {\n+        if (ty.type_is_integral(t)) {\n+            auto lldsttype = T_int();\n+            auto llsrctype = type_of(cx.fcx.ccx, t);\n+            if (llvm.LLVMGetIntTypeWidth(lldsttype) >\n+                llvm.LLVMGetIntTypeWidth(llsrctype)) {\n+                args += vec(cx.build.ZExtOrBitCast(v, T_int()));\n+            } else {\n+                args += vec(cx.build.TruncOrBitCast(v, T_int()));\n+            }\n+        } else if (ty.type_is_fp(t)) {\n+            args += vec(cx.build.FPToSI(v, T_int()));\n+        } else {\n+            args += vec(vp2i(cx, v));\n+        }\n+    }\n+\n     auto r;\n     auto rptr;\n     auto args = ty.ty_fn_args(fn_type);\n@@ -6192,7 +6212,7 @@ fn decl_native_fn_and_pair(@crate_ctxt cx,\n         for (ty.arg arg in args) {\n             auto llarg = llvm.LLVMGetParam(fcx.llfn, arg_n);\n             check (llarg as int != 0);\n-            call_args += vec(bcx.build.PointerCast(llarg, T_i32()));\n+            push_arg(bcx, call_args, llarg, arg.ty);\n             arg_n += 1u;\n         }\n "}]}