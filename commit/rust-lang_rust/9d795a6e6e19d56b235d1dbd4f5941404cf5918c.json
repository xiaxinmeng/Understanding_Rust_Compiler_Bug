{"sha": "9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "node_id": "C_kwDOAAsO6NoAKDlkNzk1YTZlNmUxOWQ1NmIyMzVkMWRiZDRmNTk0MTQwNGNmNTkxOGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-02T14:02:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-02T14:02:29Z"}, "message": "Auto merge of #111082 - saethlin:box-assertkind, r=saethlin\n\nBox AssertKind\n\nr? `@nnethercote` this feels like your kind of thing\n\nI want to add a new variant to `AssertKind` that needs 3 operands, and that ends up breaking a bunch of size assertions. So... what if we go the opposite direction first; shrinking `AssertKind` by boxing it?", "tree": {"sha": "21af69303742ed60373248ad943d166e805a2197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21af69303742ed60373248ad943d166e805a2197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "html_url": "https://github.com/rust-lang/rust/commit/9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c33e47a495fbd7b22bce9ce32f2815991bc414", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c33e47a495fbd7b22bce9ce32f2815991bc414", "html_url": "https://github.com/rust-lang/rust/commit/98c33e47a495fbd7b22bce9ce32f2815991bc414"}, {"sha": "f08f903fa9866c6235714c6b0d7b1a33c7671a48", "url": "https://api.github.com/repos/rust-lang/rust/commits/f08f903fa9866c6235714c6b0d7b1a33c7671a48", "html_url": "https://github.com/rust-lang/rust/commit/f08f903fa9866c6235714c6b0d7b1a33c7671a48"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "863c92acdf4dc7aa48b9fe6378b5581c9d7d7c63", "filename": "compiler/rustc_borrowck/src/invalidation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_borrowck%2Fsrc%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_borrowck%2Fsrc%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Finvalidation.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -138,7 +138,7 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n             TerminatorKind::Assert { cond, expected: _, msg, target: _, unwind: _ } => {\n                 self.consume_operand(location, cond);\n                 use rustc_middle::mir::AssertKind;\n-                if let AssertKind::BoundsCheck { len, index } = msg {\n+                if let AssertKind::BoundsCheck { len, index } = &**msg {\n                     self.consume_operand(location, len);\n                     self.consume_operand(location, index);\n                 }"}, {"sha": "c2bc5c645b5adf19b1bef58806617f6614ce0fd6", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -738,7 +738,7 @@ impl<'cx, 'tcx> rustc_mir_dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtx\n             TerminatorKind::Assert { cond, expected: _, msg, target: _, unwind: _ } => {\n                 self.consume_operand(loc, (cond, span), flow_state);\n                 use rustc_middle::mir::AssertKind;\n-                if let AssertKind::BoundsCheck { len, index } = msg {\n+                if let AssertKind::BoundsCheck { len, index } = &**msg {\n                     self.consume_operand(loc, (len, span), flow_state);\n                     self.consume_operand(loc, (index, span), flow_state);\n                 }"}, {"sha": "2a12d8edb3253f6ff441ea834bab74321d1764d2", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -1404,7 +1404,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                     span_mirbug!(self, term, \"bad Assert ({:?}, not bool\", cond_ty);\n                 }\n \n-                if let AssertKind::BoundsCheck { len, index } = msg {\n+                if let AssertKind::BoundsCheck { len, index } = &**msg {\n                     if len.ty(body, tcx) != tcx.types.usize {\n                         span_mirbug!(self, len, \"bounds-check length non-usize {:?}\", len)\n                     }"}, {"sha": "527f455edbe441566cb2dab541156a386be2d930", "filename": "compiler/rustc_codegen_cranelift/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -335,7 +335,7 @@ fn codegen_fn_body(fx: &mut FunctionCx<'_, '_, '_>, start_block: Block) {\n                 fx.bcx.switch_to_block(failure);\n                 fx.bcx.ins().nop();\n \n-                match msg {\n+                match &**msg {\n                     AssertKind::BoundsCheck { ref len, ref index } => {\n                         let len = codegen_operand(fx, len).load_scalar(fx);\n                         let index = codegen_operand(fx, index).load_scalar(fx);"}, {"sha": "858a3d266ea3ce19e2f0981595af8ce4401c6502", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -3073,13 +3073,13 @@ mod size_asserts {\n     use super::*;\n     use rustc_data_structures::static_assert_size;\n     // tidy-alphabetical-start\n-    static_assert_size!(BasicBlockData<'_>, 144);\n+    static_assert_size!(BasicBlockData<'_>, 136);\n     static_assert_size!(LocalDecl<'_>, 40);\n     static_assert_size!(SourceScopeData<'_>, 72);\n     static_assert_size!(Statement<'_>, 32);\n     static_assert_size!(StatementKind<'_>, 16);\n-    static_assert_size!(Terminator<'_>, 112);\n-    static_assert_size!(TerminatorKind<'_>, 96);\n+    static_assert_size!(Terminator<'_>, 104);\n+    static_assert_size!(TerminatorKind<'_>, 88);\n     static_assert_size!(VarDebugInfo<'_>, 80);\n     // tidy-alphabetical-end\n }"}, {"sha": "33b7fe0c2dc5589ec4434a1d7e95e24b86388845", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -651,7 +651,7 @@ pub enum TerminatorKind<'tcx> {\n     Assert {\n         cond: Operand<'tcx>,\n         expected: bool,\n-        msg: AssertMessage<'tcx>,\n+        msg: Box<AssertMessage<'tcx>>,\n         target: BasicBlock,\n         unwind: UnwindAction,\n     },"}, {"sha": "56c87c402fe2b9aac822e1e6fcafc39735e72576", "filename": "compiler/rustc_mir_build/src/build/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -1172,7 +1172,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             TerminatorKind::Assert {\n                 cond,\n                 expected,\n-                msg,\n+                msg: Box::new(msg),\n                 target: success_block,\n                 unwind: UnwindAction::Continue,\n             },"}, {"sha": "d60184e0ebef6f829d667737cfd24304eb91e133", "filename": "compiler/rustc_mir_transform/src/check_alignment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -224,10 +224,10 @@ fn insert_alignment_check<'tcx>(\n             cond: Operand::Copy(is_ok),\n             expected: true,\n             target: new_block,\n-            msg: AssertKind::MisalignedPointerDereference {\n+            msg: Box::new(AssertKind::MisalignedPointerDereference {\n                 required: Operand::Copy(alignment),\n                 found: Operand::Copy(addr),\n-            },\n+            }),\n             unwind: UnwindAction::Terminate,\n         },\n     });"}, {"sha": "ff1745300da393316a866b8896b3980fc6c52499", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -1150,7 +1150,7 @@ fn insert_panic_block<'tcx>(\n             literal: ConstantKind::from_bool(tcx, false),\n         })),\n         expected: true,\n-        msg: message,\n+        msg: Box::new(message),\n         target: assert_block,\n         unwind: UnwindAction::Continue,\n     };"}, {"sha": "65162477b7bc54c31d9c8399924fbb2ffe4a1166", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d795a6e6e19d56b235d1dbd4f5941404cf5918c/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=9d795a6e6e19d56b235d1dbd4f5941404cf5918c", "patch": "@@ -843,7 +843,7 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                 }\n             }\n             mir::TerminatorKind::Assert { ref msg, .. } => {\n-                let lang_item = match msg {\n+                let lang_item = match &**msg {\n                     mir::AssertKind::BoundsCheck { .. } => LangItem::PanicBoundsCheck,\n                     _ => LangItem::Panic,\n                 };"}]}