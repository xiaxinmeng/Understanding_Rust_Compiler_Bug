{"sha": "a33d7617c5b5d18ff495fe6aa9108aa13939a114", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzM2Q3NjE3YzViNWQxOGZmNDk1ZmU2YWE5MTA4YWExMzkzOWExMTQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-27T16:11:07Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-27T22:12:48Z"}, "message": "Test fixes and rebase conflicts from rollup", "tree": {"sha": "175d19a1340e0f244e9c30e7f6a64c6c3d8b89ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/175d19a1340e0f244e9c30e7f6a64c6c3d8b89ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a33d7617c5b5d18ff495fe6aa9108aa13939a114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a33d7617c5b5d18ff495fe6aa9108aa13939a114", "html_url": "https://github.com/rust-lang/rust/commit/a33d7617c5b5d18ff495fe6aa9108aa13939a114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a33d7617c5b5d18ff495fe6aa9108aa13939a114/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40811f84ef3f04230e29ec4feb4e99a5b79480cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/40811f84ef3f04230e29ec4feb4e99a5b79480cb", "html_url": "https://github.com/rust-lang/rust/commit/40811f84ef3f04230e29ec4feb4e99a5b79480cb"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "765c9827cb79f6ac1414e3c55144d74733e22e5d", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=a33d7617c5b5d18ff495fe6aa9108aa13939a114", "patch": "@@ -231,7 +231,7 @@ impl<T> Vec<T> {\n     ///         }\n     ///\n     ///         // Put everything back together into a Vec\n-    ///         let rebuilt = Vec::from_raw_parts(len, cap, p);\n+    ///         let rebuilt = Vec::from_raw_parts(p, len, cap);\n     ///         assert_eq!(rebuilt, vec![4i, 5i, 6i]);\n     ///     }\n     /// }"}, {"sha": "c2e88bfdbcfb9e6d502b30010b537e809baee63f", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=a33d7617c5b5d18ff495fe6aa9108aa13939a114", "patch": "@@ -259,9 +259,9 @@ impl OwnedAsciiCast for Vec<u8> {\n \n     #[inline]\n     unsafe fn into_ascii_nocheck(self) -> Vec<Ascii> {\n-        let v = Vec::from_raw_parts(self.len(),\n-                                    self.capacity(),\n-                                    mem::transmute(self.as_ptr()));\n+        let v = Vec::from_raw_parts(self.as_ptr() as *mut Ascii,\n+                                    self.len(),\n+                                    self.capacity());\n \n         // We forget `self` to avoid freeing it at the end of the scope\n         // Otherwise, the returned `Vec` would point to freed memory\n@@ -345,9 +345,9 @@ pub trait IntoBytes {\n impl IntoBytes for Vec<Ascii> {\n     fn into_bytes(self) -> Vec<u8> {\n         unsafe {\n-            let v = Vec::from_raw_parts(self.len(),\n-                                        self.capacity(),\n-                                        mem::transmute(self.as_ptr()));\n+            let v = Vec::from_raw_parts(self.as_ptr() as *mut u8,\n+                                        self.len(),\n+                                        self.capacity());\n \n             // We forget `self` to avoid freeing it at the end of the scope\n             // Otherwise, the returned `Vec` would point to freed memory"}, {"sha": "b1fbe6f5549e4face3d68a591b0039f1c5dd655b", "filename": "src/test/compile-fail/issue-17458.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Ftest%2Fcompile-fail%2Fissue-17458.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Ftest%2Fcompile-fail%2Fissue-17458.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17458.rs?ref=a33d7617c5b5d18ff495fe6aa9108aa13939a114", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n static X: uint = 0 as *const uint as uint;\n+//~^ ERROR: can not cast a pointer to an integer in a constant expression\n \n fn main() {\n     assert_eq!(X, 0);", "previous_filename": "src/test/run-pass/issue-17458.rs"}, {"sha": "b66fb4306d02993b01d7f413580592385cfbcea4", "filename": "src/test/run-pass/issue-16668.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Ftest%2Frun-pass%2Fissue-16668.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a33d7617c5b5d18ff495fe6aa9108aa13939a114/src%2Ftest%2Frun-pass%2Fissue-16668.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16668.rs?ref=a33d7617c5b5d18ff495fe6aa9108aa13939a114", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-pretty\n+\n #![feature(unboxed_closures)]\n \n struct Parser<'a, I, O> {"}]}