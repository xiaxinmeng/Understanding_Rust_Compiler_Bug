{"sha": "b250d5e6bfab92c1fe21635536c89e556b8f72d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNTBkNWU2YmZhYjkyYzFmZTIxNjM1NTM2Yzg5ZTU1NmI4ZjcyZDQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-25T11:07:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-25T11:07:50Z"}, "message": "Merge #8985\n\n8985: minor: Minor test fixes / new tests r=flodiebold a=flodiebold\n\n\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "1fdd32c7c2cd33c001deb2611ee2757927508d39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fdd32c7c2cd33c001deb2611ee2757927508d39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b250d5e6bfab92c1fe21635536c89e556b8f72d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrNqGCRBK7hj4Ov3rIwAAvZYIACcMLAuPKcCy2UlFcoLMrJn4\nwiE/QfuwFEq0+Rt4Lv/EzCHN4/dHvMyPZirb/U6uQ4SozY4uRPSzz/jAuypLx23Z\nqA1V4eQsUxlQENq0Z9Q4ECz6wpJmDiLUILthQS4OOQX7eHnVz06lVsBum4hFZmy7\nFKkNveq7cKjaJjvWzQnrOIvtEA+pUM+8RHiXg0p+LcQ9IK/5UBGt/uic4rJAdghG\numgpTF0meIUTSGuqkJT5Sl6krmxUKtgFQLWQ7Nznfxi52ZTizsNUCqtR3qQG6KH5\nSjSyBR3q/9cgRsgV6xlTDSwHMaRA5wiGGo7FR2HFeY/wCTIV26hBQXSxTFp56sg=\n=+7mC\n-----END PGP SIGNATURE-----\n", "payload": "tree 1fdd32c7c2cd33c001deb2611ee2757927508d39\nparent 4afc1b8c34aab2a0a32e549ab977d756a7066b28\nparent c33ee36d2a355c4b3c6bf8ecd0b680a7933e191e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621940870 +0000\ncommitter GitHub <noreply@github.com> 1621940870 +0000\n\nMerge #8985\n\n8985: minor: Minor test fixes / new tests r=flodiebold a=flodiebold\n\n\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b250d5e6bfab92c1fe21635536c89e556b8f72d4", "html_url": "https://github.com/rust-lang/rust/commit/b250d5e6bfab92c1fe21635536c89e556b8f72d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b250d5e6bfab92c1fe21635536c89e556b8f72d4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4afc1b8c34aab2a0a32e549ab977d756a7066b28", "url": "https://api.github.com/repos/rust-lang/rust/commits/4afc1b8c34aab2a0a32e549ab977d756a7066b28", "html_url": "https://github.com/rust-lang/rust/commit/4afc1b8c34aab2a0a32e549ab977d756a7066b28"}, {"sha": "c33ee36d2a355c4b3c6bf8ecd0b680a7933e191e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c33ee36d2a355c4b3c6bf8ecd0b680a7933e191e", "html_url": "https://github.com/rust-lang/rust/commit/c33ee36d2a355c4b3c6bf8ecd0b680a7933e191e"}], "stats": {"total": 77, "additions": 62, "deletions": 15}, "files": [{"sha": "6dac7e10397ad71c98800e33929dbf77b3ec7d3c", "filename": "crates/hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 62, "deletions": 15, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/b250d5e6bfab92c1fe21635536c89e556b8f72d4/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b250d5e6bfab92c1fe21635536c89e556b8f72d4/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=b250d5e6bfab92c1fe21635536c89e556b8f72d4", "patch": "@@ -832,11 +832,9 @@ fn coerce_unsize_super_trait_cycle() {\n     );\n }\n \n-#[ignore]\n #[test]\n fn coerce_unsize_generic() {\n-    // FIXME: Implement this\n-    // https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\n+    // FIXME: fix the type mismatches here\n     check_infer_with_mismatches(\n         r#\"\n         #[lang = \"unsize\"]\n@@ -854,8 +852,58 @@ fn coerce_unsize_generic() {\n             let _: &Bar<[usize]> = &Bar(Foo { t: [1, 2, 3] });\n         }\n         \"#,\n-        expect![[r\"\n-        \"]],\n+        expect![[r#\"\n+            209..317 '{     ... }); }': ()\n+            219..220 '_': &Foo<[usize]>\n+            238..259 '&Foo {..., 3] }': &Foo<[usize]>\n+            239..259 'Foo { ..., 3] }': Foo<[usize]>\n+            248..257 '[1, 2, 3]': [usize; 3]\n+            249..250 '1': usize\n+            252..253 '2': usize\n+            255..256 '3': usize\n+            269..270 '_': &Bar<[usize]>\n+            288..314 '&Bar(F... 3] })': &Bar<[i32; 3]>\n+            289..292 'Bar': Bar<[i32; 3]>(Foo<[i32; 3]>) -> Bar<[i32; 3]>\n+            289..314 'Bar(Fo... 3] })': Bar<[i32; 3]>\n+            293..313 'Foo { ..., 3] }': Foo<[i32; 3]>\n+            302..311 '[1, 2, 3]': [i32; 3]\n+            303..304 '1': i32\n+            306..307 '2': i32\n+            309..310 '3': i32\n+            248..257: expected [usize], got [usize; 3]\n+            288..314: expected &Bar<[usize]>, got &Bar<[i32; 3]>\n+        \"#]],\n+    );\n+}\n+\n+#[test]\n+fn coerce_unsize_apit() {\n+    // FIXME: #8984\n+    check_infer_with_mismatches(\n+        r#\"\n+#[lang = \"sized\"]\n+pub trait Sized {}\n+#[lang = \"unsize\"]\n+pub trait Unsize<T> {}\n+#[lang = \"coerce_unsized\"]\n+pub trait CoerceUnsized<T> {}\n+\n+impl<T: Unsize<U>, U> CoerceUnsized<&U> for &T {}\n+\n+trait Foo {}\n+\n+fn test(f: impl Foo) {\n+    let _: &dyn Foo = &f;\n+}\n+        \"#,\n+        expect![[r#\"\n+            210..211 'f': impl Foo\n+            223..252 '{     ... &f; }': ()\n+            233..234 '_': &dyn Foo\n+            247..249 '&f': &impl Foo\n+            248..249 'f': impl Foo\n+            247..249: expected &dyn Foo, got &impl Foo\n+        \"#]],\n     );\n }\n \n@@ -921,7 +969,7 @@ mod panic {\n     #[macro_export]\n     pub macro panic_2015 {\n         () => (\n-            $crate::panicking::panic(\"explicit panic\")\n+            $crate::panicking::panic()\n         ),\n     }\n }\n@@ -940,19 +988,18 @@ macro_rules! panic {\n }\n \n fn main() {\n-    panic!(\"internal error: entered unreachable code\")\n+    panic!()\n }\n         \"#,\n         expect![[r#\"\n-            190..201 '{ loop {} }': !\n-            192..199 'loop {}': !\n-            197..199 '{}': ()\n+            174..185 '{ loop {} }': !\n+            176..183 'loop {}': !\n+            181..183 '{}': ()\n             !0..24 '$crate...:panic': fn panic() -> !\n-            !0..42 '$crate...anic\")': !\n-            !0..42 '$crate...anic\")': !\n-            !0..70 '$crate...code\")': !\n-            !25..41 '\"expli...panic\"': &str\n-            470..528 '{     ...de\") }': ()\n+            !0..26 '$crate...anic()': !\n+            !0..26 '$crate...anic()': !\n+            !0..28 '$crate...015!()': !\n+            454..470 '{     ...c!() }': ()\n         \"#]],\n     );\n }"}]}