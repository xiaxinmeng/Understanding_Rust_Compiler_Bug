{"sha": "f7c75cc11ac56535e3956a50a024296f94a67b8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3Yzc1Y2MxMWFjNTY1MzVlMzk1NmE1MGEwMjQyOTZmOTRhNjdiOGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-06T22:26:55Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T04:53:38Z"}, "message": "Add 'ast::PatKind::Rest'.", "tree": {"sha": "fd087e82b19ff31cd5276e53dc8a708bcf66bd27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd087e82b19ff31cd5276e53dc8a708bcf66bd27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7c75cc11ac56535e3956a50a024296f94a67b8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c75cc11ac56535e3956a50a024296f94a67b8b", "html_url": "https://github.com/rust-lang/rust/commit/f7c75cc11ac56535e3956a50a024296f94a67b8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7c75cc11ac56535e3956a50a024296f94a67b8b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c798dffac9dc8c82374db48f5b474690cc6e9686", "url": "https://api.github.com/repos/rust-lang/rust/commits/c798dffac9dc8c82374db48f5b474690cc6e9686", "html_url": "https://github.com/rust-lang/rust/commit/c798dffac9dc8c82374db48f5b474690cc6e9686"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "d9848c49773e275f7654ff8b2b0b8d90af769246", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f7c75cc11ac56535e3956a50a024296f94a67b8b", "patch": "@@ -4264,6 +4264,10 @@ impl<'a> LoweringContext<'a> {\n                 slice.as_ref().map(|x| self.lower_pat(x)),\n                 after.iter().map(|x| self.lower_pat(x)).collect(),\n             ),\n+            PatKind::Rest => {\n+                // If we reach here the `..` pattern is not semantically allowed.\n+                self.ban_illegal_rest_pat(p.span)\n+            }\n             PatKind::Paren(ref inner) => return self.lower_pat(inner),\n             PatKind::Mac(_) => panic!(\"Shouldn't exist here\"),\n         };\n@@ -4275,6 +4279,19 @@ impl<'a> LoweringContext<'a> {\n         })\n     }\n \n+    /// Used to ban the `..` pattern in places it shouldn't be semantically.\n+    fn ban_illegal_rest_pat(&self, sp: Span) -> hir::PatKind {\n+        self.diagnostic()\n+            .struct_span_err(sp, \"`..` patterns are not allowed here\")\n+            .note(\"only allowed in tuple, tuple struct, and slice patterns\")\n+            .emit();\n+\n+        // We're not in a list context so `..` can be reasonably treated\n+        // as `_` because it should always be valid and roughly matches the\n+        // intent of `..` (notice that the rest of a single slot is that slot).\n+        hir::PatKind::Wild\n+    }\n+\n     fn lower_range_end(&mut self, e: &RangeEnd) -> hir::RangeEnd {\n         match *e {\n             RangeEnd::Included(_) => hir::RangeEnd::Included,"}, {"sha": "37889c4918ba9bb52d628ff6019331914ce0007a", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f7c75cc11ac56535e3956a50a024296f94a67b8b", "patch": "@@ -572,6 +572,7 @@ impl Pat {\n                     && after.iter().all(|p| p.walk(it))\n             }\n             PatKind::Wild\n+            | PatKind::Rest\n             | PatKind::Lit(_)\n             | PatKind::Range(..)\n             | PatKind::Ident(..)\n@@ -661,6 +662,20 @@ pub enum PatKind {\n     ///     `PatKind::Slice(box [a, b], Some(i), box [y, z])`\n     Slice(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>),\n \n+    /// A rest pattern `..`.\n+    ///\n+    /// Syntactically it is valid anywhere.\n+    ///\n+    /// Semantically however, it only has meaning immediately inside:\n+    /// - a slice pattern: `[a, .., b]`,\n+    /// - a binding pattern immediately inside a slice pattern: `[a, r @ ..]`,\n+    /// - a tuple pattern: `(a, .., b)`,\n+    /// - a tuple struct/variant pattern: `$path(a, .., b)`.\n+    ///\n+    /// In all of these cases, an additional restriction applies,\n+    /// only one rest pattern may occur in the pattern sequences.\n+    Rest,\n+\n     /// Parentheses in patterns used for grouping (i.e., `(PAT)`).\n     Paren(P<Pat>),\n "}, {"sha": "eb25956a7699fd4c96230fed72b4e50b6b418e35", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=f7c75cc11ac56535e3956a50a024296f94a67b8b", "patch": "@@ -1020,7 +1020,7 @@ pub fn noop_visit_pat<T: MutVisitor>(pat: &mut P<Pat>, vis: &mut T) {\n     let Pat { id, node, span } = pat.deref_mut();\n     vis.visit_id(id);\n     match node {\n-        PatKind::Wild => {}\n+        PatKind::Wild | PatKind::Rest => {}\n         PatKind::Ident(_binding_mode, ident, sub) => {\n             vis.visit_ident(ident);\n             visit_opt(sub, |sub| vis.visit_pat(sub));"}, {"sha": "a067ae0e91889b8860508545350d38bfc18ee5ef", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=f7c75cc11ac56535e3956a50a024296f94a67b8b", "patch": "@@ -2478,6 +2478,7 @@ impl<'a> State<'a> {\n                                    |s, p| s.print_pat(p));\n                 self.s.word(\"]\");\n             }\n+            PatKind::Rest => self.s.word(\"..\"),\n             PatKind::Paren(ref inner) => {\n                 self.popen();\n                 self.print_pat(inner);"}, {"sha": "7c814bf3397f39fdd902de6d7b5a5e9ad62564d8", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c75cc11ac56535e3956a50a024296f94a67b8b/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=f7c75cc11ac56535e3956a50a024296f94a67b8b", "patch": "@@ -463,7 +463,7 @@ pub fn walk_pat<'a, V: Visitor<'a>>(visitor: &mut V, pattern: &'a Pat) {\n             visitor.visit_expr(lower_bound);\n             visitor.visit_expr(upper_bound);\n         }\n-        PatKind::Wild => (),\n+        PatKind::Wild | PatKind::Rest => {},\n         PatKind::Slice(ref prepatterns, ref slice_pattern, ref postpatterns) => {\n             walk_list!(visitor, visit_pat, prepatterns);\n             walk_list!(visitor, visit_pat, slice_pattern);"}]}