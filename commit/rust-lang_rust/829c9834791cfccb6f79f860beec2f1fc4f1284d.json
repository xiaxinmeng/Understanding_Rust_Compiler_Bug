{"sha": "829c9834791cfccb6f79f860beec2f1fc4f1284d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOWM5ODM0NzkxY2ZjY2I2Zjc5Zjg2MGJlZWMyZjFmYzRmMTI4NGQ=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-05-24T19:35:31Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-05-24T21:26:16Z"}, "message": "Update the list of reserved words.", "tree": {"sha": "e913bf0008545dbbbbade61e40cf48d1fac8e2f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e913bf0008545dbbbbade61e40cf48d1fac8e2f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/829c9834791cfccb6f79f860beec2f1fc4f1284d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/829c9834791cfccb6f79f860beec2f1fc4f1284d", "html_url": "https://github.com/rust-lang/rust/commit/829c9834791cfccb6f79f860beec2f1fc4f1284d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/829c9834791cfccb6f79f860beec2f1fc4f1284d/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccd8d5573ea41fbcdd2b8212f7ec28876e15fd32", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd8d5573ea41fbcdd2b8212f7ec28876e15fd32", "html_url": "https://github.com/rust-lang/rust/commit/ccd8d5573ea41fbcdd2b8212f7ec28876e15fd32"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "13b46367a966dc4a7121d4236deb1d2981202599", "filename": "doc/rust.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/829c9834791cfccb6f79f860beec2f1fc4f1284d/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/829c9834791cfccb6f79f860beec2f1fc4f1284d/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=829c9834791cfccb6f79f860beec2f1fc4f1284d", "patch": "@@ -210,19 +210,19 @@ The keywords in [source files](#source-files) are the following strings:\n \n ~~~~~~~~ {.keyword}\n alt assert\n-break\n+be break\n check claim class const cont copy crust\n-do\n+drop\n else enum export\n fail false fn for\n if iface impl import\n let log loop\n mod mut\n-native\n+native new\n pure\n resource ret\n-true type\n-unsafe use\n+true trait type\n+unchecked unsafe\n while\n ~~~~~~~~\n \n@@ -746,7 +746,7 @@ fn main() {\n ##### Export declarations\n \n ~~~~~~~~ {.ebnf .gram}\n-export_decl : \"export\" ident [ ',' ident ] * \n+export_decl : \"export\" ident [ ',' ident ] *\n             | \"export\" ident \"::{}\"\n             | \"export\" ident '{' ident [ ',' ident ] * '}' ;\n ~~~~~~~~\n@@ -812,12 +812,12 @@ implicitly exports all of `t`'s constructors. For example:\n ~~~~~~~~\n mod foo {\n     export t;\n-    \n+\n     enum t {a, b, c}\n }\n ~~~~~~~~\n \n-Here, `foo` imports `t`, `a`, `b`, and `c`. \n+Here, `foo` imports `t`, `a`, `b`, and `c`.\n \n The second and third forms of export declaration can be used to export\n an `enum` item without exporting all of its constructors. These two\n@@ -834,7 +834,7 @@ mod foo {\n \n     enum abstract {x, y, z}\n     enum slightly_abstract {a, b, c, d}\n-} \n+}\n ~~~~~~~~\n \n Module `foo` exports the types `abstract` and `slightly_abstract`, as well as\n@@ -1078,7 +1078,7 @@ An _enumeration item_ simultaneously declares a new nominal\n [enumerated type](#enumerated-types) as well as a set of *constructors* that\n can be used to create or pattern-match values of the corresponding enumerated\n type. Note that `enum` previously was referred to as a `tag`, however this\n-definition has been deprecated. While `tag` is no longer used, the two are \n+definition has been deprecated. While `tag` is no longer used, the two are\n synonymous.\n \n The constructors of an `enum` type may be recursive: that is, each constructor"}]}