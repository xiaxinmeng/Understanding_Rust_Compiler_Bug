{"sha": "338647db73028aca0198f5330b15bf4bb769a1ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzODY0N2RiNzMwMjhhY2EwMTk4ZjUzMzBiMTViZjRiYjc2OWExZWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-12T11:46:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-12T11:46:50Z"}, "message": "Auto merge of #82422 - petrochenkov:allunst, r=oli-obk\n\nexpand: Do not allocate `Lrc` for `allow_internal_unstable` list unless necessary\n\nThis allocation is done for any macro defined in the current crate, or used from a different crate.\nEDIT: This also removes an `Lrc` increment from each *use* of such macro, which may be more significant.\nNoticed when reviewing https://github.com/rust-lang/rust/pull/82367.\nThis probably doesn't matter, but let's do a perf run.", "tree": {"sha": "c8941a1989734b947680de1d8435fb8ac4acaa42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8941a1989734b947680de1d8435fb8ac4acaa42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/338647db73028aca0198f5330b15bf4bb769a1ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/338647db73028aca0198f5330b15bf4bb769a1ea", "html_url": "https://github.com/rust-lang/rust/commit/338647db73028aca0198f5330b15bf4bb769a1ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/338647db73028aca0198f5330b15bf4bb769a1ea/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cc64a34e9823a4ce6491dc5e13e920cd4f5aa31", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cc64a34e9823a4ce6491dc5e13e920cd4f5aa31", "html_url": "https://github.com/rust-lang/rust/commit/0cc64a34e9823a4ce6491dc5e13e920cd4f5aa31"}, {"sha": "ddd20ef8cba83d97bdfd0b1e113e6ff7ee6e93f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd20ef8cba83d97bdfd0b1e113e6ff7ee6e93f3", "html_url": "https://github.com/rust-lang/rust/commit/ddd20ef8cba83d97bdfd0b1e113e6ff7ee6e93f3"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "dd93fe8350e4202a252f49edea62dac26ade56b7", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/338647db73028aca0198f5330b15bf4bb769a1ea/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/338647db73028aca0198f5330b15bf4bb769a1ea/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=338647db73028aca0198f5330b15bf4bb769a1ea", "patch": "@@ -775,7 +775,7 @@ impl SyntaxExtension {\n         attrs: &[ast::Attribute],\n     ) -> SyntaxExtension {\n         let allow_internal_unstable =\n-            Some(attr::allow_internal_unstable(sess, &attrs).collect::<Vec<Symbol>>().into());\n+            attr::allow_internal_unstable(sess, &attrs).collect::<Vec<Symbol>>();\n \n         let mut local_inner_macros = false;\n         if let Some(macro_export) = sess.find_by_name(attrs, sym::macro_export) {\n@@ -803,7 +803,8 @@ impl SyntaxExtension {\n         SyntaxExtension {\n             kind,\n             span,\n-            allow_internal_unstable,\n+            allow_internal_unstable: (!allow_internal_unstable.is_empty())\n+                .then(|| allow_internal_unstable.into()),\n             allow_internal_unsafe: sess.contains_name(attrs, sym::allow_internal_unsafe),\n             local_inner_macros,\n             stability: stability.map(|(s, _)| s),"}]}