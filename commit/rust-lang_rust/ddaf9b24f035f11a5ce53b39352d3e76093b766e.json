{"sha": "ddaf9b24f035f11a5ce53b39352d3e76093b766e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYWY5YjI0ZjAzNWYxMWE1Y2U1M2IzOTM1MmQzZTc2MDkzYjc2NmU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-06-28T23:06:20Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-22T18:38:39Z"}, "message": "Rename {NonZero,Shared,Unique}::new_checked to new", "tree": {"sha": "97aa7652e96028f7e03cc098ae8322a96b7b2597", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97aa7652e96028f7e03cc098ae8322a96b7b2597"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddaf9b24f035f11a5ce53b39352d3e76093b766e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddaf9b24f035f11a5ce53b39352d3e76093b766e", "html_url": "https://github.com/rust-lang/rust/commit/ddaf9b24f035f11a5ce53b39352d3e76093b766e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddaf9b24f035f11a5ce53b39352d3e76093b766e/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a08ad0443631ca86e61526916fb4ee61fe1abce", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a08ad0443631ca86e61526916fb4ee61fe1abce", "html_url": "https://github.com/rust-lang/rust/commit/0a08ad0443631ca86e61526916fb4ee61fe1abce"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "65ebb8c5ae37640cf92a2fa428a44e9eb55931fb", "filename": "src/libcore/nonzero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddaf9b24f035f11a5ce53b39352d3e76093b766e/src%2Flibcore%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddaf9b24f035f11a5ce53b39352d3e76093b766e/src%2Flibcore%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnonzero.rs?ref=ddaf9b24f035f11a5ce53b39352d3e76093b766e", "patch": "@@ -75,7 +75,7 @@ impl<T: Zeroable> NonZero<T> {\n \n     /// Creates an instance of NonZero with the provided value.\n     #[inline]\n-    pub fn new_checked(inner: T) -> Option<Self> {\n+    pub fn new(inner: T) -> Option<Self> {\n         if inner.is_zero() {\n             None\n         } else {"}, {"sha": "633cd20bbf29aaa6a52ab01ad0d598a511cf543f", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ddaf9b24f035f11a5ce53b39352d3e76093b766e/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddaf9b24f035f11a5ce53b39352d3e76093b766e/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=ddaf9b24f035f11a5ce53b39352d3e76093b766e", "patch": "@@ -1115,8 +1115,8 @@ impl<T: ?Sized> Unique<T> {\n     }\n \n     /// Creates a new `Unique` if `ptr` is non-null.\n-    pub fn new_checked(ptr: *mut T) -> Option<Self> {\n-        NonZero::new_checked(ptr as *const T).map(|nz| Unique { pointer: nz, _marker: PhantomData })\n+    pub fn new(ptr: *mut T) -> Option<Self> {\n+        NonZero::new(ptr as *const T).map(|nz| Unique { pointer: nz, _marker: PhantomData })\n     }\n \n     /// Acquires the underlying `*mut` pointer.\n@@ -1234,8 +1234,8 @@ impl<T: ?Sized> Shared<T> {\n     }\n \n     /// Creates a new `Shared` if `ptr` is non-null.\n-    pub fn new_checked(ptr: *mut T) -> Option<Self> {\n-        NonZero::new_checked(ptr as *const T).map(|nz| Shared { pointer: nz, _marker: PhantomData })\n+    pub fn new(ptr: *mut T) -> Option<Self> {\n+        NonZero::new(ptr as *const T).map(|nz| Shared { pointer: nz, _marker: PhantomData })\n     }\n \n     /// Acquires the underlying `*mut` pointer."}]}