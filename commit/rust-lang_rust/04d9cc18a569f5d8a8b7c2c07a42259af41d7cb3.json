{"sha": "04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZDljYzE4YTU2OWY1ZDhhOGI3YzJjMDdhNDIyNTlhZjQxZDdjYjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-03T00:33:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-03T00:33:33Z"}, "message": "rt: Protect rust_task::supervisor with a lock", "tree": {"sha": "f8a14162b39a7a355dc2bdda74551771483f603d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8a14162b39a7a355dc2bdda74551771483f603d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3", "html_url": "https://github.com/rust-lang/rust/commit/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4ce965ce70f7f7ffa62df721d083cb3eafeb19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ce965ce70f7f7ffa62df721d083cb3eafeb19d", "html_url": "https://github.com/rust-lang/rust/commit/f4ce965ce70f7f7ffa62df721d083cb3eafeb19d"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "756dc0fbc4d2d91041262d988bd11d3c75b75369", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3", "patch": "@@ -77,7 +77,6 @@ rust_task::rust_task(rust_task_thread *thread, rust_task_list *state,\n     state(state),\n     cond(NULL),\n     cond_name(\"none\"),\n-    supervisor(spawner),\n     list_index(-1),\n     next_port_id(0),\n     rendezvous_ptr(0),\n@@ -92,7 +91,8 @@ rust_task::rust_task(rust_task_thread *thread, rust_task_list *state,\n     reentered_rust_stack(false),\n     c_stack(NULL),\n     next_c_sp(0),\n-    next_rust_sp(0)\n+    next_rust_sp(0),\n+    supervisor(spawner)\n {\n     LOGPTR(thread, \"new task\", (uintptr_t)this);\n     DLOG(thread, task, \"sizeof(task) = %d (0x%x)\", sizeof *this, sizeof *this);\n@@ -103,6 +103,7 @@ rust_task::rust_task(rust_task_thread *thread, rust_task_list *state,\n     }\n }\n \n+// NB: This does not always run on the task's scheduler thread\n void\n rust_task::delete_this()\n {\n@@ -112,8 +113,11 @@ rust_task::delete_this()\n          name, (uintptr_t)this, ref_count);\n \n     // FIXME: We should do this when the task exits, not in the destructor\n-    if (supervisor) {\n-        supervisor->deref();\n+    {\n+        scoped_lock with(supervisor_lock);\n+        if (supervisor) {\n+            supervisor->deref();\n+        }\n     }\n \n     /* FIXME: tighten this up, there are some more\n@@ -302,6 +306,7 @@ rust_task::conclude_failure() {\n \n void\n rust_task::fail_parent() {\n+    scoped_lock with(supervisor_lock);\n     if (supervisor) {\n         DLOG(thread, task,\n              \"task %s @0x%\" PRIxPTR\n@@ -317,6 +322,7 @@ rust_task::fail_parent() {\n void\n rust_task::unsupervise()\n {\n+    scoped_lock with(supervisor_lock);\n     if (supervisor) {\n         DLOG(thread, task,\n              \"task %s @0x%\" PRIxPTR"}, {"sha": "28446d9048ab72c41a01a06c2e10c6673ceacf0a", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=04d9cc18a569f5d8a8b7c2c07a42259af41d7cb3", "patch": "@@ -71,7 +71,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     rust_task_list *state;\n     rust_cond *cond;\n     const char *cond_name;\n-    rust_task *supervisor;     // Parent-link for failure propagation.\n     int32_t list_index;\n \n     rust_port_id next_port_id;\n@@ -120,6 +119,9 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     rust_port_selector port_selector;\n \n+    lock_and_signal supervisor_lock;\n+    rust_task *supervisor;     // Parent-link for failure propagation.\n+\n     // Called when the atomic refcount reaches zero\n     void delete_this();\n "}]}