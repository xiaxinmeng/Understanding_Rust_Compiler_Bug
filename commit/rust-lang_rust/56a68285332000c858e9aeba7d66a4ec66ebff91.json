{"sha": "56a68285332000c858e9aeba7d66a4ec66ebff91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YTY4Mjg1MzMyMDAwYzg1OGU5YWViYTdkNjZhNGVjNjZlYmZmOTE=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2018-02-18T23:05:24Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2018-02-22T23:13:21Z"}, "message": "Implement --remap-path-prefix\n\nRemove experimental -Zremap-path-prefix-from/to, and replace it with\nthe stabilized --remap-path-prefix=from=to variant.\n\nThis is an implementation for issue of #41555.", "tree": {"sha": "2eefbd5dddbb4458f91f1ca2eddb9eccb6850928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eefbd5dddbb4458f91f1ca2eddb9eccb6850928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56a68285332000c858e9aeba7d66a4ec66ebff91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56a68285332000c858e9aeba7d66a4ec66ebff91", "html_url": "https://github.com/rust-lang/rust/commit/56a68285332000c858e9aeba7d66a4ec66ebff91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56a68285332000c858e9aeba7d66a4ec66ebff91/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "html_url": "https://github.com/rust-lang/rust/commit/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f"}], "stats": {"total": 108, "additions": 38, "deletions": 70}, "files": [{"sha": "39d105399594535a5f0885e67369a796f918e696", "filename": "src/doc/man/rustc.1", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Fdoc%2Fman%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Fdoc%2Fman%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fman%2Frustc.1?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -125,6 +125,16 @@ Print version info and exit.\n \\fB\\-v\\fR, \\fB\\-\\-verbose\\fR\n Use verbose output.\n .TP\n+\\fB\\-\\-remap\\-path\\-prefix\\fR \\fIfrom\\fR=\\fIto\\fR\n+Remap source path prefixes in all output, including compiler diagnostics, debug information,\n+macro expansions, etc. The \\fIfrom\\fR=\\fIto\\fR parameter is scanned from right to left, so \\fIfrom\\fR\n+may contain '=', but \\fIto\\fR may not.\n+\n+This is useful for normalizing build products, for example by removing the current directory out of\n+pathnames emitted into the object files. The replacement is purely textual, with no consideration of\n+the current system's pathname syntax. For example \\fI\\-\\-remap\\-path\\-prefix foo=bar\\fR will\n+match \\fBfoo/lib.rs\\fR but not \\fB./foo/lib.rs\\fR.\n+.TP\n \\fB\\-\\-extern\\fR \\fINAME\\fR=\\fIPATH\\fR\n Specify where an external rust library is located. These should match\n \\fIextern\\fR declarations in the crate's source code."}, {"sha": "8ca04d253259258af86b8e2546cc28f943d8734d", "filename": "src/doc/unstable-book/src/compiler-flags/remap-path-prefix.md", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fremap-path-prefix.md", "raw_url": "https://github.com/rust-lang/rust/raw/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fremap-path-prefix.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fremap-path-prefix.md?ref=b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "patch": "@@ -1,37 +0,0 @@\n-# `remap-path-prefix`\n-\n-The tracking issue for this feature is: [#41555](https://github.com/rust-lang/rust/issues/41555)\n-\n-------------------------\n-\n-The `-Z remap-path-prefix-from`, `-Z remap-path-prefix-to` commandline option\n-pair allows to replace prefixes of any file paths the compiler emits in various\n-places. This is useful for bringing debuginfo paths into a well-known form and\n-for achieving reproducible builds independent of the directory the compiler was\n-executed in. All paths emitted by the compiler are affected, including those in\n-error messages.\n-\n-In order to map all paths starting with `/home/foo/my-project/src` to\n-`/sources/my-project`, one would invoke the compiler as follows:\n-\n-```text\n-rustc -Zremap-path-prefix-from=\"/home/foo/my-project/src\" -Zremap-path-prefix-to=\"/sources/my-project\"\n-```\n-\n-Debuginfo for code from the file `/home/foo/my-project/src/foo/mod.rs`,\n-for example, would then point debuggers to `/sources/my-project/foo/mod.rs`\n-instead of the original file.\n-\n-The options can be specified multiple times when multiple prefixes should be\n-mapped:\n-\n-```text\n-rustc -Zremap-path-prefix-from=\"/home/foo/my-project/src\" \\\n-      -Zremap-path-prefix-to=\"/sources/my-project\" \\\n-      -Zremap-path-prefix-from=\"/home/foo/my-project/build-dir\" \\\n-      -Zremap-path-prefix-to=\"/stable-build-dir\"\n-```\n-\n-When the options are given multiple times, the nth `-from` will be matched up\n-with the nth `-to` and they can appear anywhere on the commandline. Mappings\n-specified later on the line will take precedence over earlier ones."}, {"sha": "0f31ac15a4545ea6211afa319ec18f7b6a9a568b", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -316,7 +316,7 @@ impl SourceFile {\n     /// If the code span associated with this `SourceFile` was generated by an external macro, this\n     /// may not be an actual path on the filesystem. Use [`is_real`] to check.\n     ///\n-    /// Also note that even if `is_real` returns `true`, if `-Z remap-path-prefix-*` was passed on\n+    /// Also note that even if `is_real` returns `true`, if `--remap-path-prefix` was passed on\n     /// the command line, the path as given may not actually be valid.\n     ///\n     /// [`is_real`]: #method.is_real"}, {"sha": "1d554cb0d821df4f4702666ee80cc710969087da", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 21, "deletions": 26, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -435,6 +435,9 @@ top_level_options!(\n         // if we otherwise use the defaults of rustc.\n         cli_forced_codegen_units: Option<usize> [UNTRACKED],\n         cli_forced_thinlto_off: bool [UNTRACKED],\n+\n+        // Remap source path prefixes in all output (messages, object files, debug, etc)\n+        remap_path_prefix: Vec<(PathBuf, PathBuf)> [UNTRACKED],\n     }\n );\n \n@@ -617,6 +620,7 @@ pub fn basic_options() -> Options {\n         actually_rustdoc: false,\n         cli_forced_codegen_units: None,\n         cli_forced_thinlto_off: false,\n+        remap_path_prefix: Vec::new(),\n     }\n }\n \n@@ -635,11 +639,7 @@ impl Options {\n     }\n \n     pub fn file_path_mapping(&self) -> FilePathMapping {\n-        FilePathMapping::new(\n-            self.debugging_opts.remap_path_prefix_from.iter().zip(\n-                self.debugging_opts.remap_path_prefix_to.iter()\n-            ).map(|(src, dst)| (src.clone(), dst.clone())).collect()\n-        )\n+        FilePathMapping::new(self.remap_path_prefix.clone())\n     }\n \n     /// True if there will be an output file generated\n@@ -1269,10 +1269,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"make Rustc print the total optimization fuel used by a crate\"),\n-    remap_path_prefix_from: Vec<PathBuf> = (vec![], parse_pathbuf_push, [UNTRACKED],\n-        \"add a source pattern to the file path remapping config\"),\n-    remap_path_prefix_to: Vec<PathBuf> = (vec![], parse_pathbuf_push, [UNTRACKED],\n-        \"add a mapping target to the file path remapping config\"),\n     force_unstable_if_unmarked: bool = (false, parse_bool, [TRACKED],\n         \"force all crates to be `rustc_private` unstable\"),\n     pre_link_arg: Vec<String> = (vec![], parse_string_push, [UNTRACKED],\n@@ -1595,6 +1591,7 @@ pub fn rustc_optgroups() -> Vec<RustcOptGroup> {\n                   `expanded` (crates expanded), or\n                   `expanded,identified` (fully parenthesized, AST nodes with IDs).\",\n                  \"TYPE\"),\n+        opt::multi_s(\"\", \"remap-path-prefix\", \"remap source names in output\", \"FROM=TO\"),\n     ]);\n     opts\n }\n@@ -1718,23 +1715,6 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n         output_types.insert(OutputType::Exe, None);\n     }\n \n-    let remap_path_prefix_sources = debugging_opts.remap_path_prefix_from.len();\n-    let remap_path_prefix_targets = debugging_opts.remap_path_prefix_to.len();\n-\n-    if remap_path_prefix_targets < remap_path_prefix_sources {\n-        for source in &debugging_opts.remap_path_prefix_from[remap_path_prefix_targets..] {\n-            early_error(error_format,\n-                &format!(\"option `-Zremap-path-prefix-from='{}'` does not have \\\n-                         a corresponding `-Zremap-path-prefix-to`\", source.display()))\n-        }\n-    } else if remap_path_prefix_targets > remap_path_prefix_sources {\n-        for target in &debugging_opts.remap_path_prefix_to[remap_path_prefix_sources..] {\n-            early_error(error_format,\n-                &format!(\"option `-Zremap-path-prefix-to='{}'` does not have \\\n-                          a corresponding `-Zremap-path-prefix-from`\", target.display()))\n-        }\n-    }\n-\n     let mut cg = build_codegen_options(matches, error_format);\n     let mut codegen_units = cg.codegen_units;\n     let mut disable_thinlto = false;\n@@ -1968,6 +1948,20 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n \n     let crate_name = matches.opt_str(\"crate-name\");\n \n+    let remap_path_prefix = matches.opt_strs(\"remap-path-prefix\")\n+        .into_iter()\n+        .map(|remap| {\n+            let mut parts = remap.rsplitn(2, '='); // reverse iterator\n+            let to = parts.next();\n+            let from = parts.next();\n+            match (from, to) {\n+                (Some(from), Some(to)) => (PathBuf::from(from), PathBuf::from(to)),\n+                _ => early_error(error_format,\n+                        \"--remap-path-prefix must contain '=' between FROM and TO\"),\n+            }\n+        })\n+        .collect();\n+\n     (Options {\n         crate_types,\n         optimize: opt_level,\n@@ -1995,6 +1989,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n         actually_rustdoc: false,\n         cli_forced_codegen_units: codegen_units,\n         cli_forced_thinlto_off: disable_thinlto,\n+        remap_path_prefix,\n     },\n     cfg)\n }"}, {"sha": "d140b135416c9c7148bf66c6911d97fa4f33f4f6", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -323,7 +323,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                 // paths because any relative paths are potentially relative to\n                 // a wrong directory.\n                 // However, if a path has been modified via\n-                // `-Zremap-path-prefix` we assume the user has already set\n+                // `--remap-path-prefix` we assume the user has already set\n                 // things up the way they want and don't touch the path values\n                 // anymore.\n                 match filemap.name {"}, {"sha": "926548b60318be167473d8235af3e7d41771b4b4", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -129,7 +129,7 @@ pub struct CodeMap {\n     pub(super) files: RefCell<Vec<Rc<FileMap>>>,\n     file_loader: Box<FileLoader>,\n     // This is used to apply the file path remapping as specified via\n-    // -Zremap-path-prefix to all FileMaps allocated within this CodeMap.\n+    // --remap-path-prefix to all FileMaps allocated within this CodeMap.\n     path_mapping: FilePathMapping,\n     stable_id_to_filemap: RefCell<FxHashMap<StableFilemapId, Rc<FileMap>>>,\n     /// In case we are in a doctest, replace all file names with the PathBuf,"}, {"sha": "e3f1417456c8ac60bdd3f237127c31829bf96842", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -664,7 +664,7 @@ pub struct FileMap {\n     /// originate from files has names between angle brackets by convention,\n     /// e.g. `<anon>`\n     pub name: FileName,\n-    /// True if the `name` field above has been modified by -Zremap-path-prefix\n+    /// True if the `name` field above has been modified by --remap-path-prefix\n     pub name_was_remapped: bool,\n     /// The unmapped path of the file that the source came from.\n     /// Set to `None` if the FileMap was imported from an external crate."}, {"sha": "3ef0ff9ef0687164b71b33c5a1a1006eef2ebf41", "filename": "src/test/codegen/remap_path_prefix/auxiliary/remap_path_prefix_aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fremap_path_prefix_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fremap_path_prefix_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fremap_path_prefix_aux.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-tidy-linelength\n \n-// compile-flags: -g  -Zremap-path-prefix-from={{cwd}} -Zremap-path-prefix-to=/the/aux-cwd -Zremap-path-prefix-from={{src-base}}/remap_path_prefix/auxiliary -Zremap-path-prefix-to=/the/aux-src\n+// compile-flags: -g  --remap-path-prefix={{cwd}}=/the/aux-cwd --remap-path-prefix={{src-base}}/remap_path_prefix/auxiliary=/the/aux-src\n \n #[inline]\n pub fn some_aux_function() -> i32 {"}, {"sha": "2f46b6c5d48da28412ce3e08d00f337afb4a4c34", "filename": "src/test/codegen/remap_path_prefix/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -11,7 +11,7 @@\n // ignore-windows\n // ignore-tidy-linelength\n \n-// compile-flags: -g  -C no-prepopulate-passes -Zremap-path-prefix-from={{cwd}} -Zremap-path-prefix-to=/the/cwd -Zremap-path-prefix-from={{src-base}} -Zremap-path-prefix-to=/the/src\n+// compile-flags: -g  -C no-prepopulate-passes --remap-path-prefix={{cwd}}=/the/cwd --remap-path-prefix={{src-base}}=/the/src\n // aux-build:remap_path_prefix_aux.rs\n \n extern crate remap_path_prefix_aux;"}, {"sha": "c80b334623b43f0112523c34a14907e12180ca95", "filename": "src/test/incremental/remapped_paths_cc/auxiliary/extern_crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fauxiliary%2Fextern_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56a68285332000c858e9aeba7d66a4ec66ebff91/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fauxiliary%2Fextern_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fauxiliary%2Fextern_crate.rs?ref=56a68285332000c858e9aeba7d66a4ec66ebff91", "patch": "@@ -12,7 +12,7 @@\n \n //[rpass1] compile-flags: -g\n //[rpass2] compile-flags: -g\n-//[rpass3] compile-flags: -g -Zremap-path-prefix-from={{src-base}} -Zremap-path-prefix-to=/the/src\n+//[rpass3] compile-flags: -g --remap-path-prefix={{src-base}}=/the/src\n \n #![feature(rustc_attrs)]\n #![crate_type=\"rlib\"]"}]}