{"sha": "4ed2bf68021dac59a9a32537aa983aed8d2c0439", "node_id": "C_kwDOAAsO6NoAKDRlZDJiZjY4MDIxZGFjNTlhOWEzMjUzN2FhOTgzYWVkOGQyYzA0Mzk", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-13T20:05:32Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-13T20:05:32Z"}, "message": "Remove unused symbols", "tree": {"sha": "b93fb9c08cee53e3035b1ec15f74310829a2be9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b93fb9c08cee53e3035b1ec15f74310829a2be9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ed2bf68021dac59a9a32537aa983aed8d2c0439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed2bf68021dac59a9a32537aa983aed8d2c0439", "html_url": "https://github.com/rust-lang/rust/commit/4ed2bf68021dac59a9a32537aa983aed8d2c0439", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ed2bf68021dac59a9a32537aa983aed8d2c0439/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409c3ce44165d61ad573cacccf3f462ad834d524", "url": "https://api.github.com/repos/rust-lang/rust/commits/409c3ce44165d61ad573cacccf3f462ad834d524", "html_url": "https://github.com/rust-lang/rust/commit/409c3ce44165d61ad573cacccf3f462ad834d524"}], "stats": {"total": 37, "additions": 0, "deletions": 37}, "files": [{"sha": "d136d19431e618c90fe26e6f1edac89f1c596f82", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4ed2bf68021dac59a9a32537aa983aed8d2c0439/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed2bf68021dac59a9a32537aa983aed8d2c0439/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=4ed2bf68021dac59a9a32537aa983aed8d2c0439", "patch": "@@ -170,8 +170,6 @@ symbols! {\n         Count,\n         Cow,\n         Debug,\n-        DebugStruct,\n-        DebugTuple,\n         Decodable,\n         Decoder,\n         DecorateLint,\n@@ -208,7 +206,6 @@ symbols! {\n         Input,\n         Into,\n         IntoDiagnostic,\n-        IntoFuture,\n         IntoIterator,\n         IoRead,\n         IoWrite,\n@@ -253,7 +250,6 @@ symbols! {\n         Pointer,\n         Poll,\n         ProcMacro,\n-        ProcMacroHack,\n         ProceduralMasqueradeDummyType,\n         Range,\n         RangeFrom,\n@@ -329,7 +325,6 @@ symbols! {\n         abi_vectorcall,\n         abi_x86_interrupt,\n         abort,\n-        aborts,\n         add,\n         add_assign,\n         add_with_overflow,\n@@ -341,7 +336,6 @@ symbols! {\n         align,\n         align_offset,\n         alignment,\n-        alignstack,\n         all,\n         alloc,\n         alloc_error_handler,\n@@ -430,7 +424,6 @@ symbols! {\n         bool,\n         borrowck_graphviz_format,\n         borrowck_graphviz_postflow,\n-        borrowck_graphviz_preflow,\n         box_free,\n         box_patterns,\n         box_syntax,\n@@ -466,7 +459,6 @@ symbols! {\n         cfg_target_feature,\n         cfg_target_has_atomic,\n         cfg_target_has_atomic_equal_alignment,\n-        cfg_target_has_atomic_load_store,\n         cfg_target_thread_local,\n         cfg_target_vendor,\n         cfg_version,\n@@ -491,7 +483,6 @@ symbols! {\n         cold,\n         collapse_debuginfo,\n         column,\n-        compare_and_swap,\n         compare_exchange,\n         compare_exchange_weak,\n         compile_error,\n@@ -521,7 +512,6 @@ symbols! {\n         const_fn_unsize,\n         const_for,\n         const_format_args,\n-        const_generic_defaults,\n         const_generics,\n         const_generics_defaults,\n         const_if_match,\n@@ -540,20 +530,16 @@ symbols! {\n         const_trait,\n         const_trait_bound_opt_out,\n         const_trait_impl,\n-        const_transmute,\n         const_try,\n         constant,\n         constructor,\n-        contents,\n         context,\n-        convert,\n         copy,\n         copy_closures,\n         copy_nonoverlapping,\n         copysignf32,\n         copysignf64,\n         core,\n-        core_intrinsics,\n         core_panic,\n         core_panic_2015_macro,\n         core_panic_macro,\n@@ -591,7 +577,6 @@ symbols! {\n         debug_assertions,\n         debug_struct,\n         debug_struct_fields_finish,\n-        debug_trait_builder,\n         debug_tuple,\n         debug_tuple_fields_finish,\n         debugger_visualizer,\n@@ -623,7 +608,6 @@ symbols! {\n         discriminant_type,\n         discriminant_value,\n         dispatch_from_dyn,\n-        display_trait,\n         div,\n         div_assign,\n         doc,\n@@ -637,7 +621,6 @@ symbols! {\n         doc_primitive,\n         doc_spotlight,\n         doctest,\n-        document_private_items,\n         dotdot: \"..\",\n         dotdot_in_tuple_patterns,\n         dotdoteq_in_patterns,\n@@ -654,7 +637,6 @@ symbols! {\n         dyn_star,\n         dyn_trait,\n         e,\n-        edition_macro_pats,\n         edition_panic,\n         eh_catch_typeinfo,\n         eh_personality,\n@@ -667,7 +649,6 @@ symbols! {\n         encode,\n         end,\n         env,\n-        env_macro,\n         eprint_macro,\n         eprintln_macro,\n         eq,\n@@ -718,7 +699,6 @@ symbols! {\n         field_init_shorthand,\n         file,\n         fill,\n-        finish,\n         flags,\n         float,\n         float_to_int_unchecked,\n@@ -727,8 +707,6 @@ symbols! {\n         fmaf32,\n         fmaf64,\n         fmt,\n-        fmt_as_str,\n-        fmt_internals,\n         fmul_fast,\n         fn_align,\n         fn_must_use,\n@@ -743,7 +721,6 @@ symbols! {\n         format_args_macro,\n         format_args_nl,\n         format_macro,\n-        fp,\n         freeze,\n         freg,\n         frem_fast,\n@@ -806,7 +783,6 @@ symbols! {\n         ignore,\n         impl_header_lifetime_elision,\n         impl_lint_pass,\n-        impl_macros,\n         impl_trait_in_bindings,\n         impl_trait_in_fn_trait_return,\n         implied_by,\n@@ -835,7 +811,6 @@ symbols! {\n         instruction_set,\n         integer_: \"integer\",\n         integral,\n-        intel,\n         into_future,\n         into_iter,\n         intra_doc_pointers,\n@@ -1048,7 +1023,6 @@ symbols! {\n         optin_builtin_traits,\n         option,\n         option_env,\n-        option_env_macro,\n         options,\n         or,\n         or_patterns,\n@@ -1117,7 +1091,6 @@ symbols! {\n         proc_dash_macro: \"proc-macro\",\n         proc_macro,\n         proc_macro_attribute,\n-        proc_macro_def_site,\n         proc_macro_derive,\n         proc_macro_expr,\n         proc_macro_gen,\n@@ -1218,9 +1191,6 @@ symbols! {\n         rust_cold_cc,\n         rust_eh_catch_typeinfo,\n         rust_eh_personality,\n-        rust_eh_register_frames,\n-        rust_eh_unregister_frames,\n-        rust_oom,\n         rustc,\n         rustc_allocator,\n         rustc_allocator_zeroed,\n@@ -1293,7 +1263,6 @@ symbols! {\n         rustc_serialize,\n         rustc_skip_array_during_method_dispatch,\n         rustc_specialization_trait,\n-        rustc_stable,\n         rustc_std_internal_symbol,\n         rustc_strict_coherence,\n         rustc_symbol_name,\n@@ -1421,7 +1390,6 @@ symbols! {\n         static_recursion,\n         staticlib,\n         std,\n-        std_inject,\n         std_panic,\n         std_panic_2015_macro,\n         std_panic_macro,\n@@ -1463,10 +1431,8 @@ symbols! {\n         target_has_atomic_load_store,\n         target_os,\n         target_pointer_width,\n-        target_target_vendor,\n         target_thread_local,\n         target_vendor,\n-        task,\n         tbm_target_feature,\n         termination,\n         termination_trait,\n@@ -1478,7 +1444,6 @@ symbols! {\n         test_removed_feature,\n         test_runner,\n         test_unstable_lint,\n-        then_with,\n         thread,\n         thread_local,\n         thread_local_macro,\n@@ -1510,7 +1475,6 @@ symbols! {\n         try_trait_v2,\n         tt,\n         tuple,\n-        tuple_from_req,\n         tuple_indexing,\n         tuple_trait,\n         two_phase,\n@@ -1572,7 +1536,6 @@ symbols! {\n                           from crates.io via `Cargo.toml` instead?\",\n         untagged_unions,\n         unused_imports,\n-        unused_qualifications,\n         unwind,\n         unwind_attributes,\n         unwind_safe_trait,"}]}