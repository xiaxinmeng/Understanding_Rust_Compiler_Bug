{"sha": "c54dcf59aed7f44260df41a800e7855436a205eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NGRjZjU5YWVkN2Y0NDI2MGRmNDFhODAwZTc4NTU0MzZhMjA1ZWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-13T12:03:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-16T10:13:55Z"}, "message": "add some tests for retagging inside tuples and options", "tree": {"sha": "b33a18ff336b958297e509a7dbcb5a2a323499c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b33a18ff336b958297e509a7dbcb5a2a323499c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c54dcf59aed7f44260df41a800e7855436a205eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c54dcf59aed7f44260df41a800e7855436a205eb", "html_url": "https://github.com/rust-lang/rust/commit/c54dcf59aed7f44260df41a800e7855436a205eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c54dcf59aed7f44260df41a800e7855436a205eb/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1f895d6f2cc9090623652fbbe9029becb102189", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f895d6f2cc9090623652fbbe9029becb102189", "html_url": "https://github.com/rust-lang/rust/commit/a1f895d6f2cc9090623652fbbe9029becb102189"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "28a1f74c6ac20e5edd698a2ac70508962806f5a5", "filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_mut_option.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_mut_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_mut_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_mut_option.rs?ref=c54dcf59aed7f44260df41a800e7855436a205eb", "patch": "@@ -0,0 +1,11 @@\n+// Make sure that we cannot return a `&mut` that got already invalidated, not even in an `Option`.\n+fn foo(x: &mut (i32, i32)) -> Option<&mut i32> {\n+    let xraw = x as *mut (i32, i32);\n+    let ret = Some(unsafe { &mut (*xraw).1 });\n+    let _val = unsafe { *xraw }; // invalidate xref\n+    ret //~ ERROR does not exist on the stack\n+}\n+\n+fn main() {\n+    foo(&mut (1, 2));\n+}"}, {"sha": "3357af68a8411c1591eeaeddb6016ed072e28ef6", "filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_mut_tuple.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_mut_tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_mut_tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_mut_tuple.rs?ref=c54dcf59aed7f44260df41a800e7855436a205eb", "patch": "@@ -0,0 +1,11 @@\n+// Make sure that we cannot return a `&mut` that got already invalidated, not even in a tuple.\n+fn foo(x: &mut (i32, i32)) -> (&mut i32,) {\n+    let xraw = x as *mut (i32, i32);\n+    let ret = (unsafe { &mut (*xraw).1 },);\n+    let _val = unsafe { *xraw }; // invalidate xref\n+    ret //~ ERROR does not exist on the stack\n+}\n+\n+fn main() {\n+    foo(&mut (1, 2));\n+}"}, {"sha": "9d220991c330210cdeb66174c1217e782f7002d9", "filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_shr_option.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_shr_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_shr_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_shr_option.rs?ref=c54dcf59aed7f44260df41a800e7855436a205eb", "patch": "@@ -0,0 +1,11 @@\n+// Make sure that we cannot return a `&` that got already invalidated, not even in an `Option`.\n+fn foo(x: &mut (i32, i32)) -> Option<&i32> {\n+    let xraw = x as *mut (i32, i32);\n+    let ret = Some(unsafe { &(*xraw).1 });\n+    unsafe { *xraw = (42, 23) }; // unfreeze\n+    ret //~ ERROR is not frozen\n+}\n+\n+fn main() {\n+    foo(&mut (1, 2));\n+}"}, {"sha": "060fa25c2307e9f6e468a99fd20714f83a943ec2", "filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_shr_tuple.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_shr_tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dcf59aed7f44260df41a800e7855436a205eb/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_shr_tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Freturn_invalid_shr_tuple.rs?ref=c54dcf59aed7f44260df41a800e7855436a205eb", "patch": "@@ -0,0 +1,11 @@\n+// Make sure that we cannot return a `&` that got already invalidated, not even in a tuple.\n+fn foo(x: &mut (i32, i32)) -> (&i32,) {\n+    let xraw = x as *mut (i32, i32);\n+    let ret = (unsafe { &(*xraw).1 },);\n+    unsafe { *xraw = (42, 23) }; // unfreeze\n+    ret //~ ERROR is not frozen\n+}\n+\n+fn main() {\n+    foo(&mut (1, 2));\n+}"}]}