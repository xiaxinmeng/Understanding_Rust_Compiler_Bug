{"sha": "380fa264132ad481e73cbbf0f3a0feefd99a1d78", "node_id": "C_kwDOAAsO6NoAKDM4MGZhMjY0MTMyYWQ0ODFlNzNjYmJmMGYzYTBmZWVmZDk5YTFkNzg", "commit": {"author": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-02-14T09:31:58Z"}, "committer": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-02-14T09:31:58Z"}, "message": "Don't recover lifetimes/labels containing emojis as character literals\n\nNote that at the time of this commit, `unic-emoji-char` seems to have\ndata tables only up to Unicode 5.0, but Unicode is already newer than\nthis.\n\nA newer emoji such as `\ud83e\udd7a` will not be recognized as an emoji\nbut older emojis such as `\ud83d\udc31` will.", "tree": {"sha": "337f10e0613cf08057868680ef2798d27089deef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/337f10e0613cf08057868680ef2798d27089deef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/380fa264132ad481e73cbbf0f3a0feefd99a1d78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEze4qXcfh0ileWqZTxf1dMgFP20cFAmPrVaMACgkQxf1dMgFP\n20fSyRAApDLvqjJwarc6ICWtD6XL/Z6Z4dwbPPV2mC3semes8KKOs2NafX/2S7Vh\nUde0NkP2JMlYhJm6mM8eMzDH4gOyCY57SPOhfc41q6TjrGog5VrmP0cyYLpzmKHS\nHwrBFYRLraz2dXdXMyXlItiw3/1k7TbwDj5Kk8dUuewZ9wze25Apc6u9+ySDfv98\nth4vKN+662Z5Pzl2uXXCfINuK/kr9YDTZiSYpgPvCSfBj7RtT3ibYLYJJLOxLgUf\n3K8cS4WXiyYkmSU1rkFjeAmCKGet/TqpcMc6AIFa68ysgXNnZeYQg3xjMPcdw4jV\nF2y2Wp4NaNTg4fv+BDHFMfscMdnfACogG/qD1qLiv/2fPpjg562SY8gQRVpde90e\nG0DrURJfO91+OdQweSbGxu1KPxUHgSQpjF8k/DMgWffKjK9JYOcCIVOfE/c8uHiF\nnFQ3QTBWdLtxA7lX6Wygl6LWmTJxEpICjai+S+Ht8NKfuNb8cv/BoKdQ9/qWLK34\nl1IL7Rr8vjSsJlYyAb8RxjD7/+rlfy0b19pjaZgjHrvGrnbnri/oBe5mIqcoDMFw\nh9oRBC2b+q43n3D1HSfXacbnXxwKjrgKhzlVxKMrKd6nUCyj+v1Ejz4ky7mQbDnR\nJHCRh2B4fgWjoq6ME/sTb1X69wDoFh33HX/mblPXRPYoPzXVhbQ=\n=nocl\n-----END PGP SIGNATURE-----", "payload": "tree 337f10e0613cf08057868680ef2798d27089deef\nparent c3c6d73b04a718aceabc314bf231a20c90ccd601\nauthor \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1676367118 +0800\ncommitter \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1676367118 +0800\n\nDon't recover lifetimes/labels containing emojis as character literals\n\nNote that at the time of this commit, `unic-emoji-char` seems to have\ndata tables only up to Unicode 5.0, but Unicode is already newer than\nthis.\n\nA newer emoji such as `\ud83e\udd7a` will not be recognized as an emoji\nbut older emojis such as `\ud83d\udc31` will.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/380fa264132ad481e73cbbf0f3a0feefd99a1d78", "html_url": "https://github.com/rust-lang/rust/commit/380fa264132ad481e73cbbf0f3a0feefd99a1d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/380fa264132ad481e73cbbf0f3a0feefd99a1d78/comments", "author": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c6d73b04a718aceabc314bf231a20c90ccd601", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c6d73b04a718aceabc314bf231a20c90ccd601", "html_url": "https://github.com/rust-lang/rust/commit/c3c6d73b04a718aceabc314bf231a20c90ccd601"}], "stats": {"total": 185, "additions": 173, "deletions": 12}, "files": [{"sha": "b310b191d52735dfb478d14ac1333a9a00df2409", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/380fa264132ad481e73cbbf0f3a0feefd99a1d78/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380fa264132ad481e73cbbf0f3a0feefd99a1d78/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=380fa264132ad481e73cbbf0f3a0feefd99a1d78", "patch": "@@ -471,6 +471,8 @@ pub enum StashKey {\n     /// When an invalid lifetime e.g. `'2` should be reinterpreted\n     /// as a char literal in the parser\n     LifetimeIsChar,\n+    /// When an invalid lifetime e.g. `'\ud83d\udc31` contains emoji.\n+    LifetimeContainsEmoji,\n     /// Maybe there was a typo where a comma was forgotten before\n     /// FRU syntax\n     MaybeFruTypo,"}, {"sha": "e6f04fe0aaa634c8405aa8cad9330e70d892d561", "filename": "compiler/rustc_lexer/src/lib.rs", "status": "modified", "additions": 33, "deletions": 10, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/380fa264132ad481e73cbbf0f3a0feefd99a1d78/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380fa264132ad481e73cbbf0f3a0feefd99a1d78/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Flib.rs?ref=380fa264132ad481e73cbbf0f3a0feefd99a1d78", "patch": "@@ -95,7 +95,7 @@ pub enum TokenKind {\n     Literal { kind: LiteralKind, suffix_start: u32 },\n \n     /// \"'a\"\n-    Lifetime { starts_with_number: bool },\n+    Lifetime { starts_with_number: bool, contains_emoji: bool },\n \n     // One-char tokens:\n     /// \";\"\n@@ -630,7 +630,13 @@ impl Cursor<'_> {\n             // If the first symbol is valid for identifier, it can be a lifetime.\n             // Also check if it's a number for a better error reporting (so '0 will\n             // be reported as invalid lifetime and not as unterminated char literal).\n-            is_id_start(self.first()) || self.first().is_digit(10)\n+            // We also have to account for potential `'\ud83d\udc31` emojis to avoid reporting\n+            // it as an unterminated char literal.\n+            is_id_start(self.first())\n+                || self.first().is_digit(10)\n+                // FIXME(#108019): `unic-emoji-char` seems to have data tables only up to Unicode\n+                // 5.0, but Unicode is already newer than this.\n+                || unic_emoji_char::is_emoji(self.first())\n         };\n \n         if !can_be_a_lifetime {\n@@ -643,16 +649,33 @@ impl Cursor<'_> {\n             return Literal { kind, suffix_start };\n         }\n \n-        // Either a lifetime or a character literal with\n-        // length greater than 1.\n+        // Either a lifetime or a character literal.\n \n         let starts_with_number = self.first().is_digit(10);\n+        let mut contains_emoji = false;\n \n-        // Skip the literal contents.\n-        // First symbol can be a number (which isn't a valid identifier start),\n-        // so skip it without any checks.\n-        self.bump();\n-        self.eat_while(is_id_continue);\n+        // FIXME(#108019): `unic-emoji-char` seems to have data tables only up to Unicode\n+        // 5.0, but Unicode is already newer than this.\n+        if unic_emoji_char::is_emoji(self.first()) {\n+            contains_emoji = true;\n+        } else {\n+            // Skip the literal contents.\n+            // First symbol can be a number (which isn't a valid identifier start),\n+            // so skip it without any checks.\n+            self.bump();\n+        }\n+        self.eat_while(|c| {\n+            if is_id_continue(c) {\n+                true\n+            // FIXME(#108019): `unic-emoji-char` seems to have data tables only up to Unicode\n+            // 5.0, but Unicode is already newer than this.\n+            } else if unic_emoji_char::is_emoji(c) {\n+                contains_emoji = true;\n+                true\n+            } else {\n+                false\n+            }\n+        });\n \n         // Check if after skipping literal contents we've met a closing\n         // single quote (which means that user attempted to create a\n@@ -662,7 +685,7 @@ impl Cursor<'_> {\n             let kind = Char { terminated: true };\n             Literal { kind, suffix_start: self.pos_within_token() }\n         } else {\n-            Lifetime { starts_with_number }\n+            Lifetime { starts_with_number, contains_emoji }\n         }\n     }\n "}, {"sha": "37449aaabed8ba4e677ff09a12a62a2637ae2849", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/380fa264132ad481e73cbbf0f3a0feefd99a1d78/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380fa264132ad481e73cbbf0f3a0feefd99a1d78/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=380fa264132ad481e73cbbf0f3a0feefd99a1d78", "patch": "@@ -200,16 +200,21 @@ impl<'a> StringReader<'a> {\n                     };\n                     token::Literal(token::Lit { kind, symbol, suffix })\n                 }\n-                rustc_lexer::TokenKind::Lifetime { starts_with_number } => {\n+                rustc_lexer::TokenKind::Lifetime { starts_with_number, contains_emoji } => {\n                     // Include the leading `'` in the real identifier, for macro\n                     // expansion purposes. See #12512 for the gory details of why\n                     // this is necessary.\n                     let lifetime_name = self.str_from(start);\n                     if starts_with_number {\n                         let span = self.mk_sp(start, self.pos);\n-                        let mut diag = self.sess.struct_err(\"lifetimes cannot start with a number\");\n+                        let mut diag = self.sess.struct_err(\"lifetimes or labels cannot start with a number\");\n                         diag.set_span(span);\n                         diag.stash(span, StashKey::LifetimeIsChar);\n+                    } else if contains_emoji {\n+                        let span = self.mk_sp(start, self.pos);\n+                        let mut diag = self.sess.struct_err(\"lifetimes or labels cannot contain emojis\");\n+                        diag.set_span(span);\n+                        diag.stash(span, StashKey::LifetimeContainsEmoji);\n                     }\n                     let ident = Symbol::intern(lifetime_name);\n                     token::Lifetime(ident)"}, {"sha": "f0f86224560100121aad9e2e19551fd0e61bad4b", "filename": "tests/ui/lexer/issue-108019-bad-emoji-recovery.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/380fa264132ad481e73cbbf0f3a0feefd99a1d78/tests%2Fui%2Flexer%2Fissue-108019-bad-emoji-recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380fa264132ad481e73cbbf0f3a0feefd99a1d78/tests%2Fui%2Flexer%2Fissue-108019-bad-emoji-recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flexer%2Fissue-108019-bad-emoji-recovery.rs?ref=380fa264132ad481e73cbbf0f3a0feefd99a1d78", "patch": "@@ -0,0 +1,45 @@\n+#![allow(unused_labels)]\n+\n+// FIXME(#108019): outdated Unicode table\n+// fn foo() {\n+//     '\ud83e\udd7a loop {\n+//         break\n+//     }\n+// }\n+\n+fn bar() {\n+    '\ud83d\udc31 loop {\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR lifetimes or labels cannot contain emojis\n+        break\n+    }\n+}\n+\n+fn qux() {\n+    'a\ud83d\udc31 loop {\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR lifetimes or labels cannot contain emojis\n+        break\n+    }\n+}\n+\n+fn quux() {\n+    '1\ud83d\udc31 loop {\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR lifetimes or labels cannot start with a number\n+        break\n+    }\n+}\n+\n+fn x<'\ud83d\udc31>() -> &'\ud83d\udc31 () {\n+    //~^ ERROR lifetimes or labels cannot contain emojis\n+    //~| ERROR lifetimes or labels cannot contain emojis\n+    &()\n+}\n+\n+fn y() {\n+    'a\ud83d\udc31: loop {}\n+    //~^ ERROR lifetimes or labels cannot contain emojis\n+}\n+\n+fn main() {}"}, {"sha": "be77ffdea349f4296042f760e99923935573e7d8", "filename": "tests/ui/lexer/issue-108019-bad-emoji-recovery.stderr", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/380fa264132ad481e73cbbf0f3a0feefd99a1d78/tests%2Fui%2Flexer%2Fissue-108019-bad-emoji-recovery.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/380fa264132ad481e73cbbf0f3a0feefd99a1d78/tests%2Fui%2Flexer%2Fissue-108019-bad-emoji-recovery.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flexer%2Fissue-108019-bad-emoji-recovery.stderr?ref=380fa264132ad481e73cbbf0f3a0feefd99a1d78", "patch": "@@ -0,0 +1,86 @@\n+error: labeled expression must be followed by `:`\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:11:5\n+   |\n+LL |       '\ud83d\udc31 loop {\n+   |       ^--- help: add `:` after the label\n+   |       |\n+   |  _____the label\n+   | |\n+LL | |\n+LL | |\n+LL | |         break\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:19:5\n+   |\n+LL |       'a\ud83d\udc31 loop {\n+   |       ^---- help: add `:` after the label\n+   |       |\n+   |  _____the label\n+   | |\n+LL | |\n+LL | |\n+LL | |         break\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:27:5\n+   |\n+LL |       '1\ud83d\udc31 loop {\n+   |       ^---- help: add `:` after the label\n+   |       |\n+   |  _____the label\n+   | |\n+LL | |\n+LL | |\n+LL | |         break\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: lifetimes or labels cannot contain emojis\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:11:5\n+   |\n+LL |     '\ud83d\udc31 loop {\n+   |     ^^^\n+\n+error: lifetimes or labels cannot contain emojis\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:19:5\n+   |\n+LL |     'a\ud83d\udc31 loop {\n+   |     ^^^^\n+\n+error: lifetimes or labels cannot start with a number\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:27:5\n+   |\n+LL |     '1\ud83d\udc31 loop {\n+   |     ^^^^\n+\n+error: lifetimes or labels cannot contain emojis\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:34:6\n+   |\n+LL | fn x<'\ud83d\udc31>() -> &'\ud83d\udc31 () {\n+   |      ^^^\n+\n+error: lifetimes or labels cannot contain emojis\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:34:16\n+   |\n+LL | fn x<'\ud83d\udc31>() -> &'\ud83d\udc31 () {\n+   |                 ^^^\n+\n+error: lifetimes or labels cannot contain emojis\n+  --> $DIR/issue-108019-bad-emoji-recovery.rs:41:5\n+   |\n+LL |     'a\ud83d\udc31: loop {}\n+   |     ^^^^\n+\n+error: aborting due to 9 previous errors\n+"}]}