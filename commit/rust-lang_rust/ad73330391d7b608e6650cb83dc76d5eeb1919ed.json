{"sha": "ad73330391d7b608e6650cb83dc76d5eeb1919ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNzMzMzAzOTFkN2I2MDhlNjY1MGNiODNkYzc2ZDVlZWIxOTE5ZWQ=", "commit": {"author": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2016-02-06T01:11:17Z"}, "committer": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2016-02-06T03:04:04Z"}, "message": "Fix RwLock*Guard::map to not allow escaping a reference to the data.\n\nAlso update the instability reason to include a note about a possible\nbad interaction with condition variables on systems that allow\nwaiting on a RwLock guard.", "tree": {"sha": "d7df60d5207f90ed3a8f0d098116a91fc37b6471", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7df60d5207f90ed3a8f0d098116a91fc37b6471"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad73330391d7b608e6650cb83dc76d5eeb1919ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad73330391d7b608e6650cb83dc76d5eeb1919ed", "html_url": "https://github.com/rust-lang/rust/commit/ad73330391d7b608e6650cb83dc76d5eeb1919ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad73330391d7b608e6650cb83dc76d5eeb1919ed/comments", "author": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34af2de4096b3b1c5d3a5b70171c6e27822aaefb", "url": "https://api.github.com/repos/rust-lang/rust/commits/34af2de4096b3b1c5d3a5b70171c6e27822aaefb", "html_url": "https://github.com/rust-lang/rust/commit/34af2de4096b3b1c5d3a5b70171c6e27822aaefb"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "fd538d52fb28154d80d41a6c171ced1092e358b5", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ad73330391d7b608e6650cb83dc76d5eeb1919ed/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad73330391d7b608e6650cb83dc76d5eeb1919ed/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=ad73330391d7b608e6650cb83dc76d5eeb1919ed", "patch": "@@ -454,10 +454,11 @@ impl<'rwlock, T: ?Sized> RwLockReadGuard<'rwlock, T> {\n     /// assert_eq!(*y, 1);\n     /// ```\n     #[unstable(feature = \"guard_map\",\n-               reason = \"recently added, needs RFC for stabilization\",\n+               reason = \"recently added, needs RFC for stabilization,\n+                         questionable interaction with Condvar\",\n                issue = \"27746\")]\n     pub fn map<U: ?Sized, F>(this: Self, cb: F) -> RwLockReadGuard<'rwlock, U>\n-        where F: FnOnce(&'rwlock T) -> &'rwlock U\n+        where F: FnOnce(&T) -> &U\n     {\n         let new = RwLockReadGuard {\n             __lock: this.__lock,\n@@ -504,10 +505,11 @@ impl<'rwlock, T: ?Sized> RwLockWriteGuard<'rwlock, T> {\n     /// assert_eq!(&**x.read().unwrap(), &[10, 2]);\n     /// ```\n     #[unstable(feature = \"guard_map\",\n-               reason = \"recently added, needs RFC for stabilization\",\n+               reason = \"recently added, needs RFC for stabilization,\n+                         questionable interaction with Condvar\",\n                issue = \"27746\")]\n     pub fn map<U: ?Sized, F>(this: Self, cb: F) -> RwLockWriteGuard<'rwlock, U>\n-        where F: FnOnce(&'rwlock mut T) -> &'rwlock mut U\n+        where F: FnOnce(&mut T) -> &mut U\n     {\n         // Compute the new data while still owning the original lock\n         // in order to correctly poison if the callback panics."}]}