{"sha": "1d1ab21ad937608d89f0c9f29394be4995823f9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMWFiMjFhZDkzNzYwOGQ4OWYwYzlmMjkzOTRiZTQ5OTU4MjNmOWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-18T11:03:53Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-18T11:03:53Z"}, "message": "Remove inline script tags", "tree": {"sha": "412b7856b57b7eb03467ea2b75391d7508a383e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/412b7856b57b7eb03467ea2b75391d7508a383e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d1ab21ad937608d89f0c9f29394be4995823f9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1ab21ad937608d89f0c9f29394be4995823f9c", "html_url": "https://github.com/rust-lang/rust/commit/1d1ab21ad937608d89f0c9f29394be4995823f9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d1ab21ad937608d89f0c9f29394be4995823f9c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efdb859dcdf7077cf6b8c85af0ea8820c93bcbdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/efdb859dcdf7077cf6b8c85af0ea8820c93bcbdf", "html_url": "https://github.com/rust-lang/rust/commit/efdb859dcdf7077cf6b8c85af0ea8820c93bcbdf"}], "stats": {"total": 56, "additions": 33, "deletions": 23}, "files": [{"sha": "4458eea95f3e11bb5c819fe02d5ffbe6426b60c1", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=1d1ab21ad937608d89f0c9f29394be4995823f9c", "patch": "@@ -111,10 +111,7 @@ crate fn render<T: Print, S: Print>(\n     <section id=\\\"search\\\" class=\\\"content hidden\\\"></section>\\\n     <section class=\\\"footer\\\"></section>\\\n     {after_content}\\\n-    <script>\\\n-        window.rootPath = \\\"{root_path}\\\";\\\n-        window.currentCrate = \\\"{krate}\\\";\\\n-    </script>\\\n+    <div id=\\\"rustdoc-vars\\\" data-root-path=\\\"{root_path}\\\" data-current-crate=\\\"{krate}\\\"></div>\n     <script src=\\\"{static_root_path}main{suffix}.js\\\"></script>\\\n     {static_extra_scripts}\\\n     {extra_scripts}\\"}, {"sha": "cfa6cd96595d6160e2320ca6a0635fbe51adcf25", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=1d1ab21ad937608d89f0c9f29394be4995823f9c", "patch": "@@ -1313,6 +1313,8 @@ fn init_id_map() -> FxHashMap<String, usize> {\n     map.insert(\"toggle-all-docs\".to_owned(), 1);\n     map.insert(\"all-types\".to_owned(), 1);\n     map.insert(\"default-settings\".to_owned(), 1);\n+    map.insert(\"rustdoc-vars\".to_owned(), 1);\n+    map.insert(\"sidebar-vars\".to_owned(), 1);\n     // This is the list of IDs used by rustdoc sections.\n     map.insert(\"fields\".to_owned(), 1);\n     map.insert(\"variants\".to_owned(), 1);"}, {"sha": "03e091297e5b6a397de81fae1bcb9c1a813e6ab1", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=1d1ab21ad937608d89f0c9f29394be4995823f9c", "patch": "@@ -4216,11 +4216,8 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer, cache:\n     let relpath = if it.is_mod() { \"../\" } else { \"\" };\n     write!(\n         buffer,\n-        \"<script>window.sidebarCurrent = {{\\\n-                name: \\\"{name}\\\", \\\n-                ty: \\\"{ty}\\\", \\\n-                relpath: \\\"{path}\\\"\\\n-            }};</script>\",\n+        \"<div id=\\\"sidebar-vars\\\" data-name=\\\"{name}\\\" data-ty=\\\"{ty}\\\" data-relpath=\\\"{path}\\\">\\\n+        </div>\",\n         name = it.name.unwrap_or(kw::Empty),\n         ty = it.type_(),\n         path = relpath"}, {"sha": "78a825fcca0ba7a9d2330fda28d4a06e0e20d1fd", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=1d1ab21ad937608d89f0c9f29394be4995823f9c", "patch": "@@ -1,5 +1,5 @@\n // From rust:\n-/* global ALIASES, currentCrate, rootPath */\n+/* global ALIASES */\n \n // Local js definitions:\n /* global addClass, getCurrentValue, hasClass */\n@@ -40,6 +40,21 @@ if (!DOMTokenList.prototype.remove) {\n     };\n }\n \n+(function () {\n+    var rustdocVars = document.getElementById(\"rustdoc-vars\");\n+    if (rustdocVars) {\n+        window.rootPath = rustdocVars.attributes[\"data-root-path\"].value;\n+        window.currentCrate = rustdocVars.attributes[\"data-current-crate\"].value;\n+    }\n+    var sidebarVars = document.getElementById(\"sidebar-vars\");\n+    if (sidebarVars) {\n+        window.sidebarCurrent = {\n+            name: sidebarVars.attributes[\"data-name\"].value,\n+            ty: sidebarVars.attributes[\"data-ty\"].value,\n+            relpath: sidebarVars.attributes[\"data-relpath\"].value,\n+        };\n+    }\n+}());\n \n // Gets the human-readable string for the virtual-key code of the\n // given KeyboardEvent, ev.\n@@ -565,7 +580,7 @@ function defocusSearchBar() {\n                 var i, match,\n                     url = document.location.href,\n                     stripped = \"\",\n-                    len = rootPath.match(/\\.\\.\\//g).length + 1;\n+                    len = window.rootPath.match(/\\.\\.\\//g).length + 1;\n \n                 for (i = 0; i < len; ++i) {\n                     match = url.match(/\\/[^\\/]*$/);\n@@ -1504,15 +1519,15 @@ function defocusSearchBar() {\n \n             if (type === \"mod\") {\n                 displayPath = path + \"::\";\n-                href = rootPath + path.replace(/::/g, \"/\") + \"/\" +\n+                href = window.rootPath + path.replace(/::/g, \"/\") + \"/\" +\n                        name + \"/index.html\";\n             } else if (type === \"primitive\" || type === \"keyword\") {\n                 displayPath = \"\";\n-                href = rootPath + path.replace(/::/g, \"/\") +\n+                href = window.rootPath + path.replace(/::/g, \"/\") +\n                        \"/\" + type + \".\" + name + \".html\";\n             } else if (type === \"externcrate\") {\n                 displayPath = \"\";\n-                href = rootPath + name + \"/index.html\";\n+                href = window.rootPath + name + \"/index.html\";\n             } else if (item.parent !== undefined) {\n                 var myparent = item.parent;\n                 var anchor = \"#\" + type + \".\" + name;\n@@ -1535,13 +1550,13 @@ function defocusSearchBar() {\n                 } else {\n                     displayPath = path + \"::\" + myparent.name + \"::\";\n                 }\n-                href = rootPath + path.replace(/::/g, \"/\") +\n+                href = window.rootPath + path.replace(/::/g, \"/\") +\n                        \"/\" + pageType +\n                        \".\" + pageName +\n                        \".html\" + anchor;\n             } else {\n                 displayPath = item.path + \"::\";\n-                href = rootPath + item.path.replace(/::/g, \"/\") +\n+                href = window.rootPath + item.path.replace(/::/g, \"/\") +\n                        \"/\" + type + \".\" + name + \".html\";\n             }\n             return [displayPath, href];\n@@ -1973,7 +1988,7 @@ function defocusSearchBar() {\n         startSearch();\n \n         // Draw a convenient sidebar of known crates if we have a listing\n-        if (rootPath === \"../\" || rootPath === \"./\") {\n+        if (window.rootPath === \"../\" || window.rootPath === \"./\") {\n             var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n             if (sidebar) {\n                 var div = document.createElement(\"div\");\n@@ -1992,11 +2007,11 @@ function defocusSearchBar() {\n                 crates.sort();\n                 for (var i = 0; i < crates.length; ++i) {\n                     var klass = \"crate\";\n-                    if (rootPath !== \"./\" && crates[i] === window.currentCrate) {\n+                    if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n                         klass += \" current\";\n                     }\n                     var link = document.createElement(\"a\");\n-                    link.href = rootPath + crates[i] + \"/index.html\";\n+                    link.href = window.rootPath + crates[i] + \"/index.html\";\n                     // The summary in the search index has HTML, so we need to\n                     // dynamically render it as plaintext.\n                     link.title = convertHTMLToPlaintext(rawSearchIndex[crates[i]].doc);\n@@ -2118,7 +2133,7 @@ function defocusSearchBar() {\n \n         var libs = Object.getOwnPropertyNames(imp);\n         for (var i = 0, llength = libs.length; i < llength; ++i) {\n-            if (libs[i] === currentCrate) { continue; }\n+            if (libs[i] === window.currentCrate) { continue; }\n             var structs = imp[libs[i]];\n \n             struct_loop:\n@@ -2143,7 +2158,7 @@ function defocusSearchBar() {\n                     var href = elem.getAttribute(\"href\");\n \n                     if (href && href.indexOf(\"http\") !== 0) {\n-                        elem.setAttribute(\"href\", rootPath + href);\n+                        elem.setAttribute(\"href\", window.rootPath + href);\n                     }\n                 });\n "}, {"sha": "3f6bd6039752604e8d8513638457c709037a7817", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/1d1ab21ad937608d89f0c9f29394be4995823f9c/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=1d1ab21ad937608d89f0c9f29394be4995823f9c", "patch": "@@ -263,8 +263,7 @@ function loadMainJsAndIndex(mainJs, searchIndex, storageJs, crate) {\n                            \"handleAliases\", \"getQuery\", \"buildIndex\", \"execQuery\", \"execSearch\"];\n \n     ALIASES = {};\n-    finalJS += 'window = { \"currentCrate\": \"' + crate + '\" };\\n';\n-    finalJS += 'var rootPath = \"../\";\\n';\n+    finalJS += 'window = { \"currentCrate\": \"' + crate + '\", rootPath: \"../\" };\\n';\n     finalJS += loadThings([\"hasOwnProperty\", \"onEach\"], 'function', extractFunction, storageJs);\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, mainJs);\n     finalJS += loadThings(variablesToLoad, 'variable', extractVariable, mainJs);"}]}