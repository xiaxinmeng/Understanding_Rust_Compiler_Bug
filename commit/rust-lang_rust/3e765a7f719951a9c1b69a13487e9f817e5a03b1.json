{"sha": "3e765a7f719951a9c1b69a13487e9f817e5a03b1", "node_id": "C_kwDOAAsO6NoAKDNlNzY1YTdmNzE5OTUxYTljMWI2OWExMzQ4N2U5ZjgxN2U1YTAzYjE", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-05-25T18:52:30Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-05-29T18:26:44Z"}, "message": "Switch Steps from crates to crate_or_deps where possible\n\nand document why the single remaining place can't switch", "tree": {"sha": "f5c5de30abeae41676fb964679785844810b6349", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5c5de30abeae41676fb964679785844810b6349"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e765a7f719951a9c1b69a13487e9f817e5a03b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e765a7f719951a9c1b69a13487e9f817e5a03b1", "html_url": "https://github.com/rust-lang/rust/commit/3e765a7f719951a9c1b69a13487e9f817e5a03b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e765a7f719951a9c1b69a13487e9f817e5a03b1/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58e18ddf86e67a1210a60ab4a0ad5e1adfbbc819", "url": "https://api.github.com/repos/rust-lang/rust/commits/58e18ddf86e67a1210a60ab4a0ad5e1adfbbc819", "html_url": "https://github.com/rust-lang/rust/commit/58e18ddf86e67a1210a60ab4a0ad5e1adfbbc819"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "cf9ae4f08181c432a9da9cf1f2a28fa06a21a792", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e765a7f719951a9c1b69a13487e9f817e5a03b1/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e765a7f719951a9c1b69a13487e9f817e5a03b1/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=3e765a7f719951a9c1b69a13487e9f817e5a03b1", "patch": "@@ -442,6 +442,8 @@ impl<'a> ShouldRun<'a> {\n     /// Indicates it should run if the command-line selects any of the given crates.\n     ///\n     /// `make_run` will be called a single time with all matching command-line paths.\n+    ///\n+    /// Prefer [`ShouldRun::crate_or_deps`] to this function where possible.\n     pub(crate) fn crates(mut self, crates: Vec<&Crate>) -> Self {\n         for krate in crates {\n             let path = krate.local_path(self.builder);"}, {"sha": "f5a93854bf2c4e1c4eda6d58b43bd47b5bb62dcd", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e765a7f719951a9c1b69a13487e9f817e5a03b1/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e765a7f719951a9c1b69a13487e9f817e5a03b1/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=3e765a7f719951a9c1b69a13487e9f817e5a03b1", "patch": "@@ -85,8 +85,7 @@ impl Step for Std {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        let crates = run.builder.in_tree_crates(\"sysroot\", None);\n-        run.crates(crates).path(\"library\")\n+        run.crate_or_deps(\"sysroot\").path(\"library\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -215,8 +214,7 @@ impl Step for Rustc {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        let crates = run.builder.in_tree_crates(\"rustc-main\", None);\n-        run.crates(crates).path(\"compiler\")\n+        run.crate_or_deps(\"rustc-main\").path(\"compiler\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "a7ebd018a879116db5785ba538aa9537bc8e2ec6", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e765a7f719951a9c1b69a13487e9f817e5a03b1/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e765a7f719951a9c1b69a13487e9f817e5a03b1/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=3e765a7f719951a9c1b69a13487e9f817e5a03b1", "patch": "@@ -620,6 +620,8 @@ impl Step for Rustc {\n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let mut crates = run.builder.in_tree_crates(\"rustc-main\", None);\n         for (i, krate) in crates.iter().enumerate() {\n+            // We can't allow `build rustc` as an alias for this Step, because that's reserved by `Assemble`.\n+            // Ideally Assemble would use `build compiler` instead, but that seems too confusing to be worth the breaking change.\n             if krate.name == \"rustc-main\" {\n                 crates.swap_remove(i);\n                 break;"}]}