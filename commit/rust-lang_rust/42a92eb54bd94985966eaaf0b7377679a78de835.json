{"sha": "42a92eb54bd94985966eaaf0b7377679a78de835", "node_id": "C_kwDOAAsO6NoAKDQyYTkyZWI1NGJkOTQ5ODU5NjZlYWFmMGI3Mzc3Njc5YTc4ZGU4MzU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-10T09:55:10Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-14T17:06:48Z"}, "message": "Correct Key impl for HirId.", "tree": {"sha": "e293215a84f8bba95acd6f3e75f471b6c2451410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e293215a84f8bba95acd6f3e75f471b6c2451410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42a92eb54bd94985966eaaf0b7377679a78de835", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42a92eb54bd94985966eaaf0b7377679a78de835", "html_url": "https://github.com/rust-lang/rust/commit/42a92eb54bd94985966eaaf0b7377679a78de835", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42a92eb54bd94985966eaaf0b7377679a78de835/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fcc4403916d13e12eba755b1234b8e6114ee9e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fcc4403916d13e12eba755b1234b8e6114ee9e3", "html_url": "https://github.com/rust-lang/rust/commit/1fcc4403916d13e12eba755b1234b8e6114ee9e3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "31de83ee1418d02e5c6a653683b946d5e6a433c9", "filename": "compiler/rustc_query_impl/src/keys.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42a92eb54bd94985966eaaf0b7377679a78de835/compiler%2Frustc_query_impl%2Fsrc%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42a92eb54bd94985966eaaf0b7377679a78de835/compiler%2Frustc_query_impl%2Fsrc%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fkeys.rs?ref=42a92eb54bd94985966eaaf0b7377679a78de835", "patch": "@@ -552,11 +552,11 @@ impl Key for HirId {\n     }\n \n     fn default_span(&self, tcx: TyCtxt<'_>) -> Span {\n-        self.owner.default_span(tcx)\n+        tcx.hir().span(*self)\n     }\n \n     #[inline(always)]\n     fn key_as_def_id(&self) -> Option<DefId> {\n-        Some(self.owner.to_def_id())\n+        None\n     }\n }"}]}