{"sha": "96d4137deed6c52c6db2dd19568c37d1c160f1e7", "node_id": "C_kwDOAAsO6NoAKDk2ZDQxMzdkZWVkNmM1MmM2ZGIyZGQxOTU2OGMzN2QxYzE2MGYxZTc", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-08-06T12:22:57Z"}, "committer": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-08-29T14:29:53Z"}, "message": "Only normalize once in mir validator typechecker\n\nBefore, it called `normalize_erasing_regions` twice since\n`equal_up_to_regions` called it as well for both types.", "tree": {"sha": "8fd89d7c977af0e6db3346e6f67754e619b453ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fd89d7c977af0e6db3346e6f67754e619b453ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96d4137deed6c52c6db2dd19568c37d1c160f1e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96d4137deed6c52c6db2dd19568c37d1c160f1e7", "html_url": "https://github.com/rust-lang/rust/commit/96d4137deed6c52c6db2dd19568c37d1c160f1e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96d4137deed6c52c6db2dd19568c37d1c160f1e7/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81a583c21e74d600ef8c4b45a3d5088382300e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/81a583c21e74d600ef8c4b45a3d5088382300e17", "html_url": "https://github.com/rust-lang/rust/commit/81a583c21e74d600ef8c4b45a3d5088382300e17"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "69113e57bdc5bc999d48ee0837187a625bbfe851", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/96d4137deed6c52c6db2dd19568c37d1c160f1e7/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d4137deed6c52c6db2dd19568c37d1c160f1e7/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=96d4137deed6c52c6db2dd19568c37d1c160f1e7", "patch": "@@ -182,27 +182,22 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             return true;\n         }\n \n-        let try_equal_with_param_env = |param_env| {\n-            let src = self.tcx.normalize_erasing_regions(param_env, src);\n-            let dest = self.tcx.normalize_erasing_regions(param_env, dest);\n-            // Type-changing assignments can happen when subtyping is used. While\n-            // all normal lifetimes are erased, higher-ranked types with their\n-            // late-bound lifetimes are still around and can lead to type\n-            // differences. So we compare ignoring lifetimes.\n-            equal_up_to_regions(self.tcx, param_env, src, dest)\n-        };\n-\n         // Normalize projections and things like that.\n+        // Type-changing assignments can happen when subtyping is used. While\n+        // all normal lifetimes are erased, higher-ranked types with their\n+        // late-bound lifetimes are still around and can lead to type\n+        // differences. So we compare ignoring lifetimes.\n+\n         // First, try with reveal_all. This might not work in some cases, as the predicates\n         // can be cleared in reveal_all mode. We try the reveal first anyways as it is used\n         // by some other passes like inlining as well.\n         let param_env = self.param_env.with_reveal_all_normalized(self.tcx);\n-        if try_equal_with_param_env(param_env) {\n-            true\n-        } else {\n-            // If this fails, we can try it without the reveal.\n-            try_equal_with_param_env(self.param_env)\n+        if equal_up_to_regions(self.tcx, param_env, src, dest) {\n+            return true;\n         }\n+\n+        // If this fails, we can try it without the reveal.\n+        equal_up_to_regions(self.tcx, self.param_env, src, dest)\n     }\n }\n "}]}