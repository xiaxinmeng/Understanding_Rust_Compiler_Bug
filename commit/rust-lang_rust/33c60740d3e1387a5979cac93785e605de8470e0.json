{"sha": "33c60740d3e1387a5979cac93785e605de8470e0", "node_id": "C_kwDOAAsO6NoAKDMzYzYwNzQwZDNlMTM4N2E1OTc5Y2FjOTM3ODVlNjA1ZGU4NDcwZTA", "commit": {"author": {"name": "sec65", "email": "106604020+sec65@users.noreply.github.com", "date": "2022-06-17T03:15:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-17T03:15:16Z"}, "message": "Add width for codeblocks in comments (#5372)\n\n* add doc_comment_code_block_width configuration\r\n\r\n* updated config docu\r\n\r\n* Updated docu and changed tests to config folder", "tree": {"sha": "55b4d31b976ce431947564639f5b9c68a7d7f930", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55b4d31b976ce431947564639f5b9c68a7d7f930"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33c60740d3e1387a5979cac93785e605de8470e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiq/HECRBK7hj4Ov3rIwAAKxsIAEAy/JIwOhIc+eBJXcO75TO/\neVPCK99IPR90xo+klV6w9KT1AiTnyC9el9xijH99BuaTWHtUXnXhJt/qJJ2Rjipr\neh6HXeGXV+7+L5SoGUtS4Sgy6Zm3npIcDD0tZr5oyNFz25R5hVD4iqirHlQ2Y8HS\nZ3iL2P+ndlVmI2/fuHtfynjgiKhRluDaDdF86nE9meKUk7EYMuxUiDPB097S6BCJ\nzqUNSv3Z9FPg2UhJZoFjYuJly/uvWg9CwWLm3tVwBo1EDX+Pd3T40ba1U7xfPd79\n2ilTaXquRyerrC0cPU+7dmFC/z4ywrJRwDbLm5FnKAHV6nmIn2jerc9GDQjp5MM=\n=JQu8\n-----END PGP SIGNATURE-----\n", "payload": "tree 55b4d31b976ce431947564639f5b9c68a7d7f930\nparent e44380b34167ff554ca7bd6ccd446a511927e8aa\nauthor sec65 <106604020+sec65@users.noreply.github.com> 1655435716 +0200\ncommitter GitHub <noreply@github.com> 1655435716 -0500\n\nAdd width for codeblocks in comments (#5372)\n\n* add doc_comment_code_block_width configuration\r\n\r\n* updated config docu\r\n\r\n* Updated docu and changed tests to config folder"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33c60740d3e1387a5979cac93785e605de8470e0", "html_url": "https://github.com/rust-lang/rust/commit/33c60740d3e1387a5979cac93785e605de8470e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33c60740d3e1387a5979cac93785e605de8470e0/comments", "author": {"login": "sec65", "id": 106604020, "node_id": "U_kgDOBlql9A", "avatar_url": "https://avatars.githubusercontent.com/u/106604020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sec65", "html_url": "https://github.com/sec65", "followers_url": "https://api.github.com/users/sec65/followers", "following_url": "https://api.github.com/users/sec65/following{/other_user}", "gists_url": "https://api.github.com/users/sec65/gists{/gist_id}", "starred_url": "https://api.github.com/users/sec65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sec65/subscriptions", "organizations_url": "https://api.github.com/users/sec65/orgs", "repos_url": "https://api.github.com/users/sec65/repos", "events_url": "https://api.github.com/users/sec65/events{/privacy}", "received_events_url": "https://api.github.com/users/sec65/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e44380b34167ff554ca7bd6ccd446a511927e8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e44380b34167ff554ca7bd6ccd446a511927e8aa", "html_url": "https://github.com/rust-lang/rust/commit/e44380b34167ff554ca7bd6ccd446a511927e8aa"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "8b96b9d36892ae0494b72aeef42f409f34597e88", "filename": "Configurations.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -926,6 +926,14 @@ fn add_one(x: i32) -> i32 {\n }\n ```\n \n+## `doc_comment_code_block_width`\n+\n+Max width for code snippets included in doc comments. Only used if [`format_code_in_doc_comments`](#format_code_in_doc_comments) is true.\n+\n+- **Default value**: `100`\n+- **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n+- **Stable**: No (tracking issue: [#5359](https://github.com/rust-lang/rustfmt/issues/5359))\n+\n ## `format_generated_files`\n \n Format generated files. A file is considered generated"}, {"sha": "4d565afc1e0266c7544f2a5be85912856c26cd98", "filename": "src/comment.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -730,6 +730,10 @@ impl<'a> CommentRewrite<'a> {\n                     {\n                         let mut config = self.fmt.config.clone();\n                         config.set().wrap_comments(false);\n+                        let comment_max_width = config\n+                            .doc_comment_code_block_width()\n+                            .min(config.max_width());\n+                        config.set().max_width(comment_max_width);\n                         if let Some(s) =\n                             crate::format_code_block(&self.code_block_buffer, &config, false)\n                         {"}, {"sha": "f49c18d3a4603a9804168664629c314181d7838f", "filename": "src/config/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -57,6 +57,8 @@ create_config! {\n     // Comments. macros, and strings\n     wrap_comments: bool, false, false, \"Break comments to fit on the line\";\n     format_code_in_doc_comments: bool, false, false, \"Format the code snippet in doc comments.\";\n+    doc_comment_code_block_width: usize, 100, false, \"Maximum width for code snippets in doc \\\n+        comments. No effect unless format_code_in_doc_comments = true\";\n     comment_width: usize, 80, false,\n         \"Maximum length of comments. No effect unless wrap_comments = true\";\n     normalize_comments: bool, false, false, \"Convert /* */ comments to // comments where possible\";\n@@ -532,6 +534,7 @@ chain_width = 60\n single_line_if_else_max_width = 50\n wrap_comments = false\n format_code_in_doc_comments = false\n+doc_comment_code_block_width = 100\n comment_width = 80\n normalize_comments = false\n normalize_doc_attributes = false"}, {"sha": "515780761670c1049a3f1249d4cf48fe2fce9786", "filename": "tests/source/configs/doc_comment_code_block_width/100.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F100.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -0,0 +1,16 @@\n+// rustfmt-format_code_in_doc_comments: true\n+// rustfmt-doc_comment_code_block_width: 100\n+\n+/// ```rust\n+/// impl Test {\n+///     pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+///         Self::from_bytes_manual_slice(v, 0, v.len()      )\n+///     }\n+/// }\n+/// ```\n+\n+impl Test {\n+    pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+        Self::from_bytes_manual_slice(v, 0, v.len()       )\n+    }\n+}"}, {"sha": "96505c69714e5ce570a1efae27e01ae7db5154ac", "filename": "tests/source/configs/doc_comment_code_block_width/100_greater_max_width.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F100_greater_max_width.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F100_greater_max_width.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F100_greater_max_width.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -0,0 +1,17 @@\n+// rustfmt-max_width: 50\n+// rustfmt-format_code_in_doc_comments: true\n+// rustfmt-doc_comment_code_block_width: 100\n+\n+/// ```rust\n+/// impl Test {\n+///     pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+///         Self::from_bytes_manual_slice(v, 0, v.len()      )\n+///     }\n+/// }\n+/// ```\n+\n+impl Test {\n+    pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+        Self::from_bytes_manual_slice(v, 0, v.len()       )\n+    }\n+}"}, {"sha": "2c6307951c84eee5bfacb23a6e2daf64d6a62a85", "filename": "tests/source/configs/doc_comment_code_block_width/50.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F50.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F50.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fdoc_comment_code_block_width%2F50.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -0,0 +1,16 @@\n+// rustfmt-format_code_in_doc_comments: true\n+// rustfmt-doc_comment_code_block_width: 50\n+\n+/// ```rust\n+/// impl Test {\n+///     pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+///         Self::from_bytes_manual_slice(v, 0, v.len()      )\n+///     }\n+/// }\n+/// ```\n+\n+impl Test {\n+    pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+        Self::from_bytes_manual_slice(v, 0, v.len()       )\n+    }\n+}"}, {"sha": "c010a28aab61550bffcfc2637c1f199c3d1fc913", "filename": "tests/target/configs/doc_comment_code_block_width/100.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F100.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -0,0 +1,16 @@\n+// rustfmt-format_code_in_doc_comments: true\n+// rustfmt-doc_comment_code_block_width: 100\n+\n+/// ```rust\n+/// impl Test {\n+///     pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+///         Self::from_bytes_manual_slice(v, 0, v.len())\n+///     }\n+/// }\n+/// ```\n+\n+impl Test {\n+    pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+        Self::from_bytes_manual_slice(v, 0, v.len())\n+    }\n+}"}, {"sha": "6bcb99b915ff958c10477a38bfa3578eeca9bda7", "filename": "tests/target/configs/doc_comment_code_block_width/100_greater_max_width.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F100_greater_max_width.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F100_greater_max_width.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F100_greater_max_width.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -0,0 +1,29 @@\n+// rustfmt-max_width: 50\n+// rustfmt-format_code_in_doc_comments: true\n+// rustfmt-doc_comment_code_block_width: 100\n+\n+/// ```rust\n+/// impl Test {\n+///     pub const fn from_bytes(\n+///         v: &[u8],\n+///     ) -> Result<Self, ParserError> {\n+///         Self::from_bytes_manual_slice(\n+///             v,\n+///             0,\n+///             v.len(),\n+///         )\n+///     }\n+/// }\n+/// ```\n+\n+impl Test {\n+    pub const fn from_bytes(\n+        v: &[u8],\n+    ) -> Result<Self, ParserError> {\n+        Self::from_bytes_manual_slice(\n+            v,\n+            0,\n+            v.len(),\n+        )\n+    }\n+}"}, {"sha": "e8ab6f28bdc5ab4b88e5a617eced4492ffb4466a", "filename": "tests/target/configs/doc_comment_code_block_width/50.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F50.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c60740d3e1387a5979cac93785e605de8470e0/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F50.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fdoc_comment_code_block_width%2F50.rs?ref=33c60740d3e1387a5979cac93785e605de8470e0", "patch": "@@ -0,0 +1,22 @@\n+// rustfmt-format_code_in_doc_comments: true\n+// rustfmt-doc_comment_code_block_width: 50\n+\n+/// ```rust\n+/// impl Test {\n+///     pub const fn from_bytes(\n+///         v: &[u8],\n+///     ) -> Result<Self, ParserError> {\n+///         Self::from_bytes_manual_slice(\n+///             v,\n+///             0,\n+///             v.len(),\n+///         )\n+///     }\n+/// }\n+/// ```\n+\n+impl Test {\n+    pub const fn from_bytes(v: &[u8]) -> Result<Self, ParserError> {\n+        Self::from_bytes_manual_slice(v, 0, v.len())\n+    }\n+}"}]}