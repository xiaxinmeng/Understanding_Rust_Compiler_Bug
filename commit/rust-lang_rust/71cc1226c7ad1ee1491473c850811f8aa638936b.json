{"sha": "71cc1226c7ad1ee1491473c850811f8aa638936b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxY2MxMjI2YzdhZDFlZTE0OTE0NzNjODUwODExZjhhYTYzODkzNmI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-11-27T21:46:34Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-11-27T21:46:34Z"}, "message": "s/init/zero/", "tree": {"sha": "7cae9be78fb745071ba02d0d0bd1b9a938799c6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cae9be78fb745071ba02d0d0bd1b9a938799c6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71cc1226c7ad1ee1491473c850811f8aa638936b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71cc1226c7ad1ee1491473c850811f8aa638936b", "html_url": "https://github.com/rust-lang/rust/commit/71cc1226c7ad1ee1491473c850811f8aa638936b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71cc1226c7ad1ee1491473c850811f8aa638936b/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd022857880175900dd22533ec7243ff0fa5ad49", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd022857880175900dd22533ec7243ff0fa5ad49", "html_url": "https://github.com/rust-lang/rust/commit/fd022857880175900dd22533ec7243ff0fa5ad49"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "16cdffe24ceb03781b54261623227691dd90ed60", "filename": "src/interpreter/terminator/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71cc1226c7ad1ee1491473c850811f8aa638936b/src%2Finterpreter%2Fterminator%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71cc1226c7ad1ee1491473c850811f8aa638936b/src%2Finterpreter%2Fterminator%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fintrinsics.rs?ref=71cc1226c7ad1ee1491473c850811f8aa638936b", "patch": "@@ -221,7 +221,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             \"forget\" => {}\n \n             \"init\" => {\n-                let size = self.type_size(dest_ty)?.expect(\"cannot init unsized value\");;\n+                let size = self.type_size(dest_ty)?.expect(\"cannot zero unsized value\");;\n                 let init = |this: &mut Self, val: Option<Value>| {\n                     let zero_val = match val {\n                         Some(Value::ByRef(ptr)) => {"}]}