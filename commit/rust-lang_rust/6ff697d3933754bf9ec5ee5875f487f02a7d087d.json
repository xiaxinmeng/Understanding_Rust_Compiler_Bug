{"sha": "6ff697d3933754bf9ec5ee5875f487f02a7d087d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZjY5N2QzOTMzNzU0YmY5ZWM1ZWU1ODc1ZjQ4N2YwMmE3ZDA4N2Q=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-11-04T15:35:56Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-11-26T04:13:17Z"}, "message": "rustc: Add lint for misplaced crate attributes", "tree": {"sha": "dd79082747c9ef9ca841dc6c41a02db997cc25f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd79082747c9ef9ca841dc6c41a02db997cc25f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ff697d3933754bf9ec5ee5875f487f02a7d087d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff697d3933754bf9ec5ee5875f487f02a7d087d", "html_url": "https://github.com/rust-lang/rust/commit/6ff697d3933754bf9ec5ee5875f487f02a7d087d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ff697d3933754bf9ec5ee5875f487f02a7d087d/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffaee0fd96b5d23ae9668605d1425111f4210c58", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffaee0fd96b5d23ae9668605d1425111f4210c58", "html_url": "https://github.com/rust-lang/rust/commit/ffaee0fd96b5d23ae9668605d1425111f4210c58"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "5904e10a08dbae7a013285a33b14c46aebb48713", "filename": "src/etc/extract-tests.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ff697d3933754bf9ec5ee5875f487f02a7d087d/src%2Fetc%2Fextract-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/6ff697d3933754bf9ec5ee5875f487f02a7d087d/src%2Fetc%2Fextract-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fextract-tests.py?ref=6ff697d3933754bf9ec5ee5875f487f02a7d087d", "patch": "@@ -63,6 +63,7 @@\n #[ allow(unused_variable) ];\\n\n #[ allow(dead_assignment) ];\\n\n #[ allow(unused_mut) ];\\n\n+#[ allow(attribute_usage) ];\\n\n #[ feature(macro_rules, globs, struct_variant, managed_boxes) ];\\n\n \"\"\" + block\n             if xfail:"}, {"sha": "7ce560055a33c1a575bfeb846514d34ab910e9a6", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6ff697d3933754bf9ec5ee5875f487f02a7d087d/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ff697d3933754bf9ec5ee5875f487f02a7d087d/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=6ff697d3933754bf9ec5ee5875f487f02a7d087d", "patch": "@@ -76,6 +76,7 @@ pub enum lint {\n     type_overflow,\n     unused_unsafe,\n     unsafe_block,\n+    attribute_usage,\n \n     managed_heap_memory,\n     owned_heap_memory,\n@@ -244,6 +245,13 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n         default: allow\n     }),\n \n+    (\"attribute_usage\",\n+     LintSpec {\n+        lint: attribute_usage,\n+        desc: \"detects bad use of attributes\",\n+        default: warn\n+    }),\n+\n     (\"unused_variable\",\n      LintSpec {\n         lint: unused_variable,\n@@ -790,6 +798,27 @@ fn check_heap_item(cx: &Context, it: &ast::item) {\n     }\n }\n \n+// check if crate-level attribute is used on item,\n+// since it is usually caused by mistake of semicolon omission.\n+// also make error on obsolete attributes for less confusion.\n+fn check_item_attribute_usage(cx: &Context, it: &ast::item) {\n+    let crate_attrs = [\"crate_type\", \"link\", \"feature\", \"no_uv\", \"no_main\", \"no_std\"];\n+\n+    for attr in it.attrs.iter() {\n+        let name = attr.node.value.name();\n+        for crate_attr in crate_attrs.iter() {\n+            if name.equiv(crate_attr) {\n+                let msg = match attr.node.style {\n+                    ast::AttrOuter  => \"crate-level attribute should be an inner attribute: \\\n+                                   add semicolon at end\",\n+                    ast::AttrInner => \"crate-level attribute should be in the root module\",\n+                };\n+                cx.span_lint(attribute_usage, attr.span, msg);\n+            }\n+        }\n+    }\n+}\n+\n fn check_heap_expr(cx: &Context, e: &ast::Expr) {\n     let ty = ty::expr_ty(cx.tcx, e);\n     check_heap_type(cx, e.span, ty);\n@@ -1110,6 +1139,7 @@ impl<'self> Visitor<()> for Context<'self> {\n             check_item_non_uppercase_statics(cx, it);\n             check_heap_item(cx, it);\n             check_missing_doc_item(cx, it);\n+            check_item_attribute_usage(cx, it);\n \n             do cx.visit_ids |v| {\n                 v.visit_item(it, ());"}]}