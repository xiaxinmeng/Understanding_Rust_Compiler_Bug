{"sha": "cd135749920d85596bc539ce393d02698b49429f", "node_id": "C_kwDOAAsO6NoAKGNkMTM1NzQ5OTIwZDg1NTk2YmM1MzljZTM5M2QwMjY5OGI0OTQyOWY", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-07-31T15:11:00Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-07-31T15:11:33Z"}, "message": "Always include a position span in rustc_parse_format::Argument", "tree": {"sha": "4344e5eea1fc4d528d9872f7a927552db47ceed5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4344e5eea1fc4d528d9872f7a927552db47ceed5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd135749920d85596bc539ce393d02698b49429f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd135749920d85596bc539ce393d02698b49429f", "html_url": "https://github.com/rust-lang/rust/commit/cd135749920d85596bc539ce393d02698b49429f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd135749920d85596bc539ce393d02698b49429f/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3641b0ca300065f22cdb96007f351a228a8bad5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3641b0ca300065f22cdb96007f351a228a8bad5f", "html_url": "https://github.com/rust-lang/rust/commit/3641b0ca300065f22cdb96007f351a228a8bad5f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "32718200c0b3a037a2793855e81d0f835bbddcab", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd135749920d85596bc539ce393d02698b49429f/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd135749920d85596bc539ce393d02698b49429f/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=cd135749920d85596bc539ce393d02698b49429f", "patch": "@@ -441,7 +441,7 @@ impl SimpleFormatArgs {\n         };\n \n         match arg.position {\n-            ArgumentIs(n, _) | ArgumentImplicitlyIs(n) => {\n+            ArgumentIs(n) | ArgumentImplicitlyIs(n) => {\n                 if self.unnamed.len() <= n {\n                     // Use a dummy span to mark all unseen arguments.\n                     self.unnamed.resize_with(n, || vec![DUMMY_SP]);\n@@ -462,7 +462,7 @@ impl SimpleFormatArgs {\n                     }\n                 }\n             },\n-            ArgumentNamed(n, _) => {\n+            ArgumentNamed(n) => {\n                 let n = Symbol::intern(n);\n                 if let Some(x) = self.named.iter_mut().find(|x| x.0 == n) {\n                     match x.1.as_slice() {"}]}