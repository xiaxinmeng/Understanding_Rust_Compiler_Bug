{"sha": "5862a0004a65e32ea3a36d33c52e305cd75a69fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NjJhMDAwNGE2NWUzMmVhM2EzNmQzM2M1MmUzMDVjZDc1YTY5ZmU=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-09-10T18:42:32Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-09-11T15:13:30Z"}, "message": "Add test for -Z panic-in-drop=abort", "tree": {"sha": "8d4dd795f72ce54dac8e5759075eda2fc717711f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d4dd795f72ce54dac8e5759075eda2fc717711f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5862a0004a65e32ea3a36d33c52e305cd75a69fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5862a0004a65e32ea3a36d33c52e305cd75a69fe", "html_url": "https://github.com/rust-lang/rust/commit/5862a0004a65e32ea3a36d33c52e305cd75a69fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5862a0004a65e32ea3a36d33c52e305cd75a69fe/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a149bed3bd68bb5af407b98c0645082a2bf409ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/a149bed3bd68bb5af407b98c0645082a2bf409ac", "html_url": "https://github.com/rust-lang/rust/commit/a149bed3bd68bb5af407b98c0645082a2bf409ac"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "62d093507ddeed0be61ff029e3a0c7a46d227b20", "filename": "src/test/codegen/panic-in-drop-abort.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5862a0004a65e32ea3a36d33c52e305cd75a69fe/src%2Ftest%2Fcodegen%2Fpanic-in-drop-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5862a0004a65e32ea3a36d33c52e305cd75a69fe/src%2Ftest%2Fcodegen%2Fpanic-in-drop-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpanic-in-drop-abort.rs?ref=5862a0004a65e32ea3a36d33c52e305cd75a69fe", "patch": "@@ -0,0 +1,54 @@\n+// compile-flags: -Z panic-in-drop=abort -O\n+\n+// Ensure that unwinding code paths are eliminated from the output after\n+// optimization.\n+\n+#![crate_type = \"lib\"]\n+use std::any::Any;\n+use std::mem::forget;\n+\n+pub struct ExternDrop;\n+impl Drop for ExternDrop {\n+    #[inline(always)]\n+    fn drop(&mut self) {\n+        // This call may potentially unwind.\n+        extern \"Rust\" {\n+            fn extern_drop();\n+        }\n+        unsafe {\n+            extern_drop();\n+        }\n+    }\n+}\n+\n+struct AssertNeverDrop;\n+impl Drop for AssertNeverDrop {\n+    #[inline(always)]\n+    fn drop(&mut self) {\n+        // This call should be optimized away as unreachable.\n+        extern \"C\" {\n+            fn should_not_appear_in_output();\n+        }\n+        unsafe {\n+            should_not_appear_in_output();\n+        }\n+    }\n+}\n+\n+// CHECK-LABEL: normal_drop\n+// CHECK-NOT: should_not_appear_in_output\n+#[no_mangle]\n+pub fn normal_drop(x: ExternDrop) {\n+    let guard = AssertNeverDrop;\n+    drop(x);\n+    forget(guard);\n+}\n+\n+// CHECK-LABEL: indirect_drop\n+// CHECK-NOT: should_not_appear_in_output\n+#[no_mangle]\n+pub fn indirect_drop(x: Box<dyn Any>) {\n+    let guard = AssertNeverDrop;\n+    drop(x);\n+    forget(guard);\n+}"}]}