{"sha": "67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YWFkNmMxODA0MmJiZjg0M2IzYjFiNTUzNmI3NzUwZmJlZGM1YzI=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-14T05:59:30Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-14T05:59:30Z"}, "message": "Run rustfix for string_lit_as_bytes tests\n\nThis moves the `string_lit_as_bytes` tests into a new file and enables\nrustfix tests for them.", "tree": {"sha": "8148685e80ecdc4af7ce71a4a4f250b7a4bf5cac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8148685e80ecdc4af7ce71a4a4f250b7a4bf5cac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlyJ7f8ACgkQtvoGpuDi\nZlukRg//a6OJDqv7aiDmVrtMlEEI6+QspeQ4pqBgQzIXukdbd3fRzNj8VmwfdwoM\ni7L/SP//edDWMMTuaAm1U2J7FBxvEo5Qt1QqDCxJ5ozQc8PeF3+Hrq9D0FR4qDm8\nLxYliv2UH54EmV0pwL/BZgDmeb6HM75Sl2ANBfY1DxhqD366p8lLkoP/jEk7XQo8\nRsIU2DRhHY3wswcLodKo5OEhqGkmonCUJ95VePPsAxHxXGJ1DRpN2m2gUHNGI2Nq\n6WkdhVsdLIy8eVnZHNP4ptkNHNToWnR9bDXYR+l8cZq5an4OA5R7c5X2DptGLI+U\nibvBHggA3Q5onnckII5BwI2InRl+8NmmVOhCgURjsqY/N3uNQB+CafSOU0JSsuck\nMO8tEjEdb6m0qtIr40yj9RDs9Aa3QM9SVYzFz+S2owGQ2krSaGuZFvHnNn4IqO6r\n05s0KdxQq2zii2pQZdadl3AvNQD+JtghwAkA3mbP0C1XSFKmygCBwOAVOqzh28QH\nAvZrQjDFEl1J3zsFi7GpPw3qLpIQMuDBs2orUSIauzMupvdXcnMwHou07wfWcdi6\nXq5kHAVVfHk1WWgJsvu+cZDf5Zwv94xRkJDNu2m0phRdOTiyUmcCes61CrRf1GSk\nHxqa6xSVsNF0YCF/5QUm0e2yldSKf3mmZ5bKoUnCnUPD3AUbxis=\n=ZOYE\n-----END PGP SIGNATURE-----", "payload": "tree 8148685e80ecdc4af7ce71a4a4f250b7a4bf5cac\nparent 99fdf2607e600f31d202092a48202bccaff6f04b\nauthor Philipp Hansch <dev@phansch.net> 1552543170 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1552543170 +0100\n\nRun rustfix for string_lit_as_bytes tests\n\nThis moves the `string_lit_as_bytes` tests into a new file and enables\nrustfix tests for them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "html_url": "https://github.com/rust-lang/rust/commit/67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99fdf2607e600f31d202092a48202bccaff6f04b", "url": "https://api.github.com/repos/rust-lang/rust/commits/99fdf2607e600f31d202092a48202bccaff6f04b", "html_url": "https://github.com/rust-lang/rust/commit/99fdf2607e600f31d202092a48202bccaff6f04b"}], "stats": {"total": 97, "additions": 61, "deletions": 36}, "files": [{"sha": "a70504656d9e2feab0292b1a3beedb65633528db", "filename": "tests/ui/string_lit_as_bytes.fixed", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstring_lit_as_bytes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstring_lit_as_bytes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.fixed?ref=67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "patch": "@@ -0,0 +1,19 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+#![warn(clippy::string_lit_as_bytes)]\n+\n+fn str_lit_as_bytes() {\n+    let bs = b\"hello there\";\n+\n+    let bs = br###\"raw string with three ### in it and some \" \"\"###;\n+\n+    // no warning, because this cannot be written as a byte string literal:\n+    let ubs = \"\u2603\".as_bytes();\n+\n+    let strify = stringify!(foobar).as_bytes();\n+\n+    let includestr = include_bytes!(\"entry.rs\");\n+}\n+\n+fn main() {}"}, {"sha": "ea8c712854bc139da024c3039166bf64a83479a1", "filename": "tests/ui/string_lit_as_bytes.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstring_lit_as_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstring_lit_as_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.rs?ref=67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "patch": "@@ -0,0 +1,19 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+#![warn(clippy::string_lit_as_bytes)]\n+\n+fn str_lit_as_bytes() {\n+    let bs = \"hello there\".as_bytes();\n+\n+    let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+\n+    // no warning, because this cannot be written as a byte string literal:\n+    let ubs = \"\u2603\".as_bytes();\n+\n+    let strify = stringify!(foobar).as_bytes();\n+\n+    let includestr = include_str!(\"entry.rs\").as_bytes();\n+}\n+\n+fn main() {}"}, {"sha": "f51cd71a6dc26186f75d95ba28ab59ff23bc2d89", "filename": "tests/ui/string_lit_as_bytes.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstring_lit_as_bytes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstring_lit_as_bytes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.stderr?ref=67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "patch": "@@ -0,0 +1,22 @@\n+error: calling `as_bytes()` on a string literal\n+  --> $DIR/string_lit_as_bytes.rs:7:14\n+   |\n+LL |     let bs = \"hello there\".as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n+   |\n+   = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n+\n+error: calling `as_bytes()` on a string literal\n+  --> $DIR/string_lit_as_bytes.rs:9:14\n+   |\n+LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n+\n+error: calling `as_bytes()` on `include_str!(..)`\n+  --> $DIR/string_lit_as_bytes.rs:16:22\n+   |\n+LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "766e23c744a577a4cb0ff88d64b9ef4e287bab0b", "filename": "tests/ui/strings.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.rs?ref=67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "patch": "@@ -42,21 +42,6 @@ fn both() {\n     assert_eq!(&x, &z);\n }\n \n-#[allow(dead_code, unused_variables)]\n-#[warn(clippy::string_lit_as_bytes)]\n-fn str_lit_as_bytes() {\n-    let bs = \"hello there\".as_bytes();\n-\n-    let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n-\n-    // no warning, because this cannot be written as a byte string literal:\n-    let ubs = \"\u2603\".as_bytes();\n-\n-    let strify = stringify!(foobar).as_bytes();\n-\n-    let includestr = include_str!(\"entry.rs\").as_bytes();\n-}\n-\n #[allow(clippy::assign_op_pattern)]\n fn main() {\n     add_only();"}, {"sha": "7f684fe63555e00fef23c57ce34de684fbf089df", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67aad6c18042bbf843b3b1b5536b7750fbedc5c2/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "patch": "@@ -52,25 +52,5 @@ error: you added something to a string. Consider using `String::push_str()` inst\n LL |     let z = y + \"...\";\n    |             ^^^^^^^^^\n \n-error: calling `as_bytes()` on a string literal\n-  --> $DIR/strings.rs:48:14\n-   |\n-LL |     let bs = \"hello there\".as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n-   |\n-   = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n-\n-error: calling `as_bytes()` on a string literal\n-  --> $DIR/strings.rs:50:14\n-   |\n-LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n-\n-error: calling `as_bytes()` on `include_str!(..)`\n-  --> $DIR/strings.rs:57:22\n-   |\n-LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`\n-\n-error: aborting due to 11 previous errors\n+error: aborting due to 8 previous errors\n "}]}