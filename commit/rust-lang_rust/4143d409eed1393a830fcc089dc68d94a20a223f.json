{"sha": "4143d409eed1393a830fcc089dc68d94a20a223f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNDNkNDA5ZWVkMTM5M2E4MzBmY2MwODlkYzY4ZDk0YTIwYTIyM2Y=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-08T03:30:31Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-04-04T03:56:46Z"}, "message": "save-analysis: only index path references once", "tree": {"sha": "1e93167ebac9b28b80fb04d57753f2324c01dd1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e93167ebac9b28b80fb04d57753f2324c01dd1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4143d409eed1393a830fcc089dc68d94a20a223f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4143d409eed1393a830fcc089dc68d94a20a223f", "html_url": "https://github.com/rust-lang/rust/commit/4143d409eed1393a830fcc089dc68d94a20a223f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4143d409eed1393a830fcc089dc68d94a20a223f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5309a3e31d88def1f3ea966162ed4f81f161d500", "url": "https://api.github.com/repos/rust-lang/rust/commits/5309a3e31d88def1f3ea966162ed4f81f161d500", "html_url": "https://github.com/rust-lang/rust/commit/5309a3e31d88def1f3ea966162ed4f81f161d500"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "491618f7952d8af3f5f6105d55ccfbc621da876f", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4143d409eed1393a830fcc089dc68d94a20a223f/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4143d409eed1393a830fcc089dc68d94a20a223f/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=4143d409eed1393a830fcc089dc68d94a20a223f", "patch": "@@ -1401,15 +1401,6 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor<'l> for DumpVisitor<'l, 'tcx, 'll,\n         debug!(\"visit_expr {:?}\", ex.node);\n         self.process_macro_use(ex.span, ex.id);\n         match ex.node {\n-            ast::ExprKind::Call(ref _f, ref _args) => {\n-                // Don't need to do anything for function calls,\n-                // because just walking the callee path does what we want.\n-                visit::walk_expr(self, ex);\n-            }\n-            ast::ExprKind::Path(_, ref path) => {\n-                self.process_path(ex.id, path, None);\n-                visit::walk_expr(self, ex);\n-            }\n             ast::ExprKind::Struct(ref path, ref fields, ref base) => {\n                 let hir_expr = self.save_ctxt.tcx.hir.expect_expr(ex.id);\n                 let adt = match self.save_ctxt.tables.expr_ty_opt(&hir_expr) {\n@@ -1507,6 +1498,8 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor<'l> for DumpVisitor<'l, 'tcx, 'll,\n                 self.visit_expr(element);\n                 self.nest_tables(count.id, |v| v.visit_expr(count));\n             }\n+            // In particular, we take this branch for call and path expressions,\n+            // where we'll index the idents involved just by continuing to walk.\n             _ => {\n                 visit::walk_expr(self, ex)\n             }"}]}