{"sha": "285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d", "node_id": "C_kwDOAAsO6NoAKDI4NWYwOWNmYThkZmI2OTZiOGJkMjBhMWZhYzVkYjVmZWMxYWU0NmQ", "commit": {"author": {"name": "unvalley", "email": "kirohi.code@gmail.com", "date": "2022-11-27T06:36:26Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-09T11:22:29Z"}, "message": "feat: extract only expressions from format string", "tree": {"sha": "c9f7c38cac8fe754a694f9471e8bcef42714f237", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9f7c38cac8fe754a694f9471e8bcef42714f237"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d", "html_url": "https://github.com/rust-lang/rust/commit/285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d/comments", "author": {"login": "unvalley", "id": 38400669, "node_id": "MDQ6VXNlcjM4NDAwNjY5", "avatar_url": "https://avatars.githubusercontent.com/u/38400669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unvalley", "html_url": "https://github.com/unvalley", "followers_url": "https://api.github.com/users/unvalley/followers", "following_url": "https://api.github.com/users/unvalley/following{/other_user}", "gists_url": "https://api.github.com/users/unvalley/gists{/gist_id}", "starred_url": "https://api.github.com/users/unvalley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unvalley/subscriptions", "organizations_url": "https://api.github.com/users/unvalley/orgs", "repos_url": "https://api.github.com/users/unvalley/repos", "events_url": "https://api.github.com/users/unvalley/events{/privacy}", "received_events_url": "https://api.github.com/users/unvalley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29f3d7dee75e20eeec573065dc01070544d3d6e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f3d7dee75e20eeec573065dc01070544d3d6e3", "html_url": "https://github.com/rust-lang/rust/commit/29f3d7dee75e20eeec573065dc01070544d3d6e3"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "6b947fe36416d3b11047ae2c8e28342256da0cd1", "filename": "crates/ide-assists/src/handlers/extract_expressions_from_format_string.rs", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_expressions_from_format_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_expressions_from_format_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_expressions_from_format_string.rs?ref=285f09cfa8dfb696b8bd20a1fac5db5fec1ae46d", "patch": "@@ -121,15 +121,14 @@ pub(crate) fn extract_expressions_from_format_string(\n             let mut placeholder_idx = 1;\n \n             for extracted_args in extracted_args {\n-                // remove expr from format string\n-                args.push_str(\", \");\n-\n                 match extracted_args {\n-                    Arg::Ident(s) | Arg::Expr(s) => {\n+                    Arg::Expr(s)=> {\n+                        args.push_str(\", \");\n                         // insert arg\n                         args.push_str(&s);\n                     }\n                     Arg::Placeholder => {\n+                        args.push_str(\", \");\n                         // try matching with existing argument\n                         match existing_args.next() {\n                             Some(ea) => {\n@@ -142,6 +141,7 @@ pub(crate) fn extract_expressions_from_format_string(\n                             }\n                         }\n                     }\n+                    Arg::Ident(_s) => (),\n                 }\n             }\n \n@@ -292,6 +292,29 @@ fn main() {\n fn main() {\n     print!(\"My name is {} {}\"$0, stringify!(Paperino), x + x)\n }\n+\"#,\n+            ),\n+        );\n+    }\n+\n+    #[test]\n+    fn extract_only_expressions() {\n+        check_assist(\n+            extract_expressions_from_format_string,\n+            &add_macro_decl(\n+                r#\"\n+fn main() {\n+    let var = 1 + 1;\n+    print!(\"foobar {var} {var:?} {x$0 + x}\")\n+}\n+\"#,\n+            ),\n+            &add_macro_decl(\n+                r#\"\n+fn main() {\n+    let var = 1 + 1;\n+    print!(\"foobar {var} {var:?} {}\"$0, x + x)\n+}\n \"#,\n             ),\n         );"}]}