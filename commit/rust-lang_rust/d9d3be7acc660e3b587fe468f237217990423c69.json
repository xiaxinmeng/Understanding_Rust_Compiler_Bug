{"sha": "d9d3be7acc660e3b587fe468f237217990423c69", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZDNiZTdhY2M2NjBlM2I1ODdmZTQ2OGYyMzcyMTc5OTA0MjNjNjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-14T08:35:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-14T23:14:43Z"}, "message": "rustc: Extract the logic for generating an ICE message", "tree": {"sha": "9f799d267b8761821e6f85605800f1ec47480dfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f799d267b8761821e6f85605800f1ec47480dfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9d3be7acc660e3b587fe468f237217990423c69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9d3be7acc660e3b587fe468f237217990423c69", "html_url": "https://github.com/rust-lang/rust/commit/d9d3be7acc660e3b587fe468f237217990423c69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9d3be7acc660e3b587fe468f237217990423c69/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "html_url": "https://github.com/rust-lang/rust/commit/8f57be5bffca9de896ee12d0f480ed3f474bc0a2"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3ec8a46e852592f669ba5dcfdcd175ff29798eda", "filename": "src/comp/driver/diagnostic.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d9d3be7acc660e3b587fe468f237217990423c69/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9d3be7acc660e3b587fe468f237217990423c69/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdiagnostic.rs?ref=d9d3be7acc660e3b587fe468f237217990423c69", "patch": "@@ -6,6 +6,7 @@ import codemap::span;\n export emitter, emit;\n export level, fatal, error, warning, note;\n export handler, mk_handler;\n+export ice_msg;\n \n type emitter = fn@(cmsp: option<(codemap::codemap, span)>,\n                    msg: str, lvl: level);\n@@ -70,17 +71,21 @@ impl codemap_handler of handler for codemap_t {\n         self.emit(none, msg, note);\n     }\n     fn span_bug(sp: span, msg: str) -> ! {\n-        self.span_fatal(sp, #fmt[\"internal compiler error %s\", msg]);\n+        self.span_fatal(sp, ice_msg(msg));\n     }\n     fn bug(msg: str) -> ! {\n-        self.fatal(#fmt[\"internal compiler error %s\", msg]);\n+        self.fatal(ice_msg(msg));\n     }\n     fn span_unimpl(sp: span, msg: str) -> ! {\n         self.span_bug(sp, \"unimplemented \" + msg);\n     }\n     fn unimpl(msg: str) -> ! { self.bug(\"unimplemented \" + msg); }\n }\n \n+fn ice_msg(msg: str) -> str {\n+    #fmt[\"internal compiler error %s\", msg]\n+}\n+\n fn mk_handler(cm: codemap::codemap,\n               emitter: option<emitter>) -> handler {\n "}]}