{"sha": "e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "node_id": "C_kwDOAAsO6NoAKGU2MTBkZGZhNWVmNGM2ZDFjZDgyYzFjYjdhYjAwOTJiNzk5ZTdiMDA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-03-29T12:34:05Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-04T13:58:50Z"}, "message": "box a bunch of large types", "tree": {"sha": "45f0c34db6c3607b9a5d34280c3f522fd56b935d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45f0c34db6c3607b9a5d34280c3f522fd56b935d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "html_url": "https://github.com/rust-lang/rust/commit/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff7636db6a1350fe626b2172e367e721593505ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7636db6a1350fe626b2172e367e721593505ed", "html_url": "https://github.com/rust-lang/rust/commit/ff7636db6a1350fe626b2172e367e721593505ed"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "aa47f3aed54d454d698ba2ccf9d3bb929fd3205e", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "patch": "@@ -100,13 +100,13 @@ impl EarlyLintPass for RedundantStaticLifetimes {\n         }\n \n         if !item.span.from_expansion() {\n-            if let ItemKind::Const(ConstItem { ty: ref var_type, .. }) = item.kind {\n+            if let ItemKind::Const(box ConstItem { ty: ref var_type, .. }) = item.kind {\n                 Self::visit_type(var_type, cx, \"constants have by default a `'static` lifetime\");\n                 // Don't check associated consts because `'static` cannot be elided on those (issue\n                 // #2438)\n             }\n \n-            if let ItemKind::Static(Static{ ty: ref var_type,.. }) = item.kind {\n+            if let ItemKind::Static(box Static { ty: ref var_type,.. }) = item.kind {\n                 Self::visit_type(var_type, cx, \"statics have by default a `'static` lifetime\");\n             }\n         }"}, {"sha": "0d2a7440c4659b7296de61c3526c9ad891579de5", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "patch": "@@ -286,8 +286,8 @@ pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n     match (l, r) {\n         (ExternCrate(l), ExternCrate(r)) => l == r,\n         (Use(l), Use(r)) => eq_use_tree(l, r),\n-        (Static(ast::Static{ ty: lt, mutability: lm, expr: le}), Static(ast::Static { ty: rt, mutability: rm, expr: re})) => lm == rm && eq_ty(lt, rt) && eq_expr_opt(le, re),\n-        (Const(ast::ConstItem { defaultness: ld, ty: lt, expr: le}), Const(ast::ConstItem { defaultness: rd, ty: rt, expr: re} )) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n+        (Static(box ast::Static{ ty: lt, mutability: lm, expr: le}), Static(box ast::Static { ty: rt, mutability: rm, expr: re})) => lm == rm && eq_ty(lt, rt) && eq_expr_opt(le, re),\n+        (Const(box ast::ConstItem { defaultness: ld, ty: lt, expr: le}), Const(box ast::ConstItem { defaultness: rd, ty: rt, expr: re} )) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n         (\n             Fn(box ast::Fn {\n                 defaultness: ld,\n@@ -451,7 +451,7 @@ pub fn eq_foreign_item_kind(l: &ForeignItemKind, r: &ForeignItemKind) -> bool {\n pub fn eq_assoc_item_kind(l: &AssocItemKind, r: &AssocItemKind) -> bool {\n     use AssocItemKind::*;\n     match (l, r) {\n-        (Const(ast::ConstItem { defaultness: ld, ty: lt, expr: le}), Const(ast::ConstItem { defaultness: rd, ty: rt, expr: re})) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n+        (Const(box ast::ConstItem { defaultness: ld, ty: lt, expr: le}), Const(box ast::ConstItem { defaultness: rd, ty: rt, expr: re})) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n         (\n             Fn(box ast::Fn {\n                 defaultness: ld,"}]}