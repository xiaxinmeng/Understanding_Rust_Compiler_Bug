{"sha": "13241008005f2471b3e4bae464ff81b2c2e2258f", "node_id": "C_kwDOAAsO6NoAKDEzMjQxMDA4MDA1ZjI0NzFiM2U0YmFlNDY0ZmY4MWIyYzJlMjI1OGY", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-12-21T12:11:36Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-12-21T12:26:41Z"}, "message": "resolve: Minor miscellaneous cleanups from #89059", "tree": {"sha": "d4265ecee9f900aa40cba6a656a2e175e84d84d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4265ecee9f900aa40cba6a656a2e175e84d84d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13241008005f2471b3e4bae464ff81b2c2e2258f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13241008005f2471b3e4bae464ff81b2c2e2258f", "html_url": "https://github.com/rust-lang/rust/commit/13241008005f2471b3e4bae464ff81b2c2e2258f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13241008005f2471b3e4bae464ff81b2c2e2258f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d57c61a9e04dcd3df633f41142009d6dcad4399", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d57c61a9e04dcd3df633f41142009d6dcad4399", "html_url": "https://github.com/rust-lang/rust/commit/3d57c61a9e04dcd3df633f41142009d6dcad4399"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "875bea2b9c38ebed492e29577605e86e8b7dcb2d", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/13241008005f2471b3e4bae464ff81b2c2e2258f/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13241008005f2471b3e4bae464ff81b2c2e2258f/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=13241008005f2471b3e4bae464ff81b2c2e2258f", "patch": "@@ -417,16 +417,12 @@ impl CStore {\n \n         let span = data.get_span(id.index, sess);\n \n-        let attrs = data.get_item_attrs(id.index, sess).collect();\n-\n-        let ident = data.item_ident(id.index, sess);\n-\n         LoadedMacro::MacroDef(\n             ast::Item {\n-                ident,\n+                ident: data.item_ident(id.index, sess),\n                 id: ast::DUMMY_NODE_ID,\n                 span,\n-                attrs,\n+                attrs: data.get_item_attrs(id.index, sess).collect(),\n                 kind: ast::ItemKind::MacroDef(data.get_macro(id.index, sess)),\n                 vis: ast::Visibility {\n                     span: span.shrink_to_lo(),"}, {"sha": "26344080381daba1d0deea4f9811fb37eefc0b78", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/13241008005f2471b3e4bae464ff81b2c2e2258f/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13241008005f2471b3e4bae464ff81b2c2e2258f/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=13241008005f2471b3e4bae464ff81b2c2e2258f", "patch": "@@ -3419,27 +3419,21 @@ impl<'a> Resolver<'a> {\n                     return v.clone();\n                 }\n \n-                let parse_attrs = || {\n-                    let attrs = self.cstore().item_attrs(def_id, self.session);\n-                    let attr =\n-                        attrs.iter().find(|a| a.has_name(sym::rustc_legacy_const_generics))?;\n-                    let mut ret = vec![];\n-                    for meta in attr.meta_item_list()? {\n-                        match meta.literal()?.kind {\n-                            LitKind::Int(a, _) => {\n-                                ret.push(a as usize);\n-                            }\n-                            _ => panic!(\"invalid arg index\"),\n-                        }\n+                let attr = self\n+                    .cstore()\n+                    .item_attrs(def_id, self.session)\n+                    .into_iter()\n+                    .find(|a| a.has_name(sym::rustc_legacy_const_generics))?;\n+                let mut ret = Vec::new();\n+                for meta in attr.meta_item_list()? {\n+                    match meta.literal()?.kind {\n+                        LitKind::Int(a, _) => ret.push(a as usize),\n+                        _ => panic!(\"invalid arg index\"),\n                     }\n-                    Some(ret)\n-                };\n-\n-                // Cache the lookup to avoid parsing attributes for an iterm\n-                // multiple times.\n-                let ret = parse_attrs();\n-                self.legacy_const_generic_args.insert(def_id, ret.clone());\n-                return ret;\n+                }\n+                // Cache the lookup to avoid parsing attributes for an iterm multiple times.\n+                self.legacy_const_generic_args.insert(def_id, Some(ret.clone()));\n+                return Some(ret);\n             }\n         }\n         None"}]}