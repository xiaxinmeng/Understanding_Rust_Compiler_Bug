{"sha": "3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "node_id": "C_kwDOAAsO6NoAKDNmYjI0OWJlYmNlOTk1ZWM2ZmRiMWE0YTNmNDljZjFhY2Q1Yzg2Yjc", "commit": {"author": {"name": "Goldstein", "email": "root@goldstein.rs", "date": "2022-08-01T18:49:12Z"}, "committer": {"name": "Goldstein", "email": "root@goldstein.rs", "date": "2022-08-12T09:32:43Z"}, "message": "improve \"try ignoring the field\" diagnostic\n\nCloses #95795", "tree": {"sha": "545c11acc986f95dd8afb2610647974cfdeabf59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/545c11acc986f95dd8afb2610647974cfdeabf59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQLry2Hy0N0b2I3LXjeYDGroLsmmgUCYvYeOwAKCRDeYDGroLsm\nmhlhAP9UnR3xLZcNZpehuKW78vewYaz1HxrTLvQgU0psUpzkBQEAuisPQWxFkTdL\n8R6XZmufaRP1OV/O+stWat+HUQKmwww=\n=nQvt\n-----END PGP SIGNATURE-----", "payload": "tree 545c11acc986f95dd8afb2610647974cfdeabf59\nparent f03ce30962cf1b2a5158667eabae8bf6e8d1cb03\nauthor Goldstein <root@goldstein.rs> 1659379752 +0300\ncommitter Goldstein <root@goldstein.rs> 1660296763 +0300\n\nimprove \"try ignoring the field\" diagnostic\n\nCloses #95795\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "html_url": "https://github.com/rust-lang/rust/commit/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/comments", "author": {"login": "GoldsteinE", "id": 12019211, "node_id": "MDQ6VXNlcjEyMDE5MjEx", "avatar_url": "https://avatars.githubusercontent.com/u/12019211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoldsteinE", "html_url": "https://github.com/GoldsteinE", "followers_url": "https://api.github.com/users/GoldsteinE/followers", "following_url": "https://api.github.com/users/GoldsteinE/following{/other_user}", "gists_url": "https://api.github.com/users/GoldsteinE/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoldsteinE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoldsteinE/subscriptions", "organizations_url": "https://api.github.com/users/GoldsteinE/orgs", "repos_url": "https://api.github.com/users/GoldsteinE/repos", "events_url": "https://api.github.com/users/GoldsteinE/events{/privacy}", "received_events_url": "https://api.github.com/users/GoldsteinE/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GoldsteinE", "id": 12019211, "node_id": "MDQ6VXNlcjEyMDE5MjEx", "avatar_url": "https://avatars.githubusercontent.com/u/12019211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoldsteinE", "html_url": "https://github.com/GoldsteinE", "followers_url": "https://api.github.com/users/GoldsteinE/followers", "following_url": "https://api.github.com/users/GoldsteinE/following{/other_user}", "gists_url": "https://api.github.com/users/GoldsteinE/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoldsteinE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoldsteinE/subscriptions", "organizations_url": "https://api.github.com/users/GoldsteinE/orgs", "repos_url": "https://api.github.com/users/GoldsteinE/repos", "events_url": "https://api.github.com/users/GoldsteinE/events{/privacy}", "received_events_url": "https://api.github.com/users/GoldsteinE/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f03ce30962cf1b2a5158667eabae8bf6e8d1cb03", "url": "https://api.github.com/repos/rust-lang/rust/commits/f03ce30962cf1b2a5158667eabae8bf6e8d1cb03", "html_url": "https://github.com/rust-lang/rust/commit/f03ce30962cf1b2a5158667eabae8bf6e8d1cb03"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "7124b84bfef3893414cc39da5c93d41da1134446", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "patch": "@@ -98,7 +98,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, DefIdTree, RootVariableMinCaptureList, Ty, TyCtxt};\n use rustc_session::lint;\n use rustc_span::symbol::{kw, sym, Symbol};\n-use rustc_span::Span;\n+use rustc_span::{BytePos, Span};\n \n use std::collections::VecDeque;\n use std::io;\n@@ -1549,23 +1549,27 @@ impl<'tcx> Liveness<'_, 'tcx> {\n                 .or_insert_with(|| (ln, var, vec![id_and_sp]));\n         });\n \n+        let can_remove = matches!(&pat.kind, hir::PatKind::Struct(_, _, true));\n+\n         for (_, (ln, var, hir_ids_and_spans)) in vars {\n             if self.used_on_entry(ln, var) {\n                 let id = hir_ids_and_spans[0].0;\n                 let spans =\n                     hir_ids_and_spans.into_iter().map(|(_, _, ident_span)| ident_span).collect();\n                 on_used_on_entry(spans, id, ln, var);\n             } else {\n-                self.report_unused(hir_ids_and_spans, ln, var);\n+                self.report_unused(hir_ids_and_spans, ln, var, can_remove);\n             }\n         }\n     }\n \n+    #[tracing::instrument(skip(self), level = \"INFO\")]\n     fn report_unused(\n         &self,\n         hir_ids_and_spans: Vec<(HirId, Span, Span)>,\n         ln: LiveNode,\n         var: Variable,\n+        can_remove: bool,\n     ) {\n         let first_hir_id = hir_ids_and_spans[0].0;\n \n@@ -1590,6 +1594,32 @@ impl<'tcx> Liveness<'_, 'tcx> {\n                             .emit();\n                     },\n                 )\n+            } else if can_remove {\n+                self.ir.tcx.struct_span_lint_hir(\n+                    lint::builtin::UNUSED_VARIABLES,\n+                    first_hir_id,\n+                    hir_ids_and_spans.iter().map(|(_, pat_span, _)| *pat_span).collect::<Vec<_>>(),\n+                    |lint| {\n+                        let mut err = lint.build(&format!(\"unused variable: `{}`\", name));\n+                        err.multipart_suggestion(\n+                            \"try removing the field\",\n+                            hir_ids_and_spans\n+                                .iter()\n+                                .map(|(_, pat_span, _)| {\n+                                    let span = self\n+                                        .ir\n+                                        .tcx\n+                                        .sess\n+                                        .source_map()\n+                                        .span_extend_to_next_char(*pat_span, ',', true);\n+                                    (span.with_hi(BytePos(span.hi().0 + 1)), String::new())\n+                                })\n+                                .collect(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                        err.emit();\n+                    },\n+                );\n             } else {\n                 let (shorthands, non_shorthands): (Vec<_>, Vec<_>) =\n                     hir_ids_and_spans.iter().copied().partition(|(hir_id, _, ident_span)| {"}, {"sha": "948aa2b94d9656dffa72ed6b022038bc93743269", "filename": "src/test/ui/suggestions/dont-try-removing-the-field.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Fdont-try-removing-the-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Fdont-try-removing-the-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-try-removing-the-field.rs?ref=3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+\n+#![allow(dead_code)]\n+\n+struct Foo {\n+    foo: i32,\n+    bar: i32,\n+    baz: (),\n+}\n+\n+fn use_foo(x: Foo) -> (i32, i32) {\n+    let Foo { foo, bar, baz } = x; //~ WARNING unused variable: `baz`\n+                                   //~| help: try ignoring the field\n+    return (foo, bar);\n+}\n+\n+fn main() {}"}, {"sha": "263171a4ac456d13d06b8e589c4347efebccc90e", "filename": "src/test/ui/suggestions/dont-try-removing-the-field.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Fdont-try-removing-the-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Fdont-try-removing-the-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-try-removing-the-field.stderr?ref=3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "patch": "@@ -0,0 +1,10 @@\n+warning: unused variable: `baz`\n+  --> $DIR/dont-try-removing-the-field.rs:12:25\n+   |\n+LL |     let Foo { foo, bar, baz } = x;\n+   |                         ^^^ help: try ignoring the field: `baz: _`\n+   |\n+   = note: `#[warn(unused_variables)]` on by default\n+\n+warning: 1 warning emitted\n+"}, {"sha": "9d0573ca2554d536b610bcb5b57e84fc43684e45", "filename": "src/test/ui/suggestions/try-removing-the-field.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Ftry-removing-the-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Ftry-removing-the-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftry-removing-the-field.rs?ref=3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+\n+#![allow(dead_code)]\n+\n+struct Foo {\n+    foo: i32,\n+    bar: (),\n+    baz: (),\n+}\n+\n+fn use_foo(x: Foo) -> i32 {\n+    let Foo { foo, bar, .. } = x; //~ WARNING unused variable: `bar`\n+                                  //~| help: try removing the field\n+    return foo;\n+}\n+\n+fn main() {}"}, {"sha": "448a2c3d2ec27a8be9663a575f51ded43a2cf9b4", "filename": "src/test/ui/suggestions/try-removing-the-field.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Ftry-removing-the-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7/src%2Ftest%2Fui%2Fsuggestions%2Ftry-removing-the-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftry-removing-the-field.stderr?ref=3fb249bebce995ec6fdb1a4a3f49cf1acd5c86b7", "patch": "@@ -0,0 +1,12 @@\n+warning: unused variable: `bar`\n+  --> $DIR/try-removing-the-field.rs:12:20\n+   |\n+LL |     let Foo { foo, bar, .. } = x;\n+   |                    ^^^-\n+   |                    |\n+   |                    help: try removing the field\n+   |\n+   = note: `#[warn(unused_variables)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}