{"sha": "9dc7f13c39febc6466c8f79ad4c270ab8a63881f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYzdmMTNjMzlmZWJjNjQ2NmM4Zjc5YWQ0YzI3MGFiOGE2Mzg4MWY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-10T18:15:55Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-08T21:57:49Z"}, "message": "Remove unnecessary import of `crate::marker` in std::sys_common::remutex.\n\nIt was used for marker::Send, but Send is already in scope.", "tree": {"sha": "625e4279738b68cbfc3da237133728da3d1a541e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/625e4279738b68cbfc3da237133728da3d1a541e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dc7f13c39febc6466c8f79ad4c270ab8a63881f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc7f13c39febc6466c8f79ad4c270ab8a63881f", "html_url": "https://github.com/rust-lang/rust/commit/9dc7f13c39febc6466c8f79ad4c270ab8a63881f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dc7f13c39febc6466c8f79ad4c270ab8a63881f/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bc5d44ca963a4dccf09c993fe9813f6a795aedf", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc5d44ca963a4dccf09c993fe9813f6a795aedf", "html_url": "https://github.com/rust-lang/rust/commit/2bc5d44ca963a4dccf09c993fe9813f6a795aedf"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "35d6701efd0bdec3fe706920c994426d5e15f5e3", "filename": "library/std/src/sys_common/remutex.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc7f13c39febc6466c8f79ad4c270ab8a63881f/library%2Fstd%2Fsrc%2Fsys_common%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc7f13c39febc6466c8f79ad4c270ab8a63881f/library%2Fstd%2Fsrc%2Fsys_common%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fremutex.rs?ref=9dc7f13c39febc6466c8f79ad4c270ab8a63881f", "patch": "@@ -2,7 +2,6 @@\n mod tests;\n \n use crate::fmt;\n-use crate::marker;\n use crate::ops::Deref;\n use crate::panic::{RefUnwindSafe, UnwindSafe};\n use crate::sys::mutex as sys;\n@@ -40,7 +39,7 @@ pub struct ReentrantMutexGuard<'a, T: 'a> {\n     lock: &'a ReentrantMutex<T>,\n }\n \n-impl<T> !marker::Send for ReentrantMutexGuard<'_, T> {}\n+impl<T> !Send for ReentrantMutexGuard<'_, T> {}\n \n impl<T> ReentrantMutex<T> {\n     /// Creates a new reentrant mutex in an unlocked state."}]}