{"sha": "eafb42dc94b191fdd9f38b548f624184101182a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZmI0MmRjOTRiMTkxZmRkOWYzOGI1NDhmNjI0MTg0MTAxMTgyYTI=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-10T16:18:53Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-24T14:49:22Z"}, "message": "Add binary dependencies to dep-info files", "tree": {"sha": "f07a8050b0731af2de98f268dfe29908d1ca2232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f07a8050b0731af2de98f268dfe29908d1ca2232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eafb42dc94b191fdd9f38b548f624184101182a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eafb42dc94b191fdd9f38b548f624184101182a2", "html_url": "https://github.com/rust-lang/rust/commit/eafb42dc94b191fdd9f38b548f624184101182a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eafb42dc94b191fdd9f38b548f624184101182a2/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a6a304e2baaabca88059753f020377f2476978", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a6a304e2baaabca88059753f020377f2476978", "html_url": "https://github.com/rust-lang/rust/commit/27a6a304e2baaabca88059753f020377f2476978"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "469215563ac39bc27ccc8a7cc107470d23b7f660", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eafb42dc94b191fdd9f38b548f624184101182a2/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eafb42dc94b191fdd9f38b548f624184101182a2/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=eafb42dc94b191fdd9f38b548f624184101182a2", "patch": "@@ -9,6 +9,7 @@ use rustc::hir::lowering::lower_crate;\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc::lint;\n use rustc::middle::{self, reachable, resolve_lifetime, stability};\n+use rustc::middle::cstore::CrateStore;\n use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, AllArenas, Resolutions, TyCtxt, GlobalCtxt};\n use rustc::ty::steal::Steal;\n@@ -657,7 +658,8 @@ fn escape_dep_filename(filename: &FileName) -> String {\n     filename.to_string().replace(\" \", \"\\\\ \")\n }\n \n-fn write_out_deps(sess: &Session, outputs: &OutputFilenames, out_filenames: &[PathBuf]) {\n+fn write_out_deps(compiler: &Compiler, outputs: &OutputFilenames, out_filenames: &[PathBuf]) {\n+    let sess = &compiler.sess;\n     // Write out dependency rules to the dep-info file if requested\n     if !sess.opts.output_types.contains_key(&OutputType::DepInfo) {\n         return;\n@@ -667,13 +669,28 @@ fn write_out_deps(sess: &Session, outputs: &OutputFilenames, out_filenames: &[Pa\n     let result = (|| -> io::Result<()> {\n         // Build a list of files used to compile the output and\n         // write Makefile-compatible dependency rules\n-        let files: Vec<String> = sess.source_map()\n+        let mut files: Vec<String> = sess.source_map()\n             .files()\n             .iter()\n             .filter(|fmap| fmap.is_real_file())\n             .filter(|fmap| !fmap.is_imported())\n             .map(|fmap| escape_dep_filename(&fmap.name))\n             .collect();\n+\n+        for cnum in compiler.cstore.crates_untracked() {\n+            let metadata = compiler.cstore.crate_data_as_rc_any(cnum);\n+            let metadata = metadata.downcast_ref::<cstore::CrateMetadata>().unwrap();\n+            if let Some((path, _)) = &metadata.source.dylib {\n+                files.push(escape_dep_filename(&FileName::Real(path.clone())));\n+            }\n+            if let Some((path, _)) = &metadata.source.rlib {\n+                files.push(escape_dep_filename(&FileName::Real(path.clone())));\n+            }\n+            if let Some((path, _)) = &metadata.source.rmeta {\n+                files.push(escape_dep_filename(&FileName::Real(path.clone())));\n+            }\n+        }\n+\n         let mut file = fs::File::create(&deps_filename)?;\n         for path in out_filenames {\n             writeln!(file, \"{}: {}\\n\", path.display(), files.join(\" \"))?;\n@@ -750,7 +767,7 @@ pub fn prepare_outputs(\n         }\n     }\n \n-    write_out_deps(sess, &outputs, &output_paths);\n+    write_out_deps(compiler, &outputs, &output_paths);\n \n     let only_dep_info = sess.opts.output_types.contains_key(&OutputType::DepInfo)\n         && sess.opts.output_types.len() == 1;"}]}