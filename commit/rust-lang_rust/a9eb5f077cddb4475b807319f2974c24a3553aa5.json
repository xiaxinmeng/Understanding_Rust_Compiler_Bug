{"sha": "a9eb5f077cddb4475b807319f2974c24a3553aa5", "node_id": "C_kwDOAAsO6NoAKGE5ZWI1ZjA3N2NkZGI0NDc1YjgwNzMxOWYyOTc0YzI0YTM1NTNhYTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-23T11:26:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-23T11:26:44Z"}, "message": "Rollup merge of #94260 - GuillaumeGomez:infinite-redirection, r=notriddle\n\nFix rustdoc infinite redirection generation\n\nSomeone came to me about a funny bug they had when clicking on any link on [this page](https://world.pages.gitlab.gnome.org/Rust/libadwaita-rs/stable/latest/docs/libadwaita/builders/index.html): it ended one page redirecting to itself indefinitely.\n\nI was able to make a minimum reproducible case to trigger this bug which I now use as a test.\n\nr? ``@notriddle``", "tree": {"sha": "b4586fb4e2dbe95f7848303a4d75cd92d6f022c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4586fb4e2dbe95f7848303a4d75cd92d6f022c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9eb5f077cddb4475b807319f2974c24a3553aa5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiFhn0CRBK7hj4Ov3rIwAAWcsIAG+ssQjO9R1BYKwzxSBwZS5C\nZXeNBJW9tLUFtPYK6LHkHoZd3u5YKNpV8RKPhBDVXPT0Cc66m8HiZRdb4ZyT1X9n\nMhtPHP69ZCM2cH/PjZNsmc1U4Qn1RtvuI6yq27nFf0SLpIB7zy3xPEPcoE4DNrVJ\nsNelz/fp8hnzu+vEwB7GQYf2DiFX/4PhuWNjdRwvyM1Bv+Ag1zXn/aJqUizsqDnA\nVZGoVzSzpWx5Ijm+/NVAGwJLwVuEGDcWZkkGuGbGViWqwkitqzZF5qCF3/l7V91v\n+b5cDXWK71VCyfHqGRPkQcTKIaZ21QnsQyqCqOaQf37buNiy2Rd7H4MjnF033x8=\n=YCKW\n-----END PGP SIGNATURE-----\n", "payload": "tree b4586fb4e2dbe95f7848303a4d75cd92d6f022c6\nparent 09e4f3458357b072a9b8351f75b4ceb5d6ef6608\nparent 1d95acba346354fa216dde1bde777ee71ca912b7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645615604 +0100\ncommitter GitHub <noreply@github.com> 1645615604 +0100\n\nRollup merge of #94260 - GuillaumeGomez:infinite-redirection, r=notriddle\n\nFix rustdoc infinite redirection generation\n\nSomeone came to me about a funny bug they had when clicking on any link on [this page](https://world.pages.gitlab.gnome.org/Rust/libadwaita-rs/stable/latest/docs/libadwaita/builders/index.html): it ended one page redirecting to itself indefinitely.\n\nI was able to make a minimum reproducible case to trigger this bug which I now use as a test.\n\nr? ``@notriddle``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9eb5f077cddb4475b807319f2974c24a3553aa5", "html_url": "https://github.com/rust-lang/rust/commit/a9eb5f077cddb4475b807319f2974c24a3553aa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9eb5f077cddb4475b807319f2974c24a3553aa5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09e4f3458357b072a9b8351f75b4ceb5d6ef6608", "url": "https://api.github.com/repos/rust-lang/rust/commits/09e4f3458357b072a9b8351f75b4ceb5d6ef6608", "html_url": "https://github.com/rust-lang/rust/commit/09e4f3458357b072a9b8351f75b4ceb5d6ef6608"}, {"sha": "1d95acba346354fa216dde1bde777ee71ca912b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d95acba346354fa216dde1bde777ee71ca912b7", "html_url": "https://github.com/rust-lang/rust/commit/1d95acba346354fa216dde1bde777ee71ca912b7"}], "stats": {"total": 89, "additions": 63, "deletions": 26}, "files": [{"sha": "3f71a53f963e40d7a451ac0beb215f15e4a0e3c5", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 34, "deletions": 26, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/a9eb5f077cddb4475b807319f2974c24a3553aa5/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9eb5f077cddb4475b807319f2974c24a3553aa5/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=a9eb5f077cddb4475b807319f2974c24a3553aa5", "patch": "@@ -201,19 +201,19 @@ impl<'tcx> Context<'tcx> {\n         } else {\n             tyname.as_str()\n         };\n-        let page = layout::Page {\n-            css_class: tyname_s,\n-            root_path: &self.root_path(),\n-            static_root_path: self.shared.static_root_path.as_deref(),\n-            title: &title,\n-            description: &desc,\n-            keywords: &keywords,\n-            resource_suffix: &self.shared.resource_suffix,\n-            extra_scripts: &[],\n-            static_extra_scripts: &[],\n-        };\n \n         if !self.render_redirect_pages {\n+            let page = layout::Page {\n+                css_class: tyname_s,\n+                root_path: &self.root_path(),\n+                static_root_path: self.shared.static_root_path.as_deref(),\n+                title: &title,\n+                description: &desc,\n+                keywords: &keywords,\n+                resource_suffix: &self.shared.resource_suffix,\n+                extra_scripts: &[],\n+                static_extra_scripts: &[],\n+            };\n             layout::render(\n                 &self.shared.layout,\n                 &page,\n@@ -223,23 +223,31 @@ impl<'tcx> Context<'tcx> {\n             )\n         } else {\n             if let Some(&(ref names, ty)) = self.cache().paths.get(&it.def_id.expect_def_id()) {\n-                let mut path = String::new();\n-                for name in &names[..names.len() - 1] {\n-                    path.push_str(&name.as_str());\n-                    path.push('/');\n-                }\n-                path.push_str(&item_path(ty, &names.last().unwrap().as_str()));\n-                match self.shared.redirections {\n-                    Some(ref redirections) => {\n-                        let mut current_path = String::new();\n-                        for name in &self.current {\n-                            current_path.push_str(&name.as_str());\n-                            current_path.push('/');\n+                if self.current.len() + 1 != names.len()\n+                    || self.current.iter().zip(names.iter()).any(|(a, b)| a != b)\n+                {\n+                    // We checked that the redirection isn't pointing to the current file,\n+                    // preventing an infinite redirection loop in the generated\n+                    // documentation.\n+\n+                    let mut path = String::new();\n+                    for name in &names[..names.len() - 1] {\n+                        path.push_str(&name.as_str());\n+                        path.push('/');\n+                    }\n+                    path.push_str(&item_path(ty, &names.last().unwrap().as_str()));\n+                    match self.shared.redirections {\n+                        Some(ref redirections) => {\n+                            let mut current_path = String::new();\n+                            for name in &self.current {\n+                                current_path.push_str(&name.as_str());\n+                                current_path.push('/');\n+                            }\n+                            current_path.push_str(&item_path(ty, &names.last().unwrap().as_str()));\n+                            redirections.borrow_mut().insert(current_path, path);\n                         }\n-                        current_path.push_str(&item_path(ty, &names.last().unwrap().as_str()));\n-                        redirections.borrow_mut().insert(current_path, path);\n+                        None => return layout::redirect(&format!(\"{}{}\", self.root_path(), path)),\n                     }\n-                    None => return layout::redirect(&format!(\"{}{}\", self.root_path(), path)),\n                 }\n             }\n             String::new()"}, {"sha": "96a43323ce29d2432ca9163030267dadff0d6c29", "filename": "src/test/rustdoc/infinite-redirection.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a9eb5f077cddb4475b807319f2974c24a3553aa5/src%2Ftest%2Frustdoc%2Finfinite-redirection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9eb5f077cddb4475b807319f2974c24a3553aa5/src%2Ftest%2Frustdoc%2Finfinite-redirection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finfinite-redirection.rs?ref=a9eb5f077cddb4475b807319f2974c24a3553aa5", "patch": "@@ -0,0 +1,29 @@\n+#![crate_name = \"foo\"]\n+\n+// This test ensures that there is no \"infinite redirection\" file generated (a\n+// file which redirects to itself).\n+\n+// We check it's not a redirection file.\n+// @has 'foo/builders/struct.ActionRowBuilder.html'\n+// @has - '//*[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n+\n+// And that the link in the module is targetting it.\n+// @has 'foo/builders/index.html'\n+// @has - '//a[@href=\"struct.ActionRowBuilder.html\"]' 'ActionRowBuilder'\n+\n+mod auto {\n+    mod action_row {\n+        pub struct ActionRowBuilder;\n+    }\n+\n+    #[doc(hidden)]\n+    pub mod builders {\n+        pub use super::action_row::ActionRowBuilder;\n+    }\n+}\n+\n+pub use auto::*;\n+\n+pub mod builders {\n+    pub use crate::auto::builders::*;\n+}"}]}