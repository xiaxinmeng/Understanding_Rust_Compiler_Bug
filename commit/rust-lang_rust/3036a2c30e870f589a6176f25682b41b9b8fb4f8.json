{"sha": "3036a2c30e870f589a6176f25682b41b9b8fb4f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMzZhMmMzMGU4NzBmNTg5YTYxNzZmMjU2ODJiNDFiOWI4ZmI0Zjg=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-01-30T20:29:21Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-01-30T20:34:25Z"}, "message": "Move project_root function to clippy_dev/src/lib.rs\n\nThis allows us to use the method in both `fmt.rs` and `lib.rs` in\nmultiple places. The downside is that we panic inside the method now,\ninstead of using the error handling in `fmt.rs`. We may want to\ncentralize the error handling for clippy_dev at some point, though.", "tree": {"sha": "4499eba9d5bf853b3a92131ebadcb9bf9d4b4028", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4499eba9d5bf853b3a92131ebadcb9bf9d4b4028"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3036a2c30e870f589a6176f25682b41b9b8fb4f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl4zPdkQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5hOAD/oCbac1dg9FkW2+kTuX8P6NpX/TLeLuXZdq\nBc+aYW4mZ/DgKDprGKnMgKFItOIWhtLhC0ya3b32OloRlE1ppCSf+RnqroR06/5z\nS4Ci/DzmFFby7bf4FmYKzIjJsvCdsFXqN8L/Y6lps5hlkbrIabLsTcsDsU3mBBma\n6AMdOK3bDf6RnXvBxV8UZqADjVCFxT+hpYsA4NkWe/g0eZyph6uCsZbfXexghEtJ\n6CDxqXf7WAem8gz9VikSFxdxplVkgIEKzEhed/4ptKm9ybbbQNoaVo55F8WyvUNq\nnX1Hxs+HZWXra1nau8vA9RQQgKL4Y0yyLNkaolgF8mAQCXslUIemqfuv0tYf5K6+\nGisDtP4qsjLbBqGF/ZkO8O6WW9Sx8pMQjJsvYw0GKkoIAUNeFkkrqTXQFOcFpJ3h\nv//ExCDg2h5UthkY18sxUIKSb/BpcWkMVmTdZwwGqalKMEPLWTUp7ZZYoiybLzTT\naOqSzYM+8UQ9z44anWecDYn10x78CPhprclK12JLaJetncJzUoWAngk2LglgCFeL\nsqWZMcb7FLGZpZr+EMI6rOP8y0WY5Qei7/lK+hChpfIsSWm4jPViLpCITAoCjlgB\nZ+ec+EKcea1Vms/tci/XW5vbjCe40IVWFF4Fx5L2oAUa6yHSpCVjsqLXm/tgdJgT\noB9tL9+riQ==\n=qg+P\n-----END PGP SIGNATURE-----", "payload": "tree 4499eba9d5bf853b3a92131ebadcb9bf9d4b4028\nparent 4d1a11d354c77213a98f76b07933ebb26822d017\nauthor Philipp Hansch <dev@phansch.net> 1580416161 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1580416465 +0100\n\nMove project_root function to clippy_dev/src/lib.rs\n\nThis allows us to use the method in both `fmt.rs` and `lib.rs` in\nmultiple places. The downside is that we panic inside the method now,\ninstead of using the error handling in `fmt.rs`. We may want to\ncentralize the error handling for clippy_dev at some point, though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3036a2c30e870f589a6176f25682b41b9b8fb4f8", "html_url": "https://github.com/rust-lang/rust/commit/3036a2c30e870f589a6176f25682b41b9b8fb4f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3036a2c30e870f589a6176f25682b41b9b8fb4f8/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d1a11d354c77213a98f76b07933ebb26822d017", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d1a11d354c77213a98f76b07933ebb26822d017", "html_url": "https://github.com/rust-lang/rust/commit/4d1a11d354c77213a98f76b07933ebb26822d017"}], "stats": {"total": 51, "additions": 21, "deletions": 30}, "files": [{"sha": "a6043c4be0dc355969e8a144fe0abf1ab8f88cd5", "filename": "clippy_dev/src/fmt.rs", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3036a2c30e870f589a6176f25682b41b9b8fb4f8/clippy_dev%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036a2c30e870f589a6176f25682b41b9b8fb4f8/clippy_dev%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Ffmt.rs?ref=3036a2c30e870f589a6176f25682b41b9b8fb4f8", "patch": "@@ -1,15 +1,15 @@\n+use clippy_dev::clippy_project_root;\n use shell_escape::escape;\n use std::ffi::OsStr;\n use std::io;\n-use std::path::{Path, PathBuf};\n+use std::path::Path;\n use std::process::{self, Command};\n use walkdir::WalkDir;\n \n #[derive(Debug)]\n pub enum CliError {\n     CommandFailed(String),\n     IoError(io::Error),\n-    ProjectRootNotFound,\n     RustfmtNotInstalled,\n     WalkDirError(walkdir::Error),\n }\n@@ -35,7 +35,7 @@ pub fn run(check: bool, verbose: bool) {\n     fn try_run(context: &FmtContext) -> Result<bool, CliError> {\n         let mut success = true;\n \n-        let project_root = project_root()?;\n+        let project_root = clippy_project_root();\n \n         rustfmt_test(context)?;\n \n@@ -69,9 +69,6 @@ pub fn run(check: bool, verbose: bool) {\n             CliError::IoError(err) => {\n                 eprintln!(\"error: {}\", err);\n             },\n-            CliError::ProjectRootNotFound => {\n-                eprintln!(\"error: Can't determine root of project. Please run inside a Clippy working dir.\");\n-            },\n             CliError::RustfmtNotInstalled => {\n                 eprintln!(\"error: rustfmt nightly is not installed.\");\n             },\n@@ -176,22 +173,3 @@ fn rustfmt(context: &FmtContext, path: &Path) -> Result<bool, CliError> {\n     }\n     Ok(success)\n }\n-\n-fn project_root() -> Result<PathBuf, CliError> {\n-    let current_dir = std::env::current_dir()?;\n-    for path in current_dir.ancestors() {\n-        let result = std::fs::read_to_string(path.join(\"Cargo.toml\"));\n-        if let Err(err) = &result {\n-            if err.kind() == io::ErrorKind::NotFound {\n-                continue;\n-            }\n-        }\n-\n-        let content = result?;\n-        if content.contains(\"[package]\\nname = \\\"clippy\\\"\") {\n-            return Ok(path.to_path_buf());\n-        }\n-    }\n-\n-    Err(CliError::ProjectRootNotFound)\n-}"}, {"sha": "efc1a9675daaaf9a6ab9926a6c66ed4acfeb33a1", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3036a2c30e870f589a6176f25682b41b9b8fb4f8/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036a2c30e870f589a6176f25682b41b9b8fb4f8/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=3036a2c30e870f589a6176f25682b41b9b8fb4f8", "patch": "@@ -206,7 +206,7 @@ fn parse_contents(content: &str, filename: &str) -> impl Iterator<Item = Lint> {\n fn lint_files() -> impl Iterator<Item = walkdir::DirEntry> {\n     // We use `WalkDir` instead of `fs::read_dir` here in order to recurse into subdirectories.\n     // Otherwise we would not collect all the lints, for example in `clippy_lints/src/methods/`.\n-    let path = clippy_project_dir().join(\"clippy_lints/src\");\n+    let path = clippy_project_root().join(\"clippy_lints/src\");\n     WalkDir::new(path)\n         .into_iter()\n         .filter_map(std::result::Result::ok)\n@@ -237,7 +237,7 @@ pub fn replace_region_in_file<F>(\n where\n     F: Fn() -> Vec<String>,\n {\n-    let path = clippy_project_dir().join(path);\n+    let path = clippy_project_root().join(path);\n     let mut f = fs::File::open(&path).expect(&format!(\"File not found: {}\", path.to_string_lossy()));\n     let mut contents = String::new();\n     f.read_to_string(&mut contents)\n@@ -322,9 +322,22 @@ where\n }\n \n /// Returns the path to the Clippy project directory\n-fn clippy_project_dir() -> PathBuf {\n-    let clippy_dev_dir = PathBuf::from(std::env::var(\"CARGO_MANIFEST_DIR\").unwrap());\n-    clippy_dev_dir.parent().unwrap().to_path_buf()\n+pub fn clippy_project_root() -> PathBuf {\n+    let current_dir = std::env::current_dir().unwrap();\n+    for path in current_dir.ancestors() {\n+        let result = std::fs::read_to_string(path.join(\"Cargo.toml\"));\n+        if let Err(err) = &result {\n+            if err.kind() == std::io::ErrorKind::NotFound {\n+                continue;\n+            }\n+        }\n+\n+        let content = result.unwrap();\n+        if content.contains(\"[package]\\nname = \\\"clippy\\\"\") {\n+            return path.to_path_buf();\n+        }\n+    }\n+    panic!(\"error: Can't determine root of project. Please run inside a Clippy working dir.\");\n }\n \n #[test]"}]}