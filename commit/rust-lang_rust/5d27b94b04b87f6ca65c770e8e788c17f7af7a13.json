{"sha": "5d27b94b04b87f6ca65c770e8e788c17f7af7a13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMjdiOTRiMDRiODdmNmNhNjVjNzcwZThlNzg4YzE3ZjdhZjdhMTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-03T18:06:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-03T18:06:25Z"}, "message": "fix comment", "tree": {"sha": "1d0fc69af693d05c245379c9ddb2d3ea73945a56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d0fc69af693d05c245379c9ddb2d3ea73945a56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d27b94b04b87f6ca65c770e8e788c17f7af7a13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d27b94b04b87f6ca65c770e8e788c17f7af7a13", "html_url": "https://github.com/rust-lang/rust/commit/5d27b94b04b87f6ca65c770e8e788c17f7af7a13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d27b94b04b87f6ca65c770e8e788c17f7af7a13/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c533cf84969e7c04cc2616525e64bae2092884bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c533cf84969e7c04cc2616525e64bae2092884bd", "html_url": "https://github.com/rust-lang/rust/commit/c533cf84969e7c04cc2616525e64bae2092884bd"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "16015c4bf3a2c438d73589f92a6292a3e6402272", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5d27b94b04b87f6ca65c770e8e788c17f7af7a13/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d27b94b04b87f6ca65c770e8e788c17f7af7a13/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=5d27b94b04b87f6ca65c770e8e788c17f7af7a13", "patch": "@@ -277,10 +277,13 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n         self.tcx.erase_regions(&value)\n     }\n \n+    /// Return the size and aligment of the value at the given type.\n+    /// Note that the value does not matter if the type is sized. For unsized types,\n+    /// the value has to be a fat pointer, and we only care about the \"extra\" data in it.\n     pub fn size_and_align_of_dst(\n         &mut self,\n         ty: ty::Ty<'tcx>,\n-        value: Value, // This has to be a fat ptr; we only care about the \"extra\" data in it.\n+        value: Value,\n     ) -> EvalResult<'tcx, (u64, u64)> {\n         if let Some(size) = self.type_size(ty)? {\n             Ok((size as u64, self.type_align(ty)? as u64))"}]}