{"sha": "a67bf08ed79936fdf9b06d2c8d22fbeb60e55505", "node_id": "C_kwDOAAsO6NoAKGE2N2JmMDhlZDc5OTM2ZmRmOWIwNmQyYzhkMjJmYmViNjBlNTU1MDU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-07T12:09:06Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-09T17:59:35Z"}, "message": "Only check storage liveness for direct projections.", "tree": {"sha": "b064d1065d6eb661dc1e15ef9c8f624f86d30fb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b064d1065d6eb661dc1e15ef9c8f624f86d30fb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a67bf08ed79936fdf9b06d2c8d22fbeb60e55505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a67bf08ed79936fdf9b06d2c8d22fbeb60e55505", "html_url": "https://github.com/rust-lang/rust/commit/a67bf08ed79936fdf9b06d2c8d22fbeb60e55505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a67bf08ed79936fdf9b06d2c8d22fbeb60e55505/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4e1fe10460db3c6fe26947a9b8c7ac039540f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b4e1fe10460db3c6fe26947a9b8c7ac039540f6", "html_url": "https://github.com/rust-lang/rust/commit/3b4e1fe10460db3c6fe26947a9b8c7ac039540f6"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "dafd2ae23a635cef72a3a93cad057b5a4660c8c8", "filename": "compiler/rustc_mir_transform/src/ref_prop.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a67bf08ed79936fdf9b06d2c8d22fbeb60e55505/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a67bf08ed79936fdf9b06d2c8d22fbeb60e55505/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs?ref=a67bf08ed79936fdf9b06d2c8d22fbeb60e55505", "patch": "@@ -163,18 +163,15 @@ fn compute_replacement<'tcx>(\n     };\n \n     let mut can_perform_opt = |target: Place<'tcx>, loc: Location| {\n-        maybe_dead.seek_after_primary_effect(loc);\n-        let maybe_dead = maybe_dead.contains(target.local);\n-\n         if target.projection.first() == Some(&PlaceElem::Deref) {\n             // We are creating a reborrow. As `place.local` is a reference, removing the storage\n             // statements should not make it much harder for LLVM to optimize.\n-            if maybe_dead {\n-                storage_to_remove.insert(target.local);\n-            }\n+            storage_to_remove.insert(target.local);\n             true\n         } else {\n             // This is a proper dereference. We can only allow it if `target` is live.\n+            maybe_dead.seek_after_primary_effect(loc);\n+            let maybe_dead = maybe_dead.contains(target.local);\n             !maybe_dead\n         }\n     };"}]}