{"sha": "6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNmVmNzMxN2JmODczMjFjNWVhZWZiMTMyMjM4MGM4ZjI5N2ZmMWI=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2021-03-26T17:21:35Z"}, "committer": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2021-03-27T13:23:48Z"}, "message": "Improve fs error open_from unix\n\nConsistency for #79399\nSuggested by JohnTitor\n\nImprove fs error invaild input for sys_common\n\nThe text was duplicated from unix.", "tree": {"sha": "4f2ebcb1f9bbe90429aa9b09974ddf96c3c530bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f2ebcb1f9bbe90429aa9b09974ddf96c3c530bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "html_url": "https://github.com/rust-lang/rust/commit/6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c6ef7317bf87321c5eaefb1322380c8f297ff1b/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8719c51e0e44483cff9b6975a830f6e51812a48", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8719c51e0e44483cff9b6975a830f6e51812a48", "html_url": "https://github.com/rust-lang/rust/commit/b8719c51e0e44483cff9b6975a830f6e51812a48"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "759565bab73f38a1b6964760735f45d2cc05e8da", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c6ef7317bf87321c5eaefb1322380c8f297ff1b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6ef7317bf87321c5eaefb1322380c8f297ff1b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "patch": "@@ -2,7 +2,7 @@ use crate::os::unix::prelude::*;\n \n use crate::ffi::{CStr, CString, OsStr, OsString};\n use crate::fmt;\n-use crate::io::{self, Error, ErrorKind, IoSlice, IoSliceMut, SeekFrom};\n+use crate::io::{self, Error, IoSlice, IoSliceMut, SeekFrom};\n use crate::mem;\n use crate::path::{Path, PathBuf};\n use crate::ptr;\n@@ -1152,14 +1152,12 @@ pub fn canonicalize(p: &Path) -> io::Result<PathBuf> {\n \n fn open_from(from: &Path) -> io::Result<(crate::fs::File, crate::fs::Metadata)> {\n     use crate::fs::File;\n+    use crate::sys_common::fs::NOT_FILE_ERROR;\n \n     let reader = File::open(from)?;\n     let metadata = reader.metadata()?;\n     if !metadata.is_file() {\n-        return Err(Error::new_const(\n-            ErrorKind::InvalidInput,\n-            &\"the source path is not an existing regular file\",\n-        ));\n+        return Err(NOT_FILE_ERROR);\n     }\n     Ok((reader, metadata))\n }"}, {"sha": "30908824dd663002b0718a5c75d790bfb255426d", "filename": "library/std/src/sys_common/fs.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c6ef7317bf87321c5eaefb1322380c8f297ff1b/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6ef7317bf87321c5eaefb1322380c8f297ff1b/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs?ref=6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "patch": "@@ -4,15 +4,17 @@ use crate::fs;\n use crate::io::{self, Error, ErrorKind};\n use crate::path::Path;\n \n+pub(crate) const NOT_FILE_ERROR: Error = Error::new_const(\n+    ErrorKind::InvalidInput,\n+    &\"the source path is neither a regular file nor a symlink to a regular file\",\n+);\n+\n pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n     let mut reader = fs::File::open(from)?;\n     let metadata = reader.metadata()?;\n \n     if !metadata.is_file() {\n-        return Err(Error::new_const(\n-            ErrorKind::InvalidInput,\n-            &\"the source path is not an existing regular file\",\n-        ));\n+        return Err(NOT_FILE_ERROR);\n     }\n \n     let mut writer = fs::File::create(to)?;"}]}