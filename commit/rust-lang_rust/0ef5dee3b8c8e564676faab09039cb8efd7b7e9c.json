{"sha": "0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZjVkZWUzYjhjOGU1NjQ2NzZmYWFiMDkwMzljYjhlZmQ3YjdlOWM=", "commit": {"author": {"name": "Sean Klein", "email": "seanmarionklein@gmail.com", "date": "2020-04-19T14:49:12Z"}, "committer": {"name": "Sean Klein", "email": "seanmarionklein@gmail.com", "date": "2020-04-19T14:56:15Z"}, "message": "Fix issue #2907.\n\nUpdate the \"borrow box\" lint to avoid recommending the following\nconversion:\n\n```\n  // Old\n  pub fn f(&mut Box<T>) {...}\n\n  // New\n  pub fn f(&mut T) {...}\n```\n\nGiven a mutable reference to a box, functions may want to change\n\"which\" object the Box is pointing at.\n\nThis change avoids recommending removing the \"Box\" parameter\nfor mutable references.", "tree": {"sha": "10f6555779b6205366229c61b935dfbddd8240d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10f6555779b6205366229c61b935dfbddd8240d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "html_url": "https://github.com/rust-lang/rust/commit/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/comments", "author": {"login": "smklein", "id": 3258857, "node_id": "MDQ6VXNlcjMyNTg4NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3258857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smklein", "html_url": "https://github.com/smklein", "followers_url": "https://api.github.com/users/smklein/followers", "following_url": "https://api.github.com/users/smklein/following{/other_user}", "gists_url": "https://api.github.com/users/smklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/smklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smklein/subscriptions", "organizations_url": "https://api.github.com/users/smklein/orgs", "repos_url": "https://api.github.com/users/smklein/repos", "events_url": "https://api.github.com/users/smklein/events{/privacy}", "received_events_url": "https://api.github.com/users/smklein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smklein", "id": 3258857, "node_id": "MDQ6VXNlcjMyNTg4NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3258857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smklein", "html_url": "https://github.com/smklein", "followers_url": "https://api.github.com/users/smklein/followers", "following_url": "https://api.github.com/users/smklein/following{/other_user}", "gists_url": "https://api.github.com/users/smklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/smklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smklein/subscriptions", "organizations_url": "https://api.github.com/users/smklein/orgs", "repos_url": "https://api.github.com/users/smklein/repos", "events_url": "https://api.github.com/users/smklein/events{/privacy}", "received_events_url": "https://api.github.com/users/smklein/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6b07db3859650b8189af7cce566c93716d97cdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b07db3859650b8189af7cce566c93716d97cdc", "html_url": "https://github.com/rust-lang/rust/commit/f6b07db3859650b8189af7cce566c93716d97cdc"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "153a2b7249c18a1fd5ee4f11c25ab85a3407d15e", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "patch": "@@ -531,11 +531,12 @@ impl Types {\n                         } else {\n                             format!(\"{} \", lt.name.ident().as_str())\n                         };\n-                        let mutopt = if mut_ty.mutbl == Mutability::Mut {\n-                            \"mut \"\n-                        } else {\n-                            \"\"\n-                        };\n+\n+                        if mut_ty.mutbl == Mutability::Mut {\n+                            // Ignore `&mut Box<T>` types; see issue #2907 for\n+                            // details.\n+                            return;\n+                        }\n                         let mut applicability = Applicability::MachineApplicable;\n                         span_lint_and_sugg(\n                             cx,\n@@ -544,9 +545,8 @@ impl Types {\n                             \"you seem to be trying to use `&Box<T>`. Consider using just `&T`\",\n                             \"try\",\n                             format!(\n-                                \"&{}{}{}\",\n+                                \"&{}{}\",\n                                 ltopt,\n-                                mutopt,\n                                 &snippet_with_applicability(cx, inner.span, \"..\", &mut applicability)\n                             ),\n                             Applicability::Unspecified,"}, {"sha": "1901de46ca8940a4d029c09a76b800002eb540b4", "filename": "tests/ui/borrow_box.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/tests%2Fui%2Fborrow_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/tests%2Fui%2Fborrow_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.rs?ref=0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "patch": "@@ -4,6 +4,14 @@\n #![allow(dead_code)]\n \n pub fn test1(foo: &mut Box<bool>) {\n+    // Although this function could be changed to \"&mut bool\",\n+    // avoiding the Box, mutable references to boxes are not\n+    // flagged by this lint.\n+    //\n+    // This omission is intentional: By passing a mutable Box,\n+    // the memory location of the pointed-to object could be\n+    // modified. By passing a mutable reference, the contents\n+    // could change, but not the location.\n     println!(\"{:?}\", foo)\n }\n \n@@ -71,6 +79,16 @@ impl<'a> Test12 for Test11<'a> {\n     }\n }\n \n+pub fn test13(boxed_slice: &mut Box<[i32]>) {\n+    // Unconditionally replaces the box pointer.\n+    //\n+    // This cannot be accomplished if \"&mut [i32]\" is passed,\n+    // and provides a test case where passing a reference to\n+    // a Box is valid.\n+    let mut data = vec![12];\n+    *boxed_slice = data.into_boxed_slice();\n+}\n+\n fn main() {\n     test1(&mut Box::new(false));\n     test2();"}, {"sha": "b5db691f89f3936848d9856ef287690513816a15", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ef5dee3b8c8e564676faab09039cb8efd7b7e9c/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=0ef5dee3b8c8e564676faab09039cb8efd7b7e9c", "patch": "@@ -1,8 +1,8 @@\n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:6:19\n+  --> $DIR/borrow_box.rs:19:14\n    |\n-LL | pub fn test1(foo: &mut Box<bool>) {\n-   |                   ^^^^^^^^^^^^^^ help: try: `&mut bool`\n+LL |     let foo: &Box<bool>;\n+   |              ^^^^^^^^^^ help: try: `&bool`\n    |\n note: the lint level is defined here\n   --> $DIR/borrow_box.rs:1:9\n@@ -11,22 +11,16 @@ LL | #![deny(clippy::borrowed_box)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:11:14\n-   |\n-LL |     let foo: &Box<bool>;\n-   |              ^^^^^^^^^^ help: try: `&bool`\n-\n-error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:15:10\n+  --> $DIR/borrow_box.rs:23:10\n    |\n LL |     foo: &'a Box<bool>,\n    |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:19:17\n+  --> $DIR/borrow_box.rs:27:17\n    |\n LL |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n "}]}