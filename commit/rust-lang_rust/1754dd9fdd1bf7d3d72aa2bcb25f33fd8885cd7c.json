{"sha": "1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NTRkZDlmZGQxYmY3ZDNkNzJhYTJiY2IyNWYzM2ZkODg4NWNkN2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T12:31:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T12:31:12Z"}, "message": "remove DefKind::Function", "tree": {"sha": "b5f6bf5b64ac882d7077c0872659e33e99403d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5f6bf5b64ac882d7077c0872659e33e99403d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c", "html_url": "https://github.com/rust-lang/rust/commit/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec7ed054e06cb2e23fd3911932766b32014c8fa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec7ed054e06cb2e23fd3911932766b32014c8fa1", "html_url": "https://github.com/rust-lang/rust/commit/ec7ed054e06cb2e23fd3911932766b32014c8fa1"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "f00448081cc588be95b0c46a0eb7e3f06fae0fb8", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c", "patch": "@@ -209,7 +209,6 @@ pub struct DefLoc {\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n pub(crate) enum DefKind {\n-    Function,\n     Struct,\n     Enum,\n     EnumVariant,\n@@ -239,7 +238,6 @@ impl DefId {\n     pub fn resolve(self, db: &impl HirDatabase) -> Def {\n         let loc = self.loc(db);\n         match loc.kind {\n-            DefKind::Function => unreachable!(),\n             DefKind::Struct => {\n                 let struct_def = Struct::new(self);\n                 Def::Struct(struct_def)"}, {"sha": "274169f93d3facf862e195ba228fd5b1326e39f0", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=1754dd9fdd1bf7d3d72aa2bcb25f33fd8885cd7c", "patch": "@@ -77,7 +77,9 @@ impl ImplData {\n                 .impl_items()\n                 .map(|item_node| {\n                     let kind = match item_node.kind() {\n-                        ast::ImplItemKind::FnDef(..) => DefKind::Function,\n+                        ast::ImplItemKind::FnDef(it) => {\n+                            return ImplItem::Method(Function::from_ast(db, module, file_id, it));\n+                        }\n                         ast::ImplItemKind::ConstDef(..) => DefKind::Item,\n                         ast::ImplItemKind::TypeDef(..) => DefKind::Item,\n                     };\n@@ -93,9 +95,7 @@ impl ImplData {\n                     };\n                     let def_id = def_loc.id(db);\n                     match item_node.kind() {\n-                        ast::ImplItemKind::FnDef(it) => {\n-                            ImplItem::Method(Function::from_ast(db, module, file_id, it))\n-                        }\n+                        ast::ImplItemKind::FnDef(_) => unreachable!(),\n                         ast::ImplItemKind::ConstDef(..) => ImplItem::Const(def_id),\n                         ast::ImplItemKind::TypeDef(..) => ImplItem::Type(def_id),\n                     }"}]}