{"sha": "e9ce855beb599b7b7c53979ade57d3831f1c4a82", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Y2U4NTViZWI1OTliN2I3YzUzOTc5YWRlNTdkMzgzMWYxYzRhODI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-31T20:33:42Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T14:44:49Z"}, "message": "librustc: De-`@str` liveness", "tree": {"sha": "7574e6c70a8500be14d041467786401e3e74569c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7574e6c70a8500be14d041467786401e3e74569c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9ce855beb599b7b7c53979ade57d3831f1c4a82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ce855beb599b7b7c53979ade57d3831f1c4a82", "html_url": "https://github.com/rust-lang/rust/commit/e9ce855beb599b7b7c53979ade57d3831f1c4a82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9ce855beb599b7b7c53979ade57d3831f1c4a82/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b265dd4156578800fa1171e615638cd86f517042", "url": "https://api.github.com/repos/rust-lang/rust/commits/b265dd4156578800fa1171e615638cd86f517042", "html_url": "https://github.com/rust-lang/rust/commit/b265dd4156578800fa1171e615638cd86f517042"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "ed583f919ca14c93bc16b0cec541c5eebb9274cf", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9ce855beb599b7b7c53979ade57d3831f1c4a82/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9ce855beb599b7b7c53979ade57d3831f1c4a82/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=e9ce855beb599b7b7c53979ade57d3831f1c4a82", "patch": "@@ -120,6 +120,7 @@ use std::vec;\n use syntax::ast::*;\n use syntax::codemap::Span;\n use syntax::parse::token::special_idents;\n+use syntax::parse::token;\n use syntax::print::pprust::{expr_to_str, block_to_str};\n use syntax::{visit, ast_util};\n use syntax::visit::{Visitor, FnKind};\n@@ -332,13 +333,14 @@ impl IrMaps {\n         }\n     }\n \n-    pub fn variable_name(&self, var: Variable) -> @str {\n+    pub fn variable_name(&self, var: Variable) -> ~str {\n         let var_kinds = self.var_kinds.borrow();\n         match var_kinds.get()[var.get()] {\n             Local(LocalInfo { ident: nm, .. }) | Arg(_, nm) => {\n-                self.tcx.sess.str_of(nm)\n+                let string = token::get_ident(nm.name);\n+                string.get().to_str()\n             },\n-            ImplicitRet => @\"<implicit-ret>\"\n+            ImplicitRet => ~\"<implicit-ret>\"\n         }\n     }\n \n@@ -1669,7 +1671,7 @@ impl Liveness {\n         }\n     }\n \n-    pub fn should_warn(&self, var: Variable) -> Option<@str> {\n+    pub fn should_warn(&self, var: Variable) -> Option<~str> {\n         let name = self.ir.variable_name(var);\n         if name.len() == 0 || name[0] == ('_' as u8) { None } else { Some(name) }\n     }"}]}