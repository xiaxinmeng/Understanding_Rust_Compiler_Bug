{"sha": "a52135f5a75b35d6962a30a5d200c786285c3089", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MjEzNWY1YTc1YjM1ZDY5NjJhMzBhNWQyMDBjNzg2Mjg1YzMwODk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-04T22:01:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-04T22:01:24Z"}, "message": "Tidy", "tree": {"sha": "ef01b0a6978853918aa0b50d3e8e6f6612380783", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef01b0a6978853918aa0b50d3e8e6f6612380783"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a52135f5a75b35d6962a30a5d200c786285c3089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a52135f5a75b35d6962a30a5d200c786285c3089", "html_url": "https://github.com/rust-lang/rust/commit/a52135f5a75b35d6962a30a5d200c786285c3089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a52135f5a75b35d6962a30a5d200c786285c3089/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34660f099ed50a0242b197430abf102dc0d7b322", "url": "https://api.github.com/repos/rust-lang/rust/commits/34660f099ed50a0242b197430abf102dc0d7b322", "html_url": "https://github.com/rust-lang/rust/commit/34660f099ed50a0242b197430abf102dc0d7b322"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "c01885bf40b27a794096cf9d9e5a3926042cdd2f", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a52135f5a75b35d6962a30a5d200c786285c3089/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a52135f5a75b35d6962a30a5d200c786285c3089/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=a52135f5a75b35d6962a30a5d200c786285c3089", "patch": "@@ -229,14 +229,17 @@ fn getopts(args: ~[str], opts: ~[opt]) -> result unsafe {\n                     /* In a series of potential options (eg. -aheJ), if we see\n                        one which takes an argument, we assume all subsequent\n                        characters make up the argument. This allows options\n-                       such as -L/usr/local/lib/foo to be interpreted correctly\n+                       such as -L/usr/local/lib/foo to be interpreted\n+                       correctly\n                     */\n+\n                     alt find_opt(opts, opt) {\n                       some(id) {\n                         last_valid_opt_id = option::some(id);\n                       }\n                       none {\n-                        let arg_follows = option::is_some(last_valid_opt_id) &&\n+                        let arg_follows =\n+                            option::is_some(last_valid_opt_id) &&\n                             alt opts[option::get(last_valid_opt_id)].hasarg {\n                               yes | maybe { true }\n                               no { false }"}]}