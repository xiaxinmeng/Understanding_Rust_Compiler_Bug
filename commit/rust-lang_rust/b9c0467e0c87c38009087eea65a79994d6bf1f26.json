{"sha": "b9c0467e0c87c38009087eea65a79994d6bf1f26", "node_id": "C_kwDOAAsO6NoAKGI5YzA0NjdlMGM4N2MzODAwOTA4N2VlYTY1YTc5OTk0ZDZiZjFmMjY", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-10-02T21:02:57Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-10-03T17:29:49Z"}, "message": "Add diagnostic struct for const eval error in `rustc_middle`\n\nCo-authored-by: Michael Goulet <michael@errs.io>", "tree": {"sha": "08f79e64758d2044dde85a9a11e618b36f4d003b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f79e64758d2044dde85a9a11e618b36f4d003b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9c0467e0c87c38009087eea65a79994d6bf1f26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c0467e0c87c38009087eea65a79994d6bf1f26", "html_url": "https://github.com/rust-lang/rust/commit/b9c0467e0c87c38009087eea65a79994d6bf1f26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9c0467e0c87c38009087eea65a79994d6bf1f26/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47e9af824a2c13873af6b898f2d65a36d029466", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47e9af824a2c13873af6b898f2d65a36d029466", "html_url": "https://github.com/rust-lang/rust/commit/f47e9af824a2c13873af6b898f2d65a36d029466"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ca3c91ce24a1dfd6ba4f89287af6ca845e800751", "filename": "compiler/rustc_error_messages/locales/en-US/middle.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b9c0467e0c87c38009087eea65a79994d6bf1f26/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmiddle.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/b9c0467e0c87c38009087eea65a79994d6bf1f26/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmiddle.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmiddle.ftl?ref=b9c0467e0c87c38009087eea65a79994d6bf1f26", "patch": "@@ -15,3 +15,6 @@ middle_previous_use_here =\n middle_limit_invalid =\n     `limit` must be a non-negative integer\n     .label = {$error_str}\n+\n+middle_const_eval_non_int =\n+    constant evaluation of enum discriminant resulted in non-integer"}, {"sha": "e69cb546d15f66a17afd90188d10b1f475669135", "filename": "compiler/rustc_middle/src/error.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b9c0467e0c87c38009087eea65a79994d6bf1f26/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9c0467e0c87c38009087eea65a79994d6bf1f26/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ferror.rs?ref=b9c0467e0c87c38009087eea65a79994d6bf1f26", "patch": "@@ -48,3 +48,10 @@ pub struct LimitInvalid<'a> {\n     pub value_span: Span,\n     pub error_str: &'a str,\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(middle::const_eval_non_int)]\n+pub struct ConstEvalNonIntError {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "3c485e264097044299558780c0f443ccb3f3f0db", "filename": "compiler/rustc_middle/src/ty/adt.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9c0467e0c87c38009087eea65a79994d6bf1f26/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9c0467e0c87c38009087eea65a79994d6bf1f26/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs?ref=b9c0467e0c87c38009087eea65a79994d6bf1f26", "patch": "@@ -458,11 +458,9 @@ impl<'tcx> AdtDef<'tcx> {\n                     Some(Discr { val: b, ty })\n                 } else {\n                     info!(\"invalid enum discriminant: {:#?}\", val);\n-                    crate::mir::interpret::struct_error(\n-                        tcx.at(tcx.def_span(expr_did)),\n-                        \"constant evaluation of enum discriminant resulted in non-integer\",\n-                    )\n-                    .emit();\n+                    tcx.sess.emit_err(crate::error::ConstEvalNonIntError {\n+                        span: tcx.def_span(expr_did),\n+                    });\n                     None\n                 }\n             }"}]}