{"sha": "70650897d889f2f37fb1be7e837300c87481d958", "node_id": "C_kwDOAAsO6NoAKDcwNjUwODk3ZDg4OWYyZjM3ZmIxYmU3ZTgzNzMwMGM4NzQ4MWQ5NTg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-02T10:37:24Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-02T10:37:24Z"}, "message": "Fix generate_function assist trying to use name-ref like keywords for names", "tree": {"sha": "4fa88e504eaca716c3b56ad94bea936c50f834d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fa88e504eaca716c3b56ad94bea936c50f834d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70650897d889f2f37fb1be7e837300c87481d958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70650897d889f2f37fb1be7e837300c87481d958", "html_url": "https://github.com/rust-lang/rust/commit/70650897d889f2f37fb1be7e837300c87481d958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70650897d889f2f37fb1be7e837300c87481d958/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c41f5d165d35870baa2aaae455fb44fd6eb2eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c41f5d165d35870baa2aaae455fb44fd6eb2eae", "html_url": "https://github.com/rust-lang/rust/commit/5c41f5d165d35870baa2aaae455fb44fd6eb2eae"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "9d31223d6c2e6acaa5db74d7dd8f67a489ca4629", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/70650897d889f2f37fb1be7e837300c87481d958/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70650897d889f2f37fb1be7e837300c87481d958/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=70650897d889f2f37fb1be7e837300c87481d958", "patch": "@@ -111,6 +111,10 @@ fn gen_fn(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n \n fn gen_method(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let call: ast::MethodCallExpr = ctx.find_node_at_offset()?;\n+    if ctx.sema.resolve_method_call(&call).is_some() {\n+        return None;\n+    }\n+\n     let fn_name = call.name_ref()?;\n     let adt = ctx.sema.type_of_expr(&call.receiver()?)?.original().strip_references().as_adt()?;\n \n@@ -481,7 +485,12 @@ fn fn_arg_name(sema: &Semantics<RootDatabase>, arg_expr: &ast::Expr) -> String {\n     let name = (|| match arg_expr {\n         ast::Expr::CastExpr(cast_expr) => Some(fn_arg_name(sema, &cast_expr.expr()?)),\n         expr => {\n-            let name_ref = expr.syntax().descendants().filter_map(ast::NameRef::cast).last()?;\n+            let name_ref = expr\n+                .syntax()\n+                .descendants()\n+                .filter_map(ast::NameRef::cast)\n+                .filter(|name| name.ident_token().is_some())\n+                .last()?;\n             if let Some(NameRefClass::Definition(Definition::Const(_) | Definition::Static(_))) =\n                 NameRefClass::classify(sema, &name_ref)\n             {"}]}