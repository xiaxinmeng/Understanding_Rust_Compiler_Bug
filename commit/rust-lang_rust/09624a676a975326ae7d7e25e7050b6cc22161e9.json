{"sha": "09624a676a975326ae7d7e25e7050b6cc22161e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NjI0YTY3NmE5NzUzMjZhZTdkN2UyNWU3MDUwYjZjYzIyMTYxZTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T06:39:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T07:12:42Z"}, "message": "test: Enable an assert in run-pass/rec-align-32-bit.rs", "tree": {"sha": "4f3062f02dc27f3ee87bd15816fbca6c3dff809a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f3062f02dc27f3ee87bd15816fbca6c3dff809a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09624a676a975326ae7d7e25e7050b6cc22161e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09624a676a975326ae7d7e25e7050b6cc22161e9", "html_url": "https://github.com/rust-lang/rust/commit/09624a676a975326ae7d7e25e7050b6cc22161e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09624a676a975326ae7d7e25e7050b6cc22161e9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4277472d277b740e57e5b075c0d71d49efa37cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4277472d277b740e57e5b075c0d71d49efa37cf", "html_url": "https://github.com/rust-lang/rust/commit/e4277472d277b740e57e5b075c0d71d49efa37cf"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "28e0268b6a57d60350770e73ffcf01829e55f511", "filename": "src/test/run-pass/rec-align-32-bit.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/09624a676a975326ae7d7e25e7050b6cc22161e9/src%2Ftest%2Frun-pass%2Frec-align-32-bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09624a676a975326ae7d7e25e7050b6cc22161e9/src%2Ftest%2Frun-pass%2Frec-align-32-bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-32-bit.rs?ref=09624a676a975326ae7d7e25e7050b6cc22161e9", "patch": "@@ -2,6 +2,12 @@\n // xfail-win32\n // Issue #2303\n \n+#[abi = \"rust-intrinsic\"]\n+native mod rusti {\n+    fn pref_align_of<T>() -> uint;\n+    fn min_align_of<T>() -> uint;\n+}\n+\n // This is the type with the questionable alignment\n type inner = {\n     c64: u64\n@@ -22,24 +28,18 @@ fn main() {\n     // Send it through the shape code\n     let y = #fmt[\"%?\", x];\n \n-    #debug(\"align inner = %?\", sys::pref_align_of::<inner>()); // 8\n-    #debug(\"size outer = %?\", sys::size_of::<outer>());   // 12\n-    #debug(\"y = %s\", y);                                  // (22, (0))\n+    #debug(\"align inner = %?\", rusti::min_align_of::<inner>());\n+    #debug(\"size outer = %?\", sys::size_of::<outer>());\n+    #debug(\"y = %s\", y);\n \n     // per clang/gcc the alignment of `inner` is 4 on x86.\n-    // we say it's 8\n-    //assert sys::align_of::<inner>() == 4u; // fails\n+    assert rusti::min_align_of::<inner>() == 4u;\n \n     // per clang/gcc the size of `outer` should be 12\n     // because `inner`s alignment was 4.\n-    // LLVM packs the struct the way clang likes, despite\n-    // our intents regarding the alignment of `inner` and\n-    // we end up with the same size `outer` as clang\n-    assert sys::size_of::<outer>() == 12u; // passes\n-\n-    // But now our shape code doesn't find the inner struct\n-    // We print (22, (0))\n-    assert y == \"(22, (44))\"; // fails\n+    assert sys::size_of::<outer>() == 12u;\n+\n+    assert y == \"(22, (44))\";\n }\n \n #[cfg(target_arch = \"x86_64\")]"}]}