{"sha": "64982cc435fc4546cbdc9ce3935cdd63ac636e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OTgyY2M0MzVmYzQ1NDZjYmRjOWNlMzkzNWNkZDYzYWM2MzZlNGU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-05T22:13:59Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-06T11:10:45Z"}, "message": "lintcheck: make TomlCrate also accept git-data from lintcheck_crates.toml", "tree": {"sha": "8da2b8a4074aab818bdb2d7851f7d6f1ca1875b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8da2b8a4074aab818bdb2d7851f7d6f1ca1875b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64982cc435fc4546cbdc9ce3935cdd63ac636e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64982cc435fc4546cbdc9ce3935cdd63ac636e4e", "html_url": "https://github.com/rust-lang/rust/commit/64982cc435fc4546cbdc9ce3935cdd63ac636e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64982cc435fc4546cbdc9ce3935cdd63ac636e4e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb3021999c87b480db0a5fd8f7fb2a06f3ffa1ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3021999c87b480db0a5fd8f7fb2a06f3ffa1ed", "html_url": "https://github.com/rust-lang/rust/commit/cb3021999c87b480db0a5fd8f7fb2a06f3ffa1ed"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "657efb162331669dd14884693aa8f76776c3ab02", "filename": "clippy_dev/lintcheck_crates.toml", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/64982cc435fc4546cbdc9ce3935cdd63ac636e4e/clippy_dev%2Flintcheck_crates.toml", "raw_url": "https://github.com/rust-lang/rust/raw/64982cc435fc4546cbdc9ce3935cdd63ac636e4e/clippy_dev%2Flintcheck_crates.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Flintcheck_crates.toml?ref=64982cc435fc4546cbdc9ce3935cdd63ac636e4e", "patch": "@@ -1,20 +1,20 @@\n [crates]\n # some of these are from cargotest\n-cargo = ['0.49.0']\n-iron = ['0.6.1']\n-ripgrep = ['12.1.1']\n-xsv = ['0.13.0']\n-#tokei = ['12.0.4']\n-rayon = ['1.5.0']\n-serde = ['1.0.118']\n+cargo = {name = \"cargo\", versions = ['0.49.0']}\n+iron = {name = \"iron\", versions = ['0.6.1']}\n+ripgrep = {name = \"ripgrep\", versions = ['12.1.1']}\n+xsv = {name = \"xsv\", versions = ['0.13.0']}\n+#tokei = { name = \"tokei\", versions = ['12.0.4']}\n+rayon = {name = \"rayon\", versions = ['1.5.0']}\n+serde = {name = \"serde\", versions = ['1.0.118']}\n # top 10 crates.io dls\n-bitflags = ['1.2.1']\n-libc = ['0.2.81']\n-log = ['0.4.11']\n-proc-macro2 = ['1.0.24']\n-quote = ['1.0.7']\n-rand = ['0.7.3']\n-rand_core = ['0.6.0']\n-regex = ['1.3.2']\n-syn = ['1.0.54']\n-unicode-xid = ['0.2.1']\n+bitflags = {name = \"bitflags\", versions = ['1.2.1']}\n+libc = {name = \"libc\", versions = ['0.2.81']}\n+log = {name = \"log\", versions = ['0.4.11']}\n+proc-macro2 = {name = \"proc-macro2\", versions = ['1.0.24']}\n+quote = {name = \"quote\", versions = ['1.0.7']}\n+rand = {name = \"rand\", versions = ['0.7.3']}\n+rand_core = {name = \"rand_core\", versions = ['0.6.0']}\n+regex = {name = \"regex\", versions = ['1.3.2']}\n+syn = {name = \"syn\", versions = ['1.0.54']}\n+unicode-xid = {name = \"unicode-xid\", versions = ['0.2.1']}"}, {"sha": "e3587c7bdfe698d76ef0affc3ca6c7979ac1c4ba", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64982cc435fc4546cbdc9ce3935cdd63ac636e4e/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64982cc435fc4546cbdc9ce3935cdd63ac636e4e/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=64982cc435fc4546cbdc9ce3935cdd63ac636e4e", "patch": "@@ -20,14 +20,17 @@ use serde_json::Value;\n // use this to store the crates when interacting with the crates.toml file\n #[derive(Debug, Serialize, Deserialize)]\n struct CrateList {\n-    crates: HashMap<String, Vec<String>>,\n+    crates: HashMap<String, TomlCrate>,\n }\n \n // crate data we stored in the toml, can have multiple versions per crate\n // A single TomlCrate is laster mapped to several CrateSources in that case\n+#[derive(Debug, Serialize, Deserialize)]\n struct TomlCrate {\n     name: String,\n-    versions: Vec<String>,\n+    versions: Option<Vec<String>>,\n+    git_url: Option<String>,\n+    git_hash: Option<String>,\n }\n \n // represents an archive we download from crates.io\n@@ -114,7 +117,7 @@ impl Crate {\n \n         let shared_target_dir = clippy_project_root().join(\"target/lintcheck/shared_target_dir/\");\n \n-        let all_output = std::process::Command::new(cargo_clippy_path)\n+        let all_output = std::process::Command::new(&cargo_clippy_path)\n             .env(\"CARGO_TARGET_DIR\", shared_target_dir)\n             // lint warnings will look like this:\n             // src/cargo/ops/cargo_compile.rs:127:35: warning: usage of `FromIterator::from_iter`\n@@ -128,7 +131,12 @@ impl Crate {\n             ])\n             .current_dir(&self.path)\n             .output()\n-            .unwrap();\n+            .unwrap_or_else(|error| {\n+                dbg!(error);\n+                dbg!(&cargo_clippy_path);\n+                dbg!(&self.path);\n+                panic!(\"something was not found?\")\n+            });\n         let stdout = String::from_utf8_lossy(&all_output.stdout);\n         let output_lines = stdout.lines();\n         //dbg!(&output_lines);\n@@ -160,19 +168,21 @@ fn read_crates() -> Vec<CrateSource> {\n     let tomlcrates: Vec<TomlCrate> = crate_list\n         .crates\n         .into_iter()\n-        .map(|(name, versions)| TomlCrate { name, versions })\n+        .map(|(_cratename, tomlcrate)| tomlcrate)\n         .collect();\n \n     // flatten TomlCrates into CrateSources (one TomlCrates may represent several versions of a crate =>\n     // multiple Cratesources)\n     let mut crate_sources = Vec::new();\n     tomlcrates.into_iter().for_each(|tk| {\n-        tk.versions.iter().for_each(|ver| {\n-            crate_sources.push(CrateSource {\n-                name: tk.name.clone(),\n-                version: ver.to_string(),\n-            });\n-        })\n+        if let Some(ref versions) = tk.versions {\n+            versions.iter().for_each(|ver| {\n+                crate_sources.push(CrateSource {\n+                    name: tk.name.clone(),\n+                    version: ver.to_string(),\n+                });\n+            })\n+        }\n     });\n     crate_sources\n }"}]}