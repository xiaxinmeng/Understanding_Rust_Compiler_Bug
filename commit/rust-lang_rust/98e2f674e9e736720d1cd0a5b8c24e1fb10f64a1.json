{"sha": "98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZTJmNjc0ZTllNzM2NzIwZDFjZDBhNWI4YzI0ZTFmYjEwZjY0YTE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-03T12:38:34Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-03T16:36:08Z"}, "message": "Fix inserting imports in front of inner attributes", "tree": {"sha": "ff50bd1b83004a247acd359498f75b775a441a66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff50bd1b83004a247acd359498f75b775a441a66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1", "html_url": "https://github.com/rust-lang/rust/commit/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1925df7fc91a171925ecb59b9f1895ee59ce72f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1925df7fc91a171925ecb59b9f1895ee59ce72f", "html_url": "https://github.com/rust-lang/rust/commit/c1925df7fc91a171925ecb59b9f1895ee59ce72f"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "597bc268cff7475c90ba2a42e6eb51a572f53a49", "filename": "crates/assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1", "patch": "@@ -348,9 +348,9 @@ use std::fmt::{Debug, nested::{self, Display}};\n impl std::fmt::nested<|> for Foo {\n }\n \",\n-            // FIXME(veykril): self is being pulled out for some reason now\n+            // FIXME(veykril): nested is duplicated now\n             r\"\n-use std::fmt::{Debug, nested::{Display}, nested};\n+use std::fmt::{Debug, nested::{self, Display}, nested};\n \n impl nested for Foo {\n }\n@@ -518,6 +518,7 @@ fn main() {\n     \",\n             r\"\n #![allow(dead_code)]\n+\n use std::fmt::Debug;\n \n fn main() {"}, {"sha": "1ddd7219720f7dd6cf86c5d6bae0e7cce62e6a1b", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=98e2f674e9e736720d1cd0a5b8c24e1fb10f64a1", "patch": "@@ -275,7 +275,27 @@ fn find_insert_position(\n                             (InsertPosition::After(node.into()), AddBlankLine::BeforeTwice)\n                         }\n                         // there are no imports in this file at all\n-                        None => (InsertPosition::First, AddBlankLine::AfterTwice),\n+                        None => {\n+                            // check if the scope has a inner attributes, we dont want to insert in front of it\n+                            match scope\n+                                .children()\n+                                // no flat_map here cause we want to short circuit the iterator\n+                                .map(ast::Attr::cast)\n+                                .take_while(|attr| {\n+                                    attr.as_ref()\n+                                        .map(|attr| attr.kind() == ast::AttrKind::Inner)\n+                                        .unwrap_or(false)\n+                                })\n+                                .last()\n+                                .flatten()\n+                            {\n+                                Some(attr) => (\n+                                    InsertPosition::After(attr.syntax().clone().into()),\n+                                    AddBlankLine::BeforeTwice,\n+                                ),\n+                                None => (InsertPosition::First, AddBlankLine::AfterTwice),\n+                            }\n+                        }\n                     },\n                 }\n             }\n@@ -459,6 +479,36 @@ fn main() {}\",\n         )\n     }\n \n+    #[test]\n+    fn insert_after_inner_attr() {\n+        // empty files will get two trailing newlines\n+        // this is due to the test case insert_no_imports above\n+        check_full(\n+            \"foo::bar\",\n+            r\"#![allow(unused_imports)]\",\n+            r\"#![allow(unused_imports)]\n+\n+use foo::bar;\",\n+        )\n+    }\n+\n+    #[test]\n+    fn insert_after_inner_attr2() {\n+        // empty files will get two trailing newlines\n+        // this is due to the test case insert_no_imports above\n+        check_full(\n+            \"foo::bar\",\n+            r\"#![allow(unused_imports)]\n+\n+fn main() {}\",\n+            r\"#![allow(unused_imports)]\n+\n+use foo::bar;\n+\n+fn main() {}\",\n+        )\n+    }\n+\n     #[test]\n     fn merge_groups() {\n         check_last(\"std::io\", r\"use std::fmt;\", r\"use std::{fmt, io};\")"}]}