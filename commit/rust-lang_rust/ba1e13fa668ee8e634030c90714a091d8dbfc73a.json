{"sha": "ba1e13fa668ee8e634030c90714a091d8dbfc73a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMWUxM2ZhNjY4ZWU4ZTYzNDAzMGM5MDcxNGEwOTFkOGRiZmM3M2E=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-14T22:00:48Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-18T12:30:10Z"}, "message": "Revert \"structural_match: non-structural-match ty closures\"\n\nReverts #73353", "tree": {"sha": "5a9765800b5c9980816f006004a430baaa443697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a9765800b5c9980816f006004a430baaa443697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba1e13fa668ee8e634030c90714a091d8dbfc73a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmD0HtIACgkQgTGiTgx5\n76+q/A//R0IUa6f9faZ25Hln6VcP8XqCzX7FKqT2i0wq7JPzGj1Ni1I3Kd/ZdPti\nqiL5jAvh/gQbBlHVu8t+9xLFBvwv4jxJT9ub+F1nV6vwtQ8Y9F4Ng1BvdP/heVvf\nzVUQEcp8LQSBTMlSs6nRjPv84HcAFAcKRgv84i6+0VvFY2SV+WK8TD1sdMa90ON3\nr/Iy7bQ8DXhRVDBteRgJQPStPp6eyw85Q9i6pi9Ra5ZKXKXMxmuQcGba8Dgi4j32\nGS+o4iheRGmf9LNXu24m3vLnMZ9bzzvHImzMuJ8pnuEpdNRcgxgq8QE1HHROSkpf\nBD+xcFFGxCh6H2VrPjXDKRMTlKUIhL/4aZGfKI9mTA762oG1QLbKb+kSGFH+a/Po\nhKFvQMPNjiL8pM6sc3uQAqSn2jpZ+WvuasGqCdO1F9bzuzswp0GpCmsqzxaPraBl\nyGYHwPMjdoVKPmqYvJ7ik2lN4zZPFan5adEG4cI0+rXEtFE9q9P3Q53P+x+nuWZU\nIwC7ZGewB1Xt7R5g3FgurXZnIoWhrsK8CGidigE3f8siuLq69tjB2U8EE6jApfIV\nubhJ18GXWD3eViTlMpH61cge63CAkGMDWiu0I+CzaKh+ueviF/0gp5nkdsl0OTjt\nd1zyTnmHWaLbuOordCd0u3fRO+/PvnChrHzdD6BQMjOQrxn2/e0=\n=+UCO\n-----END PGP SIGNATURE-----", "payload": "tree 5a9765800b5c9980816f006004a430baaa443697\nparent c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec\nauthor Santiago Pastorino <spastorino@gmail.com> 1626300048 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1626611410 -0300\n\nRevert \"structural_match: non-structural-match ty closures\"\n\nReverts #73353\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1e13fa668ee8e634030c90714a091d8dbfc73a", "html_url": "https://github.com/rust-lang/rust/commit/ba1e13fa668ee8e634030c90714a091d8dbfc73a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba1e13fa668ee8e634030c90714a091d8dbfc73a/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "html_url": "https://github.com/rust-lang/rust/commit/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "926bd830da0ac470afcf1d1661569da560b1b789", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ba1e13fa668ee8e634030c90714a091d8dbfc73a/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1e13fa668ee8e634030c90714a091d8dbfc73a/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=ba1e13fa668ee8e634030c90714a091d8dbfc73a", "patch": "@@ -133,9 +133,6 @@ impl<'a, 'tcx> ConstToPat<'a, 'tcx> {\n                     traits::NonStructuralMatchTy::Generator => {\n                         \"generators cannot be used in patterns\".to_string()\n                     }\n-                    traits::NonStructuralMatchTy::Closure => {\n-                        \"closures cannot be used in patterns\".to_string()\n-                    }\n                     traits::NonStructuralMatchTy::Param => {\n                         bug!(\"use of a constant whose type is a parameter inside a pattern\")\n                     }"}, {"sha": "a6323a65aadbce9c4a451c13fc5049422a34eb9c", "filename": "compiler/rustc_trait_selection/src/traits/structural_match.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba1e13fa668ee8e634030c90714a091d8dbfc73a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1e13fa668ee8e634030c90714a091d8dbfc73a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs?ref=ba1e13fa668ee8e634030c90714a091d8dbfc73a", "patch": "@@ -19,7 +19,6 @@ pub enum NonStructuralMatchTy<'tcx> {\n     Opaque,\n     Generator,\n     Projection,\n-    Closure,\n }\n \n /// This method traverses the structure of `ty`, trying to find an\n@@ -155,9 +154,6 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for Search<'a, 'tcx> {\n             ty::Generator(..) | ty::GeneratorWitness(..) => {\n                 return ControlFlow::Break(NonStructuralMatchTy::Generator);\n             }\n-            ty::Closure(..) => {\n-                return ControlFlow::Break(NonStructuralMatchTy::Closure);\n-            }\n             ty::RawPtr(..) => {\n                 // structural-match ignores substructure of\n                 // `*const _`/`*mut _`, so skip `super_visit_with`.\n@@ -198,7 +194,7 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for Search<'a, 'tcx> {\n                 // First check all contained types and then tell the caller to continue searching.\n                 return ty.super_visit_with(self);\n             }\n-            ty::Infer(_) | ty::Placeholder(_) | ty::Bound(..) => {\n+            ty::Closure(..) | ty::Infer(_) | ty::Placeholder(_) | ty::Bound(..) => {\n                 bug!(\"unexpected type during structural-match checking: {:?}\", ty);\n             }\n             ty::Error(_) => {"}]}