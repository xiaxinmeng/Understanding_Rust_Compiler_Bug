{"sha": "47474f10558a473258510b0e5dea13d607a5d34c", "node_id": "C_kwDOAAsO6NoAKDQ3NDc0ZjEwNTU4YTQ3MzI1ODUxMGIwZTVkZWExM2Q2MDdhNWQzNGM", "commit": {"author": {"name": "Tobias Kortkamp", "email": "t@tobik.me", "date": "2021-11-27T06:23:55Z"}, "committer": {"name": "Tobias Kortkamp", "email": "t@tobik.me", "date": "2021-11-27T06:24:18Z"}, "message": "Add riscv64gc-unknown-freebsd", "tree": {"sha": "d23eed69805bf33c0324770390605eb5b1913d8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d23eed69805bf33c0324770390605eb5b1913d8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47474f10558a473258510b0e5dea13d607a5d34c", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niNUEABYKAH0WIQSuor6Bha+H8NhS5NP0gVxfiT5lXQUCYaHPE18UgAAAAAAuAChp\nc3N1ZXItZnByQG5vdGF0aW9ucy5vcGVucGdwLmZpZnRoaG9yc2VtYW4ubmV0QUVB\nMkJFODE4NUFGODdGMEQ4NTJFNEQzRjQ4MTVDNUY4OTNFNjU1RAAKCRD0gVxfiT5l\nXWZwAP9M6o+BBR4Druih5E2R4rtiWzFUaWjtZWRBVQazcVRfhQD9Fs3a0o/mO1nB\nVi42iwMMFSj7Xm1wQiJnRKKnWTA9wgM=\n=3Hwy\n-----END PGP SIGNATURE-----", "payload": "tree d23eed69805bf33c0324770390605eb5b1913d8c\nparent 3e018ce194ab16125747220676dd8a20aecd5196\nauthor Tobias Kortkamp <t@tobik.me> 1637994235 +0100\ncommitter Tobias Kortkamp <t@tobik.me> 1637994258 +0100\n\nAdd riscv64gc-unknown-freebsd\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47474f10558a473258510b0e5dea13d607a5d34c", "html_url": "https://github.com/rust-lang/rust/commit/47474f10558a473258510b0e5dea13d607a5d34c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47474f10558a473258510b0e5dea13d607a5d34c/comments", "author": null, "committer": null, "parents": [{"sha": "3e018ce194ab16125747220676dd8a20aecd5196", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e018ce194ab16125747220676dd8a20aecd5196", "html_url": "https://github.com/rust-lang/rust/commit/3e018ce194ab16125747220676dd8a20aecd5196"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "7f3345d2a7062278ebdd3d8b6cf2f6150caf3601", "filename": "compiler/rustc_llvm/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/compiler%2Frustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/compiler%2Frustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fbuild.rs?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -277,7 +277,7 @@ fn main() {\n     };\n \n     // RISC-V requires libatomic for sub-word atomic operations\n-    if target.starts_with(\"riscv\") {\n+    if !target.contains(\"freebsd\") && target.starts_with(\"riscv\") {\n         println!(\"cargo:rustc-link-lib=atomic\");\n     }\n "}, {"sha": "35a7ec5f946c56d187b138aa1b2b6b5cfd1f9f66", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -813,6 +813,7 @@ supported_targets! {\n     (\"powerpc-unknown-freebsd\", powerpc_unknown_freebsd),\n     (\"powerpc64-unknown-freebsd\", powerpc64_unknown_freebsd),\n     (\"powerpc64le-unknown-freebsd\", powerpc64le_unknown_freebsd),\n+    (\"riscv64gc-unknown-freebsd\", riscv64gc_unknown_freebsd),\n     (\"x86_64-unknown-freebsd\", x86_64_unknown_freebsd),\n \n     (\"x86_64-unknown-dragonfly\", x86_64_unknown_dragonfly),"}, {"sha": "1ea1b9bea2e8d115510765bcc3c881e31c83d847", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_freebsd.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_freebsd.rs?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -0,0 +1,18 @@\n+use crate::spec::{CodeModel, Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    Target {\n+        llvm_target: \"riscv64-unknown-freebsd\".to_string(),\n+        pointer_width: 64,\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".to_string(),\n+        arch: \"riscv64\".to_string(),\n+        options: TargetOptions {\n+            code_model: Some(CodeModel::Medium),\n+            cpu: \"generic-rv64\".to_string(),\n+            features: \"+m,+a,+f,+d,+c\".to_string(),\n+            llvm_abiname: \"lp64d\".to_string(),\n+            max_atomic_width: Some(64),\n+            ..super::freebsd_base::opts()\n+        },\n+    }\n+}"}, {"sha": "f0b38d2984544e4fc99f176e131d6d90f7820775", "filename": "library/std/src/os/raw/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -69,7 +69,8 @@ type_alias! { \"char.md\", c_char = u8, NonZero_c_char = NonZeroU8;\n             target_arch = \"aarch64\",\n             target_arch = \"arm\",\n             target_arch = \"powerpc\",\n-            target_arch = \"powerpc64\"\n+            target_arch = \"powerpc64\",\n+            target_arch = \"riscv64\"\n         )\n     ),\n     all(\n@@ -112,7 +113,8 @@ type_alias! { \"char.md\", c_char = i8, NonZero_c_char = NonZeroI8;\n             target_arch = \"aarch64\",\n             target_arch = \"arm\",\n             target_arch = \"powerpc\",\n-            target_arch = \"powerpc64\"\n+            target_arch = \"powerpc64\",\n+            target_arch = \"riscv64\"\n         )\n     ),\n     all("}, {"sha": "6b6cefe487acda2173e7db8dd276641b862c7a50", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -265,7 +265,7 @@ def default_build_triple(verbose):\n         err = \"unknown OS type: {}\".format(ostype)\n         sys.exit(err)\n \n-    if cputype == 'powerpc' and ostype == 'unknown-freebsd':\n+    if cputype in ['powerpc', 'riscv'] and ostype == 'unknown-freebsd':\n         cputype = subprocess.check_output(\n               ['uname', '-p']).strip().decode(default_encoding)\n     cputype_mapper = {"}, {"sha": "f50797285d2b3411b134cfae258aa0568c6bb4b7", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -249,7 +249,7 @@ impl Step for Llvm {\n             }\n         }\n \n-        if target.starts_with(\"riscv\") {\n+        if !target.contains(\"freebsd\") && target.starts_with(\"riscv\") {\n             // In RISC-V, using C++ atomics require linking to `libatomic` but the LLVM build\n             // system check cannot detect this. Therefore it is set manually here.\n             if !builder.config.llvm_tools_enabled {"}, {"sha": "eb54edc16f5c4ce64e7f922e834dfce241fbebe1", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47474f10558a473258510b0e5dea13d607a5d34c/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/47474f10558a473258510b0e5dea13d607a5d34c/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=47474f10558a473258510b0e5dea13d607a5d34c", "patch": "@@ -267,6 +267,7 @@ target | std | host | notes\n `riscv32gc-unknown-linux-gnu` |   |   | RISC-V Linux (kernel 5.4, glibc 2.33)\n `riscv32gc-unknown-linux-musl` |   |   | RISC-V Linux (kernel 5.4, musl + RISCV32 support patches)\n `riscv32imc-esp-espidf` | \u2713 |  | RISC-V ESP-IDF\n+`riscv64gc-unknown-freebsd` |   |   | RISC-V FreeBSD\n `riscv64gc-unknown-linux-musl` |   |   | RISC-V Linux (kernel 4.20, musl 1.2.0)\n `s390x-unknown-linux-musl` |  |  | S390x Linux (kernel 2.6.32, MUSL)\n `sparc-unknown-linux-gnu` | \u2713 |  | 32-bit SPARC Linux"}]}