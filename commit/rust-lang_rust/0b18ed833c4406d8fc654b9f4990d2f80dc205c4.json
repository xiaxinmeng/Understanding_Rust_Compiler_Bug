{"sha": "0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMThlZDgzM2M0NDA2ZDhmYzY1NGI5ZjQ5OTBkMmY4MGRjMjA1YzQ=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-12-14T12:35:03Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-12-15T00:56:10Z"}, "message": "Disable the constant debuginfo promotion pass by default\n\nIt doesn't work correctly on *-pc-windows-gnu", "tree": {"sha": "b52a953d8affaed8f1c8a6b4c1fe23512db7ac78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52a953d8affaed8f1c8a6b4c1fe23512db7ac78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "html_url": "https://github.com/rust-lang/rust/commit/0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01aec8d18556be5e8d498c2f331b9015b7befde2", "url": "https://api.github.com/repos/rust-lang/rust/commits/01aec8d18556be5e8d498c2f331b9015b7befde2", "html_url": "https://github.com/rust-lang/rust/commit/01aec8d18556be5e8d498c2f331b9015b7befde2"}], "stats": {"total": 68, "additions": 54, "deletions": 14}, "files": [{"sha": "3cdaf4c7dcd47a5ef4458f9a501423457c93c019", "filename": "compiler/rustc_mir/src/transform/const_debuginfo.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_debuginfo.rs?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -15,7 +15,11 @@ use rustc_index::{bit_set::BitSet, vec::IndexVec};\n pub struct ConstDebugInfo;\n \n impl<'tcx> MirPass<'tcx> for ConstDebugInfo {\n-    fn run_pass(&self, _tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+    fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        if !tcx.sess.opts.debugging_opts.unsound_mir_opts {\n+            return;\n+        }\n+\n         trace!(\"running ConstDebugInfo on {:?}\", body.source);\n \n         for (local, constant) in find_optimization_oportunities(body) {"}, {"sha": "918e72582d6978289c736000f5d769463f933372", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -86,7 +86,7 @@ pub fn change_mutability_of_slot() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"hir_owner_nodes,typeck\")]\n+    except=\"hir_owner_nodes,typeck,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_slot() {\n     let _x: u64 = 0;\n@@ -166,7 +166,7 @@ pub fn change_mutability_of_binding_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"hir_owner_nodes,typeck\")]\n+    except=\"hir_owner_nodes,typeck,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern() {\n     let (mut _a, _b) = (99u8, 'q');"}, {"sha": "a188da385262395087fabd2fc0d43b6e1d775a8d", "filename": "src/test/mir-opt/const_debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fconst_debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fconst_debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_debuginfo.rs?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C overflow-checks=no\n+// compile-flags: -C overflow-checks=no -Zunsound-mir-opts\n \n struct Point {\n     x: u32,"}, {"sha": "a78a6341c299d688243b208e07c6d2796d340cc1", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.main.SimplifyLocals.after.32bit.mir", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.SimplifyLocals.after.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.SimplifyLocals.after.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.SimplifyLocals.after.32bit.mir?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -2,18 +2,30 @@\n \n fn main() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/optimizes_into_variable.rs:11:11: 11:11\n+    let _1: i32;                         // in scope 0 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n     scope 1 {\n-        debug x => const 4_i32;          // in scope 1 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n+        debug x => _1;                   // in scope 1 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n+        let _2: i32;                     // in scope 1 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n         scope 2 {\n-            debug y => const 3_i32;      // in scope 2 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n+            debug y => _2;               // in scope 2 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n+            let _3: u32;                 // in scope 2 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n             scope 3 {\n-                debug z => const 42_u32; // in scope 3 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n+                debug z => _3;           // in scope 3 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n             }\n         }\n     }\n \n     bb0: {\n+        StorageLive(_1);                 // scope 0 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n+        _1 = const 4_i32;                // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n+        StorageLive(_2);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n+        _2 = const 3_i32;                // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34\n+        StorageLive(_3);                 // scope 2 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n+        _3 = const 42_u32;               // scope 2 at $DIR/optimizes_into_variable.rs:14:13: 14:38\n         _0 = const ();                   // scope 0 at $DIR/optimizes_into_variable.rs:11:11: 15:2\n+        StorageDead(_3);                 // scope 2 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        StorageDead(_2);                 // scope 1 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        StorageDead(_1);                 // scope 0 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n         return;                          // scope 0 at $DIR/optimizes_into_variable.rs:15:2: 15:2\n     }\n }"}, {"sha": "a78a6341c299d688243b208e07c6d2796d340cc1", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.main.SimplifyLocals.after.64bit.mir", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.SimplifyLocals.after.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.SimplifyLocals.after.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.SimplifyLocals.after.64bit.mir?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -2,18 +2,30 @@\n \n fn main() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/optimizes_into_variable.rs:11:11: 11:11\n+    let _1: i32;                         // in scope 0 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n     scope 1 {\n-        debug x => const 4_i32;          // in scope 1 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n+        debug x => _1;                   // in scope 1 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n+        let _2: i32;                     // in scope 1 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n         scope 2 {\n-            debug y => const 3_i32;      // in scope 2 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n+            debug y => _2;               // in scope 2 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n+            let _3: u32;                 // in scope 2 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n             scope 3 {\n-                debug z => const 42_u32; // in scope 3 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n+                debug z => _3;           // in scope 3 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n             }\n         }\n     }\n \n     bb0: {\n+        StorageLive(_1);                 // scope 0 at $DIR/optimizes_into_variable.rs:12:9: 12:10\n+        _1 = const 4_i32;                // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n+        StorageLive(_2);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:9: 13:10\n+        _2 = const 3_i32;                // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34\n+        StorageLive(_3);                 // scope 2 at $DIR/optimizes_into_variable.rs:14:9: 14:10\n+        _3 = const 42_u32;               // scope 2 at $DIR/optimizes_into_variable.rs:14:13: 14:38\n         _0 = const ();                   // scope 0 at $DIR/optimizes_into_variable.rs:11:11: 15:2\n+        StorageDead(_3);                 // scope 2 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        StorageDead(_2);                 // scope 1 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        StorageDead(_1);                 // scope 0 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n         return;                          // scope 0 at $DIR/optimizes_into_variable.rs:15:2: 15:2\n     }\n }"}, {"sha": "3d386e3b1756b4b186a9adaa8ecb591a2d8345cf", "filename": "src/test/mir-opt/inline/issue_76997_inline_scopes_parenting.main.Inline.after.mir", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -11,8 +11,9 @@ fn main() -> () {\n         debug f => _1;                   // in scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:5:9: 5:10\n         scope 2 (inlined main::{closure#0}) { // at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n             debug x => _5;               // in scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+            let _6: ();                  // in scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n             scope 3 {\n-                debug y => const ();     // in scope 3 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+                debug y => _6;           // in scope 3 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n             }\n         }\n     }\n@@ -26,7 +27,10 @@ fn main() -> () {\n         (_3.0: ()) = move _4;            // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n         StorageLive(_5);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n         _5 = move (_3.0: ());            // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        StorageLive(_6);                 // scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        _6 = const ();                   // scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n         _0 = const ();                   // scope 3 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        StorageDead(_6);                 // scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n         StorageDead(_5);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n         StorageDead(_4);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:9: 6:10\n         StorageDead(_3);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:9: 6:10"}, {"sha": "654dd8275c9dec52b350dee0aa441df5f90fbd8f", "filename": "src/test/mir-opt/lower_intrinsics.f_u64.PreCodegen.before.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Flower_intrinsics.f_u64.PreCodegen.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Flower_intrinsics.f_u64.PreCodegen.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_intrinsics.f_u64.PreCodegen.before.mir?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -3,7 +3,7 @@\n fn f_u64() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/lower_intrinsics.rs:34:16: 34:16\n     scope 1 (inlined f_dispatch::<u64>) { // at $DIR/lower_intrinsics.rs:35:5: 35:21\n-        debug t => const 0_u64;          // in scope 1 at $DIR/lower_intrinsics.rs:35:5: 35:21\n+        debug t => _2;                   // in scope 1 at $DIR/lower_intrinsics.rs:35:5: 35:21\n         let _1: ();                      // in scope 1 at $DIR/lower_intrinsics.rs:35:5: 35:21\n         let mut _2: u64;                 // in scope 1 at $DIR/lower_intrinsics.rs:35:5: 35:21\n         scope 2 (inlined std::mem::size_of::<u64>) { // at $DIR/lower_intrinsics.rs:35:5: 35:21"}, {"sha": "dae0cbb65a4b3f871ddfe1a5f333b86cbeb86999", "filename": "src/test/mir-opt/while_let_loops.change_loop_body.PreCodegen.after.32bit.mir", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.32bit.mir?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -2,12 +2,16 @@\n \n fn change_loop_body() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/while_let_loops.rs:5:27: 5:27\n+    let mut _1: i32;                     // in scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n     scope 1 {\n-        debug _x => const 0_i32;         // in scope 1 at $DIR/while_let_loops.rs:6:9: 6:15\n+        debug _x => _1;                  // in scope 1 at $DIR/while_let_loops.rs:6:9: 6:15\n     }\n \n     bb0: {\n+        StorageLive(_1);                 // scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n+        _1 = const 0_i32;                // scope 0 at $DIR/while_let_loops.rs:6:18: 6:19\n         _0 = const ();                   // scope 1 at $DIR/while_let_loops.rs:7:5: 10:6\n+        StorageDead(_1);                 // scope 0 at $DIR/while_let_loops.rs:11:1: 11:2\n         return;                          // scope 0 at $DIR/while_let_loops.rs:11:2: 11:2\n     }\n }"}, {"sha": "dae0cbb65a4b3f871ddfe1a5f333b86cbeb86999", "filename": "src/test/mir-opt/while_let_loops.change_loop_body.PreCodegen.after.64bit.mir", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/0b18ed833c4406d8fc654b9f4990d2f80dc205c4/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.64bit.mir?ref=0b18ed833c4406d8fc654b9f4990d2f80dc205c4", "patch": "@@ -2,12 +2,16 @@\n \n fn change_loop_body() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/while_let_loops.rs:5:27: 5:27\n+    let mut _1: i32;                     // in scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n     scope 1 {\n-        debug _x => const 0_i32;         // in scope 1 at $DIR/while_let_loops.rs:6:9: 6:15\n+        debug _x => _1;                  // in scope 1 at $DIR/while_let_loops.rs:6:9: 6:15\n     }\n \n     bb0: {\n+        StorageLive(_1);                 // scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n+        _1 = const 0_i32;                // scope 0 at $DIR/while_let_loops.rs:6:18: 6:19\n         _0 = const ();                   // scope 1 at $DIR/while_let_loops.rs:7:5: 10:6\n+        StorageDead(_1);                 // scope 0 at $DIR/while_let_loops.rs:11:1: 11:2\n         return;                          // scope 0 at $DIR/while_let_loops.rs:11:2: 11:2\n     }\n }"}]}