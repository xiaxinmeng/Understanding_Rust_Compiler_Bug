{"sha": "27d6b9d215f95f1013b102f241524f63330c60a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZDZiOWQyMTVmOTVmMTAxM2IxMDJmMjQxNTI0ZjYzMzMwYzYwYTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-01-05T18:43:57Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-01-05T21:21:53Z"}, "message": "improve visibility of future-incompatibilities (mildly, at least)", "tree": {"sha": "a0bacc6eae1d8ea777e125cec2fa6ae7f5bf13ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0bacc6eae1d8ea777e125cec2fa6ae7f5bf13ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27d6b9d215f95f1013b102f241524f63330c60a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27d6b9d215f95f1013b102f241524f63330c60a3", "html_url": "https://github.com/rust-lang/rust/commit/27d6b9d215f95f1013b102f241524f63330c60a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27d6b9d215f95f1013b102f241524f63330c60a3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d32ffbb2cbd8a49bcbfca396423d4f8ca5048f", "url": "https://api.github.com/repos/rust-lang/rust/commits/15d32ffbb2cbd8a49bcbfca396423d4f8ca5048f", "html_url": "https://github.com/rust-lang/rust/commit/15d32ffbb2cbd8a49bcbfca396423d4f8ca5048f"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "26c38a863e22d140d4d490c6d8e02216b07f1baa", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27d6b9d215f95f1013b102f241524f63330c60a3/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27d6b9d215f95f1013b102f241524f63330c60a3/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=27d6b9d215f95f1013b102f241524f63330c60a3", "patch": "@@ -16,6 +16,9 @@\n \n use lint::{LintPass, LateLintPass, LintArray};\n \n+// name of the future-incompatible group\n+pub const FUTURE_INCOMPATIBLE: &'static str = \"future_incompatible\";\n+\n declare_lint! {\n     pub CONST_ERR,\n     Warn,"}, {"sha": "a4af12bcc7c9d1136fac1a5ba894a5614a27d423", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/27d6b9d215f95f1013b102f241524f63330c60a3/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27d6b9d215f95f1013b102f241524f63330c60a3/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=27d6b9d215f95f1013b102f241524f63330c60a3", "patch": "@@ -364,14 +364,16 @@ pub fn gather_attrs(attrs: &[ast::Attribute])\n /// lints elsewhere in the compiler should call\n /// `Session::add_lint()` instead.\n pub fn raw_emit_lint(sess: &Session,\n+                     lints: &LintStore,\n                      lint: &'static Lint,\n                      lvlsrc: LevelSource,\n                      span: Option<Span>,\n                      msg: &str) {\n-    raw_struct_lint(sess, lint, lvlsrc, span, msg).emit();\n+    raw_struct_lint(sess, lints, lint, lvlsrc, span, msg).emit();\n }\n \n pub fn raw_struct_lint<'a>(sess: &'a Session,\n+                           lints: &LintStore,\n                            lint: &'static Lint,\n                            lvlsrc: LevelSource,\n                            span: Option<Span>,\n@@ -413,6 +415,18 @@ pub fn raw_struct_lint<'a>(sess: &'a Session,\n         _ => sess.bug(\"impossible level in raw_emit_lint\"),\n     };\n \n+    // Check for future incompatibility lints and issue a stronger warning.\n+    let future_incompat_lints = &lints.lint_groups[builtin::FUTURE_INCOMPATIBLE];\n+    let this_id = LintId::of(lint);\n+    if future_incompat_lints.0.iter().any(|&id| id == this_id) {\n+        let msg = \"this lint will become a HARD ERROR in a future release!\";\n+        if let Some(sp) = span {\n+            err.span_note(sp, msg);\n+        } else {\n+            err.note(msg);\n+        }\n+    }\n+\n     if let Some(span) = def {\n         err.span_note(span, \"lint level defined here\");\n     }\n@@ -450,7 +464,7 @@ pub trait LintContext: Sized {\n             Some(pair) => pair,\n         };\n \n-        raw_emit_lint(&self.sess(), lint, (level, src), span, msg);\n+        raw_emit_lint(&self.sess(), self.lints(), lint, (level, src), span, msg);\n     }\n \n     fn lookup(&self,\n@@ -463,7 +477,7 @@ pub trait LintContext: Sized {\n             Some(pair) => pair,\n         };\n \n-        raw_struct_lint(&self.sess(), lint, (level, src), span, msg)\n+        raw_struct_lint(&self.sess(), self.lints(), lint, (level, src), span, msg)\n     }\n \n     /// Emit a lint at the appropriate level, for a particular span."}, {"sha": "67f26595a369f06b9747ec47399f5263dfb81abe", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/27d6b9d215f95f1013b102f241524f63330c60a3/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27d6b9d215f95f1013b102f241524f63330c60a3/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=27d6b9d215f95f1013b102f241524f63330c60a3", "patch": "@@ -2208,6 +2208,7 @@ fn enum_variant_size_lint(ccx: &CrateContext, enum_def: &hir::EnumDef, sp: Span,\n         // Use lint::raw_emit_lint rather than sess.add_lint because the lint-printing\n         // pass for the latter already ran.\n         lint::raw_struct_lint(&ccx.tcx().sess,\n+                              &ccx.tcx().sess.lint_store.borrow(),\n                               lint::builtin::VARIANT_SIZE_DIFFERENCES,\n                               *lvlsrc.unwrap(),\n                               Some(sp),"}]}