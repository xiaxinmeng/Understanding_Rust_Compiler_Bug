{"sha": "a9fa8cc0b63771113e0f5aff210a5d443c88e819", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZmE4Y2MwYjYzNzcxMTEzZTBmNWFmZjIxMGE1ZDQ0M2M4OGU4MTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-09T05:58:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-09T05:58:13Z"}, "message": "Auto merge of #44335 - arielb1:node-hashing, r=alexcrichton\n\nAvoid hashing when creating a DepNode from a HirId\n\nInstead, combine the already-present DefPathHash with the 32-bit\nItemLocalIndex.\n\nShould fix #44323.\n\nr? @alexcrichton", "tree": {"sha": "07a076feec66b9abab268c00f5b54abdcd0761f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07a076feec66b9abab268c00f5b54abdcd0761f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9fa8cc0b63771113e0f5aff210a5d443c88e819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9fa8cc0b63771113e0f5aff210a5d443c88e819", "html_url": "https://github.com/rust-lang/rust/commit/a9fa8cc0b63771113e0f5aff210a5d443c88e819", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9fa8cc0b63771113e0f5aff210a5d443c88e819/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee6d0f62e3b8bf8e58c4106f0f9bb54237c0807", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee6d0f62e3b8bf8e58c4106f0f9bb54237c0807", "html_url": "https://github.com/rust-lang/rust/commit/dee6d0f62e3b8bf8e58c4106f0f9bb54237c0807"}, {"sha": "d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "html_url": "https://github.com/rust-lang/rust/commit/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "e7dd7ea1217dc9acaf2755e6ce4ab8cc6158f9eb", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a9fa8cc0b63771113e0f5aff210a5d443c88e819/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9fa8cc0b63771113e0f5aff210a5d443c88e819/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=a9fa8cc0b63771113e0f5aff210a5d443c88e819", "patch": "@@ -62,7 +62,7 @@\n \n use hir::def_id::{CrateNum, DefId};\n use hir::map::DefPathHash;\n-use hir::HirId;\n+use hir::{HirId, ItemLocalId};\n \n use ich::Fingerprint;\n use ty::{TyCtxt, Instance, InstanceDef};\n@@ -682,6 +682,25 @@ impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (DefIdList\n     }\n }\n \n+impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (HirId,) {\n+    const CAN_RECONSTRUCT_QUERY_KEY: bool = false;\n+\n+    // We actually would not need to specialize the implementation of this\n+    // method but it's faster to combine the hashes than to instantiate a full\n+    // hashing context and stable-hashing state.\n+    fn to_fingerprint(&self, tcx: TyCtxt) -> Fingerprint {\n+        let (HirId {\n+            owner,\n+            local_id: ItemLocalId(local_id),\n+        },) = *self;\n+\n+        let def_path_hash = tcx.def_path_hash(DefId::local(owner));\n+        let local_id = Fingerprint::from_smaller_hash(local_id as u64);\n+\n+        def_path_hash.0.combine(local_id)\n+    }\n+}\n+\n /// A \"work product\" corresponds to a `.o` (or other) file that we\n /// save in between runs. These ids do not have a DefId but rather\n /// some independent path or string that persists between runs without"}]}