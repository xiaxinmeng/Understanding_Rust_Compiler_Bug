{"sha": "e7a68901404daac3111b3db4b815a1205e6563aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YTY4OTAxNDA0ZGFhYzMxMTFiM2RiNGI4MTVhMTIwNWU2NTYzYWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-27T14:01:30Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-27T14:08:56Z"}, "message": "Implement Rvalue::Ref", "tree": {"sha": "975a9efa6b62c8c0bc029346ec746ac746a44a68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/975a9efa6b62c8c0bc029346ec746ac746a44a68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7a68901404daac3111b3db4b815a1205e6563aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7a68901404daac3111b3db4b815a1205e6563aa", "html_url": "https://github.com/rust-lang/rust/commit/e7a68901404daac3111b3db4b815a1205e6563aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7a68901404daac3111b3db4b815a1205e6563aa/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e42ab29517971d91d40da401da0bdff088d64d13", "url": "https://api.github.com/repos/rust-lang/rust/commits/e42ab29517971d91d40da401da0bdff088d64d13", "html_url": "https://github.com/rust-lang/rust/commit/e42ab29517971d91d40da401da0bdff088d64d13"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "e49bb4ba8c54ad7e9b2c24fb1284262da53453a2", "filename": "src/base.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e7a68901404daac3111b3db4b815a1205e6563aa/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7a68901404daac3111b3db4b815a1205e6563aa/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=e7a68901404daac3111b3db4b815a1205e6563aa", "patch": "@@ -339,7 +339,12 @@ fn trans_stmt<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, stmt: &Statement<'tcx\n                 Rvalue::Use(operand) => {\n                     let val = trans_operand(fx, operand);\n                     lval.write_cvalue(fx, val);\n-                },\n+                }\n+                Rvalue::Ref(_, _, place) => {\n+                    let place = trans_place(fx, place);\n+                    let addr = place.expect_addr();\n+                    lval.write_cvalue(fx, CValue::ByVal(addr, dest_layout));\n+                }\n                 Rvalue::BinaryOp(bin_op, lhs, rhs) => {\n                     let ty = fx.monomorphize(&lhs.ty(&fx.mir.local_decls, fx.tcx));\n                     let lhs = trans_operand(fx, lhs).load_value(fx);\n@@ -381,7 +386,7 @@ fn trans_stmt<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, stmt: &Statement<'tcx\n                         UnOp::Not => fx.bcx.ins().bnot(val),\n                         UnOp::Neg => match ty.sty {\n                             TypeVariants::TyFloat(_) => fx.bcx.ins().fneg(val),\n-                            ref ty => unimplemented!(\"un op Neg for {:?}\", ty),\n+                            _ => unimplemented!(\"un op Neg for {:?}\", ty),\n                         }\n                     };\n                     lval.write_cvalue(fx, CValue::ByVal(res, layout));"}]}