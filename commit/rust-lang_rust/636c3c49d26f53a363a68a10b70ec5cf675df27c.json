{"sha": "636c3c49d26f53a363a68a10b70ec5cf675df27c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNmMzYzQ5ZDI2ZjUzYTM2M2E2OGExMGI3MGVjNWNmNjc1ZGYyN2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-02T11:52:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-02T11:52:00Z"}, "message": "internal: document style for helper functions and variables", "tree": {"sha": "95ad88ebe1177a288227233c1085bf52545364fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95ad88ebe1177a288227233c1085bf52545364fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/636c3c49d26f53a363a68a10b70ec5cf675df27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/636c3c49d26f53a363a68a10b70ec5cf675df27c", "html_url": "https://github.com/rust-lang/rust/commit/636c3c49d26f53a363a68a10b70ec5cf675df27c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/636c3c49d26f53a363a68a10b70ec5cf675df27c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0b3eb7135361315ed953613a1a8c7a038b1562d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0b3eb7135361315ed953613a1a8c7a038b1562d", "html_url": "https://github.com/rust-lang/rust/commit/a0b3eb7135361315ed953613a1a8c7a038b1562d"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "c594946be736807cf47ae598f1a5585d74f06fa4", "filename": "docs/dev/style.md", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/636c3c49d26f53a363a68a10b70ec5cf675df27c/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/636c3c49d26f53a363a68a10b70ec5cf675df27c/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=636c3c49d26f53a363a68a10b70ec5cf675df27c", "patch": "@@ -806,9 +806,48 @@ if let Some(expected_type) = ctx.expected_type.as_ref() {\n }\n ```\n \n-**Rational:** `match` is almost always more compact.\n+**Rationale:** `match` is almost always more compact.\n The `else` branch can get a more precise pattern: `None` or `Err(_)` instead of `_`.\n \n+## Helper Functions\n+\n+Avoid creating singe-use helper functions:\n+\n+```rust\n+// GOOD\n+let buf = {\n+    let mut buf = get_empty_buf(&mut arena);\n+    buf.add_item(item);\n+    buf\n+};\n+\n+// BAD\n+\n+let buf = prepare_buf(&mut arena, item);\n+\n+...\n+\n+fn prepare_buf(arena: &mut Arena, item: Item) -> ItemBuf {\n+    let mut res = get_empty_buf(&mut arena);\n+    res.add_item(item);\n+    res\n+}\n+```\n+\n+Exception: if you want to make use of `return` or `?`.\n+\n+**Rationale:** single-use functions change frequently, adding or removing parameters adds churn.\n+A block serves just as well to delineate a bit of logic, but has access to all the context.\n+Re-using originally single-purpose function often leads to bad coupling.\n+\n+## Helper Variables\n+\n+Introduce helper variables freely, especially for multiline conditions.\n+\n+**Rationale:** like blocks, single-use variables are a cognitively cheap abstraction, as they have access to all the context.\n+Extra variables help during debugging, they make it easy to print/view important intermediate results.\n+Giving a name to a condition in `if` expression often improves clarity and leads to a nicer formatted code.\n+\n ## Token names\n \n Use `T![foo]` instead of `SyntaxKind::FOO_KW`."}]}