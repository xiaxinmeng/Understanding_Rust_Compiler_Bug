{"sha": "ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNTE1YzAxN2MwYWFkYjJhNGM2OTE4MDRmMWJjM2I4YjM0M2RkNjc=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-20T02:06:55Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-20T02:06:55Z"}, "message": "ctxt_auto_deref_lval decides whether to autoderef the entire lval, not its base.", "tree": {"sha": "162a9bce32a712db96d45ed20f7c8e2e20355ae3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/162a9bce32a712db96d45ed20f7c8e2e20355ae3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "html_url": "https://github.com/rust-lang/rust/commit/ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde9ca0937171b77542028ef433fddf979aa506b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde9ca0937171b77542028ef433fddf979aa506b", "html_url": "https://github.com/rust-lang/rust/commit/fde9ca0937171b77542028ef433fddf979aa506b"}], "stats": {"total": 60, "additions": 43, "deletions": 17}, "files": [{"sha": "628eab62a1a71f45aa50ba13af5b7dc4a70f3f9e", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "patch": "@@ -386,6 +386,7 @@ TEST_XFAILS_LLVM := $(addprefix test/run-pass/, \\\n                       acyclic-unwind.rs \\\n                       alt-pattern-simple.rs \\\n                       alt-tag.rs \\\n+                      autoderef-full-lval.rs \\\n                       autoderef-objfn.rs \\\n                       basic.rs \\\n                       bind-obj-ctor.rs \\"}, {"sha": "d8128196717b1a2a1ca9d2005e30553236b7c8e5", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "patch": "@@ -973,33 +973,40 @@ let trans_visitor\n       (lv:Ast.lval)\n       : (Il.cell * Ast.ty) =\n \n-    let rec trans_slot_lval_full (initializing:bool) lv =\n+    let rec trans_slot_lval_full (initializing:bool) (outermost:bool) lv =\n       let (cell, ty) =\n         match lv with\n             Ast.LVAL_ext (base, comp) ->\n               let (base_cell, base_ty) =\n-                trans_slot_lval_full initializing base\n+                trans_slot_lval_full initializing false base\n               in\n                 trans_slot_lval_ext initializing base_ty base_cell comp\n \n-          | Ast.LVAL_base nbi ->\n+          | Ast.LVAL_base _ ->\n               let sloti = lval_base_to_slot cx lv in\n               let cell = cell_of_block_slot sloti.id in\n               let ty = slot_ty sloti.node in\n               let cell = deref_slot initializing cell sloti.node in\n-              let dctrl =\n-                (* If this fails, type didn't visit the lval, and we\n-                 * don't know whether to auto-deref its base. Crashing\n-                 * here is best. Compiler bug.\n-                 *)\n-                match htab_search cx.ctxt_auto_deref_lval nbi.id with\n-                    None ->\n-                      bugi cx nbi.id\n-                        \"Lval without auto-deref info; bad typecheck?\"\n-                  | Some true -> DEREF_all_boxes\n-                  | Some false -> DEREF_none\n-              in\n-                deref_ty dctrl initializing cell ty\n+                (cell, ty)\n+      in\n+      let (cell, ty) =\n+        if outermost\n+        then\n+          let id = lval_base_id lv in\n+          let dctrl =\n+            (* If this fails, type didn't visit the lval, and we\n+             * don't know whether to auto-deref the entire lval.\n+             * Crashing here is best. Compiler bug.\n+             *)\n+            match htab_search cx.ctxt_auto_deref_lval id with\n+                None ->\n+                  bugi cx id\n+                    \"Lval without auto-deref info; bad typecheck?\"\n+              | Some true -> DEREF_all_boxes\n+              | Some false -> DEREF_none\n+          in\n+            deref_ty dctrl initializing cell ty\n+        else (cell, ty)\n       in\n         iflog\n           begin\n@@ -1013,7 +1020,7 @@ let trans_visitor\n \n     in\n       if lval_is_slot cx lv\n-      then trans_slot_lval_full initializing lv\n+      then trans_slot_lval_full initializing true lv\n       else\n         if initializing\n         then err None \"init item\""}, {"sha": "956a7eb440b55cb07fb1025795691cf400f660b7", "filename": "src/test/run-pass/autoderef-full-lval.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/src%2Ftest%2Frun-pass%2Fautoderef-full-lval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae515c017c0aadb2a4c691804f1bc3b8b343dd67/src%2Ftest%2Frun-pass%2Fautoderef-full-lval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-full-lval.rs?ref=ae515c017c0aadb2a4c691804f1bc3b8b343dd67", "patch": "@@ -0,0 +1,18 @@\n+// -*- rust -*-\n+\n+type clam = rec(@int x, @int y);\n+type fish = tup(@int);\n+\n+fn main() {\n+  let clam a = rec(x=@1, y=@2);\n+  let clam b = rec(x=@10, y=@20);\n+  let int z = a.x + b.y;\n+  log z;\n+  check (z == 21);\n+\n+  let fish forty = tup(@40);\n+  let fish two = tup(@2);\n+  let int answer = forty._0 + two._0;\n+  log answer;\n+  check (answer == 42);\n+}"}]}