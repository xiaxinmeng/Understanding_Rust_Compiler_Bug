{"sha": "9ea345d9d010c1ac8806d503e4a1dfa804dd4018", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYTM0NWQ5ZDAxMGMxYWM4ODA2ZDUwM2U0YTFkZmE4MDRkZDQwMTg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-09-25T20:34:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-25T20:34:44Z"}, "message": "Rollup merge of #54522 - gardrek:patch-1, r=TimNN\n\nFixed three small typos.", "tree": {"sha": "17711072a12a9a0afa6299e743a1d733f5519aa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17711072a12a9a0afa6299e743a1d733f5519aa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ea345d9d010c1ac8806d503e4a1dfa804dd4018", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbqpvlCRBK7hj4Ov3rIwAAdHIIAE9RjnDOXa6TYGpPyF9bkzQj\nDqrtGcO+SX3I8+gFizYdaSXJPY+FHM/6nyjjpw0wIsQAWvErZeDZnXFalSdGpy9i\nutzScbvFlswZy+riR0rB7YxSAMsfRU/1Vwv7jioh/6MtsHvVSHqZxHym9hBjM8MQ\ngfxSWYfohZz8PdHqEmtH8Z4D6wI89Fn2LWYYy0JbV95XMSx9shwFEBqFXUtPtUcH\nstI7X+3ZnpQECCgVoKiSDBsb9X3LEA6J4aOog51rRedYOh8YGFM2deQFsH9/n736\nxw0Zo0N/0ME0OkRgHNJ6PYRvq695KbdHFaIXY2CQH1/dRRBV0UHFEkvddFABjjc=\n=xDHT\n-----END PGP SIGNATURE-----\n", "payload": "tree 17711072a12a9a0afa6299e743a1d733f5519aa1\nparent cf3c385fef4d8bc071f51ecdb1004e73c7fe8a9b\nparent 1b9da678114a6485f7bb20ba382c52097f6bfb29\nauthor Pietro Albini <pietro@pietroalbini.org> 1537907684 +0200\ncommitter GitHub <noreply@github.com> 1537907684 +0200\n\nRollup merge of #54522 - gardrek:patch-1, r=TimNN\n\nFixed three small typos.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea345d9d010c1ac8806d503e4a1dfa804dd4018", "html_url": "https://github.com/rust-lang/rust/commit/9ea345d9d010c1ac8806d503e4a1dfa804dd4018", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ea345d9d010c1ac8806d503e4a1dfa804dd4018/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf3c385fef4d8bc071f51ecdb1004e73c7fe8a9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf3c385fef4d8bc071f51ecdb1004e73c7fe8a9b", "html_url": "https://github.com/rust-lang/rust/commit/cf3c385fef4d8bc071f51ecdb1004e73c7fe8a9b"}, {"sha": "1b9da678114a6485f7bb20ba382c52097f6bfb29", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9da678114a6485f7bb20ba382c52097f6bfb29", "html_url": "https://github.com/rust-lang/rust/commit/1b9da678114a6485f7bb20ba382c52097f6bfb29"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8d54728a75f42ff3e93918feeda1bf9c596e00c3", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9ea345d9d010c1ac8806d503e4a1dfa804dd4018/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea345d9d010c1ac8806d503e4a1dfa804dd4018/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=9ea345d9d010c1ac8806d503e4a1dfa804dd4018", "patch": "@@ -208,7 +208,7 @@ mod prim_bool { }\n /// # `!` and traits\n ///\n /// When writing your own traits, `!` should have an `impl` whenever there is an obvious `impl`\n-/// which doesn't `panic!`. As is turns out, most traits can have an `impl` for `!`. Take [`Debug`]\n+/// which doesn't `panic!`. As it turns out, most traits can have an `impl` for `!`. Take [`Debug`]\n /// for example:\n ///\n /// ```\n@@ -228,9 +228,9 @@ mod prim_bool { }\n /// [`fmt::Result`]. Since this method takes a `&!` as an argument we know that it can never be\n /// called (because there is no value of type `!` for it to be called with). Writing `*self`\n /// essentially tells the compiler \"We know that this code can never be run, so just treat the\n-/// entire function body has having type [`fmt::Result`]\". This pattern can be used a lot when\n+/// entire function body as having type [`fmt::Result`]\". This pattern can be used a lot when\n /// implementing traits for `!`. Generally, any trait which only has methods which take a `self`\n-/// parameter should have such as impl.\n+/// parameter should have such an impl.\n ///\n /// On the other hand, one trait which would not be appropriate to implement is [`Default`]:\n ///"}]}