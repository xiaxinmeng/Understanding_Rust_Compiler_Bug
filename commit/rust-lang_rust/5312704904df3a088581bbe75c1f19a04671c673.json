{"sha": "5312704904df3a088581bbe75c1f19a04671c673", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMTI3MDQ5MDRkZjNhMDg4NTgxYmJlNzVjMWYxOWEwNDY3MWM2NzM=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-28T08:23:18Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-28T08:23:18Z"}, "message": "Fix too-large constants in linked failure tests for happier valgrinding", "tree": {"sha": "e811400b5ef59b41cc53a2306afb293c4b617bb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e811400b5ef59b41cc53a2306afb293c4b617bb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5312704904df3a088581bbe75c1f19a04671c673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5312704904df3a088581bbe75c1f19a04671c673", "html_url": "https://github.com/rust-lang/rust/commit/5312704904df3a088581bbe75c1f19a04671c673", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5312704904df3a088581bbe75c1f19a04671c673/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afe77575259939dbaebb2b02ae4ebab628c611bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/afe77575259939dbaebb2b02ae4ebab628c611bf", "html_url": "https://github.com/rust-lang/rust/commit/afe77575259939dbaebb2b02ae4ebab628c611bf"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9b86a1002896ef3f0ec9dda19aee5b120acfc4a7", "filename": "src/libcore/task.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5312704904df3a088581bbe75c1f19a04671c673/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5312704904df3a088581bbe75c1f19a04671c673/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=5312704904df3a088581bbe75c1f19a04671c673", "patch": "@@ -1219,7 +1219,7 @@ fn test_spawn_unlinked_unsup_no_fail_down() { // grandchild sends on a port\n     do spawn_unlinked {\n         do spawn_unlinked {\n             // Give middle task a chance to fail-but-not-kill-us.\n-            for iter::repeat(8192) { task::yield(); }\n+            for iter::repeat(128) { task::yield(); }\n             comm::send(ch, ()); // If killed first, grandparent hangs.\n         }\n         fail; // Shouldn't kill either (grand)parent or (grand)child.\n@@ -1234,7 +1234,7 @@ fn test_spawn_unlinked_unsup_no_fail_up() { // child unlinked fails\n fn test_spawn_unlinked_sup_no_fail_up() { // child unlinked fails\n     do spawn_supervised { fail; }\n     // Give child a chance to fail-but-not-kill-us.\n-    for iter::repeat(8192) { task::yield(); }\n+    for iter::repeat(128) { task::yield(); }\n }\n #[test] #[should_fail] #[ignore(cfg(windows))]\n fn test_spawn_unlinked_sup_fail_down() {\n@@ -1304,7 +1304,7 @@ fn test_spawn_failure_propagate_grandchild() {\n             loop { task::yield(); }\n         }\n     }\n-    for iter::repeat(8192) { task::yield(); }\n+    for iter::repeat(128) { task::yield(); }\n     fail;\n }\n \n@@ -1316,7 +1316,7 @@ fn test_spawn_failure_propagate_secondborn() {\n             loop { task::yield(); }\n         }\n     }\n-    for iter::repeat(8192) { task::yield(); }\n+    for iter::repeat(128) { task::yield(); }\n     fail;\n }\n \n@@ -1328,7 +1328,7 @@ fn test_spawn_failure_propagate_nephew_or_niece() {\n             loop { task::yield(); }\n         }\n     }\n-    for iter::repeat(8192) { task::yield(); }\n+    for iter::repeat(128) { task::yield(); }\n     fail;\n }\n \n@@ -1340,7 +1340,7 @@ fn test_spawn_linked_sup_propagate_sibling() {\n             loop { task::yield(); }\n         }\n     }\n-    for iter::repeat(8192) { task::yield(); }\n+    for iter::repeat(128) { task::yield(); }\n     fail;\n }\n \n@@ -1741,7 +1741,7 @@ fn test_atomically_nested() {\n fn test_child_doesnt_ref_parent() {\n     // If the child refcounts the parent task, this will stack overflow when\n     // climbing the task tree to dereference each ancestor. (See #1789)\n-    const generations: uint = 8192;\n+    const generations: uint = 128;\n     fn child_no(x: uint) -> fn~() {\n         ret || {\n             if x < generations {"}]}