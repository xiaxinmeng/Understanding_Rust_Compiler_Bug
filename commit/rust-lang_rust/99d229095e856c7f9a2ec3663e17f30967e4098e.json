{"sha": "99d229095e856c7f9a2ec3663e17f30967e4098e", "node_id": "C_kwDOAAsO6NoAKDk5ZDIyOTA5NWU4NTZjN2Y5YTJlYzM2NjNlMTdmMzA5NjdlNDA5OGU", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-12-08T14:56:43Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-12-08T14:58:14Z"}, "message": "Make encode_info_for_trait_item use queries instead of accessing the HIR", "tree": {"sha": "9b4133604e7cdcd21ead6658b1502704090b44d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b4133604e7cdcd21ead6658b1502704090b44d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99d229095e856c7f9a2ec3663e17f30967e4098e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmOR+4YACgkQgTGiTgx5\n76+UsBAAi5dM2Bj0RfRuLBAwlxZwfRfkXZffW2Knf+rXEhZOyqGitVJzZqb2ihEj\nwTQn6G/A50B6zrmJGGqmkV4QeTqPaxXZFqyMTXtxtnhMv+uR5H7FwDACnMyJFpRG\n/2I11W6wXCGpMY9115WGdW6K6KNkeP9s0TZQ7JHPDZEKZqJu8CWf2XRI9CQ63wqS\nPNWl/o0R6bwFTj2LEQBq5W6Q2LlZTaRwltNDwUvIMGNF8B2x10SG/Gtko6JhqWCz\nHohuZIM2eAZUdscFe3pikJW6AusGR6+Xhx5K2azRFyeYrg/WgCXCDdL9OZJ+XztK\nBkx9VNyM8/fiIHIyR/7jW2jgNGeYG11YLsbH+8R5uBuKex89kz03sTzTPj1saZC+\nWhTlpGUy3G2Pv4e9xBOjcQuyHxpnXbABu8NCKCBgJUpn4obVTbzzV1MPY1kuRdnC\n4fjl5PnPyd4Ha3q8+8nDF3jFfblGjDG7f8FHpoBgp1hISopPKWb01FA2f+0b9vT6\nsnrWcE6DsmPQn6jJ/bGLjZlQZByJTP5jPApOulyB8NrTaJdFS4iC/SkiNv3OeXuZ\n4aYe4MvdsTnhnG9uzJFqT1uYdRIpYs/w6SC0Pzb5yMq29ZN3qTgVBnOGlSyMNlLV\n9apjMssyaxnQalA5UXNSWZVopJBZmMM7aM4IQ+VKsqgZ1oRVtus=\n=Jypd\n-----END PGP SIGNATURE-----", "payload": "tree 9b4133604e7cdcd21ead6658b1502704090b44d2\nparent 7632db0e87d8adccc9a83a47795c9411b1455855\nauthor Santiago Pastorino <spastorino@gmail.com> 1670511403 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1670511494 -0300\n\nMake encode_info_for_trait_item use queries instead of accessing the HIR\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99d229095e856c7f9a2ec3663e17f30967e4098e", "html_url": "https://github.com/rust-lang/rust/commit/99d229095e856c7f9a2ec3663e17f30967e4098e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99d229095e856c7f9a2ec3663e17f30967e4098e/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7632db0e87d8adccc9a83a47795c9411b1455855", "url": "https://api.github.com/repos/rust-lang/rust/commits/7632db0e87d8adccc9a83a47795c9411b1455855", "html_url": "https://github.com/rust-lang/rust/commit/7632db0e87d8adccc9a83a47795c9411b1455855"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "29f9e82da75cc58b9b6f50b2f090dde45e50d7d2", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/99d229095e856c7f9a2ec3663e17f30967e4098e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99d229095e856c7f9a2ec3663e17f30967e4098e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=99d229095e856c7f9a2ec3663e17f30967e4098e", "patch": "@@ -1337,24 +1337,16 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         debug!(\"EncodeContext::encode_info_for_trait_item({:?})\", def_id);\n         let tcx = self.tcx;\n \n-        let ast_item = tcx.hir().expect_trait_item(def_id.expect_local());\n-        self.tables.impl_defaultness.set(def_id.index, ast_item.defaultness);\n+        let impl_defaultness = tcx.impl_defaultness(def_id.expect_local());\n+        self.tables.impl_defaultness.set(def_id.index, impl_defaultness);\n         let trait_item = tcx.associated_item(def_id);\n         self.tables.assoc_container.set(def_id.index, trait_item.container);\n \n         match trait_item.kind {\n             ty::AssocKind::Const => {}\n             ty::AssocKind::Fn => {\n-                let hir::TraitItemKind::Fn(m_sig, m) = &ast_item.kind else { bug!() };\n-                match *m {\n-                    hir::TraitFn::Required(ref names) => {\n-                        record_array!(self.tables.fn_arg_names[def_id] <- *names)\n-                    }\n-                    hir::TraitFn::Provided(body) => {\n-                        record_array!(self.tables.fn_arg_names[def_id] <- self.tcx.hir().body_param_names(body))\n-                    }\n-                };\n-                self.tables.asyncness.set(def_id.index, m_sig.header.asyncness);\n+                record_array!(self.tables.fn_arg_names[def_id] <- tcx.fn_arg_names(def_id));\n+                self.tables.asyncness.set(def_id.index, tcx.asyncness(def_id));\n                 self.tables.constness.set(def_id.index, hir::Constness::NotConst);\n             }\n             ty::AssocKind::Type => {"}]}