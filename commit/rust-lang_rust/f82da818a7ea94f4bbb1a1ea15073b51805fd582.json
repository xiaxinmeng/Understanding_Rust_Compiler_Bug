{"sha": "f82da818a7ea94f4bbb1a1ea15073b51805fd582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MmRhODE4YTdlYTk0ZjRiYmIxYTFlYTE1MDczYjUxODA1ZmQ1ODI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-05T19:43:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-07T22:40:27Z"}, "message": "std::rt: Pull RUST_MIN_STACK from the environment", "tree": {"sha": "6983fa7543995282fac2a18cb7368bf463c14e38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6983fa7543995282fac2a18cb7368bf463c14e38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f82da818a7ea94f4bbb1a1ea15073b51805fd582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f82da818a7ea94f4bbb1a1ea15073b51805fd582", "html_url": "https://github.com/rust-lang/rust/commit/f82da818a7ea94f4bbb1a1ea15073b51805fd582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f82da818a7ea94f4bbb1a1ea15073b51805fd582/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb6143257dd5a6848be4e073fc756ae705156241", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6143257dd5a6848be4e073fc756ae705156241", "html_url": "https://github.com/rust-lang/rust/commit/eb6143257dd5a6848be4e073fc756ae705156241"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "6e671742fb6fdfa7fd8c8c71b8ed58fcbd34faca", "filename": "src/libstd/rt/env.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f82da818a7ea94f4bbb1a1ea15073b51805fd582/src%2Flibstd%2Frt%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82da818a7ea94f4bbb1a1ea15073b51805fd582/src%2Flibstd%2Frt%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fenv.rs?ref=f82da818a7ea94f4bbb1a1ea15073b51805fd582", "patch": "@@ -10,7 +10,12 @@\n \n //! Runtime environment settings\n \n+use from_str::FromStr;\n use libc::{size_t, c_char, c_int};\n+use option::{Some, None};\n+use os;\n+\n+// OLD RT stuff\n \n pub struct Environment {\n     /// The number of threads to use by default\n@@ -47,3 +52,26 @@ pub fn get() -> &Environment {\n extern {\n     fn rust_get_rt_env() -> &Environment;\n }\n+\n+// NEW RT stuff\n+\n+// Note that these are all accessed without any synchronization.\n+// They are expected to be initialized once then left alone.\n+\n+static mut MIN_STACK: uint = 2000000;\n+\n+pub fn init() {\n+    unsafe {\n+        match os::getenv(\"RUST_MIN_STACK\") {\n+            Some(s) => match FromStr::from_str(s) {\n+                Some(i) => MIN_STACK = i,\n+                None => ()\n+            },\n+            None => ()\n+        }\n+    }\n+}\n+\n+pub fn min_stack() -> uint {\n+    unsafe { MIN_STACK }\n+}"}, {"sha": "5b22eace56f8a67025848ea93476a912ab80b458", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f82da818a7ea94f4bbb1a1ea15073b51805fd582/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82da818a7ea94f4bbb1a1ea15073b51805fd582/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=f82da818a7ea94f4bbb1a1ea15073b51805fd582", "patch": "@@ -212,6 +212,7 @@ pub fn init(argc: int, argv: **u8, crate_map: *u8) {\n     // Need to propagate the unsafety to `start`.\n     unsafe {\n         args::init(argc, argv);\n+        env::init();\n         logging::init(crate_map);\n         rust_update_gc_metadata(crate_map);\n     }"}, {"sha": "aa6d51a480b2b9a232e5e440a97f9f9b8b5d49aa", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f82da818a7ea94f4bbb1a1ea15073b51805fd582/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82da818a7ea94f4bbb1a1ea15073b51805fd582/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=f82da818a7ea94f4bbb1a1ea15073b51805fd582", "patch": "@@ -20,6 +20,7 @@ use libc::{c_void, uintptr_t};\n use ptr;\n use prelude::*;\n use option::{Option, Some, None};\n+use rt::env;\n use rt::kill::Death;\n use rt::local::Local;\n use rt::logging::StdErrLogger;\n@@ -326,10 +327,9 @@ impl Drop for Task {\n impl Coroutine {\n \n     pub fn new(stack_pool: &mut StackPool, start: ~fn()) -> Coroutine {\n-        static MIN_STACK_SIZE: uint = 2000000; // XXX: Too much stack\n-\n+        let stack_size = env::min_stack();\n         let start = Coroutine::build_start_wrapper(start);\n-        let mut stack = stack_pool.take_segment(MIN_STACK_SIZE);\n+        let mut stack = stack_pool.take_segment(stack_size);\n         let initial_context = Context::new(start, &mut stack);\n         Coroutine {\n             current_stack_segment: stack,"}]}