{"sha": "6c4e975099f22d6438af0fb3e69f79c433156422", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNGU5NzUwOTlmMjJkNjQzOGFmMGZiM2U2OWY3OWM0MzMxNTY0MjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-30T00:09:46Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-30T00:09:46Z"}, "message": "Teach fold about ty_rec.", "tree": {"sha": "ec2448c5acf0cd089d2633fac574ea2edbcb7f57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec2448c5acf0cd089d2633fac574ea2edbcb7f57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c4e975099f22d6438af0fb3e69f79c433156422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4e975099f22d6438af0fb3e69f79c433156422", "html_url": "https://github.com/rust-lang/rust/commit/6c4e975099f22d6438af0fb3e69f79c433156422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c4e975099f22d6438af0fb3e69f79c433156422/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6b7f763853d0d847288111e7050841e05a885f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b7f763853d0d847288111e7050841e05a885f4", "html_url": "https://github.com/rust-lang/rust/commit/e6b7f763853d0d847288111e7050841e05a885f4"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "ff8f5505bab6c9a8eb92e25c3253a04b48986449", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6c4e975099f22d6438af0fb3e69f79c433156422/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4e975099f22d6438af0fb3e69f79c433156422/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=6c4e975099f22d6438af0fb3e69f79c433156422", "patch": "@@ -48,6 +48,9 @@ type ast_fold[ENV] =\n \n      (fn(&ENV e, &span sp, vec[@ty] elts) -> @ty) fold_ty_tup,\n \n+     (fn(&ENV e, &span sp,\n+         vec[tup(ident,@ty)] elts) -> @ty)        fold_ty_rec,\n+\n      (fn(&ENV e, &span sp,\n          vec[rec(ast.mode mode, @ty ty)] inputs,\n          @ty output) -> @ty)                      fold_ty_fn,\n@@ -252,6 +255,15 @@ fn fold_ty[ENV](&ENV env, ast_fold[ENV] fld, @ty t) -> @ty {\n             ret fld.fold_ty_tup(env_, t.span, elts);\n         }\n \n+        case (ast.ty_rec(?elts)) {\n+            let vec[tup(ident,@ty)] elts_ = vec();\n+            for (tup(ident, @ty) elt in elts) {\n+                append[tup(ident, @ty)]\n+                    (elts_, tup(elt._0, fold_ty(env, fld, elt._1)));\n+            }\n+            ret fld.fold_ty_rec(env_, t.span, elts);\n+        }\n+\n         case (ast.ty_path(?pth, ?ref_opt)) {\n             let vec[ast.name] path = vec();\n             for (ast.name n in pth) {\n@@ -655,6 +667,11 @@ fn identity_fold_ty_tup[ENV](&ENV env, &span sp,\n     ret @respan(sp, ast.ty_tup(elts));\n }\n \n+fn identity_fold_ty_rec[ENV](&ENV env, &span sp,\n+                             vec[tup(ident,@ty)] elts) -> @ty {\n+    ret @respan(sp, ast.ty_rec(elts));\n+}\n+\n fn identity_fold_ty_fn[ENV](&ENV env, &span sp,\n                             vec[rec(ast.mode mode, @ty ty)] inputs,\n                             @ty output) -> @ty {\n@@ -918,6 +935,7 @@ fn new_identity_fold[ENV]() -> ast_fold[ENV] {\n          fold_ty_box     = bind identity_fold_ty_box[ENV](_,_,_),\n          fold_ty_vec     = bind identity_fold_ty_vec[ENV](_,_,_),\n          fold_ty_tup     = bind identity_fold_ty_tup[ENV](_,_,_),\n+         fold_ty_rec     = bind identity_fold_ty_rec[ENV](_,_,_),\n          fold_ty_fn      = bind identity_fold_ty_fn[ENV](_,_,_,_),\n          fold_ty_path    = bind identity_fold_ty_path[ENV](_,_,_,_),\n          fold_ty_mutable = bind identity_fold_ty_mutable[ENV](_,_,_),"}]}