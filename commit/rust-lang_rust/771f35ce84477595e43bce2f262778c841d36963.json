{"sha": "771f35ce84477595e43bce2f262778c841d36963", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MWYzNWNlODQ0Nzc1OTVlNDNiY2UyZjI2Mjc3OGM4NDFkMzY5NjM=", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-22T20:35:14Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-22T20:35:14Z"}, "message": "Some<T> is not a type, etc", "tree": {"sha": "f8b4aff53d64f5875c4055d4cada19f7372bc27e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8b4aff53d64f5875c4055d4cada19f7372bc27e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/771f35ce84477595e43bce2f262778c841d36963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/771f35ce84477595e43bce2f262778c841d36963", "html_url": "https://github.com/rust-lang/rust/commit/771f35ce84477595e43bce2f262778c841d36963", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/771f35ce84477595e43bce2f262778c841d36963/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a00fd049bbc051ce1cbacb04c0db5a7bfc8d723", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a00fd049bbc051ce1cbacb04c0db5a7bfc8d723", "html_url": "https://github.com/rust-lang/rust/commit/9a00fd049bbc051ce1cbacb04c0db5a7bfc8d723"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "8c12bcff5cce7f4f01411f9a9461a629e5911647", "filename": "library/core/src/option.rs", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/771f35ce84477595e43bce2f262778c841d36963/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/771f35ce84477595e43bce2f262778c841d36963/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=771f35ce84477595e43bce2f262778c841d36963", "patch": "@@ -144,25 +144,35 @@\n //!\n //! ## Transforming contained values\n //!\n+//! These transformations are from [`Option`] to [`Result`].\n+//!\n+//! * [`ok_or`] transforms [`Some(v)`] to [`Ok(v)`], and [`None`] to\n+//!   [`Err(err)`] using the provided default `err` value\n+//! * [`ok_or_else`] transforms [`Some(v)`] to [`Ok(v)`], and [`None`] to\n+//!   a value of [`Err`] using the provided function\n+//! * [`transpose`] transposes an [`Option`] of a [`Result`] into a\n+//!   [`Result`] of an [`Option`]\n+//!\n+//! These transformations are on [`Some`] values.\n+//!\n //! * [`filter`] calls the provided predicate function on the contained\n //!   value `t` if the [`Option`] is [`Some(t)`], and returns [`Some(t)`]\n //!   if the function returns `true`; otherwise, returns [`None`]\n //! * [`flatten`] removes one level of nesting from an\n //!   [`Option<Option<T>>`]\n-//! * [`map`] transforms [`Some<T>`] to [`Some<U>`] using the provided\n+//! * [`map`] transforms [`Option<T>`] to [`Option<U>`] by applying the\n+//!   provided function to the contained value of [`Some`] and leaving\n+//!   [`None`] values unchanged\n+//! * [`map_or`] transforms [`Option<T>`] to a value of `U` by applying the\n+//!   provided function to the contained value of [`Some`], or transforms\n+//!   [`None`] to a provided default value of `U`\n+//! * [`map_or_else`] transforms [`Option<T>`] to a value of `U` by\n+//!   applying the provided function to the contained value of [`Some`], or\n+//!   transforms [`None`] to a value of `U` using a provided fallback\n //!   function\n-//! * [`map_or`] transforms [`Some<T>`] to a value of `U` using the\n-//!   provided function, or transforms [`None`] to a provided default value\n-//!   of `U`\n-//! * [`map_or_else`] transforms [`Some<T>`] to a value of `U` using the\n-//!   provided function, or transforms [`None`] to a value of `U` using\n-//!   another provided function\n-//! * [`ok_or`] transforms [`Some(v)`] to [`Ok(v)`], and [`None`] to\n-//!   [`Err(err)`] using the provided default `err` value\n-//! * [`ok_or_else`] transforms [`Some(v)`] to [`Ok(v)`], and [`None`] to\n-//!   a value of [`Err<E>`] using the provided function\n-//! * [`transpose`] transposes an [`Option`] of a [`Result`] into a\n-//!   [`Result`] of an [`Option`]\n+//!\n+//! These transformations combine two [`Some`] values.\n+//!\n //! * [`zip`] returns [`Some((s, o))`] if `self` is [`Some(s)`] and the\n //!   provided [`Option`] value is [`Some(o)`]; otherwise, returns [`None`]\n //! * [`zip_with`] calls the provided function `f` and returns"}]}