{"sha": "5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7", "node_id": "C_kwDOAAsO6NoAKDVlZWVlZDFhYTFkODQxNDUyNTBkMWIwZjk1NjFiZWU0ZDRlN2NkYTc", "commit": {"author": {"name": "jyn", "email": "jyn.nelson@redjack.com", "date": "2023-04-05T12:57:54Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-05T02:04:10Z"}, "message": "Greatly decrease the size of `rustc_driver.so` when debuginfo is enabled\n\n- Only add -gz if it's supported\n- Don't include extra unnecessary debuginfo when only debuginfo-level=1 is set\n- Compress debuginfo sections to reduce the size of debuginfo on disk.\n\nbefore: 650 MB\nline tables only: 335 MB\ncompressed only: 216 MB\ncompressed and line tables: 186 MB\nno debuginfo at all: 130 MB\n\nI want to investigate why `-C line-tables-only` is still ~tripling the\nsize of the binary, but this seems like a good improvement in the\nmeantime.\n\nI've tested that both valgrind and perf can read the debuginfo:\n```\n(bash@dev-desktop-us-1.infra.rust-lang.org) ~/rust [08:31:08]\n; valgrind $(rustup which rustc --toolchain rust_stage2) --version\n==441671== Memcheck, a memory error detector\n==441671== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==441671== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info\n==441671== Command: /home/gh-jyn514/.local/lib/rustup/toolchains/rust_stage2/bin/rustc --version\n==441671==\nrustc 1.70.0-dev\n==441671==\n==441671== HEAP SUMMARY:\n==441671==     in use at exit: 231,289 bytes in 1,874 blocks\n==441671==   total heap usage: 2,538 allocs, 664 frees, 486,368 bytes allocated\n==441671==\n==441671== LEAK SUMMARY:\n==441671==    definitely lost: 70,656 bytes in 1 blocks\n==441671==    indirectly lost: 0 bytes in 0 blocks\n==441671==      possibly lost: 0 bytes in 0 blocks\n==441671==    still reachable: 160,633 bytes in 1,873 blocks\n==441671==         suppressed: 0 bytes in 0 blocks\n==441671== Rerun with --leak-check=full to see details of leaked memory\n==441671==\n==441671== For lists of detected and suppressed errors, rerun with: -s\n==441671== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n; perf record $(rustup which rustc --toolchain rust_stage2) --version\nrustc 1.70.0-dev\n[ perf record: Woken up 1 times to write data ]\n[ perf record: Captured and wrote 0.005 MB perf.data (70 samples) ]\n; perf report\nSamples: 70  of event 'cycles:u', Event count (approx.): 21356967\nOverhead  Command  Shared Object                        Symbol\n  51.55%  rustc    ld-linux-aarch64.so.1                [.] _dl_lookup_symbol_x\n  18.70%  rustc    ld-linux-aarch64.so.1                [.] _dl_relocate_object\n  11.95%  rustc    ld-linux-aarch64.so.1                [.] do_lookup_x\n   5.55%  rustc    [unknown]                            [k] 0xffffa9ad41cfcfdc\n   2.68%  rustc    libc.so.6                            [.] __GI___strlen_asimd\n   2.42%  rustc    librustc_driver-1a385c366c35e81a.so  [.] llvm::StringMapImpl::LookupBucketFor\n   2.16%  rustc    librustc_driver-1a385c366c35e81a.so  [.] _GLOBAL__sub_I_X86InstructionSelector.cpp\n   1.96%  rustc    libstd-990fe978dab76ef3.so           [.] <alloc::vec::Vec<T,A> as core::clone::Clone>::clone\n   1.60%  rustc    librustc_driver-1a385c366c35e81a.so  [.] llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt\n   1.22%  rustc    ld-linux-aarch64.so.1                [.] strcmp\n   0.13%  rustc    ld-linux-aarch64.so.1                [.] stat64\n   0.05%  rustc    ld-linux-aarch64.so.1                [.] __minimal_calloc\n   0.02%  rustc    ld-linux-aarch64.so.1                [.] __GI___tunables_init\n   0.02%  rustc    ld-linux-aarch64.so.1                [.] _dl_start\n   0.00%  rustc    [unknown]                            [k] 0xffffa9ad41cfd844\n   0.00%  rustc    ld-linux-aarch64.so.1                [.] _start\n```", "tree": {"sha": "b0ffb4f00082ad20d47d856aa24b4cf70122eff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0ffb4f00082ad20d47d856aa24b4cf70122eff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7", "html_url": "https://github.com/rust-lang/rust/commit/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4f7ad8e68206fa54372535b5c04d7ddbaea43be", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f7ad8e68206fa54372535b5c04d7ddbaea43be", "html_url": "https://github.com/rust-lang/rust/commit/e4f7ad8e68206fa54372535b5c04d7ddbaea43be"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "9423f309cb1cc2a513982400edb38a14ae9588b4", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7", "patch": "@@ -1673,7 +1673,15 @@ impl<'a> Builder<'a> {\n                 self.config.rust_debuginfo_level_tools\n             }\n         };\n-        cargo.env(profile_var(\"DEBUG\"), debuginfo_level.to_string());\n+        if debuginfo_level == 1 {\n+            // Use less debuginfo than the default to save on disk space.\n+            cargo.env(profile_var(\"DEBUG\"), \"line-tables-only\");\n+        } else {\n+            cargo.env(profile_var(\"DEBUG\"), debuginfo_level.to_string());\n+        };\n+        if self.cc[&target].args().iter().any(|arg| arg == \"-gz\") {\n+            rustflags.arg(\"-Clink-arg=-gz\");\n+        }\n         cargo.env(\n             profile_var(\"DEBUG_ASSERTIONS\"),\n             if mode == Mode::Std {"}, {"sha": "db3b69d18c8fc143d260a348ded9b1ad6441c466", "filename": "src/bootstrap/cc_detect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7/src%2Fbootstrap%2Fcc_detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7/src%2Fbootstrap%2Fcc_detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc_detect.rs?ref=5eeeed1aa1d84145250d1b0f9561bee4d4e7cda7", "patch": "@@ -69,6 +69,8 @@ fn new_cc_build(build: &Build, target: TargetSelection) -> cc::Build {\n         .opt_level(2)\n         .warnings(false)\n         .debug(false)\n+        // Compress debuginfo\n+        .flag_if_supported(\"-gz\")\n         .target(&target.triple)\n         .host(&build.build.triple);\n     match build.crt_static(target) {"}]}