{"sha": "54a5073af99ec927ceaa01de90743534cbd39e80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YTUwNzNhZjk5ZWM5MjdjZWFhMDFkZTkwNzQzNTM0Y2JkMzllODA=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-03-08T08:42:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-08T08:42:09Z"}, "message": "Rollup merge of #58961 - estebank:issue-58462, r=varkor\n\nOn incorrect cfg literal/identifier, point at the right span\n\nCC #58462", "tree": {"sha": "1607c0c9291d6b5c1c399acfde742783cd169ffa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1607c0c9291d6b5c1c399acfde742783cd169ffa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a5073af99ec927ceaa01de90743534cbd39e80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgirhCRBK7hj4Ov3rIwAAdHIIAFyA8KOlZYGsxrDMf4QGv9x0\n4hzHYooVqIgm3/F04B8mfeYWlbdd/SkPkw7xAieLKGidqJ4HXjzzKRtLFHXjH0Qe\nr5ISremUniGm+jFCVdvD0b3ku4cqkZbNVmVebifLIyKoPlxcbNi7uSnll37P2Jwb\nE0LiowghSIvbKpje+A6UAPf0UcFhW2MeXmu2vI1xKqoPlNYHonvfnDwm14WaZvsa\n+0a5+xBNFp1oTvgQXQ38mpuMvbnGz67rk79p3d2eQawBMntbSlmACQjIr1eG0Log\nxS2dTI4BHGlpbQPhJJuwN9BfPo1ZsLDVpIPwdqtK0fKek4yjs8owV4vQeTf6vUE=\n=Dus+\n-----END PGP SIGNATURE-----\n", "payload": "tree 1607c0c9291d6b5c1c399acfde742783cd169ffa\nparent 1d33fc9975dff3d61c4c2202daca5368d368df80\nparent 02eb523d91a2acbb78c9c1ca305e03d88d6dd985\nauthor Pietro Albini <pietro@pietroalbini.org> 1552034529 +0100\ncommitter GitHub <noreply@github.com> 1552034529 +0100\n\nRollup merge of #58961 - estebank:issue-58462, r=varkor\n\nOn incorrect cfg literal/identifier, point at the right span\n\nCC #58462\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a5073af99ec927ceaa01de90743534cbd39e80", "html_url": "https://github.com/rust-lang/rust/commit/54a5073af99ec927ceaa01de90743534cbd39e80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a5073af99ec927ceaa01de90743534cbd39e80/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d33fc9975dff3d61c4c2202daca5368d368df80", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d33fc9975dff3d61c4c2202daca5368d368df80", "html_url": "https://github.com/rust-lang/rust/commit/1d33fc9975dff3d61c4c2202daca5368d368df80"}, {"sha": "02eb523d91a2acbb78c9c1ca305e03d88d6dd985", "url": "https://api.github.com/repos/rust-lang/rust/commits/02eb523d91a2acbb78c9c1ca305e03d88d6dd985", "html_url": "https://github.com/rust-lang/rust/commit/02eb523d91a2acbb78c9c1ca305e03d88d6dd985"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e93e15f9012a71980cfee44fd4db794f21f3f9b6", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54a5073af99ec927ceaa01de90743534cbd39e80/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a5073af99ec927ceaa01de90743534cbd39e80/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=54a5073af99ec927ceaa01de90743534cbd39e80", "patch": "@@ -285,8 +285,8 @@ impl<'a> Parser<'a> {\n         }\n \n         let found = self.this_token_to_string();\n-        let msg = format!(\"expected unsuffixed literal or identifier, found {}\", found);\n-        Err(self.diagnostic().struct_span_err(lo, &msg))\n+        let msg = format!(\"expected unsuffixed literal or identifier, found `{}`\", found);\n+        Err(self.diagnostic().struct_span_err(self.span, &msg))\n     }\n \n     /// matches meta_seq = ( COMMASEP(meta_item_inner) )"}, {"sha": "7f0648b381dbd92372246288ba64fee9059c222e", "filename": "src/test/ui/conditional-compilation/cfg-attr-syntax-validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a5073af99ec927ceaa01de90743534cbd39e80/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a5073af99ec927ceaa01de90743534cbd39e80/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.rs?ref=54a5073af99ec927ceaa01de90743534cbd39e80", "patch": "@@ -28,7 +28,7 @@ struct S9;\n macro_rules! generate_s10 {\n     ($expr: expr) => {\n         #[cfg(feature = $expr)]\n-        //~^ ERROR expected unsuffixed literal or identifier, found concat!(\"nonexistent\")\n+        //~^ ERROR expected unsuffixed literal or identifier, found `concat!(\"nonexistent\")`\n         struct S10;\n     }\n }"}, {"sha": "7dab2b2b53f91d61ee683ba5123f53b6fdc3747d", "filename": "src/test/ui/conditional-compilation/cfg-attr-syntax-validation.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/54a5073af99ec927ceaa01de90743534cbd39e80/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54a5073af99ec927ceaa01de90743534cbd39e80/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.stderr?ref=54a5073af99ec927ceaa01de90743534cbd39e80", "patch": "@@ -52,11 +52,11 @@ error[E0565]: literal in `cfg` predicate value must be a string\n LL | #[cfg(a = b\"hi\")]  //~ ERROR literal in `cfg` predicate value must be a string\n    |           ^^^^^ help: consider removing the prefix: `\"hi\"`\n \n-error: expected unsuffixed literal or identifier, found concat!(\"nonexistent\")\n-  --> $DIR/cfg-attr-syntax-validation.rs:30:15\n+error: expected unsuffixed literal or identifier, found `concat!(\"nonexistent\")`\n+  --> $DIR/cfg-attr-syntax-validation.rs:30:25\n    |\n LL |         #[cfg(feature = $expr)]\n-   |               ^^^^^^^\n+   |                         ^^^^^\n ...\n LL | generate_s10!(concat!(\"nonexistent\"));\n    | -------------------------------------- in this macro invocation"}]}