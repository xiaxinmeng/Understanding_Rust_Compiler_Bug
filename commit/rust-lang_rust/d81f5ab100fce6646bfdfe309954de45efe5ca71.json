{"sha": "d81f5ab100fce6646bfdfe309954de45efe5ca71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MWY1YWIxMDBmY2U2NjQ2YmZkZmUzMDk5NTRkZTQ1ZWZlNWNhNzE=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-31T15:38:11Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-04-01T09:22:12Z"}, "message": "Inline some functions that suddenly show up more in traces", "tree": {"sha": "dd6af21835fc6e3931ad3923de3e3d1ef331de8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd6af21835fc6e3931ad3923de3e3d1ef331de8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d81f5ab100fce6646bfdfe309954de45efe5ca71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d81f5ab100fce6646bfdfe309954de45efe5ca71", "html_url": "https://github.com/rust-lang/rust/commit/d81f5ab100fce6646bfdfe309954de45efe5ca71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d81f5ab100fce6646bfdfe309954de45efe5ca71/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74af01b989a798ddd7d2b8e368f460db27a7c658", "url": "https://api.github.com/repos/rust-lang/rust/commits/74af01b989a798ddd7d2b8e368f460db27a7c658", "html_url": "https://github.com/rust-lang/rust/commit/74af01b989a798ddd7d2b8e368f460db27a7c658"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "41d953216e0dd1425d2b59d465c4720c2e57ebdf", "filename": "compiler/rustc_middle/src/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d81f5ab100fce6646bfdfe309954de45efe5ca71/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81f5ab100fce6646bfdfe309954de45efe5ca71/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs?ref=d81f5ab100fce6646bfdfe309954de45efe5ca71", "patch": "@@ -483,6 +483,7 @@ impl<'tcx> Instance<'tcx> {\n         if let Some(substs) = self.substs_for_mir_body() { v.subst(tcx, substs) } else { *v }\n     }\n \n+    #[inline(always)]\n     pub fn subst_mir_and_normalize_erasing_regions<T>(\n         &self,\n         tcx: TyCtxt<'tcx>,"}, {"sha": "071d908655f156319967a34555c47db968e549b3", "filename": "compiler/rustc_middle/src/ty/normalize_erasing_regions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d81f5ab100fce6646bfdfe309954de45efe5ca71/compiler%2Frustc_middle%2Fsrc%2Fty%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81f5ab100fce6646bfdfe309954de45efe5ca71/compiler%2Frustc_middle%2Fsrc%2Fty%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fnormalize_erasing_regions.rs?ref=d81f5ab100fce6646bfdfe309954de45efe5ca71", "patch": "@@ -103,6 +103,7 @@ impl TypeFolder<'tcx> for NormalizeAfterErasingRegionsFolder<'tcx> {\n         self.tcx.normalize_generic_arg_after_erasing_regions(arg).expect_const()\n     }\n \n+    #[inline]\n     fn fold_mir_const(&mut self, c: mir::ConstantKind<'tcx>) -> mir::ConstantKind<'tcx> {\n         let arg = self.param_env.and(c);\n         self.tcx.normalize_mir_const_after_erasing_regions(arg)"}, {"sha": "0eb379219eb79dcd780a2225ecdb99691a498d8b", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d81f5ab100fce6646bfdfe309954de45efe5ca71/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81f5ab100fce6646bfdfe309954de45efe5ca71/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=d81f5ab100fce6646bfdfe309954de45efe5ca71", "patch": "@@ -505,10 +505,8 @@ impl<'a, 'tcx> TypeFolder<'tcx> for SubstFolder<'a, 'tcx> {\n         }\n     }\n \n+    #[inline]\n     fn fold_mir_const(&mut self, c: mir::ConstantKind<'tcx>) -> mir::ConstantKind<'tcx> {\n-        if !c.needs_subst() {\n-            return c;\n-        }\n         c.super_fold_with(self)\n     }\n }"}]}