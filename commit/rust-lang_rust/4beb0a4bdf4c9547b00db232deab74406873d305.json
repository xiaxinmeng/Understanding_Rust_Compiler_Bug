{"sha": "4beb0a4bdf4c9547b00db232deab74406873d305", "node_id": "C_kwDOAAsO6NoAKDRiZWIwYTRiZGY0Yzk1NDdiMDBkYjIzMmRlYWI3NDQwNjg3M2QzMDU", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2023-04-23T11:03:09Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2023-04-23T11:28:56Z"}, "message": "Merge commit 'a3ed905928a03b6e433d0b429190bf3a847128b3' into clippyup", "tree": {"sha": "bdb0757e68bd2605a83a43e3e3ba196b69630ce2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdb0757e68bd2605a83a43e3e3ba196b69630ce2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4beb0a4bdf4c9547b00db232deab74406873d305", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmRFFngACgkQHKDfKvWd\naKXYohAAnlOGx8J0kxZlPg3TkL1+HTgpp3OuC+9FcGI5JTeWUKWOV8bKEB7xiE9r\nbKBBlIBXiADzHnmBs6q+BhAfDXskSjZ+er2v/Jr1mpr/ix4tkSi7PY9l7JVEjh3C\nAEdkxfmKjXXpSPbV7+hIdXyi1sh3iColQMSxzgBxHdf10E/+ZC3DKM/hI0AcbKc+\naqTsd+Zs/Cmn3S8jeYGhcrAsJuVt7hIF0rwkv+WGoqrG+znKQxx2QCT84fooZEEU\nbOG7+TZCbSRNb/4c+g6nP5YeZ0lV9wnw6xCYfbSlOIb307JdBrS5YWEYSX4VgtJb\nfDMZv3udRkj92Qf1Kic45A6gAZREW14Jh3rdQaKwapkLQBgwDpea4tEi3eBuEYi6\ne3d/HQ/fdA9VcwdSsEof0tNX/yE4xq29wNlyLZwLwBgjoikMPgkoLDd8phMju8xQ\ntw2O0+tE9GIB4SNUQjvVljfTkBgJp7Aqd/AIOsTVypuDBLA1GYboYwkNj7KYUFsC\nuKriZvLWgZ+TgtWiuIM0a9+fd43q0qzaVz10juUCw16NABX5v3YQxwYA2fYDaxzJ\nkMV7Lp3yaMQ8mIwQE4I77/ZyRYSXWcx8W5xfdWAJdPRM+0rbhdJouZIIviA3xKtb\nYANMBN1WEY1t5DryieLqBPCRkSi3AY0H+10jbEKBA/1TucXi7/o=\n=16cl\n-----END PGP SIGNATURE-----", "payload": "tree bdb0757e68bd2605a83a43e3e3ba196b69630ce2\nparent 9de7d9169c6f2208c544a3d4a170719360cae58c\nparent a3ed905928a03b6e433d0b429190bf3a847128b3\nauthor Philipp Krones <hello@philkrones.com> 1682247789 +0200\ncommitter Philipp Krones <hello@philkrones.com> 1682249336 +0200\n\nMerge commit 'a3ed905928a03b6e433d0b429190bf3a847128b3' into clippyup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4beb0a4bdf4c9547b00db232deab74406873d305", "html_url": "https://github.com/rust-lang/rust/commit/4beb0a4bdf4c9547b00db232deab74406873d305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4beb0a4bdf4c9547b00db232deab74406873d305/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9de7d9169c6f2208c544a3d4a170719360cae58c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9de7d9169c6f2208c544a3d4a170719360cae58c", "html_url": "https://github.com/rust-lang/rust/commit/9de7d9169c6f2208c544a3d4a170719360cae58c"}, {"sha": "a3ed905928a03b6e433d0b429190bf3a847128b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ed905928a03b6e433d0b429190bf3a847128b3", "html_url": "https://github.com/rust-lang/rust/commit/a3ed905928a03b6e433d0b429190bf3a847128b3"}], "stats": {"total": 3704, "additions": 2304, "deletions": 1400}, "files": [{"sha": "d7102d2474ef48826f491380b7d610fe12cfdb91", "filename": "src/tools/clippy/CHANGELOG.md", "status": "modified", "additions": 118, "deletions": 2, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2FCHANGELOG.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -6,11 +6,126 @@ document.\n \n ## Unreleased / Beta / In Rust Nightly\n \n-[7f27e2e7...master](https://github.com/rust-lang/rust-clippy/compare/7f27e2e7...master)\n+[149392b0...master](https://github.com/rust-lang/rust-clippy/compare/149392b0...master)\n+\n+## Rust 1.69\n+\n+Current stable, released 2023-04-20\n+\n+[7f27e2e7...149392b0](https://github.com/rust-lang/rust-clippy/compare/7f27e2e7...149392b0)\n+\n+### New Lints\n+\n+* [`no_mangle_with_rust_abi`]\n+  [#10369](https://github.com/rust-lang/rust-clippy/pull/10369)\n+* [`significant_drop_tightening`]\n+  [#10163](https://github.com/rust-lang/rust-clippy/pull/10163)\n+* [`suspicious_command_arg_space`]\n+  [#10317](https://github.com/rust-lang/rust-clippy/pull/10317)\n+* [`let_underscore_untyped`]\n+  [#10356](https://github.com/rust-lang/rust-clippy/pull/10356)\n+* [`question_mark_used`]\n+  [#10342](https://github.com/rust-lang/rust-clippy/pull/10342)\n+* [`extra_unused_type_parameters`]\n+  [#10028](https://github.com/rust-lang/rust-clippy/pull/10028)\n+* [`impl_trait_in_params`]\n+  [10197](https://github.com/rust-lang/rust-clippy/pull/10197)\n+* [`transmute_int_to_non_zero`]\n+  [#10360](https://github.com/rust-lang/rust-clippy/pull/10360)\n+* [`multiple_unsafe_ops_per_block`]\n+  [#10206](https://github.com/rust-lang/rust-clippy/pull/10206)\n+\n+### Moves and Deprecations\n+\n+* Moved [`uninlined_format_args`] to `pedantic` (Now allow-by-default)\n+  [#10265](https://github.com/rust-lang/rust-clippy/pull/10265)\n+* Moved [`unchecked_duration_subtraction`] to `pedantic` (Now allow-by-default)\n+  [#10194](https://github.com/rust-lang/rust-clippy/pull/10194)\n+\n+### Enhancements\n+\n+* [`arithmetic_side_effects`]: No longer lints, if safe constant values are used.\n+  [#10310](https://github.com/rust-lang/rust-clippy/pull/10310)\n+* [`needless_lifetimes`]: Now works in local macros\n+  [#10257](https://github.com/rust-lang/rust-clippy/pull/10257)\n+* [`unused_io_amount`]: Now detects usages of `is_ok` and `is_err`\n+  [#10225](https://github.com/rust-lang/rust-clippy/pull/10225)\n+* [`missing_docs_in_private_items`]: Added new configuration `missing-docs-in-crate-items` to lint\n+  on items visible within the current crate. For example, `pub(crate)` items.\n+  [#10303](https://github.com/rust-lang/rust-clippy/pull/10303)\n+* [`almost_swapped`]: Now detects almost swaps using `let` statements\n+  [#10177](https://github.com/rust-lang/rust-clippy/pull/10177)\n+* [`wildcard_enum_match_arm`]: Now lints missing private variants, for local enums\n+  [#10250](https://github.com/rust-lang/rust-clippy/pull/10250)\n+\n+### False Positive Fixes\n+\n+* [`explicit_auto_deref`]: Now considers projections, when determining if auto deref is applicable\n+  [#10386](https://github.com/rust-lang/rust-clippy/pull/10386)\n+* [`manual_let_else`]: Now considers side effects of branches, before linting \n+  [#10336](https://github.com/rust-lang/rust-clippy/pull/10336)\n+* [`uninlined_format_args`]: No longer lints for arguments with generic parameters\n+  [#10343](https://github.com/rust-lang/rust-clippy/pull/10343)\n+* [`needless_lifetimes`]: No longer lints signatures in macros, if the lifetime is a metavariable\n+  [#10380](https://github.com/rust-lang/rust-clippy/pull/10380)\n+* [`len_without_is_empty`]: No longer lints, if `len` as a non-default signature\n+  [#10255](https://github.com/rust-lang/rust-clippy/pull/10255)\n+* [`unusual_byte_groupings`]: Relaxed the required restrictions for specific sizes, to reduce false\n+  positives\n+  [#10353](https://github.com/rust-lang/rust-clippy/pull/10353)\n+* [`manual_let_else`]: No longer lints `if-else` blocks if they can divergent\n+  [#10332](https://github.com/rust-lang/rust-clippy/pull/10332)\n+* [`expect_used`], [`unwrap_used`], [`dbg_macro`], [`print_stdout`], [`print_stderr`]: No longer lint\n+  in test functions, if `allow-expect-in-tests` is set\n+  [#10391](https://github.com/rust-lang/rust-clippy/pull/10391)\n+* [`unnecessary_safety_comment`]: No longer lints code inside macros\n+  [#10106](https://github.com/rust-lang/rust-clippy/pull/10106)\n+* [`never_loop`]: No longer lints, for statements following break statements for outer blocks.\n+  [#10311](https://github.com/rust-lang/rust-clippy/pull/10311)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`box_default`]: The suggestion now includes the type for trait objects, when needed\n+  [#10382](https://github.com/rust-lang/rust-clippy/pull/10382)\n+* [`cast_possible_truncation`]: Now suggests using `try_from` or allowing the lint\n+  [#10038](https://github.com/rust-lang/rust-clippy/pull/10038)\n+* [`invalid_regex`]: Regex errors for non-literals or regular strings containing escape sequences will\n+  now show the complete error\n+  [#10231](https://github.com/rust-lang/rust-clippy/pull/10231)\n+* [`transmutes_expressible_as_ptr_casts`]: The suggestion now works, if the base type is borrowed\n+  [#10193](https://github.com/rust-lang/rust-clippy/pull/10193)\n+* [`needless_return`]: Now removes all semicolons on the same line\n+  [#10187](https://github.com/rust-lang/rust-clippy/pull/10187)\n+* [`suspicious_to_owned`]: The suggestion now shows all options clearly\n+  [#10295](https://github.com/rust-lang/rust-clippy/pull/10295)\n+* [`bytes_nth`]: Now suggests the correct replacement based on the context\n+  [#10361](https://github.com/rust-lang/rust-clippy/pull/10361)\n+* [`bool_assert_comparison`]: The suggestion is now machine applicable\n+  [#10218](https://github.com/rust-lang/rust-clippy/pull/10218)\n+* [`cast_possible_truncation`]: Corrected the lint name in the help message\n+  [#10330](https://github.com/rust-lang/rust-clippy/pull/10330)\n+* [`needless_return`]: The suggestion now works on if sequences\n+  [#10345](https://github.com/rust-lang/rust-clippy/pull/10345)\n+* [`needless_lifetimes`]: The suggestion is now machine applicable\n+  [#10222](https://github.com/rust-lang/rust-clippy/pull/10222)\n+* [`map_entry`]: The suggestion no longer expands macros\n+  [#10346](https://github.com/rust-lang/rust-clippy/pull/10346)\n+\n+### ICE Fixes\n+\n+* [`needless_pass_by_value`]: Fixed an ICE, caused by how late bounds were handled\n+  [#10328](https://github.com/rust-lang/rust-clippy/pull/10328)\n+* [`needless_borrow`]: No longer panics on ambiguous projections\n+  [#10403](https://github.com/rust-lang/rust-clippy/pull/10403)\n+\n+### Documentation Improvements\n+\n+* All configurations are now documented in the Clippy Book\n+  [#10199](https://github.com/rust-lang/rust-clippy/pull/10199)\n \n ## Rust 1.68\n \n-Current stable, released 2023-03-09\n+Released 2023-03-09\n \n [d822110d...7f27e2e7](https://github.com/rust-lang/rust-clippy/compare/d822110d...7f27e2e7)\n \n@@ -4615,6 +4730,7 @@ Released 2018-09-13\n [`invisible_characters`]: https://rust-lang.github.io/rust-clippy/master/index.html#invisible_characters\n [`is_digit_ascii_radix`]: https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n [`items_after_statements`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements\n+[`items_after_test_module`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module\n [`iter_cloned_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_cloned_collect\n [`iter_count`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n [`iter_kv_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_kv_map"}, {"sha": "4db15ddb2835c91168f6178647ed17b48a2c01b7", "filename": "src/tools/clippy/Cargo.toml", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2FCargo.toml?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -22,13 +22,12 @@ path = \"src/driver.rs\"\n \n [dependencies]\n clippy_lints = { path = \"clippy_lints\" }\n-semver = \"1.0\"\n rustc_tools_util = \"0.3.0\"\n tempfile = { version = \"3.2\", optional = true }\n termize = \"0.1\"\n \n [dev-dependencies]\n-compiletest_rs = { version = \"0.9\", features = [\"tmp\"] }\n+compiletest_rs = { version = \"0.10\", features = [\"tmp\"] }\n tester = \"0.9\"\n regex = \"1.5\"\n toml = \"0.5\"\n@@ -49,7 +48,7 @@ if_chain = \"1.0\"\n itertools = \"0.10.1\"\n quote = \"1.0\"\n serde = { version = \"1.0.125\", features = [\"derive\"] }\n-syn = { version = \"1.0\", features = [\"full\"] }\n+syn = { version = \"2.0\", features = [\"full\"] }\n futures = \"0.3\"\n parking_lot = \"0.12\"\n tokio = { version = \"1\", features = [\"io-util\"] }"}, {"sha": "22fbdce75e8f88dff32c1443c040a6c4be359208", "filename": "src/tools/clippy/book/src/SUMMARY.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2FSUMMARY.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -13,7 +13,9 @@\n - [Development](development/README.md)\n     - [Basics](development/basics.md)\n     - [Adding Lints](development/adding_lints.md)\n+    - [Lint Passes](development/lint_passes.md)\n     - [Type Checking](development/type_checking.md)\n+    - [Macro Expansions](development/macro_expansions.md)\n     - [Common Tools](development/common_tools_writing_lints.md)\n     - [Infrastructure](development/infrastructure/README.md)\n         - [Syncing changes between Clippy and rust-lang/rust](development/infrastructure/sync.md)"}, {"sha": "8f09f66f5958696ffcd8ee9b38dcd00dcea07777", "filename": "src/tools/clippy/book/src/development/README.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2FREADME.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -13,6 +13,24 @@ If this is your first time contributing to Clippy, you should first read the\n [Basics docs](basics.md). This will explain the basics on how to get the source\n code and how to compile and test the code.\n \n+## Additional Readings for Beginners\n+\n+If a dear reader of this documentation has never taken a class on compilers\n+and interpreters, it might be confusing as to why AST level deals with only\n+the language's syntax. And some readers might not even understand what lexing,\n+parsing, and AST mean.\n+\n+This documentation serves by no means as a crash course on compilers or language design.\n+And for details specifically related to Rust, the [Rustc Development Guide][rustc_dev_guide]\n+is a far better choice to peruse.\n+\n+The [Syntax and AST][ast] chapter and the [High-Level IR][hir] chapter are\n+great introduction to the concepts mentioned in this chapter.\n+\n+Some readers might also find the [introductory chapter][map_of_territory] of\n+Robert Nystrom's _Crafting Interpreters_ a helpful overview of compiled and\n+interpreted languages before jumping back to the Rustc guide.\n+\n ## Writing code\n \n If you have done the basic setup, it's time to start hacking.\n@@ -37,6 +55,10 @@ book](../lints.md).\n > - Triage procedure\n > - Bors and Homu\n \n+[ast]: https://rustc-dev-guide.rust-lang.org/syntax-intro.html\n+[hir]: https://rustc-dev-guide.rust-lang.org/hir.html\n+[rustc_dev_guide]: https://rustc-dev-guide.rust-lang.org/\n+[map_of_territory]: https://craftinginterpreters.com/a-map-of-the-territory.html\n [clippy_rfc]: https://github.com/rust-lang/rfcs/blob/master/text/2476-clippy-uno.md\n [rfc_stability]: https://github.com/rust-lang/rfcs/blob/master/text/2476-clippy-uno.md#stability-guarantees\n [rfc_lint_cats]: https://github.com/rust-lang/rfcs/blob/master/text/2476-clippy-uno.md#lint-audit-and-categories"}, {"sha": "ccae8d3742018b0393d2f1cb561086d72695a38b", "filename": "src/tools/clippy/book/src/development/adding_lints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Fadding_lints.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -164,7 +164,7 @@ The process of generating the `.stderr` file is the same, and prepending the\n ## Rustfix tests\n \n If the lint you are working on is making use of structured suggestions, the test\n-file should include a `// run-rustfix` comment at the top. This will\n+file should include a `//@run-rustfix` comment at the top. This will\n additionally run [rustfix] for that test. Rustfix will apply the suggestions\n from the lint to the code of the test file and compare that to the contents of a\n `.fixed` file."}, {"sha": "c41b6ea0de8fe9a1f5155455e8a75928a553ee5e", "filename": "src/tools/clippy/book/src/development/lint_passes.md", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Flint_passes.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Flint_passes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Flint_passes.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -0,0 +1,114 @@\n+# Lint passes\n+\n+Before working on the logic of a new lint, there is an important decision\n+that every Clippy developer must make: to use\n+[`EarlyLintPass`][early_lint_pass] or [`LateLintPass`][late_lint_pass].\n+\n+In short, the `LateLintPass` has access to type and symbol information while the\n+`EarlyLintPass` doesn't. If you don't need access to type information, use the\n+`EarlyLintPass`.\n+\n+Let us expand on these two traits more below.\n+\n+## `EarlyLintPass`\n+\n+If you examine the documentation on [`EarlyLintPass`][early_lint_pass] closely,\n+you'll see that every method defined for this trait utilizes a\n+[`EarlyContext`][early_context]. In `EarlyContext`'s documentation, it states:\n+\n+> Context for lint checking of the AST, after expansion, before lowering to HIR.\n+\n+Voil\u00e0. `EarlyLintPass` works only on the Abstract Syntax Tree (AST) level.\n+And AST is generated during the [lexing and parsing][lexing_and_parsing] phase\n+of code compilation. Therefore, it doesn't know what a symbol means or information about types, and it should\n+be our trait choice for a new lint if the lint only deals with syntax-related issues.\n+\n+While linting speed has not been a concern for Clippy,\n+the `EarlyLintPass` is faster, and it should be your choice\n+if you know for sure a lint does not need type information.\n+\n+As a reminder, run the following command to generate boilerplate for lints\n+that use `EarlyLintPass`:\n+\n+```sh\n+$ cargo dev new_lint --name=<your_new_lint> --pass=early --category=<your_category_choice>\n+```\n+\n+### Example for `EarlyLintPass`\n+\n+Take a look at the following code:\n+\n+```rust\n+let x = OurUndefinedType;\n+x.non_existing_method();\n+```\n+\n+From the AST perspective, both lines are \"grammatically\" correct.\n+The assignment uses a `let` and ends with a semicolon. The invocation\n+of a method looks fine, too. As programmers, we might raise a few\n+questions already, but the parser is okay with it. This is what we\n+mean when we say `EarlyLintPass` deals with only syntax on the AST level.\n+\n+Alternatively, think of the `foo_functions` lint we mentioned in\n+[define new lints](define_lints.md#name-the-lint) chapter.\n+\n+We want the `foo_functions` lint to detect functions with `foo` as their name.\n+Writing a lint that only checks for the name of a function means that we only\n+work with the AST and don't have to access the type system at all (the type system is where\n+`LateLintPass` comes into the picture).\n+\n+## `LateLintPass`\n+\n+In contrast to `EarlyLintPass`, `LateLintPass` contains type information.\n+\n+If you examine the documentation on [`LateLintPass`][late_lint_pass] closely,\n+you see that every method defined in this trait utilizes a\n+[`LateContext`][late_context].\n+\n+In `LateContext`'s documentation we will find methods that\n+deal with type-checking, which do not exist in `EarlyContext`, such as:\n+\n+- [`maybe_typeck_results`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/context/struct.LateContext.html#method.maybe_typeck_results)\n+- [`typeck_results`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/context/struct.LateContext.html#method.typeck_results)\n+\n+### Example for `LateLintPass`\n+\n+Let us take a look with the following example:\n+\n+```rust\n+let x = OurUndefinedType;\n+x.non_existing_method();\n+```\n+\n+These two lines of code are syntactically correct code from the perspective\n+of the AST. We have an assignment and invoke a method on the variable that\n+is of a type. Grammatically, everything is in order for the parser.\n+\n+However, going down a level and looking at the type information,\n+the compiler will notice that both `OurUndefinedType` and `non_existing_method()`\n+**are undefined**.\n+\n+As Clippy developers, to access such type information, we must implement\n+`LateLintPass` on our lint.\n+When you browse through Clippy's lints, you will notice that almost every lint\n+is implemented in a `LateLintPass`, specifically because we often need to check\n+not only for syntactic issues but also type information.\n+\n+Another limitation of the `EarlyLintPass` is that the nodes are only identified\n+by their position in the AST. This means that you can't just get an `id` and\n+request a certain node. For most lints that is fine, but we have some lints\n+that require the inspection of other nodes, which is easier at the HIR level.\n+In these cases, `LateLintPass` is the better choice.\n+\n+As a reminder, run the following command to generate boilerplate for lints\n+that use `LateLintPass`:\n+\n+```sh\n+$ cargo dev new_lint --name=<your_new_lint> --pass=late --category=<your_category_choice>\n+```\n+\n+[early_context]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/context/struct.EarlyContext.html\n+[early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html\n+[late_context]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/context/struct.LateContext.html\n+[late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.LateLintPass.html\n+[lexing_and_parsing]: https://rustc-dev-guide.rust-lang.org/overview.html#lexing-and-parsing"}, {"sha": "c5eb000272d39e348900c5448bb2c55b6ee62e42", "filename": "src/tools/clippy/book/src/development/macro_expansions.md", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Fmacro_expansions.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Fmacro_expansions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Fmacro_expansions.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -0,0 +1,158 @@\n+# Dealing with macros and expansions\n+\n+Sometimes we might encounter Rust macro expansions while working with Clippy.\n+While macro expansions are not as dramatic and profound as the expansion\n+of our universe, they can certainly bring chaos to the orderly world\n+of code and logic.\n+\n+The general rule of thumb is that we should ignore code with macro\n+expansions when working with Clippy because the code can be dynamic\n+in ways that are difficult or impossible for us to foresee.\n+\n+## False Positives\n+\n+What exactly do we mean by _dynamic in ways that are difficult to foresee_?\n+\n+Macros are [expanded][expansion] in the `EarlyLintPass` level,\n+so the Abstract Syntax Tree (AST) is generated in place of macros.\n+This means the code which we work with in Clippy is already expanded.\n+\n+If we wrote a new lint, there is a possibility that the lint is\n+triggered in macro-generated code. Since this expanded macro code\n+is not written by the macro's user but really by the macro's author,\n+the user cannot and should not be responsible for fixing the issue\n+that triggers the lint.\n+\n+Besides, a [Span] in a macro can be changed by the macro author.\n+Therefore, any lint check related to lines or columns should be\n+avoided since they might be changed at any time and become unreliable\n+or incorrect information.\n+\n+Because of these unforeseeable or unstable behaviors, macro expansion\n+should often not be regarded as a part of the stable API.\n+This is also why most lints check if they are inside a macro or not\n+before emitting suggestions to the end user to avoid false positives.\n+\n+## How to Work with Macros\n+\n+Several functions are available for working with macros.\n+\n+### The `Span.from_expansion` method\n+\n+We could utilize a `span`'s [`from_expansion`] method, which\n+detects if the `span` is from a macro expansion / desugaring.\n+This is a very common first step in a lint:\n+\n+```rust\n+if expr.span.from_expansion() {\n+    // We most likely want to ignore it.\n+    return;\n+}\n+```\n+\n+### `Span.ctxt` method\n+\n+The `span`'s context, given by the method [`ctxt`] and returning [SpanContext],\n+represents if the span is from a macro expansion and, if it is, which\n+macro call expanded this span.\n+\n+Sometimes, it is useful to check if the context of two spans are equal.\n+For instance, suppose we have the following line of code that would\n+expand into `1 + 0`:\n+\n+```rust\n+// The following code expands to `1 + 0` for both `EarlyLintPass` and `LateLintPass`\n+1 + mac!()\n+```\n+\n+Assuming that we'd collect the `1` expression as a variable `left` and the\n+`0`/`mac!()` expression as a variable `right`, we can simply compare their\n+contexts. If the context is different, then we most likely are dealing with a\n+macro expansion and should just ignore it:\n+\n+```rust\n+if left.span.ctxt() != right.span.ctxt() {\n+    // The code author most likely cannot modify this expression\n+    return;\n+}\n+```\n+\n+> **Note**: Code that is not from expansion is in the \"root\" context.\n+> So any spans whose `from_expansion` returns `false` can be assumed\n+> to have the same context. Because of this, using `span.from_expansion()`\n+> is often sufficient.\n+\n+Going a bit deeper, in a simple expression such as `a == b`,\n+`a` and `b` have the same context.\n+However, in a `macro_rules!` with `a == $b`, `$b` is expanded to\n+an expression that contains a different context from `a`.\n+\n+Take a look at the following macro `m`:\n+\n+```rust\n+macro_rules! m {\n+    ($a:expr, $b:expr) => {\n+        if $a.is_some() {\n+            $b;\n+        }\n+    }\n+}\n+\n+let x: Option<u32> = Some(42);\n+m!(x, x.unwrap());\n+```\n+\n+If the `m!(x, x.unwrapp());` line is expanded, we would get two expanded\n+expressions:\n+\n+- `x.is_some()` (from the `$a.is_some()` line in the `m` macro)\n+- `x.unwrap()` (corresponding to `$b` in the `m` macro)\n+\n+Suppose `x.is_some()` expression's span is associated with the `x_is_some_span` variable\n+and `x.unwrap()` expression's span is associated with `x_unwrap_span` variable,\n+we could assume that these two spans do not share the same context:\n+\n+```rust\n+// x.is_some() is from inside the macro\n+// x.unwrap() is from outside the macro\n+assert_ne!(x_is_some_span.ctxt(), x_unwrap_span.ctxt());\n+```\n+\n+### The `in_external_macro` function\n+\n+`rustc_middle::lint` provides a function ([`in_external_macro`]) that can\n+detect if the given span is from a macro defined in a foreign crate.\n+\n+Therefore, if we really want a new lint to work with macro-generated code,\n+this is the next line of defense to avoid macros not defined inside\n+the current crate since it is unfair to the user if Clippy lints code\n+which the user cannot change.\n+\n+For example, assume we have the following code that is being examined\n+by Clippy:\n+\n+```rust\n+#[macro_use]\n+extern crate a_foreign_crate_with_macros;\n+\n+// `foo` macro is defined in `a_foreign_crate_with_macros`\n+foo!(\"bar\");\n+```\n+\n+Also assume that we get the corresponding variable `foo_span` for the\n+`foo` macro call, we could decide not to lint if `in_external_macro`\n+results in `true` (note that `cx` can be `EarlyContext` or `LateContext`):\n+\n+```rust\n+if in_external_macro(cx.sess(), foo_span) {\n+    // We should ignore macro from a foreign crate.\n+    return;\n+}\n+```\n+\n+[`ctxt`]: https://doc.rust-lang.org/stable/nightly-rustc/rustc_span/struct.Span.html#method.ctxt\n+[expansion]: https://rustc-dev-guide.rust-lang.org/macro-expansion.html#expansion-and-ast-integration\n+[`from_expansion`]: https://doc.rust-lang.org/stable/nightly-rustc/rustc_span/struct.Span.html#method.from_expansion\n+[`in_external_macro`]: https://doc.rust-lang.org/stable/nightly-rustc/rustc_middle/lint/fn.in_external_macro.html\n+[Span]: https://doc.rust-lang.org/stable/nightly-rustc/rustc_span/struct.Span.html\n+[SpanContext]: https://doc.rust-lang.org/stable/nightly-rustc/rustc_span/hygiene/struct.SyntaxContext.html"}, {"sha": "225de8495662566bb128c8d8d86ac738a0c873b6", "filename": "src/tools/clippy/book/src/development/type_checking.md", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Ftype_checking.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Ftype_checking.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Fdevelopment%2Ftype_checking.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -51,7 +51,7 @@ impl LateLintPass<'_> for MyStructLint {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n         // Get type of `expr`\n         let ty = cx.typeck_results().expr_ty(expr);\n-        \n+\n         // Check if the `Ty` of this expression is of character type\n         if ty.is_char() {\n             println!(\"Our expression is a char!\");\n@@ -70,18 +70,18 @@ pub fn is_char(self) -> bool {\n }\n ```\n \n-Indeed, we just discovered `Ty`'s [`kind` method][kind], which provides us\n+Indeed, we just discovered `Ty`'s [`kind()` method][kind], which provides us\n with [`TyKind`][TyKind] of a `Ty`.\n \n ## `TyKind`\n \n `TyKind` defines the kinds of types in Rust's type system.\n Peeking into [`TyKind` documentation][TyKind], we will see that it is an\n-enum of 27 variants, including items such as `Bool`, `Int`, `Ref`, etc.\n+enum of over 25 variants, including items such as `Bool`, `Int`, `Ref`, etc.\n \n ### `kind` Usage\n \n-The `TyKind` of `Ty` can be returned by calling [`Ty.kind` method][kind].\n+The `TyKind` of `Ty` can be returned by calling [`Ty.kind()` method][kind].\n We often use this method to perform pattern matching in Clippy.\n \n For instance, if we want to check for a `struct`, we could examine if the\n@@ -107,15 +107,21 @@ impl LateLintPass<'_> for MyStructLint {\n We've been talking about [`ty::Ty`][middle_ty] this whole time without addressing [`hir::Ty`][hir_ty], but the latter\n is also important to understand.\n \n-`hir::Ty` would represent *what* an user wrote, while `ty::Ty` would understand the meaning of it (because it has more\n-information).\n+`hir::Ty` would represent *what* the user wrote, while `ty::Ty` is how the compiler sees the type and has more\n+information. Example:\n \n-**Example: `fn foo(x: u32) -> u32 { x }`**\n+```rust\n+fn foo(x: u32) -> u32 { x }\n+```\n \n Here the HIR sees the types without \"thinking\" about them, it knows that the function takes an `u32` and returns\n-an `u32`. But at the `ty::Ty` level the compiler understands that they're the same type, in-depth lifetimes, etc...\n+an `u32`. As far as `hir::Ty` is concerned those might be different types. But at the `ty::Ty` level the compiler\n+understands that they're the same type, in-depth lifetimes, etc...\n+\n+To get from a `hir::Ty` to a `ty::Ty`, you can use the [`hir_ty_to_ty`][hir_ty_to_ty] function outside of bodies or\n+outside of bodies the [`TypeckResults::node_type()`][node_type] method.\n \n-you can use the [`hir_ty_to_ty`][hir_ty_to_ty] function to convert from a `hir::Ty` to a `ty::Ty`\n+> **Warning**: Don't use `hir_ty_to_ty` inside of bodies, because this can cause ICEs.\n \n ## Useful Links\n \n@@ -130,6 +136,7 @@ in this chapter:\n [Adt]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/enum.TyKind.html#variant.Adt\n [AdtDef]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/adt/struct.AdtDef.html\n [expr_ty]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TypeckResults.html#method.expr_ty\n+[node_type]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TypeckResults.html#method.node_type\n [is_char]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.Ty.html#method.is_char\n [is_char_source]: https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_middle/ty/sty.rs.html#1831-1834\n [kind]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.Ty.html#method.kind"}, {"sha": "a702226e86103fcc1d28dec1fe72bc5af4aa02f3", "filename": "src/tools/clippy/book/src/lint_configuration.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Flint_configuration.md", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Flint_configuration.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fbook%2Fsrc%2Flint_configuration.md?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -55,6 +55,7 @@ Please use that command to update the file and do not edit it by hand.\n | [suppress-restriction-lint-in-const](#suppress-restriction-lint-in-const) | `false` |\n | [missing-docs-in-crate-items](#missing-docs-in-crate-items) | `false` |\n | [future-size-threshold](#future-size-threshold) | `16384` |\n+| [unnecessary-box-size](#unnecessary-box-size) | `128` |\n \n ### arithmetic-side-effects-allowed\n Suppress checking of the passed type names in all types of operations.\n@@ -561,4 +562,12 @@ The maximum byte size a `Future` can have, before it triggers the `clippy::large\n * [large_futures](https://rust-lang.github.io/rust-clippy/master/index.html#large_futures)\n \n \n+### unnecessary-box-size\n+The byte size a `T` in `Box<T>` can have, below which it triggers the `clippy::unnecessary_box` lint\n+\n+**Default Value:** `128` (`u64`)\n+\n+* [unnecessary_box_returns](https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_box_returns)\n+\n+\n "}, {"sha": "dd90a38f7572d41a893cf127a25c4fab0c113fd4", "filename": "src/tools/clippy/clippy_dev/src/update_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fupdate_lints.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -741,7 +741,7 @@ fn gen_deprecated_lints_test(lints: &[DeprecatedLint]) -> String {\n fn gen_renamed_lints_test(lints: &[RenamedLint]) -> String {\n     let mut seen_lints = HashSet::new();\n     let mut res: String = GENERATED_FILE_COMMENT.into();\n-    res.push_str(\"// run-rustfix\\n\\n\");\n+    res.push_str(\"//@run-rustfix\\n\\n\");\n     for lint in lints {\n         if seen_lints.insert(&lint.new_name) {\n             writeln!(res, \"#![allow({})]\", lint.new_name).unwrap();"}, {"sha": "b984132acf5bb88838edadf4fd7eeaae24f42741", "filename": "src/tools/clippy/clippy_lints/src/allow_attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fallow_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fallow_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fallow_attributes.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -6,7 +6,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n-    /// Detects uses of the `#[allow]` attribute and suggests replacing it with\n+    /// Checks for usage of the `#[allow]` attribute and suggests replacing it with\n     /// the `#[expect]` (See [RFC 2383](https://rust-lang.github.io/rfcs/2383-lint-reasons.html))\n     ///\n     /// The expect attribute is still unstable and requires the `lint_reasons`"}, {"sha": "d74bd57fe45eb905af24c5bee42ec6aab65a9710", "filename": "src/tools/clippy/clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -506,7 +506,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for uses of the `abs()` method that cast the result to unsigned.\n+    /// Checks for usage of the `abs()` method that cast the result to unsigned.\n     ///\n     /// ### Why is this bad?\n     /// The `unsigned_abs()` method avoids panic when called on the MIN value.\n@@ -625,14 +625,14 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust\n-    /// let string = String::with_capacity(1);\n-    /// let ptr = string.as_ptr() as *mut u8;\n+    /// let mut vec = Vec::<u8>::with_capacity(1);\n+    /// let ptr = vec.as_ptr() as *mut u8;\n     /// unsafe { ptr.write(4) }; // UNDEFINED BEHAVIOUR\n     /// ```\n     /// Use instead:\n     /// ```rust\n-    /// let mut string = String::with_capacity(1);\n-    /// let ptr = string.as_mut_ptr();\n+    /// let mut vec = Vec::<u8>::with_capacity(1);\n+    /// let ptr = vec.as_mut_ptr();\n     /// unsafe { ptr.write(4) };\n     /// ```\n     #[clippy::version = \"1.66.0\"]"}, {"sha": "7436e9ce811b1f02d3d27bd87a1c7c8bb5650970", "filename": "src/tools/clippy/clippy_lints/src/crate_in_macro_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcrate_in_macro_def.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -9,7 +9,7 @@ use rustc_span::{symbol::sym, Span};\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `crate` as opposed to `$crate` in a macro definition.\n+    /// Checks for usage of `crate` as opposed to `$crate` in a macro definition.\n     ///\n     /// ### Why is this bad?\n     /// `crate` refers to the macro call's crate, whereas `$crate` refers to the macro definition's"}, {"sha": "0c66d36a1d630b2aa0cc6f6a7c95c939255e3b25", "filename": "src/tools/clippy/clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -215,6 +215,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS_INFO,\n     crate::invalid_utf8_in_unchecked::INVALID_UTF8_IN_UNCHECKED_INFO,\n     crate::items_after_statements::ITEMS_AFTER_STATEMENTS_INFO,\n+    crate::items_after_test_module::ITEMS_AFTER_TEST_MODULE_INFO,\n     crate::iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR_INFO,\n     crate::large_const_arrays::LARGE_CONST_ARRAYS_INFO,\n     crate::large_enum_variant::LARGE_ENUM_VARIANT_INFO,"}, {"sha": "ee5a875ade7b539047be7354236a7a5bd3b70e2d", "filename": "src/tools/clippy/clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fentry.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -19,7 +19,7 @@ use rustc_span::{Span, SyntaxContext, DUMMY_SP};\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for uses of `contains_key` + `insert` on `HashMap`\n+    /// Checks for usage of `contains_key` + `insert` on `HashMap`\n     /// or `BTreeMap`.\n     ///\n     /// ### Why is this bad?"}, {"sha": "faac63404199c65ca7dbc6ea7f82b53c01022243", "filename": "src/tools/clippy/clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fenum_variants.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,6 +1,6 @@\n //! lint on enum variants that are prefixed or suffixed by the same characters\n \n-use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n+use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_hir};\n use clippy_utils::source::is_present_in_source;\n use clippy_utils::str_utils::{camel_case_split, count_match_end, count_match_start};\n use rustc_hir::{EnumDef, Item, ItemKind, Variant};\n@@ -135,9 +135,10 @@ fn check_enum_start(cx: &LateContext<'_>, item_name: &str, variant: &Variant<'_>\n         && name.chars().nth(item_name_chars).map_or(false, |c| !c.is_lowercase())\n         && name.chars().nth(item_name_chars + 1).map_or(false, |c| !c.is_numeric())\n     {\n-        span_lint(\n+        span_lint_hir(\n             cx,\n             ENUM_VARIANT_NAMES,\n+            variant.hir_id,\n             variant.span,\n             \"variant name starts with the enum's name\",\n         );\n@@ -149,9 +150,10 @@ fn check_enum_end(cx: &LateContext<'_>, item_name: &str, variant: &Variant<'_>)\n     let item_name_chars = item_name.chars().count();\n \n     if count_match_end(item_name, name).char_count == item_name_chars {\n-        span_lint(\n+        span_lint_hir(\n             cx,\n             ENUM_VARIANT_NAMES,\n+            variant.hir_id,\n             variant.span,\n             \"variant name ends with the enum's name\",\n         );"}, {"sha": "3ddee1842a30cabfa85c7b7e9c32bdfaee895d53", "filename": "src/tools/clippy/clippy_lints/src/format_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fformat_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fformat_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fformat_impl.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -51,7 +51,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `println`, `print`, `eprintln` or `eprint` in an\n+    /// Checks for usage of `println`, `print`, `eprintln` or `eprint` in an\n     /// implementation of a formatting trait.\n     ///\n     /// ### Why is this bad?"}, {"sha": "4762b354392b8f227a787110776c56017b5fc9e7", "filename": "src/tools/clippy/clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fformatting.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -10,7 +10,7 @@ use rustc_span::source_map::Span;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of the non-existent `=*`, `=!` and `=-`\n+    /// Checks for usage of the non-existent `=*`, `=!` and `=-`\n     /// operators.\n     ///\n     /// ### Why is this bad?"}, {"sha": "ac2d253fe8340007880cc53a1cc283994ddf3c72", "filename": "src/tools/clippy/clippy_lints/src/functions/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffunctions%2Fmod.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -348,7 +348,7 @@ declare_clippy_lint! {\n     /// \t// [...]\n     /// }\n     /// ```\n-    #[clippy::version = \"1.68.0\"]\n+    #[clippy::version = \"1.69.0\"]\n     pub IMPL_TRAIT_IN_PARAMS,\n     restriction,\n     \"`impl Trait` is used in the function's parameters\""}, {"sha": "52d716feea02fbe57a72ef3ea3e106dbc20fcbe6", "filename": "src/tools/clippy/clippy_lints/src/items_after_test_module.rs", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fitems_after_test_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fitems_after_test_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fitems_after_test_module.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -0,0 +1,83 @@\n+use clippy_utils::{diagnostics::span_lint_and_help, is_in_cfg_test};\n+use rustc_hir::{HirId, ItemId, ItemKind, Mod};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::{sym, Span};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Triggers if an item is declared after the testing module marked with `#[cfg(test)]`.\n+    /// ### Why is this bad?\n+    /// Having items declared after the testing module is confusing and may lead to bad test coverage.\n+    /// ### Example\n+    /// ```rust\n+    /// #[cfg(test)]\n+    /// mod tests {\n+    ///     // [...]\n+    /// }\n+    ///\n+    /// fn my_function() {\n+    ///     // [...]\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// fn my_function() {\n+    ///     // [...]\n+    /// }\n+    ///\n+    /// #[cfg(test)]\n+    /// mod tests {\n+    ///     // [...]\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.70.0\"]\n+    pub ITEMS_AFTER_TEST_MODULE,\n+    style,\n+    \"An item was found after the testing module `tests`\"\n+}\n+\n+declare_lint_pass!(ItemsAfterTestModule => [ITEMS_AFTER_TEST_MODULE]);\n+\n+impl LateLintPass<'_> for ItemsAfterTestModule {\n+    fn check_mod(&mut self, cx: &LateContext<'_>, _: &Mod<'_>, _: HirId) {\n+        let mut was_test_mod_visited = false;\n+        let mut test_mod_span: Option<Span> = None;\n+\n+        let hir = cx.tcx.hir();\n+        let items = hir.items().collect::<Vec<ItemId>>();\n+\n+        for (i, itid) in items.iter().enumerate() {\n+            let item = hir.item(*itid);\n+\n+            if_chain! {\n+            if was_test_mod_visited;\n+            if i == (items.len() - 3 /* Weird magic number (HIR-translation behaviour) */);\n+            if cx.sess().source_map().lookup_char_pos(item.span.lo()).file.name_hash\n+            == cx.sess().source_map().lookup_char_pos(test_mod_span.unwrap().lo()).file.name_hash; // Will never fail\n+            if !matches!(item.kind, ItemKind::Mod(_));\n+            if !is_in_cfg_test(cx.tcx, itid.hir_id()); // The item isn't in the testing module itself\n+            if !in_external_macro(cx.sess(), item.span);\n+\n+            then {\n+                span_lint_and_help(cx, ITEMS_AFTER_TEST_MODULE, test_mod_span.unwrap().with_hi(item.span.hi()), \"items were found after the testing module\", None, \"move the items to before the testing module was defined\");\n+            }};\n+\n+            if matches!(item.kind, ItemKind::Mod(_)) {\n+                for attr in cx.tcx.get_attrs(item.owner_id.to_def_id(), sym::cfg) {\n+                    if_chain! {\n+                        if attr.has_name(sym::cfg);\n+                        if let Some(mitems) = attr.meta_item_list();\n+                        if let [mitem] = &*mitems;\n+                        if mitem.has_name(sym::test);\n+                        then {\n+                            was_test_mod_visited = true;\n+                            test_mod_span = Some(item.span);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "fec9c6f626c60cf89568866b896dd4f823efddbb", "filename": "src/tools/clippy/clippy_lints/src/len_zero.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flen_zero.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -168,25 +168,27 @@ impl<'tcx> LateLintPass<'tcx> for LenZero {\n         }\n \n         if let ExprKind::Binary(Spanned { node: cmp, .. }, left, right) = expr.kind {\n+            // expr.span might contains parenthesis, see issue #10529\n+            let actual_span = left.span.with_hi(right.span.hi());\n             match cmp {\n                 BinOpKind::Eq => {\n-                    check_cmp(cx, expr.span, left, right, \"\", 0); // len == 0\n-                    check_cmp(cx, expr.span, right, left, \"\", 0); // 0 == len\n+                    check_cmp(cx, actual_span, left, right, \"\", 0); // len == 0\n+                    check_cmp(cx, actual_span, right, left, \"\", 0); // 0 == len\n                 },\n                 BinOpKind::Ne => {\n-                    check_cmp(cx, expr.span, left, right, \"!\", 0); // len != 0\n-                    check_cmp(cx, expr.span, right, left, \"!\", 0); // 0 != len\n+                    check_cmp(cx, actual_span, left, right, \"!\", 0); // len != 0\n+                    check_cmp(cx, actual_span, right, left, \"!\", 0); // 0 != len\n                 },\n                 BinOpKind::Gt => {\n-                    check_cmp(cx, expr.span, left, right, \"!\", 0); // len > 0\n-                    check_cmp(cx, expr.span, right, left, \"\", 1); // 1 > len\n+                    check_cmp(cx, actual_span, left, right, \"!\", 0); // len > 0\n+                    check_cmp(cx, actual_span, right, left, \"\", 1); // 1 > len\n                 },\n                 BinOpKind::Lt => {\n-                    check_cmp(cx, expr.span, left, right, \"\", 1); // len < 1\n-                    check_cmp(cx, expr.span, right, left, \"!\", 0); // 0 < len\n+                    check_cmp(cx, actual_span, left, right, \"\", 1); // len < 1\n+                    check_cmp(cx, actual_span, right, left, \"!\", 0); // 0 < len\n                 },\n-                BinOpKind::Ge => check_cmp(cx, expr.span, left, right, \"!\", 1), // len >= 1\n-                BinOpKind::Le => check_cmp(cx, expr.span, right, left, \"!\", 1), // 1 <= len\n+                BinOpKind::Ge => check_cmp(cx, actual_span, left, right, \"!\", 1), // len >= 1\n+                BinOpKind::Le => check_cmp(cx, actual_span, right, left, \"!\", 1), // 1 <= len\n                 _ => (),\n             }\n         }"}, {"sha": "637b7de920e7902678c51556b170990caa34c4dd", "filename": "src/tools/clippy/clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flet_underscore.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::{implements_trait, is_must_use_ty, match_type};\n use clippy_utils::{is_must_use_func_call, paths};\n-use rustc_hir::{Local, PatKind};\n+use rustc_hir::{ExprKind, Local, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n@@ -189,7 +189,18 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n \n             if local.pat.default_binding_modes && local.ty.is_none() {\n                 // When `default_binding_modes` is true, the `let` keyword is present.\n-                span_lint_and_help(\n+\n+\t\t\t\t// Ignore function calls that return impl traits...\n+\t\t\t\tif let Some(init) = local.init &&\n+\t\t\t\tmatches!(init.kind, ExprKind::Call(_, _) | ExprKind::MethodCall(_, _, _, _)) {\n+\t\t\t\t\tlet expr_ty = cx.typeck_results().expr_ty(init);\n+\t\t\t\t\tif expr_ty.is_impl_trait() {\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\n+\t\t\t\tspan_lint_and_help(\n                     cx,\n                     LET_UNDERSCORE_UNTYPED,\n                     local.span,"}, {"sha": "573ffe349ec23e227696c3ed42745789fdf46785", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -158,6 +158,7 @@ mod int_plus_one;\n mod invalid_upcast_comparisons;\n mod invalid_utf8_in_unchecked;\n mod items_after_statements;\n+mod items_after_test_module;\n mod iter_not_returning_iterator;\n mod large_const_arrays;\n mod large_enum_variant;\n@@ -950,15 +951,18 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(allow_attributes::AllowAttribute));\n     store.register_late_pass(move |_| Box::new(manual_main_separator_str::ManualMainSeparatorStr::new(msrv())));\n     store.register_late_pass(|_| Box::new(unnecessary_struct_initialization::UnnecessaryStruct));\n+    let unnecessary_box_size = conf.unnecessary_box_size;\n     store.register_late_pass(move |_| {\n         Box::new(unnecessary_box_returns::UnnecessaryBoxReturns::new(\n             avoid_breaking_exported_api,\n+            unnecessary_box_size,\n         ))\n     });\n     store.register_late_pass(|_| Box::new(lines_filter_map_ok::LinesFilterMapOk));\n     store.register_late_pass(|_| Box::new(tests_outside_test_module::TestsOutsideTestModule));\n     store.register_late_pass(|_| Box::new(manual_slice_size_calculation::ManualSliceSizeCalculation));\n     store.register_early_pass(|| Box::new(suspicious_doc_comments::SuspiciousDocComments));\n+    store.register_late_pass(|_| Box::new(items_after_test_module::ItemsAfterTestModule));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "bba9bb445a77156e01f572ad005d686b700147db", "filename": "src/tools/clippy/clippy_lints/src/lines_filter_map_ok.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flines_filter_map_ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flines_filter_map_ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flines_filter_map_ok.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -10,7 +10,7 @@ use rustc_span::sym;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Detect uses of `lines.filter_map(Result::ok)` or `lines.flat_map(Result::ok)`\n+    /// Checks for usage of `lines.filter_map(Result::ok)` or `lines.flat_map(Result::ok)`\n     /// when `lines` has type `std::io::Lines`.\n     ///\n     /// ### Why is this bad?"}, {"sha": "4629b22d1717f66d0d860daea92da88844ac3478", "filename": "src/tools/clippy/clippy_lints/src/manual_bits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_bits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_bits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_bits.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -13,7 +13,7 @@ use rustc_span::sym;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for uses of `std::mem::size_of::<T>() * 8` when\n+    /// Checks for usage of `std::mem::size_of::<T>() * 8` when\n     /// `T::BITS` is available.\n     ///\n     /// ### Why is this bad?"}, {"sha": "703a6b25840b1a151cf716d26254d651ad59e1ae", "filename": "src/tools/clippy/clippy_lints/src/manual_slice_size_calculation.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,7 @@\n-use clippy_utils::diagnostics::span_lint_and_help;\n-use clippy_utils::{expr_or_init, in_constant};\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::source::snippet_with_context;\n+use clippy_utils::{expr_or_init, in_constant, std_or_core};\n+use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n@@ -38,19 +40,27 @@ declare_lint_pass!(ManualSliceSizeCalculation => [MANUAL_SLICE_SIZE_CALCULATION]\n \n impl<'tcx> LateLintPass<'tcx> for ManualSliceSizeCalculation {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n-        // Does not apply inside const because size_of_value is not cost in stable.\n+        // Does not apply inside const because size_of_val is not cost in stable.\n         if !in_constant(cx, expr.hir_id)\n             && let ExprKind::Binary(ref op, left, right) = expr.kind\n             && BinOpKind::Mul == op.node\n-            && let Some(_receiver) = simplify(cx, left, right)\n+            && !expr.span.from_expansion()\n+            && let Some(receiver) = simplify(cx, left, right)\n         {\n-            span_lint_and_help(\n+            let ctxt = expr.span.ctxt();\n+            let mut app = Applicability::MachineApplicable;\n+            let val_name = snippet_with_context(cx, receiver.span, ctxt, \"slice\", &mut app).0;\n+            let Some(sugg) = std_or_core(cx) else { return };\n+\n+            span_lint_and_sugg(\n                 cx,\n                 MANUAL_SLICE_SIZE_CALCULATION,\n                 expr.span,\n                 \"manual slice size calculation\",\n-                None,\n-                \"consider using std::mem::size_of_value instead\");\n+                \"try\",\n+                format!(\"{sugg}::mem::size_of_val({val_name})\"),\n+                app,\n+            );\n         }\n     }\n }\n@@ -71,9 +81,9 @@ fn simplify_half<'tcx>(\n     expr1: &'tcx Expr<'tcx>,\n     expr2: &'tcx Expr<'tcx>,\n ) -> Option<&'tcx Expr<'tcx>> {\n-    if\n+    if !expr1.span.from_expansion()\n         // expr1 is `[T1].len()`?\n-        let ExprKind::MethodCall(method_path, receiver, _, _) = expr1.kind\n+        && let ExprKind::MethodCall(method_path, receiver, _, _) = expr1.kind\n         && method_path.ident.name == sym::len\n         && let receiver_ty = cx.typeck_results().expr_ty(receiver)\n         && let ty::Slice(ty1) = receiver_ty.peel_refs().kind()"}, {"sha": "87b63eead253e474f443642e144be5e2a6c9785a", "filename": "src/tools/clippy/clippy_lints/src/matches/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fmod.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -843,7 +843,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `Err(x)?`.\n+    /// Checks for usage of `Err(x)?`.\n     ///\n     /// ### Why is this bad?\n     /// The `?` operator is designed to allow calls that\n@@ -878,7 +878,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `match` which could be implemented using `map`\n+    /// Checks for usage of `match` which could be implemented using `map`\n     ///\n     /// ### Why is this bad?\n     /// Using the `map` method is clearer and more concise.\n@@ -902,7 +902,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `match` which could be implemented using `filter`\n+    /// Checks for usage of `match` which could be implemented using `filter`\n     ///\n     /// ### Why is this bad?\n     /// Using the `filter` method is clearer and more concise."}, {"sha": "9cafbc2e5f5a6d048c2672e98ee8e868ed4257a8", "filename": "src/tools/clippy/clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -121,7 +121,7 @@ use rustc_span::{sym, Span};\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `cloned()` on an `Iterator` or `Option` where\n+    /// Checks for usage of `cloned()` on an `Iterator` or `Option` where\n     /// `copied()` could be used instead.\n     ///\n     /// ### Why is this bad?\n@@ -201,7 +201,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `Iterator::flat_map()` where `filter_map()` could be\n+    /// Checks for usage of `Iterator::flat_map()` where `filter_map()` could be\n     /// used instead.\n     ///\n     /// ### Why is this bad?\n@@ -441,7 +441,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `_.unwrap_or_else(Default::default)` on `Option` and\n+    /// Checks for usage of `_.unwrap_or_else(Default::default)` on `Option` and\n     /// `Result` values.\n     ///\n     /// ### Why is this bad?\n@@ -1194,7 +1194,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `.iter().nth()` (and the related\n+    /// Checks for usage of `.iter().nth()` (and the related\n     /// `.iter_mut().nth()`) on standard library types with *O*(1) element access.\n     ///\n     /// ### Why is this bad?\n@@ -1221,7 +1221,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `.skip(x).next()` on iterators.\n+    /// Checks for usage of `.skip(x).next()` on iterators.\n     ///\n     /// ### Why is this bad?\n     /// `.nth(x)` is cleaner\n@@ -1246,7 +1246,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `.drain(..)` on `Vec` and `VecDeque` for iteration.\n+    /// Checks for usage of `.drain(..)` on `Vec` and `VecDeque` for iteration.\n     ///\n     /// ### Why is this bad?\n     /// `.into_iter()` is simpler with better performance.\n@@ -1271,7 +1271,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for using `x.get(x.len() - 1)` instead of\n+    /// Checks for usage of `x.get(x.len() - 1)` instead of\n     /// `x.last()`.\n     ///\n     /// ### Why is this bad?\n@@ -1304,7 +1304,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `.get().unwrap()` (or\n+    /// Checks for usage of `.get().unwrap()` (or\n     /// `.get_mut().unwrap`) on a standard library type which implements `Index`\n     ///\n     /// ### Why is this bad?\n@@ -1475,7 +1475,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for using `fold` when a more succinct alternative exists.\n+    /// Checks for usage of `fold` when a more succinct alternative exists.\n     /// Specifically, this checks for `fold`s which could be replaced by `any`, `all`,\n     /// `sum` or `product`.\n     ///\n@@ -2161,7 +2161,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `str::splitn(2, _)`\n+    /// Checks for usage of `str::splitn(2, _)`\n     ///\n     /// ### Why is this bad?\n     /// `split_once` is both clearer in intent and slightly more efficient.\n@@ -2197,7 +2197,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `str::splitn` (or `str::rsplitn`) where using `str::split` would be the same.\n+    /// Checks for usage of `str::splitn` (or `str::rsplitn`) where using `str::split` would be the same.\n     /// ### Why is this bad?\n     /// The function `split` is simpler and there is no performance difference in these cases, considering\n     /// that both functions return a lazy iterator.\n@@ -2251,7 +2251,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `.collect::<Vec<String>>().join(\"\")` on iterators.\n+    /// Checks for usage of `.collect::<Vec<String>>().join(\"\")` on iterators.\n     ///\n     /// ### Why is this bad?\n     /// `.collect::<String>()` is more concise and might be more performant\n@@ -2377,7 +2377,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `.then_some(..).unwrap_or(..)`\n+    /// Checks for usage of `.then_some(..).unwrap_or(..)`\n     ///\n     /// ### Why is this bad?\n     /// This can be written more clearly with `if .. else ..`\n@@ -2553,7 +2553,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for using `x.get(0)` instead of\n+    /// Checks for usage of `x.get(0)` instead of\n     /// `x.first()`.\n     ///\n     /// ### Why is this bad?\n@@ -2957,7 +2957,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Detects uses of `Vec::sort_by` passing in a closure\n+    /// Checks for usage of `Vec::sort_by` passing in a closure\n     /// which compares the two arguments, either directly or indirectly.\n     ///\n     /// ### Why is this bad?\n@@ -3013,7 +3013,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of File::read_to_end and File::read_to_string.\n+    /// Checks for usage of File::read_to_end and File::read_to_string.\n     ///\n     /// ### Why is this bad?\n     /// `fs::{read, read_to_string}` provide the same functionality when `buf` is empty with fewer imports and no intermediate values.\n@@ -3185,7 +3185,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// std::process::Command::new(\"echo\").args([\"-n\", \"hello\"]).spawn().unwrap();\n     /// ```\n-    #[clippy::version = \"1.67.0\"]\n+    #[clippy::version = \"1.69.0\"]\n     pub SUSPICIOUS_COMMAND_ARG_SPACE,\n     suspicious,\n     \"single command line argument that looks like it should be multiple arguments\""}, {"sha": "eada530d670da7dfb3c710bd1a7594ea7bec15ba", "filename": "src/tools/clippy/clippy_lints/src/methods/obfuscated_if_else.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fobfuscated_if_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fobfuscated_if_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fobfuscated_if_else.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,3 @@\n-// run-rustfix\n-\n use super::OBFUSCATED_IF_ELSE;\n use clippy_utils::{diagnostics::span_lint_and_sugg, source::snippet_with_applicability};\n use rustc_errors::Applicability;"}, {"sha": "2abdfacd27634297b81caf66da2d10a80cb5bad2", "filename": "src/tools/clippy/clippy_lints/src/multiple_unsafe_ops_per_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmultiple_unsafe_ops_per_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmultiple_unsafe_ops_per_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmultiple_unsafe_ops_per_block.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -59,7 +59,7 @@ declare_clippy_lint! {\n     ///     unsafe { char::from_u32_unchecked(int_value) }\n     /// }\n     /// ```\n-    #[clippy::version = \"1.68.0\"]\n+    #[clippy::version = \"1.69.0\"]\n     pub MULTIPLE_UNSAFE_OPS_PER_BLOCK,\n     restriction,\n     \"more than one unsafe operation per `unsafe` block\""}, {"sha": "99394b9e5fba704df503c02bcc0c38ec3ba64d23", "filename": "src/tools/clippy/clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-//! Checks for uses of mutex where an atomic value could be used\n+//! Checks for usage of mutex where an atomic value could be used\n //!\n //! This lint is **allow** by default\n \n@@ -12,7 +12,7 @@ use rustc_span::sym;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `Mutex<X>` where an atomic will do.\n+    /// Checks for usage of `Mutex<X>` where an atomic will do.\n     ///\n     /// ### Why is this bad?\n     /// Using a mutex just to make access to a plain bool or\n@@ -49,7 +49,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of `Mutex<X>` where `X` is an integral\n+    /// Checks for usage of `Mutex<X>` where `X` is an integral\n     /// type.\n     ///\n     /// ### Why is this bad?"}, {"sha": "58590df1fedf8d3ffe5831a0b1415b8e1db1df95", "filename": "src/tools/clippy/clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-//! Checks for uses of const which the type is not `Freeze` (`Cell`-free).\n+//! Checks for usage of const which the type is not `Freeze` (`Cell`-free).\n //!\n //! This lint is **warn** by default.\n "}, {"sha": "6d3865080a68665c08ef0916ca554d7a32452d43", "filename": "src/tools/clippy/clippy_lints/src/octal_escapes.rs", "status": "modified", "additions": 49, "deletions": 45, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foctal_escapes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foctal_escapes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foctal_escapes.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -76,8 +76,8 @@ fn check_lit(cx: &EarlyContext<'_>, lit: &Lit, span: Span, is_string: bool) {\n         if ch == '\\\\' {\n             if let Some((_, '0')) = iter.next() {\n                 // collect up to two further octal digits\n-                if let Some((mut to, '0'..='7')) = iter.next() {\n-                    if let Some((_, '0'..='7')) = iter.peek() {\n+                if let Some((mut to, _)) = iter.next_if(|(_, ch)| matches!(ch, '0'..='7')) {\n+                    if iter.next_if(|(_, ch)| matches!(ch, '0'..='7')).is_some() {\n                         to += 1;\n                     }\n                     found.push((from, to + 1));\n@@ -90,32 +90,6 @@ fn check_lit(cx: &EarlyContext<'_>, lit: &Lit, span: Span, is_string: bool) {\n         return;\n     }\n \n-    // construct two suggestion strings, one with \\x escapes with octal meaning\n-    // as in C, and one with \\x00 for null bytes.\n-    let mut suggest_1 = if is_string { \"\\\"\" } else { \"b\\\"\" }.to_string();\n-    let mut suggest_2 = suggest_1.clone();\n-    let mut index = 0;\n-    for (from, to) in found {\n-        suggest_1.push_str(&contents[index..from]);\n-        suggest_2.push_str(&contents[index..from]);\n-\n-        // construct a replacement escape\n-        // the maximum value is \\077, or \\x3f, so u8 is sufficient here\n-        if let Ok(n) = u8::from_str_radix(&contents[from + 1..to], 8) {\n-            write!(suggest_1, \"\\\\x{n:02x}\").unwrap();\n-        }\n-\n-        // append the null byte as \\x00 and the following digits literally\n-        suggest_2.push_str(\"\\\\x00\");\n-        suggest_2.push_str(&contents[from + 2..to]);\n-\n-        index = to;\n-    }\n-    suggest_1.push_str(&contents[index..]);\n-    suggest_1.push('\"');\n-    suggest_2.push_str(&contents[index..]);\n-    suggest_2.push('\"');\n-\n     span_lint_and_then(\n         cx,\n         OCTAL_ESCAPES,\n@@ -129,23 +103,53 @@ fn check_lit(cx: &EarlyContext<'_>, lit: &Lit, span: Span, is_string: bool) {\n                 \"octal escapes are not supported, `\\\\0` is always a null {}\",\n                 if is_string { \"character\" } else { \"byte\" }\n             ));\n-            // suggestion 1: equivalent hex escape\n-            diag.span_suggestion(\n-                span,\n-                \"if an octal escape was intended, use the hexadecimal representation instead\",\n-                suggest_1,\n-                Applicability::MaybeIncorrect,\n-            );\n-            // suggestion 2: unambiguous null byte\n-            diag.span_suggestion(\n-                span,\n-                format!(\n-                    \"if the null {} is intended, disambiguate using\",\n-                    if is_string { \"character\" } else { \"byte\" }\n-                ),\n-                suggest_2,\n-                Applicability::MaybeIncorrect,\n-            );\n+\n+            // Generate suggestions if the string is not too long (~ 5 lines)\n+            if contents.len() < 400 {\n+                // construct two suggestion strings, one with \\x escapes with octal meaning\n+                // as in C, and one with \\x00 for null bytes.\n+                let mut suggest_1 = if is_string { \"\\\"\" } else { \"b\\\"\" }.to_string();\n+                let mut suggest_2 = suggest_1.clone();\n+                let mut index = 0;\n+                for (from, to) in found {\n+                    suggest_1.push_str(&contents[index..from]);\n+                    suggest_2.push_str(&contents[index..from]);\n+\n+                    // construct a replacement escape\n+                    // the maximum value is \\077, or \\x3f, so u8 is sufficient here\n+                    if let Ok(n) = u8::from_str_radix(&contents[from + 1..to], 8) {\n+                        write!(suggest_1, \"\\\\x{n:02x}\").unwrap();\n+                    }\n+\n+                    // append the null byte as \\x00 and the following digits literally\n+                    suggest_2.push_str(\"\\\\x00\");\n+                    suggest_2.push_str(&contents[from + 2..to]);\n+\n+                    index = to;\n+                }\n+                suggest_1.push_str(&contents[index..]);\n+                suggest_2.push_str(&contents[index..]);\n+\n+                suggest_1.push('\"');\n+                suggest_2.push('\"');\n+                // suggestion 1: equivalent hex escape\n+                diag.span_suggestion(\n+                    span,\n+                    \"if an octal escape was intended, use the hexadecimal representation instead\",\n+                    suggest_1,\n+                    Applicability::MaybeIncorrect,\n+                );\n+                // suggestion 2: unambiguous null byte\n+                diag.span_suggestion(\n+                    span,\n+                    format!(\n+                        \"if the null {} is intended, disambiguate using\",\n+                        if is_string { \"character\" } else { \"byte\" }\n+                    ),\n+                    suggest_2,\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n         },\n     );\n }"}, {"sha": "fafcf2570947166ae20622a0b5e2062cce767271", "filename": "src/tools/clippy/clippy_lints/src/operators/arithmetic_side_effects.rs", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,5 @@\n use super::ARITHMETIC_SIDE_EFFECTS;\n+use clippy_utils::is_from_proc_macro;\n use clippy_utils::{\n     consts::{constant, constant_simple, Constant},\n     diagnostics::span_lint,\n@@ -10,7 +11,10 @@ use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::Ty;\n use rustc_session::impl_lint_pass;\n-use rustc_span::source_map::{Span, Spanned};\n+use rustc_span::{\n+    source_map::{Span, Spanned},\n+    Symbol,\n+};\n \n const HARD_CODED_ALLOWED_BINARY: &[[&str; 2]] = &[\n     [\"f32\", \"f32\"],\n@@ -20,6 +24,7 @@ const HARD_CODED_ALLOWED_BINARY: &[[&str; 2]] = &[\n     [\"std::string::String\", \"&str\"],\n ];\n const HARD_CODED_ALLOWED_UNARY: &[&str] = &[\"f32\", \"f64\", \"std::num::Saturating\", \"std::num::Wrapping\"];\n+const INTEGER_METHODS: &[&str] = &[\"saturating_div\", \"wrapping_div\", \"wrapping_rem\", \"wrapping_rem_euclid\"];\n \n #[derive(Debug)]\n pub struct ArithmeticSideEffects {\n@@ -28,6 +33,7 @@ pub struct ArithmeticSideEffects {\n     // Used to check whether expressions are constants, such as in enum discriminants and consts\n     const_span: Option<Span>,\n     expr_span: Option<Span>,\n+    integer_methods: FxHashSet<Symbol>,\n }\n \n impl_lint_pass!(ArithmeticSideEffects => [ARITHMETIC_SIDE_EFFECTS]);\n@@ -53,6 +59,7 @@ impl ArithmeticSideEffects {\n             allowed_unary,\n             const_span: None,\n             expr_span: None,\n+            integer_methods: INTEGER_METHODS.iter().map(|el| Symbol::intern(el)).collect(),\n         }\n     }\n \n@@ -184,6 +191,33 @@ impl ArithmeticSideEffects {\n         }\n     }\n \n+    /// There are some integer methods like `wrapping_div` that will panic depending on the\n+    /// provided input.\n+    fn manage_method_call<'tcx>(\n+        &mut self,\n+        args: &[hir::Expr<'tcx>],\n+        cx: &LateContext<'tcx>,\n+        ps: &hir::PathSegment<'tcx>,\n+        receiver: &hir::Expr<'tcx>,\n+    ) {\n+        let Some(arg) = args.first() else { return; };\n+        if constant_simple(cx, cx.typeck_results(), receiver).is_some() {\n+            return;\n+        }\n+        let instance_ty = cx.typeck_results().expr_ty(receiver);\n+        if !Self::is_integral(instance_ty) {\n+            return;\n+        }\n+        if !self.integer_methods.contains(&ps.ident.name) {\n+            return;\n+        }\n+        let (actual_arg, _) = peel_hir_expr_refs(arg);\n+        match Self::literal_integer(cx, actual_arg) {\n+            None | Some(0) => self.issue_lint(cx, arg),\n+            Some(_) => {},\n+        }\n+    }\n+\n     fn manage_unary_ops<'tcx>(\n         &mut self,\n         cx: &LateContext<'tcx>,\n@@ -206,8 +240,9 @@ impl ArithmeticSideEffects {\n         self.issue_lint(cx, expr);\n     }\n \n-    fn should_skip_expr(&mut self, cx: &LateContext<'_>, expr: &hir::Expr<'_>) -> bool {\n+    fn should_skip_expr<'tcx>(&mut self, cx: &LateContext<'tcx>, expr: &hir::Expr<'tcx>) -> bool {\n         is_lint_allowed(cx, ARITHMETIC_SIDE_EFFECTS, expr.hir_id)\n+            || is_from_proc_macro(cx, expr)\n             || self.expr_span.is_some()\n             || self.const_span.map_or(false, |sp| sp.contains(expr.span))\n     }\n@@ -222,6 +257,9 @@ impl<'tcx> LateLintPass<'tcx> for ArithmeticSideEffects {\n             hir::ExprKind::AssignOp(op, lhs, rhs) | hir::ExprKind::Binary(op, lhs, rhs) => {\n                 self.manage_bin_ops(cx, expr, op, lhs, rhs);\n             },\n+            hir::ExprKind::MethodCall(ps, receiver, args, _) => {\n+                self.manage_method_call(args, cx, ps, receiver);\n+            },\n             hir::ExprKind::Unary(un_op, un_expr) => {\n                 self.manage_unary_ops(cx, expr, un_expr, *un_op);\n             },"}, {"sha": "19599731bd6ef9e398e279ce4fd7a64ff5bd9c93", "filename": "src/tools/clippy/clippy_lints/src/operators/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fmod.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -685,7 +685,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for uses of bitwise and/or operators between booleans, where performance may be improved by using\n+    /// Checks for usage of bitwise and/or operators between booleans, where performance may be improved by using\n     /// a lazy and.\n     ///\n     /// ### Why is this bad?"}, {"sha": "77fd45b199a11aaaf48a772fcf917977a2acde27", "filename": "src/tools/clippy/clippy_lints/src/operators/numeric_arithmetic.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,12 +1,12 @@\n+use super::{FLOAT_ARITHMETIC, INTEGER_ARITHMETIC};\n use clippy_utils::consts::constant_simple;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::is_from_proc_macro;\n use clippy_utils::is_integer_literal;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::source_map::Span;\n \n-use super::{FLOAT_ARITHMETIC, INTEGER_ARITHMETIC};\n-\n #[derive(Default)]\n pub struct Context {\n     expr_id: Option<hir::HirId>,\n@@ -47,6 +47,9 @@ impl Context {\n \n         let (l_ty, r_ty) = (cx.typeck_results().expr_ty(l), cx.typeck_results().expr_ty(r));\n         if l_ty.peel_refs().is_integral() && r_ty.peel_refs().is_integral() {\n+            if is_from_proc_macro(cx, expr) {\n+                return;\n+            }\n             match op {\n                 hir::BinOpKind::Div | hir::BinOpKind::Rem => match &r.kind {\n                     hir::ExprKind::Lit(_lit) => (),\n@@ -79,6 +82,9 @@ impl Context {\n         let ty = cx.typeck_results().expr_ty(arg);\n         if constant_simple(cx, cx.typeck_results(), expr).is_none() {\n             if ty.is_integral() {\n+                if is_from_proc_macro(cx, expr) {\n+                    return;\n+                }\n                 span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n                 self.expr_id = Some(expr.hir_id);\n             } else if ty.is_floating_point() {"}, {"sha": "ff66b8a0095316c52bfbef26064bb98437f22526", "filename": "src/tools/clippy/clippy_lints/src/question_mark_used.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fquestion_mark_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fquestion_mark_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fquestion_mark_used.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -24,7 +24,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// utility_macro!(expr);\n     /// ```\n-    #[clippy::version = \"pre 1.29.0\"]\n+    #[clippy::version = \"1.69.0\"]\n     pub QUESTION_MARK_USED,\n     restriction,\n     \"complains if the question mark operator is used\""}, {"sha": "b930b2c8dd7b84858cda4e52c7afb2e0b0661203", "filename": "src/tools/clippy/clippy_lints/src/significant_drop_tightening.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsignificant_drop_tightening.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsignificant_drop_tightening.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsignificant_drop_tightening.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -17,7 +17,7 @@ use rustc_span::{symbol::Ident, Span, DUMMY_SP};\n declare_clippy_lint! {\n     /// ### What it does\n     ///\n-    /// Searches for elements marked with `#[clippy::significant_drop]` that could be early\n+    /// Searches for elements marked with `#[clippy::has_significant_drop]` that could be early\n     /// dropped but are in fact dropped at the end of their scopes. In other words, enforces the\n     /// \"tightening\" of their possible lifetimes.\n     ///\n@@ -46,7 +46,7 @@ declare_clippy_lint! {\n     ///     do_heavy_computation_that_takes_time(owned_rslt);\n     /// }\n     /// ```\n-    #[clippy::version = \"1.67.0\"]\n+    #[clippy::version = \"1.69.0\"]\n     pub SIGNIFICANT_DROP_TIGHTENING,\n     nursery,\n     \"Searches for elements marked with `#[clippy::has_significant_drop]` that could be early dropped but are in fact dropped at the end of their scopes\""}, {"sha": "c6834a8fdaa2404e4bb08bf08657bfaf969e5982", "filename": "src/tools/clippy/clippy_lints/src/types/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fmod.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -22,7 +22,7 @@ use rustc_span::source_map::Span;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `Box<T>` where T is a collection such as Vec anywhere in the code.\n+    /// Checks for usage of `Box<T>` where T is a collection such as Vec anywhere in the code.\n     /// Check the [Box documentation](https://doc.rust-lang.org/std/boxed/index.html) for more information.\n     ///\n     /// ### Why is this bad?\n@@ -52,7 +52,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `Vec<Box<T>>` where T: Sized anywhere in the code.\n+    /// Checks for usage of `Vec<Box<T>>` where T: Sized anywhere in the code.\n     /// Check the [Box documentation](https://doc.rust-lang.org/std/boxed/index.html) for more information.\n     ///\n     /// ### Why is this bad?\n@@ -85,7 +85,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `Option<Option<_>>` in function signatures and type\n+    /// Checks for usage of `Option<Option<_>>` in function signatures and type\n     /// definitions\n     ///\n     /// ### Why is this bad?\n@@ -164,7 +164,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `&Box<T>` anywhere in the code.\n+    /// Checks for usage of `&Box<T>` anywhere in the code.\n     /// Check the [Box documentation](https://doc.rust-lang.org/std/boxed/index.html) for more information.\n     ///\n     /// ### Why is this bad?\n@@ -190,7 +190,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of redundant allocations anywhere in the code.\n+    /// Checks for usage of redundant allocations anywhere in the code.\n     ///\n     /// ### Why is this bad?\n     /// Expressions such as `Rc<&T>`, `Rc<Rc<T>>`, `Rc<Arc<T>>`, `Rc<Box<T>>`, `Arc<&T>`, `Arc<Rc<T>>`,"}, {"sha": "af1c8d83b4fe627f80cbb274c43e41239930425b", "filename": "src/tools/clippy/clippy_lints/src/unnecessary_box_returns.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnecessary_box_returns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnecessary_box_returns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnecessary_box_returns.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::{diagnostics::span_lint_and_then, ty::approx_ty_size};\n use rustc_errors::Applicability;\n use rustc_hir::{def_id::LocalDefId, FnDecl, FnRetTy, ImplItemKind, Item, ItemKind, Node, TraitItem, TraitItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -10,6 +10,9 @@ declare_clippy_lint! {\n     ///\n     /// Checks for a return type containing a `Box<T>` where `T` implements `Sized`\n     ///\n+    /// The lint ignores `Box<T>` where `T` is larger than `unnecessary_box_size`,\n+    /// as returning a large `T` directly may be detrimental to performance.\n+    ///\n     /// ### Why is this bad?\n     ///\n     /// It's better to just return `T` in these cases. The caller may not need\n@@ -36,14 +39,16 @@ declare_clippy_lint! {\n \n pub struct UnnecessaryBoxReturns {\n     avoid_breaking_exported_api: bool,\n+    maximum_size: u64,\n }\n \n impl_lint_pass!(UnnecessaryBoxReturns => [UNNECESSARY_BOX_RETURNS]);\n \n impl UnnecessaryBoxReturns {\n-    pub fn new(avoid_breaking_exported_api: bool) -> Self {\n+    pub fn new(avoid_breaking_exported_api: bool, maximum_size: u64) -> Self {\n         Self {\n             avoid_breaking_exported_api,\n+            maximum_size,\n         }\n     }\n \n@@ -71,8 +76,10 @@ impl UnnecessaryBoxReturns {\n \n         let boxed_ty = return_ty.boxed_ty();\n \n-        // it's sometimes useful to return Box<T> if T is unsized, so don't lint those\n-        if boxed_ty.is_sized(cx.tcx, cx.param_env) {\n+        // It's sometimes useful to return Box<T> if T is unsized, so don't lint those.\n+        // Also, don't lint if we know that T is very large, in which case returning\n+        // a Box<T> may be beneficial.\n+        if boxed_ty.is_sized(cx.tcx, cx.param_env) && approx_ty_size(cx, boxed_ty) <= self.maximum_size {\n             span_lint_and_then(\n                 cx,\n                 UNNECESSARY_BOX_RETURNS,"}, {"sha": "67bb499c455a2a4f50e4045e52bdcb8494c2c1db", "filename": "src/tools/clippy/clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -463,6 +463,10 @@ define_Conf! {\n     ///\n     /// The maximum byte size a `Future` can have, before it triggers the `clippy::large_futures` lint\n     (future_size_threshold: u64 = 16 * 1024),\n+    /// Lint: UNNECESSARY_BOX_RETURNS.\n+    ///\n+    /// The byte size a `T` in `Box<T>` can have, below which it triggers the `clippy::unnecessary_box` lint\n+    (unnecessary_box_size: u64 = 128),\n }\n \n /// Search for the configuration file."}, {"sha": "00842376628cce223bf9b336d1483c123b348c6c", "filename": "src/tools/clippy/clippy_lints/src/utils/internal_lints/unnecessary_def_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Funnecessary_def_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Funnecessary_def_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Funnecessary_def_path.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -20,7 +20,7 @@ use std::str;\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for usages of def paths when a diagnostic item or a `LangItem` could be used.\n+    /// Checks for usage of def paths when a diagnostic item or a `LangItem` could be used.\n     ///\n     /// ### Why is this bad?\n     /// The path for an item is subject to change and is less efficient to look up than a"}, {"sha": "f194dc5d4b2ef466f2bdfcbf6c7bb757fcda3647", "filename": "src/tools/clippy/clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -104,7 +104,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for use of `Debug` formatting. The purpose of this\n+    /// Checks for usage of `Debug` formatting. The purpose of this\n     /// lint is to catch debugging remnants.\n     ///\n     /// ### Why is this bad?"}, {"sha": "bd26f4fc91395c0a76462f1db6fc3f208f87ce63", "filename": "src/tools/clippy/declare_clippy_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fdeclare_clippy_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fdeclare_clippy_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fdeclare_clippy_lint%2FCargo.toml?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -10,7 +10,7 @@ proc-macro = true\n [dependencies]\n itertools = \"0.10.1\"\n quote = \"1.0.21\"\n-syn = \"1.0.100\"\n+syn = \"2.0\"\n \n [features]\n deny-warnings = []"}, {"sha": "5232e4ab7d754c9062a001ead79aa64f7a843299", "filename": "src/tools/clippy/declare_clippy_lint/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fdeclare_clippy_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Fdeclare_clippy_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fdeclare_clippy_lint%2Fsrc%2Flib.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -6,16 +6,16 @@\n use proc_macro::TokenStream;\n use quote::{format_ident, quote};\n use syn::parse::{Parse, ParseStream};\n-use syn::{parse_macro_input, Attribute, Error, Ident, Lit, LitStr, Meta, Result, Token};\n+use syn::{parse_macro_input, Attribute, Error, Expr, ExprLit, Ident, Lit, LitStr, Meta, Result, Token};\n \n fn parse_attr<const LEN: usize>(path: [&'static str; LEN], attr: &Attribute) -> Option<LitStr> {\n-    if let Meta::NameValue(name_value) = attr.parse_meta().ok()? {\n+    if let Meta::NameValue(name_value) = &attr.meta {\n         let path_idents = name_value.path.segments.iter().map(|segment| &segment.ident);\n \n         if itertools::equal(path_idents, path)\n-            && let Lit::Str(lit) = name_value.lit\n+            && let Expr::Lit(ExprLit { lit: Lit::Str(s), .. }) = &name_value.value\n         {\n-            return Some(lit);\n+            return Some(s.clone());\n         }\n     }\n "}, {"sha": "35d75cc51c2105d29fc5dd6cd19df0f4301a9354", "filename": "src/tools/clippy/tests/compile-test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fcompile-test.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -126,6 +126,7 @@ fn base_config(test_dir: &str) -> compiletest::Config {\n     let mut config = compiletest::Config {\n         edition: Some(\"2021\".into()),\n         mode: TestMode::Ui,\n+        strict_headers: true,\n         ..Default::default()\n     };\n \n@@ -424,7 +425,7 @@ fn check_rustfix_coverage() {\n                     .binary_search_by_key(&filename, Path::new)\n                     .is_ok(),\n                 \"`{rs_file}` runs `MachineApplicable` diagnostics but is missing a `run-rustfix` annotation. \\\n-                Please either add `// run-rustfix` at the top of the file or add the file to \\\n+                Please either add `//@run-rustfix` at the top of the file or add the file to \\\n                 `RUSTFIX_COVERAGE_KNOWN_EXCEPTIONS` in `tests/compile-test.rs`.\",\n             );\n         }"}, {"sha": "1a69bb24101eacdbaa48c30af213fac925dd6b9e", "filename": "src/tools/clippy/tests/ui-cargo/cargo_common_metadata/fail/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=cargo_common_metadata\n+//@compile-flags: --crate-name=cargo_common_metadata\n #![warn(clippy::cargo_common_metadata)]\n \n fn main() {}"}, {"sha": "1a69bb24101eacdbaa48c30af213fac925dd6b9e", "filename": "src/tools/clippy/tests/ui-cargo/cargo_common_metadata/fail_publish/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=cargo_common_metadata\n+//@compile-flags: --crate-name=cargo_common_metadata\n #![warn(clippy::cargo_common_metadata)]\n \n fn main() {}"}, {"sha": "1a69bb24101eacdbaa48c30af213fac925dd6b9e", "filename": "src/tools/clippy/tests/ui-cargo/cargo_common_metadata/fail_publish_true/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=cargo_common_metadata\n+//@compile-flags: --crate-name=cargo_common_metadata\n #![warn(clippy::cargo_common_metadata)]\n \n fn main() {}"}, {"sha": "1a69bb24101eacdbaa48c30af213fac925dd6b9e", "filename": "src/tools/clippy/tests/ui-cargo/cargo_common_metadata/pass/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=cargo_common_metadata\n+//@compile-flags: --crate-name=cargo_common_metadata\n #![warn(clippy::cargo_common_metadata)]\n \n fn main() {}"}, {"sha": "1a69bb24101eacdbaa48c30af213fac925dd6b9e", "filename": "src/tools/clippy/tests/ui-cargo/cargo_common_metadata/pass_publish_empty/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=cargo_common_metadata\n+//@compile-flags: --crate-name=cargo_common_metadata\n #![warn(clippy::cargo_common_metadata)]\n \n fn main() {}"}, {"sha": "1a69bb24101eacdbaa48c30af213fac925dd6b9e", "filename": "src/tools/clippy/tests/ui-cargo/cargo_common_metadata/pass_publish_false/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=cargo_common_metadata\n+//@compile-flags: --crate-name=cargo_common_metadata\n #![warn(clippy::cargo_common_metadata)]\n \n fn main() {}"}, {"sha": "4dd9582aff89c7f283d4cc44b0d03dccc91c61b2", "filename": "src/tools/clippy/tests/ui-cargo/feature_name/fail/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=feature_name\n+//@compile-flags: --crate-name=feature_name\n #![warn(clippy::redundant_feature_names)]\n #![warn(clippy::negative_feature_names)]\n "}, {"sha": "4dd9582aff89c7f283d4cc44b0d03dccc91c61b2", "filename": "src/tools/clippy/tests/ui-cargo/feature_name/pass/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Ffeature_name%2Fpass%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Ffeature_name%2Fpass%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Ffeature_name%2Fpass%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=feature_name\n+//@compile-flags: --crate-name=feature_name\n #![warn(clippy::redundant_feature_names)]\n #![warn(clippy::negative_feature_names)]\n "}, {"sha": "c70d92e359e44f5a0da992225f1e45b912957f94", "filename": "src/tools/clippy/tests/ui-cargo/module_style/fail_mod_remap/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmodule_style%2Ffail_mod_remap%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmodule_style%2Ffail_mod_remap%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmodule_style%2Ffail_mod_remap%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --remap-path-prefix {{src-base}}=/remapped\n+//@compile-flags: --remap-path-prefix {{src-base}}=/remapped\n \n #![warn(clippy::self_named_module_files)]\n "}, {"sha": "ece260b743df89b684ed06b7fb69a984088d422c", "filename": "src/tools/clippy/tests/ui-cargo/multiple_crate_versions/5041_allow_dev_build/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=multiple_crate_versions\n+//@compile-flags: --crate-name=multiple_crate_versions\n #![warn(clippy::multiple_crate_versions)]\n \n fn main() {}"}, {"sha": "ece260b743df89b684ed06b7fb69a984088d422c", "filename": "src/tools/clippy/tests/ui-cargo/multiple_crate_versions/fail/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2Ffail%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2Ffail%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2Ffail%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=multiple_crate_versions\n+//@compile-flags: --crate-name=multiple_crate_versions\n #![warn(clippy::multiple_crate_versions)]\n \n fn main() {}"}, {"sha": "ece260b743df89b684ed06b7fb69a984088d422c", "filename": "src/tools/clippy/tests/ui-cargo/multiple_crate_versions/pass/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2Fpass%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2Fpass%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fmultiple_crate_versions%2Fpass%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=multiple_crate_versions\n+//@compile-flags: --crate-name=multiple_crate_versions\n #![warn(clippy::multiple_crate_versions)]\n \n fn main() {}"}, {"sha": "bb3a39d0720a9e0f0423f80dfbfadee0c4f184b1", "filename": "src/tools/clippy/tests/ui-cargo/wildcard_dependencies/fail/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fwildcard_dependencies%2Ffail%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fwildcard_dependencies%2Ffail%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fwildcard_dependencies%2Ffail%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=wildcard_dependencies\n+//@compile-flags: --crate-name=wildcard_dependencies\n #![warn(clippy::wildcard_dependencies)]\n \n fn main() {}"}, {"sha": "bb3a39d0720a9e0f0423f80dfbfadee0c4f184b1", "filename": "src/tools/clippy/tests/ui-cargo/wildcard_dependencies/pass/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fwildcard_dependencies%2Fpass%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fwildcard_dependencies%2Fpass%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-cargo%2Fwildcard_dependencies%2Fpass%2Fsrc%2Fmain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name=wildcard_dependencies\n+//@compile-flags: --crate-name=wildcard_dependencies\n #![warn(clippy::wildcard_dependencies)]\n \n fn main() {}"}, {"sha": "72c04bf80b6b1ec0564c4e5fb608d5ea9b947e5d", "filename": "src/tools/clippy/tests/ui-internal/collapsible_span_lint_calls.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcollapsible_span_lint_calls.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcollapsible_span_lint_calls.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcollapsible_span_lint_calls.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]\n #![feature(rustc_private)]"}, {"sha": "76f7c3ce94d67c7361da15d310755ddc37e422e4", "filename": "src/tools/clippy/tests/ui-internal/collapsible_span_lint_calls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcollapsible_span_lint_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcollapsible_span_lint_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcollapsible_span_lint_calls.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]\n #![feature(rustc_private)]"}, {"sha": "acb98d7ba98e6d419e53b0dfd3099c15a0cbbd02", "filename": "src/tools/clippy/tests/ui-internal/custom_ice_message.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcustom_ice_message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcustom_ice_message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fcustom_ice_message.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,9 +1,9 @@\n-// rustc-env:RUST_BACKTRACE=0\n-// normalize-stderr-test: \"Clippy version: .*\" -> \"Clippy version: foo\"\n-// normalize-stderr-test: \"produce_ice.rs:\\d*:\\d*\" -> \"produce_ice.rs\"\n-// normalize-stderr-test: \"', .*clippy_lints\" -> \"', clippy_lints\"\n-// normalize-stderr-test: \"'rustc'\" -> \"'<unnamed>'\"\n-// normalize-stderr-test: \"(?ms)query stack during panic:\\n.*end of query stack\\n\" -> \"\"\n+//@rustc-env:RUST_BACKTRACE=0\n+//@normalize-stderr-test: \"Clippy version: .*\" -> \"Clippy version: foo\"\n+//@normalize-stderr-test: \"produce_ice.rs:\\d*:\\d*\" -> \"produce_ice.rs\"\n+//@normalize-stderr-test: \"', .*clippy_lints\" -> \"', clippy_lints\"\n+//@normalize-stderr-test: \"'rustc'\" -> \"'<unnamed>'\"\n+//@normalize-stderr-test: \"(?ms)query stack during panic:\\n.*end of query stack\\n\" -> \"\"\n \n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]"}, {"sha": "a1a10c0798e3a486a3e10643f282af38ce87c6b6", "filename": "src/tools/clippy/tests/ui-internal/interning_defined_symbol.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finterning_defined_symbol.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finterning_defined_symbol.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finterning_defined_symbol.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute, clippy::let_unit_value)]\n #![feature(rustc_private)]"}, {"sha": "32dbfe5dcac2267dec66f5df52a0bb59dd8d199a", "filename": "src/tools/clippy/tests/ui-internal/interning_defined_symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finterning_defined_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finterning_defined_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finterning_defined_symbol.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute, clippy::let_unit_value)]\n #![feature(rustc_private)]"}, {"sha": "ac0752774f3f07a986b5299f86e9c3225988a7cb", "filename": "src/tools/clippy/tests/ui-internal/invalid_msrv_attr_impl.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finvalid_msrv_attr_impl.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finvalid_msrv_attr_impl.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finvalid_msrv_attr_impl.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]"}, {"sha": "56f778621a4495ef2bb1e671f64576e9bb4b0f82", "filename": "src/tools/clippy/tests/ui-internal/invalid_msrv_attr_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finvalid_msrv_attr_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finvalid_msrv_attr_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Finvalid_msrv_attr_impl.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]"}, {"sha": "d8a08bc9997092191e1d96c87ba51be08337c321", "filename": "src/tools/clippy/tests/ui-internal/outer_expn_data.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fouter_expn_data.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fouter_expn_data.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fouter_expn_data.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]"}, {"sha": "f7af0e9d8be2e4511f6d8b0a7a0728b2f40846c3", "filename": "src/tools/clippy/tests/ui-internal/outer_expn_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fouter_expn_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fouter_expn_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Fouter_expn_data.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![deny(clippy::internal)]\n #![allow(clippy::missing_clippy_version_attribute)]"}, {"sha": "fce24412f843997569ebf06b478ca6721de52b6d", "filename": "src/tools/clippy/tests/ui-internal/unnecessary_def_path.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_def_path.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_def_path.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_def_path.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:paths.rs\n+//@run-rustfix\n+//@aux-build:paths.rs\n #![deny(clippy::internal)]\n #![feature(rustc_private)]\n "}, {"sha": "b10bc9e46e2d75628d6fce8a00ad8ae8beff94a6", "filename": "src/tools/clippy/tests/ui-internal/unnecessary_def_path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_def_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_def_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_def_path.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:paths.rs\n+//@run-rustfix\n+//@aux-build:paths.rs\n #![deny(clippy::internal)]\n #![feature(rustc_private)]\n "}, {"sha": "b802de1cbc650566d3948dd8387aae4bd1484bcd", "filename": "src/tools/clippy/tests/ui-internal/unnecessary_symbol_str.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_symbol_str.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_symbol_str.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_symbol_str.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(rustc_private)]\n #![deny(clippy::internal)]\n #![allow("}, {"sha": "c1bead5bdc98e82679f6b64e9eba6653ed9150dd", "filename": "src/tools/clippy/tests/ui-internal/unnecessary_symbol_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_symbol_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_symbol_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-internal%2Funnecessary_symbol_str.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(rustc_private)]\n #![deny(clippy::internal)]\n #![allow("}, {"sha": "23e7bc16d239a0c79dd5658bd03d78eae6ce8a38", "filename": "src/tools/clippy/tests/ui-toml/allow_mixed_uninlined_format_args/uninlined_format_args.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fallow_mixed_uninlined_format_args%2Funinlined_format_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fallow_mixed_uninlined_format_args%2Funinlined_format_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fallow_mixed_uninlined_format_args%2Funinlined_format_args.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::uninlined_format_args)]\n \n fn main() {"}, {"sha": "d66b2b8ff6a03aac18032f29e62811a72962315f", "filename": "src/tools/clippy/tests/ui-toml/allow_mixed_uninlined_format_args/uninlined_format_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fallow_mixed_uninlined_format_args%2Funinlined_format_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fallow_mixed_uninlined_format_args%2Funinlined_format_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fallow_mixed_uninlined_format_args%2Funinlined_format_args.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::uninlined_format_args)]\n \n fn main() {"}, {"sha": "21e4fce26e4e6aaab3f21d640eff3f5d2b503b02", "filename": "src/tools/clippy/tests/ui-toml/dbg_macro/dbg_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fdbg_macro%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fdbg_macro%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fdbg_macro%2Fdbg_macro.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --test\n+//@compile-flags: --test\n #![warn(clippy::dbg_macro)]\n \n fn foo(n: u32) -> u32 {"}, {"sha": "ba919b4878854426e4291fdd71579c8b4c12e700", "filename": "src/tools/clippy/tests/ui-toml/disallowed_macros/disallowed_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fdisallowed_macros%2Fdisallowed_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fdisallowed_macros%2Fdisallowed_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fdisallowed_macros%2Fdisallowed_macros.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:macros.rs\n+//@aux-build:macros.rs\n \n #![allow(unused)]\n "}, {"sha": "9e267c893005f7b5f775619964f2e88ba7e83c42", "filename": "src/tools/clippy/tests/ui-toml/expect_used/expect_used.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fexpect_used%2Fexpect_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fexpect_used%2Fexpect_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fexpect_used%2Fexpect_used.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --test\n+//@compile-flags: --test\n #![warn(clippy::expect_used)]\n \n fn expect_option() {"}, {"sha": "095e0d15448a7138256fdf1a514d50a201febb0a", "filename": "src/tools/clippy/tests/ui-toml/mut_key/mut_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fmut_key%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fmut_key%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fmut_key%2Fmut_key.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name mut_key\n+//@compile-flags: --crate-name mut_key\n \n #![warn(clippy::mutable_key_type)]\n "}, {"sha": "f5761c6afeb37849e7318791cc0ccdc5c3bd31af", "filename": "src/tools/clippy/tests/ui-toml/nonstandard_macro_braces/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fauxiliary%2Fproc_macro_derive.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n "}, {"sha": "e4747bedddb88ebdd69c883c16ee862c498c7f13", "filename": "src/tools/clippy/tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// aux-build:proc_macro_derive.rs\n-// run-rustfix\n+//@aux-build:proc_macro_derive.rs\n+//@run-rustfix\n \n #![warn(clippy::nonstandard_macro_braces)]\n "}, {"sha": "54edded99f41b5670167d405d57e61ee70e21d6b", "filename": "src/tools/clippy/tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// aux-build:proc_macro_derive.rs\n-// run-rustfix\n+//@aux-build:proc_macro_derive.rs\n+//@run-rustfix\n \n #![warn(clippy::nonstandard_macro_braces)]\n "}, {"sha": "3a8b30cca36a6f12cd609f670f71ce9707bb2347", "filename": "src/tools/clippy/tests/ui-toml/print_macro/print_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fprint_macro%2Fprint_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fprint_macro%2Fprint_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Fprint_macro%2Fprint_macro.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --test\n+//@compile-flags: --test\n #![warn(clippy::print_stdout)]\n #![warn(clippy::print_stderr)]\n "}, {"sha": "8e1a1710a6ce2390a0cef44972b2e285911e98a3", "filename": "src/tools/clippy/tests/ui-toml/toml_disallowed_methods/conf_disallowed_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --crate-name conf_disallowed_methods\n+//@compile-flags: --crate-name conf_disallowed_methods\n \n #![warn(clippy::disallowed_methods)]\n "}, {"sha": "179b1266169ef9f2868d80273be863f4d0dae3a4", "filename": "src/tools/clippy/tests/ui-toml/toml_trivially_copy/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// normalize-stderr-test \"\\(\\d+ byte\\)\" -> \"(N byte)\"\n-// normalize-stderr-test \"\\(limit: \\d+ byte\\)\" -> \"(limit: N byte)\"\n+//@normalize-stderr-test: \"\\(\\d+ byte\\)\" -> \"(N byte)\"\n+//@normalize-stderr-test: \"\\(limit: \\d+ byte\\)\" -> \"(limit: N byte)\"\n \n #![deny(clippy::trivially_copy_pass_by_ref)]\n "}, {"sha": "569fd2c3553b1c5930ea4d95ef83e2fe3a1ef0b6", "filename": "src/tools/clippy/tests/ui-toml/toml_unknown_key/conf_unknown_key.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1 +1,3 @@\n+//@error-pattern: unknown field `foobar`, expected one of\n+\n fn main() {}"}, {"sha": "36b372b36f4faa5bba731ef0fca00bc70730b649", "filename": "src/tools/clippy/tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -46,6 +46,7 @@ error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown fie\n            too-many-lines-threshold\n            trivial-copy-size-limit\n            type-complexity-threshold\n+           unnecessary-box-size\n            unreadable-literal-lint-fractions\n            upper-case-acronyms-aggressive\n            vec-box-size-threshold"}, {"sha": "5d3e800caddfef220c6d9174334bba94ad46dc9d", "filename": "src/tools/clippy/tests/ui-toml/unwrap_used/unwrap_used.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Funwrap_used%2Funwrap_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Funwrap_used%2Funwrap_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Funwrap_used%2Funwrap_used.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --test\n+//@compile-flags: --test\n \n #![allow(unused_mut, clippy::get_first, clippy::from_iter_instead_of_collect)]\n #![warn(clippy::unwrap_used)]"}, {"sha": "f0936b2608e9e58e2cf2fb769a4e0cb698005891", "filename": "src/tools/clippy/tests/ui/allow_attributes.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fallow_attributes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fallow_attributes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fallow_attributes.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused)]\n #![warn(clippy::allow_attributes)]\n #![feature(lint_reasons)]"}, {"sha": "2fb9e86126e553d7bc30a8ff907f303fb826aa12", "filename": "src/tools/clippy/tests/ui/allow_attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fallow_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fallow_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fallow_attributes.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused)]\n #![warn(clippy::allow_attributes)]\n #![feature(lint_reasons)]"}, {"sha": "5cd0dcce6f7657249b130b2f32eadd74d691e4d3", "filename": "src/tools/clippy/tests/ui/almost_complete_range.fixed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Falmost_complete_range.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Falmost_complete_range.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Falmost_complete_range.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,6 +1,6 @@\n-// run-rustfix\n-// edition:2018\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@edition:2018\n+//@aux-build:proc_macros.rs\n \n #![feature(exclusive_range_pattern)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "db0bfc8afc39ab96877b7fc5c7d966f826cb13dc", "filename": "src/tools/clippy/tests/ui/almost_complete_range.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Falmost_complete_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Falmost_complete_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Falmost_complete_range.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,6 +1,6 @@\n-// run-rustfix\n-// edition:2018\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@edition:2018\n+//@aux-build:proc_macros.rs\n \n #![feature(exclusive_range_pattern)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "ab408bdf261ef336688b4f4b47c98eb078fcadd6", "filename": "src/tools/clippy/tests/ui/arithmetic_side_effects.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Farithmetic_side_effects.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,3 +1,5 @@\n+//@aux-build:proc_macro_derive.rs\n+\n #![allow(\n     clippy::assign_op_pattern,\n     clippy::erasing_op,\n@@ -11,6 +13,8 @@\n #![feature(const_mut_refs, inline_const, saturating_int_impl)]\n #![warn(clippy::arithmetic_side_effects)]\n \n+extern crate proc_macro_derive;\n+\n use core::num::{Saturating, Wrapping};\n \n const ONE: i32 = 1;\n@@ -19,6 +23,9 @@ const ZERO: i32 = 0;\n #[derive(Clone, Copy)]\n pub struct Custom;\n \n+#[derive(proc_macro_derive::ShadowDerive)]\n+pub struct Nothing;\n+\n macro_rules! impl_arith {\n     ( $( $_trait:ident, $lhs:ty, $rhs:ty, $method:ident; )* ) => {\n         $(\n@@ -269,6 +276,17 @@ pub fn non_overflowing_ops_or_ops_already_handled_by_the_compiler_should_not_tri\n     _n = &1 * _n;\n     _n = 23 + 85;\n \n+    // Method\n+    _n.saturating_div(1);\n+    _n.wrapping_div(1);\n+    _n.wrapping_rem(1);\n+    _n.wrapping_rem_euclid(1);\n+\n+    _n.saturating_div(1);\n+    _n.checked_div(1);\n+    _n.checked_rem(1);\n+    _n.checked_rem_euclid(1);\n+\n     // Unary\n     _n = -2147483647;\n     _n = -i32::MAX;\n@@ -376,6 +394,17 @@ pub fn unknown_ops_or_runtime_ops_that_can_overflow() {\n     _custom = Custom << _custom;\n     _custom = &Custom << _custom;\n \n+    // Method\n+    _n.saturating_div(0);\n+    _n.wrapping_div(0);\n+    _n.wrapping_rem(0);\n+    _n.wrapping_rem_euclid(0);\n+\n+    _n.saturating_div(_n);\n+    _n.wrapping_div(_n);\n+    _n.wrapping_rem(_n);\n+    _n.wrapping_rem_euclid(_n);\n+\n     // Unary\n     _n = -_n;\n     _n = -&_n;"}, {"sha": "e9a626643ff78b675fe03740d43f6ec61d19344f", "filename": "src/tools/clippy/tests/ui/arithmetic_side_effects.stderr", "status": "modified", "additions": 158, "deletions": 110, "changes": 268, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Farithmetic_side_effects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Farithmetic_side_effects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Farithmetic_side_effects.stderr?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,658 +1,706 @@\n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:286:5\n+  --> $DIR/arithmetic_side_effects.rs:304:5\n    |\n LL |     _n += 1;\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::arithmetic-side-effects` implied by `-D warnings`\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:287:5\n+  --> $DIR/arithmetic_side_effects.rs:305:5\n    |\n LL |     _n += &1;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:288:5\n+  --> $DIR/arithmetic_side_effects.rs:306:5\n    |\n LL |     _n -= 1;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:289:5\n+  --> $DIR/arithmetic_side_effects.rs:307:5\n    |\n LL |     _n -= &1;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:290:5\n+  --> $DIR/arithmetic_side_effects.rs:308:5\n    |\n LL |     _n /= 0;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:291:5\n+  --> $DIR/arithmetic_side_effects.rs:309:5\n    |\n LL |     _n /= &0;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:292:5\n+  --> $DIR/arithmetic_side_effects.rs:310:5\n    |\n LL |     _n %= 0;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:293:5\n+  --> $DIR/arithmetic_side_effects.rs:311:5\n    |\n LL |     _n %= &0;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:294:5\n+  --> $DIR/arithmetic_side_effects.rs:312:5\n    |\n LL |     _n *= 2;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:295:5\n+  --> $DIR/arithmetic_side_effects.rs:313:5\n    |\n LL |     _n *= &2;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:296:5\n+  --> $DIR/arithmetic_side_effects.rs:314:5\n    |\n LL |     _n += -1;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:297:5\n+  --> $DIR/arithmetic_side_effects.rs:315:5\n    |\n LL |     _n += &-1;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:298:5\n+  --> $DIR/arithmetic_side_effects.rs:316:5\n    |\n LL |     _n -= -1;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:299:5\n+  --> $DIR/arithmetic_side_effects.rs:317:5\n    |\n LL |     _n -= &-1;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:300:5\n+  --> $DIR/arithmetic_side_effects.rs:318:5\n    |\n LL |     _n /= -0;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:301:5\n+  --> $DIR/arithmetic_side_effects.rs:319:5\n    |\n LL |     _n /= &-0;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:302:5\n+  --> $DIR/arithmetic_side_effects.rs:320:5\n    |\n LL |     _n %= -0;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:303:5\n+  --> $DIR/arithmetic_side_effects.rs:321:5\n    |\n LL |     _n %= &-0;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:304:5\n+  --> $DIR/arithmetic_side_effects.rs:322:5\n    |\n LL |     _n *= -2;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:305:5\n+  --> $DIR/arithmetic_side_effects.rs:323:5\n    |\n LL |     _n *= &-2;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:306:5\n+  --> $DIR/arithmetic_side_effects.rs:324:5\n    |\n LL |     _custom += Custom;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:307:5\n+  --> $DIR/arithmetic_side_effects.rs:325:5\n    |\n LL |     _custom += &Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:308:5\n+  --> $DIR/arithmetic_side_effects.rs:326:5\n    |\n LL |     _custom -= Custom;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:309:5\n+  --> $DIR/arithmetic_side_effects.rs:327:5\n    |\n LL |     _custom -= &Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:310:5\n+  --> $DIR/arithmetic_side_effects.rs:328:5\n    |\n LL |     _custom /= Custom;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:311:5\n+  --> $DIR/arithmetic_side_effects.rs:329:5\n    |\n LL |     _custom /= &Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:312:5\n+  --> $DIR/arithmetic_side_effects.rs:330:5\n    |\n LL |     _custom %= Custom;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:313:5\n+  --> $DIR/arithmetic_side_effects.rs:331:5\n    |\n LL |     _custom %= &Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:314:5\n+  --> $DIR/arithmetic_side_effects.rs:332:5\n    |\n LL |     _custom *= Custom;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:315:5\n+  --> $DIR/arithmetic_side_effects.rs:333:5\n    |\n LL |     _custom *= &Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:316:5\n+  --> $DIR/arithmetic_side_effects.rs:334:5\n    |\n LL |     _custom >>= Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:317:5\n+  --> $DIR/arithmetic_side_effects.rs:335:5\n    |\n LL |     _custom >>= &Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:318:5\n+  --> $DIR/arithmetic_side_effects.rs:336:5\n    |\n LL |     _custom <<= Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:319:5\n+  --> $DIR/arithmetic_side_effects.rs:337:5\n    |\n LL |     _custom <<= &Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:320:5\n+  --> $DIR/arithmetic_side_effects.rs:338:5\n    |\n LL |     _custom += -Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:321:5\n+  --> $DIR/arithmetic_side_effects.rs:339:5\n    |\n LL |     _custom += &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:322:5\n+  --> $DIR/arithmetic_side_effects.rs:340:5\n    |\n LL |     _custom -= -Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:323:5\n+  --> $DIR/arithmetic_side_effects.rs:341:5\n    |\n LL |     _custom -= &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:324:5\n+  --> $DIR/arithmetic_side_effects.rs:342:5\n    |\n LL |     _custom /= -Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:325:5\n+  --> $DIR/arithmetic_side_effects.rs:343:5\n    |\n LL |     _custom /= &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:326:5\n+  --> $DIR/arithmetic_side_effects.rs:344:5\n    |\n LL |     _custom %= -Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:327:5\n+  --> $DIR/arithmetic_side_effects.rs:345:5\n    |\n LL |     _custom %= &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:328:5\n+  --> $DIR/arithmetic_side_effects.rs:346:5\n    |\n LL |     _custom *= -Custom;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:329:5\n+  --> $DIR/arithmetic_side_effects.rs:347:5\n    |\n LL |     _custom *= &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:330:5\n+  --> $DIR/arithmetic_side_effects.rs:348:5\n    |\n LL |     _custom >>= -Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:331:5\n+  --> $DIR/arithmetic_side_effects.rs:349:5\n    |\n LL |     _custom >>= &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:332:5\n+  --> $DIR/arithmetic_side_effects.rs:350:5\n    |\n LL |     _custom <<= -Custom;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:333:5\n+  --> $DIR/arithmetic_side_effects.rs:351:5\n    |\n LL |     _custom <<= &-Custom;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:336:10\n+  --> $DIR/arithmetic_side_effects.rs:354:10\n    |\n LL |     _n = _n + 1;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:337:10\n+  --> $DIR/arithmetic_side_effects.rs:355:10\n    |\n LL |     _n = _n + &1;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:338:10\n+  --> $DIR/arithmetic_side_effects.rs:356:10\n    |\n LL |     _n = 1 + _n;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:339:10\n+  --> $DIR/arithmetic_side_effects.rs:357:10\n    |\n LL |     _n = &1 + _n;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:340:10\n+  --> $DIR/arithmetic_side_effects.rs:358:10\n    |\n LL |     _n = _n - 1;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:341:10\n+  --> $DIR/arithmetic_side_effects.rs:359:10\n    |\n LL |     _n = _n - &1;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:342:10\n+  --> $DIR/arithmetic_side_effects.rs:360:10\n    |\n LL |     _n = 1 - _n;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:343:10\n+  --> $DIR/arithmetic_side_effects.rs:361:10\n    |\n LL |     _n = &1 - _n;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:344:10\n+  --> $DIR/arithmetic_side_effects.rs:362:10\n    |\n LL |     _n = _n / 0;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:345:10\n+  --> $DIR/arithmetic_side_effects.rs:363:10\n    |\n LL |     _n = _n / &0;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:346:10\n+  --> $DIR/arithmetic_side_effects.rs:364:10\n    |\n LL |     _n = _n % 0;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:347:10\n+  --> $DIR/arithmetic_side_effects.rs:365:10\n    |\n LL |     _n = _n % &0;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:348:10\n+  --> $DIR/arithmetic_side_effects.rs:366:10\n    |\n LL |     _n = _n * 2;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:349:10\n+  --> $DIR/arithmetic_side_effects.rs:367:10\n    |\n LL |     _n = _n * &2;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:350:10\n+  --> $DIR/arithmetic_side_effects.rs:368:10\n    |\n LL |     _n = 2 * _n;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:351:10\n+  --> $DIR/arithmetic_side_effects.rs:369:10\n    |\n LL |     _n = &2 * _n;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:352:10\n+  --> $DIR/arithmetic_side_effects.rs:370:10\n    |\n LL |     _n = 23 + &85;\n    |          ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:353:10\n+  --> $DIR/arithmetic_side_effects.rs:371:10\n    |\n LL |     _n = &23 + 85;\n    |          ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:354:10\n+  --> $DIR/arithmetic_side_effects.rs:372:10\n    |\n LL |     _n = &23 + &85;\n    |          ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:355:15\n+  --> $DIR/arithmetic_side_effects.rs:373:15\n    |\n LL |     _custom = _custom + _custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:356:15\n+  --> $DIR/arithmetic_side_effects.rs:374:15\n    |\n LL |     _custom = _custom + &_custom;\n    |               ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:357:15\n+  --> $DIR/arithmetic_side_effects.rs:375:15\n    |\n LL |     _custom = Custom + _custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:358:15\n+  --> $DIR/arithmetic_side_effects.rs:376:15\n    |\n LL |     _custom = &Custom + _custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:359:15\n+  --> $DIR/arithmetic_side_effects.rs:377:15\n    |\n LL |     _custom = _custom - Custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:360:15\n+  --> $DIR/arithmetic_side_effects.rs:378:15\n    |\n LL |     _custom = _custom - &Custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:361:15\n+  --> $DIR/arithmetic_side_effects.rs:379:15\n    |\n LL |     _custom = Custom - _custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:362:15\n+  --> $DIR/arithmetic_side_effects.rs:380:15\n    |\n LL |     _custom = &Custom - _custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:363:15\n+  --> $DIR/arithmetic_side_effects.rs:381:15\n    |\n LL |     _custom = _custom / Custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:364:15\n+  --> $DIR/arithmetic_side_effects.rs:382:15\n    |\n LL |     _custom = _custom / &Custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:365:15\n+  --> $DIR/arithmetic_side_effects.rs:383:15\n    |\n LL |     _custom = _custom % Custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:366:15\n+  --> $DIR/arithmetic_side_effects.rs:384:15\n    |\n LL |     _custom = _custom % &Custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:367:15\n+  --> $DIR/arithmetic_side_effects.rs:385:15\n    |\n LL |     _custom = _custom * Custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:368:15\n+  --> $DIR/arithmetic_side_effects.rs:386:15\n    |\n LL |     _custom = _custom * &Custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:369:15\n+  --> $DIR/arithmetic_side_effects.rs:387:15\n    |\n LL |     _custom = Custom * _custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:370:15\n+  --> $DIR/arithmetic_side_effects.rs:388:15\n    |\n LL |     _custom = &Custom * _custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:371:15\n+  --> $DIR/arithmetic_side_effects.rs:389:15\n    |\n LL |     _custom = Custom + &Custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:372:15\n+  --> $DIR/arithmetic_side_effects.rs:390:15\n    |\n LL |     _custom = &Custom + Custom;\n    |               ^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:373:15\n+  --> $DIR/arithmetic_side_effects.rs:391:15\n    |\n LL |     _custom = &Custom + &Custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:374:15\n+  --> $DIR/arithmetic_side_effects.rs:392:15\n    |\n LL |     _custom = _custom >> _custom;\n    |               ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:375:15\n+  --> $DIR/arithmetic_side_effects.rs:393:15\n    |\n LL |     _custom = _custom >> &_custom;\n    |               ^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:376:15\n+  --> $DIR/arithmetic_side_effects.rs:394:15\n    |\n LL |     _custom = Custom << _custom;\n    |               ^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:377:15\n+  --> $DIR/arithmetic_side_effects.rs:395:15\n    |\n LL |     _custom = &Custom << _custom;\n    |               ^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:380:10\n+  --> $DIR/arithmetic_side_effects.rs:398:23\n+   |\n+LL |     _n.saturating_div(0);\n+   |                       ^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:399:21\n+   |\n+LL |     _n.wrapping_div(0);\n+   |                     ^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:400:21\n+   |\n+LL |     _n.wrapping_rem(0);\n+   |                     ^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:401:28\n+   |\n+LL |     _n.wrapping_rem_euclid(0);\n+   |                            ^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:403:23\n+   |\n+LL |     _n.saturating_div(_n);\n+   |                       ^^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:404:21\n+   |\n+LL |     _n.wrapping_div(_n);\n+   |                     ^^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:405:21\n+   |\n+LL |     _n.wrapping_rem(_n);\n+   |                     ^^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:406:28\n+   |\n+LL |     _n.wrapping_rem_euclid(_n);\n+   |                            ^^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:409:10\n    |\n LL |     _n = -_n;\n    |          ^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:381:10\n+  --> $DIR/arithmetic_side_effects.rs:410:10\n    |\n LL |     _n = -&_n;\n    |          ^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:382:15\n+  --> $DIR/arithmetic_side_effects.rs:411:15\n    |\n LL |     _custom = -_custom;\n    |               ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:383:15\n+  --> $DIR/arithmetic_side_effects.rs:412:15\n    |\n LL |     _custom = -&_custom;\n    |               ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:392:5\n+  --> $DIR/arithmetic_side_effects.rs:421:5\n    |\n LL |     1 + i;\n    |     ^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:393:5\n+  --> $DIR/arithmetic_side_effects.rs:422:5\n    |\n LL |     i * 2;\n    |     ^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:394:5\n+  --> $DIR/arithmetic_side_effects.rs:423:5\n    |\n LL |     1 % i / 2;\n    |     ^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:395:5\n+  --> $DIR/arithmetic_side_effects.rs:424:5\n    |\n LL |     i - 2 + 2 - i;\n    |     ^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:396:5\n+  --> $DIR/arithmetic_side_effects.rs:425:5\n    |\n LL |     -i;\n    |     ^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:407:5\n+  --> $DIR/arithmetic_side_effects.rs:436:5\n    |\n LL |     i += 1;\n    |     ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:408:5\n+  --> $DIR/arithmetic_side_effects.rs:437:5\n    |\n LL |     i -= 1;\n    |     ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:409:5\n+  --> $DIR/arithmetic_side_effects.rs:438:5\n    |\n LL |     i *= 2;\n    |     ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:411:5\n+  --> $DIR/arithmetic_side_effects.rs:440:5\n    |\n LL |     i /= 0;\n    |     ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:413:5\n+  --> $DIR/arithmetic_side_effects.rs:442:5\n    |\n LL |     i /= var1;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:414:5\n+  --> $DIR/arithmetic_side_effects.rs:443:5\n    |\n LL |     i /= var2;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:416:5\n+  --> $DIR/arithmetic_side_effects.rs:445:5\n    |\n LL |     i %= 0;\n    |     ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:418:5\n+  --> $DIR/arithmetic_side_effects.rs:447:5\n    |\n LL |     i %= var1;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:419:5\n+  --> $DIR/arithmetic_side_effects.rs:448:5\n    |\n LL |     i %= var2;\n    |     ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:429:5\n+  --> $DIR/arithmetic_side_effects.rs:458:5\n    |\n LL |     10 / a\n    |     ^^^^^^\n \n-error: aborting due to 109 previous errors\n+error: aborting due to 117 previous errors\n "}, {"sha": "890bf0b0a7eb29f39e6385d51a4428413b680244", "filename": "src/tools/clippy/tests/ui/as_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_conversions.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macros.rs\n+//@aux-build:proc_macros.rs\n \n #![warn(clippy::as_conversions)]\n #![allow(clippy::borrow_as_ptr)]"}, {"sha": "69af84a0eaec5b4f90ed1b262256f225fa7ab00f", "filename": "src/tools/clippy/tests/ui/as_underscore.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_underscore.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_underscore.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_underscore.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::as_underscore)]\n "}, {"sha": "a8cfb81d9a3f0b6b29408261ab5f097298aa726c", "filename": "src/tools/clippy/tests/ui/as_underscore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fas_underscore.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::as_underscore)]\n "}, {"sha": "c93995f939accd33d382f1e0f3b2cb3cf581a517", "filename": "src/tools/clippy/tests/ui/asm_syntax.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasm_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasm_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasm_syntax.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// only-x86_64\n-// ignore-aarch64\n+//@only-x86_64\n+//@ignore-aarch64\n \n #[warn(clippy::inline_asm_x86_intel_syntax)]\n mod warn_intel {"}, {"sha": "ea8b895664c49d451b19d19482f90f4c665e629c", "filename": "src/tools/clippy/tests/ui/assertions_on_result_states.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassertions_on_result_states.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassertions_on_result_states.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassertions_on_result_states.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::assertions_on_result_states)]\n \n use std::result::Result;"}, {"sha": "6fc20f8598872e011d76c9dc800c54799c9391fe", "filename": "src/tools/clippy/tests/ui/assertions_on_result_states.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassertions_on_result_states.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::assertions_on_result_states)]\n \n use std::result::Result;"}, {"sha": "b50682ea00c443dc38937556b42aa2d3bc6290f2", "filename": "src/tools/clippy/tests/ui/assign_ops.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassign_ops.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassign_ops.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassign_ops.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n use core::num::Wrapping;\n "}, {"sha": "780d2d040f12497b6bad8e3b9470ff8946b51e35", "filename": "src/tools/clippy/tests/ui/assign_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fassign_ops.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n use core::num::Wrapping;\n "}, {"sha": "8d9b023893f79bb64a6aa56abc689c09c95c42e4", "filename": "src/tools/clippy/tests/ui/async_yields_async.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(lint_reasons)]\n #![feature(async_closure)]\n #![warn(clippy::async_yields_async)]"}, {"sha": "bed79062f015e13dbb20d4eab510a45124894f71", "filename": "src/tools/clippy/tests/ui/async_yields_async.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(lint_reasons)]\n #![feature(async_closure)]\n #![warn(clippy::async_yields_async)]"}, {"sha": "164f7d0d9d6c521cb4c8c17c8f53e479854ae1d4", "filename": "src/tools/clippy/tests/ui/author/blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauthor%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauthor%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauthor%2Fblocks.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// edition:2018\n+//@edition:2018\n \n #![allow(redundant_semicolons, clippy::no_effect)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "92c47b41a38f9d77ee3c221cf19c8cbbc8143ceb", "filename": "src/tools/clippy/tests/ui/auxiliary/proc_macro_attr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n #![feature(repr128, proc_macro_hygiene, proc_macro_quote, box_patterns)]\n@@ -28,7 +28,7 @@ pub fn dummy(_args: TokenStream, input: TokenStream) -> TokenStream {\n pub fn fake_async_trait(_args: TokenStream, input: TokenStream) -> TokenStream {\n     let mut item = parse_macro_input!(input as ItemTrait);\n     for inner in &mut item.items {\n-        if let TraitItem::Method(method) = inner {\n+        if let TraitItem::Fn(method) = inner {\n             let sig = &method.sig;\n             let block = &mut method.default;\n             if let Some(block) = block {\n@@ -70,7 +70,7 @@ pub fn rename_my_lifetimes(_args: TokenStream, input: TokenStream) -> TokenStrea\n \n     // Look for methods having arbitrary self type taken by &mut ref\n     for inner in &mut item.items {\n-        if let ImplItem::Method(method) = inner {\n+        if let ImplItem::Fn(method) = inner {\n             if let Some(FnArg::Typed(pat_type)) = mut_receiver_of(&mut method.sig) {\n                 if let box Type::Reference(reference) = &mut pat_type.ty {\n                     // Target only unnamed lifetimes"}, {"sha": "5a924ca1830a446fe53934b73c1295915cfd6064", "filename": "src/tools/clippy/tests/ui/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 74, "deletions": 3, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n #![feature(repr128, proc_macro_quote)]\n@@ -9,7 +9,7 @@\n \n extern crate proc_macro;\n \n-use proc_macro::{quote, TokenStream};\n+use proc_macro::{quote, Delimiter, Group, Ident, Literal, Punct, Spacing, Span, TokenStream, TokenTree};\n \n #[proc_macro_derive(DeriveSomething)]\n pub fn derive(_: TokenStream) -> TokenStream {\n@@ -86,3 +86,74 @@ pub fn extra_lifetime(_input: TokenStream) -> TokenStream {\n         }\n     )\n }\n+\n+#[allow(unused)]\n+#[proc_macro_derive(ArithmeticDerive)]\n+pub fn arithmetic_derive(_: TokenStream) -> TokenStream {\n+    <TokenStream as FromIterator<TokenTree>>::from_iter(\n+        [\n+            Ident::new(\"fn\", Span::call_site()).into(),\n+            Ident::new(\"_foo\", Span::call_site()).into(),\n+            Group::new(Delimiter::Parenthesis, TokenStream::new()).into(),\n+            Group::new(\n+                Delimiter::Brace,\n+                <TokenStream as FromIterator<TokenTree>>::from_iter(\n+                    [\n+                        Ident::new(\"let\", Span::call_site()).into(),\n+                        Ident::new(\"mut\", Span::call_site()).into(),\n+                        Ident::new(\"_n\", Span::call_site()).into(),\n+                        Punct::new('=', Spacing::Alone).into(),\n+                        Literal::i32_unsuffixed(9).into(),\n+                        Punct::new(';', Spacing::Alone).into(),\n+                        Ident::new(\"_n\", Span::call_site()).into(),\n+                        Punct::new('=', Spacing::Alone).into(),\n+                        Literal::i32_unsuffixed(9).into(),\n+                        Punct::new('/', Spacing::Alone).into(),\n+                        Literal::i32_unsuffixed(2).into(),\n+                        Punct::new(';', Spacing::Alone).into(),\n+                        Ident::new(\"_n\", Span::call_site()).into(),\n+                        Punct::new('=', Spacing::Alone).into(),\n+                        Punct::new('-', Spacing::Alone).into(),\n+                        Ident::new(\"_n\", Span::call_site()).into(),\n+                        Punct::new(';', Spacing::Alone).into(),\n+                    ]\n+                    .into_iter(),\n+                ),\n+            )\n+            .into(),\n+        ]\n+        .into_iter(),\n+    )\n+}\n+\n+#[allow(unused)]\n+#[proc_macro_derive(ShadowDerive)]\n+pub fn shadow_derive(_: TokenStream) -> TokenStream {\n+    <TokenStream as FromIterator<TokenTree>>::from_iter(\n+        [\n+            Ident::new(\"fn\", Span::call_site()).into(),\n+            Ident::new(\"_foo\", Span::call_site()).into(),\n+            Group::new(Delimiter::Parenthesis, TokenStream::new()).into(),\n+            Group::new(\n+                Delimiter::Brace,\n+                <TokenStream as FromIterator<TokenTree>>::from_iter(\n+                    [\n+                        Ident::new(\"let\", Span::call_site()).into(),\n+                        Ident::new(\"_x\", Span::call_site()).into(),\n+                        Punct::new('=', Spacing::Alone).into(),\n+                        Literal::i32_unsuffixed(2).into(),\n+                        Punct::new(';', Spacing::Alone).into(),\n+                        Ident::new(\"let\", Span::call_site()).into(),\n+                        Ident::new(\"_x\", Span::call_site()).into(),\n+                        Punct::new('=', Spacing::Alone).into(),\n+                        Ident::new(\"_x\", Span::call_site()).into(),\n+                        Punct::new(';', Spacing::Alone).into(),\n+                    ]\n+                    .into_iter(),\n+                ),\n+            )\n+            .into(),\n+        ]\n+        .into_iter(),\n+    )\n+}"}, {"sha": "f13b76e44b04fee74cb23c1f6a0836fa0dd9c283", "filename": "src/tools/clippy/tests/ui/auxiliary/proc_macro_suspicious_else_formatting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_suspicious_else_formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_suspicious_else_formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_suspicious_else_formatting.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n "}, {"sha": "c2326678d0d52b88e09b224984b76b56dc4143d3", "filename": "src/tools/clippy/tests/ui/auxiliary/proc_macro_unsafe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_unsafe.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n "}, {"sha": "94f075ed09cceba505f03c27afcba9a6a7d4a021", "filename": "src/tools/clippy/tests/ui/auxiliary/proc_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macros.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n #![feature(let_chains)]"}, {"sha": "ea2dc2e22932744698d499e427c2c0e2978c0413", "filename": "src/tools/clippy/tests/ui/bind_instead_of_map.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::bind_instead_of_map)]\n #![allow(clippy::uninlined_format_args)]\n "}, {"sha": "1db58dae53860f574a4d1c5021c1a57fa528196c", "filename": "src/tools/clippy/tests/ui/bind_instead_of_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::bind_instead_of_map)]\n #![allow(clippy::uninlined_format_args)]\n "}, {"sha": "63c7aafcddb2c5508ea2cdbb01f2a67424ce008f", "filename": "src/tools/clippy/tests/ui/bind_instead_of_map_multipart.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map_multipart.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map_multipart.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map_multipart.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::bind_instead_of_map)]\n #![allow(clippy::blocks_in_if_conditions)]\n "}, {"sha": "69b982fa8a21b6c8747e57f37fcf3a656c1b0b88", "filename": "src/tools/clippy/tests/ui/bind_instead_of_map_multipart.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map_multipart.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map_multipart.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbind_instead_of_map_multipart.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![deny(clippy::bind_instead_of_map)]\n #![allow(clippy::blocks_in_if_conditions)]\n "}, {"sha": "e1ff25c54cfcbaa2e043fee7d2eb01637ea208ec", "filename": "src/tools/clippy/tests/ui/blanket_clippy_restriction_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblanket_clippy_restriction_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblanket_clippy_restriction_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblanket_clippy_restriction_lints.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -W clippy::restriction\n+//@compile-flags: -W clippy::restriction\n \n #![warn(clippy::blanket_clippy_restriction_lints)]\n "}, {"sha": "a9f18782e58b75ea68018ae28ce51e7c8a5d9d61", "filename": "src/tools/clippy/tests/ui/blocks_in_if_conditions.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblocks_in_if_conditions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblocks_in_if_conditions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblocks_in_if_conditions.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::blocks_in_if_conditions)]\n #![allow(unused, clippy::let_and_return)]\n #![warn(clippy::nonminimal_bool)]"}, {"sha": "0a70317c4d40807db418e655f6b54b8147dbaab3", "filename": "src/tools/clippy/tests/ui/blocks_in_if_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblocks_in_if_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblocks_in_if_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fblocks_in_if_conditions.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::blocks_in_if_conditions)]\n #![allow(unused, clippy::let_and_return)]\n #![warn(clippy::nonminimal_bool)]"}, {"sha": "53f63444aefe2bf16a97958bfe66eeb7d52ff038", "filename": "src/tools/clippy/tests/ui/bool_assert_comparison.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_assert_comparison.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_assert_comparison.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_assert_comparison.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused, clippy::assertions_on_constants)]\n #![warn(clippy::bool_assert_comparison)]"}, {"sha": "151d93a9233b1220174a9144757c4c1911bcd828", "filename": "src/tools/clippy/tests/ui/bool_assert_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_assert_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_assert_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_assert_comparison.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused, clippy::assertions_on_constants)]\n #![warn(clippy::bool_assert_comparison)]"}, {"sha": "670eef6a21d7e52ba9aef103a1aab9d7ccee9bfa", "filename": "src/tools/clippy/tests/ui/bool_comparison.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_comparison.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_comparison.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_comparison.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::bool_comparison)]\n "}, {"sha": "72851be635d0ef90259dded2ae741c265deef698", "filename": "src/tools/clippy/tests/ui/bool_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_comparison.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::bool_comparison)]\n "}, {"sha": "9831c3373d4556712f13884d56e5549dd9af9f5d", "filename": "src/tools/clippy/tests/ui/bool_to_int_with_if.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_to_int_with_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_to_int_with_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_to_int_with_if.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![feature(let_chains)]\n #![warn(clippy::bool_to_int_with_if)]"}, {"sha": "5e3047bb32c62caff4a9233e3861bf0e75353e73", "filename": "src/tools/clippy/tests/ui/bool_to_int_with_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_to_int_with_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_to_int_with_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbool_to_int_with_if.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![feature(let_chains)]\n #![warn(clippy::bool_to_int_with_if)]"}, {"sha": "3f440ce0045a9ef01f83635b6902a8f41f779df5", "filename": "src/tools/clippy/tests/ui/borrow_as_ptr.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::borrow_as_ptr)]\n \n fn main() {"}, {"sha": "c1ca9180eef42984c2b835f573576073a7dba536", "filename": "src/tools/clippy/tests/ui/borrow_as_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::borrow_as_ptr)]\n \n fn main() {"}, {"sha": "10f2727c793cd813c1cbe3436925ef507618025f", "filename": "src/tools/clippy/tests/ui/borrow_as_ptr_no_std.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr_no_std.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr_no_std.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr_no_std.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::borrow_as_ptr)]\n #![feature(lang_items, start, libc)]\n #![no_std]"}, {"sha": "311e9341aac25ed17e7c14478188f255f557ccc7", "filename": "src/tools/clippy/tests/ui/borrow_as_ptr_no_std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr_no_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr_no_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_as_ptr_no_std.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::borrow_as_ptr)]\n #![feature(lang_items, start, libc)]\n #![no_std]"}, {"sha": "165e4bc8272392e8acde5e48b9ea301c4e9cfe46", "filename": "src/tools/clippy/tests/ui/borrow_deref_ref.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_deref_ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_deref_ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_deref_ref.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(dead_code, unused_variables)]\n "}, {"sha": "66c8d69bef98384982f34da92813d538ef789e10", "filename": "src/tools/clippy/tests/ui/borrow_deref_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_deref_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_deref_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_deref_ref.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(dead_code, unused_variables)]\n "}, {"sha": "29b08ab36430d4c7ba11dc57dd0c742e274ff0a6", "filename": "src/tools/clippy/tests/ui/borrow_interior_mutable_const/enums.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const%2Fenums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const%2Fenums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const%2Fenums.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:helper.rs\n+//@aux-build:helper.rs\n \n #![warn(clippy::borrow_interior_mutable_const)]\n #![allow(clippy::declare_interior_mutable_const)]"}, {"sha": "6afce2087697f0d9557aed6a2a044e0d651d68fe", "filename": "src/tools/clippy/tests/ui/box_default.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbox_default.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbox_default.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbox_default.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::box_default)]\n \n #[derive(Default)]"}, {"sha": "09365618e63361e10f8c1220997b65c234e102b5", "filename": "src/tools/clippy/tests/ui/box_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbox_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbox_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbox_default.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::box_default)]\n \n #[derive(Default)]"}, {"sha": "fb3d521badd52acbe36849711f212eac07f2ced0", "filename": "src/tools/clippy/tests/ui/bytes_count_to_len.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_count_to_len.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_count_to_len.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_count_to_len.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::bytes_count_to_len)]\n use std::fs::File;\n use std::io::Read;"}, {"sha": "8e256b8f0b8ab3ef8fce9bf7b4057716bb2a1a01", "filename": "src/tools/clippy/tests/ui/bytes_count_to_len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_count_to_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_count_to_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_count_to_len.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::bytes_count_to_len)]\n use std::fs::File;\n use std::io::Read;"}, {"sha": "d3e0f676b29f97141f81eec156e5948c4e7d96c1", "filename": "src/tools/clippy/tests/ui/bytes_nth.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_nth.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_nth.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_nth.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(clippy::unnecessary_operation)]\n #![warn(clippy::bytes_nth)]"}, {"sha": "b7d813fe296a9e75f42bab21763b3089e491a1c7", "filename": "src/tools/clippy/tests/ui/bytes_nth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_nth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_nth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fbytes_nth.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(clippy::unnecessary_operation)]\n #![warn(clippy::bytes_nth)]"}, {"sha": "d5af22aefe5df4de074b3d58dc361102a62ca9de", "filename": "src/tools/clippy/tests/ui/case_sensitive_file_extension_comparisons.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcase_sensitive_file_extension_comparisons.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcase_sensitive_file_extension_comparisons.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcase_sensitive_file_extension_comparisons.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::case_sensitive_file_extension_comparisons)]\n \n use std::string::String;"}, {"sha": "f5f0a0022a42a717032d8503309c11264c42ca93", "filename": "src/tools/clippy/tests/ui/case_sensitive_file_extension_comparisons.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::case_sensitive_file_extension_comparisons)]\n \n use std::string::String;"}, {"sha": "ef0a93b01d1f642022167fd24255efbdc9372433", "filename": "src/tools/clippy/tests/ui/cast_abs_to_unsigned.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_abs_to_unsigned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_abs_to_unsigned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_abs_to_unsigned.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::cast_abs_to_unsigned)]\n #![allow(clippy::uninlined_format_args, unused)]"}, {"sha": "96ced670a0559f58e3fb68c4a07cb79f46e8109b", "filename": "src/tools/clippy/tests/ui/cast_abs_to_unsigned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_abs_to_unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_abs_to_unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_abs_to_unsigned.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::cast_abs_to_unsigned)]\n #![allow(clippy::uninlined_format_args, unused)]"}, {"sha": "c321cc644378424a001aaa5a596f09fb988922b4", "filename": "src/tools/clippy/tests/ui/cast_lossless_bool.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_bool.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_bool.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_bool.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(dead_code)]\n #![warn(clippy::cast_lossless)]"}, {"sha": "632a718920d4196ddbbb40f5bd2a0cc5d957c54a", "filename": "src/tools/clippy/tests/ui/cast_lossless_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_bool.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(dead_code)]\n #![warn(clippy::cast_lossless)]"}, {"sha": "e72a0096acce757a521bbaa55ea0b85663fffd2f", "filename": "src/tools/clippy/tests/ui/cast_lossless_float.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_float.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_float.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_float.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(clippy::no_effect, clippy::unnecessary_operation, dead_code)]\n #![warn(clippy::cast_lossless)]"}, {"sha": "dbcbaa9b81500e78a21ce6807f3476347684f172", "filename": "src/tools/clippy/tests/ui/cast_lossless_float.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_float.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(clippy::no_effect, clippy::unnecessary_operation, dead_code)]\n #![warn(clippy::cast_lossless)]"}, {"sha": "7dab02084fc9d948c8926dd6561b3a7f33a0acc3", "filename": "src/tools/clippy/tests/ui/cast_lossless_integer.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_integer.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_integer.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_integer.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(clippy::no_effect, clippy::unnecessary_operation, dead_code)]\n #![warn(clippy::cast_lossless)]"}, {"sha": "c24f73960b03fec6eb6a8225423725b72509f5e8", "filename": "src/tools/clippy/tests/ui/cast_lossless_integer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_lossless_integer.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(clippy::no_effect, clippy::unnecessary_operation, dead_code)]\n #![warn(clippy::cast_lossless)]"}, {"sha": "9b6fee270ee9b8c756b040ebd5bc05cd24fe221a", "filename": "src/tools/clippy/tests/ui/cast_raw_slice_pointer_cast.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_raw_slice_pointer_cast.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_raw_slice_pointer_cast.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_raw_slice_pointer_cast.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::cast_slice_from_raw_parts)]\n \n #[allow(unused_imports, unused_unsafe)]"}, {"sha": "c0bb81379905c740d340e1e7715654bc1420bdfe", "filename": "src/tools/clippy/tests/ui/cast_raw_slice_pointer_cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_raw_slice_pointer_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_raw_slice_pointer_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_raw_slice_pointer_cast.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::cast_slice_from_raw_parts)]\n \n #[allow(unused_imports, unused_unsafe)]"}, {"sha": "cd2184aea382a97828ea3cc7532251d7b4657371", "filename": "src/tools/clippy/tests/ui/cast_size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-32bit\n+//@ignore-32bit\n #[warn(\n     clippy::cast_precision_loss,\n     clippy::cast_possible_truncation,"}, {"sha": "7ca20d3ca4a76a035ff7ba62d1953f17e6a38c41", "filename": "src/tools/clippy/tests/ui/cast_size_32bit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size_32bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size_32bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size_32bit.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-64bit\n+//@ignore-64bit\n #[warn(\n     clippy::cast_precision_loss,\n     clippy::cast_possible_truncation,"}, {"sha": "fb51783a48788b6c7f16b84844f81772c7086e13", "filename": "src/tools/clippy/tests/ui/cast_size_32bit.stderr", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size_32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size_32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcast_size_32bit.stderr?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -4,7 +4,12 @@ error: casting `isize` to `i8` may truncate the value\n LL |     1isize as i8;\n    |     ^^^^^^^^^^^^\n    |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     i8::try_from(1isize);\n+   |     ~~~~~~~~~~~~~~~~~~~~\n \n error: casting `isize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`isize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\n   --> $DIR/cast_size_32bit.rs:15:5\n@@ -37,24 +42,48 @@ error: casting `isize` to `i32` may truncate the value on targets with 64-bit wi\n    |\n LL |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     i32::try_from(1isize);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `isize` to `u32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:20:5\n    |\n LL |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     u32::try_from(1isize);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:21:5\n    |\n LL |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     u32::try_from(1usize);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:22:5\n    |\n LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     i32::try_from(1usize);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:22:5\n@@ -69,18 +98,36 @@ error: casting `i64` to `isize` may truncate the value on targets with 32-bit wi\n    |\n LL |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     isize::try_from(1i64);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:25:5\n    |\n LL |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     usize::try_from(1i64);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:26:5\n    |\n LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     isize::try_from(1u64);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:26:5\n@@ -93,6 +140,12 @@ error: casting `u64` to `usize` may truncate the value on targets with 32-bit wi\n    |\n LL |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n+   |\n+   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...\n+help: ... or use `try_from` and handle the error accordingly\n+   |\n+LL |     usize::try_from(1u64);\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n \n error: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:28:5"}, {"sha": "13aadb7d3308feada0d96248e70463207239946c", "filename": "src/tools/clippy/tests/ui/cfg_attr_rustfmt.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcfg_attr_rustfmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcfg_attr_rustfmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcfg_attr_rustfmt.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(stmt_expr_attributes)]\n \n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]"}, {"sha": "769c5d22b9da0b1c3ff0aaec8b124496d18807e3", "filename": "src/tools/clippy/tests/ui/cfg_attr_rustfmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcfg_attr_rustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcfg_attr_rustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcfg_attr_rustfmt.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(stmt_expr_attributes)]\n \n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]"}, {"sha": "ce2f149dc05e4a41cf1c07be99e5babc30524d00", "filename": "src/tools/clippy/tests/ui/char_lit_as_u8_suggestions.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchar_lit_as_u8_suggestions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchar_lit_as_u8_suggestions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchar_lit_as_u8_suggestions.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::char_lit_as_u8)]\n "}, {"sha": "ffad12fc6f9502f8ad5466fb0cc35ae7f71c7e27", "filename": "src/tools/clippy/tests/ui/char_lit_as_u8_suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchar_lit_as_u8_suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchar_lit_as_u8_suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchar_lit_as_u8_suggestions.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::char_lit_as_u8)]\n "}, {"sha": "188e6d975952eb2906d786aae17b9e01951ec8e1", "filename": "src/tools/clippy/tests/ui/checked_conversions.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchecked_conversions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchecked_conversions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchecked_conversions.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(\n     clippy::cast_lossless,"}, {"sha": "70f0f0975acd9da1c665f19f6bd990ad3198fd92", "filename": "src/tools/clippy/tests/ui/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fchecked_conversions.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(\n     clippy::cast_lossless,"}, {"sha": "b68c7d867ec65883adc47120e97cd57ae3624b54", "filename": "src/tools/clippy/tests/ui/clear_with_drain.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclear_with_drain.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclear_with_drain.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclear_with_drain.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused)]\n #![warn(clippy::clear_with_drain)]\n "}, {"sha": "0f6562ecad5a2a53a8faf9f415b0c2e4e5ac1b40", "filename": "src/tools/clippy/tests/ui/clear_with_drain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclear_with_drain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclear_with_drain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclear_with_drain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused)]\n #![warn(clippy::clear_with_drain)]\n "}, {"sha": "a720711585bbb1857d471c9cd8088dca11600f06", "filename": "src/tools/clippy/tests/ui/clone_on_copy.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclone_on_copy.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclone_on_copy.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclone_on_copy.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(\n     unused,"}, {"sha": "2c5fac8faf56b16864cc8e8f465d8e2daca78126", "filename": "src/tools/clippy/tests/ui/clone_on_copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclone_on_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclone_on_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fclone_on_copy.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(\n     unused,"}, {"sha": "b6e09ab3190866a20e08dd358028b826a1e50f41", "filename": "src/tools/clippy/tests/ui/cloned_instead_of_copied.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcloned_instead_of_copied.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcloned_instead_of_copied.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcloned_instead_of_copied.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::cloned_instead_of_copied)]\n #![allow(unused)]"}, {"sha": "fa9e1a996139d87a06264df539908a34617d1b41", "filename": "src/tools/clippy/tests/ui/cloned_instead_of_copied.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcloned_instead_of_copied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcloned_instead_of_copied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcloned_instead_of_copied.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::cloned_instead_of_copied)]\n #![allow(unused)]"}, {"sha": "3bf3deb9b91820dd6b0182958e93b8ab0eb3e0a7", "filename": "src/tools/clippy/tests/ui/cmp_owned/asymmetric_partial_eq.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fasymmetric_partial_eq.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fasymmetric_partial_eq.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fasymmetric_partial_eq.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused, clippy::redundant_clone, clippy::derive_partial_eq_without_eq)] // See #5700\n \n // Define the types in each module to avoid trait impls leaking between modules."}, {"sha": "10107dc8f86d33eae383361ac99dc7eb233a0c06", "filename": "src/tools/clippy/tests/ui/cmp_owned/asymmetric_partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fasymmetric_partial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fasymmetric_partial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fasymmetric_partial_eq.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused, clippy::redundant_clone, clippy::derive_partial_eq_without_eq)] // See #5700\n \n // Define the types in each module to avoid trait impls leaking between modules."}, {"sha": "b1133f2a59f74b130d565ff6ed64bca5424902ce", "filename": "src/tools/clippy/tests/ui/cmp_owned/comparison_flip.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fcomparison_flip.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fcomparison_flip.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fcomparison_flip.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n use std::fmt::{self, Display};\n "}, {"sha": "091a9aa65c0acc887b99d2bdb4a0bf8e1b5dc57b", "filename": "src/tools/clippy/tests/ui/cmp_owned/comparison_flip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fcomparison_flip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fcomparison_flip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fcomparison_flip.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n use std::fmt::{self, Display};\n "}, {"sha": "76f90ab2a9d1106512375ef26465bc630e5cb33c", "filename": "src/tools/clippy/tests/ui/cmp_owned/with_suggestion.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fwith_suggestion.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fwith_suggestion.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fwith_suggestion.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #[warn(clippy::cmp_owned)]\n #[allow(clippy::unnecessary_operation, clippy::no_effect, unused_must_use, clippy::eq_op)]"}, {"sha": "f3f663670eb1857b5c2423f6981bc822325171a4", "filename": "src/tools/clippy/tests/ui/cmp_owned/with_suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fwith_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fwith_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcmp_owned%2Fwith_suggestion.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #[warn(clippy::cmp_owned)]\n #[allow(clippy::unnecessary_operation, clippy::no_effect, unused_must_use, clippy::eq_op)]"}, {"sha": "8302cec45e781b5ac7bcf93c1b172954d34d2fd1", "filename": "src/tools/clippy/tests/ui/collapsible_else_if.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_else_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_else_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_else_if.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(clippy::assertions_on_constants, clippy::equatable_if_let)]\n \n #[rustfmt::skip]"}, {"sha": "5913dcf41cafc9fad95855f1136e3945e33e801a", "filename": "src/tools/clippy/tests/ui/collapsible_else_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_else_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_else_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_else_if.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(clippy::assertions_on_constants, clippy::equatable_if_let)]\n \n #[rustfmt::skip]"}, {"sha": "d2aba2ac59b8a7376f2f1e078003ffb8a19576a1", "filename": "src/tools/clippy/tests/ui/collapsible_if.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_if.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(clippy::assertions_on_constants, clippy::equatable_if_let)]\n \n #[rustfmt::skip]"}, {"sha": "e0bef7f9c970d1e00f5868094360b96bc7323d98", "filename": "src/tools/clippy/tests/ui/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_if.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(clippy::assertions_on_constants, clippy::equatable_if_let)]\n \n #[rustfmt::skip]"}, {"sha": "ba6c1769a9a38fb76b54a02780b17fd513b1ec36", "filename": "src/tools/clippy/tests/ui/collapsible_str_replace.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_str_replace.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_str_replace.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_str_replace.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused)]\n #![warn(clippy::collapsible_str_replace)]"}, {"sha": "f5871be65be12b2b1bb35b4f16e10fc2e41c765d", "filename": "src/tools/clippy/tests/ui/collapsible_str_replace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_str_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_str_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollapsible_str_replace.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused)]\n #![warn(clippy::collapsible_str_replace)]"}, {"sha": "2c1a42a72c149c2f4251e5962ce2746de0ecd8ae", "filename": "src/tools/clippy/tests/ui/collection_is_never_read.rs", "status": "modified", "additions": 31, "deletions": 18, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollection_is_never_read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollection_is_never_read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollection_is_never_read.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -169,22 +169,35 @@ fn function_argument() {\n     foo(&x);\n }\n \n-fn string() {\n-    // Do lint (write without read)\n-    let mut s = String::new();\n-    s.push_str(\"Hello, World!\");\n-\n-    // Do not lint (read without write)\n-    let mut s = String::from(\"Hello, World!\");\n-    let _ = s.len();\n-\n-    // Do not lint (write and read)\n-    let mut s = String::from(\"Hello, World!\");\n-    s.push_str(\"foo, bar\");\n-    let _ = s.len();\n-\n-    // Do lint the first line, but not the second\n-    let mut s = String::from(\"Hello, World!\");\n-    let t = String::from(\"foo, bar\");\n-    s = t;\n+fn supported_types() {\n+    let mut x = std::collections::BTreeMap::new(); // WARNING\n+    x.insert(true, 1);\n+\n+    let mut x = std::collections::BTreeSet::new(); // WARNING\n+    x.insert(1);\n+\n+    let mut x = std::collections::BinaryHeap::new(); // WARNING\n+    x.push(1);\n+\n+    let mut x = std::collections::HashMap::new(); // WARNING\n+    x.insert(1, 2);\n+\n+    let mut x = std::collections::HashSet::new(); // WARNING\n+    x.insert(1);\n+\n+    let mut x = std::collections::LinkedList::new(); // WARNING\n+    x.push_front(1);\n+\n+    let mut x = Some(true); // WARNING\n+    x.insert(false);\n+\n+    let mut x = String::from(\"hello\"); // WARNING\n+    x.push('!');\n+\n+    let mut x = Vec::new(); // WARNING\n+    x.clear();\n+    x.push(1);\n+\n+    let mut x = std::collections::VecDeque::new(); // WARNING\n+    x.push_front(1);\n }"}, {"sha": "982cb445534a2c867919d9a2224d2a2827becc89", "filename": "src/tools/clippy/tests/ui/collection_is_never_read.stderr", "status": "modified", "additions": 55, "deletions": 7, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollection_is_never_read.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollection_is_never_read.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcollection_is_never_read.stderr?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -61,16 +61,64 @@ LL |     let x = vec![1, 2, 3]; // WARNING\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: collection is never read\n-  --> $DIR/collection_is_never_read.rs:174:5\n+  --> $DIR/collection_is_never_read.rs:173:5\n    |\n-LL |     let mut s = String::new();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let mut x = std::collections::BTreeMap::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:176:5\n+   |\n+LL |     let mut x = std::collections::BTreeSet::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:179:5\n+   |\n+LL |     let mut x = std::collections::BinaryHeap::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:182:5\n+   |\n+LL |     let mut x = std::collections::HashMap::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:185:5\n+   |\n+LL |     let mut x = std::collections::HashSet::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:188:5\n+   |\n+LL |     let mut x = std::collections::LinkedList::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:191:5\n+   |\n+LL |     let mut x = Some(true); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:194:5\n+   |\n+LL |     let mut x = String::from(\"hello\"); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: collection is never read\n+  --> $DIR/collection_is_never_read.rs:197:5\n+   |\n+LL |     let mut x = Vec::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: collection is never read\n-  --> $DIR/collection_is_never_read.rs:187:5\n+  --> $DIR/collection_is_never_read.rs:201:5\n    |\n-LL |     let mut s = String::from(\"Hello, World!\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let mut x = std::collections::VecDeque::new(); // WARNING\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 20 previous errors\n "}, {"sha": "dd2615ab25cf1c5777d96277be2584060d6098e1", "filename": "src/tools/clippy/tests/ui/comparison_to_empty.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcomparison_to_empty.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcomparison_to_empty.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcomparison_to_empty.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::comparison_to_empty)]\n "}, {"sha": "5462784c6ac8ae26e4c80362e62c79d7dab5f3ac", "filename": "src/tools/clippy/tests/ui/comparison_to_empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcomparison_to_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcomparison_to_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcomparison_to_empty.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::comparison_to_empty)]\n "}, {"sha": "66419656a327a93f467679c28d386c686940e254", "filename": "src/tools/clippy/tests/ui/crashes/auxiliary/proc_macro_crash.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fauxiliary%2Fproc_macro_crash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fauxiliary%2Fproc_macro_crash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fauxiliary%2Fproc_macro_crash.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: --emit=link\n-// no-prefer-dynamic\n+//@compile-flags: --emit=link\n+//@no-prefer-dynamic\n // ^ compiletest by default builds all aux files as dylibs, but we don't want that for proc-macro\n // crates. If we don't set this, compiletest will override the `crate_type` attribute below and\n // compile this as dylib. Removing this then causes the test to fail because a `dylib` crate can't"}, {"sha": "c7f0224820ed084b0cbeb0d0abbf1b451e73e06b", "filename": "src/tools/clippy/tests/ui/crashes/ice-10148.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-10148.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-10148.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-10148.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:../../auxiliary/proc_macros.rs\n+//@aux-build:../../auxiliary/proc_macros.rs\n \n extern crate proc_macros;\n "}, {"sha": "3106a2e721694c732221cd4b5483ca6789f26274", "filename": "src/tools/clippy/tests/ui/crashes/ice-3741.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-3741.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-3741.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-3741.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macro_crash.rs\n+//@aux-build:proc_macro_crash.rs\n \n #![warn(clippy::suspicious_else_formatting)]\n "}, {"sha": "ac724ac93e3f24c889773be03fc62d65a80613ae", "filename": "src/tools/clippy/tests/ui/crashes/ice-4968.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-4968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-4968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-4968.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// check-pass\n+//@check-pass\n \n // Test for https://github.com/rust-lang/rust-clippy/issues/4968\n "}, {"sha": "59146c23e0d571522f728ec7485c656e92c5f441", "filename": "src/tools/clippy/tests/ui/crashes/ice-5207.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-5207.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-5207.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-5207.stderr?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-warning: future cannot be sent between threads safely\n+error: future cannot be sent between threads safely\n   --> $DIR/ice-5207.rs:6:35\n    |\n LL | pub async fn bar<'a, T: 'a>(_: T) {}\n@@ -12,5 +12,5 @@ LL | pub async fn bar<'a, T: 'a>(_: T) {}\n    = note: `T` doesn't implement `std::marker::Send`\n    = note: `-D clippy::future-not-send` implied by `-D warnings`\n \n-warning: 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "e949038c8d0b1d1793e919ab453e3bb2424dfc30", "filename": "src/tools/clippy/tests/ui/crashes/ice-7272.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7272.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:ice-7272-aux.rs\n+//@aux-build:ice-7272-aux.rs\n \n #![allow(clippy::no_effect)]\n "}, {"sha": "ffe20ab1c3101d9c1166caa04cb4b9346807fda3", "filename": "src/tools/clippy/tests/ui/crashes/ice-7410.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7410.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7410.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-7410.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,6 +1,6 @@\n-// compile-flags: -Clink-arg=-nostartfiles\n-// ignore-macos\n-// ignore-windows\n+//@compile-flags: -Clink-arg=-nostartfiles\n+//@ignore-macos\n+//@ignore-windows\n \n #![feature(lang_items, start, libc)]\n #![no_std]"}, {"sha": "607b9caa32491599cb8613e9f8f269a2c37d863e", "filename": "src/tools/clippy/tests/ui/crashes/ice-8681.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-8681.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-8681.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-8681.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build: ice-8681-aux.rs\n+//@aux-build: ice-8681-aux.rs\n \n #![warn(clippy::undocumented_unsafe_blocks)]\n "}, {"sha": "12a7b9470b31520d309da85ef7aed6d33e1e6b68", "filename": "src/tools/clippy/tests/ui/crate_in_macro_def.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_in_macro_def.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_in_macro_def.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_in_macro_def.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::crate_in_macro_def)]\n \n mod hygienic {"}, {"sha": "a1a9eabf639bf32a3f52f88c7c483aaaebcadb3c", "filename": "src/tools/clippy/tests/ui/crate_in_macro_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_in_macro_def.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::crate_in_macro_def)]\n \n mod hygienic {"}, {"sha": "d6cd594d7c9711898bf75956e086bf63003a0b02", "filename": "src/tools/clippy/tests/ui/crate_level_checks/entrypoint_recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-macos\n+//@ignore-macos\n \n #![feature(rustc_attrs)]\n "}, {"sha": "a382135bb69514accfff88fa64bda76001d1f5f4", "filename": "src/tools/clippy/tests/ui/crate_level_checks/no_std_main_recursion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fno_std_main_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fno_std_main_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fno_std_main_recursion.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: -Clink-arg=-nostartfiles\n-// ignore-macos\n+//@compile-flags: -Clink-arg=-nostartfiles\n+//@ignore-macos\n \n #![feature(lang_items, start, libc)]\n #![no_std]"}, {"sha": "5de3e9fea0bca6e2e71918ad3e6dcb6fce30df65", "filename": "src/tools/clippy/tests/ui/create_dir.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcreate_dir.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcreate_dir.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcreate_dir.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused_must_use)]\n #![warn(clippy::create_dir)]\n "}, {"sha": "d375bfb4a688ce52cc066eed606c87c82342bc0e", "filename": "src/tools/clippy/tests/ui/create_dir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcreate_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcreate_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcreate_dir.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(unused_must_use)]\n #![warn(clippy::create_dir)]\n "}, {"sha": "8701e3cd29f470e02e2a78c6148a79e9e2818498", "filename": "src/tools/clippy/tests/ui/dbg_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdbg_macro.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --test\n+//@compile-flags: --test\n #![warn(clippy::dbg_macro)]\n \n fn foo(n: u32) -> u32 {"}, {"sha": "a6eb8c214578fed56139693cd38e737fdb8ceb91", "filename": "src/tools/clippy/tests/ui/decimal_literal_representation.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdecimal_literal_representation.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdecimal_literal_representation.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdecimal_literal_representation.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #[warn(clippy::decimal_literal_representation)]\n #[allow(unused_variables)]"}, {"sha": "7c666d6d7a697bf2ed1b8fd1f5b825e813be22aa", "filename": "src/tools/clippy/tests/ui/decimal_literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdecimal_literal_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdecimal_literal_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdecimal_literal_representation.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #[warn(clippy::decimal_literal_representation)]\n #[allow(unused_variables)]"}, {"sha": "f7819068ac5ab236421d16e48652b7a377f44b0d", "filename": "src/tools/clippy/tests/ui/def_id_nocore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdef_id_nocore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdef_id_nocore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdef_id_nocore.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-macos\n+//@ignore-macos\n \n #![feature(no_core, lang_items, start)]\n #![no_core]"}, {"sha": "f44d34576f680704fe6612d1cdee7ba62b85141d", "filename": "src/tools/clippy/tests/ui/default_instead_of_iter_empty.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_instead_of_iter_empty.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_instead_of_iter_empty.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_instead_of_iter_empty.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::default_instead_of_iter_empty)]\n #![allow(dead_code)]\n use std::collections::HashMap;"}, {"sha": "1c649df253ccaeb8806ca88c110d67719320dd33", "filename": "src/tools/clippy/tests/ui/default_instead_of_iter_empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_instead_of_iter_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_instead_of_iter_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_instead_of_iter_empty.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::default_instead_of_iter_empty)]\n #![allow(dead_code)]\n use std::collections::HashMap;"}, {"sha": "9520efe6329b1888b7075e59ac1d533d86ee5d20", "filename": "src/tools/clippy/tests/ui/default_numeric_fallback_f64.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_f64.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_f64.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_f64.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![warn(clippy::default_numeric_fallback)]\n #![allow("}, {"sha": "cacbdb4a95bf45d420b07d2f8f4365bf5f0c4c10", "filename": "src/tools/clippy/tests/ui/default_numeric_fallback_f64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_f64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_f64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_f64.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![warn(clippy::default_numeric_fallback)]\n #![allow("}, {"sha": "fbabb8bcf8e339bce078fd609a6b4ffd74f8f230", "filename": "src/tools/clippy/tests/ui/default_numeric_fallback_i32.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_i32.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_i32.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_i32.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![feature(lint_reasons)]\n #![warn(clippy::default_numeric_fallback)]"}, {"sha": "7bfc390e4bfab7a12cf6275ea01bcf9a2fa64c0a", "filename": "src/tools/clippy/tests/ui/default_numeric_fallback_i32.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_i32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_i32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_numeric_fallback_i32.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![feature(lint_reasons)]\n #![warn(clippy::default_numeric_fallback)]"}, {"sha": "bf5dca976416da567cb55ccbc134a4baf84f5229", "filename": "src/tools/clippy/tests/ui/default_trait_access.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_trait_access.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_trait_access.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_trait_access.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build: proc_macros.rs\n+//@run-rustfix\n+//@aux-build: proc_macros.rs\n #![deny(clippy::default_trait_access)]\n #![allow(dead_code, unused_imports)]\n #![allow(clippy::uninlined_format_args)]"}, {"sha": "5e8e9ce85b1c5b7ce5928f9c93529a56a72bcbff", "filename": "src/tools/clippy/tests/ui/default_trait_access.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdefault_trait_access.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build: proc_macros.rs\n+//@run-rustfix\n+//@aux-build: proc_macros.rs\n #![deny(clippy::default_trait_access)]\n #![allow(dead_code, unused_imports)]\n #![allow(clippy::uninlined_format_args)]"}, {"sha": "b27d3bc100283692457125da94093389f5b0c8a2", "filename": "src/tools/clippy/tests/ui/deref_addrof.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![allow(clippy::return_self_not_must_use)]\n #![warn(clippy::deref_addrof)]"}, {"sha": "825090c7c122e821ddcc1458f226449bf2c54dce", "filename": "src/tools/clippy/tests/ui/deref_addrof.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![allow(clippy::return_self_not_must_use)]\n #![warn(clippy::deref_addrof)]"}, {"sha": "c7e60f36506030ae6a0874d45751b43598f017c8", "filename": "src/tools/clippy/tests/ui/deref_addrof_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof_macro.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macros.rs\n+//@aux-build:proc_macros.rs\n \n #![warn(clippy::deref_addrof)]\n "}, {"sha": "f91a425c65da49a4f7e90a5ae4fa418133f6db3a", "filename": "src/tools/clippy/tests/ui/deref_by_slicing.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_by_slicing.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_by_slicing.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_by_slicing.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::deref_by_slicing)]\n #![allow(clippy::borrow_deref_ref)]"}, {"sha": "1bfdd0a981ba27c7de971dd77e2de01809088ee6", "filename": "src/tools/clippy/tests/ui/deref_by_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_by_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_by_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_by_slicing.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::deref_by_slicing)]\n #![allow(clippy::borrow_deref_ref)]"}, {"sha": "aa0efb85c297a7a227d4827a61408b20c58fdd2f", "filename": "src/tools/clippy/tests/ui/derivable_impls.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderivable_impls.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderivable_impls.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderivable_impls.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(dead_code)]\n "}, {"sha": "8dc999ad58602a3bb393c4cd61460953106479fa", "filename": "src/tools/clippy/tests/ui/derivable_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderivable_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderivable_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderivable_impls.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(dead_code)]\n "}, {"sha": "a1f29430c30f2543be26dc2ae3939908957b0713", "filename": "src/tools/clippy/tests/ui/derive_partial_eq_without_eq.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderive_partial_eq_without_eq.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderive_partial_eq_without_eq.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderive_partial_eq_without_eq.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused)]\n #![warn(clippy::derive_partial_eq_without_eq)]"}, {"sha": "ff4d888559b730505406366b36198d70118d03d8", "filename": "src/tools/clippy/tests/ui/derive_partial_eq_without_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderive_partial_eq_without_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderive_partial_eq_without_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderive_partial_eq_without_eq.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused)]\n #![warn(clippy::derive_partial_eq_without_eq)]"}, {"sha": "d3aa2816cb6d375bab8defcab0c3c15c1654f0ea", "filename": "src/tools/clippy/tests/ui/doc/doc-fixable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc%2Fdoc-fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc%2Fdoc-fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc%2Fdoc-fixable.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n //! This file tests for the `DOC_MARKDOWN` lint.\n \n #![allow(dead_code, incomplete_features)]"}, {"sha": "d1e7d8017d7d1930bf52d908e6ced4fb579e5946", "filename": "src/tools/clippy/tests/ui/doc/doc-fixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc%2Fdoc-fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc%2Fdoc-fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc%2Fdoc-fixable.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n //! This file tests for the `DOC_MARKDOWN` lint.\n \n #![allow(dead_code, incomplete_features)]"}, {"sha": "0c8eac5ccffc3a6af5c987446f3d310af8bf5dde", "filename": "src/tools/clippy/tests/ui/doc_unsafe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdoc_unsafe.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macros.rs\n+//@aux-build:proc_macros.rs\n \n #![allow(clippy::let_unit_value)]\n "}, {"sha": "c80ff671a5db7bf47e84e4e780e1f4154ce7c2ea", "filename": "src/tools/clippy/tests/ui/double_comparison.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_comparison.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_comparison.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_comparison.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n fn main() {\n     let x = 1;"}, {"sha": "bc78694aa68066748d78090fe07c263b69204c5a", "filename": "src/tools/clippy/tests/ui/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_comparison.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n fn main() {\n     let x = 1;"}, {"sha": "bfd30f0042d55e1e4034077be52d874d9d29813a", "filename": "src/tools/clippy/tests/ui/duration_subsec.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fduration_subsec.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fduration_subsec.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fduration_subsec.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(dead_code, clippy::needless_borrow)]\n #![warn(clippy::duration_subsec)]\n "}, {"sha": "860233f084f37514de3c650ac6c4a503a2b83bb1", "filename": "src/tools/clippy/tests/ui/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fduration_subsec.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(dead_code, clippy::needless_borrow)]\n #![warn(clippy::duration_subsec)]\n "}, {"sha": "fd0a9a7081eab0b63b18efc2a4ec37c8cbe80e87", "filename": "src/tools/clippy/tests/ui/empty_drop.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_drop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_drop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_drop.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::empty_drop)]\n #![allow(unused)]\n "}, {"sha": "6c15cb9330276ff7dcbdcc484bd81119d7d11997", "filename": "src/tools/clippy/tests/ui/empty_drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_drop.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::empty_drop)]\n #![allow(unused)]\n "}, {"sha": "269e66ea0a8166006c78711ec02744fdbfce84bb", "filename": "src/tools/clippy/tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macro_attr.rs\n+//@aux-build:proc_macro_attr.rs\n #![warn(clippy::empty_line_after_outer_attr)]\n #![allow(clippy::assertions_on_constants)]\n #![feature(custom_inner_attributes)]"}, {"sha": "54e8fb4907c0f2b4ccdad412f7e624d1156284ad", "filename": "src/tools/clippy/tests/ui/empty_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_loop.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macros.rs\n+//@aux-build:proc_macros.rs\n \n #![warn(clippy::empty_loop)]\n "}, {"sha": "d564b2d24f5c457adf85470b81820570eaa81d33", "filename": "src/tools/clippy/tests/ui/empty_loop_no_std.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_loop_no_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_loop_no_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_loop_no_std.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: -Clink-arg=-nostartfiles\n-// ignore-macos\n+//@compile-flags: -Clink-arg=-nostartfiles\n+//@ignore-macos\n \n #![warn(clippy::empty_loop)]\n #![feature(lang_items, start, libc)]"}, {"sha": "6fab30208393e94d8e0e4c2fc1e43a71c5236cbf", "filename": "src/tools/clippy/tests/ui/empty_structs_with_brackets.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_structs_with_brackets.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_structs_with_brackets.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_structs_with_brackets.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::empty_structs_with_brackets)]\n #![allow(dead_code)]\n "}, {"sha": "0caa3c49cd66811890548a0a6c0ac14d997a14d3", "filename": "src/tools/clippy/tests/ui/empty_structs_with_brackets.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_structs_with_brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_structs_with_brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fempty_structs_with_brackets.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::empty_structs_with_brackets)]\n #![allow(dead_code)]\n "}, {"sha": "7e82390605cccffd36eaad07c4443cd153fa6e51", "filename": "src/tools/clippy/tests/ui/entry.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// needs-asm-support\n-// run-rustfix\n+//@needs-asm-support\n+//@run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]\n #![warn(clippy::map_entry)]"}, {"sha": "742c932253576f437a38d20dcbe7340acebe7fca", "filename": "src/tools/clippy/tests/ui/entry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// needs-asm-support\n-// run-rustfix\n+//@needs-asm-support\n+//@run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]\n #![warn(clippy::map_entry)]"}, {"sha": "3baaacffd20d28a8b0d901fe9d78367da5f71207", "filename": "src/tools/clippy/tests/ui/entry_btree.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_btree.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_btree.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_btree.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::map_entry)]\n #![allow(dead_code)]"}, {"sha": "770e8e91da23f8dd09ef102c62265b961e32bd35", "filename": "src/tools/clippy/tests/ui/entry_btree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_btree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_btree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_btree.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::map_entry)]\n #![allow(dead_code)]"}, {"sha": "71fe04fd648425789bc954ef2386ed78510d7340", "filename": "src/tools/clippy/tests/ui/entry_with_else.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_with_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_with_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_with_else.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]\n #![warn(clippy::map_entry)]"}, {"sha": "80f74649a6033eed44f42813fdc8d942aa6e403f", "filename": "src/tools/clippy/tests/ui/entry_with_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_with_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_with_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry_with_else.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]\n #![warn(clippy::map_entry)]"}, {"sha": "f17556ea90709d35e6d1607f7e42bcf9a260c27d", "filename": "src/tools/clippy/tests/ui/enum_clike_unportable_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_clike_unportable_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_clike_unportable_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_clike_unportable_variant.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-x86\n+//@ignore-x86\n \n #![warn(clippy::enum_clike_unportable_variant)]\n #![allow(unused, non_upper_case_globals)]"}, {"sha": "419370ffb1d277632fc109f02721725ecda19217", "filename": "src/tools/clippy/tests/ui/enum_glob_use.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_glob_use.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_glob_use.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_glob_use.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::enum_glob_use)]\n #![allow(unused)]"}, {"sha": "645ed98325c9a93263461a646cf21fe82f70b152", "filename": "src/tools/clippy/tests/ui/enum_glob_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_glob_use.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::enum_glob_use)]\n #![allow(unused)]"}, {"sha": "531652a0e00263fa036b873367999ef390836032", "filename": "src/tools/clippy/tests/ui/enum_variants.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fenum_variants.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -179,4 +179,14 @@ mod issue9018 {\n     }\n }\n \n+mod allow_attributes_on_variants {\n+    enum Enum {\n+        #[allow(clippy::enum_variant_names)]\n+        EnumStartsWith,\n+        #[allow(clippy::enum_variant_names)]\n+        EndsWithEnum,\n+        Foo,\n+    }\n+}\n+\n fn main() {}"}, {"sha": "cdd33ebe582ffdb431745cc080c73c403c17d54e", "filename": "src/tools/clippy/tests/ui/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feq_op.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --test\n+//@compile-flags: --test\n \n #![warn(clippy::eq_op)]\n #![allow(clippy::double_parens, clippy::identity_op, clippy::nonminimal_bool)]"}, {"sha": "53e62760bef4d861cdf8eec8b7e2db3fb61f2989", "filename": "src/tools/clippy/tests/ui/equatable_if_let.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fequatable_if_let.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fequatable_if_let.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fequatable_if_let.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![allow(unused_variables, dead_code, clippy::derive_partial_eq_without_eq)]\n #![warn(clippy::equatable_if_let)]"}, {"sha": "55918a5bb11967647f4bea4eeed9f43738e0a771", "filename": "src/tools/clippy/tests/ui/equatable_if_let.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fequatable_if_let.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// run-rustfix\n-// aux-build:proc_macros.rs\n+//@run-rustfix\n+//@aux-build:proc_macros.rs\n \n #![allow(unused_variables, dead_code, clippy::derive_partial_eq_without_eq)]\n #![warn(clippy::equatable_if_let)]"}, {"sha": "6ade6f5468917d407cc5d74a1a7ed0b37f9d03c3", "filename": "src/tools/clippy/tests/ui/err_expect.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ferr_expect.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ferr_expect.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ferr_expect.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused)]\n "}, {"sha": "a93fb59493fec3ac0310bc2fe5e293c08cca0fb2", "filename": "src/tools/clippy/tests/ui/err_expect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ferr_expect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ferr_expect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ferr_expect.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused)]\n "}, {"sha": "b1baf462c0f88495daee8cc69e6d87b08ac59a4c", "filename": "src/tools/clippy/tests/ui/eta.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feta.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::redundant_closure, clippy::redundant_closure_for_method_calls)]\n #![allow(unused)]\n #![allow("}, {"sha": "e113c3d6cd6b2a5f262a3a77837a3ed8eab4174e", "filename": "src/tools/clippy/tests/ui/eta.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feta.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::redundant_closure, clippy::redundant_closure_for_method_calls)]\n #![allow(unused)]\n #![allow("}, {"sha": "0a07957386c23162855eb5e029282b2b7cd1887c", "filename": "src/tools/clippy/tests/ui/excessive_precision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexcessive_precision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexcessive_precision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexcessive_precision.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::excessive_precision)]\n #![allow(dead_code, unused_variables, clippy::print_literal)]\n "}, {"sha": "62a832caa67b6761743881f72c11f21b9b44f531", "filename": "src/tools/clippy/tests/ui/excessive_precision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexcessive_precision.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::excessive_precision)]\n #![allow(dead_code, unused_variables, clippy::print_literal)]\n "}, {"sha": "6c7b1cab6f20ad48dab797055ed21440a2464a3a", "filename": "src/tools/clippy/tests/ui/exhaustive_items.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexhaustive_items.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexhaustive_items.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexhaustive_items.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![deny(clippy::exhaustive_enums, clippy::exhaustive_structs)]\n #![allow(unused)]"}, {"sha": "d205bac2d2aba3a7d72c4984a0b396d1e902296d", "filename": "src/tools/clippy/tests/ui/exhaustive_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexhaustive_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexhaustive_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexhaustive_items.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![deny(clippy::exhaustive_enums, clippy::exhaustive_structs)]\n #![allow(unused)]"}, {"sha": "8e97054fb6bcaf4c5e000c0bed9b010b135611c1", "filename": "src/tools/clippy/tests/ui/expect_fun_call.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexpect_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexpect_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexpect_fun_call.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::expect_fun_call)]\n #![allow(clippy::to_string_in_format_args, clippy::uninlined_format_args)]\n "}, {"sha": "31e6bcc7ff6439a0894dd85428650def50207323", "filename": "src/tools/clippy/tests/ui/expect_fun_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexpect_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexpect_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexpect_fun_call.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::expect_fun_call)]\n #![allow(clippy::to_string_in_format_args, clippy::uninlined_format_args)]\n "}, {"sha": "71a5ed96d5c46f9880dadfd2145cf076a7f8d6f7", "filename": "src/tools/clippy/tests/ui/explicit_auto_deref.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_auto_deref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_auto_deref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_auto_deref.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![feature(closure_lifetime_binder)]\n #![warn(clippy::explicit_auto_deref)]"}, {"sha": "9d0cafa150f6c2136d20d52f05eb511539d30d06", "filename": "src/tools/clippy/tests/ui/explicit_auto_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_auto_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_auto_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_auto_deref.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![feature(closure_lifetime_binder)]\n #![warn(clippy::explicit_auto_deref)]"}, {"sha": "77e9f5fc1fdf102da47bccc1373aca9ee202071b", "filename": "src/tools/clippy/tests/ui/explicit_deref_methods.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_deref_methods.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_deref_methods.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_deref_methods.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::explicit_deref_methods)]\n #![allow(unused_variables)]\n #![allow("}, {"sha": "0c2cc7c2c3a6a1be975fc989e995151d7478896a", "filename": "src/tools/clippy/tests/ui/explicit_deref_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_deref_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_deref_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_deref_methods.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::explicit_deref_methods)]\n #![allow(unused_variables)]\n #![allow("}, {"sha": "213485bc221b8255c1a3b185b0e901ba865dc6e9", "filename": "src/tools/clippy/tests/ui/explicit_write.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_write.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_write.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_write.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::explicit_write)]\n #![allow(unused_imports)]\n #![allow(clippy::uninlined_format_args)]"}, {"sha": "64acd7108bfa850cde1f5af1fb76adae3e8bbdd0", "filename": "src/tools/clippy/tests/ui/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fexplicit_write.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::explicit_write)]\n #![allow(unused_imports)]\n #![allow(clippy::uninlined_format_args)]"}, {"sha": "594f2f6d4135e2ea5eaa9a53f22e7c8390e5a5e7", "filename": "src/tools/clippy/tests/ui/extend_with_drain.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextend_with_drain.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextend_with_drain.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextend_with_drain.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::extend_with_drain)]\n #![allow(clippy::iter_with_drain)]\n use std::collections::BinaryHeap;"}, {"sha": "3e2ad02052d780c6a231b628c5d570b17a6f2ee3", "filename": "src/tools/clippy/tests/ui/extend_with_drain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextend_with_drain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextend_with_drain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextend_with_drain.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::extend_with_drain)]\n #![allow(clippy::iter_with_drain)]\n use std::collections::BinaryHeap;"}, {"sha": "cdfaf8d3afea8ee9a03bf3c686a4c32875d15e3f", "filename": "src/tools/clippy/tests/ui/extra_unused_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_lifetimes.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// aux-build:proc_macro_derive.rs\n+//@aux-build:proc_macro_derive.rs\n \n #![allow(\n     unused,"}, {"sha": "adcd1f6d4076c194b08db714ffc85c8f4ff6c762", "filename": "src/tools/clippy/tests/ui/extra_unused_type_parameters.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_type_parameters.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_type_parameters.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_type_parameters.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused, clippy::needless_lifetimes)]\n #![warn(clippy::extra_unused_type_parameters)]"}, {"sha": "c4c5227ac91872590c9af1498282556485f17bee", "filename": "src/tools/clippy/tests/ui/extra_unused_type_parameters.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_type_parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_type_parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fextra_unused_type_parameters.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused, clippy::needless_lifetimes)]\n #![warn(clippy::extra_unused_type_parameters)]"}, {"sha": "2045b1eebcd7f1163dc6f0405fb9842e178e39b9", "filename": "src/tools/clippy/tests/ui/field_reassign_with_default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffield_reassign_with_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffield_reassign_with_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffield_reassign_with_default.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,5 +1,5 @@\n-// aux-build:proc_macro_derive.rs\n-// aux-build:proc_macros.rs\n+//@aux-build:proc_macro_derive.rs\n+//@aux-build:proc_macros.rs\n \n #![warn(clippy::field_reassign_with_default)]\n "}, {"sha": "44665b451adac7e2389afb9afd247c874820f8f0", "filename": "src/tools/clippy/tests/ui/filter_map_identity.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_identity.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_identity.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_identity.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused_imports, clippy::needless_return)]\n #![warn(clippy::filter_map_identity)]"}, {"sha": "9832acb013f854fad5fbf9e942810f36cf263bec", "filename": "src/tools/clippy/tests/ui/filter_map_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_identity.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused_imports, clippy::needless_return)]\n #![warn(clippy::filter_map_identity)]"}, {"sha": "efb37f8b1b73c15c73b6d5ecb9ae3552f17e6667", "filename": "src/tools/clippy/tests/ui/filter_map_next_fixable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_next_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_next_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_next_fixable.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::all, clippy::pedantic)]\n #![allow(unused)]"}, {"sha": "b10e20d359ed70d8ef2001ae1917dda771676059", "filename": "src/tools/clippy/tests/ui/filter_map_next_fixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_next_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_next_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffilter_map_next_fixable.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::all, clippy::pedantic)]\n #![allow(unused)]"}, {"sha": "97091d6f1a5beba5de3940ceaa3baed9bd754713", "filename": "src/tools/clippy/tests/ui/flat_map_identity.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_identity.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_identity.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_identity.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused_imports, clippy::needless_return)]\n #![warn(clippy::flat_map_identity)]"}, {"sha": "5607683a5d04e72682e89c0b500a758d020df6cc", "filename": "src/tools/clippy/tests/ui/flat_map_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_identity.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![allow(unused_imports, clippy::needless_return)]\n #![warn(clippy::flat_map_identity)]"}, {"sha": "eeab864c42ff795e990ce0963221610e6d036768", "filename": "src/tools/clippy/tests/ui/flat_map_option.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_option.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::flat_map_option)]\n #![allow(clippy::redundant_closure, clippy::unnecessary_filter_map)]\n "}, {"sha": "ebc389f7f0294d41fd777789b727e44b5209756a", "filename": "src/tools/clippy/tests/ui/flat_map_option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fflat_map_option.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::flat_map_option)]\n #![allow(clippy::redundant_closure, clippy::unnecessary_filter_map)]\n "}, {"sha": "0cc572822e771fea599303f49bd72eba20eefb76", "filename": "src/tools/clippy/tests/ui/floating_point_abs.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_abs.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_abs.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_abs.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(const_fn_floating_point_arithmetic)]\n #![warn(clippy::suboptimal_flops)]\n "}, {"sha": "6c732d398f0686c6403a3b3e23496f699c807e7a", "filename": "src/tools/clippy/tests/ui/floating_point_abs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_abs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_abs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_abs.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(const_fn_floating_point_arithmetic)]\n #![warn(clippy::suboptimal_flops)]\n "}, {"sha": "1a33b8153ecab97713b992464da69f5aecb00470", "filename": "src/tools/clippy/tests/ui/floating_point_exp.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_exp.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_exp.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_exp.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::imprecise_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "4f4a5ec81ac9da6292cc06072f76d131c18394a7", "filename": "src/tools/clippy/tests/ui/floating_point_exp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_exp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_exp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_exp.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::imprecise_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "431cb2709787a6083dbda91fb9f141ef57d8a30c", "filename": "src/tools/clippy/tests/ui/floating_point_hypot.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_hypot.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_hypot.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_hypot.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::imprecise_flops)]\n \n fn main() {"}, {"sha": "e5506ed391c02fbde6a666f08e3f79e8313b3896", "filename": "src/tools/clippy/tests/ui/floating_point_hypot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_hypot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_hypot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_hypot.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::imprecise_flops)]\n \n fn main() {"}, {"sha": "6582c0a0f6c875bef023c8322dcdc0cc59e6df36", "filename": "src/tools/clippy/tests/ui/floating_point_log.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_log.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_log.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_log.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(dead_code, clippy::double_parens, clippy::unnecessary_cast)]\n #![warn(clippy::suboptimal_flops, clippy::imprecise_flops)]\n "}, {"sha": "854d269fff59c2d94c513d5f063efcd0cd651dca", "filename": "src/tools/clippy/tests/ui/floating_point_log.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_log.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_log.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_log.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(dead_code, clippy::double_parens, clippy::unnecessary_cast)]\n #![warn(clippy::suboptimal_flops, clippy::imprecise_flops)]\n "}, {"sha": "0783ecee1eec85a73170050b3bd234bbfd2e6b4d", "filename": "src/tools/clippy/tests/ui/floating_point_logbase.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_logbase.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_logbase.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_logbase.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::suboptimal_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "80fcfab682525564a5108113e0c16be183f0c9ea", "filename": "src/tools/clippy/tests/ui/floating_point_logbase.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_logbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_logbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_logbase.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::suboptimal_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "8848981a11d8f1c5b9a70abd3f16543658809f11", "filename": "src/tools/clippy/tests/ui/floating_point_mul_add.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_mul_add.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_mul_add.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_mul_add.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(const_fn_floating_point_arithmetic)]\n #![warn(clippy::suboptimal_flops)]\n "}, {"sha": "b0edf5cb210c8f7cac4195ab1d9820afed1d65ab", "filename": "src/tools/clippy/tests/ui/floating_point_mul_add.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_mul_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_mul_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_mul_add.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(const_fn_floating_point_arithmetic)]\n #![warn(clippy::suboptimal_flops)]\n "}, {"sha": "1e660b140c58309acbec2d4c4052f3d6140fefb2", "filename": "src/tools/clippy/tests/ui/floating_point_powf.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powf.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powf.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powf.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::suboptimal_flops, clippy::imprecise_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "71c2f5292053b27961e291652fea7383f1db14da", "filename": "src/tools/clippy/tests/ui/floating_point_powf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powf.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::suboptimal_flops, clippy::imprecise_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "41d5288d6e0cf067aa6db2a8d6607972bcfdd9ca", "filename": "src/tools/clippy/tests/ui/floating_point_powi.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powi.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powi.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powi.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::suboptimal_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "7951aab31bebad59d9eb6c47a4283daed6037c2d", "filename": "src/tools/clippy/tests/ui/floating_point_powi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_powi.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::suboptimal_flops)]\n #![allow(clippy::unnecessary_cast)]\n "}, {"sha": "af236452712896c1e7f470b07748408c9e795c73", "filename": "src/tools/clippy/tests/ui/floating_point_rad.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_rad.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_rad.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_rad.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(const_fn_floating_point_arithmetic)]\n #![warn(clippy::suboptimal_flops)]\n "}, {"sha": "d7612c56a3e49a814a96ddf829efeabdc4d92e13", "filename": "src/tools/clippy/tests/ui/floating_point_rad.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_rad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_rad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffloating_point_rad.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![feature(const_fn_floating_point_arithmetic)]\n #![warn(clippy::suboptimal_flops)]\n "}, {"sha": "4f6af87088992ba5f2f145c98ccd97f81e3c3de1", "filename": "src/tools/clippy/tests/ui/fn_to_numeric_cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-32bit\n+//@ignore-32bit\n \n #![warn(clippy::fn_to_numeric_cast, clippy::fn_to_numeric_cast_with_truncation)]\n "}, {"sha": "62ce97f098d4cf93c53ab30946744cf9f3217617", "filename": "src/tools/clippy/tests/ui/fn_to_numeric_cast_32bit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast_32bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast_32bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast_32bit.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// ignore-64bit\n+//@ignore-64bit\n \n #![warn(clippy::fn_to_numeric_cast, clippy::fn_to_numeric_cast_with_truncation)]\n "}, {"sha": "671347d2bcd548ac48312bf978c24f9a5b73584e", "filename": "src/tools/clippy/tests/ui/fn_to_numeric_cast_32bit.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast_32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast_32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_to_numeric_cast_32bit.stderr?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -12,19 +12,19 @@ error: casting function pointer `foo` to `i16`, which truncates the value\n LL |     let _ = foo as i16;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n-error: casting function pointer `foo` to `i32`\n+error: casting function pointer `foo` to `i32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast_32bit.rs:12:13\n    |\n LL |     let _ = foo as i32;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n-   |\n-   = note: `-D clippy::fn-to-numeric-cast` implied by `-D warnings`\n \n error: casting function pointer `foo` to `i64`\n   --> $DIR/fn_to_numeric_cast_32bit.rs:13:13\n    |\n LL |     let _ = foo as i64;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n+   |\n+   = note: `-D clippy::fn-to-numeric-cast` implied by `-D warnings`\n \n error: casting function pointer `foo` to `i128`\n   --> $DIR/fn_to_numeric_cast_32bit.rs:14:13\n@@ -50,7 +50,7 @@ error: casting function pointer `foo` to `u16`, which truncates the value\n LL |     let _ = foo as u16;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n-error: casting function pointer `foo` to `u32`\n+error: casting function pointer `foo` to `u32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast_32bit.rs:19:13\n    |\n LL |     let _ = foo as u32;\n@@ -80,7 +80,7 @@ error: casting function pointer `abc` to `i16`, which truncates the value\n LL |     let _ = abc as i16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n-error: casting function pointer `abc` to `i32`\n+error: casting function pointer `abc` to `i32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast_32bit.rs:36:13\n    |\n LL |     let _ = abc as i32;\n@@ -116,7 +116,7 @@ error: casting function pointer `abc` to `u16`, which truncates the value\n LL |     let _ = abc as u16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n-error: casting function pointer `abc` to `u32`\n+error: casting function pointer `abc` to `u32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast_32bit.rs:43:13\n    |\n LL |     let _ = abc as u32;\n@@ -134,7 +134,7 @@ error: casting function pointer `abc` to `u128`\n LL |     let _ = abc as u128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n-error: casting function pointer `f` to `i32`\n+error: casting function pointer `f` to `i32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast_32bit.rs:52:5\n    |\n LL |     f as i32"}, {"sha": "f578c98da15348318027a3064c8a09004aa9aff4", "filename": "src/tools/clippy/tests/ui/for_loop_fixable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_fixable.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(dead_code, unused)]\n #![allow(clippy::uninlined_format_args)]\n "}, {"sha": "42bc6de0c7ddae3ea50d2c4b1625246a7df7d8c8", "filename": "src/tools/clippy/tests/ui/for_loop_fixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_fixable.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![allow(dead_code, unused)]\n #![allow(clippy::uninlined_format_args)]\n "}, {"sha": "9288956f51306f0654540e7fe45cb3130c100ed5", "filename": "src/tools/clippy/tests/ui/format.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::useless_format)]\n #![allow(\n     unused_tuple_struct_fields,"}, {"sha": "b2b817e0f4c430995c7753208483d3423ee46f8b", "filename": "src/tools/clippy/tests/ui/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::useless_format)]\n #![allow(\n     unused_tuple_struct_fields,"}, {"sha": "ea38368613570fb43585ae388ab2546735651988", "filename": "src/tools/clippy/tests/ui/format_args.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat_args.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::to_string_in_format_args)]\n #![allow(unused)]\n #![allow("}, {"sha": "bfb324492467ea408a61b0dda1332138868c37ad", "filename": "src/tools/clippy/tests/ui/format_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformat_args.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n #![warn(clippy::to_string_in_format_args)]\n #![allow(unused)]\n #![allow("}, {"sha": "915ff4fb079d2f04331d42dd6d6c1d559b326fa3", "filename": "src/tools/clippy/tests/ui/from_iter_instead_of_collect.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffrom_iter_instead_of_collect.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffrom_iter_instead_of_collect.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffrom_iter_instead_of_collect.fixed?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::from_iter_instead_of_collect)]\n #![allow(unused_imports, unused_tuple_struct_fields)]"}, {"sha": "e926f8c529df3af8ba227d0e87e4b54a7235dffa", "filename": "src/tools/clippy/tests/ui/from_iter_instead_of_collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffrom_iter_instead_of_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beb0a4bdf4c9547b00db232deab74406873d305/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffrom_iter_instead_of_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffrom_iter_instead_of_collect.rs?ref=4beb0a4bdf4c9547b00db232deab74406873d305", "patch": "@@ -1,4 +1,4 @@\n-// run-rustfix\n+//@run-rustfix\n \n #![warn(clippy::from_iter_instead_of_collect)]\n #![allow(unused_imports, unused_tuple_struct_fields)]"}]}