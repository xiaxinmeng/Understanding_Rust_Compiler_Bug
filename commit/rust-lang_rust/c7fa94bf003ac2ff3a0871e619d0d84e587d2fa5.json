{"sha": "c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZmE5NGJmMDAzYWMyZmYzYTA4NzFlNjE5ZDBkODRlNTg3ZDJmYTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-27T14:11:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-27T14:12:46Z"}, "message": "Fix checked binops when overflow checks are disabled", "tree": {"sha": "2cbe75e4cb0b8912cadbb014a1ac3af1a383ff21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cbe75e4cb0b8912cadbb014a1ac3af1a383ff21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5", "html_url": "https://github.com/rust-lang/rust/commit/c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe20f8cba6a3599b79c335fc3284c34cf42e5b2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe20f8cba6a3599b79c335fc3284c34cf42e5b2a", "html_url": "https://github.com/rust-lang/rust/commit/fe20f8cba6a3599b79c335fc3284c34cf42e5b2a"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "dd0594611cff3e32b49d5cf1b70552f6dbb989f7", "filename": "src/base.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=c7fa94bf003ac2ff3a0871e619d0d84e587d2fa5", "patch": "@@ -831,6 +831,11 @@ pub fn trans_int_binop<'a, 'tcx: 'a>(\n         );\n     }\n \n+    match out_ty.sty {\n+        ty::Bool | ty::Uint(_) | ty::Int(_) => {}\n+        _ => unreachable!(\"Out ty {:?} is not an integer or bool\", out_ty),\n+    }\n+\n     if let Some(res) = crate::codegen_i128::maybe_codegen(fx, bin_op, false, signed, lhs, rhs, out_ty) {\n         return res;\n     }\n@@ -875,7 +880,9 @@ pub fn trans_checked_int_binop<'a, 'tcx: 'a>(\n     signed: bool,\n ) -> CValue<'tcx> {\n     if !fx.tcx.sess.overflow_checks() {\n-        return trans_int_binop(fx, bin_op, in_lhs, in_rhs, out_ty, signed);\n+        let val = trans_int_binop(fx, bin_op, in_lhs, in_rhs, in_lhs.layout().ty, signed).load_scalar(fx);\n+        let is_overflow = fx.bcx.ins().iconst(types::I8, 0);\n+        return CValue::by_val_pair(val, is_overflow, fx.layout_of(out_ty));\n     }\n \n     if bin_op != BinOp::Shl && bin_op != BinOp::Shr {"}]}