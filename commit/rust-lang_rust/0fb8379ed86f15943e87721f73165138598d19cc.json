{"sha": "0fb8379ed86f15943e87721f73165138598d19cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYjgzNzllZDg2ZjE1OTQzZTg3NzIxZjczMTY1MTM4NTk4ZDE5Y2M=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-22T00:57:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-10-01T19:33:02Z"}, "message": "std: Remove plattform-specific code from os_str", "tree": {"sha": "d9100254466e8331a8de31595741236ec0c48c59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9100254466e8331a8de31595741236ec0c48c59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fb8379ed86f15943e87721f73165138598d19cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb8379ed86f15943e87721f73165138598d19cc", "html_url": "https://github.com/rust-lang/rust/commit/0fb8379ed86f15943e87721f73165138598d19cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fb8379ed86f15943e87721f73165138598d19cc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d311079a6f70577d02f35bb80d27eef7e2b18a4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d311079a6f70577d02f35bb80d27eef7e2b18a4a", "html_url": "https://github.com/rust-lang/rust/commit/d311079a6f70577d02f35bb80d27eef7e2b18a4a"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "84b50f04463fe7dc8ccef469b5f02e1df007a67b", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0fb8379ed86f15943e87721f73165138598d19cc/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb8379ed86f15943e87721f73165138598d19cc/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=0fb8379ed86f15943e87721f73165138598d19cc", "patch": "@@ -53,17 +53,6 @@ impl OsString {\n         OsString { inner: Buf::from_string(String::new()) }\n     }\n \n-    #[cfg(unix)]\n-    fn _from_bytes(vec: Vec<u8>) -> Option<OsString> {\n-        use os::unix::ffi::OsStringExt;\n-        Some(OsString::from_vec(vec))\n-    }\n-\n-    #[cfg(windows)]\n-    fn _from_bytes(vec: Vec<u8>) -> Option<OsString> {\n-        String::from_utf8(vec).ok().map(OsString::from)\n-    }\n-\n     /// Converts to an `OsStr` slice.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn as_os_str(&self) -> &OsStr {"}]}