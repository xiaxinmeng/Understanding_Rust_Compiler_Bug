{"sha": "f9fccbedbff3eee143949abd45df6f3284d8a028", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZmNjYmVkYmZmM2VlZTE0Mzk0OWFiZDQ1ZGY2ZjMyODRkOGEwMjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-08T08:11:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-08T08:11:41Z"}, "message": "Auto merge of #6432 - giraffate:sync-from-rust, r=flip1995\n\nRustup\n\nchangelog: none", "tree": {"sha": "3e2cec769d3845ab72264c651b65c46e5148c257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e2cec769d3845ab72264c651b65c46e5148c257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9fccbedbff3eee143949abd45df6f3284d8a028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fccbedbff3eee143949abd45df6f3284d8a028", "html_url": "https://github.com/rust-lang/rust/commit/f9fccbedbff3eee143949abd45df6f3284d8a028", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9fccbedbff3eee143949abd45df6f3284d8a028/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50bca8af1dd29b8b376ec217c6c1ee16d6b69228", "url": "https://api.github.com/repos/rust-lang/rust/commits/50bca8af1dd29b8b376ec217c6c1ee16d6b69228", "html_url": "https://github.com/rust-lang/rust/commit/50bca8af1dd29b8b376ec217c6c1ee16d6b69228"}, {"sha": "bd7f9c6c1c808341bc9091e435aac08591e9a205", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7f9c6c1c808341bc9091e435aac08591e9a205", "html_url": "https://github.com/rust-lang/rust/commit/bd7f9c6c1c808341bc9091e435aac08591e9a205"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1bd96b2b4c89beb3e433a3d8b416ac498cd42d6e", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9fccbedbff3eee143949abd45df6f3284d8a028/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fccbedbff3eee143949abd45df6f3284d8a028/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=f9fccbedbff3eee143949abd45df6f3284d8a028", "patch": "@@ -768,7 +768,7 @@ fn never_loop_expr(expr: &Expr<'_>, main_loop_id: HirId) -> NeverLoopResult {\n         ExprKind::InlineAsm(ref asm) => asm\n             .operands\n             .iter()\n-            .map(|o| match o {\n+            .map(|(o, _)| match o {\n                 InlineAsmOperand::In { expr, .. }\n                 | InlineAsmOperand::InOut { expr, .. }\n                 | InlineAsmOperand::Const { expr }"}, {"sha": "d942d4e12b10629518cf54d5fac19c97281e1e37", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9fccbedbff3eee143949abd45df6f3284d8a028/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fccbedbff3eee143949abd45df6f3284d8a028/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=f9fccbedbff3eee143949abd45df6f3284d8a028", "patch": "@@ -517,7 +517,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                     }\n                 }\n                 asm.options.hash(&mut self.s);\n-                for op in asm.operands {\n+                for (op, _op_sp) in asm.operands {\n                     match op {\n                         InlineAsmOperand::In { reg, expr } => {\n                             reg.hash(&mut self.s);"}, {"sha": "323d8745538859bf7e4e106bdec3ed0151d322f3", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9fccbedbff3eee143949abd45df6f3284d8a028/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fccbedbff3eee143949abd45df6f3284d8a028/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=f9fccbedbff3eee143949abd45df6f3284d8a028", "patch": "@@ -293,7 +293,7 @@ fn print_expr(cx: &LateContext<'_>, expr: &hir::Expr<'_>, indent: usize) {\n             println!(\"{}template: {}\", ind, InlineAsmTemplatePiece::to_string(asm.template));\n             println!(\"{}options: {:?}\", ind, asm.options);\n             println!(\"{}operands:\", ind);\n-            for op in asm.operands {\n+            for (op, _op_sp) in asm.operands {\n                 match op {\n                     hir::InlineAsmOperand::In { expr, .. }\n                     | hir::InlineAsmOperand::InOut { expr, .. }"}]}