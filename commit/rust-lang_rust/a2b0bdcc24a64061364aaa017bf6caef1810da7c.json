{"sha": "a2b0bdcc24a64061364aaa017bf6caef1810da7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYjBiZGNjMjRhNjQwNjEzNjRhYWEwMTdiZjZjYWVmMTgxMGRhN2M=", "commit": {"author": {"name": "Ilya Titkov", "email": "ilya@titkov.me", "date": "2020-02-17T08:44:58Z"}, "committer": {"name": "Ilya Titkov", "email": "ilya@titkov.me", "date": "2020-02-17T08:44:58Z"}, "message": "Add arguments to rustfmt", "tree": {"sha": "e434da0a4a0d6f8413be638d6c5d98a215e98792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e434da0a4a0d6f8413be638d6c5d98a215e98792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2b0bdcc24a64061364aaa017bf6caef1810da7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b0bdcc24a64061364aaa017bf6caef1810da7c", "html_url": "https://github.com/rust-lang/rust/commit/a2b0bdcc24a64061364aaa017bf6caef1810da7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2b0bdcc24a64061364aaa017bf6caef1810da7c/comments", "author": {"login": "Leonqn", "id": 2017559, "node_id": "MDQ6VXNlcjIwMTc1NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2017559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Leonqn", "html_url": "https://github.com/Leonqn", "followers_url": "https://api.github.com/users/Leonqn/followers", "following_url": "https://api.github.com/users/Leonqn/following{/other_user}", "gists_url": "https://api.github.com/users/Leonqn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Leonqn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Leonqn/subscriptions", "organizations_url": "https://api.github.com/users/Leonqn/orgs", "repos_url": "https://api.github.com/users/Leonqn/repos", "events_url": "https://api.github.com/users/Leonqn/events{/privacy}", "received_events_url": "https://api.github.com/users/Leonqn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Leonqn", "id": 2017559, "node_id": "MDQ6VXNlcjIwMTc1NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2017559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Leonqn", "html_url": "https://github.com/Leonqn", "followers_url": "https://api.github.com/users/Leonqn/followers", "following_url": "https://api.github.com/users/Leonqn/following{/other_user}", "gists_url": "https://api.github.com/users/Leonqn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Leonqn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Leonqn/subscriptions", "organizations_url": "https://api.github.com/users/Leonqn/orgs", "repos_url": "https://api.github.com/users/Leonqn/repos", "events_url": "https://api.github.com/users/Leonqn/events{/privacy}", "received_events_url": "https://api.github.com/users/Leonqn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fc890de87e25c342b7c141ef98b07cb1471128", "url": "https://api.github.com/repos/rust-lang/rust/commits/32fc890de87e25c342b7c141ef98b07cb1471128", "html_url": "https://github.com/rust-lang/rust/commit/32fc890de87e25c342b7c141ef98b07cb1471128"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "3314269ecebea6bb7b4603b0121c4edc80ba2a68", "filename": "crates/ra_lsp_server/src/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -44,6 +44,8 @@ pub struct ServerConfig {\n     /// Fine grained feature flags to disable specific features.\n     pub feature_flags: FxHashMap<String, bool>,\n \n+    pub rustfmt_args: Vec<String>,\n+\n     /// Cargo feature configurations.\n     pub cargo_features: CargoFeatures,\n }\n@@ -63,6 +65,7 @@ impl Default for ServerConfig {\n             with_sysroot: true,\n             feature_flags: FxHashMap::default(),\n             cargo_features: Default::default(),\n+            rustfmt_args: Vec::new(),\n         }\n     }\n }"}, {"sha": "1e70cea136a0ac366f03a7afdf197a1ff3f1fc20", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -178,6 +178,7 @@ pub fn main_loop(\n                     command: config.cargo_watch_command,\n                     all_targets: config.cargo_watch_all_targets,\n                 },\n+                rustfmt_args: config.rustfmt_args,\n             }\n         };\n "}, {"sha": "1da2d1814a96c91125cede2a15f4d5a116768c8a", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -590,6 +590,7 @@ pub fn handle_formatting(\n     let end_position = TextUnit::of_str(&file).conv_with(&file_line_index);\n \n     let mut rustfmt = process::Command::new(\"rustfmt\");\n+    rustfmt.args(&world.options.rustfmt_args);\n     if let Some(&crate_id) = crate_ids.first() {\n         // Assume all crates are in the same edition\n         let edition = world.analysis().crate_edition(crate_id)?;"}, {"sha": "d993c5fc467b14ccd2d972aa8aa35403d4f0f188", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -34,6 +34,7 @@ pub struct Options {\n     pub supports_location_link: bool,\n     pub line_folding_only: bool,\n     pub max_inlay_hint_length: Option<usize>,\n+    pub rustfmt_args: Vec<String>,\n     pub cargo_watch: CheckOptions,\n }\n "}, {"sha": "46acbfe76cd8601d3a20939c56f2d14afff66f72", "filename": "editors/code/package.json", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -188,6 +188,14 @@\n                     \"default\": [],\n                     \"description\": \"Paths to exclude from analysis\"\n                 },\n+                \"rust-analyzer.rustfmtArgs\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    },\n+                    \"default\": [],\n+                    \"description\": \"Additional arguments to rustfmt\"\n+                },\n                 \"rust-analyzer.useClientWatching\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,\n@@ -233,7 +241,10 @@\n                     \"description\": \"Trace requests to the ra_lsp_server\"\n                 },\n                 \"rust-analyzer.lruCapacity\": {\n-                    \"type\": [ \"null\", \"integer\" ],\n+                    \"type\": [\n+                        \"null\",\n+                        \"integer\"\n+                    ],\n                     \"default\": null,\n                     \"minimum\": 0,\n                     \"exclusiveMinimum\": true,\n@@ -245,7 +256,10 @@\n                     \"description\": \"Display additional type and parameter information in the editor\"\n                 },\n                 \"rust-analyzer.maxInlayHintLength\": {\n-                    \"type\": [ \"null\", \"integer\" ],\n+                    \"type\": [\n+                        \"null\",\n+                        \"integer\"\n+                    ],\n                     \"default\": 20,\n                     \"minimum\": 0,\n                     \"exclusiveMinimum\": true,"}, {"sha": "11894973cd7f90fe3a430a2786676d0b18be47ce", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -42,6 +42,7 @@ export async function createClient(config: Config): Promise<null | lc.LanguageCl\n             featureFlags: config.featureFlags,\n             withSysroot: config.withSysroot,\n             cargoFeatures: config.cargoFeatures,\n+            rustfmtArgs: config.rustfmtArgs,\n         },\n         traceOutputChannel,\n     };"}, {"sha": "5fffd1fa71463431bfd31b6e77320052222a5603", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2b0bdcc24a64061364aaa017bf6caef1810da7c/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a2b0bdcc24a64061364aaa017bf6caef1810da7c/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=a2b0bdcc24a64061364aaa017bf6caef1810da7c", "patch": "@@ -149,7 +149,8 @@ export class Config {\n     get excludeGlobs()          { return this.cfg.get(\"excludeGlobs\") as string[]; }\n     get useClientWatching()     { return this.cfg.get(\"useClientWatching\") as boolean; }\n     get featureFlags()          { return this.cfg.get(\"featureFlags\") as Record<string, boolean>; }\n-\n+    get rustfmtArgs()           { return this.cfg.get(\"rustfmtArgs\") as string[]; }\n+    \n     get cargoWatchOptions(): CargoWatchOptions {\n         return {\n             enable:     this.cfg.get(\"cargo-watch.enable\") as boolean,"}]}