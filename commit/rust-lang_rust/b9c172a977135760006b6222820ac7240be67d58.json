{"sha": "b9c172a977135760006b6222820ac7240be67d58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YzE3MmE5NzcxMzU3NjAwMDZiNjIyMjgyMGFjNzI0MGJlNjdkNTg=", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2021-03-14T09:36:04Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2021-03-15T17:02:33Z"}, "message": "Collect HirDisplay impls to a single file", "tree": {"sha": "20a0f0357e739140357cb1b11d350a6088779f2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20a0f0357e739140357cb1b11d350a6088779f2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9c172a977135760006b6222820ac7240be67d58", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAmBPkywACgkQztOS3gxI\nPQC/VBAAqMvO2UGGE943rNnt/RnDPks4woMLoGELyGT/4Kt6stMtX1gk/1w0GLfU\nLuUnLfzIYOL+nBH3uayBF5z613DrQOqMXEhMF0TbGEKCwUCtM81U6CdJbZrGcS1F\nOByaALUdJoPYTFdmpYHe/FayIq8c5+51AaovWDRQ1UYVtQWm4C4T2dTOPc8Url7S\nqLUH9/A+CQlM6V91OGl4YOFGg69MeufeC8KST/Vb5efs5jvyy/U2sROw6WsdNBh+\nBf8k2gRTqLnnm6z76JR4i0fu2sNnEdYX8uoOqvMt7PzyxVJTLigUW8vjfmuK4DKG\ngU98cYnHRWrmXpbbKMhpovw2f3U6SCaPI7H0P9t4KHyZskMijOArDMVO2fYa5I/L\nXxsf9nVgLXm3Dsp8c49DdCMzkgDHt4ZjmOkTdrfjXGvA3bnaTMcq+k4aihzfksKt\nMQ3obUGQJ+eP58aJEEIANJ3RYmctgt5okmXtP90s28e4NZ+5WmIjU8OBpij9XQdA\nxZFXyR1VE6CCoXwsNuduRrSqXnEoQq/+9kkiE8j6xI9OAF3LraFeCRXE3kgLKkku\nhw5sqHbkML5TPiTqBMPD5vn0W1KYZUMhICA5tTTW5KaiVyvYzMBvV44aDgDLhLFl\nZiAcWpyH8AYbeeU2kgWh0VtNnkJK+AVBDPZmSw9M4Z44XQwlR/g=\n=Ue/h\n-----END PGP SIGNATURE-----", "payload": "tree 20a0f0357e739140357cb1b11d350a6088779f2f\nparent ef48d1ca3bfb512c245d9e9bdc73d0d5a5f79740\nauthor oxalica <oxalicc@pm.me> 1615714564 +0800\ncommitter oxalica <oxalicc@pm.me> 1615827753 +0800\n\nCollect HirDisplay impls to a single file\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c172a977135760006b6222820ac7240be67d58", "html_url": "https://github.com/rust-lang/rust/commit/b9c172a977135760006b6222820ac7240be67d58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9c172a977135760006b6222820ac7240be67d58/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef48d1ca3bfb512c245d9e9bdc73d0d5a5f79740", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef48d1ca3bfb512c245d9e9bdc73d0d5a5f79740", "html_url": "https://github.com/rust-lang/rust/commit/ef48d1ca3bfb512c245d9e9bdc73d0d5a5f79740"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "86f48256e1eece88250f8769a4b5f57cdbf7ad8b", "filename": "crates/hir/src/display.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b9c172a977135760006b6222820ac7240be67d58/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9c172a977135760006b6222820ac7240be67d58/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=b9c172a977135760006b6222820ac7240be67d58", "patch": "@@ -0,0 +1,25 @@\n+//! HirDisplay implementations for various hir types.\n+use hir_ty::display::{\n+    write_bounds_like_dyn_trait_with_prefix, HirDisplay, HirDisplayError, HirFormatter,\n+};\n+\n+use crate::{Substs, Type, TypeParam};\n+\n+impl HirDisplay for Type {\n+    fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n+        self.ty.value.hir_fmt(f)\n+    }\n+}\n+\n+impl HirDisplay for TypeParam {\n+    fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n+        write!(f, \"{}\", self.name(f.db))?;\n+        let bounds = f.db.generic_predicates_for_param(self.id);\n+        let substs = Substs::type_params(f.db, self.id.parent);\n+        let predicates = bounds.iter().cloned().map(|b| b.subst(&substs)).collect::<Vec<_>>();\n+        if !(predicates.is_empty() || f.omit_verbose_types()) {\n+            write_bounds_like_dyn_trait_with_prefix(\":\", &predicates, f)?;\n+        }\n+        Ok(())\n+    }\n+}"}, {"sha": "469ed5b5e6b141681b40deab815053fddd63c832", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b9c172a977135760006b6222820ac7240be67d58/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9c172a977135760006b6222820ac7240be67d58/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=b9c172a977135760006b6222820ac7240be67d58", "patch": "@@ -29,6 +29,8 @@ mod has_source;\n pub mod diagnostics;\n pub mod db;\n \n+mod display;\n+\n use std::{iter, sync::Arc};\n \n use arrayvec::ArrayVec;\n@@ -50,7 +52,6 @@ use hir_def::{\n use hir_expand::{diagnostics::DiagnosticSink, name::name, MacroDefKind};\n use hir_ty::{\n     autoderef,\n-    display::{write_bounds_like_dyn_trait_with_prefix, HirDisplayError, HirFormatter},\n     method_resolution::{self, TyFingerprint},\n     to_assoc_type_id,\n     traits::{FnTrait, Solution, SolutionVariables},\n@@ -1412,19 +1413,6 @@ impl TypeParam {\n     }\n }\n \n-impl HirDisplay for TypeParam {\n-    fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n-        write!(f, \"{}\", self.name(f.db))?;\n-        let bounds = f.db.generic_predicates_for_param(self.id);\n-        let substs = Substs::type_params(f.db, self.id.parent);\n-        let predicates = bounds.iter().cloned().map(|b| b.subst(&substs)).collect::<Vec<_>>();\n-        if !(predicates.is_empty() || f.omit_verbose_types()) {\n-            write_bounds_like_dyn_trait_with_prefix(\":\", &predicates, f)?;\n-        }\n-        Ok(())\n-    }\n-}\n-\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n pub struct LifetimeParam {\n     pub(crate) id: LifetimeParamId,\n@@ -2054,12 +2042,6 @@ impl Type {\n     }\n }\n \n-impl HirDisplay for Type {\n-    fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n-        self.ty.value.hir_fmt(f)\n-    }\n-}\n-\n // FIXME: closures\n #[derive(Debug)]\n pub struct Callable {"}]}