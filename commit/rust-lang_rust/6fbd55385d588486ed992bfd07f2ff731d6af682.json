{"sha": "6fbd55385d588486ed992bfd07f2ff731d6af682", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYmQ1NTM4NWQ1ODg0ODZlZDk5MmJmZDA3ZjJmZjczMWQ2YWY2ODI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-16T06:56:39Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-16T14:39:49Z"}, "message": "Rollup merge of #59079 - euclio:macro-semi, r=estebank\n\nadd suggestions to invalid macro item error\n\nr? @estebank", "tree": {"sha": "3c4d54619de9b6613659bab409dbb98150eebd6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c4d54619de9b6613659bab409dbb98150eebd6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fbd55385d588486ed992bfd07f2ff731d6af682", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlyNCrYACgkQ/vbIBR0O\nATzY8w/+JHKzQ/VTpOhh3aQturHToJR4bad5psa/ktYFHgVvNcnVE4ropia70akZ\n/kR/u+z+Q1sO0aNRS8LYhzhc1xUdmmLfMxlysl3Y+hfMa3gLLS52nvQQ21D58e+n\nz0MWdmQfOwUmfcZai8x6vHUXVAnz9sjOSSpp/mj0AV25pbSNigTd7zhIJYOUafvu\nWcTWhmRPOwBR3A2bX/XnVHNw+n9/1mrlY6W9pfkJWk3z95eDNv03+FyqEh21lZpw\nvwLba4pGxp36DKwisUGY3bMP5abj98eW+R5JFCitzmyEr9qp6mcbFsstdAnn0agF\nGK1yimOMEcGrjNIOkVC2wUiBbk0dRT2tmILLQST9ZW3jB5/0G3yqSKkN02eMefzz\nByvjsJl0Lj2BfGOT7QDWCG/Yz0K0E3hVG0oa3V0lWUMzNTA1IpGB+4X3ZTdQ1SR9\ngvnOmNkljVKLrxhTpwyU41FNvQoD2ETPOAizA0jpaawrIQsQka/Vqrf6Ayp4+VY0\n7klP3dgEmyoRFzUmE/t0r49WUmOWctCbR0lupSxAf2HHjMO79OZnkWhHLzwfjNA7\nTvgPYxcI7ur1mMSMFf5zXGHcza2Rlyj6CoW5hQktXeEz9HvReIIGqfSq/Yy+Kyr7\nIflFBxs4/t7nR7Rd+sI3YB3wbmJN8BTWJNO5JSUCm8haD+6EdYk=\n=OOV3\n-----END PGP SIGNATURE-----", "payload": "tree 3c4d54619de9b6613659bab409dbb98150eebd6c\nparent 0e57b7230d69a529b11d9deb423cb53ba028eba0\nparent 5abd6d9492e8a5a4592bca4c18e1de6104b1ea51\nauthor kennytm <kennytm@gmail.com> 1552719399 +0800\ncommitter kennytm <kennytm@gmail.com> 1552747189 +0800\n\nRollup merge of #59079 - euclio:macro-semi, r=estebank\n\nadd suggestions to invalid macro item error\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fbd55385d588486ed992bfd07f2ff731d6af682", "html_url": "https://github.com/rust-lang/rust/commit/6fbd55385d588486ed992bfd07f2ff731d6af682", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fbd55385d588486ed992bfd07f2ff731d6af682/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e57b7230d69a529b11d9deb423cb53ba028eba0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e57b7230d69a529b11d9deb423cb53ba028eba0", "html_url": "https://github.com/rust-lang/rust/commit/0e57b7230d69a529b11d9deb423cb53ba028eba0"}, {"sha": "5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "url": "https://api.github.com/repos/rust-lang/rust/commits/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "html_url": "https://github.com/rust-lang/rust/commit/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51"}], "stats": {"total": 109, "additions": 85, "deletions": 24}, "files": [{"sha": "22af7d47fd0a1fe6736bab98aac875feb383d416", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6fbd55385d588486ed992bfd07f2ff731d6af682", "patch": "@@ -5116,12 +5116,8 @@ impl<'a> Parser<'a> {\n \n                 let ident = self.parse_ident()?;\n                 let (delim, tokens) = self.expect_delimited_token_tree()?;\n-                if delim != MacDelimiter::Brace {\n-                    if !self.eat(&token::Semi) {\n-                        let msg = \"macros that expand to items must either \\\n-                                   be surrounded with braces or followed by a semicolon\";\n-                        self.span_err(self.prev_span, msg);\n-                    }\n+                if delim != MacDelimiter::Brace && !self.eat(&token::Semi) {\n+                    self.report_invalid_macro_expansion_item();\n                 }\n \n                 (ident, ast::MacroDef { tokens: tokens, legacy: true })\n@@ -5264,13 +5260,8 @@ impl<'a> Parser<'a> {\n                 // if it has a special ident, it's definitely an item\n                 //\n                 // Require a semicolon or braces.\n-                if style != MacStmtStyle::Braces {\n-                    if !self.eat(&token::Semi) {\n-                        self.span_err(self.prev_span,\n-                                      \"macros that expand to items must \\\n-                                       either be surrounded with braces or \\\n-                                       followed by a semicolon\");\n-                    }\n+                if style != MacStmtStyle::Braces && !self.eat(&token::Semi) {\n+                    self.report_invalid_macro_expansion_item();\n                 }\n                 let span = lo.to(hi);\n                 Stmt {\n@@ -8360,13 +8351,8 @@ impl<'a> Parser<'a> {\n             };\n             // eat a matched-delimiter token tree:\n             let (delim, tts) = self.expect_delimited_token_tree()?;\n-            if delim != MacDelimiter::Brace {\n-                if !self.eat(&token::Semi) {\n-                    self.span_err(self.prev_span,\n-                                  \"macros that expand to items must either \\\n-                                   be surrounded with braces or followed by \\\n-                                   a semicolon\");\n-                }\n+            if delim != MacDelimiter::Brace && !self.eat(&token::Semi) {\n+                self.report_invalid_macro_expansion_item();\n             }\n \n             let hi = self.prev_span;\n@@ -8597,6 +8583,25 @@ impl<'a> Parser<'a> {\n             }\n         }\n     }\n+\n+    fn report_invalid_macro_expansion_item(&self) {\n+        self.struct_span_err(\n+            self.prev_span,\n+            \"macros that expand to items must be delimited with braces or followed by a semicolon\",\n+        ).multipart_suggestion(\n+            \"change the delimiters to curly braces\",\n+            vec![\n+                (self.prev_span.with_hi(self.prev_span.lo() + BytePos(1)), String::from(\" {\")),\n+                (self.prev_span.with_lo(self.prev_span.hi() - BytePos(1)), '}'.to_string()),\n+            ],\n+            Applicability::MaybeIncorrect,\n+        ).span_suggestion(\n+            self.sess.source_map.next_point(self.prev_span),\n+            \"add a semicolon\",\n+            ';'.to_string(),\n+            Applicability::MaybeIncorrect,\n+        ).emit();\n+    }\n }\n \n pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedBrace>, handler: &errors::Handler) {"}, {"sha": "ceb44ecf7f58379dea230ebdf0588cfa2c724e63", "filename": "src/test/ui/issues/issue-10536.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fissues%2Fissue-10536.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fissues%2Fissue-10536.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10536.rs?ref=6fbd55385d588486ed992bfd07f2ff731d6af682", "patch": "@@ -12,7 +12,7 @@ pub fn main() {\n     foo!();\n \n     assert!({one! two()});\n-    //~^ ERROR macros that expand to items must either be surrounded with braces or followed by a\n+    //~^ ERROR macros that expand to items\n     //~| ERROR cannot find macro `one!` in this scope\n     //~| ERROR mismatched types\n "}, {"sha": "584cdf43a8f4bafe862d2faab3869be92d290c04", "filename": "src/test/ui/issues/issue-10536.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr?ref=6fbd55385d588486ed992bfd07f2ff731d6af682", "patch": "@@ -1,8 +1,16 @@\n-error: macros that expand to items must either be surrounded with braces or followed by a semicolon\n+error: macros that expand to items must be delimited with braces or followed by a semicolon\n   --> $DIR/issue-10536.rs:14:22\n    |\n LL |     assert!({one! two()});\n    |                      ^^\n+help: change the delimiters to curly braces\n+   |\n+LL |     assert!({one! two {}});\n+   |                       ^^\n+help: add a semicolon\n+   |\n+LL |     assert!({one! two();});\n+   |                        ^\n \n error: expected `(` or `{`, found `}`\n   --> $DIR/issue-10536.rs:21:22"}, {"sha": "3afc275d61a2bc864fc954d558f5ba7e6106cb54", "filename": "src/test/ui/parser/macros-no-semicolon-items.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.rs?ref=6fbd55385d588486ed992bfd07f2ff731d6af682", "patch": "@@ -1,4 +1,15 @@\n macro_rules! foo()  //~ ERROR semicolon\n+                    //~| ERROR unexpected end of macro\n+\n+macro_rules! bar {\n+    ($($tokens:tt)*) => {}\n+}\n+\n+bar!( //~ ERROR semicolon\n+    blah\n+    blah\n+    blah\n+)\n \n fn main() {\n }"}, {"sha": "5276aa6f5e9e9992ac6861e29b224b7fd333e37f", "filename": "src/test/ui/parser/macros-no-semicolon-items.stderr", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fbd55385d588486ed992bfd07f2ff731d6af682/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.stderr?ref=6fbd55385d588486ed992bfd07f2ff731d6af682", "patch": "@@ -1,8 +1,45 @@\n-error: macros that expand to items must either be surrounded with braces or followed by a semicolon\n+error: macros that expand to items must be delimited with braces or followed by a semicolon\n   --> $DIR/macros-no-semicolon-items.rs:1:17\n    |\n LL | macro_rules! foo()\n    |                 ^^\n+help: change the delimiters to curly braces\n+   |\n+LL | macro_rules! foo {}\n+   |                  ^^\n+help: add a semicolon\n+   |\n+LL | macro_rules! foo();\n+   |                   ^\n+\n+error: macros that expand to items must be delimited with braces or followed by a semicolon\n+  --> $DIR/macros-no-semicolon-items.rs:8:5\n+   |\n+LL |   bar!(\n+   |  _____^\n+LL | |     blah\n+LL | |     blah\n+LL | |     blah\n+LL | | )\n+   | |_^\n+help: change the delimiters to curly braces\n+   |\n+LL | bar! {\n+LL |     blah\n+LL |     blah\n+LL |     blah\n+LL | }\n+   |\n+help: add a semicolon\n+   |\n+LL | );\n+   |  ^\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macros-no-semicolon-items.rs:1:1\n+   |\n+LL | macro_rules! foo()\n+   | ^^^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n \n-error: aborting due to previous error\n+error: aborting due to 3 previous errors\n "}]}