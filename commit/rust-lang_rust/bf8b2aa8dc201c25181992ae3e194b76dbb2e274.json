{"sha": "bf8b2aa8dc201c25181992ae3e194b76dbb2e274", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmOGIyYWE4ZGMyMDFjMjUxODE5OTJhZTNlMTk0Yjc2ZGJiMmUyNzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-17T11:59:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-17T11:59:58Z"}, "message": "add test for better ptr handling in enum niches", "tree": {"sha": "8f1af4ec1dc07ab5af22158befa508739ee00fd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f1af4ec1dc07ab5af22158befa508739ee00fd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf8b2aa8dc201c25181992ae3e194b76dbb2e274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf8b2aa8dc201c25181992ae3e194b76dbb2e274", "html_url": "https://github.com/rust-lang/rust/commit/bf8b2aa8dc201c25181992ae3e194b76dbb2e274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf8b2aa8dc201c25181992ae3e194b76dbb2e274/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1233a721d0832071a2c1b1a95895cc0b924b553", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1233a721d0832071a2c1b1a95895cc0b924b553", "html_url": "https://github.com/rust-lang/rust/commit/a1233a721d0832071a2c1b1a95895cc0b924b553"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "618d503cd5f2185b3f68aa042490271c2b3e356d", "filename": "tests/run-pass/enum_discriminant_ptr_value.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bf8b2aa8dc201c25181992ae3e194b76dbb2e274/tests%2Frun-pass%2Fenum_discriminant_ptr_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf8b2aa8dc201c25181992ae3e194b76dbb2e274/tests%2Frun-pass%2Fenum_discriminant_ptr_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fenum_discriminant_ptr_value.rs?ref=bf8b2aa8dc201c25181992ae3e194b76dbb2e274", "patch": "@@ -0,0 +1,9 @@\n+// A niche-optimized enum where the discriminant is a pointer value -- relies on ptr-to-int casts in\n+// the niche handling code.\n+// compile-flags: -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+\n+fn main() {\n+    let x = 42;\n+    let val: Option<&i32> = unsafe { std::mem::transmute((&x as *const i32).wrapping_offset(2)) };\n+    assert!(val.is_some());\n+}"}]}