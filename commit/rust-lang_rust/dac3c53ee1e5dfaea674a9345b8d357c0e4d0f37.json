{"sha": "dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYzNjNTNlZTFlNWRmYWVhNjc0YTkzNDViOGQzNTdjMGU0ZDBmMzc=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-01-19T07:00:50Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-01-19T07:00:50Z"}, "message": "Avoid unused variable warning in quote_*!\n\nThe provided span isn't used in all cases (namely primitives).", "tree": {"sha": "01fd251b4ae73724681cf59bb6377b4f7139c4e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01fd251b4ae73724681cf59bb6377b4f7139c4e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37", "html_url": "https://github.com/rust-lang/rust/commit/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf07c80838e59cb21748f7e3b092ced96f41a208", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf07c80838e59cb21748f7e3b092ced96f41a208", "html_url": "https://github.com/rust-lang/rust/commit/bf07c80838e59cb21748f7e3b092ced96f41a208"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "693955f460ce2d05b42416e7db39e6354d68d079", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37", "patch": "@@ -530,7 +530,7 @@ fn mk_tt(cx: &ExtCtxt, sp: Span, tt: &ast::TokenTree) -> ~[@ast::Stmt] {\n     match *tt {\n \n         ast::TTTok(sp, ref tok) => {\n-            let e_sp = cx.expr_ident(sp, id_ext(\"sp\"));\n+            let e_sp = cx.expr_ident(sp, id_ext(\"_sp\"));\n             let e_tok = cx.expr_call_ident(sp,\n                                            id_ext(\"TTTok\"),\n                                            ~[e_sp, mk_token(cx, sp, tok)]);\n@@ -628,7 +628,7 @@ fn expand_tts(cx: &ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n                                    ~[]);\n \n     let stmt_let_sp = cx.stmt_let(sp, false,\n-                                  id_ext(\"sp\"),\n+                                  id_ext(\"_sp\"),\n                                   e_sp);\n \n     let stmt_let_tt = cx.stmt_let(sp, true,"}, {"sha": "0ba2bfd15954f83f0da604150a27cccefa35dd38", "filename": "src/test/run-pass-fulldeps/quote-unused-sp-no-warning.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs?ref=dac3c53ee1e5dfaea674a9345b8d357c0e4d0f37", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast\n+\n+#[deny(unused_variable)];\n+\n+extern mod syntax;\n+\n+use syntax::ext::base::ExtCtxt;\n+\n+fn test(cx: &mut ExtCtxt) {\n+    let foo = 10i;\n+    let _e = quote_expr!(cx, $foo);\n+}\n+\n+pub fn main() { }"}]}