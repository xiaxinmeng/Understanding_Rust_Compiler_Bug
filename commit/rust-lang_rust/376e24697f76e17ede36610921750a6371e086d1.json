{"sha": "376e24697f76e17ede36610921750a6371e086d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NmUyNDY5N2Y3NmUxN2VkZTM2NjEwOTIxNzUwYTYzNzFlMDg2ZDE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-14T15:07:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-14T15:07:35Z"}, "message": "Rollup merge of #39788 - GuillaumeGomez:rustdoc-test-md-file, r=alexcrichton\n\nAdd filename when running rustdoc --test on a markdown file\n\nr? @alexcrichton", "tree": {"sha": "5bc647b0d79e54ca389146e9b3917dee37094387", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bc647b0d79e54ca389146e9b3917dee37094387"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/376e24697f76e17ede36610921750a6371e086d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/376e24697f76e17ede36610921750a6371e086d1", "html_url": "https://github.com/rust-lang/rust/commit/376e24697f76e17ede36610921750a6371e086d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/376e24697f76e17ede36610921750a6371e086d1/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d17ef146bb2b4757bcfcbda72dd494ff2867677", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d17ef146bb2b4757bcfcbda72dd494ff2867677", "html_url": "https://github.com/rust-lang/rust/commit/8d17ef146bb2b4757bcfcbda72dd494ff2867677"}, {"sha": "cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84", "html_url": "https://github.com/rust-lang/rust/commit/cc8d4558956e48ff65d5e0d1af13f3f6e8466b84"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "c67e2fdc2b0276a7ecf45938b19cfb66f94cdef5", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/376e24697f76e17ede36610921750a6371e086d1/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376e24697f76e17ede36610921750a6371e086d1/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=376e24697f76e17ede36610921750a6371e086d1", "patch": "@@ -155,7 +155,8 @@ pub fn test(input: &str, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,\n     let mut opts = TestOptions::default();\n     opts.no_crate_inject = true;\n     let mut collector = Collector::new(input.to_string(), cfgs, libs, externs,\n-                                       true, opts, maybe_sysroot, None);\n+                                       true, opts, maybe_sysroot, None,\n+                                       Some(input.to_owned()));\n     find_testable_code(&input_str, &mut collector, DUMMY_SP);\n     test_args.insert(0, \"rustdoctest\".to_string());\n     testing::test_main(&test_args, collector.tests);"}, {"sha": "1c37067d7f69d46f8914db8fd4ed496dec3eccd9", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/376e24697f76e17ede36610921750a6371e086d1/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376e24697f76e17ede36610921750a6371e086d1/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=376e24697f76e17ede36610921750a6371e086d1", "patch": "@@ -104,7 +104,8 @@ pub fn run(input: &str,\n                                        false,\n                                        opts,\n                                        maybe_sysroot,\n-                                       Some(codemap));\n+                                       Some(codemap),\n+                                       None);\n \n     {\n         let dep_graph = DepGraph::new(false);\n@@ -391,12 +392,13 @@ pub struct Collector {\n     maybe_sysroot: Option<PathBuf>,\n     position: Span,\n     codemap: Option<Rc<CodeMap>>,\n+    filename: Option<String>,\n }\n \n impl Collector {\n     pub fn new(cratename: String, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,\n                use_headers: bool, opts: TestOptions, maybe_sysroot: Option<PathBuf>,\n-               codemap: Option<Rc<CodeMap>>) -> Collector {\n+               codemap: Option<Rc<CodeMap>>, filename: Option<String>) -> Collector {\n         Collector {\n             tests: Vec::new(),\n             names: Vec::new(),\n@@ -411,6 +413,7 @@ impl Collector {\n             maybe_sysroot: maybe_sysroot,\n             position: DUMMY_SP,\n             codemap: codemap,\n+            filename: filename,\n         }\n     }\n \n@@ -483,6 +486,8 @@ impl Collector {\n     pub fn get_filename(&self) -> String {\n         if let Some(ref codemap) = self.codemap {\n             codemap.span_to_filename(self.position)\n+        } else if let Some(ref filename) = self.filename {\n+            filename.clone()\n         } else {\n             \"<input>\".to_owned()\n         }"}]}