{"sha": "cbdb18650e383fd49beb442ce02d006d0daf865c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZGIxODY1MGUzODNmZDQ5YmViNDQyY2UwMmQwMDZkMGRhZjg2NWM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-15T02:30:16Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:26Z"}, "message": "Add some comments", "tree": {"sha": "90a05b33f20d1ab2dc41c6e15f25e5afbb22b4b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90a05b33f20d1ab2dc41c6e15f25e5afbb22b4b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbdb18650e383fd49beb442ce02d006d0daf865c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbdb18650e383fd49beb442ce02d006d0daf865c", "html_url": "https://github.com/rust-lang/rust/commit/cbdb18650e383fd49beb442ce02d006d0daf865c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbdb18650e383fd49beb442ce02d006d0daf865c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eea290d7fdbbf549ac3b245c295465c44d4cc118", "url": "https://api.github.com/repos/rust-lang/rust/commits/eea290d7fdbbf549ac3b245c295465c44d4cc118", "html_url": "https://github.com/rust-lang/rust/commit/eea290d7fdbbf549ac3b245c295465c44d4cc118"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "27997b3abc3ac61eea9ae7f85edf56afb13ef774", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cbdb18650e383fd49beb442ce02d006d0daf865c/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbdb18650e383fd49beb442ce02d006d0daf865c/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=cbdb18650e383fd49beb442ce02d006d0daf865c", "patch": "@@ -8,10 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Liveness analysis.\n-\n-// FIXME: Make sure this analysis uses proper MIR semantics. Also find out what\n-//        the MIR semantics are.\n+//! Liveness analysis which computes liveness of MIR local variables at the boundary of basic blocks\n \n use rustc::mir::*;\n use rustc::mir::visit::{LvalueContext, Visitor};\n@@ -47,15 +44,31 @@ impl<'tcx> Visitor<'tcx> for BlockInfoVisitor {\n         if let Lvalue::Local(local) = *lvalue {\n             match context {\n                 LvalueContext::Store |\n+\n+                // We let Call defined the result in both the success and unwind cases.\n+                // This may not be right.\n                 LvalueContext::Call |\n+\n+                // Storage live and storage dead aren't proper defines, but we can ignore\n+                // values that come before them.\n                 LvalueContext::StorageLive |\n                 LvalueContext::StorageDead => {\n                     self.defs.add(&local);\n                 }\n                 LvalueContext::Projection(..) |\n+\n+                // Borrows only consider their local used at the point of the borrow.\n+                // This won't affect the results since we use this analysis for generators\n+                // and we only care about the result at suspension points. Borrows cannot\n+                // cross suspension points so this behavoir is unproblematic.\n                 LvalueContext::Borrow { .. } |\n+\n                 LvalueContext::Inspect |\n                 LvalueContext::Consume |\n+\n+                // We consider drops to always be uses of locals.\n+                // Drop eloboration should be run before this analysis otherwise\n+                // the results might be too pessimistic.\n                 LvalueContext::Drop => {\n                     // Ignore uses which are already defined in this block\n                     if !self.pre_defs.contains(&local) {\n@@ -90,6 +103,7 @@ fn block<'tcx>(b: &BasicBlockData<'tcx>, locals: usize) -> BlockInfo {\n     }\n }\n \n+// This gives the result of the liveness analysis at the boundary of basic blocks\n pub struct LivenessResult {\n     pub ins: IndexVec<BasicBlock, LocalSet>,\n     pub outs: IndexVec<BasicBlock, LocalSet>,"}]}