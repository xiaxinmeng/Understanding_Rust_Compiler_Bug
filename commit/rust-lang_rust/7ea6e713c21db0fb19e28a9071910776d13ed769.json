{"sha": "7ea6e713c21db0fb19e28a9071910776d13ed769", "node_id": "C_kwDOAAsO6NoAKDdlYTZlNzEzYzIxZGIwZmIxOWUyOGE5MDcxOTEwNzc2ZDEzZWQ3Njk", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-01T17:50:56Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-01T17:50:56Z"}, "message": "Remove some dead code", "tree": {"sha": "17a33f9ed1ec130b25ef36878bf4267379a2016c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17a33f9ed1ec130b25ef36878bf4267379a2016c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ea6e713c21db0fb19e28a9071910776d13ed769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea6e713c21db0fb19e28a9071910776d13ed769", "html_url": "https://github.com/rust-lang/rust/commit/7ea6e713c21db0fb19e28a9071910776d13ed769", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ea6e713c21db0fb19e28a9071910776d13ed769/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6f98cd28e02d10323c125c8ad2eef44dbfbb20", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6f98cd28e02d10323c125c8ad2eef44dbfbb20", "html_url": "https://github.com/rust-lang/rust/commit/ad6f98cd28e02d10323c125c8ad2eef44dbfbb20"}], "stats": {"total": 32, "additions": 1, "deletions": 31}, "files": [{"sha": "917abde9de1ce34eb81a2783e23d0f475142b341", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=7ea6e713c21db0fb19e28a9071910776d13ed769", "patch": "@@ -351,7 +351,6 @@ pub enum Kind {\n     Check,\n     Clippy,\n     Fix,\n-    Format,\n     Test,\n     Bench,\n     Dist,\n@@ -399,7 +398,7 @@ impl<'a> Builder<'a> {\n                 native::Lld,\n                 native::CrtBeginEnd\n             ),\n-            Kind::Check | Kind::Clippy { .. } | Kind::Fix | Kind::Format => describe!(\n+            Kind::Check | Kind::Clippy { .. } | Kind::Fix => describe!(\n                 check::Std,\n                 check::Rustc,\n                 check::Rustdoc,"}, {"sha": "5af9248583caefd33ec026ef7b8feb01ce933189", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=7ea6e713c21db0fb19e28a9071910776d13ed769", "patch": "@@ -1149,10 +1149,6 @@ impl Config {\n         self.verbose > 0\n     }\n \n-    pub fn very_verbose(&self) -> bool {\n-        self.verbose > 1\n-    }\n-\n     pub fn sanitizers_enabled(&self, target: TargetSelection) -> bool {\n         self.target_config.get(&target).map(|t| t.sanitizers).flatten().unwrap_or(self.sanitizers)\n     }"}, {"sha": "8569089f70128beff3440f296c6859c3b853dd59", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=7ea6e713c21db0fb19e28a9071910776d13ed769", "patch": "@@ -110,7 +110,6 @@ use std::fs::{self, File, OpenOptions};\n use std::io::{Read, Seek, SeekFrom, Write};\n use std::path::{Path, PathBuf};\n use std::process::{self, Command};\n-use std::slice;\n use std::str;\n \n #[cfg(unix)]\n@@ -472,10 +471,6 @@ impl Build {\n         build\n     }\n \n-    pub fn build_triple(&self) -> &[Interned<String>] {\n-        slice::from_ref(&self.build.triple)\n-    }\n-\n     // modified from `check_submodule` and `update_submodule` in bootstrap.py\n     /// Given a path to the directory of a submodule, update it.\n     ///"}, {"sha": "ee58bedcc8735104091947eead2b8b5af2dcd833", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea6e713c21db0fb19e28a9071910776d13ed769/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=7ea6e713c21db0fb19e28a9071910776d13ed769", "patch": "@@ -16,11 +16,6 @@ use build_helper::t;\n use crate::builder::Builder;\n use crate::config::{Config, TargetSelection};\n \n-/// Returns the `name` as the filename of a static library for `target`.\n-pub fn staticlib(name: &str, target: TargetSelection) -> String {\n-    if target.contains(\"windows\") { format!(\"{}.lib\", name) } else { format!(\"lib{}.a\", name) }\n-}\n-\n /// Given an executable called `name`, return the filename for the\n /// executable for a particular target.\n pub fn exe(name: &str, target: TargetSelection) -> String {\n@@ -81,21 +76,6 @@ fn link_lib_path() -> Vec<PathBuf> {\n     env::split_paths(&var).collect()\n }\n \n-/// `push` all components to `buf`. On windows, append `.exe` to the last component.\n-pub fn push_exe_path(mut buf: PathBuf, components: &[&str]) -> PathBuf {\n-    let (&file, components) = components.split_last().expect(\"at least one component required\");\n-    let mut file = file.to_owned();\n-\n-    if cfg!(windows) {\n-        file.push_str(\".exe\");\n-    }\n-\n-    buf.extend(components);\n-    buf.push(file);\n-\n-    buf\n-}\n-\n pub struct TimeIt(bool, Instant);\n \n /// Returns an RAII structure that prints out how long it took to drop."}]}