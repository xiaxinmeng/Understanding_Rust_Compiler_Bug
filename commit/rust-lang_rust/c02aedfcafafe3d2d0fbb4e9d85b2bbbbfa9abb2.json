{"sha": "c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMmFlZGZjYWZhZmUzZDJkMGZiYjRlOWQ4NWIyYmJiYmZhOWFiYjI=", "commit": {"author": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2018-05-01T22:32:31Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-04T22:01:28Z"}, "message": "Use rustfix' suggestion fixing API\n\nUses branch from <https://github.com/rust-lang-nursery/rustfix/pull/63>\nuntil we publish a new release.", "tree": {"sha": "3dc0a5ea547a2afc4b99d9d5fcd25306cfa7dc84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dc0a5ea547a2afc4b99d9d5fcd25306cfa7dc84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "html_url": "https://github.com/rust-lang/rust/commit/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd6aa149bca7b896650c5f15a9c0000fc4f0056d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd6aa149bca7b896650c5f15a9c0000fc4f0056d", "html_url": "https://github.com/rust-lang/rust/commit/fd6aa149bca7b896650c5f15a9c0000fc4f0056d"}], "stats": {"total": 80, "additions": 6, "deletions": 74}, "files": [{"sha": "476e5927a2f2ba60aff4c6676282d2a645b6e3f6", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "patch": "@@ -13,7 +13,7 @@ regex = \"0.2\"\n serde = \"1.0\"\n serde_json = \"1.0\"\n serde_derive = \"1.0\"\n-rustfix = { git = \"https://github.com/rust-lang-nursery/rustfix\" }\n+rustfix = { git = \"https://github.com/rust-lang-nursery/rustfix\", branch = \"apply_suggestion\" }\n \n [target.'cfg(unix)'.dependencies]\n libc = \"0.2\""}, {"sha": "29ea5cdff8f9d155d52eb7f24c1aae0d48bee10b", "filename": "src/tools/compiletest/src/autofix.rs", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/fd6aa149bca7b896650c5f15a9c0000fc4f0056d/src%2Ftools%2Fcompiletest%2Fsrc%2Fautofix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd6aa149bca7b896650c5f15a9c0000fc4f0056d/src%2Ftools%2Fcompiletest%2Fsrc%2Fautofix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fautofix.rs?ref=fd6aa149bca7b896650c5f15a9c0000fc4f0056d", "patch": "@@ -1,70 +0,0 @@\n-use rustfix::{get_suggestions_from_json, Replacement};\n-use std::collections::HashSet;\n-use std::error::Error;\n-\n-pub fn run_rustfix(code: &str, json: &str) -> String {\n-    let suggestions = get_suggestions_from_json(&json, &HashSet::new())\n-        .expect(\"could not load suggestions\");\n-\n-    let mut fixed = code.to_string();\n-\n-    for sug in suggestions.into_iter().rev() {\n-        for sol in sug.solutions {\n-            for r in sol.replacements {\n-                fixed = apply_suggestion(&mut fixed, &r)\n-                    .expect(\"could not apply suggestion\");\n-            }\n-        }\n-    }\n-\n-    fixed\n-}\n-\n-fn apply_suggestion(\n-    file_content: &mut String,\n-    suggestion: &Replacement,\n-) -> Result<String, Box<Error>> {\n-    use std::cmp::max;\n-\n-    let mut new_content = String::new();\n-\n-    // Add the lines before the section we want to replace\n-    new_content.push_str(&file_content\n-        .lines()\n-        .take(max(suggestion.snippet.line_range.start.line - 1, 0) as usize)\n-        .collect::<Vec<_>>()\n-        .join(\"\\n\"));\n-    new_content.push_str(\"\\n\");\n-\n-    // Parts of line before replacement\n-    new_content.push_str(&file_content\n-        .lines()\n-        .nth(suggestion.snippet.line_range.start.line - 1)\n-        .unwrap_or(\"\")\n-        .chars()\n-        .take(suggestion.snippet.line_range.start.column - 1)\n-        .collect::<String>());\n-\n-    // Insert new content! Finally!\n-    new_content.push_str(&suggestion.replacement);\n-\n-    // Parts of line after replacement\n-    new_content.push_str(&file_content\n-        .lines()\n-        .nth(suggestion.snippet.line_range.end.line - 1)\n-        .unwrap_or(\"\")\n-        .chars()\n-        .skip(suggestion.snippet.line_range.end.column - 1)\n-        .collect::<String>());\n-\n-    // Add the lines after the section we want to replace\n-    new_content.push_str(\"\\n\");\n-    new_content.push_str(&file_content\n-        .lines()\n-        .skip(suggestion.snippet.line_range.end.line as usize)\n-        .collect::<Vec<_>>()\n-        .join(\"\\n\"));\n-    new_content.push_str(\"\\n\");\n-\n-    Ok(new_content)\n-}"}, {"sha": "a7849d53c3d75cd406feb26fffa4c6a3e315de2b", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "patch": "@@ -53,7 +53,6 @@ pub mod common;\n pub mod errors;\n mod raise_fd_limit;\n mod read2;\n-mod autofix;\n \n fn main() {\n     env_logger::init();"}, {"sha": "f0feb9b50f1b778a36abcc00392307ec28e3a1a8", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c02aedfcafafe3d2d0fbb4e9d85b2bbbbfa9abb2", "patch": "@@ -35,7 +35,6 @@ use std::path::{Path, PathBuf};\n use std::process::{Child, Command, ExitStatus, Output, Stdio};\n use std::str;\n \n-use autofix::run_rustfix;\n use extract_gdb_version;\n \n /// The name of the environment variable that holds dynamic library locations.\n@@ -2607,10 +2606,14 @@ impl<'test> TestCx<'test> {\n \n         let fixture_path = expected_output_path(&self.testpaths, None, &None, UI_FIXED);\n         if fixture_path.exists() {\n+            use std::collections::HashSet;\n+            use rustfix::{apply_suggestions, get_suggestions_from_json};\n+\n             let unfixed_code = self.load_expected_output_from_path(&self.testpaths.file)\n                 .unwrap();\n             let expected_fixed = self.load_expected_output_from_path(&fixture_path).unwrap();\n-            let fixed_code = run_rustfix(&unfixed_code, &proc_res.stderr);\n+            let suggestions = get_suggestions_from_json(&proc_res.stderr, &HashSet::new()).unwrap();\n+            let fixed_code = apply_suggestions(&unfixed_code, &suggestions);\n             let errors = self.compare_output(\"rs.fixed\", &fixed_code, &expected_fixed);\n             if errors > 0 {\n                 panic!(\"rustfix produced different fixed file!\");"}]}