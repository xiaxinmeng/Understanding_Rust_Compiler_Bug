{"sha": "554aea90b8e382678de0e87e07210af19f67f0ab", "node_id": "C_kwDOAAsO6NoAKDU1NGFlYTkwYjhlMzgyNjc4ZGUwZTg3ZTA3MjEwYWYxOWY2N2YwYWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-19T05:45:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-19T05:45:30Z"}, "message": "Rollup merge of #93954 - aDotInTheVoid:json-buffer, r=Mark-Simulacrum\n\nrustdoc-json: buffer output\n\nIt turns out we were doing syscalls for each part of the json syntax\n\nBefore:\n```\n...\n[pid 1801267] write(5, \"\\\"\", 1)         = 1\n[pid 1801267] write(5, \",\", 1)          = 1\n[pid 1801267] write(5, \"\\\"\", 1)         = 1\n...\n```\n\nAfter:\n\n```\n[pid 1974821] write(5, \"{\\\"root\\\":\\\"0:0\\\",\\\"crate_version\\\":nu\"..., 1575) = 1575\n```\n\nIn one benchmark (one struct, almost all time in `std`), this gives ~2x perf\n\nr? `@CraftSpider`\n\n`@rustbot` modify labels: +A-rustdoc-json +T-rustdoc -A-testsuite", "tree": {"sha": "715280de5ddbab0e6fb3947b29838badafe6ac7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/715280de5ddbab0e6fb3947b29838badafe6ac7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554aea90b8e382678de0e87e07210af19f67f0ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiEIP6CRBK7hj4Ov3rIwAA6JMIABADCX0FEqmDpVHCmwYpleFj\nNtojWCCPgc4SlNscu4LXl1lDjqk+1z53Le7AF+0bdWK+bksP/hggTcUuCL0l2GEG\nevxWyjwO+wRYCLpfwGob+ZHCCAWUpSc60G4TtnHp9K6cN0R27l+2JyjyAJBQlOVj\nGniC+whgf3pvXL8xt5YF8xvbxmVtqiDSt3CgxjjAcFj5dYP9inJ+dlQsWifk6wL6\nRAfU3DMEQKDU+AGETJoT9ZqM6dxbu54gCmZTqBOvyfp0vJsVb/yohjr1fdExTdZZ\n8UV+YKmVowSVFvTnsYtqrmPxsnur7lQreTsNP07Eq2Epp7+YDJmC0NO2h8LngHQ=\n=vh21\n-----END PGP SIGNATURE-----\n", "payload": "tree 715280de5ddbab0e6fb3947b29838badafe6ac7b\nparent f19adc7acc649ad2b18b6e172b683ebadb3d8a92\nparent ae158224acb8a85efce18cd358a445d18c6c6389\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645249530 +0100\ncommitter GitHub <noreply@github.com> 1645249530 +0100\n\nRollup merge of #93954 - aDotInTheVoid:json-buffer, r=Mark-Simulacrum\n\nrustdoc-json: buffer output\n\nIt turns out we were doing syscalls for each part of the json syntax\n\nBefore:\n```\n...\n[pid 1801267] write(5, \"\\\"\", 1)         = 1\n[pid 1801267] write(5, \",\", 1)          = 1\n[pid 1801267] write(5, \"\\\"\", 1)         = 1\n...\n```\n\nAfter:\n\n```\n[pid 1974821] write(5, \"{\\\"root\\\":\\\"0:0\\\",\\\"crate_version\\\":nu\"..., 1575) = 1575\n```\n\nIn one benchmark (one struct, almost all time in `std`), this gives ~2x perf\n\nr? `@CraftSpider`\n\n`@rustbot` modify labels: +A-rustdoc-json +T-rustdoc -A-testsuite\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554aea90b8e382678de0e87e07210af19f67f0ab", "html_url": "https://github.com/rust-lang/rust/commit/554aea90b8e382678de0e87e07210af19f67f0ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554aea90b8e382678de0e87e07210af19f67f0ab/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f19adc7acc649ad2b18b6e172b683ebadb3d8a92", "url": "https://api.github.com/repos/rust-lang/rust/commits/f19adc7acc649ad2b18b6e172b683ebadb3d8a92", "html_url": "https://github.com/rust-lang/rust/commit/f19adc7acc649ad2b18b6e172b683ebadb3d8a92"}, {"sha": "ae158224acb8a85efce18cd358a445d18c6c6389", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae158224acb8a85efce18cd358a445d18c6c6389", "html_url": "https://github.com/rust-lang/rust/commit/ae158224acb8a85efce18cd358a445d18c6c6389"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "52980e07b8ca39b41d67bbee2a9ff5496e192c64", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/554aea90b8e382678de0e87e07210af19f67f0ab/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aea90b8e382678de0e87e07210af19f67f0ab/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=554aea90b8e382678de0e87e07210af19f67f0ab", "patch": "@@ -8,6 +8,7 @@ mod conversions;\n \n use std::cell::RefCell;\n use std::fs::{create_dir_all, File};\n+use std::io::{BufWriter, Write};\n use std::path::PathBuf;\n use std::rc::Rc;\n \n@@ -213,7 +214,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         let mut index = (*self.index).clone().into_inner();\n         index.extend(self.get_trait_items());\n         // This needs to be the default HashMap for compatibility with the public interface for\n-        // rustdoc-json\n+        // rustdoc-json-types\n         #[allow(rustc::default_hash_types)]\n         let output = types::Crate {\n             root: types::Id(String::from(\"0:0\")),\n@@ -263,8 +264,10 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         let mut p = out_dir;\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());\n         p.set_extension(\"json\");\n-        let file = try_err!(File::create(&p), p);\n-        serde_json::ser::to_writer(&file, &output).unwrap();\n+        let mut file = BufWriter::new(try_err!(File::create(&p), p));\n+        serde_json::ser::to_writer(&mut file, &output).unwrap();\n+        try_err!(file.flush(), p);\n+\n         Ok(())\n     }\n "}]}