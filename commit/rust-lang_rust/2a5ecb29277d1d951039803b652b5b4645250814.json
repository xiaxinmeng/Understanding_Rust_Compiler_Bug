{"sha": "2a5ecb29277d1d951039803b652b5b4645250814", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNWVjYjI5Mjc3ZDFkOTUxMDM5ODAzYjY1MmI1YjQ2NDUyNTA4MTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-04T20:56:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-04T20:56:33Z"}, "message": "Rollup merge of #82690 - jyn514:remove-pass-docs, r=Manishearth\n\nUpdate rustdoc documentation\n\n- Remove most of the information about passes. Passes are deprecated.\n- Add `--document-private-items`; it was missing before.\n- Update `--output-format json`; it was very outdated.\n- Note that `--input-format` is deprecated.\n- Move deprecated options to the very end.\n\nCloses https://github.com/rust-lang/rust/issues/82675.\n\nr? `@Manishearth`", "tree": {"sha": "f7ae4681f38d0a685c6a28745aded21f3fd5e0d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7ae4681f38d0a685c6a28745aded21f3fd5e0d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a5ecb29277d1d951039803b652b5b4645250814", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQUmBCRBK7hj4Ov3rIwAAdHIIACBKdJIqRe2v/RoUe7ebLjEm\nhZjPU8AyY/vVmjEFtLg/OIs7Rt6l8Wu5zTUHYQQxAUYcYtXRF0dTUWrg+eMxDBys\nuK2SOdp3wyYOwX1M/gLjG9jFvusDdLc089u/Ds6Z6C4GntblRpbrCJ5aE1QL1f5h\nb8bM6+Kizrt/ikZyRW107327JdT94qYrcwhrI1kNfQcFCbsjdWMxTwPLafneUpDx\nrlYueGrAeBjvVA196iDVnItxMSDX+v03BxNA5Gkmyn7Jxj0RY7uC+nwy9qYAyVqg\nVPECUHoWc4KoEvQg4PT9IzR8NkSioWEOBxoO3d8MKNo1cspFZnxI2EHq5f1arzQ=\n=Vcln\n-----END PGP SIGNATURE-----\n", "payload": "tree f7ae4681f38d0a685c6a28745aded21f3fd5e0d4\nparent 2f28361936f4709043a447d48fd3b8150ead868f\nparent dbdaa1248614790d8a2b6ea4ccd032456bfc6466\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1614891393 +0100\ncommitter GitHub <noreply@github.com> 1614891393 +0100\n\nRollup merge of #82690 - jyn514:remove-pass-docs, r=Manishearth\n\nUpdate rustdoc documentation\n\n- Remove most of the information about passes. Passes are deprecated.\n- Add `--document-private-items`; it was missing before.\n- Update `--output-format json`; it was very outdated.\n- Note that `--input-format` is deprecated.\n- Move deprecated options to the very end.\n\nCloses https://github.com/rust-lang/rust/issues/82675.\n\nr? `@Manishearth`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5ecb29277d1d951039803b652b5b4645250814", "html_url": "https://github.com/rust-lang/rust/commit/2a5ecb29277d1d951039803b652b5b4645250814", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a5ecb29277d1d951039803b652b5b4645250814/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f28361936f4709043a447d48fd3b8150ead868f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f28361936f4709043a447d48fd3b8150ead868f", "html_url": "https://github.com/rust-lang/rust/commit/2f28361936f4709043a447d48fd3b8150ead868f"}, {"sha": "dbdaa1248614790d8a2b6ea4ccd032456bfc6466", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdaa1248614790d8a2b6ea4ccd032456bfc6466", "html_url": "https://github.com/rust-lang/rust/commit/dbdaa1248614790d8a2b6ea4ccd032456bfc6466"}], "stats": {"total": 199, "additions": 67, "deletions": 132}, "files": [{"sha": "ae94527e2b4ca80ee5dfb25d6722ebe71235e161", "filename": "src/doc/rustdoc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md?ref=2a5ecb29277d1d951039803b652b5b4645250814", "patch": "@@ -8,7 +8,7 @@\n - [Documentation tests](documentation-tests.md)\n - [Linking to items by name](linking-to-items-by-name.md)\n - [Lints](lints.md)\n-- [Passes](passes.md)\n - [Advanced features](advanced-features.md)\n - [Unstable features](unstable-features.md)\n+- [Passes](passes.md)\n - [References](references.md)"}, {"sha": "2e4016e24bc3fa8d81333c5f93f2f1be94ed68b1", "filename": "src/doc/rustdoc/src/command-line-arguments.md", "status": "modified", "additions": 37, "deletions": 49, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md?ref=2a5ecb29277d1d951039803b652b5b4645250814", "patch": "@@ -57,23 +57,6 @@ release: 1.17.0\n LLVM version: 3.9\n ```\n \n-## `-r`/`--input-format`: input format\n-\n-This flag is currently ignored; the idea is that `rustdoc` would support various\n-input formats, and you could specify them via this flag.\n-\n-Rustdoc only supports Rust source code and Markdown input formats. If the\n-file ends in `.md` or `.markdown`, `rustdoc` treats it as a Markdown file.\n-Otherwise, it assumes that the input file is Rust.\n-\n-\n-## `-w`/`--output-format`: output format\n-\n-This flag is currently ignored; the idea is that `rustdoc` would support\n-various output formats, and you could specify them via this flag.\n-\n-Rustdoc only supports HTML output, and so this flag is redundant today.\n-\n ## `-o`/`--output`: output path\n \n Using this flag looks like this:\n@@ -100,6 +83,25 @@ By default, `rustdoc` assumes that the name of your crate is the same name\n as the `.rs` file. `--crate-name` lets you override this assumption with\n whatever name you choose.\n \n+## `--document-private-items`: Show items that are not public\n+\n+Using this flag looks like this:\n+\n+```bash\n+$ rustdoc src/lib.rs --document-private-items\n+```\n+\n+By default, `rustdoc` only documents items that are publicly reachable.\n+\n+```rust\n+pub fn public() {} // this item is public and will documented\n+mod private { // this item is private and will not be documented\n+    pub fn unreachable() {} // this item is public, but unreachable, so it will not be documented\n+}\n+```\n+\n+`--document-private-items` documents all items, even if they're not public.\n+\n ## `-L`/`--library-path`: where to look for dependencies\n \n Using this flag looks like this:\n@@ -166,38 +168,6 @@ affect that.\n The arguments to this flag are the same as those for the `-C` flag on rustc. Run `rustc -C help` to\n get the full list.\n \n-## `--passes`: add more rustdoc passes\n-\n-Using this flag looks like this:\n-\n-```bash\n-$ rustdoc --passes list\n-$ rustdoc src/lib.rs --passes strip-priv-imports\n-```\n-\n-An argument of \"list\" will print a list of possible \"rustdoc passes\", and other\n-arguments will be the name of which passes to run in addition to the defaults.\n-\n-For more details on passes, see [the chapter on them](passes.md).\n-\n-See also `--no-defaults`.\n-\n-## `--no-defaults`: don't run default passes\n-\n-Using this flag looks like this:\n-\n-```bash\n-$ rustdoc src/lib.rs --no-defaults\n-```\n-\n-By default, `rustdoc` will run several passes over your code. This\n-removes those defaults, allowing you to use `--passes` to specify\n-exactly which passes you want.\n-\n-For more details on passes, see [the chapter on them](passes.md).\n-\n-See also `--passes`.\n-\n ## `--test`: run code examples as tests\n \n Using this flag looks like this:\n@@ -429,3 +399,21 @@ If you specify `@path` on the command-line, then it will open `path` and read\n command line options from it. These options are one per line; a blank line indicates\n an empty option. The file can use Unix or Windows style line endings, and must be\n encoded as UTF-8.\n+\n+## `--passes`: add more rustdoc passes\n+\n+This flag is **deprecated**.\n+For more details on passes, see [the chapter on them](passes.md).\n+\n+## `--no-defaults`: don't run default passes\n+\n+This flag is **deprecated**.\n+For more details on passes, see [the chapter on them](passes.md).\n+\n+## `-r`/`--input-format`: input format\n+\n+This flag is **deprecated** and **has no effect**.\n+\n+Rustdoc only supports Rust source code and Markdown input formats. If the\n+file ends in `.md` or `.markdown`, `rustdoc` treats it as a Markdown file.\n+Otherwise, it assumes that the input file is Rust."}, {"sha": "c3c3fd3068ec44757c49d1b9e39229ce968fa334", "filename": "src/doc/rustdoc/src/passes.md", "status": "modified", "additions": 5, "deletions": 82, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2Fpasses.md", "raw_url": "https://github.com/rust-lang/rust/raw/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2Fpasses.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fpasses.md?ref=2a5ecb29277d1d951039803b652b5b4645250814", "patch": "@@ -3,86 +3,9 @@\n Rustdoc has a concept called \"passes\". These are transformations that\n `rustdoc` runs on your documentation before producing its final output.\n \n-In addition to the passes below, check out the docs for these flags:\n+Customizing passes is **deprecated**. The available passes are not considered stable and may\n+change in any release.\n \n-* [`--passes`](command-line-arguments.md#--passes-add-more-rustdoc-passes)\n-* [`--no-defaults`](command-line-arguments.md#--no-defaults-dont-run-default-passes)\n-\n-## Default passes\n-\n-By default, rustdoc will run some passes, namely:\n-\n-* `strip-hidden`\n-* `strip-private`\n-* `collapse-docs`\n-* `unindent-comments`\n-\n-However, `strip-private` implies `strip-priv-imports`, and so effectively,\n-all passes are run by default.\n-\n-## `strip-hidden`\n-\n-This pass implements the `#[doc(hidden)]` attribute. When this pass runs, it\n-checks each item, and if it is annotated with this attribute, it removes it\n-from `rustdoc`'s output.\n-\n-Without this pass, these items will remain in the output.\n-\n-## `unindent-comments`\n-\n-When you write a doc comment like this:\n-\n-```rust,no_run\n-/// This is a documentation comment.\n-# fn f() {}\n-```\n-\n-There's a space between the `///` and that `T`. That spacing isn't intended\n-to be a part of the output; it's there for humans, to help separate the doc\n-comment syntax from the text of the comment. This pass is what removes that\n-space.\n-\n-The exact rules are left under-specified so that we can fix issues that we find.\n-\n-Without this pass, the exact number of spaces is preserved.\n-\n-## `collapse-docs`\n-\n-With this pass, multiple `#[doc]` attributes are converted into one single\n-documentation string.\n-\n-For example:\n-\n-```rust,no_run\n-#[doc = \"This is the first line.\"]\n-#[doc = \"This is the second line.\"]\n-# fn f() {}\n-```\n-\n-Gets collapsed into a single doc string of\n-\n-```text\n-This is the first line.\n-This is the second line.\n-```\n-\n-## `strip-private`\n-\n-This removes documentation for any non-public items, so for example:\n-\n-```rust,no_run\n-/// These are private docs.\n-struct Private;\n-\n-/// These are public docs.\n-pub struct Public;\n-```\n-\n-This pass removes the docs for `Private`, since they're not public.\n-\n-This pass implies `strip-priv-imports`.\n-\n-## `strip-priv-imports`\n-\n-This is the same as `strip-private`, but for `extern crate` and `use`\n-statements instead of items.\n+In the past the most common use case for customizing passes was to omit the `strip-private` pass.\n+You can do this more easily, and without risk of the pass being changed, by passing\n+[`--document-private-items`](./unstable-features.md#--document-private-items)."}, {"sha": "7d1845dc9578e82157d81364d81e549883d8bd21", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/2a5ecb29277d1d951039803b652b5b4645250814/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=2a5ecb29277d1d951039803b652b5b4645250814", "patch": "@@ -340,6 +340,30 @@ Some methodology notes about what rustdoc counts in this metric:\n Public items that are not documented can be seen with the built-in `missing_docs` lint. Private\n items that are not documented can be seen with Clippy's `missing_docs_in_private_items` lint.\n \n+## `-w`/`--output-format`: output format\n+\n+When using\n+[`--show-coverage`](https://doc.rust-lang.org/nightly/rustdoc/unstable-features.html#--show-coverage-get-statistics-about-code-documentation-coverage),\n+passing `--output-format json` will display the coverage information in JSON format. For example,\n+here is the JSON for a file with one documented item and one undocumented item:\n+\n+```rust\n+/// This item has documentation\n+pub fn foo() {}\n+\n+pub fn no_documentation() {}\n+```\n+\n+```json\n+{\"no_std.rs\":{\"total\":3,\"with_docs\":1,\"total_examples\":3,\"with_examples\":0}}\n+```\n+\n+Note that the third item is the crate root, which in this case is undocumented.\n+\n+When not using `--show-coverage`, `--output-format json` emits documentation in the experimental\n+[JSON format](https://github.com/rust-lang/rfcs/pull/2963). `--output-format html` has no effect,\n+and is also accepted on stable toolchains.\n+\n ### `--enable-per-target-ignores`: allow `ignore-foo` style filters for doctests\n \n Using this flag looks like this:"}]}