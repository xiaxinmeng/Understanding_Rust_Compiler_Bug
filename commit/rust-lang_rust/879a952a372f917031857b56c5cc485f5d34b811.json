{"sha": "879a952a372f917031857b56c5cc485f5d34b811", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3OWE5NTJhMzcyZjkxNzAzMTg1N2I1NmM1Y2M0ODVmNWQzNGI4MTE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-18T02:52:18Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-20T03:32:08Z"}, "message": "rustc: Find the correct outer scope in trans_block", "tree": {"sha": "47b67cc4117248548e272eb29f90f36fbbfb55d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b67cc4117248548e272eb29f90f36fbbfb55d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/879a952a372f917031857b56c5cc485f5d34b811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/879a952a372f917031857b56c5cc485f5d34b811", "html_url": "https://github.com/rust-lang/rust/commit/879a952a372f917031857b56c5cc485f5d34b811", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/879a952a372f917031857b56c5cc485f5d34b811/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40b511a7c591f6174ec2e22aaf68abd874a9b51f", "url": "https://api.github.com/repos/rust-lang/rust/commits/40b511a7c591f6174ec2e22aaf68abd874a9b51f", "html_url": "https://github.com/rust-lang/rust/commit/40b511a7c591f6174ec2e22aaf68abd874a9b51f"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "819f4a22d3ebdc61c9528dad561949652e47abd6", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/879a952a372f917031857b56c5cc485f5d34b811/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/879a952a372f917031857b56c5cc485f5d34b811/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=879a952a372f917031857b56c5cc485f5d34b811", "patch": "@@ -6171,6 +6171,9 @@ fn trans_block(&@block_ctxt cx, &ast::block b) -> result {\n \n     alt (b.node.expr) {\n         case (some[@ast::expr](?e)) {\n+            // Hold onto the context for this scope since we'll need it to\n+            // find the outer scope\n+            auto scope_bcx = bcx;\n             r = trans_expr(bcx, e);\n             bcx = r.bcx;\n \n@@ -6212,7 +6215,8 @@ fn trans_block(&@block_ctxt cx, &ast::block b) -> result {\n \n                     auto cleanup = bind drop_hoisted_ty(_, res_alloca.val,\n                                                         r_ty);\n-                    find_outer_scope_cx(bcx).cleanups += [clean(cleanup)];\n+                    auto outer_scope_cx = find_outer_scope_cx(scope_bcx);\n+                    outer_scope_cx.cleanups += [clean(cleanup)];\n \n                     r = res(bcx, load_if_immediate(bcx,\n                                                    res_alloca.val, r_ty));"}, {"sha": "e65c682198c2420fe85dee22ff1876f724d5bd22", "filename": "src/test/run-pass/expr-block-ref.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/879a952a372f917031857b56c5cc485f5d34b811/src%2Ftest%2Frun-pass%2Fexpr-block-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/879a952a372f917031857b56c5cc485f5d34b811/src%2Ftest%2Frun-pass%2Fexpr-block-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-ref.rs?ref=879a952a372f917031857b56c5cc485f5d34b811", "patch": "@@ -0,0 +1,5 @@\n+// xfail-stage0\n+\n+fn main() {\n+  auto x = {{[10]}};\n+}"}, {"sha": "329b2a3255bdd16fbe243f2c3b83745e03af6130", "filename": "src/test/run-pass/expr-elseif-ref2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/879a952a372f917031857b56c5cc485f5d34b811/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/879a952a372f917031857b56c5cc485f5d34b811/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref2.rs?ref=879a952a372f917031857b56c5cc485f5d34b811", "patch": "@@ -0,0 +1,13 @@\n+// xfail-stage0\n+// xfail-stage1\n+// xfail-stage2\n+\n+fn main() {\n+  auto x = if (false) {\n+    [0u]\n+  } else if (true) {\n+    [10u]\n+  } else {\n+    [0u]\n+  };\n+}"}]}