{"sha": "8e8d03e477314ca7cbb41281832befe83b0bd53a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOGQwM2U0NzczMTRjYTdjYmI0MTI4MTgzMmJlZmU4M2IwYmQ1M2E=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-23T09:00:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-23T09:16:34Z"}, "message": "[PATCH] Disable some more unsupported stuff in libcore", "tree": {"sha": "2725f5ef22ba4d8deb4136207f1d0a861c41ad59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2725f5ef22ba4d8deb4136207f1d0a861c41ad59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e8d03e477314ca7cbb41281832befe83b0bd53a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8d03e477314ca7cbb41281832befe83b0bd53a", "html_url": "https://github.com/rust-lang/rust/commit/8e8d03e477314ca7cbb41281832befe83b0bd53a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e8d03e477314ca7cbb41281832befe83b0bd53a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d348f5b473ab7330a7d4d3ae0c5ccd24acb33298", "url": "https://api.github.com/repos/rust-lang/rust/commits/d348f5b473ab7330a7d4d3ae0c5ccd24acb33298", "html_url": "https://github.com/rust-lang/rust/commit/d348f5b473ab7330a7d4d3ae0c5ccd24acb33298"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "855e96feedd28144b5e94652a403138719fbfa87", "filename": "0005-Disable-some-more-unsupported-stuff-in-libcore.patch", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/8e8d03e477314ca7cbb41281832befe83b0bd53a/0005-Disable-some-more-unsupported-stuff-in-libcore.patch", "raw_url": "https://github.com/rust-lang/rust/raw/8e8d03e477314ca7cbb41281832befe83b0bd53a/0005-Disable-some-more-unsupported-stuff-in-libcore.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/0005-Disable-some-more-unsupported-stuff-in-libcore.patch?ref=8e8d03e477314ca7cbb41281832befe83b0bd53a", "patch": "@@ -0,0 +1,101 @@\n+From 3d1907db6e349aa7e6cfe3dd490a9d10db669872 Mon Sep 17 00:00:00 2001\n+From: bjorn3 <bjorn3@users.noreply.github.com>\n+Date: Thu, 23 Aug 2018 11:15:01 +0200\n+Subject: [PATCH] Disable some more unsupported stuff in libcore\n+\n+---\n+ src/libcore/cell.rs    | 6 +++---\n+ src/libcore/cmp.rs     | 5 ++++-\n+ src/libcore/num/mod.rs | 8 ++++++--\n+ src/libcore/str/mod.rs | 6 +++---\n+ 4 files changed, 16 insertions(+), 9 deletions(-)\n+\n+diff --git a/src/libcore/cell.rs b/src/libcore/cell.rs\n+index 009aba5..2aa76e3 100644\n+--- a/src/libcore/cell.rs\n++++ b/src/libcore/cell.rs\n+@@ -1532,7 +1532,7 @@ impl<T: CoerceUnsized<U>, U> CoerceUnsized<UnsafeCell<U>> for UnsafeCell<T> {}\n+ \n+ #[allow(unused)]\n+ fn assert_coerce_unsized(a: UnsafeCell<&i32>, b: Cell<&i32>, c: RefCell<&i32>) {\n+-    let _: UnsafeCell<&dyn Send> = a;\n+-    let _: Cell<&dyn Send> = b;\n+-    let _: RefCell<&dyn Send> = c;\n++    //let _: UnsafeCell<&dyn Send> = a;\n++    //let _: Cell<&dyn Send> = b;\n++    //let _: RefCell<&dyn Send> = c;\n+ }\n+diff --git a/src/libcore/cmp.rs b/src/libcore/cmp.rs\n+index a6e6496..f9374ea 100644\n+--- a/src/libcore/cmp.rs\n++++ b/src/libcore/cmp.rs\n+@@ -496,6 +496,7 @@ pub trait Ord: Eq + PartialOrd<Self> {\n+ #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+ impl Eq for Ordering {}\n+ \n++/*\n+ #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+ impl Ord for Ordering {\n+     #[inline]\n+@@ -503,12 +504,14 @@ impl Ord for Ordering {\n+         (*self as i32).cmp(&(*other as i32))\n+     }\n+ }\n++*/\n+ \n+ #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+ impl PartialOrd for Ordering {\n+     #[inline]\n+     fn partial_cmp(&self, other: &Ordering) -> Option<Ordering> {\n+-        (*self as i32).partial_cmp(&(*other as i32))\n++        //(*self as i32).partial_cmp(&(*other as i32))\n++        None\n+     }\n+ }\n+ \n+diff --git a/src/libcore/num/mod.rs b/src/libcore/num/mod.rs\n+index 5d00949..f077f1d 100644\n+--- a/src/libcore/num/mod.rs\n++++ b/src/libcore/num/mod.rs\n+@@ -2273,7 +2273,9 @@ assert_eq!(m, \", $swapped, \");\n+             #[rustc_const_unstable(feature = \"const_int_ops\")]\n+             #[inline]\n+             pub const fn swap_bytes(self) -> Self {\n+-                unsafe { intrinsics::bswap(self as $ActualT) as Self }\n++                // TODO support bswap\n++                //unsafe { intrinsics::bswap(self as $ActualT) as Self }\n++                0\n+             }\n+         }\n+ \n+@@ -2295,7 +2297,9 @@ assert_eq!(m, \", $reversed, \");\n+             #[unstable(feature = \"reverse_bits\", issue = \"48763\")]\n+             #[inline]\n+             pub fn reverse_bits(self) -> Self {\n+-                unsafe { intrinsics::bitreverse(self as $ActualT) as Self }\n++                // TODO support bitreverse\n++                //unsafe { intrinsics::bitreverse(self as $ActualT) as Self }\n++                0\n+             }\n+         }\n+ \n+diff --git a/src/libcore/str/mod.rs b/src/libcore/str/mod.rs\n+index 810d19d..4c68370 100644\n+--- a/src/libcore/str/mod.rs\n++++ b/src/libcore/str/mod.rs\n+@@ -26,9 +26,9 @@ use mem;\n+ \n+ pub mod pattern;\n+ \n+-#[unstable(feature = \"str_internals\", issue = \"0\")]\n+-#[allow(missing_docs)]\n+-pub mod lossy;\n++//#[unstable(feature = \"str_internals\", issue = \"0\")]\n++//#[allow(missing_docs)]\n++//pub mod lossy;\n+ \n+ /// A trait to abstract the idea of creating a new instance of a type from a\n+ /// string.\n+-- \n+2.11.0\n+"}]}