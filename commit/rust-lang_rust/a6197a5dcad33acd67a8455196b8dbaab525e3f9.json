{"sha": "a6197a5dcad33acd67a8455196b8dbaab525e3f9", "node_id": "C_kwDOAAsO6NoAKGE2MTk3YTVkY2FkMzNhY2Q2N2E4NDU1MTk2YjhkYmFhYjUyNWUzZjk", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-16T12:09:24Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-16T12:09:24Z"}, "message": "Fixup comments", "tree": {"sha": "2e00ca2680ac623fff9068b5789951a9141bf355", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e00ca2680ac623fff9068b5789951a9141bf355"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6197a5dcad33acd67a8455196b8dbaab525e3f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6197a5dcad33acd67a8455196b8dbaab525e3f9", "html_url": "https://github.com/rust-lang/rust/commit/a6197a5dcad33acd67a8455196b8dbaab525e3f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6197a5dcad33acd67a8455196b8dbaab525e3f9/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e39d61cbf3ae855801f7a2a494ce1033a00610d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e39d61cbf3ae855801f7a2a494ce1033a00610d2", "html_url": "https://github.com/rust-lang/rust/commit/e39d61cbf3ae855801f7a2a494ce1033a00610d2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cbb3047d88412c6b682175ea6f13449faf40022c", "filename": "compiler/rustc_data_structures/src/owned_slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a6197a5dcad33acd67a8455196b8dbaab525e3f9/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6197a5dcad33acd67a8455196b8dbaab525e3f9/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice.rs?ref=a6197a5dcad33acd67a8455196b8dbaab525e3f9", "patch": "@@ -74,10 +74,10 @@ where\n     O: Send + Sync + 'static,\n     F: FnOnce(&O) -> Result<&[u8], E>,\n {\n-    // We box the owner of the bytes, so it doesn't move.\n+    // We wrap the owner of the bytes in, so it doesn't move.\n     //\n     // Since the owner does not move and we don't access it in any way\n-    // before drop, there is nothing that can invalidate the bytes pointer.\n+    // before dropping, there is nothing that can invalidate the bytes pointer.\n     //\n     // Thus, \"extending\" the lifetime of the reference returned from `F` is fine.\n     // We pretend that we pass it a reference that lives as long as the returned slice.\n@@ -137,11 +137,11 @@ impl Borrow<[u8]> for OwnedSlice {\n     }\n }\n \n-// Safety: `OwnedSlice` is conceptually `(&'self.1 [u8], Box<dyn Send + Sync>)`, which is `Send`\n+// Safety: `OwnedSlice` is conceptually `(&'self.1 [u8], Arc<dyn Send + Sync>)`, which is `Send`\n #[cfg(parallel_compiler)]\n unsafe impl Send for OwnedSlice {}\n \n-// Safety: `OwnedSlice` is conceptually `(&'self.1 [u8], Box<dyn Send + Sync>)`, which is `Sync`\n+// Safety: `OwnedSlice` is conceptually `(&'self.1 [u8], Arc<dyn Send + Sync>)`, which is `Sync`\n #[cfg(parallel_compiler)]\n unsafe impl Sync for OwnedSlice {}\n "}]}