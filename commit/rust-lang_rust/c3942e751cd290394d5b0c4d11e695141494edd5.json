{"sha": "c3942e751cd290394d5b0c4d11e695141494edd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTQyZTc1MWNkMjkwMzk0ZDViMGM0ZDExZTY5NTE0MTQ5NGVkZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-02T05:21:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-02T05:21:58Z"}, "message": "Auto merge of #46288 - alexcrichton:bump-bootstrap, r=Mark-Simulacrum\n\nBump to 1.24.0\n\n* Update the in-tree version number\n* Update the bootstrap compiler\n* Remove `cfg(stage0)` annotations\n* Update crate dependencies\n* Update Cargo itself", "tree": {"sha": "17560d9e890cb61303bdf0d973c4912a331cf050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17560d9e890cb61303bdf0d973c4912a331cf050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3942e751cd290394d5b0c4d11e695141494edd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3942e751cd290394d5b0c4d11e695141494edd5", "html_url": "https://github.com/rust-lang/rust/commit/c3942e751cd290394d5b0c4d11e695141494edd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3942e751cd290394d5b0c4d11e695141494edd5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b15a8eafcd7e50af116d398c1ac3c5a0504c0270", "url": "https://api.github.com/repos/rust-lang/rust/commits/b15a8eafcd7e50af116d398c1ac3c5a0504c0270", "html_url": "https://github.com/rust-lang/rust/commit/b15a8eafcd7e50af116d398c1ac3c5a0504c0270"}, {"sha": "a850bb0e5d07212ae716f447f3f69f6e4ce467da", "url": "https://api.github.com/repos/rust-lang/rust/commits/a850bb0e5d07212ae716f447f3f69f6e4ce467da", "html_url": "https://github.com/rust-lang/rust/commit/a850bb0e5d07212ae716f447f3f69f6e4ce467da"}], "stats": {"total": 353, "additions": 65, "deletions": 288}, "files": [{"sha": "a8107bc47c6aa3094ef2135837541d389bde5f6d", "filename": "src/Cargo.lock", "status": "modified", "additions": 57, "deletions": 57, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -133,8 +133,8 @@ dependencies = [\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -152,8 +152,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n name = \"build-manifest\"\n version = \"0.1.0\"\n dependencies = [\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -200,8 +200,8 @@ dependencies = [\n  \"same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_ignored 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"shell-escape 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -218,8 +218,8 @@ name = \"cargo_metadata\"\n version = \"0.2.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -230,8 +230,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -291,8 +291,8 @@ dependencies = [\n  \"duct 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -311,8 +311,8 @@ dependencies = [\n  \"quine-mc_cluskey 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex-syntax 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-normalization 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -420,8 +420,8 @@ version = \"0.13.0\"\n dependencies = [\n  \"curl 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -444,7 +444,7 @@ dependencies = [\n  \"advapi32-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"commoncrypto 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"hex 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -480,7 +480,7 @@ dependencies = [\n  \"curl-sys 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-probe 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"socket2 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -493,7 +493,7 @@ dependencies = [\n  \"cc 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -549,8 +549,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strsim 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -666,7 +666,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"foreign-types\"\n-version = \"0.2.1\"\n+version = \"0.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -731,7 +731,7 @@ dependencies = [\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libgit2-sys 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-probe 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -786,7 +786,7 @@ dependencies = [\n  \"pest 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quick-error 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -913,8 +913,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"futures 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -944,8 +944,8 @@ version = \"0.14.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"enum_primitive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url_serde 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -984,7 +984,7 @@ dependencies = [\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libssh2-sys 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -996,7 +996,7 @@ dependencies = [\n  \"cmake 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1068,8 +1068,8 @@ dependencies = [\n  \"open 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempdir 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1227,14 +1227,14 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"openssl\"\n-version = \"0.9.21\"\n+version = \"0.9.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"foreign-types 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1244,7 +1244,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"openssl-sys\"\n-version = \"0.9.21\"\n+version = \"0.9.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1532,8 +1532,8 @@ dependencies = [\n  \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rls-vfs 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustfmt-nightly 0.2.16\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1557,8 +1557,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1572,8 +1572,8 @@ version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2039,8 +2039,8 @@ dependencies = [\n  \"libc 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strings 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2102,7 +2102,7 @@ version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2112,12 +2112,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.21\"\n+version = \"1.0.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.21\"\n+version = \"1.0.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2139,7 +2139,7 @@ name = \"serde_ignored\"\n version = \"0.0.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2150,7 +2150,7 @@ dependencies = [\n  \"dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itoa 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2238,7 +2238,7 @@ dependencies = [\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"phf_shared 0.7.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"precomputed-hash 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"string_cache_codegen 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"string_cache_shared 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2478,7 +2478,7 @@ name = \"toml\"\n version = \"0.4.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2560,7 +2560,7 @@ name = \"url_serde\"\n version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -2717,7 +2717,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum filetime 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aa75ec8f7927063335a9583e7fa87b0110bb888cf766dc01b54c0ff70d760c8e\"\n \"checksum flate2 0.2.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e6234dd4468ae5d1e2dbb06fe2b058696fdc50a339c68a393aefbf00bc81e423\"\n \"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n-\"checksum foreign-types 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"00a47bdf90d10e6ceae97fb92c1b05461461e53c89cedd455a943f0e0e1f7404\"\n+\"checksum foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\n \"checksum foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n \"checksum fs2 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9ab76cfd2aaa59b7bf6688ad9ba15bbae64bff97f04ea02144cfd3443e5c2866\"\n \"checksum fuchsia-zircon 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f6c0581a4e363262e52b87f59ee2afe3415361c6ec35e665924eb08afe8ff159\"\n@@ -2773,9 +2773,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum num-traits 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"99843c856d68d8b4313b03a17e33c4bb42ae8f6610ea81b28abe076ac721b9b0\"\n \"checksum num_cpus 1.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"514f0d73e64be53ff320680ca671b64fe3fb91da01e1ae2ddc99eb51d453b20d\"\n \"checksum open 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c281318d992e4432cfa799969467003d05921582a7489a8325e37f8a450d5113\"\n-\"checksum openssl 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2225c305d8f57001a0d34263e046794aa251695f20773102fbbfeb1e7b189955\"\n+\"checksum openssl 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"419ef26bb651d72b6c5a603bcc4e4856a362460e62352dfffa53de91d2e81181\"\n \"checksum openssl-probe 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d98df0270d404ccd3c050a41d579c52d1db15375168bb3471e04ec0f5f378daf\"\n-\"checksum openssl-sys 0.9.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92867746af30eea7a89feade385f7f5366776f1c52ec6f0de81360373fa88363\"\n+\"checksum openssl-sys 0.9.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5483bdc56756041ba6aa37c9cb59cc2219f012a2a1377d97ad35556ac6676ee7\"\n \"checksum os_pipe 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"998bfbb3042e715190fe2a41abfa047d7e8cb81374d2977d7f100eacd8619cb1\"\n \"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n \"checksum percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831\"\n@@ -2818,8 +2818,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum semver 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a3186ec9e65071a2095434b1f5bb24838d4e8e130f584c790f6033c79943537\"\n \"checksum semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bee2bc909ab2d8d60dab26e8cad85b25d795b14603a0dcb627b78b9d30b6454b\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\"checksum serde 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6eda663e865517ee783b0891a3f6eb3a253e0b0dabb46418969ee9635beadd9e\"\n-\"checksum serde_derive 1.0.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"652bc323d694dc925829725ec6c890156d8e70ae5202919869cb00fe2eff3788\"\n+\"checksum serde 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fcd35da6125742035aeb2c17ed4b49b83ba4b24156400b8195e5d4f6357ff144\"\n+\"checksum serde_derive 1.0.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d0a8327f3bcb285ac0f8763a9072067e7600f873d9edbc3bf40da0e2e7e9c870\"\n \"checksum serde_derive_internals 0.17.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"32f1926285523b2db55df263d2aa4eb69ddcfa7a7eade6430323637866b513ab\"\n \"checksum serde_ignored 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"190e9765dcedb56be63b6e0993a006c7e3b071a016a304736e4a315dc01fb142\"\n \"checksum serde_json 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e4586746d1974a030c48919731ecffd0ed28d0c40749d0d18d43b3a7d6c9b20e\""}, {"sha": "631c9f72f3500b47860a8baaf89e6133bc00842c", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -175,7 +175,7 @@ fn main() {\n         if let Ok(s) = env::var(\"RUSTC_CODEGEN_UNITS\") {\n             cmd.arg(\"-C\").arg(format!(\"codegen-units={}\", s));\n         }\n-        if stage != \"0\" && env::var(\"RUSTC_THINLTO\").is_ok() {\n+        if env::var(\"RUSTC_THINLTO\").is_ok() {\n             cmd.arg(\"-Ccodegen-units=16\").arg(\"-Zthinlto\");\n         }\n "}, {"sha": "6f125cdba8190d671c7ac4c1f46272ca7d94b50d", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -300,10 +300,7 @@ impl<T: ?Sized> Box<T> {\n                issue = \"27730\")]\n     #[inline]\n     pub unsafe fn from_unique(u: Unique<T>) -> Self {\n-        #[cfg(stage0)]\n-        return mem::transmute(u);\n-        #[cfg(not(stage0))]\n-        return Box(u);\n+        Box(u)\n     }\n \n     /// Consumes the `Box`, returning the wrapped raw pointer.\n@@ -365,14 +362,9 @@ impl<T: ?Sized> Box<T> {\n                issue = \"27730\")]\n     #[inline]\n     pub fn into_unique(b: Box<T>) -> Unique<T> {\n-        #[cfg(stage0)]\n-        return unsafe { mem::transmute(b) };\n-        #[cfg(not(stage0))]\n-        return {\n-            let unique = b.0;\n-            mem::forget(b);\n-            unique\n-        };\n+        let unique = b.0;\n+        mem::forget(b);\n+        unique\n     }\n \n     /// Consumes and leaks the `Box`, returning a mutable reference,"}, {"sha": "ac815629dcfb3ba4e857b501fd8ac71d59efa711", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -1626,11 +1626,8 @@ impl<T> [T] {\n     }\n }\n \n-// FIXME(LukasKalbertodt): the `not(stage0)` constraint can be removed in the\n-// future once the stage0 compiler is new enough to know about the `slice_u8`\n-// lang item.\n #[lang = \"slice_u8\"]\n-#[cfg(all(not(stage0), not(test)))]\n+#[cfg(not(test))]\n impl [u8] {\n     /// Checks if all bytes in this slice are within the ASCII range.\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.21.0\")]"}, {"sha": "975ea4e1a3e01eaeb806316bc891ecf33228b87b", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -2110,7 +2110,6 @@ impl str {\n     /// [`to_uppercase`]: #method.to_uppercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.21.0\")]\n     #[inline]\n-    #[cfg(not(stage0))]\n     pub fn to_ascii_uppercase(&self) -> String {\n         let mut bytes = self.as_bytes().to_vec();\n         bytes.make_ascii_uppercase();\n@@ -2141,7 +2140,6 @@ impl str {\n     /// [`to_lowercase`]: #method.to_lowercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.21.0\")]\n     #[inline]\n-    #[cfg(not(stage0))]\n     pub fn to_ascii_lowercase(&self) -> String {\n         let mut bytes = self.as_bytes().to_vec();\n         bytes.make_ascii_lowercase();\n@@ -2163,7 +2161,6 @@ impl str {\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.21.0\")]\n     #[inline]\n-    #[cfg(not(stage0))]\n     pub fn eq_ignore_ascii_case(&self, other: &str) -> bool {\n         self.as_bytes().eq_ignore_ascii_case(other.as_bytes())\n     }\n@@ -2178,7 +2175,6 @@ impl str {\n     ///\n     /// [`to_ascii_uppercase`]: #method.to_ascii_uppercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.21.0\")]\n-    #[cfg(not(stage0))]\n     pub fn make_ascii_uppercase(&mut self) {\n         let me = unsafe { self.as_bytes_mut() };\n         me.make_ascii_uppercase()\n@@ -2194,7 +2190,6 @@ impl str {\n     ///\n     /// [`to_ascii_lowercase`]: #method.to_ascii_lowercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.21.0\")]\n-    #[cfg(not(stage0))]\n     pub fn make_ascii_lowercase(&mut self) {\n         let me = unsafe { self.as_bytes_mut() };\n         me.make_ascii_lowercase()"}, {"sha": "d5190b65863cb3f0178a377af311600f423eeb10", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -90,7 +90,7 @@\n #![feature(unboxed_closures)]\n #![feature(untagged_unions)]\n #![feature(unwind_attributes)]\n-#![cfg_attr(not(stage0), feature(doc_spotlight))]\n+#![feature(doc_spotlight)]\n \n #[prelude_import]\n #[allow(unused)]"}, {"sha": "17e77654cf5ef2975ba15a975e54918d7698a7fb", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -39,7 +39,6 @@ use hash::Hasher;\n /// [arc]: ../../std/sync/struct.Arc.html\n /// [ub]: ../../reference/behavior-considered-undefined.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(stage0, lang = \"send\")]\n #[rustc_on_unimplemented = \"`{Self}` cannot be sent between threads safely\"]\n pub unsafe trait Send {\n     // empty."}, {"sha": "906cae53710ff1c8307d16be1371f8d578958bf2", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -38,8 +38,6 @@ use hir::def_id::{CrateNum, LOCAL_CRATE};\n use hir::intravisit::{self, FnKind};\n use hir;\n use session::Session;\n-#[cfg(stage0)]\n-use std::ascii::AsciiExt;\n use std::hash;\n use syntax::ast;\n use syntax::codemap::MultiSpan;"}, {"sha": "5eb3e38d5b3712d9c0e7f76371e7651a76c27d9b", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -15,8 +15,6 @@\n use std::mem;\n use std::fmt::{self, Write};\n use std::ops;\n-#[cfg(stage0)]\n-use std::ascii::AsciiExt;\n \n use syntax::symbol::Symbol;\n use syntax::ast::{MetaItem, MetaItemKind, NestedMetaItem, NestedMetaItemKind, LitKind};"}, {"sha": "7b9b4823ff68c4fbdbf696b3d162f39ce664953b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -34,8 +34,6 @@\n //! both occur before the crate is rendered.\n pub use self::ExternalLocation::*;\n \n-#[cfg(stage0)]\n-use std::ascii::AsciiExt;\n use std::borrow::Cow;\n use std::cell::RefCell;\n use std::cmp::Ordering;"}, {"sha": "92507a73bae5f6258a1e9fe940b23be18e19c05f", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 0, "deletions": 200, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -298,198 +298,6 @@ pub trait AsciiExt {\n     fn is_ascii_control(&self) -> bool { unimplemented!(); }\n }\n \n-// FIXME(LukasKalbertodt): this impl block can be removed in the future. This is\n-// possible once the stage0 compiler is new enough to contain the inherent\n-// ascii methods for `[str]`. See FIXME comment further down.\n-#[cfg(stage0)]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl AsciiExt for str {\n-    type Owned = String;\n-\n-    #[inline]\n-    fn is_ascii(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii())\n-    }\n-\n-    #[inline]\n-    fn to_ascii_uppercase(&self) -> String {\n-        let mut bytes = self.as_bytes().to_vec();\n-        bytes.make_ascii_uppercase();\n-        // make_ascii_uppercase() preserves the UTF-8 invariant.\n-        unsafe { String::from_utf8_unchecked(bytes) }\n-    }\n-\n-    #[inline]\n-    fn to_ascii_lowercase(&self) -> String {\n-        let mut bytes = self.as_bytes().to_vec();\n-        bytes.make_ascii_lowercase();\n-        // make_ascii_uppercase() preserves the UTF-8 invariant.\n-        unsafe { String::from_utf8_unchecked(bytes) }\n-    }\n-\n-    #[inline]\n-    fn eq_ignore_ascii_case(&self, other: &str) -> bool {\n-        self.as_bytes().eq_ignore_ascii_case(other.as_bytes())\n-    }\n-\n-    fn make_ascii_uppercase(&mut self) {\n-        let me = unsafe { self.as_bytes_mut() };\n-        me.make_ascii_uppercase()\n-    }\n-\n-    fn make_ascii_lowercase(&mut self) {\n-        let me = unsafe { self.as_bytes_mut() };\n-        me.make_ascii_lowercase()\n-    }\n-\n-    #[inline]\n-    fn is_ascii_alphabetic(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_alphabetic())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_uppercase(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_uppercase())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_lowercase(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_lowercase())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_alphanumeric(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_alphanumeric())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_digit(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_digit())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_hexdigit(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_hexdigit())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_punctuation(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_punctuation())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_graphic(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_graphic())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_whitespace(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_whitespace())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_control(&self) -> bool {\n-        self.bytes().all(|b| b.is_ascii_control())\n-    }\n-}\n-\n-// FIXME(LukasKalbertodt): this impl block can be removed in the future. This is\n-// possible once the stage0 compiler is new enough to contain the inherent\n-// ascii methods for `[u8]`. See FIXME comment further down.\n-#[cfg(stage0)]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl AsciiExt for [u8] {\n-    type Owned = Vec<u8>;\n-    #[inline]\n-    fn is_ascii(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii())\n-    }\n-\n-    #[inline]\n-    fn to_ascii_uppercase(&self) -> Vec<u8> {\n-        let mut me = self.to_vec();\n-        me.make_ascii_uppercase();\n-        return me\n-    }\n-\n-    #[inline]\n-    fn to_ascii_lowercase(&self) -> Vec<u8> {\n-        let mut me = self.to_vec();\n-        me.make_ascii_lowercase();\n-        return me\n-    }\n-\n-    #[inline]\n-    fn eq_ignore_ascii_case(&self, other: &[u8]) -> bool {\n-        self.len() == other.len() &&\n-        self.iter().zip(other).all(|(a, b)| {\n-            a.eq_ignore_ascii_case(b)\n-        })\n-    }\n-\n-    fn make_ascii_uppercase(&mut self) {\n-        for byte in self {\n-            byte.make_ascii_uppercase();\n-        }\n-    }\n-\n-    fn make_ascii_lowercase(&mut self) {\n-        for byte in self {\n-            byte.make_ascii_lowercase();\n-        }\n-    }\n-\n-    #[inline]\n-    fn is_ascii_alphabetic(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_alphabetic())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_uppercase(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_uppercase())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_lowercase(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_lowercase())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_alphanumeric(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_alphanumeric())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_digit(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_digit())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_hexdigit(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_hexdigit())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_punctuation(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_punctuation())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_graphic(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_graphic())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_whitespace(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_whitespace())\n-    }\n-\n-    #[inline]\n-    fn is_ascii_control(&self) -> bool {\n-        self.iter().all(|b| b.is_ascii_control())\n-    }\n-}\n-\n macro_rules! delegating_ascii_methods {\n     () => {\n         #[inline]\n@@ -562,10 +370,6 @@ impl AsciiExt for char {\n     delegating_ascii_ctype_methods!();\n }\n \n-// FIXME(LukasKalbertodt): the macro invocation should replace the impl block\n-// for `[u8]` above. But this is not possible until the stage0 compiler is new\n-// enough to contain the inherent ascii methods for `[u8]`.\n-#[cfg(not(stage0))]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl AsciiExt for [u8] {\n     type Owned = Vec<u8>;\n@@ -623,10 +427,6 @@ impl AsciiExt for [u8] {\n     }\n }\n \n-// FIXME(LukasKalbertodt): the macro invocation should replace the impl block\n-// for `str` above. But this is not possible until the stage0 compiler is new\n-// enough to contain the inherent ascii methods for `str`.\n-#[cfg(not(stage0))]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl AsciiExt for str {\n     type Owned = String;"}, {"sha": "eb0bedf64b23c56731716f253c7d405255363a57", "filename": "src/stage0.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c3942e751cd290394d5b0c4d11e695141494edd5/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=c3942e751cd290394d5b0c4d11e695141494edd5", "patch": "@@ -12,7 +12,7 @@\n # source tarball for a stable release you'll likely see `1.x.0` for rustc and\n # `0.x.0` for Cargo where they were released on `date`.\n \n-date: 2017-10-20\n+date: 2017-11-21\n rustc: beta\n cargo: beta\n "}]}