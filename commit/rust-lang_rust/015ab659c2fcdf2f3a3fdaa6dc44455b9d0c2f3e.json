{"sha": "015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e", "node_id": "C_kwDOAAsO6NoAKDAxNWFiNjU5YzJmY2RmMmYzYTNmZGFhNmRjNDQ0NTViOWQwYzJmM2U", "commit": {"author": {"name": "Cameron", "email": "51241057+maniwani@users.noreply.github.com", "date": "2022-11-13T20:33:21Z"}, "committer": {"name": "Cameron", "email": "51241057+maniwani@users.noreply.github.com", "date": "2022-11-13T20:33:21Z"}, "message": "just use `libc::clockid_t`", "tree": {"sha": "f3a1c8d5b0157fd3165abd81068f66d6e7ee93d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3a1c8d5b0157fd3165abd81068f66d6e7ee93d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e", "html_url": "https://github.com/rust-lang/rust/commit/015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e/comments", "author": {"login": "maniwani", "id": 51241057, "node_id": "MDQ6VXNlcjUxMjQxMDU3", "avatar_url": "https://avatars.githubusercontent.com/u/51241057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maniwani", "html_url": "https://github.com/maniwani", "followers_url": "https://api.github.com/users/maniwani/followers", "following_url": "https://api.github.com/users/maniwani/following{/other_user}", "gists_url": "https://api.github.com/users/maniwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/maniwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maniwani/subscriptions", "organizations_url": "https://api.github.com/users/maniwani/orgs", "repos_url": "https://api.github.com/users/maniwani/repos", "events_url": "https://api.github.com/users/maniwani/events{/privacy}", "received_events_url": "https://api.github.com/users/maniwani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "maniwani", "id": 51241057, "node_id": "MDQ6VXNlcjUxMjQxMDU3", "avatar_url": "https://avatars.githubusercontent.com/u/51241057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maniwani", "html_url": "https://github.com/maniwani", "followers_url": "https://api.github.com/users/maniwani/followers", "following_url": "https://api.github.com/users/maniwani/following{/other_user}", "gists_url": "https://api.github.com/users/maniwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/maniwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maniwani/subscriptions", "organizations_url": "https://api.github.com/users/maniwani/orgs", "repos_url": "https://api.github.com/users/maniwani/repos", "events_url": "https://api.github.com/users/maniwani/events{/privacy}", "received_events_url": "https://api.github.com/users/maniwani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5008a317ce8e508c390ed12bff281f307313376e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5008a317ce8e508c390ed12bff281f307313376e", "html_url": "https://github.com/rust-lang/rust/commit/5008a317ce8e508c390ed12bff281f307313376e"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "c3fac44a42d2d41bc6c3f6fa4278c3f66992e965", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=015ab659c2fcdf2f3a3fdaa6dc44455b9d0c2f3e", "patch": "@@ -290,9 +290,9 @@ mod inner {\n     impl Instant {\n         pub fn now() -> Instant {\n             #[cfg(target_os = \"macos\")]\n-            const clock_id: clock_t = libc::CLOCK_UPTIME_RAW;\n+            const clock_id: libc::clockid_t = libc::CLOCK_UPTIME_RAW;\n             #[cfg(not(target_os = \"macos\"))]\n-            const clock_id: clock_t = libc::CLOCK_MONOTONIC;\n+            const clock_id: libc::clockid_t = libc::CLOCK_MONOTONIC;\n             Instant { t: Timespec::now(clock_id) }\n         }\n \n@@ -324,13 +324,8 @@ mod inner {\n         }\n     }\n \n-    #[cfg(not(any(target_os = \"dragonfly\", target_os = \"espidf\", target_os = \"horizon\")))]\n-    pub type clock_t = libc::c_int;\n-    #[cfg(any(target_os = \"dragonfly\", target_os = \"espidf\", target_os = \"horizon\"))]\n-    pub type clock_t = libc::c_ulong;\n-\n     impl Timespec {\n-        pub fn now(clock: clock_t) -> Timespec {\n+        pub fn now(clock: libc::clockid_t) -> Timespec {\n             // Try to use 64-bit time in preparation for Y2038.\n             #[cfg(all(target_os = \"linux\", target_env = \"gnu\", target_pointer_width = \"32\"))]\n             {"}]}