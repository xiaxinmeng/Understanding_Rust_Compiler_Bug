{"sha": "0e2da01b91b991da398e4a7a4e4906fc2b31a704", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMmRhMDFiOTFiOTkxZGEzOThlNGE3YTRlNDkwNmZjMmIzMWE3MDQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-01-26T14:27:38Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:11Z"}, "message": "Move compare_const_vals out of `eval`", "tree": {"sha": "4c1d9e99bdf9ce47b8857686f312bbdbcef7cbc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c1d9e99bdf9ce47b8857686f312bbdbcef7cbc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e2da01b91b991da398e4a7a4e4906fc2b31a704", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53MACgkQpp+NIls6\n19lh5BAAtyhA896wROdNEFqn40GOXfmR9eFBkWmSaxK1WNN/XoL4UBZTflCXAoCj\n5YleP1mEnHHwy8uMck0rBMN65AYBym4dHpD7STimOckKrkVczg34sWJwzg3vIOtc\nAB5ODtfYyb0jlQEVZUsRf25oEM7XwKWa8NYQtKowQjF56nx4n/qR+icliLs1iGcF\ndvmEHS1u3JfCYXt1tI8qiy+ivD6+c7AgmPo3t5JQCFF6V9W9q6htCMcs0lpULmK/\nCngpaIxJW5bzEW/4opqFM19Fybw8hywqk1yGjNREGVNKW8paiXmZAfbG4P5xYsyh\nsuJs+8L8mRjqcJprEcXNHC81LY8mK/UAukXqfbVH11rWt6JA9mBYU/ngmMJuTGgc\nI52K80En1rH2ub7Yf3LLsDrMEUzEZp0mdAgS7r7wMV6WlLQOROouDv8mWMD18r9k\n/ksD/1kD1dW0z4fZ8BZcC465y5gj4mWjwg4o7RYEy91f4UACAwkXq1HFqZ8G30UQ\nYLCk1GlUVZDFFZ04VWrOS1XSemBpJxiIepnNpOdk3bkAAEEHwXYyQy2fAZmQf5jH\nqCX+/fgbPuNdp8RsqkFQSsPqIluSjv2b/SCKyo2Th8grXdVRQiHrT1ibudFKvUts\nQ5D5j79+AmgjE29+dYcmuroqCaJg2V2cOh7YynKqb01M3dKhhCg=\n=ShiX\n-----END PGP SIGNATURE-----", "payload": "tree 4c1d9e99bdf9ce47b8857686f312bbdbcef7cbc9\nparent b75a828e2ba5a3fc7b433bc0898cba3596758fe6\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1516976858 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494451 +0100\n\nMove compare_const_vals out of `eval`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2da01b91b991da398e4a7a4e4906fc2b31a704", "html_url": "https://github.com/rust-lang/rust/commit/0e2da01b91b991da398e4a7a4e4906fc2b31a704", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e2da01b91b991da398e4a7a4e4906fc2b31a704/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75a828e2ba5a3fc7b433bc0898cba3596758fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75a828e2ba5a3fc7b433bc0898cba3596758fe6", "html_url": "https://github.com/rust-lang/rust/commit/b75a828e2ba5a3fc7b433bc0898cba3596758fe6"}], "stats": {"total": 65, "additions": 31, "deletions": 34}, "files": [{"sha": "57feffbaf00526545a77000232d809dece3cd811", "filename": "src/librustc_mir/const_eval/_match.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e2da01b91b991da398e4a7a4e4906fc2b31a704/src%2Flibrustc_mir%2Fconst_eval%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2da01b91b991da398e4a7a4e4906fc2b31a704/src%2Flibrustc_mir%2Fconst_eval%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2F_match.rs?ref=0e2da01b91b991da398e4a7a4e4906fc2b31a704", "patch": "@@ -13,13 +13,12 @@ use self::Usefulness::*;\n use self::WitnessPreference::*;\n \n use rustc::middle::const_val::ConstVal;\n-use const_eval::eval::{compare_const_vals};\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::indexed_vec::Idx;\n \n use const_eval::pattern::{FieldPattern, Pattern, PatternKind};\n-use const_eval::pattern::{PatternFoldable, PatternFolder};\n+use const_eval::pattern::{PatternFoldable, PatternFolder, compare_const_vals};\n \n use rustc::hir::def_id::DefId;\n use rustc::hir::RangeEnd;"}, {"sha": "32f834daa4c7835f503921f129c8fd08d4023462", "filename": "src/librustc_mir/const_eval/eval.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0e2da01b91b991da398e4a7a4e4906fc2b31a704/src%2Flibrustc_mir%2Fconst_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2da01b91b991da398e4a7a4e4906fc2b31a704/src%2Flibrustc_mir%2Fconst_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval.rs?ref=0e2da01b91b991da398e4a7a4e4906fc2b31a704", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc::middle::const_val::ConstVal::*;\n use rustc::middle::const_val::ConstVal;\n \n use rustc::hir::def_id::DefId;\n@@ -17,8 +16,6 @@ use rustc::ty::subst::Substs;\n \n use syntax::ast;\n \n-use std::cmp::Ordering;\n-\n use rustc_const_math::*;\n \n /// * `DefId` is the id of the constant.\n@@ -128,31 +125,3 @@ fn parse_float<'tcx>(num: &str, fty: ast::FloatTy)\n                      -> Result<ConstFloat, ()> {\n     ConstFloat::from_str(num, fty).map_err(|_| ())\n }\n-\n-pub fn compare_const_vals(a: &ConstVal, b: &ConstVal, ty: Ty) -> Option<Ordering> {\n-    trace!(\"compare_const_vals: {:?}, {:?}\", a, b);\n-    use rustc::mir::interpret::{Value, PrimVal};\n-    match (a, b) {\n-        (&Value(Value::ByVal(PrimVal::Bytes(a))),\n-         &Value(Value::ByVal(PrimVal::Bytes(b)))) => {\n-            match ty.sty {\n-                ty::TyFloat(ty) => {\n-                    let l = ConstFloat {\n-                        bits: a,\n-                        ty,\n-                    };\n-                    let r = ConstFloat {\n-                        bits: b,\n-                        ty,\n-                    };\n-                    // FIXME(oli-obk): report cmp errors?\n-                    l.try_cmp(r).ok()\n-                },\n-                ty::TyInt(_) => Some((a as i128).cmp(&(b as i128))),\n-                _ => Some(a.cmp(&b)),\n-            }\n-        },\n-        _ if a == b => Some(Ordering::Equal),\n-        _ => None,\n-    }\n-}"}, {"sha": "27649146eba614b4dd5640c243b0fd5d1aa1ebdd", "filename": "src/librustc_mir/const_eval/pattern.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0e2da01b91b991da398e4a7a4e4906fc2b31a704/src%2Flibrustc_mir%2Fconst_eval%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2da01b91b991da398e4a7a4e4906fc2b31a704/src%2Flibrustc_mir%2Fconst_eval%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fpattern.rs?ref=0e2da01b91b991da398e4a7a4e4906fc2b31a704", "patch": "@@ -18,10 +18,10 @@ use rustc::ty::subst::{Substs, Kind};\n use rustc::hir::{self, PatKind, RangeEnd};\n use rustc::hir::def::{Def, CtorKind};\n use rustc::hir::pat_util::EnumerateAndAdjustIterator;\n-use const_eval::eval::compare_const_vals;\n \n use rustc_data_structures::indexed_vec::Idx;\n \n+use std::cmp::Ordering;\n use std::fmt;\n use syntax::ast;\n use syntax::ptr::P;\n@@ -1060,3 +1060,32 @@ impl<'tcx> PatternFoldable<'tcx> for PatternKind<'tcx> {\n         }\n     }\n }\n+\n+pub fn compare_const_vals(a: &ConstVal, b: &ConstVal, ty: Ty) -> Option<Ordering> {\n+    use rustc_const_math::ConstFloat;\n+    trace!(\"compare_const_vals: {:?}, {:?}\", a, b);\n+    use rustc::mir::interpret::{Value, PrimVal};\n+    match (a, b) {\n+        (&ConstVal::Value(Value::ByVal(PrimVal::Bytes(a))),\n+         &ConstVal::Value(Value::ByVal(PrimVal::Bytes(b)))) => {\n+            match ty.sty {\n+                ty::TyFloat(ty) => {\n+                    let l = ConstFloat {\n+                        bits: a,\n+                        ty,\n+                    };\n+                    let r = ConstFloat {\n+                        bits: b,\n+                        ty,\n+                    };\n+                    // FIXME(oli-obk): report cmp errors?\n+                    l.try_cmp(r).ok()\n+                },\n+                ty::TyInt(_) => Some((a as i128).cmp(&(b as i128))),\n+                _ => Some(a.cmp(&b)),\n+            }\n+        },\n+        _ if a == b => Some(Ordering::Equal),\n+        _ => None,\n+    }\n+}"}]}