{"sha": "744df2875891dd06d5a01ce2f62ca7e75e015082", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NGRmMjg3NTg5MWRkMDZkNWEwMWNlMmY2MmNhN2U3NWUwMTUwODI=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-30T21:43:05Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-30T21:43:05Z"}, "message": "Some fixes to std index docs\n\nPart of https://github.com/rust-lang/rust/issues/29330\n\nNeeded because of https://github.com/rust-lang/rust/issues/29481 and https://github.com/rust-lang/rust/issues/29483", "tree": {"sha": "f43dc4bd9787a707dc7f4a65492b6ea2f1ddd5f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f43dc4bd9787a707dc7f4a65492b6ea2f1ddd5f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/744df2875891dd06d5a01ce2f62ca7e75e015082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/744df2875891dd06d5a01ce2f62ca7e75e015082", "html_url": "https://github.com/rust-lang/rust/commit/744df2875891dd06d5a01ce2f62ca7e75e015082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/744df2875891dd06d5a01ce2f62ca7e75e015082/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2906dbeac00a17cce5d52bbd638ecbd96af088c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2906dbeac00a17cce5d52bbd638ecbd96af088c", "html_url": "https://github.com/rust-lang/rust/commit/e2906dbeac00a17cce5d52bbd638ecbd96af088c"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "640d67db26279c5225d274b3eea5ef3dc17ab696", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/744df2875891dd06d5a01ce2f62ca7e75e015082/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/744df2875891dd06d5a01ce2f62ca7e75e015082/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=744df2875891dd06d5a01ce2f62ca7e75e015082", "patch": "@@ -78,9 +78,10 @@\n //! `std::i32`](i32/index.html) that documents the constant values [`MIN`] and\n //! [`MAX`] (rarely useful).\n //!\n-//! Note the documentation for the primitives [`str`] and [`[T]`] (also called\n-//! 'slice'). Many method calls on [`String`] and [`Vec<T>`] are actually calls\n-//! to methods on [`str`] and [`[T]`] respectively, via [deref coercions].\n+//! Note the documentation for the primitives [`str`] and [`[T]`][slice] (also\n+//! called 'slice'). Many method calls on [`String`] and [`Vec<T>`] are actually\n+//! calls to methods on [`str`] and [`[T]`][slice] respectively, via [deref\n+//! coercions].\n //!\n //! Third, the standard library defines [The Rust Prelude], a small collection\n //! of items - mostly traits - that are imported into every module of every\n@@ -109,16 +110,16 @@\n //! regions of memory:\n //!\n //! * [`Vec<T>`] - A heap-allocated *vector* that is resizable at runtime.\n-//! * [`[T; n]`] - An inline *array* with a fixed size at compile time.\n-//! * [`[T]`] - A dynamically sized *slice* into any other kind of contiguous\n+//! * [`[T; n]`][array] - An inline *array* with a fixed size at compile time.\n+//! * [`[T]`][slice] - A dynamically sized *slice* into any other kind of contiguous\n //!   storage, whether heap-allocated or not.\n //!\n //! Slices can only be handled through some kind of *pointer*, and as such come\n //! in many flavors such as:\n //!\n //! * `&[T]` - *shared slice*\n //! * `&mut [T]` - *mutable slice*\n-//! * [`Box<[T]>`] - *owned slice*\n+//! * [`Box<[T]>`][owned slice] - *owned slice*\n //!\n //! [`str`], a UTF-8 string slice, is a primitive type, and the standard library\n //! defines many methods for it. Rust [`str`]s are typically accessed as\n@@ -158,7 +159,7 @@\n //! [UDP]: net/struct.UdpSocket.html\n //! [`::std::env::args()`]: env/fn.args.html\n //! [`Arc`]: sync/struct.Arc.html\n-//! [`Box<[T]>`]: boxed/index.html\n+//! [owned slice]: boxed/index.html\n //! [`Cell`]: cell/struct.Cell.html\n //! [`FromStr`]: str/trait.FromStr.html\n //! [`HashMap<K, V>`]: collections/struct.HashMap.html\n@@ -170,8 +171,8 @@\n //! [`Result<T, E>`]: result/enum.Result.html\n //! [`String`]: string/struct.String.html\n //! [`Vec<T>`]: vec/index.html\n-//! [`[T; n]`]: primitive.array.html\n-//! [`[T]`]: primitive.slice.html\n+//! [array]: primitive.array.html\n+//! [slice]: primitive.slice.html\n //! [`atomic`]: sync/atomic/index.html\n //! [`collections`]: collections/index.html\n //! [`for`]: ../book/loops.html#for"}]}