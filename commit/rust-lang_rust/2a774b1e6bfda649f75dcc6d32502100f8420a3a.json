{"sha": "2a774b1e6bfda649f75dcc6d32502100f8420a3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNzc0YjFlNmJmZGE2NDlmNzVkY2M2ZDMyNTAyMTAwZjg0MjBhM2E=", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2019-09-14T16:26:59Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2019-09-14T16:26:59Z"}, "message": "address Centril's comments", "tree": {"sha": "1b7c9f0e1e6eab8f4163cd359dbe8a5673dfb584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b7c9f0e1e6eab8f4163cd359dbe8a5673dfb584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a774b1e6bfda649f75dcc6d32502100f8420a3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a774b1e6bfda649f75dcc6d32502100f8420a3a", "html_url": "https://github.com/rust-lang/rust/commit/2a774b1e6bfda649f75dcc6d32502100f8420a3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a774b1e6bfda649f75dcc6d32502100f8420a3a/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b093585922f670ccd0f010c234a325b814d48a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b093585922f670ccd0f010c234a325b814d48a9", "html_url": "https://github.com/rust-lang/rust/commit/5b093585922f670ccd0f010c234a325b814d48a9"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "26a89b4e7a8d1ec412b1e0efbb7342ee4cb30452", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2a774b1e6bfda649f75dcc6d32502100f8420a3a/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a774b1e6bfda649f75dcc6d32502100f8420a3a/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=2a774b1e6bfda649f75dcc6d32502100f8420a3a", "patch": "@@ -56,12 +56,20 @@ enum Trace {\n \n /// Various pieces of state used when reporting borrow checker errors.\n pub struct ErrorReportingCtx<'a, 'b, 'tcx> {\n+    /// The region inference context used for borrow chekcing this MIR body.\n     #[allow(dead_code)] // FIXME(mark-i-m): used by outlives suggestions\n-    rinfcx: &'b RegionInferenceContext<'tcx>,\n+    region_infcx: &'b RegionInferenceContext<'tcx>,\n+\n+    /// The inference context used for type checking.\n     infcx: &'b InferCtxt<'a, 'tcx>,\n \n+    /// The MIR def we are reporting errors on.\n     mir_def_id: DefId,\n+\n+    /// The MIR body we are reporting errors on (for convenience).\n     body: &'b Body<'tcx>,\n+\n+    /// Any upvars for the MIR body we have kept track of during borrow checking.\n     upvars: &'b [Upvar],\n }\n \n@@ -319,7 +327,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         );\n \n         let errctx = ErrorReportingCtx {\n-            rinfcx: self,\n+            region_infcx: self,\n             infcx,\n             mir_def_id,\n             body,\n@@ -335,16 +343,9 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 self.report_fnmut_error(&errctx, &errci, renctx)\n             }\n             (ConstraintCategory::Assignment, true, false)\n-            | (ConstraintCategory::CallArgument, true, false) => {\n-                let db = self.report_escaping_data_error(&errctx, &errci, renctx);\n-\n-                db\n-            }\n-            _ => {\n-                let db = self.report_general_error(&errctx, &errci, renctx);\n-\n-                db\n-            }\n+            | (ConstraintCategory::CallArgument, true, false) =>\n+                self.report_escaping_data_error(&errctx, &errci, renctx),\n+            _ => self.report_general_error(&errctx, &errci, renctx),\n         }\n     }\n \n@@ -714,7 +715,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         let mut renctx = RegionErrorNamingCtx::new();\n         let errctx = ErrorReportingCtx {\n             infcx, body, upvars, mir_def_id,\n-            rinfcx: self,\n+            region_infcx: self,\n         };\n         let outlived_fr_name = self.give_region_a_name(&errctx, &mut renctx, outlived_region);\n "}]}