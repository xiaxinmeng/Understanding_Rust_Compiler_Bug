{"sha": "0f6f458cc1b460076093efda903bf1a1b9062697", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNmY0NThjYzFiNDYwMDc2MDkzZWZkYTkwM2JmMWExYjkwNjI2OTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-08T13:35:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-08T18:45:06Z"}, "message": "Make working with codegen less annoying\n\nWe probably should look into removing `xtask codegen` altogether. The\ntest workflow works perfectly for package.json config.\n\nThere are two things preventing that:\n\n* Lint completions are generated on demand.\n* Docs are not committed to the repository.", "tree": {"sha": "2e1db2d81bc3ab3f3a954e3ea9ce7ccffca64259", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1db2d81bc3ab3f3a954e3ea9ce7ccffca64259"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f6f458cc1b460076093efda903bf1a1b9062697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6f458cc1b460076093efda903bf1a1b9062697", "html_url": "https://github.com/rust-lang/rust/commit/0f6f458cc1b460076093efda903bf1a1b9062697", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f6f458cc1b460076093efda903bf1a1b9062697/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "071dde1c1da10e3580bded99dc2d529074356536", "url": "https://api.github.com/repos/rust-lang/rust/commits/071dde1c1da10e3580bded99dc2d529074356536", "html_url": "https://github.com/rust-lang/rust/commit/071dde1c1da10e3580bded99dc2d529074356536"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "e3f9ccada43c5858c00b778d97275ea44dd25272", "filename": "xtask/src/codegen.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0f6f458cc1b460076093efda903bf1a1b9062697/xtask%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6f458cc1b460076093efda903bf1a1b9062697/xtask%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen.rs?ref=0f6f458cc1b460076093efda903bf1a1b9062697", "patch": "@@ -32,7 +32,7 @@ pub(crate) use self::{\n #[derive(Debug, PartialEq, Eq, Clone, Copy)]\n pub(crate) enum Mode {\n     Overwrite,\n-    Verify,\n+    Ensure,\n }\n \n impl flags::Codegen {\n@@ -59,12 +59,19 @@ fn update(path: &Path, contents: &str, mode: Mode) -> Result<()> {\n         }\n         _ => (),\n     }\n-    if mode == Mode::Verify {\n-        anyhow::bail!(\"`{}` is not up-to-date\", path.display());\n-    }\n+    let return_error = match mode {\n+        Mode::Overwrite => false,\n+        Mode::Ensure => true,\n+    };\n     eprintln!(\"updating {}\", path.display());\n     write_file(path, contents)?;\n-    return Ok(());\n+\n+    return if return_error {\n+        let path = path.strip_prefix(&project_root()).unwrap_or(path);\n+        anyhow::bail!(\"`{}` was not up-to-date, updating\", path.display());\n+    } else {\n+        Ok(())\n+    };\n \n     fn normalize(s: &str) -> String {\n         s.replace(\"\\r\\n\", \"\\n\")"}, {"sha": "25fd32f92191151e7b18285f88abf3d00a9626e6", "filename": "xtask/src/main.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f6f458cc1b460076093efda903bf1a1b9062697/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6f458cc1b460076093efda903bf1a1b9062697/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=0f6f458cc1b460076093efda903bf1a1b9062697", "patch": "@@ -89,11 +89,16 @@ fn run_rustfmt(mode: Mode) -> Result<()> {\n     let _dir = pushd(project_root())?;\n     let _e = pushenv(\"RUSTUP_TOOLCHAIN\", \"stable\");\n     ensure_rustfmt()?;\n-    let check = match mode {\n-        Mode::Overwrite => &[][..],\n-        Mode::Verify => &[\"--\", \"--check\"],\n+    match mode {\n+        Mode::Overwrite => cmd!(\"cargo fmt\").run()?,\n+        Mode::Ensure => {\n+            let res = cmd!(\"cargo fmt -- --check\").run();\n+            if !res.is_ok() {\n+                let _ = cmd!(\"cargo fmt\").run();\n+            }\n+            res?;\n+        }\n     };\n-    cmd!(\"cargo fmt {check...}\").run()?;\n     Ok(())\n }\n "}, {"sha": "3818b9e0f74453496c286306f5cc944a2ec82e2d", "filename": "xtask/src/tidy.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f6f458cc1b460076093efda903bf1a1b9062697/xtask%2Fsrc%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6f458cc1b460076093efda903bf1a1b9062697/xtask%2Fsrc%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Ftidy.rs?ref=0f6f458cc1b460076093efda903bf1a1b9062697", "patch": "@@ -13,30 +13,22 @@ use crate::{\n \n #[test]\n fn generated_grammar_is_fresh() {\n-    if let Err(error) = codegen::generate_syntax(Mode::Verify) {\n-        panic!(\"{}. Please update it by running `cargo xtask codegen`\", error);\n-    }\n+    codegen::generate_syntax(Mode::Ensure).unwrap()\n }\n \n #[test]\n fn generated_tests_are_fresh() {\n-    if let Err(error) = codegen::generate_parser_tests(Mode::Verify) {\n-        panic!(\"{}. Please update tests by running `cargo xtask codegen`\", error);\n-    }\n+    codegen::generate_parser_tests(Mode::Ensure).unwrap()\n }\n \n #[test]\n fn generated_assists_are_fresh() {\n-    if let Err(error) = codegen::generate_assists_tests(Mode::Verify) {\n-        panic!(\"{}. Please update assists by running `cargo xtask codegen`\", error);\n-    }\n+    codegen::generate_assists_tests(Mode::Ensure).unwrap();\n }\n \n #[test]\n fn check_code_formatting() {\n-    if let Err(error) = run_rustfmt(Mode::Verify) {\n-        panic!(\"{}. Please format the code by running `cargo format`\", error);\n-    }\n+    run_rustfmt(Mode::Ensure).unwrap()\n }\n \n #[test]"}]}