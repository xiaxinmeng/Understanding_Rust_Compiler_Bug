{"sha": "803f941867d1d68710f211535de69bb30f79f917", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwM2Y5NDE4NjdkMWQ2ODcxMGYyMTE1MzVkZTY5YmIzMGY3OWY5MTc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-26T20:58:38Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-27T20:31:48Z"}, "message": "reflect: rm unused visit_{var,var_integral,constr}", "tree": {"sha": "6ca04a09aafabdc4d133088d3f1a3309e62981db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ca04a09aafabdc4d133088d3f1a3309e62981db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/803f941867d1d68710f211535de69bb30f79f917", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/803f941867d1d68710f211535de69bb30f79f917", "html_url": "https://github.com/rust-lang/rust/commit/803f941867d1d68710f211535de69bb30f79f917", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/803f941867d1d68710f211535de69bb30f79f917/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4f0df12067e9aeb8ad8b7b953c69192daf0ddd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4f0df12067e9aeb8ad8b7b953c69192daf0ddd", "html_url": "https://github.com/rust-lang/rust/commit/ac4f0df12067e9aeb8ad8b7b953c69192daf0ddd"}], "stats": {"total": 44, "additions": 0, "deletions": 44}, "files": [{"sha": "56e0f83e05cf0ea722ae87f93a52dd82f474da9a", "filename": "src/libstd/reflect.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/803f941867d1d68710f211535de69bb30f79f917/src%2Flibstd%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803f941867d1d68710f211535de69bb30f79f917/src%2Flibstd%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Freflect.rs?ref=803f941867d1d68710f211535de69bb30f79f917", "patch": "@@ -460,16 +460,6 @@ impl<V:TyVisitor + MovePtr> TyVisitor for MovePtrAdaptor<V> {\n         true\n     }\n \n-    fn visit_var(&self) -> bool {\n-        if ! self.inner.visit_var() { return false; }\n-        true\n-    }\n-\n-    fn visit_var_integral(&self) -> bool {\n-        if ! self.inner.visit_var_integral() { return false; }\n-        true\n-    }\n-\n     fn visit_param(&self, i: uint) -> bool {\n         if ! self.inner.visit_param(i) { return false; }\n         true\n@@ -494,11 +484,6 @@ impl<V:TyVisitor + MovePtr> TyVisitor for MovePtrAdaptor<V> {\n         true\n     }\n \n-    fn visit_constr(&self, inner: *TyDesc) -> bool {\n-        if ! self.inner.visit_constr(inner) { return false; }\n-        true\n-    }\n-\n     fn visit_closure_ptr(&self, ck: uint) -> bool {\n         self.align_to::<@fn()>();\n         if ! self.inner.visit_closure_ptr(ck) { return false; }"}, {"sha": "ad4658d2f42bb1a7bbdb01e6d9dec192790ec5d4", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/803f941867d1d68710f211535de69bb30f79f917/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803f941867d1d68710f211535de69bb30f79f917/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=803f941867d1d68710f211535de69bb30f79f917", "patch": "@@ -563,8 +563,6 @@ impl TyVisitor for ReprVisitor {\n \n \n     fn visit_trait(&self) -> bool { true }\n-    fn visit_var(&self) -> bool { true }\n-    fn visit_var_integral(&self) -> bool { true }\n     fn visit_param(&self, _i: uint) -> bool { true }\n     fn visit_self(&self) -> bool { true }\n     fn visit_type(&self) -> bool { true }\n@@ -577,9 +575,6 @@ impl TyVisitor for ReprVisitor {\n         }\n     }\n \n-    // Type no longer exists, vestigial function.\n-    fn visit_constr(&self, _inner: *TyDesc) -> bool { fail!(); }\n-\n     fn visit_closure_ptr(&self, _ck: uint) -> bool { true }\n }\n "}, {"sha": "796567bd561196a3903f67a81b3547af5e63249c", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/803f941867d1d68710f211535de69bb30f79f917/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803f941867d1d68710f211535de69bb30f79f917/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=803f941867d1d68710f211535de69bb30f79f917", "patch": "@@ -161,13 +161,10 @@ pub trait TyVisitor {\n                       n_inputs: uint, retstyle: uint) -> bool;\n \n     fn visit_trait(&self) -> bool;\n-    fn visit_var(&self) -> bool;\n-    fn visit_var_integral(&self) -> bool;\n     fn visit_param(&self, i: uint) -> bool;\n     fn visit_self(&self) -> bool;\n     fn visit_type(&self) -> bool;\n     fn visit_opaque_box(&self) -> bool;\n-    fn visit_constr(&self, inner: *TyDesc) -> bool;\n     fn visit_closure_ptr(&self, ck: uint) -> bool;\n }\n "}, {"sha": "b56cef4277f5742faec632f7a3098b8e4a1e4d80", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/803f941867d1d68710f211535de69bb30f79f917/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803f941867d1d68710f211535de69bb30f79f917/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=803f941867d1d68710f211535de69bb30f79f917", "patch": "@@ -436,16 +436,6 @@ impl<V:TyVisitor + movable_ptr> TyVisitor for ptr_visit_adaptor<V> {\n         true\n     }\n \n-    fn visit_var(&self) -> bool {\n-        if ! self.inner.visit_var() { return false; }\n-        true\n-    }\n-\n-    fn visit_var_integral(&self) -> bool {\n-        if ! self.inner.visit_var_integral() { return false; }\n-        true\n-    }\n-\n     fn visit_param(&self, i: uint) -> bool {\n         if ! self.inner.visit_param(i) { return false; }\n         true\n@@ -470,11 +460,6 @@ impl<V:TyVisitor + movable_ptr> TyVisitor for ptr_visit_adaptor<V> {\n         true\n     }\n \n-    fn visit_constr(&self, inner: *TyDesc) -> bool {\n-        if ! self.inner.visit_constr(inner) { return false; }\n-        true\n-    }\n-\n     fn visit_closure_ptr(&self, ck: uint) -> bool {\n         self.align_to::<@fn()>();\n         if ! self.inner.visit_closure_ptr(ck) { return false; }\n@@ -633,13 +618,10 @@ impl TyVisitor for my_visitor {\n \n \n     fn visit_trait(&self) -> bool { true }\n-    fn visit_var(&self) -> bool { true }\n-    fn visit_var_integral(&self) -> bool { true }\n     fn visit_param(&self, _i: uint) -> bool { true }\n     fn visit_self(&self) -> bool { true }\n     fn visit_type(&self) -> bool { true }\n     fn visit_opaque_box(&self) -> bool { true }\n-    fn visit_constr(&self, _inner: *TyDesc) -> bool { true }\n     fn visit_closure_ptr(&self, _ck: uint) -> bool { true }\n }\n "}, {"sha": "1462d8aace130cbe73a31ffe699a91306cabe679", "filename": "src/test/run-pass/reflect-visit-type.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/803f941867d1d68710f211535de69bb30f79f917/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803f941867d1d68710f211535de69bb30f79f917/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs?ref=803f941867d1d68710f211535de69bb30f79f917", "patch": "@@ -144,13 +144,10 @@ impl TyVisitor for MyVisitor {\n \n \n     fn visit_trait(&self) -> bool { true }\n-    fn visit_var(&self) -> bool { true }\n-    fn visit_var_integral(&self) -> bool { true }\n     fn visit_param(&self, _i: uint) -> bool { true }\n     fn visit_self(&self) -> bool { true }\n     fn visit_type(&self) -> bool { true }\n     fn visit_opaque_box(&self) -> bool { true }\n-    fn visit_constr(&self, _inner: *TyDesc) -> bool { true }\n     fn visit_closure_ptr(&self, _ck: uint) -> bool { true }\n }\n "}]}