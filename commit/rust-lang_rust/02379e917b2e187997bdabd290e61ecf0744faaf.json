{"sha": "02379e917b2e187997bdabd290e61ecf0744faaf", "node_id": "C_kwDOAAsO6NoAKDAyMzc5ZTkxN2IyZTE4Nzk5N2JkYWJkMjkwZTYxZWNmMDc0NGZhYWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T16:10:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T16:10:32Z"}, "message": "Rollup merge of #91606 - joshtriplett:stabilize-print-link-args, r=pnkfelix\n\nStabilize `-Z print-link-args` as `--print link-args`\n\nWe have stable options for adding linker arguments; we should have a\nstable option to help debug linker arguments.\n\nAdd documentation for the new option. In the documentation, make it clear that\nthe *exact* format of the output is not a stable guarantee.", "tree": {"sha": "90ecc736327bbe5a68f50eb5e9e16a2fdfdc1295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90ecc736327bbe5a68f50eb5e9e16a2fdfdc1295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02379e917b2e187997bdabd290e61ecf0744faaf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6Yl4CRBK7hj4Ov3rIwAA+vwIAGr86uzgISKpVahrM5nwWQQF\npnoSkksbeE8nh4uq64le/Ma6TCCFn8LfrmGdEPmxi1XR8JlY81N23BN9zjjCe+Ho\nFAHibBHj4aPHBx3om0f5uZqwPtK0Uo0sIh6NkzCalR+1esOqZJ01/8msT1jkj6AW\nmh/lNlivkpyQC7sbpOdQPKBLJF1cef+SnzoUYRPHA97XTvkuHxS81oR5CWc0saMQ\npR5dNqLFpKMvU2r1MXsM9+X9hyJDs+4ZdF/TTqjTnRB6K+J8vncdI2eLnrZ26T83\nVaGgvh27HroGcyGHAhBLUH6dLkjzeqxSVVcjJeggCDuv6qCLldTJ/Z/iSc5wzOo=\n=FPa7\n-----END PGP SIGNATURE-----\n", "payload": "tree 90ecc736327bbe5a68f50eb5e9e16a2fdfdc1295\nparent d188287a54f1bb202e4c16067a6c4cdff4bdfd6c\nparent 371bd4643587da89ce1bbe7e577f49d9b8acb990\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642695032 +0100\ncommitter GitHub <noreply@github.com> 1642695032 +0100\n\nRollup merge of #91606 - joshtriplett:stabilize-print-link-args, r=pnkfelix\n\nStabilize `-Z print-link-args` as `--print link-args`\n\nWe have stable options for adding linker arguments; we should have a\nstable option to help debug linker arguments.\n\nAdd documentation for the new option. In the documentation, make it clear that\nthe *exact* format of the output is not a stable guarantee.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02379e917b2e187997bdabd290e61ecf0744faaf", "html_url": "https://github.com/rust-lang/rust/commit/02379e917b2e187997bdabd290e61ecf0744faaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02379e917b2e187997bdabd290e61ecf0744faaf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "html_url": "https://github.com/rust-lang/rust/commit/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c"}, {"sha": "371bd4643587da89ce1bbe7e577f49d9b8acb990", "url": "https://api.github.com/repos/rust-lang/rust/commits/371bd4643587da89ce1bbe7e577f49d9b8acb990", "html_url": "https://github.com/rust-lang/rust/commit/371bd4643587da89ce1bbe7e577f49d9b8acb990"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "acf65259f61cf03a07ec42dc0fa5f7f66583e390", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -667,7 +667,7 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         cmd.env_remove(k);\n     }\n \n-    if sess.opts.debugging_opts.print_link_args {\n+    if sess.opts.prints.contains(&PrintRequest::LinkArgs) {\n         println!(\"{:?}\", &cmd);\n     }\n "}, {"sha": "19fa6812b45d9ff3c957ca0d021f22712daad686", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -645,9 +645,9 @@ impl RustcDefaultCalls {\n         temps_dir: &Option<PathBuf>,\n     ) -> Compilation {\n         use rustc_session::config::PrintRequest::*;\n-        // PrintRequest::NativeStaticLibs is special - printed during linking\n+        // NativeStaticLibs and LinkArgs are special - printed during linking\n         // (empty iterator returns true)\n-        if sess.opts.prints.iter().all(|&p| p == PrintRequest::NativeStaticLibs) {\n+        if sess.opts.prints.iter().all(|&p| p == NativeStaticLibs || p == LinkArgs) {\n             return Compilation::Continue;\n         }\n \n@@ -738,7 +738,8 @@ impl RustcDefaultCalls {\n                     codegen_backend.print(*req, sess);\n                 }\n                 // Any output here interferes with Cargo's parsing of other printed output\n-                PrintRequest::NativeStaticLibs => {}\n+                NativeStaticLibs => {}\n+                LinkArgs => {}\n             }\n         }\n         Compilation::Stop"}, {"sha": "44acbd3cf2159d592a0523de7ed609883e5ed6e8", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -678,7 +678,6 @@ fn test_debugging_options_tracking_hash() {\n     // `pre_link_arg` is omitted because it just forwards to `pre_link_args`.\n     untracked!(pre_link_args, vec![String::from(\"abc\"), String::from(\"def\")]);\n     untracked!(profile_closures, true);\n-    untracked!(print_link_args, true);\n     untracked!(print_llvm_passes, true);\n     untracked!(print_mono_items, Some(String::from(\"abc\")));\n     untracked!(print_type_sizes, true);"}, {"sha": "92ad0723f4879f31690307761dffb600296f75ce", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -565,6 +565,7 @@ pub enum PrintRequest {\n     TargetSpec,\n     NativeStaticLibs,\n     StackProtectorStrategies,\n+    LinkArgs,\n }\n \n #[derive(Copy, Clone)]\n@@ -1187,7 +1188,8 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n             \"Compiler information to print on stdout\",\n             \"[crate-name|file-names|sysroot|target-libdir|cfg|target-list|\\\n              target-cpus|target-features|relocation-models|code-models|\\\n-             tls-models|target-spec-json|native-static-libs|stack-protector-strategies]\",\n+             tls-models|target-spec-json|native-static-libs|stack-protector-strategies\\\n+             link-args]\",\n         ),\n         opt::flagmulti_s(\"g\", \"\", \"Equivalent to -C debuginfo=2\"),\n         opt::flagmulti_s(\"O\", \"\", \"Equivalent to -C opt-level=2\"),\n@@ -1619,6 +1621,7 @@ fn collect_print_requests(\n                 );\n             }\n         }\n+        \"link-args\" => PrintRequest::LinkArgs,\n         req => early_error(error_format, &format!(\"unknown print request `{}`\", req)),\n     }));\n "}, {"sha": "e7ab8fffdf35c4440f3392151b7590c6eefb193d", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -1339,8 +1339,6 @@ options! {\n         See #77382 and #74551.\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"make rustc print the total optimization fuel used by a crate\"),\n-    print_link_args: bool = (false, parse_bool, [UNTRACKED],\n-        \"print the arguments passed to the linker (default: no)\"),\n     print_llvm_passes: bool = (false, parse_bool, [UNTRACKED],\n         \"print the LLVM optimization passes being run (default: no)\"),\n     print_mono_items: Option<String> = (None, parse_opt_string, [UNTRACKED],"}, {"sha": "11925ab9785889e15dc6696b8c02c1322ad3b3e8", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -170,6 +170,12 @@ The valid types of print values are:\n   include a diagnostic note that indicates the linker flags to use when\n   linking the resulting static library. The note starts with the text\n   `native-static-libs:` to make it easier to fetch the output.\n+- `link-args` \u2014 This flag does not disable the `--emit` step. When linking,\n+  this flag causes `rustc` to print the full linker invocation in a\n+  human-readable form. This can be useful when debugging linker options. The\n+  exact format of this debugging output is not a stable guarantee, other than\n+  that it will include the linker executable and the text of each command-line\n+  argument passed to the linker.\n \n [conditional compilation]: ../reference/conditional-compilation.html\n "}, {"sha": "f1410b69b3fceafe49a87bbab3a602b00610c3f0", "filename": "src/test/run-make-fulldeps/codegen-options-parsing/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fcodegen-options-parsing%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fcodegen-options-parsing%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcodegen-options-parsing%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -24,8 +24,8 @@ all:\n \t$(RUSTC) -C lto dummy.rs\n \n \t# Should not link dead code...\n-\t$(RUSTC) -Z print-link-args dummy.rs 2>&1 | \\\n+\t$(RUSTC) --print link-args dummy.rs 2>&1 | \\\n \t\t$(CGREP) -e '--gc-sections|-z[^ ]* [^ ]*<ignore>|-dead_strip|/OPT:REF'\n \t# ... unless you specifically ask to keep it\n-\t$(RUSTC) -Z print-link-args -C link-dead-code dummy.rs 2>&1 | \\\n+\t$(RUSTC) --print link-args -C link-dead-code dummy.rs 2>&1 | \\\n \t\t$(CGREP) -ve '--gc-sections|-z[^ ]* [^ ]*<ignore>|-dead_strip|/OPT:REF'"}, {"sha": "0a50859cdaa4dd670423cb6cefcec9e546e38843", "filename": "src/test/run-make-fulldeps/interdependent-c-libraries/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Finterdependent-c-libraries%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Finterdependent-c-libraries%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finterdependent-c-libraries%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -11,4 +11,4 @@\n all: $(call NATIVE_STATICLIB,foo) $(call NATIVE_STATICLIB,bar)\n \t$(RUSTC) foo.rs\n \t$(RUSTC) bar.rs\n-\t$(RUSTC) main.rs -Z print-link-args\n+\t$(RUSTC) main.rs --print link-args"}, {"sha": "0360ede762551a673873abba499d6293992e2df0", "filename": "src/test/run-make-fulldeps/link-arg/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Flink-arg%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Flink-arg%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flink-arg%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -1,5 +1,5 @@\n -include ../tools.mk\n-RUSTC_FLAGS = -C link-arg=\"-lfoo\" -C link-arg=\"-lbar\" -Z print-link-args\n+RUSTC_FLAGS = -C link-arg=\"-lfoo\" -C link-arg=\"-lbar\" --print link-args\n \n all:\n \t$(RUSTC) $(RUSTC_FLAGS) empty.rs | $(CGREP) lfoo lbar"}, {"sha": "3ffbba9444bc2ea338d31e8e31c184c99f7980d2", "filename": "src/test/run-make-fulldeps/metadata-flag-frobs-symbols/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fmetadata-flag-frobs-symbols%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fmetadata-flag-frobs-symbols%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fmetadata-flag-frobs-symbols%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -6,5 +6,5 @@ all:\n \t$(RUSTC) bar.rs \\\n \t\t--extern foo1=$(TMPDIR)/libfoo-a.rlib \\\n \t\t--extern foo2=$(TMPDIR)/libfoo-b.rlib \\\n-\t\t-Z print-link-args\n+\t\t--print link-args\n \t$(call RUN,bar)"}, {"sha": "2e41be39d5d00851348915f5ebfa2e2a200f5ed3", "filename": "src/test/run-make-fulldeps/no-builtins-lto/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fno-builtins-lto%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fno-builtins-lto%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fno-builtins-lto%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -6,4 +6,4 @@ all:\n \t# Build an executable that depends on that crate using LTO. The no_builtins crate doesn't\n \t# participate in LTO, so its rlib must be explicitly linked into the final binary. Verify this by\n \t# grepping the linker arguments.\n-\t$(RUSTC) main.rs -C lto -Z print-link-args | $(CGREP) 'libno_builtins.rlib'\n+\t$(RUSTC) main.rs -C lto --print link-args | $(CGREP) 'libno_builtins.rlib'"}, {"sha": "e09841fb42e1876ae337328568d6994a20ac0e33", "filename": "src/test/run-make-fulldeps/redundant-libs/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fredundant-libs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fredundant-libs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fredundant-libs%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -16,7 +16,7 @@ RUSTC_FLAGS = \\\n     -l foo \\\n     -l static=baz \\\n     -l foo \\\n-    -Z print-link-args\n+    --print link-args\n \n all: $(call DYLIB,foo) $(call STATICLIB,bar) $(call STATICLIB,baz)\n \t$(RUSTC) $(RUSTC_FLAGS) main.rs"}, {"sha": "8f78c401a11415fe9b4665d9117187b77734adb3", "filename": "src/test/run-make-fulldeps/static-nobundle/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/02379e917b2e187997bdabd290e61ecf0744faaf/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile?ref=02379e917b2e187997bdabd290e61ecf0744faaf", "patch": "@@ -13,9 +13,9 @@ all: $(call NATIVE_STATICLIB,aaa)\n \tnm $(TMPDIR)/libbbb.rlib | $(CGREP) -e \"U _*native_func\"\n \n \t# Check that aaa gets linked (either as `-l aaa` or `aaa.lib`) when building ccc.\n-\t$(RUSTC) ccc.rs -C prefer-dynamic --crate-type=dylib -Z print-link-args | $(CGREP) -e '-l[\" ]*aaa|aaa\\.lib'\n+\t$(RUSTC) ccc.rs -C prefer-dynamic --crate-type=dylib --print link-args | $(CGREP) -e '-l[\" ]*aaa|aaa\\.lib'\n \n \t# Check that aaa does NOT get linked when building ddd.\n-\t$(RUSTC) ddd.rs -Z print-link-args | $(CGREP) -ve '-l[\" ]*aaa|aaa\\.lib'\n+\t$(RUSTC) ddd.rs --print link-args | $(CGREP) -ve '-l[\" ]*aaa|aaa\\.lib'\n \n \t$(call RUN,ddd)"}]}