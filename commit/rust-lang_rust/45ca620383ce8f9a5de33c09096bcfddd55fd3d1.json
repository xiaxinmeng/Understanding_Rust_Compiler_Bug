{"sha": "45ca620383ce8f9a5de33c09096bcfddd55fd3d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1Y2E2MjAzODNjZThmOWE1ZGUzM2MwOTA5NmJjZmRkZDU1ZmQzZDE=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-31T13:29:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-31T13:29:08Z"}, "message": "Rollup merge of #35758 - matthew-piziak:vec-assert-over-println-remaining, r=GuillaumeGomez\n\naccumulate vector and assert for RangeFrom and RangeInclusive examples\n\nPR #35695 for `Range` was merged, so it seems that this side-effect-free style is preferred for Range* examples. This PR performs the same translation for `RangeFrom` and `RangeInclusive`. It also removes what looks to be an erroneously commented line for `#![feature(step_by)]`, and an unnecessary primitive-type annotation in `0u8..`.", "tree": {"sha": "50665aa51dbe7ee34242634f04b431e90dd8582d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50665aa51dbe7ee34242634f04b431e90dd8582d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45ca620383ce8f9a5de33c09096bcfddd55fd3d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45ca620383ce8f9a5de33c09096bcfddd55fd3d1", "html_url": "https://github.com/rust-lang/rust/commit/45ca620383ce8f9a5de33c09096bcfddd55fd3d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45ca620383ce8f9a5de33c09096bcfddd55fd3d1/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "603d9ccfbe564e280389e9b3e880d0c53623433d", "url": "https://api.github.com/repos/rust-lang/rust/commits/603d9ccfbe564e280389e9b3e880d0c53623433d", "html_url": "https://github.com/rust-lang/rust/commit/603d9ccfbe564e280389e9b3e880d0c53623433d"}, {"sha": "50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "html_url": "https://github.com/rust-lang/rust/commit/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd"}], "stats": {"total": 32, "additions": 10, "deletions": 22}, "files": [{"sha": "66d05d81d80cd7e92157bfd865eb5d353713791f", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/45ca620383ce8f9a5de33c09096bcfddd55fd3d1/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45ca620383ce8f9a5de33c09096bcfddd55fd3d1/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=45ca620383ce8f9a5de33c09096bcfddd55fd3d1", "patch": "@@ -263,14 +263,12 @@ impl<A: Step> ops::RangeFrom<A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(step_by)]\n-    ///\n-    /// for i in (0u8..).step_by(2).take(10) {\n-    ///     println!(\"{}\", i);\n+    /// #![feature(step_by)]\n+    /// fn main() {\n+    ///     let result: Vec<_> = (0..).step_by(2).take(5).collect();\n+    ///     assert_eq!(result, vec![0, 2, 4, 6, 8]);\n     /// }\n     /// ```\n-    ///\n-    /// This prints the first ten even natural integers (0 to 18).\n     #[unstable(feature = \"step_by\", reason = \"recent addition\",\n                issue = \"27741\")]\n     pub fn step_by(self, by: A) -> StepBy<A, Self> {\n@@ -291,8 +289,10 @@ impl<A: Step> ops::Range<A> {\n     ///\n     /// ```\n     /// #![feature(step_by)]\n-    /// let result: Vec<_> = (0..10).step_by(2).collect();\n-    /// assert_eq!(result, vec![0, 2, 4, 6, 8]);\n+    /// fn main() {\n+    ///     let result: Vec<_> = (0..10).step_by(2).collect();\n+    ///     assert_eq!(result, vec![0, 2, 4, 6, 8]);\n+    /// }\n     /// ```\n     #[unstable(feature = \"step_by\", reason = \"recent addition\",\n                issue = \"27741\")]\n@@ -315,20 +315,8 @@ impl<A: Step> ops::RangeInclusive<A> {\n     /// ```\n     /// #![feature(step_by, inclusive_range_syntax)]\n     ///\n-    /// for i in (0...10).step_by(2) {\n-    ///     println!(\"{}\", i);\n-    /// }\n-    /// ```\n-    ///\n-    /// This prints:\n-    ///\n-    /// ```text\n-    /// 0\n-    /// 2\n-    /// 4\n-    /// 6\n-    /// 8\n-    /// 10\n+    /// let result: Vec<_> = (0...10).step_by(2).collect();\n+    /// assert_eq!(result, vec![0, 2, 4, 6, 8, 10]);\n     /// ```\n     #[unstable(feature = \"step_by\", reason = \"recent addition\",\n                issue = \"27741\")]"}]}