{"sha": "6f0fc2fd337757a02fa0d948e78638d66a46f518", "node_id": "C_kwDOAAsO6NoAKDZmMGZjMmZkMzM3NzU3YTAyZmEwZDk0OGU3ODYzOGQ2NmE0NmY1MTg", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-11-25T01:39:40Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-17T20:56:37Z"}, "message": "Symlink `build/host` -> `build/x86_64-unknown-linux-gnu` (as appropriate per target)\n\nThis allows us to use a consistent path in the documentation, without having to worry about which platform people are using.", "tree": {"sha": "181c901bbf689187dc6db1dfc019fabaa946e0fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/181c901bbf689187dc6db1dfc019fabaa946e0fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f0fc2fd337757a02fa0d948e78638d66a46f518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0fc2fd337757a02fa0d948e78638d66a46f518", "html_url": "https://github.com/rust-lang/rust/commit/6f0fc2fd337757a02fa0d948e78638d66a46f518", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f0fc2fd337757a02fa0d948e78638d66a46f518/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d76a9df5d040e8dfcb23e01fc3847c628d833e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d76a9df5d040e8dfcb23e01fc3847c628d833e4", "html_url": "https://github.com/rust-lang/rust/commit/2d76a9df5d040e8dfcb23e01fc3847c628d833e4"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "f0c9a948727f0f2c15316636bc46bd96f5e61597", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6f0fc2fd337757a02fa0d948e78638d66a46f518/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0fc2fd337757a02fa0d948e78638d66a46f518/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=6f0fc2fd337757a02fa0d948e78638d66a46f518", "patch": "@@ -108,6 +108,7 @@ use std::collections::{HashMap, HashSet};\n use std::env;\n use std::fs::{self, File};\n use std::io;\n+use std::io::ErrorKind;\n use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::str;\n@@ -119,7 +120,9 @@ use once_cell::sync::OnceCell;\n \n use crate::builder::Kind;\n use crate::config::{LlvmLibunwind, TargetSelection};\n-use crate::util::{exe, libdir, mtime, output, run, run_suppressed, try_run_suppressed, CiEnv};\n+use crate::util::{\n+    exe, libdir, mtime, output, run, run_suppressed, symlink_dir, try_run_suppressed, CiEnv,\n+};\n \n mod bolt;\n mod builder;\n@@ -586,6 +589,20 @@ impl Build {\n             metadata::build(&mut build);\n         }\n \n+        // Make a symbolic link so we can use a consistent directory in the documentation.\n+        let build_triple = build.out.join(&build.build.triple);\n+        let host = build.out.join(\"host\");\n+        if let Err(e) = symlink_dir(&build.config, &build_triple, &host) {\n+            if e.kind() != ErrorKind::AlreadyExists {\n+                panic!(\n+                    \"symlink_dir({} => {}) failed with {}\",\n+                    host.display(),\n+                    build_triple.display(),\n+                    e\n+                );\n+            }\n+        }\n+\n         build\n     }\n "}]}