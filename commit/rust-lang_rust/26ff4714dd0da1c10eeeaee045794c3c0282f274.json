{"sha": "26ff4714dd0da1c10eeeaee045794c3c0282f274", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZmY0NzE0ZGQwZGExYzEwZWVlYWVlMDQ1Nzk0YzNjMDI4MmYyNzQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-06-30T19:37:45Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-06-30T19:37:45Z"}, "message": "Rollup merge of #26678 - bluss:doc-fmt, r=steveklabnik\n\nfmt: Update docs and mention :#? pretty-printing\r\n\r\nExpose `:#?` well in the docs for fmt and Debug itself. Also update some out of date information and fix formatting in `std::fmt` docs.", "tree": {"sha": "4fcde93f5048feaf89fe2a1977325284ba6b44ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fcde93f5048feaf89fe2a1977325284ba6b44ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26ff4714dd0da1c10eeeaee045794c3c0282f274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26ff4714dd0da1c10eeeaee045794c3c0282f274", "html_url": "https://github.com/rust-lang/rust/commit/26ff4714dd0da1c10eeeaee045794c3c0282f274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26ff4714dd0da1c10eeeaee045794c3c0282f274/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65b5c15384e7fad8868f375d7f1e6f765db0be21", "url": "https://api.github.com/repos/rust-lang/rust/commits/65b5c15384e7fad8868f375d7f1e6f765db0be21", "html_url": "https://github.com/rust-lang/rust/commit/65b5c15384e7fad8868f375d7f1e6f765db0be21"}, {"sha": "516941b74f61f058625fab936ad0fd2c97943e22", "url": "https://api.github.com/repos/rust-lang/rust/commits/516941b74f61f058625fab936ad0fd2c97943e22", "html_url": "https://github.com/rust-lang/rust/commit/516941b74f61f058625fab936ad0fd2c97943e22"}], "stats": {"total": 50, "additions": 27, "deletions": 23}, "files": [{"sha": "7df259e9b36a89036b758b6bb979323f8a8c314a", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/26ff4714dd0da1c10eeeaee045794c3c0282f274/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26ff4714dd0da1c10eeeaee045794c3c0282f274/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=26ff4714dd0da1c10eeeaee045794c3c0282f274", "patch": "@@ -128,15 +128,15 @@\n //! This allows multiple actual types to be formatted via `{:x}` (like `i8` as\n //! well as `isize`).  The current mapping of types to traits is:\n //!\n-//! * *nothing* \u21d2 `Display`\n-//! * `?` \u21d2 `Debug`\n-//! * `o` \u21d2 `Octal`\n-//! * `x` \u21d2 `LowerHex`\n-//! * `X` \u21d2 `UpperHex`\n-//! * `p` \u21d2 `Pointer`\n-//! * `b` \u21d2 `Binary`\n-//! * `e` \u21d2 `LowerExp`\n-//! * `E` \u21d2 `UpperExp`\n+//! * *nothing* \u21d2 [`Display`](trait.Display.html)\n+//! * `?` \u21d2 [`Debug`](trait.Debug.html)\n+//! * `o` \u21d2 [`Octal`](trait.Octal.html)\n+//! * `x` \u21d2 [`LowerHex`](trait.LowerHex.html)\n+//! * `X` \u21d2 [`UpperHex`](trait.UpperHex.html)\n+//! * `p` \u21d2 [`Pointer`](trait.Pointer.html)\n+//! * `b` \u21d2 [`Binary`](trait.Binary.html)\n+//! * `e` \u21d2 [`LowerExp`](trait.LowerExp.html)\n+//! * `E` \u21d2 [`UpperExp`](trait.UpperExp.html)\n //!\n //! What this means is that any type of argument which implements the\n //! `fmt::Binary` trait can then be formatted with `{:b}`. Implementations\n@@ -367,11 +367,11 @@\n //!         should always be printed.\n //! * '-' - Currently not used\n //! * '#' - This flag is indicates that the \"alternate\" form of printing should\n-//!         be used.  For array slices, the alternate form omits the brackets.\n-//!         For the integer formatting traits, the alternate forms are:\n+//!         be used. The alternate forms are:\n+//!     * `#?` - pretty-print the `Debug` formatting\n //!     * `#x` - precedes the argument with a \"0x\"\n //!     * `#X` - precedes the argument with a \"0x\"\n-//!     * `#t` - precedes the argument with a \"0b\"\n+//!     * `#b` - precedes the argument with a \"0b\"\n //!     * `#o` - precedes the argument with a \"0o\"\n //! * '0' - This is used to indicate for integer formats that the padding should\n //!         both be done with a `0` character as well as be sign-aware. A format\n@@ -408,19 +408,20 @@\n //!\n //! There are three possible ways to specify the desired `precision`:\n //!\n-//! There are three possible ways to specify the desired `precision`:\n-//! 1. An integer `.N`,\n-//! 2. an integer followed by dollar sign `.N$`, or\n-//! 3. an asterisk `.*`.\n+//! 1. An integer `.N`:\n+//!\n+//!    the integer `N` itself is the precision.\n+//!\n+//! 2. An integer followed by dollar sign `.N$`:\n //!\n-//! The first specification, `.N`, means the integer `N` itself is the precision.\n+//!    use format *argument* `N` (which must be a `usize`) as the precision.\n //!\n-//! The second, `.N$`, means use format *argument* `N` (which must be a `usize`) as the precision.\n+//! 3. An asterisk `.*`:\n //!\n-//! Finally,  `.*` means that this `{...}` is associated with *two* format inputs rather than one:\n-//! the first input holds the `usize` precision, and the second holds the value to print.  Note\n-//! that in this case, if one uses the format string `{<arg>:<spec>.*}`, then the `<arg>` part\n-//! refers to the *value* to print, and the `precision` must come in the input preceding `<arg>`.\n+//!    `.*` means that this `{...}` is associated with *two* format inputs rather than one: the\n+//!    first input holds the `usize` precision, and the second holds the value to print.  Note that\n+//!    in this case, if one uses the format string `{<arg>:<spec>.*}`, then the `<arg>` part refers\n+//!    to the *value* to print, and the `precision` must come in the input preceding `<arg>`.\n //!\n //! For example, these:\n //!"}, {"sha": "35dea6d15f0e9cef79a5df1324e16d345064ab82", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26ff4714dd0da1c10eeeaee045794c3c0282f274/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26ff4714dd0da1c10eeeaee045794c3c0282f274/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=26ff4714dd0da1c10eeeaee045794c3c0282f274", "patch": "@@ -267,7 +267,7 @@ impl<'a> Display for Arguments<'a> {\n     }\n }\n \n-/// Format trait for the `:?` format. Useful for debugging, all types\n+/// Format trait for the `?` character. Useful for debugging, all types\n /// should implement this.\n ///\n /// Generally speaking, you should just `derive` a `Debug` implementation.\n@@ -312,6 +312,9 @@ impl<'a> Display for Arguments<'a> {\n /// There are a number of `debug_*` methods on `Formatter` to help you with manual\n /// implementations, such as [`debug_struct`][debug_struct].\n ///\n+/// `Debug` implementations using either `derive` or the debug builder API\n+/// on `Formatter` support pretty printing using the alternate flag: `{:#?}`.\n+///\n /// [debug_struct]: ../std/fmt/struct.Formatter.html#method.debug_struct\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented = \"`{Self}` cannot be formatted using `:?`; if it is \\"}]}