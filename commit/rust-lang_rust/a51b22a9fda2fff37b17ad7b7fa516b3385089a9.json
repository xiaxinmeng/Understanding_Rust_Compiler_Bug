{"sha": "a51b22a9fda2fff37b17ad7b7fa516b3385089a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MWIyMmE5ZmRhMmZmZjM3YjE3YWQ3YjdmYTUxNmIzMzg1MDg5YTk=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-05-26T21:15:29Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-05-30T00:05:17Z"}, "message": "Add extend_one tracking issue 72631", "tree": {"sha": "03eeb54e5c14e6035b49684c71d5a83c6c66482e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03eeb54e5c14e6035b49684c71d5a83c6c66482e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a51b22a9fda2fff37b17ad7b7fa516b3385089a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a51b22a9fda2fff37b17ad7b7fa516b3385089a9", "html_url": "https://github.com/rust-lang/rust/commit/a51b22a9fda2fff37b17ad7b7fa516b3385089a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a51b22a9fda2fff37b17ad7b7fa516b3385089a9/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10efaa37de8411272de3623ce50714d4860dc561", "url": "https://api.github.com/repos/rust-lang/rust/commits/10efaa37de8411272de3623ce50714d4860dc561", "html_url": "https://github.com/rust-lang/rust/commit/10efaa37de8411272de3623ce50714d4860dc561"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9d20022b6ed6db75bd787773d4b4cc7e6ba7e772", "filename": "src/libcore/iter/traits/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a51b22a9fda2fff37b17ad7b7fa516b3385089a9/src%2Flibcore%2Fiter%2Ftraits%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51b22a9fda2fff37b17ad7b7fa516b3385089a9/src%2Flibcore%2Fiter%2Ftraits%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fcollect.rs?ref=a51b22a9fda2fff37b17ad7b7fa516b3385089a9", "patch": "@@ -343,15 +343,15 @@ pub trait Extend<A> {\n     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T);\n \n     /// Extends a collection with exactly one element.\n-    #[unstable(feature = \"extend_one\", issue = \"none\")]\n+    #[unstable(feature = \"extend_one\", issue = \"72631\")]\n     fn extend_one(&mut self, item: A) {\n         self.extend(Some(item));\n     }\n \n     /// Reserves capacity in a collection for the given number of additional elements.\n     ///\n     /// The default implementation does nothing.\n-    #[unstable(feature = \"extend_one\", issue = \"none\")]\n+    #[unstable(feature = \"extend_one\", issue = \"72631\")]\n     fn extend_reserve(&mut self, additional: usize) {\n         let _ = additional;\n     }"}]}