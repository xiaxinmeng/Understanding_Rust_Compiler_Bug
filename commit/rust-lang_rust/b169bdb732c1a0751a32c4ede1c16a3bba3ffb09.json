{"sha": "b169bdb732c1a0751a32c4ede1c16a3bba3ffb09", "node_id": "C_kwDOAAsO6NoAKGIxNjliZGI3MzJjMWEwNzUxYTMyYzRlZGUxYzE2YTNiYmEzZmZiMDk", "commit": {"author": {"name": "John Kelly", "email": "johnharrykelly@gmail.com", "date": "2023-05-09T09:06:38Z"}, "committer": {"name": "John Kelly", "email": "johnharrykelly@gmail.com", "date": "2023-05-09T09:06:38Z"}, "message": "Comments", "tree": {"sha": "07a75c9bb1af78c4573b110fe3dd9f03a75e4d63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07a75c9bb1af78c4573b110fe3dd9f03a75e4d63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b169bdb732c1a0751a32c4ede1c16a3bba3ffb09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b169bdb732c1a0751a32c4ede1c16a3bba3ffb09", "html_url": "https://github.com/rust-lang/rust/commit/b169bdb732c1a0751a32c4ede1c16a3bba3ffb09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b169bdb732c1a0751a32c4ede1c16a3bba3ffb09/comments", "author": {"login": "john-h-k", "id": 32420055, "node_id": "MDQ6VXNlcjMyNDIwMDU1", "avatar_url": "https://avatars.githubusercontent.com/u/32420055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-h-k", "html_url": "https://github.com/john-h-k", "followers_url": "https://api.github.com/users/john-h-k/followers", "following_url": "https://api.github.com/users/john-h-k/following{/other_user}", "gists_url": "https://api.github.com/users/john-h-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-h-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-h-k/subscriptions", "organizations_url": "https://api.github.com/users/john-h-k/orgs", "repos_url": "https://api.github.com/users/john-h-k/repos", "events_url": "https://api.github.com/users/john-h-k/events{/privacy}", "received_events_url": "https://api.github.com/users/john-h-k/received_events", "type": "User", "site_admin": false}, "committer": {"login": "john-h-k", "id": 32420055, "node_id": "MDQ6VXNlcjMyNDIwMDU1", "avatar_url": "https://avatars.githubusercontent.com/u/32420055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-h-k", "html_url": "https://github.com/john-h-k", "followers_url": "https://api.github.com/users/john-h-k/followers", "following_url": "https://api.github.com/users/john-h-k/following{/other_user}", "gists_url": "https://api.github.com/users/john-h-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-h-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-h-k/subscriptions", "organizations_url": "https://api.github.com/users/john-h-k/orgs", "repos_url": "https://api.github.com/users/john-h-k/repos", "events_url": "https://api.github.com/users/john-h-k/events{/privacy}", "received_events_url": "https://api.github.com/users/john-h-k/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c8a00923bc435cec37820c32768871b9e8a9ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8a00923bc435cec37820c32768871b9e8a9ca1", "html_url": "https://github.com/rust-lang/rust/commit/5c8a00923bc435cec37820c32768871b9e8a9ca1"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "4ccda15068bbbb5c7cceabb0d8db1b9a5f73d8f4", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b169bdb732c1a0751a32c4ede1c16a3bba3ffb09/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b169bdb732c1a0751a32c4ede1c16a3bba3ffb09/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=b169bdb732c1a0751a32c4ede1c16a3bba3ffb09", "patch": "@@ -174,8 +174,13 @@ impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n             if let TyKind::TraitObject(bounds, ..) = mut_ty.ty.kind;\n             if bounds.len() > 2;\n             then {\n+\n+                // Build up a hash of every trait we've seen\n+                // When we see a trait for the first time, add it to unique_traits\n+                // so we can later use it to build a string of all traits exactly once, without duplicates\n+\n                 let mut seen_def_ids = FxHashSet::default();\n-                let mut fixed_traits = Vec::new();\n+                let mut unique_traits = Vec::new();\n \n                 // Iterate the bounds and add them to our seen hash\n                 // If we haven't yet seen it, add it to the fixed traits\n@@ -185,20 +190,20 @@ impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n                     let new_trait = seen_def_ids.insert(def_id);\n \n                     if new_trait {\n-                        fixed_traits.push(bound);\n+                        unique_traits.push(bound);\n                     }\n                 }\n \n-                // If the number added to fixed (which are not duplicates) isn't the same as the number found,\n+                // If the number of unique traits isn't the same as the number of traits in the bounds,\n                 // there must be 1 or more duplicates\n-                if bounds.len() != fixed_traits.len() {\n+                if bounds.len() != unique_traits.len() {\n                     let mut bounds_span = bounds[0].span;\n \n                     for bound in bounds.iter().skip(1) {\n                         bounds_span = bounds_span.to(bound.span);\n                     }\n \n-                    let fixed_trait_snippet = fixed_traits\n+                    let fixed_trait_snippet = unique_traits\n                         .iter()\n                         .filter_map(|b| snippet_opt(cx, b.span))\n                         .collect::<Vec<_>>()"}]}