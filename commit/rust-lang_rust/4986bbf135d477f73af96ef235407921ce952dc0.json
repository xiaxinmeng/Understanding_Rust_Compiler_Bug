{"sha": "4986bbf135d477f73af96ef235407921ce952dc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ODZiYmYxMzVkNDc3ZjczYWY5NmVmMjM1NDA3OTIxY2U5NTJkYzA=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T19:55:10Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T19:55:10Z"}, "message": "Keep turbofish in prelude collision lint.", "tree": {"sha": "56a5a9b28b6d1b3071dbd6e0dc401b059b169515", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56a5a9b28b6d1b3071dbd6e0dc401b059b169515"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4986bbf135d477f73af96ef235407921ce952dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4986bbf135d477f73af96ef235407921ce952dc0", "html_url": "https://github.com/rust-lang/rust/commit/4986bbf135d477f73af96ef235407921ce952dc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4986bbf135d477f73af96ef235407921ce952dc0/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13edc17f65bcad7fe9046720a16fc192e810970e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13edc17f65bcad7fe9046720a16fc192e810970e", "html_url": "https://github.com/rust-lang/rust/commit/13edc17f65bcad7fe9046720a16fc192e810970e"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "384d25ed7718377b76ccf62314f3bf0504ceaa88", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4986bbf135d477f73af96ef235407921ce952dc0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4986bbf135d477f73af96ef235407921ce952dc0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=4986bbf135d477f73af96ef235407921ce952dc0", "patch": "@@ -163,8 +163,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             sp,\n                             \"disambiguate the associated function\",\n                             format!(\n-                                \"{}::{}({}{})\",\n-                                trait_name, segment.ident.name, self_adjusted, args\n+                                \"{}::{}{}({}{})\",\n+                                trait_name,\n+                                segment.ident.name,\n+                                if let Some(args) = segment.args.as_ref().and_then(|args| self\n+                                    .sess()\n+                                    .source_map()\n+                                    .span_to_snippet(args.span_ext)\n+                                    .ok())\n+                                {\n+                                    // Keep turbofish.\n+                                    format!(\"::{}\", args)\n+                                } else {\n+                                    String::new()\n+                                },\n+                                self_adjusted,\n+                                args,\n                             ),\n                             Applicability::MachineApplicable,\n                         );"}]}