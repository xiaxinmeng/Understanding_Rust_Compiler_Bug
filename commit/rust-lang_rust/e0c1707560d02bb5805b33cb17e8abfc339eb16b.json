{"sha": "e0c1707560d02bb5805b33cb17e8abfc339eb16b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYzE3MDc1NjBkMDJiYjU4MDViMzNjYjE3ZThhYmZjMzM5ZWIxNmI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T15:53:26Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T15:59:03Z"}, "message": "Changes from the review of the @str PR.", "tree": {"sha": "0344bf214d412e28c8c886c9ba8c483fb5fe9392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0344bf214d412e28c8c886c9ba8c483fb5fe9392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0c1707560d02bb5805b33cb17e8abfc339eb16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c1707560d02bb5805b33cb17e8abfc339eb16b", "html_url": "https://github.com/rust-lang/rust/commit/e0c1707560d02bb5805b33cb17e8abfc339eb16b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0c1707560d02bb5805b33cb17e8abfc339eb16b/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f502576fc7a97825ee90b01c724b63a4bd4c85aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f502576fc7a97825ee90b01c724b63a4bd4c85aa", "html_url": "https://github.com/rust-lang/rust/commit/f502576fc7a97825ee90b01c724b63a4bd4c85aa"}], "stats": {"total": 24, "additions": 3, "deletions": 21}, "files": [{"sha": "33625000e4ad0876a52e6348bfb3bcc08a34f399", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0c1707560d02bb5805b33cb17e8abfc339eb16b/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c1707560d02bb5805b33cb17e8abfc339eb16b/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=e0c1707560d02bb5805b33cb17e8abfc339eb16b", "patch": "@@ -215,15 +215,7 @@ impl CStore {\n             debug!(\"  hash[{}]: {}\", x.name, x.hash);\n         }\n \n-        let mut hashes = ~[];\n-        for ch in result.move_iter() {\n-            let crate_hash {\n-                hash,\n-                ..\n-            } = ch;\n-            hashes.push(hash)\n-        }\n-        hashes\n+        result.move_iter().map(|crate_hash { hash, ..}| hash).collect()\n     }\n }\n "}, {"sha": "94e5273fced576daf3a3bfcb91981c304e0c199c", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0c1707560d02bb5805b33cb17e8abfc339eb16b/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c1707560d02bb5805b33cb17e8abfc339eb16b/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=e0c1707560d02bb5805b33cb17e8abfc339eb16b", "patch": "@@ -878,16 +878,13 @@ fn path_to_str(p: &ast::Path) -> ~str {\n \n     let mut s = ~\"\";\n     let mut first = true;\n-    for i in p.segments.iter().map(|x| {\n-            let string = token::get_ident(x.identifier.name);\n-            string.get().to_str()\n-    }) {\n+    for i in p.segments.iter().map(|x| token::get_ident(x.identifier.name)) {\n         if !first || p.global {\n             s.push_str(\"::\");\n         } else {\n             first = false;\n         }\n-        s.push_str(i);\n+        s.push_str(i.get());\n     }\n     s\n }"}, {"sha": "d6edccd33a4983aef911737d7485bee2184305b0", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0c1707560d02bb5805b33cb17e8abfc339eb16b/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c1707560d02bb5805b33cb17e8abfc339eb16b/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=e0c1707560d02bb5805b33cb17e8abfc339eb16b", "patch": "@@ -554,13 +554,6 @@ pub struct InternedString {\n     priv string: RcStr,\n }\n \n-#[unsafe_destructor]\n-impl Drop for InternedString {\n-    fn drop(&mut self) {\n-        // No-op just to make this not implicitly copyable.\n-    }\n-}\n-\n impl InternedString {\n     #[inline]\n     pub fn new(string: &'static str) -> InternedString {"}]}