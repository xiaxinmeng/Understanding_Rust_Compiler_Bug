{"sha": "fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNGE2YTEyMTM2YzViNWQ2YmNlNDA4MWU5NTg5MGRmMWZkMWZlYmQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-02T23:47:27Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-10T00:46:14Z"}, "message": "Add a `constness` field to `ast::TraitRef`\n\nThis is used for both the `?const` syntax in bounds as well as the `impl\nconst Trait` syntax. I also considered handling these separately by\nadding a variant of `TraitBoundModifier` and a field to\n`ItemKind::Impl`, but this approach was less intrusive.", "tree": {"sha": "06300ce116617d52c29463ae967954fd2ebc5c23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06300ce116617d52c29463ae967954fd2ebc5c23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "html_url": "https://github.com/rust-lang/rust/commit/fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fc41585043927c3b9b404ddc357e67ab443eb70", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fc41585043927c3b9b404ddc357e67ab443eb70", "html_url": "https://github.com/rust-lang/rust/commit/6fc41585043927c3b9b404ddc357e67ab443eb70"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "bd3d6b589d00acfb210de183690e5f1f95fdae5d", "filename": "src/librustc_expand/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/src%2Flibrustc_expand%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/src%2Flibrustc_expand%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbuild.rs?ref=fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "patch": "@@ -110,7 +110,7 @@ impl<'a> ExtCtxt<'a> {\n     }\n \n     pub fn trait_ref(&self, path: ast::Path) -> ast::TraitRef {\n-        ast::TraitRef { path, ref_id: ast::DUMMY_NODE_ID }\n+        ast::TraitRef { path, constness: None, ref_id: ast::DUMMY_NODE_ID }\n     }\n \n     pub fn poly_trait_ref(&self, span: Span, path: ast::Path) -> ast::PolyTraitRef {"}, {"sha": "1d3bb7d87686cfe81bd89853365c2339844bf708", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "patch": "@@ -1033,7 +1033,7 @@ impl Expr {\n     pub fn to_bound(&self) -> Option<GenericBound> {\n         match &self.kind {\n             ExprKind::Path(None, path) => Some(GenericBound::Trait(\n-                PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n+                PolyTraitRef::new(Vec::new(), path.clone(), None, self.span),\n                 TraitBoundModifier::None,\n             )),\n             _ => None,\n@@ -2376,6 +2376,15 @@ pub enum AttrKind {\n pub struct TraitRef {\n     pub path: Path,\n     pub ref_id: NodeId,\n+\n+    /// The `const` modifier, if any, that appears before this trait.\n+    ///\n+    /// |                | `constness`                 |\n+    /// |----------------|-----------------------------|\n+    /// | `Trait`        | `None`                      |\n+    /// | `const Trait`  | `Some(Constness::Const)`    |\n+    /// | `?const Trait` | `Some(Constness::NotConst)` |\n+    pub constness: Option<Constness>,\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n@@ -2390,10 +2399,15 @@ pub struct PolyTraitRef {\n }\n \n impl PolyTraitRef {\n-    pub fn new(generic_params: Vec<GenericParam>, path: Path, span: Span) -> Self {\n+    pub fn new(\n+        generic_params: Vec<GenericParam>,\n+        path: Path,\n+        constness: Option<Constness>,\n+        span: Span,\n+    ) -> Self {\n         PolyTraitRef {\n             bound_generic_params: generic_params,\n-            trait_ref: TraitRef { path, ref_id: DUMMY_NODE_ID },\n+            trait_ref: TraitRef { path, constness, ref_id: DUMMY_NODE_ID },\n             span,\n         }\n     }"}, {"sha": "264ba25cedecc78edb4d4eebc77b5c599b2d468f", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4a6a12136c5b5d6bce4081e95890df1fd1febd/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "patch": "@@ -838,7 +838,8 @@ pub fn noop_visit_variant_data<T: MutVisitor>(vdata: &mut VariantData, vis: &mut\n     }\n }\n \n-pub fn noop_visit_trait_ref<T: MutVisitor>(TraitRef { path, ref_id }: &mut TraitRef, vis: &mut T) {\n+pub fn noop_visit_trait_ref<T: MutVisitor>(tr: &mut TraitRef, vis: &mut T) {\n+    let TraitRef { path, ref_id, constness: _ } = tr;\n     vis.visit_path(path);\n     vis.visit_id(ref_id);\n }"}]}