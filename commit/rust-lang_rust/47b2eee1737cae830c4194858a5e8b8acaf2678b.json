{"sha": "47b2eee1737cae830c4194858a5e8b8acaf2678b", "node_id": "C_kwDOAAsO6NoAKDQ3YjJlZWUxNzM3Y2FlODMwYzQxOTQ4NThhNWU4YjhhY2FmMjY3OGI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-02T04:12:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-02T04:12:09Z"}, "message": "Auto merge of #102424 - sunfishcode:sunfishcode/hidden-main, r=nagisa\n\nDeclare `main` as visibility hidden on targets that default to hidden.\n\nOn targets with `default_hidden_visibility` set, which is currrently just WebAssembly, declare the generated `main` function with visibility hidden. This makes it consistent with clang's WebAssembly target, where `main` is just a user function that gets the same visibility as any other user function, which is hidden on WebAssembly unless explicitly overridden.\n\nThis will help simplify use cases which in the future may want to automatically wasm-export all visibility-\"default\" symbols. `main` isn't intended to be wasm-exported, and marking it hidden prevents it from being wasm-exported in that scenario.", "tree": {"sha": "0169487bd2ec26b02f98d985b53ac86af2a31240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0169487bd2ec26b02f98d985b53ac86af2a31240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47b2eee1737cae830c4194858a5e8b8acaf2678b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47b2eee1737cae830c4194858a5e8b8acaf2678b", "html_url": "https://github.com/rust-lang/rust/commit/47b2eee1737cae830c4194858a5e8b8acaf2678b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47b2eee1737cae830c4194858a5e8b8acaf2678b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab37a83ae2c829b8597bdcda8244964ebc60b495", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab37a83ae2c829b8597bdcda8244964ebc60b495", "html_url": "https://github.com/rust-lang/rust/commit/ab37a83ae2c829b8597bdcda8244964ebc60b495"}, {"sha": "72f15572ee5592c93bf307bfe94240d0e1f03601", "url": "https://api.github.com/repos/rust-lang/rust/commits/72f15572ee5592c93bf307bfe94240d0e1f03601", "html_url": "https://github.com/rust-lang/rust/commit/72f15572ee5592c93bf307bfe94240d0e1f03601"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "f79ef11720df9b4436d83dd50674065b7e12a988", "filename": "compiler/rustc_codegen_llvm/src/declare.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47b2eee1737cae830c4194858a5e8b8acaf2678b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b2eee1737cae830c4194858a5e8b8acaf2678b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdeclare.rs?ref=47b2eee1737cae830c4194858a5e8b8acaf2678b", "patch": "@@ -32,6 +32,7 @@ fn declare_raw_fn<'ll>(\n     name: &str,\n     callconv: llvm::CallConv,\n     unnamed: llvm::UnnamedAddr,\n+    visibility: llvm::Visibility,\n     ty: &'ll Type,\n ) -> &'ll Value {\n     debug!(\"declare_raw_fn(name={:?}, ty={:?})\", name, ty);\n@@ -41,6 +42,7 @@ fn declare_raw_fn<'ll>(\n \n     llvm::SetFunctionCallConv(llfn, callconv);\n     llvm::SetUnnamedAddress(llfn, unnamed);\n+    llvm::set_visibility(llfn, visibility);\n \n     let mut attrs = SmallVec::<[_; 4]>::new();\n \n@@ -78,7 +80,14 @@ impl<'ll, 'tcx> CodegenCx<'ll, 'tcx> {\n         unnamed: llvm::UnnamedAddr,\n         fn_type: &'ll Type,\n     ) -> &'ll Value {\n-        declare_raw_fn(self, name, llvm::CCallConv, unnamed, fn_type)\n+        // Declare C ABI functions with the visibility used by C by default.\n+        let visibility = if self.tcx.sess.target.default_hidden_visibility {\n+            llvm::Visibility::Hidden\n+        } else {\n+            llvm::Visibility::Default\n+        };\n+\n+        declare_raw_fn(self, name, llvm::CCallConv, unnamed, visibility, fn_type)\n     }\n \n     /// Declare a Rust function.\n@@ -95,6 +104,7 @@ impl<'ll, 'tcx> CodegenCx<'ll, 'tcx> {\n             name,\n             fn_abi.llvm_cconv(),\n             llvm::UnnamedAddr::Global,\n+            llvm::Visibility::Default,\n             fn_abi.llvm_type(self),\n         );\n         fn_abi.apply_attrs_llfn(self, llfn);"}, {"sha": "7f22ddcfc12fff34b8c746b8fb2ef24805ebc9b5", "filename": "src/test/codegen/abi-main-signature-32bit-c-int.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47b2eee1737cae830c4194858a5e8b8acaf2678b/src%2Ftest%2Fcodegen%2Fabi-main-signature-32bit-c-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b2eee1737cae830c4194858a5e8b8acaf2678b/src%2Ftest%2Fcodegen%2Fabi-main-signature-32bit-c-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fabi-main-signature-32bit-c-int.rs?ref=47b2eee1737cae830c4194858a5e8b8acaf2678b", "patch": "@@ -7,4 +7,4 @@\n fn main() {\n }\n \n-// CHECK: define i32 @main(i32{{( %0)?}}, {{i8\\*\\*|ptr}}{{( %1)?}})\n+// CHECK: define{{( hidden)?}} i32 @main(i32{{( %0)?}}, {{i8\\*\\*|ptr}}{{( %1)?}})"}]}