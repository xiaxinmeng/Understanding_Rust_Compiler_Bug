{"sha": "d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NDE2OWFiMWUyODk3YTkwZjhhYTdkNzY3MmQyZmUzMThjY2ViMjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T15:18:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T15:18:02Z"}, "message": "ampersand -> amp", "tree": {"sha": "d8e52bfeeda6fcd3d2cbc0624c4f188449c32543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8e52bfeeda6fcd3d2cbc0624c4f188449c32543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "html_url": "https://github.com/rust-lang/rust/commit/d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "720861bcff4b9f67ca4def66e2996015811fa90b", "url": "https://api.github.com/repos/rust-lang/rust/commits/720861bcff4b9f67ca4def66e2996015811fa90b", "html_url": "https://github.com/rust-lang/rust/commit/720861bcff4b9f67ca4def66e2996015811fa90b"}], "stats": {"total": 192, "additions": 157, "deletions": 35}, "files": [{"sha": "df769bba6bd40ac2910eef67c681cff0b7be2abb", "filename": "src/grammar.ron", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -15,7 +15,7 @@ Grammar(\n         [\"~\", \"TILDE\"],\n         [\"?\", \"QUESTION\"],\n         [\"$\", \"DOLLAR\"],\n-        [\"&\", \"AMPERSAND\"],\n+        [\"&\", \"AMP\"],\n         [\"|\", \"PIPE\"],\n         [\"+\", \"PLUS\"],\n         [\"*\", \"STAR\"],\n@@ -41,7 +41,7 @@ Grammar(\n         [\">=\", \"GTEQ\"],\n         [\"+=\", \"PLUSEQ\"],\n         [\"-=\", \"MINUSEQ\"],\n-        [\"&&\", \"AMPERSANDAMPERSAND\"],\n+        [\"&&\", \"AMPAMP\"],\n         [\"||\", \"PIPEPIPE\"],\n     ],\n     keywords: ["}, {"sha": "e0b4ced74c6ec952f4bce5295f1efd4f4d8f79f8", "filename": "src/grammar/expressions/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions%2Fmod.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -68,8 +68,8 @@ fn current_op(p: &Parser) -> (u8, Op) {\n     if p.at_compound2(PIPE, PIPE) {\n         return (3, Op::Composite(PIPEPIPE, 2));\n     }\n-    if p.at_compound2(AMPERSAND, AMPERSAND) {\n-        return (4, Op::Composite(AMPERSANDAMPERSAND, 2));\n+    if p.at_compound2(AMP, AMP) {\n+        return (4, Op::Composite(AMPAMP, 2));\n     }\n     if p.at_compound2(L_ANGLE, EQ) {\n         return (5, Op::Composite(LTEQ, 2));\n@@ -113,7 +113,7 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) {\n \n const UNARY_EXPR_FIRST: TokenSet =\n     token_set_union![\n-        token_set![AMPERSAND, STAR, EXCL],\n+        token_set![AMP, STAR, EXCL],\n         atom::ATOM_EXPR_FIRST,\n     ];\n \n@@ -125,7 +125,7 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n         //     let _ = &1;\n         //     let _ = &mut &f();\n         // }\n-        AMPERSAND => {\n+        AMP => {\n             m = p.start();\n             p.bump();\n             p.eat(MUT_KW);"}, {"sha": "034542df1870254806083bd04ea07d1a9a316d1f", "filename": "src/grammar/params.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fparams.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -53,10 +53,10 @@ fn self_param(p: &mut Parser) {\n     let la3 = p.nth(3);\n     let n_toks = match (p.current(), la1, la2, la3) {\n         (SELF_KW, _, _, _) => 1,\n-        (AMPERSAND, SELF_KW, _, _) => 2,\n-        (AMPERSAND, MUT_KW, SELF_KW, _) => 3,\n-        (AMPERSAND, LIFETIME, SELF_KW, _) => 3,\n-        (AMPERSAND, LIFETIME, MUT_KW, SELF_KW) => 4,\n+        (AMP, SELF_KW, _, _) => 2,\n+        (AMP, MUT_KW, SELF_KW, _) => 3,\n+        (AMP, LIFETIME, SELF_KW, _) => 3,\n+        (AMP, LIFETIME, MUT_KW, SELF_KW) => 4,\n         _ => return,\n     };\n     let m = p.start();"}, {"sha": "d67f180fae649c855cb44048c6d884dc93a24298", "filename": "src/grammar/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fpatterns.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -15,7 +15,7 @@ pub(super) fn pattern(p: &mut Parser) {\n \n     match la0 {\n         UNDERSCORE => placeholder_pat(p),\n-        AMPERSAND => ref_pat(p),\n+        AMP => ref_pat(p),\n         _ => p.err_and_bump(\"expected pattern\"),\n     }\n }\n@@ -108,7 +108,7 @@ fn placeholder_pat(p: &mut Parser) {\n //     let &mut b = ();\n // }\n fn ref_pat(p: &mut Parser) {\n-    assert!(p.at(AMPERSAND));\n+    assert!(p.at(AMP));\n     let m = p.start();\n     p.bump();\n     p.eat(MUT_KW);"}, {"sha": "9e63c9b2a6a6c18675dfca866105576f3f1f2c45", "filename": "src/grammar/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftypes.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -6,7 +6,7 @@ pub(super) fn type_(p: &mut Parser) {\n         EXCL => never_type(p),\n         STAR => pointer_type(p),\n         L_BRACK => array_or_slice_type(p),\n-        AMPERSAND => reference_type(p),\n+        AMP => reference_type(p),\n         UNDERSCORE => placeholder_type(p),\n         FN_KW | UNSAFE_KW | EXTERN_KW => fn_pointer_type(p),\n         FOR_KW => for_type(p),\n@@ -130,7 +130,7 @@ fn array_or_slice_type(p: &mut Parser) {\n // type B = &'static ();\n // type C = &mut ();\n fn reference_type(p: &mut Parser) {\n-    assert!(p.at(AMPERSAND));\n+    assert!(p.at(AMP));\n     let m = p.start();\n     p.bump();\n     p.eat(LIFETIME);"}, {"sha": "1bce3444304581fadd9b8f8456e4714a10de8270", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -20,7 +20,7 @@ pub enum SyntaxKind {\n     TILDE,\n     QUESTION,\n     DOLLAR,\n-    AMPERSAND,\n+    AMP,\n     PIPE,\n     PLUS,\n     STAR,\n@@ -44,7 +44,7 @@ pub enum SyntaxKind {\n     GTEQ,\n     PLUSEQ,\n     MINUSEQ,\n-    AMPERSANDAMPERSAND,\n+    AMPAMP,\n     PIPEPIPE,\n     USE_KW,\n     FN_KW,\n@@ -251,7 +251,7 @@ impl SyntaxKind {\n             TILDE => &SyntaxInfo { name: \"TILDE\" },\n             QUESTION => &SyntaxInfo { name: \"QUESTION\" },\n             DOLLAR => &SyntaxInfo { name: \"DOLLAR\" },\n-            AMPERSAND => &SyntaxInfo { name: \"AMPERSAND\" },\n+            AMP => &SyntaxInfo { name: \"AMP\" },\n             PIPE => &SyntaxInfo { name: \"PIPE\" },\n             PLUS => &SyntaxInfo { name: \"PLUS\" },\n             STAR => &SyntaxInfo { name: \"STAR\" },\n@@ -275,7 +275,7 @@ impl SyntaxKind {\n             GTEQ => &SyntaxInfo { name: \"GTEQ\" },\n             PLUSEQ => &SyntaxInfo { name: \"PLUSEQ\" },\n             MINUSEQ => &SyntaxInfo { name: \"MINUSEQ\" },\n-            AMPERSANDAMPERSAND => &SyntaxInfo { name: \"AMPERSANDAMPERSAND\" },\n+            AMPAMP => &SyntaxInfo { name: \"AMPAMP\" },\n             PIPEPIPE => &SyntaxInfo { name: \"PIPEPIPE\" },\n             USE_KW => &SyntaxInfo { name: \"USE_KW\" },\n             FN_KW => &SyntaxInfo { name: \"FN_KW\" },\n@@ -473,7 +473,7 @@ impl SyntaxKind {\n             '~' => TILDE,\n             '?' => QUESTION,\n             '$' => DOLLAR,\n-            '&' => AMPERSAND,\n+            '&' => AMP,\n             '|' => PIPE,\n             '+' => PLUS,\n             '*' => STAR,\n@@ -502,7 +502,7 @@ impl SyntaxKind {\n             TILDE => \"~\",\n             QUESTION => \"?\",\n             DOLLAR => \"$\",\n-            AMPERSAND => \"&\",\n+            AMP => \"&\",\n             PIPE => \"|\",\n             PLUS => \"+\",\n             STAR => \"*\",\n@@ -526,7 +526,7 @@ impl SyntaxKind {\n             GTEQ => \">=\",\n             PLUSEQ => \"+=\",\n             MINUSEQ => \"-=\",\n-            AMPERSANDAMPERSAND => \"&&\",\n+            AMPAMP => \"&&\",\n             PIPEPIPE => \"||\",\n \n             USE_KW => \"use\","}, {"sha": "a6bc83a6fcbc2014d6f9ef26b2b21852a63d17b1", "filename": "tests/data/lexer/0005_symbols.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Flexer%2F0005_symbols.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Flexer%2F0005_symbols.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0005_symbols.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -28,7 +28,7 @@ QUESTION 1 \"?\"\n WHITESPACE 1 \" \"\n DOLLAR 1 \"$\"\n WHITESPACE 1 \" \"\n-AMPERSAND 1 \"&\"\n+AMP 1 \"&\"\n WHITESPACE 1 \" \"\n PIPE 1 \"|\"\n WHITESPACE 1 \" \""}, {"sha": "10fc5f6365ab197e186bfd243a0ca8ba29a2aad7", "filename": "tests/data/parser/inline/0026_reference_type;.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0026_reference_type%3B.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0026_reference_type%3B.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0026_reference_type%3B.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -8,7 +8,7 @@ FILE@[0; 54)\n     EQ@[7; 8)\n     REFERENCE_TYPE@[8; 12)\n       WHITESPACE@[8; 9)\n-      AMPERSAND@[9; 10)\n+      AMP@[9; 10)\n       TUPLE_TYPE@[10; 12)\n         L_PAREN@[10; 11)\n         R_PAREN@[11; 12)\n@@ -23,7 +23,7 @@ FILE@[0; 54)\n     EQ@[21; 22)\n     REFERENCE_TYPE@[22; 34)\n       WHITESPACE@[22; 23)\n-      AMPERSAND@[23; 24)\n+      AMP@[23; 24)\n       LIFETIME@[24; 31) \"'static\"\n       TUPLE_TYPE@[31; 34)\n         WHITESPACE@[31; 32)\n@@ -40,7 +40,7 @@ FILE@[0; 54)\n     EQ@[43; 44)\n     REFERENCE_TYPE@[44; 52)\n       WHITESPACE@[44; 45)\n-      AMPERSAND@[45; 46)\n+      AMP@[45; 46)\n       MUT_KW@[46; 49)\n       TUPLE_TYPE@[49; 52)\n         WHITESPACE@[49; 50)"}, {"sha": "b3aa6d285ad3fd3895828f48e07bbe4cdccbf95e", "filename": "tests/data/parser/inline/0035_ref_pat.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0035_ref_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0035_ref_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0035_ref_pat.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -15,7 +15,7 @@ FILE@[0; 52)\n         LET_KW@[16; 19)\n         REF_PAT@[19; 23)\n           WHITESPACE@[19; 20)\n-          AMPERSAND@[20; 21)\n+          AMP@[20; 21)\n           BIND_PAT@[21; 23)\n             NAME@[21; 23)\n               IDENT@[21; 22) \"a\"\n@@ -31,7 +31,7 @@ FILE@[0; 52)\n         LET_KW@[33; 36)\n         REF_PAT@[36; 44)\n           WHITESPACE@[36; 37)\n-          AMPERSAND@[37; 38)\n+          AMP@[37; 38)\n           MUT_KW@[38; 41)\n           BIND_PAT@[41; 44)\n             NAME@[41; 44)"}, {"sha": "f4b553c56d3f295e013c047ee313fd545856049b", "filename": "tests/data/parser/inline/0044_ref_expr.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -20,7 +20,7 @@ FILE@[0; 52)\n         EQ@[21; 22)\n         REF_EXPR@[22; 25)\n           WHITESPACE@[22; 23)\n-          AMPERSAND@[23; 24)\n+          AMP@[23; 24)\n           LITERAL@[24; 25)\n             INT_NUMBER@[24; 25) \"1\"\n         SEMI@[25; 26)\n@@ -34,11 +34,11 @@ FILE@[0; 52)\n         EQ@[37; 38)\n         REF_EXPR@[38; 48)\n           WHITESPACE@[38; 39)\n-          AMPERSAND@[39; 40)\n+          AMP@[39; 40)\n           MUT_KW@[40; 43)\n           REF_EXPR@[43; 48)\n             WHITESPACE@[43; 44)\n-            AMPERSAND@[44; 45)\n+            AMP@[44; 45)\n             CALL_EXPR@[45; 48)\n               PATH_EXPR@[45; 46)\n                 PATH@[45; 46)"}, {"sha": "f2aa2bd0e535cf09ddd22a8f16e176e92bfbc10d", "filename": "tests/data/parser/inline/0054_impl_item_items.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -65,7 +65,7 @@ FILE@[0; 89)\n       PARAM_LIST@[76; 84)\n         L_PAREN@[76; 77)\n         SELF_PARAM@[77; 82)\n-          AMPERSAND@[77; 78)\n+          AMP@[77; 78)\n           SELF_KW@[78; 82)\n         R_PAREN@[82; 83)\n         WHITESPACE@[83; 84)"}, {"sha": "6cf3151eaa4b37e84d7b864a64624580afd57b34", "filename": "tests/data/parser/inline/0055_self_param.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -33,7 +33,7 @@ FILE@[0; 106)\n       PARAM_LIST@[35; 44)\n         L_PAREN@[35; 36)\n         SELF_PARAM@[36; 41)\n-          AMPERSAND@[36; 37)\n+          AMP@[36; 37)\n           SELF_KW@[37; 41)\n         COMMA@[41; 42)\n         R_PAREN@[42; 43)\n@@ -50,7 +50,7 @@ FILE@[0; 106)\n       PARAM_LIST@[55; 67)\n         L_PAREN@[55; 56)\n         SELF_PARAM@[56; 64)\n-          AMPERSAND@[56; 57)\n+          AMP@[56; 57)\n           LIFETIME@[57; 59) \"'a\"\n           WHITESPACE@[59; 60)\n           SELF_KW@[60; 64)\n@@ -69,7 +69,7 @@ FILE@[0; 106)\n       PARAM_LIST@[78; 101)\n         L_PAREN@[78; 79)\n         SELF_PARAM@[79; 91)\n-          AMPERSAND@[79; 80)\n+          AMP@[79; 80)\n           LIFETIME@[80; 82) \"'a\"\n           WHITESPACE@[82; 83)\n           MUT_KW@[83; 86)"}, {"sha": "5c6fe8ea5bdac2e74572e58155b369546dbdbeb0", "filename": "tests/data/parser/inline/0062_deref_expr.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0062_deref_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0062_deref_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0062_deref_expr.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -17,7 +17,7 @@ FILE@[0; 23)\n           DEREF_EXPR@[16; 19)\n             STAR@[16; 17)\n             REF_EXPR@[17; 19)\n-              AMPERSAND@[17; 18)\n+              AMP@[17; 18)\n               LITERAL@[18; 19)\n                 INT_NUMBER@[18; 19) \"1\"\n         SEMI@[19; 20)"}, {"sha": "04b1764f19804ac914639473dedd175e56e229d2", "filename": "tests/data/parser/inline/0084_compound_ops.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {\n+    x += 1;\n+    1 + 1 <= 2 * 3;\n+    z -= 3 >= 0;\n+    true || true && false;\n+}"}, {"sha": "87492fe929a7a9c0909f6df2c56a4993453e2f8d", "filename": "tests/data/parser/inline/0084_compound_ops.txt", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -0,0 +1,89 @@\n+FILE@[0; 89)\n+  FN_ITEM@[0; 89)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 89)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 27)\n+        BIN_EXPR@[10; 21)\n+          PATH_EXPR@[10; 17)\n+            PATH@[10; 17)\n+              PATH_SEGMENT@[10; 17)\n+                NAME_REF@[10; 17)\n+                  WHITESPACE@[10; 15)\n+                  IDENT@[15; 16) \"x\"\n+                  WHITESPACE@[16; 17)\n+          PLUSEQ@[17; 19)\n+          LITERAL@[19; 21)\n+            WHITESPACE@[19; 20)\n+            INT_NUMBER@[20; 21) \"1\"\n+        SEMI@[21; 22)\n+        WHITESPACE@[22; 27)\n+      EXPR_STMT@[27; 47)\n+        BIN_EXPR@[27; 41)\n+          BIN_EXPR@[27; 33)\n+            LITERAL@[27; 29)\n+              INT_NUMBER@[27; 28) \"1\"\n+              WHITESPACE@[28; 29)\n+            PLUS@[29; 30)\n+            LITERAL@[30; 33)\n+              WHITESPACE@[30; 31)\n+              INT_NUMBER@[31; 32) \"1\"\n+              WHITESPACE@[32; 33)\n+          LTEQ@[33; 35)\n+          BIN_EXPR@[35; 41)\n+            LITERAL@[35; 38)\n+              WHITESPACE@[35; 36)\n+              INT_NUMBER@[36; 37) \"2\"\n+              WHITESPACE@[37; 38)\n+            STAR@[38; 39)\n+            LITERAL@[39; 41)\n+              WHITESPACE@[39; 40)\n+              INT_NUMBER@[40; 41) \"3\"\n+        SEMI@[41; 42)\n+        WHITESPACE@[42; 47)\n+      EXPR_STMT@[47; 64)\n+        BIN_EXPR@[47; 58)\n+          PATH_EXPR@[47; 49)\n+            PATH@[47; 49)\n+              PATH_SEGMENT@[47; 49)\n+                NAME_REF@[47; 49)\n+                  IDENT@[47; 48) \"z\"\n+                  WHITESPACE@[48; 49)\n+          MINUSEQ@[49; 51)\n+          BIN_EXPR@[51; 58)\n+            LITERAL@[51; 54)\n+              WHITESPACE@[51; 52)\n+              INT_NUMBER@[52; 53) \"3\"\n+              WHITESPACE@[53; 54)\n+            GTEQ@[54; 56)\n+            LITERAL@[56; 58)\n+              WHITESPACE@[56; 57)\n+              INT_NUMBER@[57; 58) \"0\"\n+        SEMI@[58; 59)\n+        WHITESPACE@[59; 64)\n+      EXPR_STMT@[64; 87)\n+        BIN_EXPR@[64; 85)\n+          LITERAL@[64; 69)\n+            TRUE_KW@[64; 68)\n+            WHITESPACE@[68; 69)\n+          PIPEPIPE@[69; 71)\n+          BIN_EXPR@[71; 85)\n+            LITERAL@[71; 77)\n+              WHITESPACE@[71; 72)\n+              TRUE_KW@[72; 76)\n+              WHITESPACE@[76; 77)\n+            AMPAMP@[77; 79)\n+            LITERAL@[79; 85)\n+              WHITESPACE@[79; 80)\n+              FALSE_KW@[80; 85)\n+        SEMI@[85; 86)\n+        WHITESPACE@[86; 87)\n+      R_CURLY@[87; 88)\n+      WHITESPACE@[88; 89)"}, {"sha": "9f078fa4816c591627ab1c5e04634cb60dec9d0b", "filename": "tests/data/parser/inline/0084_loop_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_loop_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_loop_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0084_loop_expr.rs?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    loop {};\n+}"}, {"sha": "85825438056dbf6aa54728372e3911b5d368126b", "filename": "tests/data/parser/inline/0084_loop_expr.txt", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_loop_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d44169ab1e2897a90f8aa7d7672d2fe318cceb27/tests%2Fdata%2Fparser%2Finline%2F0084_loop_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0084_loop_expr.txt?ref=d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "patch": "@@ -0,0 +1,24 @@\n+FILE@[0; 26)\n+  FN_ITEM@[0; 26)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 26)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 24)\n+        LOOP_EXPR@[10; 22)\n+          WHITESPACE@[10; 15)\n+          LOOP_KW@[15; 19)\n+          BLOCK_EXPR@[19; 22)\n+            WHITESPACE@[19; 20)\n+            L_CURLY@[20; 21)\n+            R_CURLY@[21; 22)\n+        SEMI@[22; 23)\n+        WHITESPACE@[23; 24)\n+      R_CURLY@[24; 25)\n+      WHITESPACE@[25; 26)"}]}