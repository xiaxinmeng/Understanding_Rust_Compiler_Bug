{"sha": "e08bb7f54c12d9c74b63483ddc8ec900df7f6e41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwOGJiN2Y1NGMxMmQ5Yzc0YjYzNDgzZGRjOGVjOTAwZGY3ZjZlNDE=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-07-05T15:58:46Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-07-05T15:58:46Z"}, "message": "reference: remove stray comma", "tree": {"sha": "840621b5f5841f6cb6239338f4d4979953c5c18c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/840621b5f5841f6cb6239338f4d4979953c5c18c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e08bb7f54c12d9c74b63483ddc8ec900df7f6e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e08bb7f54c12d9c74b63483ddc8ec900df7f6e41", "html_url": "https://github.com/rust-lang/rust/commit/e08bb7f54c12d9c74b63483ddc8ec900df7f6e41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e08bb7f54c12d9c74b63483ddc8ec900df7f6e41/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "912ab64a0de2c121a1c9f10bb1dbe75983b78c73", "url": "https://api.github.com/repos/rust-lang/rust/commits/912ab64a0de2c121a1c9f10bb1dbe75983b78c73", "html_url": "https://github.com/rust-lang/rust/commit/912ab64a0de2c121a1c9f10bb1dbe75983b78c73"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "49718ca17ea8aae9bd2546684ccb6229b0e46021", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e08bb7f54c12d9c74b63483ddc8ec900df7f6e41/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/e08bb7f54c12d9c74b63483ddc8ec900df7f6e41/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=e08bb7f54c12d9c74b63483ddc8ec900df7f6e41", "patch": "@@ -3355,7 +3355,7 @@ let s: &[i32] = &vec[..];\n As you can see, the `vec!` macro allows you to create a `Vec<T>` easily. The\n `vec!` macro is also part of the standard library, rather than the language.\n \n-All in-bounds elements of arrays, and slices are always initialized, and access\n+All in-bounds elements of arrays and slices are always initialized, and access\n to an array or slice is always bounds-checked.\n \n ### Structure types"}]}