{"sha": "8d10594ed5f1cf9f8690026f06c86af3a8e61f56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMTA1OTRlZDVmMWNmOWY4NjkwMDI2ZjA2Yzg2YWYzYThlNjFmNTY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-17T18:49:50Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-17T21:38:32Z"}, "message": "Added a few more expr_spawn cases so the spawn.rs test case gets a little further before failing.", "tree": {"sha": "efbc54cc827f6bab7e78fb74b03aa17d0c016faa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efbc54cc827f6bab7e78fb74b03aa17d0c016faa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d10594ed5f1cf9f8690026f06c86af3a8e61f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d10594ed5f1cf9f8690026f06c86af3a8e61f56", "html_url": "https://github.com/rust-lang/rust/commit/8d10594ed5f1cf9f8690026f06c86af3a8e61f56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d10594ed5f1cf9f8690026f06c86af3a8e61f56/comments", "author": null, "committer": null, "parents": [{"sha": "37768cba92f58c99cc320a02d67165d41d8642f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/37768cba92f58c99cc320a02d67165d41d8642f6", "html_url": "https://github.com/rust-lang/rust/commit/37768cba92f58c99cc320a02d67165d41d8642f6"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "fe00e4619a6f973a819aef867ba905f38e5d8fe8", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d10594ed5f1cf9f8690026f06c86af3a8e61f56/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d10594ed5f1cf9f8690026f06c86af3a8e61f56/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=8d10594ed5f1cf9f8690026f06c86af3a8e61f56", "patch": "@@ -1743,6 +1743,7 @@ fn expr_ann(&@ast::expr e) -> ast::ann {\n         case (ast::expr_break(?a)) { ret a; }\n         case (ast::expr_cont(?a)) { ret a; }\n         case (ast::expr_self_method(_, ?a)) { ret a; }\n+        case (ast::expr_spawn(_, _, _, _, ?a)) { ret a; }\n     }\n }\n "}, {"sha": "99bed43c16617d1e6eaacf90f938d836e5ed1393", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8d10594ed5f1cf9f8690026f06c86af3a8e61f56/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d10594ed5f1cf9f8690026f06c86af3a8e61f56/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=8d10594ed5f1cf9f8690026f06c86af3a8e61f56", "patch": "@@ -1509,6 +1509,22 @@ mod Pushdown {\n                 e_1 = ast::expr_send(lval_1, expr_1, ann);\n             }\n \n+            case (ast::expr_spawn(?dom, ?name, ?func, ?args, ?ann)) {\n+                // TODO: This is copied from call, since spawn is sort of like\n+                // a call expression. However, it's not doing anything with\n+                // the domain or name parameters.\n+\n+                // NB: we call 'Demand::autoderef' and pass in adk only in\n+                // cases where e is an expression that could *possibly*\n+                // produce a box; things like expr_binary or expr_bind can't,\n+                // so there's no need.\n+                auto t = Demand::autoderef(fcx, e.span, expected,\n+                    ann_to_type(fcx.ccx.node_types, ann), adk);\n+                e_1 = ast::expr_spawn(dom, name, func, args,\n+                                     triv_ann(ast::ann_tag(ann), t));\n+                write_type_only(fcx.ccx.node_types, ast::ann_tag(ann), t);\n+            }\n+\n             case (_) {\n                 fcx.ccx.sess.span_unimpl(e.span,\n                     #fmt(\"type unification for expression variant: %s\","}]}