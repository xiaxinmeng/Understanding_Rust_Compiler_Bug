{"sha": "a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MTBjNjEwYjJlYTE1NTAwMTRlOWY2YmQyMGU1ZTRhZWQ4YTcxNmM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-21T22:35:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-21T23:49:26Z"}, "message": "review comments: reword and add test", "tree": {"sha": "2fd7e838d08a97536d43a792d2add4592d39effe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fd7e838d08a97536d43a792d2add4592d39effe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "html_url": "https://github.com/rust-lang/rust/commit/a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba8e09415b00fdfcda8feeb1cf233f2f065ef6c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba8e09415b00fdfcda8feeb1cf233f2f065ef6c6", "html_url": "https://github.com/rust-lang/rust/commit/ba8e09415b00fdfcda8feeb1cf233f2f065ef6c6"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "c70006b68d69aff5f3230a50abde2935206e7c3d", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "patch": "@@ -269,8 +269,8 @@ impl<'tcx> TyCtxt<'tcx> {\n                     let f_str = values.found.to_string();\n                     if &e_str == &f_str && &e_str == \"impl std::future::Future\" {\n                         // FIXME: use non-string based check.\n-                        db.help(\"if both futures resolve to the same type, consider `await`ing \\\n-                                 on both of them\");\n+                        db.help(\"if both `Future`s have the same `Output` type, consider \\\n+                                 `.await`ing on both of them\");\n                     }\n                 }\n                 if let (ty::Infer(ty::IntVar(_)), ty::Float(_)) ="}, {"sha": "979bb60d48c12c820959e4384da300240a2b2a7c", "filename": "src/test/ui/suggestions/opaque-type-error.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.rs?ref=a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "patch": "@@ -0,0 +1,24 @@\n+// edition:2018\n+use core::future::Future;\n+\n+async fn base_thing() -> Result<(), ()> {\n+    Ok(())\n+}\n+\n+fn thing_one() -> impl Future<Output = Result<(), ()>> {\n+    base_thing()\n+}\n+\n+fn thing_two() -> impl Future<Output = Result<(), ()>> {\n+    base_thing()\n+}\n+\n+async fn thing() -> Result<(), ()> {\n+    if true {\n+        thing_one()\n+    } else {\n+        thing_two() //~ ERROR if and else have incompatible types\n+    }.await\n+}\n+\n+fn main() {}"}, {"sha": "3c9ea05aeceb2f8d70697e572eb037b439ddfb3f", "filename": "src/test/ui/suggestions/opaque-type-error.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a710c610b2ea1550014e9f6bd20e5e4aed8a716c/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.stderr?ref=a710c610b2ea1550014e9f6bd20e5e4aed8a716c", "patch": "@@ -0,0 +1,20 @@\n+error[E0308]: if and else have incompatible types\n+  --> $DIR/opaque-type-error.rs:20:9\n+   |\n+LL | /     if true {\n+LL | |         thing_one()\n+   | |         ----------- expected because of this\n+LL | |     } else {\n+LL | |         thing_two()\n+   | |         ^^^^^^^^^^^ expected opaque type, found a different opaque type\n+LL | |     }.await\n+   | |_____- if and else have incompatible types\n+   |\n+   = note: expected type `impl std::future::Future` (opaque type)\n+              found type `impl std::future::Future` (opaque type)\n+   = note: distinct uses of `impl Trait` result in different opaque types\n+   = help: if both `Future`s have the same `Output` type, consider `.await`ing on both of them\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}