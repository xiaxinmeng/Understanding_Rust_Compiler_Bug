{"sha": "371fd4f1c05bd0cf2cd6c4912e0cc83460075370", "node_id": "C_kwDOAAsO6NoAKDM3MWZkNGYxYzA1YmQwY2YyY2Q2YzQ5MTJlMGNjODM0NjAwNzUzNzA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-10-21T05:11:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-21T05:11:09Z"}, "message": "Rollup merge of #90074 - klensy:upvar-all, r=wesleywiser\n\n2229 migrations small cleanup\n\nThis removes needless `format!`'ing of empty string and replaces `vec!` with const strings with const array.", "tree": {"sha": "88af53f85ba51fc955d67642dfa9cc99064f24e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88af53f85ba51fc955d67642dfa9cc99064f24e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/371fd4f1c05bd0cf2cd6c4912e0cc83460075370", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhcPZuCRBK7hj4Ov3rIwAAVQIIAJIj81f7eM5JS4UOghiEJhWS\nQF0dxFS4SQQF07FGljfzBO9h/Ie9cF0RfVKfqsSp1QwUGOo5Xcdi4+ionuj/Hkgp\nEH0u44O2Pf4bBIl7WpvoZg9733YkZCYLbjcyDn3Su1SNlq7tF9rwxsyVnJk5j0WG\nPDm3dVbvjCJK40EknRmShFJF9LymX75Bf5F4ia2T7guch3/FjN5uqO0SQWBeuxiq\nm0qELWmKJ8DkzwVzYR6ArMD3VqCPciGhfCGGGXhZoyXrry1vr1X+eD1aNi4kSnoe\n8Qq3agAFfzSZhDc5y1sTOQOgyi/tq6dgG2SOEr4s6p33NCQDHcdfNOgUwpAle84=\n=E2/N\n-----END PGP SIGNATURE-----\n", "payload": "tree 88af53f85ba51fc955d67642dfa9cc99064f24e9\nparent afdd0c3adedd5839e6d89a6d5ae8d0acfee0aae7\nparent f3fb821f3b5a762f8e053b56f1982aee18c82060\nauthor Yuki Okushi <jtitor@2k36.org> 1634793069 +0900\ncommitter GitHub <noreply@github.com> 1634793069 +0900\n\nRollup merge of #90074 - klensy:upvar-all, r=wesleywiser\n\n2229 migrations small cleanup\n\nThis removes needless `format!`'ing of empty string and replaces `vec!` with const strings with const array.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/371fd4f1c05bd0cf2cd6c4912e0cc83460075370", "html_url": "https://github.com/rust-lang/rust/commit/371fd4f1c05bd0cf2cd6c4912e0cc83460075370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/371fd4f1c05bd0cf2cd6c4912e0cc83460075370/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afdd0c3adedd5839e6d89a6d5ae8d0acfee0aae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/afdd0c3adedd5839e6d89a6d5ae8d0acfee0aae7", "html_url": "https://github.com/rust-lang/rust/commit/afdd0c3adedd5839e6d89a6d5ae8d0acfee0aae7"}, {"sha": "f3fb821f3b5a762f8e053b56f1982aee18c82060", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fb821f3b5a762f8e053b56f1982aee18c82060", "html_url": "https://github.com/rust-lang/rust/commit/f3fb821f3b5a762f8e053b56f1982aee18c82060"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9c7b0b2cacb062e397ed86fedc7b8fa8f518b4bb", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/371fd4f1c05bd0cf2cd6c4912e0cc83460075370/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/371fd4f1c05bd0cf2cd6c4912e0cc83460075370/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=371fd4f1c05bd0cf2cd6c4912e0cc83460075370", "patch": "@@ -883,8 +883,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             self.tcx.get_diagnostic_item(sym::unwind_safe_trait),\n             self.tcx.get_diagnostic_item(sym::ref_unwind_safe_trait),\n         ];\n-        let auto_traits =\n-            vec![\"`Clone`\", \"`Sync`\", \"`Send`\", \"`Unpin`\", \"`UnwindSafe`\", \"`RefUnwindSafe`\"];\n+        const AUTO_TRAITS: [&str; 6] =\n+            [\"`Clone`\", \"`Sync`\", \"`Send`\", \"`Unpin`\", \"`UnwindSafe`\", \"`RefUnwindSafe`\"];\n \n         let root_var_min_capture_list = min_captures.and_then(|m| m.get(&var_hir_id))?;\n \n@@ -957,7 +957,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // by the root variable but not by the capture\n             for (idx, _) in obligations_should_hold.iter().enumerate() {\n                 if !obligations_holds_for_capture[idx] && obligations_should_hold[idx] {\n-                    capture_problems.insert(auto_traits[idx]);\n+                    capture_problems.insert(AUTO_TRAITS[idx]);\n                 }\n             }\n \n@@ -1074,7 +1074,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         min_captures: Option<&ty::RootVariableMinCaptureList<'tcx>>,\n     ) -> (Vec<MigrationDiagnosticInfo>, String) {\n         let Some(upvars) = self.tcx.upvars_mentioned(closure_def_id) else {\n-            return (Vec::new(), format!(\"\"));\n+            return (Vec::new(), String::new());\n         };\n \n         let mut need_migrations = Vec::new();"}]}