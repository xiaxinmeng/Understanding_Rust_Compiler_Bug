{"sha": "784dd22aac3f58eebc73ff54ae0ea43682392e68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NGRkMjJhYWMzZjU4ZWViYzczZmY1NGFlMGVhNDM2ODIzOTJlNjg=", "commit": {"author": {"name": "carbotaniuman", "email": "41451839+carbotaniuman@users.noreply.github.com", "date": "2020-07-25T20:15:12Z"}, "committer": {"name": "carbotaniuman", "email": "41451839+carbotaniuman@users.noreply.github.com", "date": "2020-07-29T15:38:58Z"}, "message": "add `unsigned_abs` to signed integers", "tree": {"sha": "ba19013062c19ed3724a40e1fde82b52db7a8581", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba19013062c19ed3724a40e1fde82b52db7a8581"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/784dd22aac3f58eebc73ff54ae0ea43682392e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/784dd22aac3f58eebc73ff54ae0ea43682392e68", "html_url": "https://github.com/rust-lang/rust/commit/784dd22aac3f58eebc73ff54ae0ea43682392e68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/784dd22aac3f58eebc73ff54ae0ea43682392e68/comments", "author": {"login": "carbotaniuman", "id": 41451839, "node_id": "MDQ6VXNlcjQxNDUxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/41451839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carbotaniuman", "html_url": "https://github.com/carbotaniuman", "followers_url": "https://api.github.com/users/carbotaniuman/followers", "following_url": "https://api.github.com/users/carbotaniuman/following{/other_user}", "gists_url": "https://api.github.com/users/carbotaniuman/gists{/gist_id}", "starred_url": "https://api.github.com/users/carbotaniuman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carbotaniuman/subscriptions", "organizations_url": "https://api.github.com/users/carbotaniuman/orgs", "repos_url": "https://api.github.com/users/carbotaniuman/repos", "events_url": "https://api.github.com/users/carbotaniuman/events{/privacy}", "received_events_url": "https://api.github.com/users/carbotaniuman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carbotaniuman", "id": 41451839, "node_id": "MDQ6VXNlcjQxNDUxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/41451839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carbotaniuman", "html_url": "https://github.com/carbotaniuman", "followers_url": "https://api.github.com/users/carbotaniuman/followers", "following_url": "https://api.github.com/users/carbotaniuman/following{/other_user}", "gists_url": "https://api.github.com/users/carbotaniuman/gists{/gist_id}", "starred_url": "https://api.github.com/users/carbotaniuman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carbotaniuman/subscriptions", "organizations_url": "https://api.github.com/users/carbotaniuman/orgs", "repos_url": "https://api.github.com/users/carbotaniuman/repos", "events_url": "https://api.github.com/users/carbotaniuman/events{/privacy}", "received_events_url": "https://api.github.com/users/carbotaniuman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c28244cf0fc9868f55070e55b8f332d196eaf3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c28244cf0fc9868f55070e55b8f332d196eaf3f", "html_url": "https://github.com/rust-lang/rust/commit/2c28244cf0fc9868f55070e55b8f332d196eaf3f"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "eb50dc28b9f1101e8afe9d9c04de69fc4f3c947b", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/784dd22aac3f58eebc73ff54ae0ea43682392e68/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/784dd22aac3f58eebc73ff54ae0ea43682392e68/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=784dd22aac3f58eebc73ff54ae0ea43682392e68", "patch": "@@ -1601,6 +1601,29 @@ $EndFeature, \"\n             }\n         }\n \n+        doc_comment! {\n+            concat!(\"Computes the absolute value of `self` without any wrapping\n+or panicking.\n+\n+\n+# Examples\n+\n+Basic usage:\n+\n+```\n+\", $Feature, \"#![feature(unsigned_abs)]\n+assert_eq!(100\", stringify!($SelfT), \".unsigned_abs(), 100\", stringify!($UnsignedT), \");\n+assert_eq!((-100\", stringify!($SelfT), \").unsigned_abs(), 100\", stringify!($UnsignedT), \");\n+assert_eq!((-128i8).unsigned_abs(), 128u8);\",\n+$EndFeature, \"\n+```\"),\n+            #[unstable(feature = \"unsigned_abs\", issue = \"74913\")]\n+            #[inline]\n+            pub const fn unsigned_abs(self) -> $UnsignedT {\n+                 self.wrapping_abs() as $UnsignedT\n+            }\n+        }\n+\n         doc_comment! {\n             concat!(\"Wrapping (modular) exponentiation. Computes `self.pow(exp)`,\n wrapping around at the boundary of the type."}]}