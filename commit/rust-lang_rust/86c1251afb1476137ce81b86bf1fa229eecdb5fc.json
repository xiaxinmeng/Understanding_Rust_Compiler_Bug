{"sha": "86c1251afb1476137ce81b86bf1fa229eecdb5fc", "node_id": "C_kwDOAAsO6NoAKDg2YzEyNTFhZmIxNDc2MTM3Y2U4MWI4NmJmMWZhMjI5ZWVjZGI1ZmM", "commit": {"author": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2022-02-15T00:41:49Z"}, "committer": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2022-02-15T00:45:31Z"}, "message": "fix: Don't drop glob with nested self", "tree": {"sha": "29f5bfd314feb5dad65739a9afbd44dbf7223211", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29f5bfd314feb5dad65739a9afbd44dbf7223211"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86c1251afb1476137ce81b86bf1fa229eecdb5fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEosE1rSpoNOieSVDGiUkQv4PnA0cFAmIK96sACgkQiUkQv4Pn\nA0fZNgv9GS05HVl5ozIDJeLQZV8E3E+aOzg6dgtopHHYF3uTFwaLuk/It0yLVVjw\ns8HVNSOIfk4bGlOJng41vCRhVnfx7exwwTp8JdcYc/Xmr5dnzcEZMC9nckCZqX3j\n5y72L9ylPCzyrRzZrKeJWcXAn4vsQjS03otMlwMxMihEtnfDhi0UW4lG7KyVBHuX\nrPPd/j8HcOOy21KsuIqvPqD8PwqryhYxHVcJ3O0/0Apgeuak1p6b51w1nO50Agj5\ncUwodPxxNslKKK2ZK6qe3CnLeFvM+HbkxV7zTQwlp8ROZwfDoucgat+6KAyP+X4L\n49Ju4QRyYg22iucxB7ADJBc0rD9SdL0VC5SVncjpOXDMrkRbTSSn7Gpn2yUUE8Zw\ndIeWFuAs1qWnN/jcXJhJ2doX4kJgc50d9A8TlkU6cTecGPY2pnxEs3JBkcoKna6Y\neL86fsSho4ElxumKC/hSxftQdZbsGR4Q8F444Bw6TbLbR5hQU8/bLyilR7vhmm/d\nxUbGytkm\n=lUtU\n-----END PGP SIGNATURE-----", "payload": "tree 29f5bfd314feb5dad65739a9afbd44dbf7223211\nparent df2eb3c7cbe1a67fc870a4ee5dde6569a6b7deab\nauthor DropDemBits <r3usrlnd@gmail.com> 1644885709 -0500\ncommitter DropDemBits <r3usrlnd@gmail.com> 1644885931 -0500\n\nfix: Don't drop glob with nested self\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86c1251afb1476137ce81b86bf1fa229eecdb5fc", "html_url": "https://github.com/rust-lang/rust/commit/86c1251afb1476137ce81b86bf1fa229eecdb5fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86c1251afb1476137ce81b86bf1fa229eecdb5fc/comments", "author": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df2eb3c7cbe1a67fc870a4ee5dde6569a6b7deab", "url": "https://api.github.com/repos/rust-lang/rust/commits/df2eb3c7cbe1a67fc870a4ee5dde6569a6b7deab", "html_url": "https://github.com/rust-lang/rust/commit/df2eb3c7cbe1a67fc870a4ee5dde6569a6b7deab"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "2ded8c980372110f35239db28fff791b2feaded1", "filename": "crates/ide_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/86c1251afb1476137ce81b86bf1fa229eecdb5fc/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c1251afb1476137ce81b86bf1fa229eecdb5fc/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=86c1251afb1476137ce81b86bf1fa229eecdb5fc", "patch": "@@ -321,6 +321,18 @@ use foo::{bar::{self}};\n         )\n     }\n \n+    #[test]\n+    fn test_merge_nested_list_self_and_glob() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+use std$0::{fmt::*};\n+use std::{fmt::{self, Display}};\n+\",\n+            r\"use std::{fmt::{self, *, Display}};\",\n+        )\n+    }\n+\n     #[test]\n     fn test_merge_single_wildcard_diff_prefixes() {\n         check_assist("}, {"sha": "f113dccdea9bed2050dd23d6065360b0b3ce6da3", "filename": "crates/ide_db/src/helpers/merge_imports.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c1251afb1476137ce81b86bf1fa229eecdb5fc/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c1251afb1476137ce81b86bf1fa229eecdb5fc/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs?ref=86c1251afb1476137ce81b86bf1fa229eecdb5fc", "patch": "@@ -115,6 +115,9 @@ fn recursive_merge(lhs: &ast::UseTree, rhs: &ast::UseTree, merge: MergeBehavior)\n                     let tree_contains_self = |tree: &ast::UseTree| {\n                         tree.use_tree_list()\n                             .map(|tree_list| tree_list.use_trees().any(|it| tree_is_self(&it)))\n+                            // Glob imports aren't part of the use-tree lists,\n+                            // so they need to be handled explicitly\n+                            .or_else(|| tree.star_token().is_some().then(|| false))\n                     };\n                     match (tree_contains_self(lhs_t), tree_contains_self(&rhs_t)) {\n                         (Some(true), None) => continue,"}]}