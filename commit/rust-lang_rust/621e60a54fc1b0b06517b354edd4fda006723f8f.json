{"sha": "621e60a54fc1b0b06517b354edd4fda006723f8f", "node_id": "C_kwDOAAsO6NoAKDYyMWU2MGE1NGZjMWIwYjA2NTE3YjM1NGVkZDRmZGEwMDY3MjNmOGY", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-05T10:42:45Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-18T11:22:57Z"}, "message": "remove unnecessary fixme", "tree": {"sha": "80f166e70c5f079624bffffe5c7025176d20e02a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f166e70c5f079624bffffe5c7025176d20e02a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/621e60a54fc1b0b06517b354edd4fda006723f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/621e60a54fc1b0b06517b354edd4fda006723f8f", "html_url": "https://github.com/rust-lang/rust/commit/621e60a54fc1b0b06517b354edd4fda006723f8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/621e60a54fc1b0b06517b354edd4fda006723f8f/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8b71164af36a5a9584c1a2205a1e8216d27cdc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b71164af36a5a9584c1a2205a1e8216d27cdc7", "html_url": "https://github.com/rust-lang/rust/commit/a8b71164af36a5a9584c1a2205a1e8216d27cdc7"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "a6e8b36f78b3ed3e923628eac9455b5a56116e9d", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/621e60a54fc1b0b06517b354edd4fda006723f8f/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621e60a54fc1b0b06517b354edd4fda006723f8f/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=621e60a54fc1b0b06517b354edd4fda006723f8f", "patch": "@@ -20,9 +20,6 @@ use super::{bad_placeholder, is_suggestable_infer_ty};\n /// This should be called using the query `tcx.opt_const_param_of`.\n #[instrument(level = \"debug\", skip(tcx))]\n pub(super) fn opt_const_param_of(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Option<DefId> {\n-    // FIXME(generic_arg_infer): allow for returning DefIds of inference of\n-    // GenericArg::Infer below. This may require a change where GenericArg::Infer has some flag\n-    // for const or type.\n     use hir::*;\n     let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n "}]}