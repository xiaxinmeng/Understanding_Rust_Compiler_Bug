{"sha": "0c7bf56d805d981bb003a20a4c6b1f6b29790881", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjN2JmNTZkODA1ZDk4MWJiMDAzYTIwYTRjNmIxZjZiMjk3OTA4ODE=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2018-05-17T15:25:48Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2018-05-31T20:27:08Z"}, "message": "Update `Arc` and `Rc` to use `NonNull::cast` to cast the inner pointers\n\nThis avoids an `unsafe` block in each case.", "tree": {"sha": "68edaeac99d19d5a058cb5f036027de5deec5cb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68edaeac99d19d5a058cb5f036027de5deec5cb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c7bf56d805d981bb003a20a4c6b1f6b29790881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c7bf56d805d981bb003a20a4c6b1f6b29790881", "html_url": "https://github.com/rust-lang/rust/commit/0c7bf56d805d981bb003a20a4c6b1f6b29790881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c7bf56d805d981bb003a20a4c6b1f6b29790881/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37f5cf563c2c039503e8e50e252f2c1b31d69268", "url": "https://api.github.com/repos/rust-lang/rust/commits/37f5cf563c2c039503e8e50e252f2c1b31d69268", "html_url": "https://github.com/rust-lang/rust/commit/37f5cf563c2c039503e8e50e252f2c1b31d69268"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "4026b3ababa31edcdef37e140e16c1aaba064237", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0c7bf56d805d981bb003a20a4c6b1f6b29790881/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c7bf56d805d981bb003a20a4c6b1f6b29790881/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=0c7bf56d805d981bb003a20a4c6b1f6b29790881", "patch": "@@ -1001,14 +1001,9 @@ impl Arc<Any + Send + Sync> {\n         T: Any + Send + Sync + 'static,\n     {\n         if (*self).is::<T>() {\n-            unsafe {\n-                let raw: *const ArcInner<Any + Send + Sync> = self.ptr.as_ptr();\n-                mem::forget(self);\n-                Ok(Arc {\n-                    ptr: NonNull::new_unchecked(raw as *const ArcInner<T> as *mut _),\n-                    phantom: PhantomData,\n-                })\n-            }\n+            let ptr = self.ptr.cast::<ArcInner<T>>();\n+            mem::forget(self);\n+            Ok(Arc { ptr, phantom: PhantomData })\n         } else {\n             Err(self)\n         }"}, {"sha": "553c8b5ca3280ddcbc3a7ff41d2a3824a1dda903", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c7bf56d805d981bb003a20a4c6b1f6b29790881/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c7bf56d805d981bb003a20a4c6b1f6b29790881/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=0c7bf56d805d981bb003a20a4c6b1f6b29790881", "patch": "@@ -644,15 +644,9 @@ impl Rc<Any> {\n     /// ```\n     pub fn downcast<T: Any>(self) -> Result<Rc<T>, Rc<Any>> {\n         if (*self).is::<T>() {\n-            // avoid the pointer arithmetic in from_raw\n-            unsafe {\n-                let raw: *const RcBox<Any> = self.ptr.as_ptr();\n-                forget(self);\n-                Ok(Rc {\n-                    ptr: NonNull::new_unchecked(raw as *const RcBox<T> as *mut _),\n-                    phantom: PhantomData,\n-                })\n-            }\n+            let ptr = self.ptr.cast::<RcBox<T>>();\n+            forget(self);\n+            Ok(Rc { ptr, phantom: PhantomData })\n         } else {\n             Err(self)\n         }"}]}