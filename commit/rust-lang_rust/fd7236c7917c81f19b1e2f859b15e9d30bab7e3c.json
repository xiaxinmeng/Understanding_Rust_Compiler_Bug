{"sha": "fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNzIzNmM3OTE3YzgxZjE5YjFlMmY4NTliMTVlOWQzMGJhYjdlM2M=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-08T11:50:49Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-08T14:26:25Z"}, "message": "debug for record field structs", "tree": {"sha": "96f3d003b1f9a25e8b3b5657c1529ac2c62d56ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96f3d003b1f9a25e8b3b5657c1529ac2c62d56ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "html_url": "https://github.com/rust-lang/rust/commit/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2ab2e12a0e1ce0836cd1cdebf6338580f2aca14", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2ab2e12a0e1ce0836cd1cdebf6338580f2aca14", "html_url": "https://github.com/rust-lang/rust/commit/e2ab2e12a0e1ce0836cd1cdebf6338580f2aca14"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "8b82cbf5e0538d5118afdcbad0f448885df0f461", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "patch": "@@ -36,7 +36,7 @@ use crate::{\n //\n // impl Debug for S {\n //     $0fn fmt(&self, f: &mut Formatter) -> Result<()> {\n-//         f.debug_struct(S)\n+//         f.debug_struct(\"S\").finish()\n //     }\n // }\n // ```\n@@ -183,25 +183,37 @@ fn gen_debug_impl(adt: &ast::Adt, fn_: &ast::Fn, annotated_name: &ast::Name) {\n     match adt {\n         ast::Adt::Union(_) => {} // `Debug` cannot be derived for unions, so no default impl can be provided.\n         ast::Adt::Enum(_) => {}  // TODO\n-        ast::Adt::Struct(strukt) => {\n-            match strukt.field_list() {\n-                Some(ast::FieldList::RecordFieldList(field_list)) => {\n-                    let name = format!(\"\\\"{}\\\"\", annotated_name);\n-                    let args = make::arg_list(Some(make::expr_literal(&name).into()));\n-                    let target = make::expr_path(make::ext::ident_path(\"f\"));\n-                    let mut expr = make::expr_method_call(target, \"debug_struct\", args);\n-                    for field in field_list.fields() {\n-                        let args = make::arg_list(Some(make::expr_path(&name).into()));\n+        ast::Adt::Struct(strukt) => match strukt.field_list() {\n+            Some(ast::FieldList::RecordFieldList(field_list)) => {\n+                let name = format!(\"\\\"{}\\\"\", annotated_name);\n+                let args = make::arg_list(Some(make::expr_literal(&name).into()));\n+                let target = make::expr_path(make::ext::ident_path(\"f\"));\n+                let mut expr = make::expr_method_call(target, \"debug_struct\", args);\n+                for field in field_list.fields() {\n+                    if let Some(name) = field.name() {\n+                        let f_name = make::expr_literal(&(format!(\"\\\"{}\\\"\", name))).into();\n+                        let f_path = make::expr_path(make::ext::ident_path(\"self\"));\n+                        let f_path = make::expr_ref(f_path, false);\n+                        let f_path = make::expr_field(f_path, &format!(\"{}\", name)).into();\n+                        let args = make::arg_list(vec![f_name, f_path]);\n                         expr = make::expr_method_call(expr, \"field\", args);\n                     }\n-                    let expr = make::expr_method_call(expr, \"finish\", make::arg_list(None));\n-                    let body = make::block_expr(None, Some(expr)).indent(ast::edit::IndentLevel(1));\n-                    ted::replace(fn_.body().unwrap().syntax(), body.clone_for_update().syntax());\n                 }\n-                Some(ast::FieldList::TupleFieldList(field_list)) => {}\n-                None => {} // `Debug` cannot be implemented for an incomplete struct.\n+                let expr = make::expr_method_call(expr, \"finish\", make::arg_list(None));\n+                let body = make::block_expr(None, Some(expr)).indent(ast::edit::IndentLevel(1));\n+                ted::replace(fn_.body().unwrap().syntax(), body.clone_for_update().syntax());\n             }\n-        }\n+            Some(ast::FieldList::TupleFieldList(field_list)) => {}\n+            None => {\n+                let name = format!(\"\\\"{}\\\"\", annotated_name);\n+                let args = make::arg_list(Some(make::expr_literal(&name).into()));\n+                let target = make::expr_path(make::ext::ident_path(\"f\"));\n+                let expr = make::expr_method_call(target, \"debug_struct\", args);\n+                let expr = make::expr_method_call(expr, \"finish\", make::arg_list(None));\n+                let body = make::block_expr(None, Some(expr)).indent(ast::edit::IndentLevel(1));\n+                ted::replace(fn_.body().unwrap().syntax(), body.clone_for_update().syntax());\n+            }\n+        },\n     }\n }\n "}, {"sha": "195f958208e4dbcacd43f3307ca339d1dbf1a7f6", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "patch": "@@ -1364,7 +1364,7 @@ struct S;\n \n impl Debug for S {\n     $0fn fmt(&self, f: &mut Formatter) -> Result<()> {\n-        f.debug_struct(S)\n+        f.debug_struct(\"S\").finish()\n     }\n }\n \"#####,"}, {"sha": "71254f085435ada6eadb5b8b908e3e685bedc40f", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7236c7917c81f19b1e2f859b15e9d30bab7e3c/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=fd7236c7917c81f19b1e2f859b15e9d30bab7e3c", "patch": "@@ -318,6 +318,9 @@ pub fn expr_closure(pats: impl IntoIterator<Item = ast::Param>, expr: ast::Expr)\n     let params = pats.into_iter().join(\", \");\n     expr_from_text(&format!(\"|{}| {}\", params, expr))\n }\n+pub fn expr_field(receiver: ast::Expr, field: &str) -> ast::Expr {\n+    expr_from_text(&format!(\"{}.{}\", receiver, field))\n+}\n pub fn expr_paren(expr: ast::Expr) -> ast::Expr {\n     expr_from_text(&format!(\"({})\", expr))\n }"}]}