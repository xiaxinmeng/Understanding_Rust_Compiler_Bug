{"sha": "30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYWM3ZTc4ZTI2ZjFmNTJmYzhjNWI1NmJiZGFiNGNjMjdiYjMyNjM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-16T09:51:59Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-16T11:07:40Z"}, "message": "Fixup #27046 with pattern bindings", "tree": {"sha": "f97a1adf71f91a3ccd9fa37f9cf9acee9ba625ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f97a1adf71f91a3ccd9fa37f9cf9acee9ba625ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263", "html_url": "https://github.com/rust-lang/rust/commit/30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a74fa35828f8daa6df00c4414241493dd57555a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a74fa35828f8daa6df00c4414241493dd57555a", "html_url": "https://github.com/rust-lang/rust/commit/2a74fa35828f8daa6df00c4414241493dd57555a"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "873950b0be893a9f93c835af860cf7413266a6e9", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=30ac7e78e26f1f52fc8c5b56bbdab4cc27bb3263", "patch": "@@ -202,8 +202,8 @@ pub trait CompilerCalls<'a> {\n     // be called straight after options have been parsed but before anything\n     // else (e.g., selecting input and output).\n     fn early_callback(&mut self,\n-                      &getopts::Matches,\n-                      &diagnostics::registry::Registry)\n+                      _: &getopts::Matches,\n+                      _: &diagnostics::registry::Registry)\n                       -> Compilation {\n         Compilation::Continue\n     }\n@@ -212,11 +212,11 @@ pub trait CompilerCalls<'a> {\n     // be called just before actual compilation starts (and before build_controller\n     // is called), after all arguments etc. have been completely handled.\n     fn late_callback(&mut self,\n-                     &getopts::Matches,\n-                     &Session,\n-                     &Input,\n-                     &Option<PathBuf>,\n-                     &Option<PathBuf>)\n+                     _: &getopts::Matches,\n+                     _: &Session,\n+                     _: &Input,\n+                     _: &Option<PathBuf>,\n+                     _: &Option<PathBuf>)\n                      -> Compilation {\n         Compilation::Continue\n     }\n@@ -235,11 +235,11 @@ pub trait CompilerCalls<'a> {\n     // emitting error messages. Returning None will cause compilation to stop\n     // at this point.\n     fn no_input(&mut self,\n-                &getopts::Matches,\n-                &config::Options,\n-                &Option<PathBuf>,\n-                &Option<PathBuf>,\n-                &diagnostics::registry::Registry)\n+                _: &getopts::Matches,\n+                _: &config::Options,\n+                _: &Option<PathBuf>,\n+                _: &Option<PathBuf>,\n+                _: &diagnostics::registry::Registry)\n                 -> Option<(Input, Option<PathBuf>)> {\n         None\n     }"}]}