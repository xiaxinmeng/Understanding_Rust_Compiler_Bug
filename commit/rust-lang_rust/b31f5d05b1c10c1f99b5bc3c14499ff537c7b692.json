{"sha": "b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMWY1ZDA1YjFjMTBjMWY5OWI1YmMzYzE0NDk5ZmY1MzdjN2I2OTI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-08T16:05:01Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-12T11:46:37Z"}, "message": "Inherit lint level from parents", "tree": {"sha": "4d0c6fd78bb479ac1929c33da905737edfe6b25f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d0c6fd78bb479ac1929c33da905737edfe6b25f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "html_url": "https://github.com/rust-lang/rust/commit/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02e6b861eb04737915636a63eec00ef126f59dd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/02e6b861eb04737915636a63eec00ef126f59dd5", "html_url": "https://github.com/rust-lang/rust/commit/02e6b861eb04737915636a63eec00ef126f59dd5"}], "stats": {"total": 52, "additions": 27, "deletions": 25}, "files": [{"sha": "093b77d4e94f35d4f48ebf0a907584fc70e7eb25", "filename": "src/librustdoc/passes/calculate_doc_coverage.rs", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs?ref=b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "patch": "@@ -1,11 +1,13 @@\n use crate::clean;\n-use crate::config::OutputFormat;\n use crate::core::DocContext;\n use crate::fold::{self, DocFolder};\n use crate::html::markdown::{find_testable_code, ErrorCodes};\n use crate::passes::doc_test_lints::{should_have_doc_example, Tests};\n use crate::passes::Pass;\n-use rustc_span::symbol::{sym, Ident};\n+use rustc_lint::builtin::MISSING_DOCS;\n+use rustc_middle::lint::LintSource;\n+use rustc_session::lint;\n+use rustc_span::symbol::sym;\n use rustc_span::FileName;\n use serde::Serialize;\n \n@@ -19,10 +21,10 @@ pub const CALCULATE_DOC_COVERAGE: Pass = Pass {\n };\n \n fn calculate_doc_coverage(krate: clean::Crate, ctx: &DocContext<'_>) -> clean::Crate {\n-    let mut calc = CoverageCalculator::new();\n+    let mut calc = CoverageCalculator::new(ctx);\n     let krate = calc.fold_crate(krate);\n \n-    calc.print_results(ctx.renderinfo.borrow().output_format);\n+    calc.print_results();\n \n     krate\n }\n@@ -97,8 +99,9 @@ impl ops::AddAssign for ItemCount {\n     }\n }\n \n-struct CoverageCalculator {\n+struct CoverageCalculator<'a, 'b> {\n     items: BTreeMap<FileName, ItemCount>,\n+    ctx: &'a DocContext<'b>,\n }\n \n fn limit_filename_len(filename: String) -> String {\n@@ -111,9 +114,9 @@ fn limit_filename_len(filename: String) -> String {\n     }\n }\n \n-impl CoverageCalculator {\n-    fn new() -> CoverageCalculator {\n-        CoverageCalculator { items: Default::default() }\n+impl<'a, 'b> CoverageCalculator<'a, 'b> {\n+    fn new(ctx: &'a DocContext<'b>) -> CoverageCalculator<'a, 'b> {\n+        CoverageCalculator { items: Default::default(), ctx }\n     }\n \n     fn to_json(&self) -> String {\n@@ -127,7 +130,8 @@ impl CoverageCalculator {\n         .expect(\"failed to convert JSON data to string\")\n     }\n \n-    fn print_results(&self, output_format: Option<OutputFormat>) {\n+    fn print_results(&self) {\n+        let output_format = self.ctx.renderinfo.borrow().output_format;\n         if output_format.map(|o| o.is_json()).unwrap_or_else(|| false) {\n             println!(\"{}\", self.to_json());\n             return;\n@@ -181,7 +185,7 @@ impl CoverageCalculator {\n     }\n }\n \n-impl fold::DocFolder for CoverageCalculator {\n+impl<'a, 'b> fold::DocFolder for CoverageCalculator<'a, 'b> {\n     fn fold_item(&mut self, i: clean::Item) -> Option<clean::Item> {\n         match i.inner {\n             _ if !i.def_id.is_local() => {\n@@ -232,15 +236,6 @@ impl fold::DocFolder for CoverageCalculator {\n             }\n             _ => {\n                 let has_docs = !i.attrs.doc_strings.is_empty();\n-                let should_have_docs = !i.attrs.other_attrs.iter().any(|a| {\n-                    a.has_name(sym::allow)\n-                        && a.meta_item_list().iter().any(|meta_list_item| {\n-                            meta_list_item.iter().any(|li| match li.ident() {\n-                                Some(ident) => ident == Ident::from_str(\"missing_docs\"),\n-                                _ => false,\n-                            })\n-                        })\n-                });\n                 let mut tests = Tests { found_tests: 0 };\n \n                 find_testable_code(\n@@ -257,17 +252,16 @@ impl fold::DocFolder for CoverageCalculator {\n                 );\n \n                 let has_doc_example = tests.found_tests != 0;\n+                let hir_id = self.ctx.tcx.hir().local_def_id_to_hir_id(i.def_id.expect_local());\n+                let (level, source) = self.ctx.tcx.lint_level_at_node(MISSING_DOCS, hir_id);\n+                let should_have_docs = level != lint::Level::Allow || !matches!(source, LintSource::Node(..));\n                 debug!(\"counting {:?} {:?} in {}\", i.type_(), i.name, i.source.filename);\n                 self.items.entry(i.source.filename.clone()).or_default().count_item(\n                     has_docs,\n                     has_doc_example,\n                     should_have_doc_example(&i.inner),\n                     should_have_docs,\n                 );\n-\n-                if !should_have_docs {\n-                    return Some(i);\n-                }\n             }\n         }\n "}, {"sha": "87af1a458648caf766a8ebc13a7c7f87e71eee57", "filename": "src/test/rustdoc-ui/coverage/allow_missing_docs.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fallow_missing_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fallow_missing_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fallow_missing_docs.rs?ref=b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "patch": "@@ -29,3 +29,11 @@ pub fn this_is_func() {}\n pub struct DemoStruct {\n     something: usize,\n }\n+\n+#[allow(missing_docs)]\n+pub mod bar {\n+    #[warn(missing_docs)]\n+    pub struct Bar { //~ WARN\n+        pub f: u32, //~ WARN\n+    }\n+}"}, {"sha": "17e8ee9e23dcc83dfe9401ba5200b7b478c21c3a", "filename": "src/test/rustdoc-ui/coverage/allow_missing_docs.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fallow_missing_docs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/b31f5d05b1c10c1f99b5bc3c14499ff537c7b692/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fallow_missing_docs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fallow_missing_docs.stdout?ref=b31f5d05b1c10c1f99b5bc3c14499ff537c7b692", "patch": "@@ -1,7 +1,7 @@\n +-------------------------------------+------------+------------+------------+------------+\n | File                                | Documented | Percentage |   Examples | Percentage |\n +-------------------------------------+------------+------------+------------+------------+\n-| ...i/coverage/allow_missing_docs.rs |          5 |     100.0% |          0 |       0.0% |\n+| ...i/coverage/allow_missing_docs.rs |          5 |      71.4% |          0 |       0.0% |\n +-------------------------------------+------------+------------+------------+------------+\n-| Total                               |          5 |     100.0% |          0 |       0.0% |\n+| Total                               |          5 |      71.4% |          0 |       0.0% |\n +-------------------------------------+------------+------------+------------+------------+"}]}