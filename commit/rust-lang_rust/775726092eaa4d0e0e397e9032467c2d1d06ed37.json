{"sha": "775726092eaa4d0e0e397e9032467c2d1d06ed37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NTcyNjA5MmVhYTRkMGUwZTM5N2U5MDMyNDY3YzJkMWQwNmVkMzc=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2017-02-09T19:44:39Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2017-02-13T18:41:20Z"}, "message": "Add exceptions to tidy\n\nWe've decided that these deps are okay.", "tree": {"sha": "0c8aa6f12a7300a9669a261bf2f0cbae1e55a1ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c8aa6f12a7300a9669a261bf2f0cbae1e55a1ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/775726092eaa4d0e0e397e9032467c2d1d06ed37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/775726092eaa4d0e0e397e9032467c2d1d06ed37", "html_url": "https://github.com/rust-lang/rust/commit/775726092eaa4d0e0e397e9032467c2d1d06ed37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/775726092eaa4d0e0e397e9032467c2d1d06ed37/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "626cf3a263dcac94c88910a6a67018e82b564c75", "url": "https://api.github.com/repos/rust-lang/rust/commits/626cf3a263dcac94c88910a6a67018e82b564c75", "html_url": "https://github.com/rust-lang/rust/commit/626cf3a263dcac94c88910a6a67018e82b564c75"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "b77baed53267785bf30ba2144a866684443036c6", "filename": "src/tools/rustbook/src/main.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/775726092eaa4d0e0e397e9032467c2d1d06ed37/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/775726092eaa4d0e0e397e9032467c2d1d06ed37/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs?ref=775726092eaa4d0e0e397e9032467c2d1d06ed37", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n extern crate mdbook;\n #[macro_use]\n extern crate clap;\n@@ -11,19 +21,21 @@ use clap::{App, ArgMatches, SubCommand, AppSettings};\n \n use mdbook::MDBook;\n \n-const NAME: &'static str = \"rustbook\";\n-\n fn main() {\n-    // Create a list of valid arguments and sub-commands\n-    let matches = App::new(NAME)\n+    let d_message = \"-d, --dest-dir=[dest-dir]\n+'The output directory for your book{n}(Defaults to ./book when omitted)'\";\n+    let dir_message = \"[dir]\n+'A directory for your book{n}(Defaults to Current Directory when omitted)'\";\n+\n+    let matches = App::new(\"rustbook\")\n                     .about(\"Build a book with mdBook\")\n                     .author(\"Steve Klabnik <steve@steveklabnik.com>\")\n                     .version(&*format!(\"v{}\", crate_version!()))\n                     .setting(AppSettings::SubcommandRequired)\n                     .subcommand(SubCommand::with_name(\"build\")\n                         .about(\"Build the book from the markdown files\")\n-                        .arg_from_usage(\"-d, --dest-dir=[dest-dir] 'The output directory for your book{n}(Defaults to ./book when omitted)'\")\n-                        .arg_from_usage(\"[dir] 'A directory for your book{n}(Defaults to Current Directory when omitted)'\"))\n+                        .arg_from_usage(d_message)\n+                        .arg_from_usage(dir_message))\n                     .get_matches();\n \n     // Check which subcomamnd the user ran...\n@@ -76,4 +88,3 @@ fn get_book_dir(args: &ArgMatches) -> PathBuf {\n         env::current_dir().unwrap()\n     }\n }\n-"}, {"sha": "e1c44a20e97560b7da29d90eac4bfee2a5c6c78b", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/775726092eaa4d0e0e397e9032467c2d1d06ed37/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/775726092eaa4d0e0e397e9032467c2d1d06ed37/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=775726092eaa4d0e0e397e9032467c2d1d06ed37", "patch": "@@ -15,16 +15,38 @@ use std::io::Read;\n use std::path::Path;\n \n static LICENSES: &'static [&'static str] = &[\n-    \"MIT/Apache-2.0\"\n+    \"MIT/Apache-2.0\",\n+    \"Apache-2.0/MIT\",\n+    \"MIT OR Apache-2.0\",\n+    \"MIT\",\n+    \"Unlicense/MIT\",\n+];\n+\n+/// These MPL licensed projects are acceptable, but only these.\n+static EXCEPTIONS: &'static [&'static str] = &[\n+    \"mdbook\",\n+    \"pest\",\n+    \"thread-id\",\n ];\n \n pub fn check(path: &Path, bad: &mut bool) {\n     let path = path.join(\"vendor\");\n     assert!(path.exists(), \"vendor directory missing\");\n     let mut saw_dir = false;\n-    for dir in t!(path.read_dir()) {\n+    'next_path: for dir in t!(path.read_dir()) {\n         saw_dir = true;\n         let dir = t!(dir);\n+\n+        // skip our exceptions\n+        for exception in EXCEPTIONS {\n+            if dir.path()\n+                .to_str()\n+                .unwrap()\n+                .contains(&format!(\"src/vendor/{}\", exception)) {\n+                continue 'next_path;\n+            }\n+        }\n+\n         let toml = dir.path().join(\"Cargo.toml\");\n         if !check_license(&toml) {\n             *bad = true;"}]}