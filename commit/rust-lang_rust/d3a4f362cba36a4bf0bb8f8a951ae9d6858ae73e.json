{"sha": "d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYTRmMzYyY2JhMzZhNGJmMGJiOGY4YTk1MWFlOWQ2ODU4YWU3M2U=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T21:33:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T23:10:25Z"}, "message": "rollup merge of #23786: alexcrichton/less-quotes\n\nConflicts:\n\tsrc/test/auxiliary/static-function-pointer-aux.rs\n\tsrc/test/auxiliary/trait_default_method_xc_aux.rs\n\tsrc/test/run-pass/issue-4545.rs", "tree": {"sha": "3dbfd8c87647f67e1d17c726e72b153609d7eea8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dbfd8c87647f67e1d17c726e72b153609d7eea8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "html_url": "https://github.com/rust-lang/rust/commit/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c0e1a80e54a4d231e01f2bf81c8c9529afd4ba5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c0e1a80e54a4d231e01f2bf81c8c9529afd4ba5", "html_url": "https://github.com/rust-lang/rust/commit/1c0e1a80e54a4d231e01f2bf81c8c9529afd4ba5"}, {"sha": "e77db16afbe9a7180242112456c7fded48f21b6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e77db16afbe9a7180242112456c7fded48f21b6d", "html_url": "https://github.com/rust-lang/rust/commit/e77db16afbe9a7180242112456c7fded48f21b6d"}], "stats": {"total": 559, "additions": 259, "deletions": 300}, "files": [{"sha": "4da7d6db444fa3e71ac4c2b2b64a9549bbb07b08", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -937,7 +937,7 @@ extern crate pcre;\n \n extern crate std; // equivalent to: extern crate std as std;\n \n-extern crate \"std\" as ruststd; // linking to 'std' under another name\n+extern crate std as ruststd; // linking to 'std' under another name\n ```\n \n ##### Use declarations"}, {"sha": "b6a8525675e456c64afad6b7c8ee895eebb3d948", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -73,24 +73,20 @@ struct CrateInfo {\n }\n \n pub fn validate_crate_name(sess: Option<&Session>, s: &str, sp: Option<Span>) {\n-    let say = |s: &str, warn: bool| {\n+    let say = |s: &str| {\n         match (sp, sess) {\n             (_, None) => panic!(\"{}\", s),\n-            (Some(sp), Some(sess)) if warn => sess.span_warn(sp, s),\n             (Some(sp), Some(sess)) => sess.span_err(sp, s),\n-            (None, Some(sess)) if warn => sess.warn(s),\n             (None, Some(sess)) => sess.err(s),\n         }\n     };\n     if s.len() == 0 {\n-        say(\"crate name must not be empty\", false);\n-    } else if s.contains(\"-\") {\n-        say(&format!(\"crate names soon cannot contain hyphens: {}\", s), true);\n+        say(\"crate name must not be empty\");\n     }\n     for c in s.chars() {\n         if c.is_alphanumeric() { continue }\n-        if c == '_' || c == '-' { continue }\n-        say(&format!(\"invalid character `{}` in crate name: `{}`\", c, s), false);\n+        if c == '_'  { continue }\n+        say(&format!(\"invalid character `{}` in crate name: `{}`\", c, s));\n     }\n     match sess {\n         Some(sess) => sess.abort_if_errors(),\n@@ -306,13 +302,7 @@ impl<'a> CrateReader<'a> {\n                       -> Option<ast::CrateNum> {\n         let mut ret = None;\n         self.sess.cstore.iter_crate_data(|cnum, data| {\n-            // For now we do a \"fuzzy match\" on crate names by considering\n-            // hyphens equal to underscores. This is purely meant to be a\n-            // transitionary feature while we deprecate the quote syntax of\n-            // `extern crate` statements.\n-            if data.name != name.replace(\"-\", \"_\") {\n-                return\n-            }\n+            if data.name != name { return }\n \n             match hash {\n                 Some(hash) if *hash == data.hash() => { ret = Some(cnum); return }"}, {"sha": "ad777351898912f6608370e51c4c63c78e477309", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -159,11 +159,19 @@ pub fn find_crate_name(sess: Option<&Session>,\n     }\n     if let Input::File(ref path) = *input {\n         if let Some(s) = path.file_stem().and_then(|s| s.to_str()) {\n-            return validate(s.to_string(), None);\n+            if s.starts_with(\"-\") {\n+                let msg = format!(\"crate names cannot start with a `-`, but \\\n+                                   `{}` has a leading hyphen\", s);\n+                if let Some(sess) = sess {\n+                    sess.err(&msg);\n+                }\n+            } else {\n+                return validate(s.replace(\"-\", \"_\"), None);\n+            }\n         }\n     }\n \n-    \"rust-out\".to_string()\n+    \"rust_out\".to_string()\n }\n \n pub fn build_link_meta(sess: &Session, krate: &ast::Crate,\n@@ -455,7 +463,11 @@ pub fn filename_for_input(sess: &Session,\n         }\n         config::CrateTypeExecutable => {\n             let suffix = &sess.target.target.options.exe_suffix;\n-            out_filename.with_file_name(&format!(\"{}{}\", libname, suffix))\n+            if suffix.len() == 0 {\n+                out_filename.to_path_buf()\n+            } else {\n+                out_filename.with_extension(&suffix[1..])\n+            }\n         }\n     }\n }"}, {"sha": "702a32be58684af5a56c7529dc570934628c8c27", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -224,7 +224,7 @@ fn runtest(test: &str, cratename: &str, libs: SearchPaths,\n     // environment to ensure that the target loads the right libraries at\n     // runtime. It would be a sad day if the *host* libraries were loaded as a\n     // mistake.\n-    let mut cmd = Command::new(&outdir.path().join(\"rust-out\"));\n+    let mut cmd = Command::new(&outdir.path().join(\"rust_out\"));\n     let var = DynamicLibrary::envvar();\n     let newpath = {\n         let path = env::var_os(var).unwrap_or(OsString::new());"}, {"sha": "b287093bf192002689bb9f507ea4ce13dd5ffa60", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 37, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -4951,46 +4951,19 @@ impl<'a> Parser<'a> {\n     ///\n     /// # Examples\n     ///\n-    /// extern crate url;\n-    /// extern crate foo = \"bar\"; //deprecated\n-    /// extern crate \"bar\" as foo;\n+    /// extern crate foo;\n+    /// extern crate bar as foo;\n     fn parse_item_extern_crate(&mut self,\n-                                lo: BytePos,\n-                                visibility: Visibility,\n-                                attrs: Vec<Attribute>)\n+                               lo: BytePos,\n+                               visibility: Visibility,\n+                               attrs: Vec<Attribute>)\n                                 -> P<Item> {\n \n-        let (maybe_path, ident) = match self.token {\n-            token::Ident(..) => {\n-                let crate_name = self.parse_ident();\n-                if self.eat_keyword(keywords::As) {\n-                    (Some(crate_name.name), self.parse_ident())\n-                } else {\n-                    (None, crate_name)\n-                }\n-            },\n-            token::Literal(token::Str_(..), suf) |\n-            token::Literal(token::StrRaw(..), suf) => {\n-                let sp = self.span;\n-                self.expect_no_suffix(sp, \"extern crate name\", suf);\n-                // forgo the internal suffix check of `parse_str` to\n-                // avoid repeats (this unwrap will always succeed due\n-                // to the restriction of the `match`)\n-                let (s, _, _) = self.parse_optional_str().unwrap();\n-                self.expect_keyword(keywords::As);\n-                let the_ident = self.parse_ident();\n-                self.obsolete(sp, ObsoleteSyntax::ExternCrateString);\n-                let s = token::intern(&s);\n-                (Some(s), the_ident)\n-            },\n-            _ => {\n-                let span = self.span;\n-                let token_str = self.this_token_to_string();\n-                self.span_fatal(span,\n-                                &format!(\"expected extern crate name but \\\n-                                         found `{}`\",\n-                                        token_str));\n-            }\n+        let crate_name = self.parse_ident();\n+        let (maybe_path, ident) = if self.eat_keyword(keywords::As) {\n+            (Some(crate_name.name), self.parse_ident())\n+        } else {\n+            (None, crate_name)\n         };\n         self.expect(&token::Semi);\n "}, {"sha": "021ec4738ed94416797fd687d1178be21eaaad34", "filename": "src/libsyntax/std_inject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibsyntax%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Flibsyntax%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fstd_inject.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -52,7 +52,7 @@ struct StandardLibraryInjector {\n impl fold::Folder for StandardLibraryInjector {\n     fn fold_crate(&mut self, mut krate: ast::Crate) -> ast::Crate {\n \n-        // The name to use in `extern crate \"name\" as std;`\n+        // The name to use in `extern crate name as std;`\n         let actual_crate_name = match self.alt_std_name {\n             Some(ref s) => token::intern(&s),\n             None => token::intern(\"std\"),"}, {"sha": "fa5722ae6a31ba51392d1f986b1dc866c6b06321", "filename": "src/test/auxiliary/issue-12133-dylib2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,5 +12,5 @@\n \n #![crate_type = \"dylib\"]\n \n-extern crate \"issue-12133-rlib\" as a;\n-extern crate \"issue-12133-dylib\" as b;\n+extern crate issue_12133_rlib as a;\n+extern crate issue_12133_dylib as b;"}, {"sha": "c0539aa1b6e20c2f41f1319d78eb37e5246df36e", "filename": "src/test/auxiliary/issue-13560-3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,5 +12,5 @@\n \n #![crate_type = \"rlib\"]\n \n-#[macro_use] #[no_link] extern crate \"issue-13560-1\" as t1;\n-#[macro_use] extern crate \"issue-13560-2\" as t2;\n+#[macro_use] #[no_link] extern crate issue_13560_1 as t1;\n+#[macro_use] extern crate issue_13560_2 as t2;"}, {"sha": "554170bc130377b51268fdbc3ee2098ad36de73e", "filename": "src/test/auxiliary/issue-13620-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13620-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13620-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13620-2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern crate \"issue-13620-1\" as crate1;\n+extern crate issue_13620_1 as crate1;\n \n pub static FOO2: crate1::Foo = crate1::FOO;"}, {"sha": "bb51417528aef724fb5fcf913109218820046203", "filename": "src/test/auxiliary/issue-13872-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13872-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13872-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13872-2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern crate \"issue-13872-1\" as foo;\n+extern crate issue_13872_1 as foo;\n \n pub use foo::A::B;"}, {"sha": "e20618f1ec076d2aab145666b1e30ef905990e48", "filename": "src/test/auxiliary/issue-13872-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13872-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fissue-13872-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13872-3.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern crate \"issue-13872-2\" as bar;\n+extern crate issue_13872_2 as bar;\n \n use bar::B;\n "}, {"sha": "2ccdb4e086447f642b43c9f8debcece691047524", "filename": "src/test/auxiliary/static-function-pointer-aux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fstatic-function-pointer-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fstatic-function-pointer-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic-function-pointer-aux.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_name=\"static-function-pointer-aux\"]\n \n pub fn f(x: isize) -> isize { -x }\n "}, {"sha": "4980eb8b91386b681911f1d5174ab628179ed76f", "filename": "src/test/auxiliary/syntax_extension_with_dll_deps_2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fsyntax_extension_with_dll_deps_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Fsyntax_extension_with_dll_deps_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsyntax_extension_with_dll_deps_2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n #![crate_type = \"dylib\"]\n #![feature(plugin_registrar, quote, rustc_private)]\n \n-extern crate \"syntax_extension_with_dll_deps_1\" as other;\n+extern crate syntax_extension_with_dll_deps_1 as other;\n extern crate syntax;\n extern crate rustc;\n "}, {"sha": "c1168a912dc6846d8085012f5873109143771318", "filename": "src/test/auxiliary/trait_default_method_xc_aux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_name=\"trait_default_method_xc_aux\"]\n-\n pub struct Something { pub x: isize }\n \n pub trait A {"}, {"sha": "7443ef9c0f35943967dce12cc2e374950e914851", "filename": "src/test/auxiliary/trait_default_method_xc_aux_2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:trait_default_method_xc_aux.rs\n \n-extern crate \"trait_default_method_xc_aux\" as aux;\n+extern crate trait_default_method_xc_aux as aux;\n use aux::A;\n \n pub struct a_struct { pub x: isize }"}, {"sha": "29df0fa705e1a72c57624b3260078eac9d9a25ac", "filename": "src/test/compile-fail/bad-crate-id2.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1c0e1a80e54a4d231e01f2bf81c8c9529afd4ba5/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c0e1a80e54a4d231e01f2bf81c8c9529afd4ba5/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs?ref=1c0e1a80e54a4d231e01f2bf81c8c9529afd4ba5", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-extern crate \"#a\" as bar; //~ ERROR: invalid character `#` in crate name: `#a`\n-//~^ WARNING: obsolete syntax\n-\n-fn main() {}"}, {"sha": "6b7b9c8914955ca52233e9779884e0f80a8beae5", "filename": "src/test/compile-fail/use-meta-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fcompile-fail%2Fuse-meta-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fcompile-fail%2Fuse-meta-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-meta-mismatch.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,6 +10,6 @@\n \n // error-pattern:can't find crate for `extra`\n \n-extern crate \"fake-crate\" as extra;\n+extern crate fake_crate as extra;\n \n fn main() { }"}, {"sha": "708d56442fe82b8fa15327814eff464547a34544", "filename": "src/test/compile-fail/weak-lang-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -17,4 +17,4 @@\n #![no_std]\n \n extern crate core;\n-extern crate \"weak-lang-items\" as other;\n+extern crate weak_lang_items;"}, {"sha": "1aabd549ca59506d8330cd52d1a2be91a47df7ba", "filename": "src/test/debuginfo/basic-types-globals-metadata.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,33 +12,33 @@\n \n // compile-flags:-g\n // gdb-command:run\n-// gdb-command:whatis 'basic-types-globals-metadata::B'\n+// gdb-command:whatis 'basic_types_globals_metadata::B'\n // gdb-check:type = bool\n-// gdb-command:whatis 'basic-types-globals-metadata::I'\n+// gdb-command:whatis 'basic_types_globals_metadata::I'\n // gdb-check:type = isize\n-// gdb-command:whatis 'basic-types-globals-metadata::C'\n+// gdb-command:whatis 'basic_types_globals_metadata::C'\n // gdb-check:type = char\n-// gdb-command:whatis 'basic-types-globals-metadata::I8'\n+// gdb-command:whatis 'basic_types_globals_metadata::I8'\n // gdb-check:type = i8\n-// gdb-command:whatis 'basic-types-globals-metadata::I16'\n+// gdb-command:whatis 'basic_types_globals_metadata::I16'\n // gdb-check:type = i16\n-// gdb-command:whatis 'basic-types-globals-metadata::I32'\n+// gdb-command:whatis 'basic_types_globals_metadata::I32'\n // gdb-check:type = i32\n-// gdb-command:whatis 'basic-types-globals-metadata::I64'\n+// gdb-command:whatis 'basic_types_globals_metadata::I64'\n // gdb-check:type = i64\n-// gdb-command:whatis 'basic-types-globals-metadata::U'\n+// gdb-command:whatis 'basic_types_globals_metadata::U'\n // gdb-check:type = usize\n-// gdb-command:whatis 'basic-types-globals-metadata::U8'\n+// gdb-command:whatis 'basic_types_globals_metadata::U8'\n // gdb-check:type = u8\n-// gdb-command:whatis 'basic-types-globals-metadata::U16'\n+// gdb-command:whatis 'basic_types_globals_metadata::U16'\n // gdb-check:type = u16\n-// gdb-command:whatis 'basic-types-globals-metadata::U32'\n+// gdb-command:whatis 'basic_types_globals_metadata::U32'\n // gdb-check:type = u32\n-// gdb-command:whatis 'basic-types-globals-metadata::U64'\n+// gdb-command:whatis 'basic_types_globals_metadata::U64'\n // gdb-check:type = u64\n-// gdb-command:whatis 'basic-types-globals-metadata::F32'\n+// gdb-command:whatis 'basic_types_globals_metadata::F32'\n // gdb-check:type = f32\n-// gdb-command:whatis 'basic-types-globals-metadata::F64'\n+// gdb-command:whatis 'basic_types_globals_metadata::F64'\n // gdb-check:type = f64\n // gdb-command:continue\n "}, {"sha": "f0c187fd223781fa1e80f6d4ee4b731f9589c930", "filename": "src/test/debuginfo/basic-types-globals.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -18,33 +18,33 @@\n \n // compile-flags:-g\n // gdb-command:run\n-// gdb-command:print 'basic-types-globals::B'\n+// gdb-command:print 'basic_types_globals::B'\n // gdb-check:$1 = false\n-// gdb-command:print 'basic-types-globals::I'\n+// gdb-command:print 'basic_types_globals::I'\n // gdb-check:$2 = -1\n-// gdb-command:print 'basic-types-globals::C'\n+// gdb-command:print 'basic_types_globals::C'\n // gdb-check:$3 = 97\n-// gdb-command:print/d 'basic-types-globals::I8'\n+// gdb-command:print/d 'basic_types_globals::I8'\n // gdb-check:$4 = 68\n-// gdb-command:print 'basic-types-globals::I16'\n+// gdb-command:print 'basic_types_globals::I16'\n // gdb-check:$5 = -16\n-// gdb-command:print 'basic-types-globals::I32'\n+// gdb-command:print 'basic_types_globals::I32'\n // gdb-check:$6 = -32\n-// gdb-command:print 'basic-types-globals::I64'\n+// gdb-command:print 'basic_types_globals::I64'\n // gdb-check:$7 = -64\n-// gdb-command:print 'basic-types-globals::U'\n+// gdb-command:print 'basic_types_globals::U'\n // gdb-check:$8 = 1\n-// gdb-command:print/d 'basic-types-globals::U8'\n+// gdb-command:print/d 'basic_types_globals::U8'\n // gdb-check:$9 = 100\n-// gdb-command:print 'basic-types-globals::U16'\n+// gdb-command:print 'basic_types_globals::U16'\n // gdb-check:$10 = 16\n-// gdb-command:print 'basic-types-globals::U32'\n+// gdb-command:print 'basic_types_globals::U32'\n // gdb-check:$11 = 32\n-// gdb-command:print 'basic-types-globals::U64'\n+// gdb-command:print 'basic_types_globals::U64'\n // gdb-check:$12 = 64\n-// gdb-command:print 'basic-types-globals::F32'\n+// gdb-command:print 'basic_types_globals::F32'\n // gdb-check:$13 = 2.5\n-// gdb-command:print 'basic-types-globals::F64'\n+// gdb-command:print 'basic_types_globals::F64'\n // gdb-check:$14 = 3.5\n // gdb-command:continue\n "}, {"sha": "4094c2e9b133928ff14a770d8433adab863c0570", "filename": "src/test/debuginfo/basic-types-mut-globals.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -21,64 +21,64 @@\n // gdb-command:run\n \n // Check initializers\n-// gdb-command:print 'basic-types-mut-globals::B'\n+// gdb-command:print 'basic_types_mut_globals::B'\n // gdb-check:$1 = false\n-// gdb-command:print 'basic-types-mut-globals::I'\n+// gdb-command:print 'basic_types_mut_globals::I'\n // gdb-check:$2 = -1\n-// gdb-command:print 'basic-types-mut-globals::C'\n+// gdb-command:print 'basic_types_mut_globals::C'\n // gdb-check:$3 = 97\n-// gdb-command:print/d 'basic-types-mut-globals::I8'\n+// gdb-command:print/d 'basic_types_mut_globals::I8'\n // gdb-check:$4 = 68\n-// gdb-command:print 'basic-types-mut-globals::I16'\n+// gdb-command:print 'basic_types_mut_globals::I16'\n // gdb-check:$5 = -16\n-// gdb-command:print 'basic-types-mut-globals::I32'\n+// gdb-command:print 'basic_types_mut_globals::I32'\n // gdb-check:$6 = -32\n-// gdb-command:print 'basic-types-mut-globals::I64'\n+// gdb-command:print 'basic_types_mut_globals::I64'\n // gdb-check:$7 = -64\n-// gdb-command:print 'basic-types-mut-globals::U'\n+// gdb-command:print 'basic_types_mut_globals::U'\n // gdb-check:$8 = 1\n-// gdb-command:print/d 'basic-types-mut-globals::U8'\n+// gdb-command:print/d 'basic_types_mut_globals::U8'\n // gdb-check:$9 = 100\n-// gdb-command:print 'basic-types-mut-globals::U16'\n+// gdb-command:print 'basic_types_mut_globals::U16'\n // gdb-check:$10 = 16\n-// gdb-command:print 'basic-types-mut-globals::U32'\n+// gdb-command:print 'basic_types_mut_globals::U32'\n // gdb-check:$11 = 32\n-// gdb-command:print 'basic-types-mut-globals::U64'\n+// gdb-command:print 'basic_types_mut_globals::U64'\n // gdb-check:$12 = 64\n-// gdb-command:print 'basic-types-mut-globals::F32'\n+// gdb-command:print 'basic_types_mut_globals::F32'\n // gdb-check:$13 = 2.5\n-// gdb-command:print 'basic-types-mut-globals::F64'\n+// gdb-command:print 'basic_types_mut_globals::F64'\n // gdb-check:$14 = 3.5\n // gdb-command:continue\n \n // Check new values\n-// gdb-command:print 'basic-types-mut-globals'::B\n+// gdb-command:print 'basic_types_mut_globals'::B\n // gdb-check:$15 = true\n-// gdb-command:print 'basic-types-mut-globals'::I\n+// gdb-command:print 'basic_types_mut_globals'::I\n // gdb-check:$16 = 2\n-// gdb-command:print 'basic-types-mut-globals'::C\n+// gdb-command:print 'basic_types_mut_globals'::C\n // gdb-check:$17 = 102\n-// gdb-command:print/d 'basic-types-mut-globals'::I8\n+// gdb-command:print/d 'basic_types_mut_globals'::I8\n // gdb-check:$18 = 78\n-// gdb-command:print 'basic-types-mut-globals'::I16\n+// gdb-command:print 'basic_types_mut_globals'::I16\n // gdb-check:$19 = -26\n-// gdb-command:print 'basic-types-mut-globals'::I32\n+// gdb-command:print 'basic_types_mut_globals'::I32\n // gdb-check:$20 = -12\n-// gdb-command:print 'basic-types-mut-globals'::I64\n+// gdb-command:print 'basic_types_mut_globals'::I64\n // gdb-check:$21 = -54\n-// gdb-command:print 'basic-types-mut-globals'::U\n+// gdb-command:print 'basic_types_mut_globals'::U\n // gdb-check:$22 = 5\n-// gdb-command:print/d 'basic-types-mut-globals'::U8\n+// gdb-command:print/d 'basic_types_mut_globals'::U8\n // gdb-check:$23 = 20\n-// gdb-command:print 'basic-types-mut-globals'::U16\n+// gdb-command:print 'basic_types_mut_globals'::U16\n // gdb-check:$24 = 32\n-// gdb-command:print 'basic-types-mut-globals'::U32\n+// gdb-command:print 'basic_types_mut_globals'::U32\n // gdb-check:$25 = 16\n-// gdb-command:print 'basic-types-mut-globals'::U64\n+// gdb-command:print 'basic_types_mut_globals'::U64\n // gdb-check:$26 = 128\n-// gdb-command:print 'basic-types-mut-globals'::F32\n+// gdb-command:print 'basic_types_mut_globals'::F32\n // gdb-check:$27 = 5.75\n-// gdb-command:print 'basic-types-mut-globals'::F64\n+// gdb-command:print 'basic_types_mut_globals'::F64\n // gdb-check:$28 = 9.25\n \n #![allow(unused_variables)]"}, {"sha": "7a285d90b9d6a1d053d79ec3885ba30c4d73e800", "filename": "src/test/debuginfo/c-style-enum.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -15,25 +15,25 @@\n \n // === GDB TESTS ===================================================================================\n \n-// gdb-command:print 'c-style-enum::SINGLE_VARIANT'\n+// gdb-command:print 'c_style_enum::SINGLE_VARIANT'\n // gdb-check:$1 = TheOnlyVariant\n \n-// gdb-command:print 'c-style-enum::AUTO_ONE'\n+// gdb-command:print 'c_style_enum::AUTO_ONE'\n // gdb-check:$2 = One\n \n-// gdb-command:print 'c-style-enum::AUTO_TWO'\n+// gdb-command:print 'c_style_enum::AUTO_TWO'\n // gdb-check:$3 = One\n \n-// gdb-command:print 'c-style-enum::AUTO_THREE'\n+// gdb-command:print 'c_style_enum::AUTO_THREE'\n // gdb-check:$4 = One\n \n-// gdb-command:print 'c-style-enum::MANUAL_ONE'\n+// gdb-command:print 'c_style_enum::MANUAL_ONE'\n // gdb-check:$5 = OneHundred\n \n-// gdb-command:print 'c-style-enum::MANUAL_TWO'\n+// gdb-command:print 'c_style_enum::MANUAL_TWO'\n // gdb-check:$6 = OneHundred\n \n-// gdb-command:print 'c-style-enum::MANUAL_THREE'\n+// gdb-command:print 'c_style_enum::MANUAL_THREE'\n // gdb-check:$7 = OneHundred\n \n // gdb-command:run\n@@ -59,16 +59,16 @@\n // gdb-command:print single_variant\n // gdb-check:$14 = TheOnlyVariant\n \n-// gdb-command:print 'c-style-enum::AUTO_TWO'\n+// gdb-command:print 'c_style_enum::AUTO_TWO'\n // gdb-check:$15 = Two\n \n-// gdb-command:print 'c-style-enum::AUTO_THREE'\n+// gdb-command:print 'c_style_enum::AUTO_THREE'\n // gdb-check:$16 = Three\n \n-// gdb-command:print 'c-style-enum::MANUAL_TWO'\n+// gdb-command:print 'c_style_enum::MANUAL_TWO'\n // gdb-check:$17 = OneThousand\n \n-// gdb-command:print 'c-style-enum::MANUAL_THREE'\n+// gdb-command:print 'c_style_enum::MANUAL_THREE'\n // gdb-check:$18 = OneMillion\n \n "}, {"sha": "a459badfa8a3c2f1ebbeda73ad5226ffbe2a5ac6", "filename": "src/test/debuginfo/generic-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -38,7 +38,7 @@\n // lldb-check:[...]$2 = AGenericStruct<f64, i32> { key: 4.5, value: 5 }\n \n // lldb-command:print float_int_float\n-// lldb-check:[...]$3 = AGenericStruct<f64, generic-struct::AGenericStruct<i32, f64>> { key: 6.5, value: AGenericStruct<i32, f64> { key: 7, value: 8.5 } }\n+// lldb-check:[...]$3 = AGenericStruct<f64, generic_struct::AGenericStruct<i32, f64>> { key: 6.5, value: AGenericStruct<i32, f64> { key: 7, value: 8.5 } }\n \n \n #![omit_gdb_pretty_printer_section]"}, {"sha": "1d406af10a21564a5193dfe6edbedcbacd64b46d", "filename": "src/test/debuginfo/lexical-scopes-in-block-expression.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -16,7 +16,7 @@\n \n // gdb-command:run\n \n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$1 = 0\n \n // STRUCT EXPRESSION\n@@ -28,7 +28,7 @@\n \n // gdb-command:print val\n // gdb-check:$4 = 11\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$5 = 1\n // gdb-command:print ten\n // gdb-check:$6 = 10\n@@ -49,7 +49,7 @@\n \n // gdb-command:print val\n // gdb-check:$11 = 12\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$12 = 2\n // gdb-command:print ten\n // gdb-check:$13 = 10\n@@ -70,7 +70,7 @@\n \n // gdb-command:print val\n // gdb-check:$18 = 13\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$19 = 3\n // gdb-command:print ten\n // gdb-check:$20 = 10\n@@ -91,7 +91,7 @@\n \n // gdb-command:print val\n // gdb-check:$25 = 14\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$26 = 4\n // gdb-command:print ten\n // gdb-check:$27 = 10\n@@ -112,7 +112,7 @@\n \n // gdb-command:print val\n // gdb-check:$32 = 15\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$33 = 5\n // gdb-command:print ten\n // gdb-check:$34 = 10\n@@ -133,7 +133,7 @@\n \n // gdb-command:print val\n // gdb-check:$39 = 16\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$40 = 6\n // gdb-command:print ten\n // gdb-check:$41 = 10\n@@ -155,7 +155,7 @@\n \n // gdb-command:print val\n // gdb-check:$46 = 17\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$47 = 7\n // gdb-command:print ten\n // gdb-check:$48 = 10\n@@ -176,7 +176,7 @@\n \n // gdb-command:print val\n // gdb-check:$53 = 18\n-// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-command:print 'lexical_scopes_in_block_expression::MUT_INT'\n // gdb-check:$54 = 8\n // gdb-command:print ten\n // gdb-check:$55 = 10"}, {"sha": "36007c1093297e14ba015b3eb5f3047cb8659ca0", "filename": "src/test/debuginfo/simple-struct.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,22 +14,22 @@\n \n // === GDB TESTS ===================================================================================\n \n-// gdb-command:print 'simple-struct::NO_PADDING_16'\n+// gdb-command:print 'simple_struct::NO_PADDING_16'\n // gdb-check:$1 = {x = 1000, y = -1001}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_32'\n+// gdb-command:print 'simple_struct::NO_PADDING_32'\n // gdb-check:$2 = {x = 1, y = 2, z = 3}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_64'\n+// gdb-command:print 'simple_struct::NO_PADDING_64'\n // gdb-check:$3 = {x = 4, y = 5, z = 6}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_163264'\n+// gdb-command:print 'simple_struct::NO_PADDING_163264'\n // gdb-check:$4 = {a = 7, b = 8, c = 9, d = 10}\n \n-// gdb-command:print 'simple-struct::INTERNAL_PADDING'\n+// gdb-command:print 'simple_struct::INTERNAL_PADDING'\n // gdb-check:$5 = {x = 11, y = 12}\n \n-// gdb-command:print 'simple-struct::PADDING_AT_END'\n+// gdb-command:print 'simple_struct::PADDING_AT_END'\n // gdb-check:$6 = {x = 13, y = 14}\n \n // gdb-command:run\n@@ -52,22 +52,22 @@\n // gdb-command:print padding_at_end\n // gdb-check:$12 = {x = -10014, y = 10015}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_16'\n+// gdb-command:print 'simple_struct::NO_PADDING_16'\n // gdb-check:$13 = {x = 100, y = -101}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_32'\n+// gdb-command:print 'simple_struct::NO_PADDING_32'\n // gdb-check:$14 = {x = -15, y = -16, z = 17}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_64'\n+// gdb-command:print 'simple_struct::NO_PADDING_64'\n // gdb-check:$15 = {x = -18, y = 19, z = 20}\n \n-// gdb-command:print 'simple-struct::NO_PADDING_163264'\n+// gdb-command:print 'simple_struct::NO_PADDING_163264'\n // gdb-check:$16 = {a = -21, b = 22, c = 23, d = 24}\n \n-// gdb-command:print 'simple-struct::INTERNAL_PADDING'\n+// gdb-command:print 'simple_struct::INTERNAL_PADDING'\n // gdb-check:$17 = {x = 25, y = -26}\n \n-// gdb-command:print 'simple-struct::PADDING_AT_END'\n+// gdb-command:print 'simple_struct::PADDING_AT_END'\n // gdb-check:$18 = {x = -27, y = 28}\n \n // gdb-command:continue"}, {"sha": "3c3a85a34c7cf29c2ab58692f2807764f48af297", "filename": "src/test/debuginfo/simple-tuple.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,21 +14,21 @@\n \n // === GDB TESTS ===================================================================================\n \n-// gdb-command:print/d 'simple-tuple::NO_PADDING_8'\n+// gdb-command:print/d 'simple_tuple::NO_PADDING_8'\n // gdb-check:$1 = {-50, 50}\n-// gdb-command:print 'simple-tuple::NO_PADDING_16'\n+// gdb-command:print 'simple_tuple::NO_PADDING_16'\n // gdb-check:$2 = {-1, 2, 3}\n-// gdb-command:print 'simple-tuple::NO_PADDING_32'\n+// gdb-command:print 'simple_tuple::NO_PADDING_32'\n // gdb-check:$3 = {4, 5, 6}\n-// gdb-command:print 'simple-tuple::NO_PADDING_64'\n+// gdb-command:print 'simple_tuple::NO_PADDING_64'\n // gdb-check:$4 = {7, 8, 9}\n \n-// gdb-command:print 'simple-tuple::INTERNAL_PADDING_1'\n+// gdb-command:print 'simple_tuple::INTERNAL_PADDING_1'\n // gdb-check:$5 = {10, 11}\n-// gdb-command:print 'simple-tuple::INTERNAL_PADDING_2'\n+// gdb-command:print 'simple_tuple::INTERNAL_PADDING_2'\n // gdb-check:$6 = {12, 13, 14, 15}\n \n-// gdb-command:print 'simple-tuple::PADDING_AT_END'\n+// gdb-command:print 'simple_tuple::PADDING_AT_END'\n // gdb-check:$7 = {16, 17}\n \n // gdb-command:run\n@@ -50,21 +50,21 @@\n // gdb-command:print paddingAtEnd\n // gdb-check:$14 = {15, 16}\n \n-// gdb-command:print/d 'simple-tuple::NO_PADDING_8'\n+// gdb-command:print/d 'simple_tuple::NO_PADDING_8'\n // gdb-check:$15 = {-127, 127}\n-// gdb-command:print 'simple-tuple::NO_PADDING_16'\n+// gdb-command:print 'simple_tuple::NO_PADDING_16'\n // gdb-check:$16 = {-10, 10, 9}\n-// gdb-command:print 'simple-tuple::NO_PADDING_32'\n+// gdb-command:print 'simple_tuple::NO_PADDING_32'\n // gdb-check:$17 = {14, 15, 16}\n-// gdb-command:print 'simple-tuple::NO_PADDING_64'\n+// gdb-command:print 'simple_tuple::NO_PADDING_64'\n // gdb-check:$18 = {17, 18, 19}\n \n-// gdb-command:print 'simple-tuple::INTERNAL_PADDING_1'\n+// gdb-command:print 'simple_tuple::INTERNAL_PADDING_1'\n // gdb-check:$19 = {110, 111}\n-// gdb-command:print 'simple-tuple::INTERNAL_PADDING_2'\n+// gdb-command:print 'simple_tuple::INTERNAL_PADDING_2'\n // gdb-check:$20 = {112, 113, 114, 115}\n \n-// gdb-command:print 'simple-tuple::PADDING_AT_END'\n+// gdb-command:print 'simple_tuple::PADDING_AT_END'\n // gdb-check:$21 = {116, 117}\n \n "}, {"sha": "e7ee9e2ccf8188ca431ba29c029955cc6fb81351", "filename": "src/test/debuginfo/type-names.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Ftype-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Ftype-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftype-names.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -21,10 +21,10 @@\n // gdb-check:type = struct Struct1\n \n // gdb-command:whatis generic_struct1\n-// gdb-check:type = struct GenericStruct<type-names::Mod1::Struct2, type-names::Mod1::Mod2::Struct3>\n+// gdb-check:type = struct GenericStruct<type_names::Mod1::Struct2, type_names::Mod1::Mod2::Struct3>\n \n // gdb-command:whatis generic_struct2\n-// gdb-check:type = struct GenericStruct<type-names::Struct1, extern \"fastcall\" fn(isize) -> usize>\n+// gdb-check:type = struct GenericStruct<type_names::Struct1, extern \"fastcall\" fn(isize) -> usize>\n \n // gdb-command:whatis mod_struct\n // gdb-check:type = struct Struct2\n@@ -41,65 +41,65 @@\n // gdb-check:type = union Enum2\n \n // gdb-command:whatis generic_enum_1\n-// gdb-check:type = union Enum3<type-names::Mod1::Struct2>\n+// gdb-check:type = union Enum3<type_names::Mod1::Struct2>\n \n // gdb-command:whatis generic_enum_2\n-// gdb-check:type = union Enum3<type-names::Struct1>\n+// gdb-check:type = union Enum3<type_names::Struct1>\n \n \n // TUPLES\n // gdb-command:whatis tuple1\n-// gdb-check:type = struct (u32, type-names::Struct1, type-names::Mod1::Mod2::Enum3<type-names::Mod1::Struct2>)\n+// gdb-check:type = struct (u32, type_names::Struct1, type_names::Mod1::Mod2::Enum3<type_names::Mod1::Struct2>)\n \n // gdb-command:whatis tuple2\n-// gdb-check:type = struct ((type-names::Struct1, type-names::Mod1::Mod2::Struct3), type-names::Mod1::Enum2, char)\n+// gdb-check:type = struct ((type_names::Struct1, type_names::Mod1::Mod2::Struct3), type_names::Mod1::Enum2, char)\n \n \n // BOX\n // gdb-command:whatis box1\n // gdb-check:type = struct (Box<f32>, i32)\n \n // gdb-command:whatis box2\n-// gdb-check:type = struct (Box<type-names::Mod1::Mod2::Enum3<f32>>, i32)\n+// gdb-check:type = struct (Box<type_names::Mod1::Mod2::Enum3<f32>>, i32)\n \n \n // REFERENCES\n // gdb-command:whatis ref1\n-// gdb-check:type = struct (&type-names::Struct1, i32)\n+// gdb-check:type = struct (&type_names::Struct1, i32)\n \n // gdb-command:whatis ref2\n-// gdb-check:type = struct (&type-names::GenericStruct<char, type-names::Struct1>, i32)\n+// gdb-check:type = struct (&type_names::GenericStruct<char, type_names::Struct1>, i32)\n \n // gdb-command:whatis mut_ref1\n-// gdb-check:type = struct (&mut type-names::Struct1, i32)\n+// gdb-check:type = struct (&mut type_names::Struct1, i32)\n \n // gdb-command:whatis mut_ref2\n-// gdb-check:type = struct (&mut type-names::GenericStruct<type-names::Mod1::Enum2, f64>, i32)\n+// gdb-check:type = struct (&mut type_names::GenericStruct<type_names::Mod1::Enum2, f64>, i32)\n \n \n // RAW POINTERS\n // gdb-command:whatis mut_ptr1\n-// gdb-check:type = struct (*mut type-names::Struct1, isize)\n+// gdb-check:type = struct (*mut type_names::Struct1, isize)\n \n // gdb-command:whatis mut_ptr2\n // gdb-check:type = struct (*mut isize, isize)\n \n // gdb-command:whatis mut_ptr3\n-// gdb-check:type = struct (*mut type-names::Mod1::Mod2::Enum3<type-names::Struct1>, isize)\n+// gdb-check:type = struct (*mut type_names::Mod1::Mod2::Enum3<type_names::Struct1>, isize)\n \n // gdb-command:whatis const_ptr1\n-// gdb-check:type = struct (*const type-names::Struct1, isize)\n+// gdb-check:type = struct (*const type_names::Struct1, isize)\n \n // gdb-command:whatis const_ptr2\n // gdb-check:type = struct (*const isize, isize)\n \n // gdb-command:whatis const_ptr3\n-// gdb-check:type = struct (*const type-names::Mod1::Mod2::Enum3<type-names::Struct1>, isize)\n+// gdb-check:type = struct (*const type_names::Mod1::Mod2::Enum3<type_names::Struct1>, isize)\n \n \n // VECTORS\n // gdb-command:whatis fixed_size_vec1\n-// gdb-check:type = struct ([type-names::Struct1; 3], i16)\n+// gdb-check:type = struct ([type_names::Struct1; 3], i16)\n \n // gdb-command:whatis fixed_size_vec2\n // gdb-check:type = struct ([usize; 3], i16)\n@@ -108,7 +108,7 @@\n // gdb-check:type = struct &[usize]\n \n // gdb-command:whatis slice2\n-// gdb-check:type = struct &[type-names::Mod1::Enum2]\n+// gdb-check:type = struct &[type_names::Mod1::Enum2]\n \n \n // TRAITS\n@@ -122,18 +122,18 @@\n // gdb-check:type = struct &mut Trait1\n \n // gdb-command:whatis generic_box_trait\n-// gdb-check:type = struct Box<Trait2<i32, type-names::Mod1::Struct2>>\n+// gdb-check:type = struct Box<Trait2<i32, type_names::Mod1::Struct2>>\n \n // gdb-command:whatis generic_ref_trait\n-// gdb-check:type = struct &Trait2<type-names::Struct1, type-names::Struct1>\n+// gdb-check:type = struct &Trait2<type_names::Struct1, type_names::Struct1>\n \n // gdb-command:whatis generic_mut_ref_trait\n-// gdb-check:type = struct &mut Trait2<type-names::Mod1::Mod2::Struct3, type-names::GenericStruct<usize, isize>>\n+// gdb-check:type = struct &mut Trait2<type_names::Mod1::Mod2::Struct3, type_names::GenericStruct<usize, isize>>\n \n \n // BARE FUNCTIONS\n // gdb-command:whatis rust_fn\n-// gdb-check:type = struct (fn(core::option::Option<isize>, core::option::Option<&type-names::Mod1::Struct2>), usize)\n+// gdb-check:type = struct (fn(core::option::Option<isize>, core::option::Option<&type_names::Mod1::Struct2>), usize)\n \n // gdb-command:whatis extern_c_fn\n // gdb-check:type = struct (extern \"C\" fn(isize), usize)\n@@ -148,10 +148,10 @@\n // gdb-check:type = struct (fn(f64) -> usize, usize)\n \n // gdb-command:whatis extern_c_fn_with_return_value\n-// gdb-check:type = struct (extern \"C\" fn() -> type-names::Struct1, usize)\n+// gdb-check:type = struct (extern \"C\" fn() -> type_names::Struct1, usize)\n \n // gdb-command:whatis unsafe_fn_with_return_value\n-// gdb-check:type = struct (unsafe fn(type-names::GenericStruct<u16, u8>) -> type-names::Mod1::Struct2, usize)\n+// gdb-check:type = struct (unsafe fn(type_names::GenericStruct<u16, u8>) -> type_names::Mod1::Struct2, usize)\n \n // gdb-command:whatis extern_stdcall_fn_with_return_value\n // gdb-check:type = struct (extern \"stdcall\" fn(Box<isize>) -> usize, usize)\n@@ -160,7 +160,7 @@\n // gdb-check:type = struct (fn(isize) -> isize, usize)\n \n // gdb-command:whatis generic_function_struct3\n-// gdb-check:type = struct (fn(type-names::Mod1::Mod2::Struct3) -> type-names::Mod1::Mod2::Struct3, usize)\n+// gdb-check:type = struct (fn(type_names::Mod1::Mod2::Struct3) -> type_names::Mod1::Mod2::Struct3, usize)\n \n // gdb-command:whatis variadic_function\n // gdb-check:type = struct (unsafe extern \"C\" fn(*const u8, ...) -> isize, usize)"}, {"sha": "3759082db2caabb0ca7b55325c80ccf0d0533a87", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -49,9 +49,9 @@\n // gdb-command:print padded_struct.data_ptr[1]\n // gdb-check:$13 = {x = 13, y = 14, z = 15}\n \n-// gdb-command:print 'vec-slices::MUT_VECT_SLICE'.length\n+// gdb-command:print 'vec_slices::MUT_VECT_SLICE'.length\n // gdb-check:$14 = 2\n-// gdb-command:print *((int64_t[2]*)('vec-slices::MUT_VECT_SLICE'.data_ptr))\n+// gdb-command:print *((int64_t[2]*)('vec_slices::MUT_VECT_SLICE'.data_ptr))\n // gdb-check:$15 = {64, 65}\n \n "}, {"sha": "f1f18115825caf6b7d8130870f8c423acb5a0ffb", "filename": "src/test/parse-fail/bad-lit-suffixes.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fparse-fail%2Fbad-lit-suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Fparse-fail%2Fbad-lit-suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fbad-lit-suffixes.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -9,11 +9,6 @@\n // except according to those terms.\n \n \n-extern crate\n-    \"foo\"suffix //~ ERROR extern crate name with a suffix is illegal\n-                //~^ WARNING: obsolete syntax\n-     as foo;\n-\n extern\n     \"C\"suffix //~ ERROR ABI spec with a suffix is illegal\n     fn foo() {}"}, {"sha": "783d826a53dabbd7d4d96197defae5b2ce8de264", "filename": "src/test/run-make/output-with-hyphens/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Foutput-with-hyphens%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Foutput-with-hyphens%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-with-hyphens%2FMakefile?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) foo-bar.rs\n+\t[ -f $(TMPDIR)/$(call BIN,foo-bar) ]\n+\t[ -f $(TMPDIR)/libfoo_bar.rlib ]"}, {"sha": "2f93b2d1ead01a7fba19d14a1aa65db12f0bf669", "filename": "src/test/run-make/output-with-hyphens/foo-bar.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Foutput-with-hyphens%2Ffoo-bar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Foutput-with-hyphens%2Ffoo-bar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-with-hyphens%2Ffoo-bar.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern crate \"\" as foo; //~ ERROR: crate name must not be empty\n-//~^ WARNING: obsolete syntax\n+#![crate_type = \"lib\"]\n+#![crate_type = \"bin\"]\n \n fn main() {}", "previous_filename": "src/test/compile-fail/bad-crate-id.rs"}, {"sha": "5310ed25d3b1bd8be509683cb5b171bb37d8c95b", "filename": "src/test/run-make/save-analysis/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -15,7 +15,7 @@\n extern crate graphviz;\n // A simple rust project\n \n-extern crate \"flate\" as myflate;\n+extern crate flate as myflate;\n \n use std::collections::{HashMap,HashSet};\n use std::cell::RefCell;"}, {"sha": "8b69c68279dca0a1f36a95e88562041036395ea0", "filename": "src/test/run-make/weird-output-filenames/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,4 +12,4 @@ all:\n \t\t| grep \"invalid character.*in crate name:\"\n \tcp foo.rs $(TMPDIR)/-foo.rs\n \t$(RUSTC) $(TMPDIR)/-foo.rs 2>&1 \\\n-\t\t| grep \"soon cannot contain hyphens:\"\n+\t\t| grep 'crate names cannot start with a `-`'"}, {"sha": "1541e809b6178d24a77c953d764e784c1dfcf023", "filename": "src/test/run-pass-fulldeps/issue-13560.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -16,7 +16,7 @@\n // Regression test for issue #13560, the test itself is all in the dependent\n // libraries. The fail which previously failed to compile is the one numbered 3.\n \n-extern crate \"issue-13560-2\" as t2;\n-extern crate \"issue-13560-3\" as t3;\n+extern crate issue_13560_2 as t2;\n+extern crate issue_13560_3 as t3;\n \n fn main() {}"}, {"sha": "172d3e31d45e8c73a4e3e80b5042357f61c26135", "filename": "src/test/run-pass-fulldeps/issue-16822.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:issue-16822.rs\n \n-extern crate \"issue-16822\" as lib;\n+extern crate issue_16822 as lib;\n \n use std::cell::RefCell;\n "}, {"sha": "8367fc110e137c734ddaa5ada7d75fe59614d719", "filename": "src/test/run-pass-fulldeps/issue-18502.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:issue-18502.rs\n \n-extern crate \"issue-18502\" as fmt;\n+extern crate issue_18502 as fmt;\n \n fn main() {\n     ::fmt::baz();"}, {"sha": "b2be87be4cb35397bf57e14443af8120f70537c4", "filename": "src/test/run-pass/associated-types-cc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fassociated-types-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fassociated-types-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-cc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n // Test that we are able to reference cross-crate traits that employ\n // associated types.\n \n-extern crate \"associated-types-cc-lib\" as bar;\n+extern crate associated_types_cc_lib as bar;\n \n use bar::Bar;\n "}, {"sha": "3b6614c18faa8cf2855bdca36e8f85a38d1f5a3c", "filename": "src/test/run-pass/blind-item-mixed-crate-use-item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fblind-item-mixed-crate-use-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fblind-item-mixed-crate-use-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblind-item-mixed-crate-use-item.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -21,14 +21,14 @@ mod m {\n const BAR: () = ();\n struct Data;\n use m::f;\n-extern crate \"blind-item-mixed-crate-use-item-foo\" as foo;\n+extern crate blind_item_mixed_crate_use_item_foo as foo;\n \n fn main() {\n     const BAR2: () = ();\n     struct Data2;\n     use m::g;\n \n-    extern crate \"blind-item-mixed-crate-use-item-foo2\" as foo2;\n+    extern crate blind_item_mixed_crate_use_item_foo2 as foo2;\n \n     f(Data, BAR, foo::X);\n     g(Data2, BAR2, foo2::Y);"}, {"sha": "a108f4dc5687469f54a1879ab6d0ed8f2c8c02d7", "filename": "src/test/run-pass/crate-name-attr-used.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fcrate-name-attr-used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fcrate-name-attr-used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-name-attr-used.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:--crate-name crate-name-attr-used -F unused-attributes\n+// compile-flags:--crate-name crate_name_attr_used -F unused-attributes\n \n // pretty-expanded FIXME #23616\n \n-#![crate_name = \"crate-name-attr-used\"]\n+#![crate_name = \"crate_name_attr_used\"]\n \n fn main() {}"}, {"sha": "fbc6c28fd4a580e6e43e208aa5cdbe385d3cd773", "filename": "src/test/run-pass/derive-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderive-no-std.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n \n extern crate core;\n extern crate rand;\n-extern crate \"serialize\" as rustc_serialize;\n+extern crate serialize as rustc_serialize;\n extern crate collections;\n \n // Issue #16803"}, {"sha": "1757ff51fed3f64bcff298ba4905a2ae4ab5ce34", "filename": "src/test/run-pass/extern-foreign-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fextern-foreign-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fextern-foreign-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-foreign-crate.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,6 +10,6 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"std\" as mystd;\n+extern crate std as mystd;\n \n pub fn main() {}"}, {"sha": "6deaec1905960abf1d8fb1ecf7e4bd4dd4fe8cba", "filename": "src/test/run-pass/for-loop-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n #![feature(lang_items, start, no_std, core, collections)]\n #![no_std]\n \n-extern crate \"std\" as other;\n+extern crate std as other;\n \n #[macro_use] extern crate core;\n #[macro_use] extern crate collections;"}, {"sha": "9204cdfd755b63ab552a85b88e8e1782b0274ca4", "filename": "src/test/run-pass/format-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-std.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n #![feature(lang_items, start, no_std, core, collections)]\n #![no_std]\n \n-extern crate \"std\" as other;\n+extern crate std as other;\n \n #[macro_use] extern crate core;\n #[macro_use] extern crate collections;"}, {"sha": "53d6f67f119eef142111718147b1c07b73bde5e9", "filename": "src/test/run-pass/issue-10028.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-10028.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-10028.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10028.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-10028\" as issue10028;\n+extern crate issue_10028 as issue10028;\n \n use issue10028::ZeroLengthThingWithDestructor;\n "}, {"sha": "14017ee1789242db25ec2182e5445459a7532f0b", "filename": "src/test/run-pass/issue-11224.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11224.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,6 +12,6 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-11224\" as unused;\n+extern crate issue_11224 as unused;\n \n pub fn main() {}"}, {"sha": "a74fdbe3de472b0112a06f076b90c19b2fd744a8", "filename": "src/test/run-pass/issue-11225-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-11225-1\" as foo;\n+extern crate issue_11225_1 as foo;\n \n pub fn main() {\n     foo::foo(1);"}, {"sha": "c6fc5e8b484e03e81edd38d200604f77086e4fd1", "filename": "src/test/run-pass/issue-11225-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-11225-2\" as foo;\n+extern crate issue_11225_2 as foo;\n \n pub fn main() {\n     foo::foo(1);"}, {"sha": "21ed30683f50fb9d6af2c7d9efb8bc3e142dd841", "filename": "src/test/run-pass/issue-11508.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11508.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:issue-11508.rs\n \n-extern crate \"issue-11508\" as rand;\n+extern crate issue_11508 as rand;\n \n use rand::{Closed01, random};\n "}, {"sha": "e5d95874be61fda8f16a8b0b2c7c38c9c175b177", "filename": "src/test/run-pass/issue-11529.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-11529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11529.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-11529\" as a;\n+extern crate issue_11529 as a;\n \n fn main() {\n     let one = 1;"}, {"sha": "d47bb818c4946641687517a34dd36cadc0362753", "filename": "src/test/run-pass/issue-12133-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-12133-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-12133-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12133-1.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-12133-rlib\" as a;\n-extern crate \"issue-12133-dylib\" as b;\n+extern crate issue_12133_rlib as a;\n+extern crate issue_12133_dylib as b;\n \n fn main() {}"}, {"sha": "580c487af0de9a803ba092b3ad63d32bb3c71e15", "filename": "src/test/run-pass/issue-12133-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-12133-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-12133-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12133-2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-12133-rlib\" as a;\n-extern crate \"issue-12133-dylib\" as b;\n+extern crate issue_12133_rlib as a;\n+extern crate issue_12133_dylib as b;\n \n fn main() {}"}, {"sha": "79a530785452ac58c1bfa1d0f8694a452aae9594", "filename": "src/test/run-pass/issue-12133-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,6 +14,6 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-12133-dylib2\" as other;\n+extern crate issue_12133_dylib2 as other;\n \n fn main() {}"}, {"sha": "4c46831418707bb0c95cda5b6497c23d88d396e3", "filename": "src/test/run-pass/issue-13620.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-13620.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-13620.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13620.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-13620-2\" as crate2;\n+extern crate issue_13620_2 as crate2;\n \n fn main() {\n     (crate2::FOO2.foo)();"}, {"sha": "e9fb7945d04007215093f75d3e69827273be0c2c", "filename": "src/test/run-pass/issue-13872.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-13872.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-13872.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13872.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-13872-3\" as other;\n+extern crate issue_13872_3 as other;\n \n fn main() {\n     other::foo();"}, {"sha": "dd5b7e722fe7bb775d533dc4b12d45d9d0fbb0aa", "filename": "src/test/run-pass/issue-14330.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-14330.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-14330.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14330.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -10,6 +10,6 @@\n \n // pretty-expanded FIXME #23616\n \n-#[macro_use] extern crate \"std\" as std2;\n+#[macro_use] extern crate std as std2;\n \n fn main() {}"}, {"sha": "046d888030f0c4acc929a054a9df1e24d9b23670", "filename": "src/test/run-pass/issue-14421.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-14421.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-14421.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14421.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-14421\" as bug_lib;\n+extern crate issue_14421 as bug_lib;\n \n use bug_lib::B;\n use bug_lib::make;"}, {"sha": "178a219f5bfc0b03d55f75ba451ab3da7da88409", "filename": "src/test/run-pass/issue-14422.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-14422.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-14422.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14422.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-14422\" as bug_lib;\n+extern crate issue_14422 as bug_lib;\n \n use bug_lib::B;\n use bug_lib::make;"}, {"sha": "f1ef57e44b1d5f54c1e1b5a056dcf6e847eaafb2", "filename": "src/test/run-pass/issue-15562.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-15562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-15562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15562.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-15562\" as i;\n+extern crate issue_15562 as i;\n \n pub fn main() {\n     extern {"}, {"sha": "54572296df7e0c4ecb9b9b91ccb4cf6c5eb499e3", "filename": "src/test/run-pass/issue-16643.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-16643.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-16643.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16643.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-16643\" as i;\n+extern crate issue_16643 as i;\n \n pub fn main() {\n     i::TreeBuilder { h: 3 }.process_token();"}, {"sha": "36e12b96c8744dd88b6f9c75f5f9335871ac5ecb", "filename": "src/test/run-pass/issue-17662.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-17662.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-17662.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17662.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-17662\" as i;\n+extern crate issue_17662 as i;\n \n use std::marker;\n "}, {"sha": "13e082eada884be65a7a5d69cbb649474782eafd", "filename": "src/test/run-pass/issue-17718.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-17718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-17718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17718.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n \n #![feature(core)]\n \n-extern crate \"issue-17718\" as other;\n+extern crate issue_17718 as other;\n \n use std::sync::atomic::{AtomicUsize, ATOMIC_USIZE_INIT, Ordering};\n "}, {"sha": "fb8158c6ddc600a24fc35582d11098add01e38cb", "filename": "src/test/run-pass/issue-18501.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18501.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18501.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18501.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -15,7 +15,7 @@\n // aux-build:issue-18501.rs\n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-18501\" as issue;\n+extern crate issue_18501 as issue;\n \n fn main() {\n     issue::pass_method();"}, {"sha": "b0b2f068bb74bb1be4f67cd62deee78da9bb132d", "filename": "src/test/run-pass/issue-18514.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18514.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18514.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18514.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -17,7 +17,7 @@\n // aux-build:issue-18514.rs\n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-18514\" as ice;\n+extern crate issue_18514 as ice;\n use ice::{Tr, St};\n \n fn main() {"}, {"sha": "277ad3260c514845eb81e830856e5579b23ca5f3", "filename": "src/test/run-pass/issue-18711.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18711.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18711.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18711.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -16,7 +16,7 @@\n #![feature(unboxed_closures)]\n \n // aux-build:issue-18711.rs\n-extern crate \"issue-18711\" as issue;\n+extern crate issue_18711 as issue;\n \n fn main() {\n     (|| issue::inner(()))();"}, {"sha": "16e6c99f0e31d3d187511d9b93b0569ab98bdb4a", "filename": "src/test/run-pass/issue-18859.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18859.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-18859.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18859.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -21,6 +21,6 @@ mod foo {\n }\n \n fn main() {\n-    assert_eq!(module_path!(), \"issue-18859\");\n-    assert_eq!(foo::bar::baz::name(), \"issue-18859::foo::bar::baz\");\n+    assert_eq!(module_path!(), \"issue_18859\");\n+    assert_eq!(foo::bar::baz::name(), \"issue_18859::foo::bar::baz\");\n }"}, {"sha": "e553c244c865313d5e62f3826a32ef5bc4b48d6e", "filename": "src/test/run-pass/issue-19340-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-19340-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-19340-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19340-1.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-19340-1\" as lib;\n+extern crate issue_19340_1 as lib;\n \n use lib::Homura;\n "}, {"sha": "6cb7ccc0e9543bec6e27c0c1a91ed9a01847d7e8", "filename": "src/test/run-pass/issue-4545.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4545.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,5 +12,5 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-4545\" as somelib;\n+extern crate issue_4545 as somelib;\n pub fn main() { somelib::mk::<isize>(); }"}, {"sha": "5981a0148a0af39f84c3ffb8717f10d5b4cd82f1", "filename": "src/test/run-pass/issue-5518.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-5518.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-5518.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5518.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,6 +12,6 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-5518\" as other;\n+extern crate issue_5518 as other;\n \n fn main() {}"}, {"sha": "4ad729f1bc60a114b34bcb591d9a33d321582223", "filename": "src/test/run-pass/issue-5521.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-5521.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-5521.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5521.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-5521\" as foo;\n+extern crate issue_5521 as foo;\n \n fn bar(a: foo::map) {\n     if false {"}, {"sha": "0882203cb1ea51089a1ff49a4762c33f376e5631", "filename": "src/test/run-pass/issue-7178.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-7178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-7178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7178.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-7178\" as cross_crate_self;\n+extern crate issue_7178 as cross_crate_self;\n \n pub fn main() {\n     let _ = cross_crate_self::Foo::new(&1);"}, {"sha": "a17565fa0ac5b0b572918e628d0b6aa14a974d4e", "filename": "src/test/run-pass/issue-7899.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-7899.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-7899.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7899.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-7899\" as testcrate;\n+extern crate issue_7899 as testcrate;\n \n fn main() {\n     let f = testcrate::V2(1.0f32, 2.0f32);"}, {"sha": "4f72409c36e1c9acd48256a94fec304e0c593760", "filename": "src/test/run-pass/issue-8044.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8044.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-8044\" as minimal;\n+extern crate issue_8044 as minimal;\n use minimal::{BTree, leaf};\n \n pub fn main() {"}, {"sha": "e7f09789c5ba05890d25751f80ff3f38d9f0bc2a", "filename": "src/test/run-pass/issue-8259.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8259.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-8259\" as other;\n+extern crate issue_8259 as other;\n static a: other::Foo<'static> = other::Foo::A;\n \n pub fn main() {}"}, {"sha": "84f848fc9cdb20381c929e21aa4887e2542b1bc2", "filename": "src/test/run-pass/issue-9906.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9906.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-9906\" as testmod;\n+extern crate issue_9906 as testmod;\n \n pub fn main() {\n     testmod::foo();"}, {"sha": "c8af811d13d8d799ac19e7c8e455aae844c051f7", "filename": "src/test/run-pass/issue-9968.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9968.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"issue-9968\" as lib;\n+extern crate issue_9968 as lib;\n \n use lib::{Trait, Struct};\n "}, {"sha": "780bb52b3e8b7cf8e6ab5fdeaed579d67de6f45e", "filename": "src/test/run-pass/lang-item-public.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flang-item-public.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n #![feature(lang_items, start, no_std)]\n #![no_std]\n \n-extern crate \"lang-item-public\" as lang_lib;\n+extern crate lang_item_public as lang_lib;\n \n #[cfg(target_os = \"linux\")]\n #[link(name = \"c\")]"}, {"sha": "945cf9370f4149c6df1214d1643e59cc743f785d", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n \n #![feature(std_misc, old_path)]\n \n-extern crate \"linkage-visibility\" as foo;\n+extern crate linkage_visibility as foo;\n \n pub fn main() {\n     foo::test();"}, {"sha": "0794a5e0daf2f586af538cea6faac6bf810e1d61", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n \n #![feature(linkage)]\n \n-extern crate \"linkage1\" as other;\n+extern crate linkage1 as other;\n \n extern {\n     #[linkage = \"extern_weak\"]"}, {"sha": "294d4d1217952c9c1d4fb8f95122f57572417acb", "filename": "src/test/run-pass/logging-enabled.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// exec-env:RUST_LOG=logging-enabled=info\n+// exec-env:RUST_LOG=logging_enabled=info\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "ed7b1cbacadd7f401a516011944c9f6231a62708", "filename": "src/test/run-pass/macro-crate-nonterminal-renamed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n // ignore-stage1\n \n #[macro_use]\n-extern crate \"macro_crate_nonterminal\" as new_name;\n+extern crate macro_crate_nonterminal as new_name;\n \n pub fn main() {\n     new_name::check_local();"}, {"sha": "aa2db260dd4ae3ca424d9247766e5355af0cb5a4", "filename": "src/test/run-pass/priv-impl-prim-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"priv-impl-prim-ty\" as bar;\n+extern crate priv_impl_prim_ty as bar;\n \n pub fn main() {\n     bar::frob(1);"}, {"sha": "1243d72af5efb4cd68ac6a3e73535adcb55c5488", "filename": "src/test/run-pass/reexport-should-still-link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"reexport-should-still-link\" as foo;\n+extern crate reexport_should_still_link as foo;\n \n pub fn main() {\n     foo::bar();"}, {"sha": "bc379f1a76f7f382b5d9517bc34e0f9c329b42ad", "filename": "src/test/run-pass/rust-log-filter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Frust-log-filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Frust-log-filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frust-log-filter.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// exec-env:RUST_LOG=rust-log-filter/foo\n+// exec-env:RUST_LOG=rust_log_filter/foo\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "f91c3d1ff3775c9cdeebdd9a712a0c87ce36b492", "filename": "src/test/run-pass/sepcomp-extern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -15,7 +15,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#[link(name = \"sepcomp-extern-lib\")]\n+#[link(name = \"sepcomp_extern_lib\")]\n extern {\n     #[allow(ctypes)]\n     fn foo() -> usize;"}, {"sha": "80de65c0e9f656daba5bcce0d6946693def88c35", "filename": "src/test/run-pass/static-fn-inline-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"static_fn_inline_xc_aux\" as mycore;\n+extern crate static_fn_inline_xc_aux as mycore;\n \n use mycore::num;\n "}, {"sha": "550e03c8b12fbedd17b4fdeb06646a1ff1927e1c", "filename": "src/test/run-pass/static-fn-trait-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"static_fn_trait_xc_aux\" as mycore;\n+extern crate static_fn_trait_xc_aux as mycore;\n \n use mycore::num;\n "}, {"sha": "55f3b0883b9d90728ad9be9a600a9200958ef8fe", "filename": "src/test/run-pass/static-function-pointer-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -11,7 +11,7 @@\n // aux-build:static-function-pointer-aux.rs\n // pretty-expanded FIXME #23616\n \n-extern crate \"static-function-pointer-aux\" as aux;\n+extern crate static_function_pointer_aux as aux;\n \n fn f(x: isize) -> isize { x }\n "}, {"sha": "d4ed72704001690073c8c7f9312a29c770736f45", "filename": "src/test/run-pass/trait-default-method-xc-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,8 +14,8 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_default_method_xc_aux\" as aux;\n-extern crate \"trait_default_method_xc_aux_2\" as aux2;\n+extern crate trait_default_method_xc_aux as aux;\n+extern crate trait_default_method_xc_aux_2 as aux2;\n use aux::A;\n use aux2::{a_struct, welp};\n "}, {"sha": "65e8c53a25ec592e058b7ce02219133e736a1193", "filename": "src/test/run-pass/trait-default-method-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_default_method_xc_aux\" as aux;\n+extern crate trait_default_method_xc_aux as aux;\n use aux::{A, TestEquality, Something};\n use aux::B;\n "}, {"sha": "128be2993ec1db26fda867ecfbf8536b94321de7", "filename": "src/test/run-pass/trait-inheritance-auto-xc-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_inheritance_auto_xc_2_aux\" as aux;\n+extern crate trait_inheritance_auto_xc_2_aux as aux;\n \n // aux defines impls of Foo, Bar and Baz for A\n use aux::{Foo, Bar, Baz, A};"}, {"sha": "827674c81adc1678ed661db9a1534ce2394876f4", "filename": "src/test/run-pass/trait-inheritance-auto-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_inheritance_auto_xc_aux\" as aux;\n+extern crate trait_inheritance_auto_xc_aux as aux;\n \n use aux::{Foo, Bar, Baz, Quux};\n "}, {"sha": "c665c35b418c0b9654751c0a5250f6e1149a1dce", "filename": "src/test/run-pass/trait-inheritance-cross-trait-call-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_inheritance_cross_trait_call_xc_aux\" as aux;\n+extern crate trait_inheritance_cross_trait_call_xc_aux as aux;\n \n use aux::Foo;\n "}, {"sha": "7a143ce5889155c9be6451631b2263627d0bf214", "filename": "src/test/run-pass/typeid-intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -15,8 +15,8 @@\n \n #![feature(hash, core)]\n \n-extern crate \"typeid-intrinsic\" as other1;\n-extern crate \"typeid-intrinsic2\" as other2;\n+extern crate typeid_intrinsic as other1;\n+extern crate typeid_intrinsic2 as other2;\n \n use std::hash::{self, SipHasher};\n use std::any::TypeId;"}, {"sha": "0c255c6bd6cb807beec069f05257cfba8b29cb3d", "filename": "src/test/run-pass/unboxed-closures-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Funboxed-closures-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Funboxed-closures-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-cross-crate.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -14,7 +14,7 @@\n // aux-build:unboxed-closures-cross-crate.rs\n // pretty-expanded FIXME #23616\n \n-extern crate \"unboxed-closures-cross-crate\" as ubcc;\n+extern crate unboxed_closures_cross_crate as ubcc;\n \n fn main() {\n     assert_eq!(ubcc::has_closures(), 2_usize);"}, {"sha": "98594183a00d0e95c79df10781901db98f6a5c87", "filename": "src/test/run-pass/use-crate-name-alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -11,6 +11,6 @@\n // Issue #1706\n // pretty-expanded FIXME #23616\n \n-extern crate \"std\" as stdlib;\n+extern crate std as stdlib;\n \n pub fn main() {}"}, {"sha": "40ab4c86c6f253c76ff2f5f59adebe1c27b8ef76", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -15,7 +15,7 @@\n #![no_std]\n \n extern crate std;\n-extern crate \"std\" as zed;\n+extern crate std as zed;\n \n use std::str;\n use zed::str as x;"}, {"sha": "948fe28cc621adf1c467f373ef80a4ee17f24ef4", "filename": "src/test/run-pass/vec-macro-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -13,7 +13,7 @@\n #![feature(lang_items, start, no_std, core, libc, collections)]\n #![no_std]\n \n-extern crate \"std\" as other;\n+extern crate std as other;\n \n #[macro_use]\n extern crate core;"}, {"sha": "5a567758bf45f673b0e8dba0e8e7cb8a730ea58c", "filename": "src/test/run-pass/weak-lang-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fweak-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fweak-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fweak-lang-item.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"weak-lang-items\" as other;\n+extern crate weak_lang_items as other;\n \n use std::thread;\n "}, {"sha": "ac8b15d7bf58990e883430fa4e3d2facf7361acc", "filename": "src/test/run-pass/xcrate-address-insignificant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"xcrate_address_insignificant\" as foo;\n+extern crate xcrate_address_insignificant as foo;\n \n pub fn main() {\n     assert_eq!(foo::foo::<f64>(), foo::bar());"}, {"sha": "62d62839ba31bc89b1d95492ad9ae3526111b8a3", "filename": "src/test/run-pass/xcrate-trait-lifetime-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fxcrate-trait-lifetime-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e/src%2Ftest%2Frun-pass%2Fxcrate-trait-lifetime-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-trait-lifetime-param.rs?ref=d3a4f362cba36a4bf0bb8f8a951ae9d6858ae73e", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"xcrate-trait-lifetime-param\" as other;\n+extern crate xcrate_trait_lifetime_param as other;\n \n struct Reader<'a> {\n     b : &'a [u8]"}]}