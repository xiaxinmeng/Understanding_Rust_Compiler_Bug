{"sha": "41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNTAxYTZiMDNhOGYxMGQ4YzI5ZGZjYjM3ZGJkNWZmODRiMzNmMzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-27T10:58:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-27T10:58:57Z"}, "message": "Auto merge of #67437 - matthew-healy:skip-llvm-rebuild, r=Mark-Simulacrum\n\nAdd LLVM `skip-rebuild` option to `x.py`\n\nThis PR reimplements parts of @Walther's work from #65848, and closes #65612.\n\nI decided not to implement the [arguments to override this setting](https://github.com/rust-lang/rust/issues/65612#issuecomment-544247546) in this PR. If there's strong feeling that this change shouldn't be merged without the overrides then I'm happy to close this until I've had a chance to add them in. Otherwise I'll aim to submit a second PR with those this weekend.\n\nI'd have liked to have tested the change in `native.rs`, but there didn't seem to be any existing test infrastructure. I ran this a few times manually and it _worked on my machine_ though... \ud83d\ude2c", "tree": {"sha": "21e1d394ae31b1cd10d4efa116ac21adf750c7e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21e1d394ae31b1cd10d4efa116ac21adf750c7e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "html_url": "https://github.com/rust-lang/rust/commit/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f5f8f916f00f7989a4ebf7b7dbfe1afd605f828", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f5f8f916f00f7989a4ebf7b7dbfe1afd605f828", "html_url": "https://github.com/rust-lang/rust/commit/8f5f8f916f00f7989a4ebf7b7dbfe1afd605f828"}, {"sha": "e44fc4577fdf5e269db0c7f574ac8d125067ccd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e44fc4577fdf5e269db0c7f574ac8d125067ccd8", "html_url": "https://github.com/rust-lang/rust/commit/e44fc4577fdf5e269db0c7f574ac8d125067ccd8"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f12ff76284589eb805092139a2e6be1eb3cfe8cb", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "patch": "@@ -14,6 +14,12 @@\n # =============================================================================\n [llvm]\n \n+# Indicates whether LLVM rebuild should be skipped when running bootstrap. If\n+# this is `false` then the compiler's LLVM will be rebuilt whenever the built\n+# version doesn't have the correct hash. If it is `true` then LLVM will never\n+# be rebuilt. The default value is `false`.\n+#skip-rebuild = false\n+\n # Indicates whether the LLVM build is a Release or Debug build\n #optimize = true\n "}, {"sha": "0970a50bee47af4e6995f219963cd58322c779b0", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "patch": "@@ -67,6 +67,7 @@ pub struct Config {\n     pub backtrace_on_ice: bool,\n \n     // llvm codegen options\n+    pub llvm_skip_rebuild: bool,\n     pub llvm_assertions: bool,\n     pub llvm_optimize: bool,\n     pub llvm_thin_lto: bool,\n@@ -244,6 +245,7 @@ struct Install {\n #[derive(Deserialize, Default)]\n #[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct Llvm {\n+    skip_rebuild: Option<bool>,\n     optimize: Option<bool>,\n     thin_lto: Option<bool>,\n     release_debuginfo: Option<bool>,\n@@ -490,6 +492,7 @@ impl Config {\n \n         // Store off these values as options because if they're not provided\n         // we'll infer default values for them later\n+        let mut llvm_skip_rebuild = None;\n         let mut llvm_assertions = None;\n         let mut debug = None;\n         let mut debug_assertions = None;\n@@ -511,6 +514,7 @@ impl Config {\n             }\n             set(&mut config.ninja, llvm.ninja);\n             llvm_assertions = llvm.assertions;\n+            llvm_skip_rebuild = llvm.skip_rebuild;\n             set(&mut config.llvm_optimize, llvm.optimize);\n             set(&mut config.llvm_thin_lto, llvm.thin_lto);\n             set(&mut config.llvm_release_debuginfo, llvm.release_debuginfo);\n@@ -617,6 +621,8 @@ impl Config {\n         set(&mut config.initial_rustc, build.rustc.map(PathBuf::from));\n         set(&mut config.initial_cargo, build.cargo.map(PathBuf::from));\n \n+        config.llvm_skip_rebuild = llvm_skip_rebuild.unwrap_or(false);\n+\n         let default = false;\n         config.llvm_assertions = llvm_assertions.unwrap_or(default);\n "}, {"sha": "2a4e9903e5527d4a4c801c0c53000499e453253c", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "patch": "@@ -70,6 +70,15 @@ impl Step for Llvm {\n         let done_stamp = out_dir.join(\"llvm-finished-building\");\n \n         if done_stamp.exists() {\n+            if builder.config.llvm_skip_rebuild {\n+                builder.info(\n+                    \"Warning: \\\n+                    Using a potentially stale build of LLVM; \\\n+                    This may not behave well.\",\n+                );\n+                return build_llvm_config;\n+            }\n+\n             if let Some(llvm_commit) = llvm_info.sha() {\n                 let done_contents = t!(fs::read(&done_stamp));\n "}]}