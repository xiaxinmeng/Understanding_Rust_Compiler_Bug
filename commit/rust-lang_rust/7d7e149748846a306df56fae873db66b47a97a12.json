{"sha": "7d7e149748846a306df56fae873db66b47a97a12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkN2UxNDk3NDg4NDZhMzA2ZGY1NmZhZTg3M2RiNjZiNDdhOTdhMTI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-10T13:47:53Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-10T13:47:53Z"}, "message": "testsuite: tests for #[packed] structs.", "tree": {"sha": "2b9adf9c05b74934ec52aa0375ec2d1e1f3e011b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b9adf9c05b74934ec52aa0375ec2d1e1f3e011b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d7e149748846a306df56fae873db66b47a97a12", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d7e149748846a306df56fae873db66b47a97a12", "html_url": "https://github.com/rust-lang/rust/commit/7d7e149748846a306df56fae873db66b47a97a12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d7e149748846a306df56fae873db66b47a97a12/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad226025b868c9a1f7ed08b7bfc3000f0f3a5de", "url": "https://api.github.com/repos/rust-lang/rust/commits/cad226025b868c9a1f7ed08b7bfc3000f0f3a5de", "html_url": "https://github.com/rust-lang/rust/commit/cad226025b868c9a1f7ed08b7bfc3000f0f3a5de"}], "stats": {"total": 371, "additions": 371, "deletions": 0}, "files": [{"sha": "3ed9d00be28b14587db7bfa389bbd56c6b12a92a", "filename": "src/test/compile-fail/packed-struct-generic-transmute.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This assumes the packed and non-packed structs are different sizes.\n+\n+// the error points to the start of the file, not the line with the\n+// transmute\n+\n+// error-pattern: reinterpret_cast called on types with different size\n+\n+#[packed]\n+struct Foo<T,S> {\n+    bar: T,\n+    baz: S\n+}\n+\n+struct Oof<T, S> {\n+    rab: T,\n+    zab: S\n+}\n+\n+fn main() {\n+    let foo = Foo { bar: [1u8, 2, 3, 4, 5], baz: 10i32 };\n+    unsafe {\n+        let oof: Oof<[u8, .. 5], i32> = cast::transmute(foo);\n+        debug!(oof);\n+    }\n+}"}, {"sha": "d2aca3c0d6b617bbd4c5cdf9b1904095a3d0d6c0", "filename": "src/test/compile-fail/packed-struct-transmute.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Fcompile-fail%2Fpacked-struct-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Fcompile-fail%2Fpacked-struct-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpacked-struct-transmute.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This assumes the packed and non-packed structs are different sizes.\n+\n+// the error points to the start of the file, not the line with the\n+// transmute\n+\n+// error-pattern: reinterpret_cast called on types with different size\n+\n+#[packed]\n+struct Foo {\n+    bar: u8,\n+    baz: uint\n+}\n+\n+struct Oof {\n+    rab: u8,\n+    zab: uint\n+}\n+\n+fn main() {\n+    let foo = Foo { bar: 1, baz: 10 };\n+    unsafe {\n+        let oof: Oof = cast::transmute(foo);\n+        debug!(oof);\n+    }\n+}"}, {"sha": "a331b80a894ea4960e2dfbdf3ddcefb25a2fd1fa", "filename": "src/test/run-pass/packed-struct-borrow-element.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-borrow-element.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-borrow-element.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-borrow-element.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct Foo {\n+    bar: u8,\n+    baz: uint\n+}\n+\n+fn main() {\n+    let foo = Foo { bar: 1, baz: 2 };\n+    let brw = &foo.baz;\n+\n+    assert_eq!(*brw, 2);\n+}"}, {"sha": "fd6e3b670f5ab85f749b86d81a537521f17c76a8", "filename": "src/test/run-pass/packed-struct-generic-layout.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-layout.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct S<T, S> {\n+    a: T,\n+    b: u8,\n+    c: S\n+}\n+\n+fn main() {\n+    unsafe {\n+        let s = S { a: 0xff_ff_ff_ffu32, b: 1, c: 0xaa_aa_aa_aa as i32 };\n+        let transd : [u8, .. 9] = cast::transmute(s);\n+        // Don't worry about endianness, the numbers are palindromic.\n+        assert_eq!(transd,\n+                   [0xff, 0xff, 0xff, 0xff,\n+                    1,\n+                    0xaa, 0xaa, 0xaa, 0xaa]);\n+\n+\n+        let s = S { a: 1u8, b: 2u8, c: 0b10000001_10000001 as i16};\n+        let transd : [u8, .. 4] = cast::transmute(s);\n+        // Again, no endianness problems.\n+        assert_eq!(transd,\n+                   [1, 2, 0b10000001, 0b10000001]);\n+    }\n+}"}, {"sha": "a5c4d5385a297a0c2449f829e29918d3c24182d7", "filename": "src/test/run-pass/packed-struct-generic-size.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-size.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct S<T, S> {\n+    a: T,\n+    b: u8,\n+    c: S\n+}\n+\n+fn main() {\n+    assert_eq!(sys::size_of::<S<u8, u8>>(), 3);\n+\n+    assert_eq!(sys::size_of::<S<u64, u16>>(), 11);\n+\n+    assert_eq!(sys::size_of::<S<~str, @mut [int]>>(),\n+               1 + sys::size_of::<~str>() + sys::size_of::<@mut [int]>());\n+}"}, {"sha": "8d27e55e191a4b87630c7a9dd198c8a782239306", "filename": "src/test/run-pass/packed-struct-layout.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct S4 {\n+    a: u8,\n+    b: [u8, .. 3],\n+}\n+\n+#[packed]\n+struct S5 {\n+    a: u8,\n+    b: u32\n+}\n+\n+fn main() {\n+    unsafe {\n+        let s4 = S4 { a: 1, b: [2,3,4] };\n+        let transd : [u8, .. 4] = cast::transmute(s4);\n+        assert_eq!(transd, [1, 2, 3, 4]);\n+\n+        let s5 = S5 { a: 1, b: 0xff_00_00_ff };\n+        let transd : [u8, .. 5] = cast::transmute(s5);\n+        // Don't worry about endianness, the u32 is palindromic.\n+        assert_eq!(transd, [1, 0xff, 0, 0, 0xff]);\n+    }\n+}"}, {"sha": "15e7b6b0ce0c510cc473227ddac4895f2da57467", "filename": "src/test/run-pass/packed-struct-match.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-match.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct Foo {\n+    bar: u8,\n+    baz: uint\n+}\n+\n+fn main() {\n+    let foo = Foo { bar: 1, baz: 2 };\n+    match foo {\n+        Foo {bar, baz} => {\n+            assert_eq!(bar, 1);\n+            assert_eq!(baz, 2);\n+        }\n+    }\n+}"}, {"sha": "372fe3d37f69d347b8f4e888e27a0a52b430dc87", "filename": "src/test/run-pass/packed-struct-size.rs", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-size.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,58 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct S4 {\n+    a: u8,\n+    b: [u8, .. 3],\n+}\n+\n+#[packed]\n+struct S5 {\n+    a: u8,\n+    b: u32\n+}\n+\n+#[packed]\n+struct S13_str {\n+    a: i64,\n+    b: f32,\n+    c: u8,\n+    d: ~str\n+}\n+\n+enum Foo {\n+    Bar = 1,\n+    Baz = 2\n+}\n+\n+#[packed]\n+struct S3_Foo {\n+    a: u8,\n+    b: u16,\n+    c: Foo\n+}\n+\n+#[packed]\n+struct S7_Option {\n+    a: f32,\n+    b: u8,\n+    c: u16,\n+    d: Option<@mut f64>\n+}\n+\n+\n+fn main() {\n+    assert_eq!(sys::size_of::<S4>(), 4);\n+    assert_eq!(sys::size_of::<S5>(), 5);\n+    assert_eq!(sys::size_of::<S13_str>(), 13 + sys::size_of::<~str>());\n+    assert_eq!(sys::size_of::<S3_Foo>(), 3 + sys::size_of::<Foo>());\n+    assert_eq!(sys::size_of::<S7_Option>(), 7 + sys::size_of::<Option<@mut f64>>());\n+}"}, {"sha": "b1ac29b7721a8d2e81f962fffdefe31d403afb18", "filename": "src/test/run-pass/packed-struct-vec.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-struct-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-vec.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+#[deriving(Eq)]\n+struct Foo {\n+    bar: u8,\n+    baz: u64\n+}\n+\n+fn main() {\n+    let foos = [Foo { bar: 1, baz: 2 }, .. 10];\n+\n+    assert_eq!(sys::size_of::<[Foo, .. 10]>(), 90);\n+\n+    for uint::range(0, 10) |i| {\n+        assert_eq!(foos[i], Foo { bar: 1, baz: 2});\n+    }\n+\n+    for foos.each |&foo| {\n+        assert_eq!(foo, Foo { bar: 1, baz: 2 });\n+    }\n+}"}, {"sha": "9c2fe621a321ac13457e683c5dd30296e99653e7", "filename": "src/test/run-pass/packed-tuple-struct-layout.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct S4(u8,[u8, .. 3]);\n+\n+#[packed]\n+struct S5(u8,u32);\n+\n+fn main() {\n+    unsafe {\n+        let s4 = S4(1, [2,3,4]);\n+        let transd : [u8, .. 4] = cast::transmute(s4);\n+        assert_eq!(transd, [1, 2, 3, 4]);\n+\n+        let s5 = S5(1, 0xff_00_00_ff);\n+        let transd : [u8, .. 5] = cast::transmute(s5);\n+        // Don't worry about endianness, the u32 is palindromic.\n+        assert_eq!(transd, [1, 0xff, 0, 0, 0xff]);\n+    }\n+}"}, {"sha": "23faa2eb0adc9d47d484681c50ca45a5ace18a09", "filename": "src/test/run-pass/packed-tuple-struct-size.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7e149748846a306df56fae873db66b47a97a12/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-size.rs?ref=7d7e149748846a306df56fae873db66b47a97a12", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+struct S4(u8,[u8, .. 3]);\n+\n+#[packed]\n+struct S5(u8, u32);\n+\n+#[packed]\n+struct S13_str(i64, f32, u8, ~str);\n+\n+enum Foo {\n+    Bar = 1,\n+    Baz = 2\n+}\n+\n+#[packed]\n+struct S3_Foo(u8, u16, Foo);\n+\n+#[packed]\n+struct S7_Option(f32, u8, u16, Option<@mut f64>);\n+\n+fn main() {\n+    assert_eq!(sys::size_of::<S4>(), 4);\n+\n+    assert_eq!(sys::size_of::<S5>(), 5);\n+\n+    assert_eq!(sys::size_of::<S13_str>(),\n+               13 + sys::size_of::<~str>());\n+\n+    assert_eq!(sys::size_of::<S3_Foo>(),\n+               3 + sys::size_of::<Foo>());\n+\n+    assert_eq!(sys::size_of::<S7_Option>(),\n+              7 + sys::size_of::<Option<@mut f64>>());\n+}"}]}