{"sha": "6c41253a473728451283e20bef3498fdfe797243", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNDEyNTNhNDczNzI4NDUxMjgzZTIwYmVmMzQ5OGZkZmU3OTcyNDM=", "commit": {"author": {"name": "Alexandre Gagnon", "email": "alxgnon@gmail.com", "date": "2014-04-28T02:05:41Z"}, "committer": {"name": "Alexandre Gagnon", "email": "alxgnon@gmail.com", "date": "2014-04-28T02:17:49Z"}, "message": "Fix repeated module documentation", "tree": {"sha": "7796b1ce89c86aa9dc0a7c19cc53572148e97b34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7796b1ce89c86aa9dc0a7c19cc53572148e97b34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c41253a473728451283e20bef3498fdfe797243", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c41253a473728451283e20bef3498fdfe797243", "html_url": "https://github.com/rust-lang/rust/commit/6c41253a473728451283e20bef3498fdfe797243", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c41253a473728451283e20bef3498fdfe797243/comments", "author": {"login": "alxgnon", "id": 4480082, "node_id": "MDQ6VXNlcjQ0ODAwODI=", "avatar_url": "https://avatars.githubusercontent.com/u/4480082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxgnon", "html_url": "https://github.com/alxgnon", "followers_url": "https://api.github.com/users/alxgnon/followers", "following_url": "https://api.github.com/users/alxgnon/following{/other_user}", "gists_url": "https://api.github.com/users/alxgnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxgnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxgnon/subscriptions", "organizations_url": "https://api.github.com/users/alxgnon/orgs", "repos_url": "https://api.github.com/users/alxgnon/repos", "events_url": "https://api.github.com/users/alxgnon/events{/privacy}", "received_events_url": "https://api.github.com/users/alxgnon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alxgnon", "id": 4480082, "node_id": "MDQ6VXNlcjQ0ODAwODI=", "avatar_url": "https://avatars.githubusercontent.com/u/4480082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxgnon", "html_url": "https://github.com/alxgnon", "followers_url": "https://api.github.com/users/alxgnon/followers", "following_url": "https://api.github.com/users/alxgnon/following{/other_user}", "gists_url": "https://api.github.com/users/alxgnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxgnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxgnon/subscriptions", "organizations_url": "https://api.github.com/users/alxgnon/orgs", "repos_url": "https://api.github.com/users/alxgnon/repos", "events_url": "https://api.github.com/users/alxgnon/events{/privacy}", "received_events_url": "https://api.github.com/users/alxgnon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2b6ab94e23886068a4bbb1679ce24771aa4b25a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2b6ab94e23886068a4bbb1679ce24771aa4b25a", "html_url": "https://github.com/rust-lang/rust/commit/c2b6ab94e23886068a4bbb1679ce24771aa4b25a"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "d994a9aece214554601694d02260962b4972ac0f", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -88,10 +88,7 @@ mod homing;\n mod queue;\n mod rc;\n \n-/// The implementation of `rtio` for libuv\n pub mod uvio;\n-\n-/// C bindings to libuv\n pub mod uvll;\n \n pub mod file;"}, {"sha": "77b1fd1e4c4bac75f9f076b743de92125ab111a0", "filename": "src/librustuv/uvio.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibrustuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibrustuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvio.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! The implementation of `rtio` for libuv\n+\n use std::c_str::CString;\n use std::cast;\n use std::io::IoError;"}, {"sha": "26494f1acd9ee72e07315e1f22ecc9b539c46884", "filename": "src/libstd/rt/backtrace.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbacktrace.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Simple backtrace functionality (to print on failure)\n+\n #![allow(non_camel_case_types)]\n \n use char::Char;"}, {"sha": "b9c0a02d7d228a2cb8a935253473db9025a3a635", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+\n+//! The global (exchange) heap.\n+\n use libc::{c_void, size_t, free, malloc, realloc};\n use ptr::{RawPtr, mut_null};\n use intrinsics::abort;"}, {"sha": "b407bf8897ca4dbbe8caf9551ef8189773fe1b0a", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -85,44 +85,44 @@ pub mod shouldnt_be_public {\n // Internal macros used by the runtime.\n mod macros;\n \n-/// The global (exchange) heap.\n+// The global (exchange) heap.\n pub mod global_heap;\n \n-/// Implementations of language-critical runtime features like @.\n+// Implementations of language-critical runtime features like @.\n pub mod task;\n \n-/// The EventLoop and internal synchronous I/O interface.\n+// The EventLoop and internal synchronous I/O interface.\n pub mod rtio;\n \n-/// The Local trait for types that are accessible via thread-local\n-/// or task-local storage.\n+// The Local trait for types that are accessible via thread-local\n+// or task-local storage.\n pub mod local;\n \n-/// Bindings to system threading libraries.\n+// Bindings to system threading libraries.\n pub mod thread;\n \n-/// The runtime configuration, read from environment variables.\n+// The runtime configuration, read from environment variables.\n pub mod env;\n \n-/// The local, managed heap\n+// The local, managed heap\n pub mod local_heap;\n \n-/// The runtime needs to be able to put a pointer into thread-local storage.\n+// The runtime needs to be able to put a pointer into thread-local storage.\n mod local_ptr;\n \n-/// Bindings to pthread/windows thread-local storage.\n+// Bindings to pthread/windows thread-local storage.\n mod thread_local_storage;\n \n-/// Stack unwinding\n+// Stack unwinding\n pub mod unwind;\n \n-/// The interface to libunwind that rust is using.\n+// The interface to libunwind that rust is using.\n mod libunwind;\n \n-/// Simple backtrace functionality (to print on failure)\n+// Simple backtrace functionality (to print on failure)\n pub mod backtrace;\n \n-/// Just stuff\n+// Just stuff\n mod util;\n \n // Global command line argument storage"}, {"sha": "fc8c79549af23cf84c3492a084568230053a7081", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! The EventLoop and internal synchronous I/O interface.\n+\n use c_str::CString;\n use cast;\n use comm::{Sender, Receiver};"}, {"sha": "4f84202f8f87ea8288502326fc1ab511847c9c52", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Stack unwinding\n+\n // Implementation of Rust stack unwinding\n //\n // For background on exception handling and stack unwinding please see"}, {"sha": "b160593b0497557ac8c5c0747a03978988ce5002", "filename": "src/libsyntax/parse/classify.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibsyntax%2Fparse%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibsyntax%2Fparse%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fclassify.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-/*\n-  Predicates on exprs and stmts that the pretty-printer and parser use\n- */\n+//! Routines the parser uses to classify AST nodes\n+\n+// Predicates on exprs and stmts that the pretty-printer and parser use\n \n use ast;\n "}, {"sha": "3c3f0c7a820440cff44b71d07fc5d883a863d7f6", "filename": "src/libsyntax/parse/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibsyntax%2Fparse%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibsyntax%2Fparse%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcommon.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Common routines shared by parser mods\n+\n use parse::token;\n \n // SeqSep : a sequence separator (token)"}, {"sha": "0d3ae3b5cb816fb0398ac26f86b2dc02c49f157e", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6c41253a473728451283e20bef3498fdfe797243/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c41253a473728451283e20bef3498fdfe797243/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=6c41253a473728451283e20bef3498fdfe797243", "patch": "@@ -28,13 +28,8 @@ pub mod token;\n pub mod comments;\n pub mod attr;\n \n-/// Common routines shared by parser mods\n pub mod common;\n-\n-/// Routines the parser uses to classify AST nodes\n pub mod classify;\n-\n-/// Reporting obsolete syntax\n pub mod obsolete;\n \n // info about a parsing session."}]}