{"sha": "f9982ea24a55a1912198bc49578f7af090e487e9", "node_id": "C_kwDOAAsO6NoAKGY5OTgyZWEyNGE1NWExOTEyMTk4YmM0OTU3OGY3YWYwOTBlNDg3ZTk", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-06T16:26:56Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-23T23:56:22Z"}, "message": "Add comment on cause of panic in dominators algorithm", "tree": {"sha": "d4bcbdb479900177c815ff0ad146d9557ae1df2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4bcbdb479900177c815ff0ad146d9557ae1df2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9982ea24a55a1912198bc49578f7af090e487e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9982ea24a55a1912198bc49578f7af090e487e9", "html_url": "https://github.com/rust-lang/rust/commit/f9982ea24a55a1912198bc49578f7af090e487e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9982ea24a55a1912198bc49578f7af090e487e9/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8c9528e0692d723736eb090bb10ab6145d4bf8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8c9528e0692d723736eb090bb10ab6145d4bf8c", "html_url": "https://github.com/rust-lang/rust/commit/a8c9528e0692d723736eb090bb10ab6145d4bf8c"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "38a687af7e6967cbd6c9c88f62d4b882bc236e4f", "filename": "compiler/rustc_data_structures/src/graph/dominators/mod.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f9982ea24a55a1912198bc49578f7af090e487e9/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9982ea24a55a1912198bc49578f7af090e487e9/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs?ref=f9982ea24a55a1912198bc49578f7af090e487e9", "patch": "@@ -135,7 +135,47 @@ pub fn dominators<G: ControlFlowGraph>(graph: G) -> Dominators<G::Node> {\n         // This loop computes the semi[w] for w.\n         semi[w] = w;\n         for v in graph.predecessors(pre_order_to_real[w]) {\n-            // Reachable vertices may have unreachable predecessors, so ignore any of them\n+            // TL;DR: Reachable vertices may have unreachable predecessors, so ignore any of them.\n+            //\n+            // Ignore blocks which are not connected to the entry block.\n+            //\n+            // The algorithm that was used to traverse the graph and build the\n+            // `pre_order_to_real` and `real_to_pre_order` vectors does so by\n+            // starting from the entry block and following the successors.\n+            // Therefore, any blocks not reachable from the entry block will be\n+            // set to `None` in the `pre_order_to_real` vector.\n+            //\n+            // For example, in this graph, A and B should be skipped:\n+            //\n+            //           \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n+            //           \u2502     \u2502\n+            //           \u2514\u2500\u2500\u252c\u2500\u2500\u2518\n+            //              \u2502\n+            //           \u250c\u2500\u2500\u25bc\u2500\u2500\u2510              \u250c\u2500\u2500\u2500\u2500\u2500\u2510\n+            //           \u2502     \u2502              \u2502  A  \u2502\n+            //           \u2514\u2500\u2500\u252c\u2500\u2500\u2518              \u2514\u2500\u2500\u252c\u2500\u2500\u2518\n+            //              \u2502                    \u2502\n+            //      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u2502\n+            //      \u2502               \u2502            \u2502\n+            //   \u250c\u2500\u2500\u25bc\u2500\u2500\u2510         \u250c\u2500\u2500\u25bc\u2500\u2500\u2510      \u250c\u2500\u2500\u25bc\u2500\u2500\u2510\n+            //   \u2502     \u2502         \u2502     \u2502      \u2502  B  \u2502\n+            //   \u2514\u2500\u2500\u252c\u2500\u2500\u2518         \u2514\u2500\u2500\u252c\u2500\u2500\u2518      \u2514\u2500\u2500\u252c\u2500\u2500\u2518\n+            //      \u2502               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518\n+            //   \u250c\u2500\u2500\u25bc\u2500\u2500\u2510                   \u2502\n+            //   \u2502     \u2502                   \u2502\n+            //   \u2514\u2500\u2500\u252c\u2500\u2500\u2518                \u250c\u2500\u2500\u25bc\u2500\u2500\u2510\n+            //      \u2502                   \u2502     \u2502\n+            //      \u2502                   \u2514\u2500\u2500\u2500\u2500\u2500\u2518\n+            //   \u250c\u2500\u2500\u25bc\u2500\u2500\u2510\n+            //   \u2502     \u2502\n+            //   \u2514\u2500\u2500\u252c\u2500\u2500\u2518\n+            //      \u2502\n+            //   \u250c\u2500\u2500\u25bc\u2500\u2500\u2510\n+            //   \u2502     \u2502\n+            //   \u2514\u2500\u2500\u2500\u2500\u2500\u2518\n+            //\n+            // ...this may be the case if a MirPass modifies the CFG to remove\n+            // or rearrange certain blocks/edges.\n             let Some(v) = real_to_pre_order[v] else {\n                 continue\n             };"}]}