{"sha": "6002c13f9bbf2957861a66737df9c9599dcee4be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMDJjMTNmOWJiZjI5NTc4NjFhNjY3MzdkZjljOTU5OWRjZWU0YmU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T12:16:22Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T14:34:05Z"}, "message": "Register new snapshots", "tree": {"sha": "cd6392b97b76a58e7418dd1cc779a5c71f129301", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd6392b97b76a58e7418dd1cc779a5c71f129301"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6002c13f9bbf2957861a66737df9c9599dcee4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6002c13f9bbf2957861a66737df9c9599dcee4be", "html_url": "https://github.com/rust-lang/rust/commit/6002c13f9bbf2957861a66737df9c9599dcee4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6002c13f9bbf2957861a66737df9c9599dcee4be/comments", "author": null, "committer": null, "parents": [{"sha": "de1446680cab4102cef9d0e133f1b835574926eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/de1446680cab4102cef9d0e133f1b835574926eb", "html_url": "https://github.com/rust-lang/rust/commit/de1446680cab4102cef9d0e133f1b835574926eb"}], "stats": {"total": 39, "additions": 9, "deletions": 30}, "files": [{"sha": "cc5b1f635e370b2e797521b90c62e0e4ae7e353e", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=6002c13f9bbf2957861a66737df9c9599dcee4be", "patch": "@@ -104,9 +104,6 @@ use syntax::print::pprust::*;\n use syntax::{ast, ast_map, abi};\n use syntax::ast_util::local_def;\n \n-#[cfg(stage0)]\n-mod diagnostics;\n-\n mod check;\n mod rscope;\n mod astconv;"}, {"sha": "917ffa4ff76dab5a2dfdd47c22a8bb4598cd2e39", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=6002c13f9bbf2957861a66737df9c9599dcee4be", "patch": "@@ -1036,7 +1036,6 @@ pub trait Writer {\n             error: IoResult<()>,\n         }\n \n-        #[cfg(not(stage0))]\n         impl<'a, Sized? T: Writer> fmt::Writer for Adaptor<'a, T> {\n             fn write_str(&mut self, s: &str) -> fmt::Result {\n                 match self.inner.write(s.as_bytes()) {\n@@ -1049,19 +1048,6 @@ pub trait Writer {\n             }\n         }\n \n-        #[cfg(stage0)]\n-        impl<'a, T: Writer> fmt::Writer for Adaptor<'a, T> {\n-            fn write_str(&mut self, s: &str) -> fmt::Result {\n-                match self.inner.write(s.as_bytes()) {\n-                    Ok(()) => Ok(()),\n-                    Err(e) => {\n-                        self.error = Err(e);\n-                        Err(fmt::Error)\n-                    }\n-                }\n-            }\n-        }\n-\n         let mut output = Adaptor { inner: self, error: Ok(()) };\n         match fmt::write(&mut output, fmt) {\n             Ok(()) => Ok(()),\n@@ -1652,16 +1638,6 @@ pub struct IncomingConnections<'a, Sized? A:'a> {\n     inc: &'a mut A,\n }\n \n-#[cfg(stage0)]\n-impl<'a, T, A: Acceptor<T>> Iterator for IncomingConnections<'a, A> {\n-    type Item = IoResult<T>;\n-\n-    fn next(&mut self) -> Option<IoResult<T>> {\n-        Some(self.inc.accept())\n-    }\n-}\n-\n-#[cfg(not(stage0))]\n impl<'a, T, Sized? A: Acceptor<T>> Iterator for IncomingConnections<'a, A> {\n     type Item = IoResult<T>;\n "}, {"sha": "1fbd17ede08f2f70a5630b72ba815f48a82c5836", "filename": "src/libstd/prelude/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Flibstd%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Flibstd%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fmod.rs?ref=6002c13f9bbf2957861a66737df9c9599dcee4be", "patch": "@@ -35,8 +35,5 @@\n //! pervasive that it would be obnoxious to import for every use, particularly\n //! those that define methods on primitive types.\n \n-#[cfg(stage0)]\n-pub use self::v1::*;\n-\n #[stable]\n pub mod v1;"}, {"sha": "c72fd7978f88588f4dfcf8e43a1059f7c2a984ea", "filename": "src/snapshots.txt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6002c13f9bbf2957861a66737df9c9599dcee4be/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=6002c13f9bbf2957861a66737df9c9599dcee4be", "patch": "@@ -1,3 +1,12 @@\n+S 2015-01-02 c894171\n+  freebsd-x86_64 ea8bcf75eada3539f5cbab51708eecf40d436b77\n+  linux-i386 646ae265721e3cbe19404aae4fea4ffa1f1d90cf\n+  linux-x86_64 85183ce0724af3dfb7616b9e81a4e5510415f351\n+  macos-i386 b3eced7fc5e78f767edb4595dfcde02dad206f3f\n+  macos-x86_64 36418bce8c18f1b49ec6b5aec2bf35ff1cd833a3\n+  winnt-i386 6c7ddf23b389be723d34ab91a9baa4a06c5f9571\n+  winnt-x86_64 d086d4019d603db09166d0609a21da8ee8fe306a\n+\n S 2015-01-01 7d4f487\n   freebsd-x86_64 5dc87adb17bc33abc08f1bf4c092e0b5b92a6ca4\n   linux-i386 63bf82a5b540d8acbbf1e445ce48be0fa0f003fc"}]}