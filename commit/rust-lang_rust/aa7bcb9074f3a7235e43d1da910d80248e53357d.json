{"sha": "aa7bcb9074f3a7235e43d1da910d80248e53357d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhN2JjYjkwNzRmM2E3MjM1ZTQzZDFkYTkxMGQ4MDI0OGU1MzM1N2Q=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-27T09:01:27Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-27T13:47:56Z"}, "message": "Don't expand macro in identity_conversion suggestion", "tree": {"sha": "0ce408bc3f39c077b134cce464002e69c29d537c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ce408bc3f39c077b134cce464002e69c29d537c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7bcb9074f3a7235e43d1da910d80248e53357d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlvUbIwACgkQtvoGpuDi\nZltu6xAAgrroNkAvYNE5GqI7NOIiHbwEm8zRRM3alg54JHY2DS06uBq6ote8kYyn\nNStOuXw8S8/tVKk2c4+QcaXrkm7XQoMPphwvy9leBQ6iyt1uF1IJp52xmk4qiwlc\nFToldHTai56Ec9R42dWNRNEts9mStg++iiL0GyeIW16/Po7Y/S+EKwVFjqWtGSQz\n3wYN9XcPNbIsnnWfzRHyJ4hDLEwsX5xZ9KwK9BgSQgJyTlaMT/M8ic+pW8qJ+5mw\nR/aJKZOrLM7m2JHVnvB9q1kgKBFZMj3U9FL9S0SCtN0mKouBHuq5148s3yWxWzsn\nZbgTa1axzcVjZoMmK+LXWjaMjcqlwi2w44N7zpJ/ASb+9tVDubgO4MVlc0m56En4\n3ycTYJno0wU7YIB24iL/N7/1J9nAUdfbJrax2fUpFUcAKCTAW1k0G36DdBNAH5uC\nDpaGj6AY6IP6jkzgwtxEVlyNKD3tSssxlmddTRd7PhuhcBoK1iyXuJoh47VCcZ60\nvQICVHuEfc/DMNj3cBY4fR2Zb6F9dFNe9uWx/1Hsn/a00nFloAT9J1ReTvnbEHA1\nljBuIO5qzwao09HoyKL3ydqrg53GS6VZb8YDDwo9KyPNe1EEW85JaglnA5i9jLMo\nET+LNeNMA8hpYOamw0xnM1DZl/EJvPOISeIL1UsDhn9z8FmZSP0=\n=Vyfi\n-----END PGP SIGNATURE-----", "payload": "tree 0ce408bc3f39c077b134cce464002e69c29d537c\nparent 457e7f12e9fc028eae182f23b279194e5344b676\nauthor Philipp Hansch <dev@phansch.net> 1540630887 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1540648076 +0200\n\nDon't expand macro in identity_conversion suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7bcb9074f3a7235e43d1da910d80248e53357d", "html_url": "https://github.com/rust-lang/rust/commit/aa7bcb9074f3a7235e43d1da910d80248e53357d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7bcb9074f3a7235e43d1da910d80248e53357d/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "457e7f12e9fc028eae182f23b279194e5344b676", "url": "https://api.github.com/repos/rust-lang/rust/commits/457e7f12e9fc028eae182f23b279194e5344b676", "html_url": "https://github.com/rust-lang/rust/commit/457e7f12e9fc028eae182f23b279194e5344b676"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "00ce58f00b0d1907cc43aa4751f0e37ba097ceff", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa7bcb9074f3a7235e43d1da910d80248e53357d/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7bcb9074f3a7235e43d1da910d80248e53357d/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=aa7bcb9074f3a7235e43d1da910d80248e53357d", "patch": "@@ -12,7 +12,7 @@ use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n use crate::rustc::hir::*;\n use crate::syntax::ast::NodeId;\n-use crate::utils::{in_macro, match_def_path, match_trait_method, same_tys, snippet, span_lint_and_then};\n+use crate::utils::{in_macro, match_def_path, match_trait_method, same_tys, snippet, snippet_with_macro_callsite, span_lint_and_then};\n use crate::utils::{opt_def_id, paths, resolve_node};\n use crate::rustc_errors::Applicability;\n \n@@ -72,7 +72,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityConversion {\n                     let a = cx.tables.expr_ty(e);\n                     let b = cx.tables.expr_ty(&args[0]);\n                     if same_tys(cx, a, b) {\n-                        let sugg = snippet(cx, args[0].span, \"<expr>\").into_owned();\n+                        let sugg = snippet_with_macro_callsite(cx, args[0].span, \"<expr>\").to_string();\n+\n                         span_lint_and_then(cx, IDENTITY_CONVERSION, e.span, \"identical conversion\", |db| {\n                             db.span_suggestion_with_applicability(\n                                 e.span,"}, {"sha": "5ff246630e038ec4a8e87f6b684708e693900cb7", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa7bcb9074f3a7235e43d1da910d80248e53357d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7bcb9074f3a7235e43d1da910d80248e53357d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=aa7bcb9074f3a7235e43d1da910d80248e53357d", "patch": "@@ -362,6 +362,12 @@ pub fn snippet<'a, 'b, T: LintContext<'b>>(cx: &T, span: Span, default: &'a str)\n     snippet_opt(cx, span).map_or_else(|| Cow::Borrowed(default), From::from)\n }\n \n+/// Same as `snippet`, but should only be used when it's clear that the input span is\n+/// not a macro argument.\n+pub fn snippet_with_macro_callsite<'a, 'b, T: LintContext<'b>>(cx: &T, span: Span, default: &'a str) -> Cow<'a, str> {\n+    snippet(cx, span.source_callsite(), default)\n+}\n+\n /// Convert a span to a code snippet. Returns `None` if not available.\n pub fn snippet_opt<'a, T: LintContext<'a>>(cx: &T, span: Span) -> Option<String> {\n     cx.sess().source_map().span_to_snippet(span).ok()"}, {"sha": "b5cb92c6d5a108c9ec143ed23f8c2b9e440e026f", "filename": "tests/ui/identity_conversion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa7bcb9074f3a7235e43d1da910d80248e53357d/tests%2Fui%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7bcb9074f3a7235e43d1da910d80248e53357d/tests%2Fui%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.rs?ref=aa7bcb9074f3a7235e43d1da910d80248e53357d", "patch": "@@ -53,4 +53,5 @@ fn main() {\n     let _ = String::from(format!(\"A: {:04}\", 123));\n     let _ = \"\".lines().into_iter();\n     let _ = vec![1, 2, 3].into_iter().into_iter();\n+    let _: String = format!(\"Hello {}\", \"world\").into();\n }"}, {"sha": "15bef8b125ebb31f275493e0408927651adc855f", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa7bcb9074f3a7235e43d1da910d80248e53357d/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa7bcb9074f3a7235e43d1da910d80248e53357d/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=aa7bcb9074f3a7235e43d1da910d80248e53357d", "patch": "@@ -58,5 +58,11 @@ error: identical conversion\n 55 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n-error: aborting due to 9 previous errors\n+error: identical conversion\n+  --> $DIR/identity_conversion.rs:56:21\n+   |\n+56 |     let _: String = format!(\"Hello {}\", \"world\").into();\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`\n+\n+error: aborting due to 10 previous errors\n "}]}