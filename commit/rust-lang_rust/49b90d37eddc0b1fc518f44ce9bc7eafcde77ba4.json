{"sha": "49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YjkwZDM3ZWRkYzBiMWZjNTE4ZjQ0Y2U5YmM3ZWFmY2RlNzdiYTQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-17T15:26:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-18T05:06:55Z"}, "message": "Add mirror-all-snapshots.py script for extra crowdsourced backup power.", "tree": {"sha": "7a5910e91401b634e4e32823fa021edfa4f4bd4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a5910e91401b634e4e32823fa021edfa4f4bd4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "html_url": "https://github.com/rust-lang/rust/commit/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aed235e348cddb47c2e2e24a9a64575a524ac8c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/aed235e348cddb47c2e2e24a9a64575a524ac8c3", "html_url": "https://github.com/rust-lang/rust/commit/aed235e348cddb47c2e2e24a9a64575a524ac8c3"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "98e480defda1d1e91f56395461e25b64d0cc674a", "filename": "src/etc/get-snapshot.py", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/src%2Fetc%2Fget-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/src%2Fetc%2Fget-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-snapshot.py?ref=49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "patch": "@@ -3,11 +3,6 @@\n import os, tarfile, hashlib, re, shutil\n from snapshot import *\n \n-def snap_filename_hash_part(snap):\n-  match = re.match(r\".*([a-fA-F\\d]{40}).tar.bz2$\", snap)\n-  if not match:\n-    raise Exception(\"unable to find hash in filename: \" + snap)\n-  return match.group(1)\n \n def unpack_snapshot(snap):\n   dl_path = os.path.join(download_dir_base, snap)"}, {"sha": "f4bb8c042eadd3c2069a3073a4ed48bf9ef82f75", "filename": "src/etc/mirror-all-snapshots.py", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/src%2Fetc%2Fmirror-all-snapshots.py", "raw_url": "https://github.com/rust-lang/rust/raw/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/src%2Fetc%2Fmirror-all-snapshots.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmirror-all-snapshots.py?ref=49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "patch": "@@ -0,0 +1,37 @@\n+#!/usr/bin/env python\n+\n+import os, tarfile, hashlib, re, shutil\n+from snapshot import *\n+\n+f = open(snapshotfile)\n+date = None\n+rev = None\n+platform = None\n+snap = None\n+i = 0\n+\n+for line in f.readlines():\n+    i += 1\n+    parsed = parse_line(i, line)\n+    if (not parsed): continue\n+\n+    if parsed[\"type\"] == \"snapshot\":\n+        date = parsed[\"date\"]\n+        rev = parsed[\"rev\"]\n+\n+    elif rev != None and parsed[\"type\"] == \"file\":\n+        platform = parsed[\"platform\"]\n+        hsh = parsed[\"hash\"]\n+        snap = full_snapshot_name(date, rev, platform, hsh)\n+        dl = os.path.join(download_dir_base, snap)\n+        url = download_url_base + \"/\" + snap\n+        if (not os.path.exists(dl)):\n+            print(\"downloading \" + url)\n+            get_url_to_file(url, dl)\n+        if (snap_filename_hash_part(snap) == hash_file(dl)):\n+            print(\"got download with ok hash\")\n+        else:\n+            raise Exception(\"bad hash on download\")\n+\n+\n+"}, {"sha": "26015a5427f579d91d686cceab908d03f0972c30", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=49b90d37eddc0b1fc518f44ce9bc7eafcde77ba4", "patch": "@@ -95,6 +95,12 @@ def local_rev_committer_date():\n def get_url_to_file(u,f):\n   subprocess.check_call([\"curl\", \"-o\", f, u])\n \n+def snap_filename_hash_part(snap):\n+  match = re.match(r\".*([a-fA-F\\d]{40}).tar.bz2$\", snap)\n+  if not match:\n+    raise Exception(\"unable to find hash in filename: \" + snap)\n+  return match.group(1)\n+\n def hash_file(x):\n     h = hashlib.sha1()\n     h.update(open(x, \"rb\").read())"}]}