{"sha": "6d1844c8065c5c680b0a86c83152902b47bc856c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMTg0NGM4MDY1YzVjNjgwYjBhODZjODMxNTI5MDJiNDdiYzg1NmM=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-02-20T14:46:50Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-02-22T01:14:27Z"}, "message": "Record default implementations in a separate step", "tree": {"sha": "4d5516842784059f71930f6a143bd2fe9d9d64a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d5516842784059f71930f6a143bd2fe9d9d64a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d1844c8065c5c680b0a86c83152902b47bc856c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1844c8065c5c680b0a86c83152902b47bc856c", "html_url": "https://github.com/rust-lang/rust/commit/6d1844c8065c5c680b0a86c83152902b47bc856c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d1844c8065c5c680b0a86c83152902b47bc856c/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ebc2abc6affd826c564630c036f4aa24c4fbe53", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebc2abc6affd826c564630c036f4aa24c4fbe53", "html_url": "https://github.com/rust-lang/rust/commit/3ebc2abc6affd826c564630c036f4aa24c4fbe53"}], "stats": {"total": 55, "additions": 43, "deletions": 12}, "files": [{"sha": "a328c5c2d755a11ea223efbe530553b9d47ed506", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -847,6 +847,11 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n \n         self.assemble_candidates_from_projected_tys(obligation, &mut candidates);\n         try!(self.assemble_candidates_from_caller_bounds(stack, &mut candidates));\n+        // Default implementations have lower priority, so we only\n+        // consider triggering a default if there is no other impl that can apply.\n+        if candidates.vec.len() == 0 {\n+            try!(self.assemble_candidates_from_default_impls(obligation, &mut candidates));\n+        }\n         debug!(\"candidate list size: {}\", candidates.vec.len());\n         Ok(candidates)\n     }\n@@ -1142,6 +1147,20 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             });\n         }\n \n+        Ok(())\n+    }\n+\n+    fn assemble_candidates_from_default_impls(&mut self,\n+                                              obligation: &TraitObligation<'tcx>,\n+                                              candidates: &mut SelectionCandidateSet<'tcx>)\n+                                              -> Result<(), SelectionError<'tcx>>\n+    {\n+\n+        let self_ty = self.infcx.shallow_resolve(obligation.self_ty());\n+        debug!(\"assemble_candidates_from_default_impls(self_ty={})\", self_ty.repr(self.tcx()));\n+\n+        let def_id = obligation.predicate.def_id();\n+\n         if ty::trait_has_default_impl(self.tcx(), def_id) {\n             match self_ty.sty {\n                 ty::ty_trait(..) |\n@@ -1323,7 +1342,9 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             }\n             (&DefaultImplCandidate(_), _) => {\n                 // Prefer other candidates over default implementations.\n-                true\n+                self.tcx().sess.bug(\n+                    \"default implementations shouldn't be recorded \\\n+                     when there are other valid candidates\");\n             }\n             (&ProjectionCandidate, &ParamCandidate(_)) => {\n                 // FIXME(#20297) -- this gives where clauses precedent"}, {"sha": "7cc07e926b267b4b27b97c82e2f7c2adfd47b046", "filename": "src/libtest/stats.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Flibtest%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Flibtest%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fstats.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -332,6 +332,7 @@ pub fn winsorize<T: Float + FromPrimitive>(samples: &mut [T], pct: T) {\n \n /// Returns a HashMap with the number of occurrences of every element in the\n /// sequence that the iterator exposes.\n+#[cfg(not(stage0))]\n pub fn freq_count<T, U>(iter: T) -> hash_map::HashMap<U, uint>\n   where T: Iterator<Item=U>, U: Eq + Clone + Hash\n {"}, {"sha": "ab653b3a5548ae19256832e3f158b085102439ea", "filename": "src/test/compile-fail/coherence-default-trait-impl.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -12,7 +12,9 @@\n \n #![feature(optin_builtin_traits)]\n \n-trait MyTrait {}\n+use std::marker::MarkerTrait;\n+\n+trait MyTrait: MarkerTrait {}\n \n impl MyTrait for .. {}\n "}, {"sha": "0f3453da43137ef6892aed003a15005e7c0fed69", "filename": "src/test/compile-fail/typeck-default-trait-impl-constituent-types-2.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types-2.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -10,7 +10,9 @@\n \n #![feature(optin_builtin_traits)]\n \n-trait MyTrait {}\n+use std::marker::MarkerTrait;\n+\n+trait MyTrait: MarkerTrait {}\n \n impl MyTrait for .. {}\n "}, {"sha": "524f467e017002c21a36e0f92530ffb5fa0c36e6", "filename": "src/test/compile-fail/typeck-default-trait-impl-constituent-types.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -10,7 +10,9 @@\n \n #![feature(optin_builtin_traits)]\n \n-trait MyTrait {}\n+use std::marker::MarkerTrait;\n+\n+trait MyTrait: MarkerTrait {}\n \n impl MyTrait for .. {}\n impl<T> !MyTrait for *mut T {}\n@@ -30,7 +32,4 @@ fn main() {\n \n     is_mytrait::<MyS2>();\n     //~^ ERROR the trait `MyTrait` is not implemented for the type `MyS2`\n-\n-    is_mytrait::<Vec<MyS3>>();\n-    //~^ ERROR the trait `MyTrait` is not implemented for the type `*mut MyS3`\n }"}, {"sha": "a1ca0e3e0fada28d79303481a32dedf925a282e1", "filename": "src/test/compile-fail/typeck-default-trait-impl-negation.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-negation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-negation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-negation.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -10,11 +10,13 @@\n \n #![feature(optin_builtin_traits)]\n \n-trait MyTrait {}\n+use std::marker::MarkerTrait;\n+\n+trait MyTrait: MarkerTrait {}\n \n impl MyTrait for .. {}\n \n-unsafe trait MyUnsafeTrait {}\n+unsafe trait MyUnsafeTrait: MarkerTrait {}\n \n unsafe impl MyUnsafeTrait for .. {}\n "}, {"sha": "7f24058e475facaae3e247488dae5a3e89d06299", "filename": "src/test/compile-fail/typeck-default-trait-impl-supertrait.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-supertrait.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -13,7 +13,9 @@\n \n #![feature(optin_builtin_traits)]\n \n-trait NotImplemented { }\n+use std::marker::MarkerTrait;\n+\n+trait NotImplemented: MarkerTrait { }\n \n trait MyTrait : NotImplemented {}\n "}, {"sha": "c970aaaf5d471ce69254c4338234d0ea206499db", "filename": "src/test/compile-fail/typeck-default-trait-impl-trait-where-clause.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-trait-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1844c8065c5c680b0a86c83152902b47bc856c/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-trait-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-trait-where-clause.rs?ref=6d1844c8065c5c680b0a86c83152902b47bc856c", "patch": "@@ -15,9 +15,11 @@\n \n #![feature(optin_builtin_traits)]\n \n-trait NotImplemented { }\n+use std::marker::MarkerTrait;\n \n-trait MyTrait\n+trait NotImplemented: MarkerTrait { }\n+\n+trait MyTrait: MarkerTrait\n     where Option<Self> : NotImplemented\n {}\n "}]}