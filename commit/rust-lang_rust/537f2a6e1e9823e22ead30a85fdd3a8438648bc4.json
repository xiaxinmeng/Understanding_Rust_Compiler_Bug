{"sha": "537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzN2YyYTZlMWU5ODIzZTIyZWFkMzBhODVmZGQzYTg0Mzg2NDhiYzQ=", "commit": {"author": {"name": "Julian Kulesh", "email": "julian.kulesh@kupibilet.ru", "date": "2017-11-30T21:39:47Z"}, "committer": {"name": "Julian Kulesh", "email": "julian.kulesh@kupibilet.ru", "date": "2017-11-30T21:39:47Z"}, "message": "move comparator into +find_best_match_name+ function", "tree": {"sha": "8d2c4e071e567835f9e272b42b42b2d764a2fcfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d2c4e071e567835f9e272b42b42b2d764a2fcfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "html_url": "https://github.com/rust-lang/rust/commit/537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/comments", "author": {"login": "raventid", "id": 8162268, "node_id": "MDQ6VXNlcjgxNjIyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/8162268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raventid", "html_url": "https://github.com/raventid", "followers_url": "https://api.github.com/users/raventid/followers", "following_url": "https://api.github.com/users/raventid/following{/other_user}", "gists_url": "https://api.github.com/users/raventid/gists{/gist_id}", "starred_url": "https://api.github.com/users/raventid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raventid/subscriptions", "organizations_url": "https://api.github.com/users/raventid/orgs", "repos_url": "https://api.github.com/users/raventid/repos", "events_url": "https://api.github.com/users/raventid/events{/privacy}", "received_events_url": "https://api.github.com/users/raventid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raventid", "id": 8162268, "node_id": "MDQ6VXNlcjgxNjIyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/8162268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raventid", "html_url": "https://github.com/raventid", "followers_url": "https://api.github.com/users/raventid/followers", "following_url": "https://api.github.com/users/raventid/following{/other_user}", "gists_url": "https://api.github.com/users/raventid/gists{/gist_id}", "starred_url": "https://api.github.com/users/raventid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raventid/subscriptions", "organizations_url": "https://api.github.com/users/raventid/orgs", "repos_url": "https://api.github.com/users/raventid/repos", "events_url": "https://api.github.com/users/raventid/events{/privacy}", "received_events_url": "https://api.github.com/users/raventid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6506f9c2532d05606d97629c20b08e856e880177", "url": "https://api.github.com/repos/rust-lang/rust/commits/6506f9c2532d05606d97629c20b08e856e880177", "html_url": "https://github.com/rust-lang/rust/commit/6506f9c2532d05606d97629c20b08e856e880177"}], "stats": {"total": 85, "additions": 55, "deletions": 30}, "files": [{"sha": "fdee469a3fbe3e00ab8aef7d88420a363a70dfb8", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "patch": "@@ -3213,17 +3213,6 @@ impl<'a> Resolver<'a> {\n         // Make sure error reporting is deterministic.\n         names.sort_by_key(|name| name.as_str());\n \n-\n-        // Ugly code, just to see if using case insensitive comparison will help\n-        let exact_match = names.iter().find(|x| x.as_str().to_uppercase() == name.as_str().to_uppercase());\n-        // do not use Levenstein, just return the value we found (if any)\n-        if exact_match.is_some() {\n-            return match exact_match {\n-                Some(found) => Some(found.clone()),\n-                _ => None,\n-            }\n-        }\n-\n         match find_best_match_for_name(names.iter(), &name.as_str(), None) {\n             Some(found) if found != name => Some(found),\n             _ => None,"}, {"sha": "e429791f2bdd42c145b8d92860612c6f91ae71f7", "filename": "src/libsyntax/util/lev_distance.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Flibsyntax%2Futil%2Flev_distance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Flibsyntax%2Futil%2Flev_distance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Flev_distance.rs?ref=537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "patch": "@@ -44,23 +44,45 @@ pub fn lev_distance(a: &str, b: &str) -> usize {\n /// To find the best match for a given string from an iterator of names\n /// As a loose rule to avoid the obviously incorrect suggestions, it takes\n /// an optional limit for the maximum allowable edit distance, which defaults\n-/// to one-third of the given word\n+/// to one-third of the given word.\n+/// Besides Levenshtein, we use case insensitive comparison to improve accuracy on an edge case with\n+/// a lower(upper)case letters mismatch.\n pub fn find_best_match_for_name<'a, T>(iter_names: T,\n                                        lookup: &str,\n                                        dist: Option<usize>) -> Option<Symbol>\n     where T: Iterator<Item = &'a Symbol> {\n     let max_dist = dist.map_or_else(|| cmp::max(lookup.len(), 3) / 3, |d| d);\n-    iter_names\n+\n+    let (case_insensitive_match, levenstein_match) = iter_names\n     .filter_map(|&name| {\n         let dist = lev_distance(lookup, &name.as_str());\n-        if dist <= max_dist {    // filter the unwanted cases\n+        if dist <= max_dist {\n             Some((name, dist))\n         } else {\n             None\n         }\n     })\n-    .min_by_key(|&(_, val)| val)    // extract the tuple containing the minimum edit distance\n-    .map(|(s, _)| s)                // and return only the string\n+    // Here we are collecting the next structure:\n+    // (case_insensitive_match, (levenstein_match, levenstein_distance))\n+    .fold((None, None), |result, (candidate, dist)| {\n+        (\n+            if candidate.as_str().to_uppercase() == lookup.to_uppercase() {\n+                Some(candidate)\n+            } else {\n+                result.0\n+            },\n+            match result.1 {\n+                None => Some((candidate, dist)),\n+                Some((c, d)) => Some(if dist < d { (candidate, dist) } else { (c, d) })\n+            }\n+        )\n+    });\n+\n+    if let Some(candidate) = case_insensitive_match {\n+        Some(candidate) // exact case insensitive match has a higher priority\n+    } else {\n+        if let Some((candidate, _)) = levenstein_match { Some(candidate) } else { None }\n+    }\n }\n \n #[test]"}, {"sha": "32cd5d39dc30c90158a37b5a0ffdc6f8a8b8ab3d", "filename": "src/test/ui/issue-46332.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Ftest%2Fui%2Fissue-46332.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Ftest%2Fui%2Fissue-46332.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-46332.rs?ref=537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Original Levenshtein distance for both of this is 1. We improved accuracy with\n+// additional case insensitive comparison.\n+\n+struct TyUint {}\n+\n+struct TyInt {}\n+\n+fn main() {\n+    TyUInt {};\n+}"}, {"sha": "6aef84568353ce8aede273fcbf920692de89eb87", "filename": "src/test/ui/issue-46332.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Ftest%2Fui%2Fissue-46332.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537f2a6e1e9823e22ead30a85fdd3a8438648bc4/src%2Ftest%2Fui%2Fissue-46332.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-46332.stderr?ref=537f2a6e1e9823e22ead30a85fdd3a8438648bc4", "patch": "@@ -0,0 +1,8 @@\n+error[E0422]: cannot find struct, variant or union type `TyUInt` in this scope\n+  --> $DIR/issue-46332.rs:19:5\n+   |\n+19 |     TyUInt {};\n+   |     ^^^^^^ did you mean `TyUint`?\n+\n+error: aborting due to previous error\n+"}, {"sha": "79de1600ae2d2e82dca1d7dca9661b49b28d09b8", "filename": "src/test/ui/issue46332.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6506f9c2532d05606d97629c20b08e856e880177/src%2Ftest%2Fui%2Fissue46332.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6506f9c2532d05606d97629c20b08e856e880177/src%2Ftest%2Fui%2Fissue46332.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue46332.rs?ref=6506f9c2532d05606d97629c20b08e856e880177", "patch": "@@ -1,14 +0,0 @@\n-// Original problem is Levenstein distance.\n-\n-fn TyUint() {\n-    println!(\"TyUint\");\n-}\n-\n-fn TyInt() {\n-    println!(\"TyInt\");\n-}\n-\n-\n-fn main() {\n-    TyUInt();\n-}"}]}