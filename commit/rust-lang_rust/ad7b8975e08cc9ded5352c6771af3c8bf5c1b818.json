{"sha": "ad7b8975e08cc9ded5352c6771af3c8bf5c1b818", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkN2I4OTc1ZTA4Y2M5ZGVkNTM1MmM2NzcxYWYzYzhiZjVjMWI4MTg=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-20T10:06:19Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-20T10:06:19Z"}, "message": "Add comment to `std::os::unix::ffi::os_str` explaining that the module is reused on other platforms.", "tree": {"sha": "9596a05c74755283db27afaeb185c147d55944ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9596a05c74755283db27afaeb185c147d55944ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad7b8975e08cc9ded5352c6771af3c8bf5c1b818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7b8975e08cc9ded5352c6771af3c8bf5c1b818", "html_url": "https://github.com/rust-lang/rust/commit/ad7b8975e08cc9ded5352c6771af3c8bf5c1b818", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad7b8975e08cc9ded5352c6771af3c8bf5c1b818/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "835561ac5b3529a827c76dc4e7cea15f38047b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/835561ac5b3529a827c76dc4e7cea15f38047b5a", "html_url": "https://github.com/rust-lang/rust/commit/835561ac5b3529a827c76dc4e7cea15f38047b5a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "54c9a9382f22fa3e37f5b36dc7d7e65a29f8dfaa", "filename": "library/std/src/os/unix/ffi/os_str.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad7b8975e08cc9ded5352c6771af3c8bf5c1b818/library%2Fstd%2Fsrc%2Fos%2Funix%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7b8975e08cc9ded5352c6771af3c8bf5c1b818/library%2Fstd%2Fsrc%2Fos%2Funix%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fffi%2Fos_str.rs?ref=ad7b8975e08cc9ded5352c6771af3c8bf5c1b818", "patch": "@@ -4,6 +4,9 @@ use crate::sealed::Sealed;\n use crate::sys::os_str::Buf;\n use crate::sys_common::{AsInner, FromInner, IntoInner};\n \n+// Note: this file is currently reused in other `std::os::{platform}::ffi` modules to reduce duplication.\n+// Keep this in mind when applying changes to this file that only apply to `unix`.\n+\n /// Platform-specific extensions to [`OsString`].\n ///\n /// This trait is sealed: it cannot be implemented outside the standard library."}]}