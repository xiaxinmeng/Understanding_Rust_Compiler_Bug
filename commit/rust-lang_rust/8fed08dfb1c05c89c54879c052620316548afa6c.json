{"sha": "8fed08dfb1c05c89c54879c052620316548afa6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZWQwOGRmYjFjMDVjODljNTQ4NzljMDUyNjIwMzE2NTQ4YWZhNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-07T08:31:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-07T08:31:47Z"}, "message": "Auto merge of #4346 - atouchet:links, r=flip1995\n\nUpdate Readme\n\n<!--\nThank you for making Clippy better!\n\nWe're collecting our changelog from pull request descriptions.\nIf your PR only updates to the latest nightly, you can leave the\n`changelog` entry as `none`. Otherwise, please write a short comment\nexplaining your change.\n\nIf your PR fixes an issue, you can add \"fixes #issue_number\" into this\nPR description. This way the issue will be automatically closed when\nyour PR is merged.\n\nIf you added a new lint, here's a checklist for things that will be\nchecked during review or continuous integration.\n\n- [ ] Followed [lint naming conventions][lint_naming]\n- [ ] Added passing UI tests (including committed `.stderr` file)\n- [ ] `cargo test` passes locally\n- [ ] Executed `util/dev update_lints`\n- [ ] Added lint documentation\n- [ ] Run `cargo fmt`\n\nNote that you can skip the above if you are just opening a WIP PR in\norder to get feedback.\n\nDelete this line and everything above before opening your PR -->\n\nchangelog: none", "tree": {"sha": "6b275f29dc7baf0e6051d5ec9f4825fbab9cfa40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b275f29dc7baf0e6051d5ec9f4825fbab9cfa40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fed08dfb1c05c89c54879c052620316548afa6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fed08dfb1c05c89c54879c052620316548afa6c", "html_url": "https://github.com/rust-lang/rust/commit/8fed08dfb1c05c89c54879c052620316548afa6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fed08dfb1c05c89c54879c052620316548afa6c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b041511b5fcd386c4ae74a30b60a5081f8717fbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/b041511b5fcd386c4ae74a30b60a5081f8717fbe", "html_url": "https://github.com/rust-lang/rust/commit/b041511b5fcd386c4ae74a30b60a5081f8717fbe"}, {"sha": "4b2825cd3f3b5e991883eb567916e4596d3237cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b2825cd3f3b5e991883eb567916e4596d3237cd", "html_url": "https://github.com/rust-lang/rust/commit/4b2825cd3f3b5e991883eb567916e4596d3237cd"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "705966efafd15f052148b8492073e23c1d68ab61", "filename": "README.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8fed08dfb1c05c89c54879c052620316548afa6c/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8fed08dfb1c05c89c54879c052620316548afa6c/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8fed08dfb1c05c89c54879c052620316548afa6c", "patch": "@@ -36,6 +36,7 @@ Table of contents:\n \n *   [Usage instructions](#usage)\n *   [Configuration](#configuration)\n+*   [Contributing](#contributing)\n *   [License](#license)\n \n ## Usage\n@@ -52,7 +53,7 @@ subcommand.\n \n #### Step 1: Install rustup\n \n-You can install [rustup](http://rustup.rs/) on supported platforms. This will help\n+You can install [rustup](https://rustup.rs/) on supported platforms. This will help\n us install Clippy and its dependencies.\n \n If you already have rustup installed, update to ensure you have the latest\n@@ -88,8 +89,7 @@ in your code, you can use:\n cargo run --bin cargo-clippy --manifest-path=path_to_clippys_Cargo.toml\n ```\n \n-*[Note](https://github.com/rust-lang/rust-clippy/wiki#a-word-of-warning):*\n-Be sure that Clippy was compiled with the same version of rustc that cargo invokes here!\n+*Note:* Be sure that Clippy was compiled with the same version of rustc that cargo invokes here!\n \n ### Travis CI\n \n@@ -113,20 +113,20 @@ script:\n ```\n \n If you are on nightly, It might happen that Clippy is not available for a certain nightly release.\n-In this case you can try to conditionally install Clippy from the git repo.\n+In this case you can try to conditionally install Clippy from the Git repo.\n \n ```yaml\n language: rust\n rust:\n   - nightly\n before_script:\n    - rustup component add clippy --toolchain=nightly || cargo install --git https://github.com/rust-lang/rust-clippy/ --force clippy\n-   # etc\n+   # etc.\n ```\n \n Note that adding `-D warnings` will cause your build to fail if **any** warnings are found in your code.\n That includes warnings found by rustc (e.g. `dead_code`, etc.). If you want to avoid this and only cause\n-an error for clippy warnings, use `#![deny(clippy::all)]` in your code or `-D clippy::all` on the command\n+an error for Clippy warnings, use `#![deny(clippy::all)]` in your code or `-D clippy::all` on the command\n line. (You can swap `clippy::all` with the specific lint category you are targeting.)\n \n ## Configuration\n@@ -154,9 +154,9 @@ You can add options to your code to `allow`/`warn`/`deny` Clippy lints:\n     `#![deny(clippy::pedantic)]`). Note that `clippy::pedantic` contains some very aggressive\n     lints prone to false positives.\n \n-*   only some lints (`#![deny(clippy::single_match, clippy::box_vec)]`, etc)\n+*   only some lints (`#![deny(clippy::single_match, clippy::box_vec)]`, etc.)\n \n-*   `allow`/`warn`/`deny` can be limited to a single function or module using `#[allow(...)]`, etc\n+*   `allow`/`warn`/`deny` can be limited to a single function or module using `#[allow(...)]`, etc.\n \n Note: `deny` produces errors instead of warnings.\n \n@@ -171,7 +171,7 @@ If you want to contribute to Clippy, you can find more information in [CONTRIBUT\n Copyright 2014-2019 The Rust Project Developers\n \n Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)> or the MIT license\n-<LICENSE-MIT or [http://opensource.org/licenses/MIT](http://opensource.org/licenses/MIT)>, at your\n+[https://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)> or the MIT license\n+<LICENSE-MIT or [https://opensource.org/licenses/MIT](http://opensource.org/licenses/MIT)>, at your\n option. All files in the project carrying such notice may not be\n copied, modified, or distributed except according to those terms."}]}