{"sha": "2ce42eb79cb66d4e1fc80cdba9547b2603824537", "node_id": "C_kwDOAAsO6NoAKDJjZTQyZWI3OWNiNjZkNGUxZmM4MGNkYmE5NTQ3YjI2MDM4MjQ1Mzc", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-28T09:28:29Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-28T09:28:29Z"}, "message": "remove an unnecessary line break", "tree": {"sha": "e000d3bcbed664e72d1511bf7aecd0ffa4069ce2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e000d3bcbed664e72d1511bf7aecd0ffa4069ce2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ce42eb79cb66d4e1fc80cdba9547b2603824537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce42eb79cb66d4e1fc80cdba9547b2603824537", "html_url": "https://github.com/rust-lang/rust/commit/2ce42eb79cb66d4e1fc80cdba9547b2603824537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ce42eb79cb66d4e1fc80cdba9547b2603824537/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "089471b129896fbaedaf99b8d60df109b4a2fb0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/089471b129896fbaedaf99b8d60df109b4a2fb0e", "html_url": "https://github.com/rust-lang/rust/commit/089471b129896fbaedaf99b8d60df109b4a2fb0e"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "a14a7fc0610cb989d99cc314be8a103e8b214e6e", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ce42eb79cb66d4e1fc80cdba9547b2603824537/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ce42eb79cb66d4e1fc80cdba9547b2603824537/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=2ce42eb79cb66d4e1fc80cdba9547b2603824537", "patch": "@@ -1677,7 +1677,6 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Is this a possibly malformed start of a `macro_rules! foo` item definition?\n-\n     fn is_macro_rules_item(&mut self) -> IsMacroRulesItem {\n         if self.check_keyword(kw::MacroRules) {\n             let macro_rules_span = self.token.span;"}]}