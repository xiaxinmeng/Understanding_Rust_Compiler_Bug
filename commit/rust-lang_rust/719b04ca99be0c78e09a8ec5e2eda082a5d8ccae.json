{"sha": "719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "node_id": "C_kwDOAAsO6NoAKDcxOWIwNGNhOTliZTBjNzhlMDlhOGVjNWUyZWRhMDgyYTVkOGNjYWU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-06T03:12:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-06T03:12:45Z"}, "message": "Auto merge of #92535 - Amanieu:oom_hook_unwind, r=m-ou-se\n\nAllow unwinding from OOM hooks\n\nThis is split off from #88098 and contains just the bare minimum to allow specifying a custom OOM hook with `set_alloc_error_hook` which unwinds instead of aborting.\n\nSee #88098 for an actual command-line flag which switches the default OOM behavior to unwind instead of aborting.\n\nPrevious perf results show a negligible impact on performance.", "tree": {"sha": "f598bbc1686da10e317387aeed4d7cb86749d017", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f598bbc1686da10e317387aeed4d7cb86749d017"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "html_url": "https://github.com/rust-lang/rust/commit/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88fb06a1f331926bccb448acdb52966fd1ec8a92", "url": "https://api.github.com/repos/rust-lang/rust/commits/88fb06a1f331926bccb448acdb52966fd1ec8a92", "html_url": "https://github.com/rust-lang/rust/commit/88fb06a1f331926bccb448acdb52966fd1ec8a92"}, {"sha": "2082842340062eda5fa7215e831cdcd62379b0b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2082842340062eda5fa7215e831cdcd62379b0b3", "html_url": "https://github.com/rust-lang/rust/commit/2082842340062eda5fa7215e831cdcd62379b0b3"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "9d4f9af91a5e19712ed254b4a88e6b9655b58e74", "filename": "library/alloc/src/alloc.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/library%2Falloc%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/library%2Falloc%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Falloc.rs?ref=719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "patch": "@@ -348,7 +348,6 @@ extern \"Rust\" {\n     // This is the magic symbol to call the global alloc error handler.  rustc generates\n     // it to call `__rg_oom` if there is a `#[alloc_error_handler]`, or to call the\n     // default implementations below (`__rdl_oom`) otherwise.\n-    #[rustc_allocator_nounwind]\n     fn __rust_alloc_error_handler(size: usize, align: usize) -> !;\n }\n \n@@ -367,7 +366,6 @@ extern \"Rust\" {\n #[stable(feature = \"global_alloc\", since = \"1.28.0\")]\n #[rustc_const_unstable(feature = \"const_alloc_error\", issue = \"92523\")]\n #[cfg(all(not(no_global_oom_handling), not(test)))]\n-#[rustc_allocator_nounwind]\n #[cold]\n pub const fn handle_alloc_error(layout: Layout) -> ! {\n     const fn ct_error(_: Layout) -> ! {\n@@ -398,13 +396,13 @@ pub mod __alloc_error_handler {\n \n     // if there is no `#[alloc_error_handler]`\n     #[rustc_std_internal_symbol]\n-    pub unsafe extern \"C\" fn __rdl_oom(size: usize, _align: usize) -> ! {\n+    pub unsafe extern \"C-unwind\" fn __rdl_oom(size: usize, _align: usize) -> ! {\n         panic!(\"memory allocation of {} bytes failed\", size)\n     }\n \n     // if there is an `#[alloc_error_handler]`\n     #[rustc_std_internal_symbol]\n-    pub unsafe extern \"C\" fn __rg_oom(size: usize, align: usize) -> ! {\n+    pub unsafe extern \"C-unwind\" fn __rg_oom(size: usize, align: usize) -> ! {\n         let layout = unsafe { Layout::from_size_align_unchecked(size, align) };\n         extern \"Rust\" {\n             #[lang = \"oom\"]"}, {"sha": "a07071cb6fba35e87a74beaac0520329eb6050c7", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "patch": "@@ -163,6 +163,7 @@\n #![cfg_attr(test, feature(test))]\n #![feature(unboxed_closures)]\n #![feature(unsized_fn_params)]\n+#![feature(c_unwind)]\n //\n // Rustdoc features:\n #![feature(doc_cfg)]"}, {"sha": "fdc8f411ec9253d4eeb7a572b058be4f2131fd1c", "filename": "src/llvm-project", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm-project?ref=719b04ca99be0c78e09a8ec5e2eda082a5d8ccae", "patch": "@@ -1 +1 @@\n-Subproject commit b6b46f596a7d2523ee1acd1c00e699615849da60\n+Subproject commit fdc8f411ec9253d4eeb7a572b058be4f2131fd1c"}]}