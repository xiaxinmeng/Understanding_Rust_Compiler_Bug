{"sha": "e46de5381b7d16797ff690e7770acf8ba49ba8c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NmRlNTM4MWI3ZDE2Nzk3ZmY2OTBlNzc3MGFjZjhiYTQ5YmE4YzM=", "commit": {"author": {"name": "Jesse Jones", "email": "jesse9jones@gmail.com", "date": "2012-11-18T23:15:12Z"}, "committer": {"name": "Jesse Jones", "email": "jesse9jones@gmail.com", "date": "2012-11-18T23:15:12Z"}, "message": "Moved the matching structs example next to the prose talking about struct matching", "tree": {"sha": "6e587e59b79e671b1d2d725197c3e88c61478725", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e587e59b79e671b1d2d725197c3e88c61478725"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e46de5381b7d16797ff690e7770acf8ba49ba8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e46de5381b7d16797ff690e7770acf8ba49ba8c3", "html_url": "https://github.com/rust-lang/rust/commit/e46de5381b7d16797ff690e7770acf8ba49ba8c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e46de5381b7d16797ff690e7770acf8ba49ba8c3/comments", "author": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67d421d62dcfe5ee6c45970aaf25ddaf4cc577df", "url": "https://api.github.com/repos/rust-lang/rust/commits/67d421d62dcfe5ee6c45970aaf25ddaf4cc577df", "html_url": "https://github.com/rust-lang/rust/commit/67d421d62dcfe5ee6c45970aaf25ddaf4cc577df"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "dddd372dcc8efa5701fe7345908120a241ec4cff", "filename": "doc/rust.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e46de5381b7d16797ff690e7770acf8ba49ba8c3/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/e46de5381b7d16797ff690e7770acf8ba49ba8c3/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=e46de5381b7d16797ff690e7770acf8ba49ba8c3", "patch": "@@ -2174,17 +2174,6 @@ Records and structures can also be pattern-matched and their fields bound to var\n When matching fields of a record,\n the fields being matched are specified first,\n then a placeholder (`_`) represents the remaining fields.\n-\n-A pattern that's just a variable binding,\n-like `Nil` in the previous answer,\n-could either refer to an enum variant that's in scope,\n-or bind a new variable.\n-The compiler resolves this ambiguity by forbidding variable bindings that occur in ```match``` patterns from shadowing names of variants that are in scope.\n-For example, wherever ```List``` is in scope,\n-a ```match``` pattern would not be able to bind ```Nil``` as a new name.\n-The compiler interprets a variable pattern `x` as a binding _only_ if there is no variant named `x` in scope.\n-A convention you can use to avoid conflicts is simply to name variants with upper-case letters,\n-and local variables with lower-case letters.\n  \n ~~~~\n # type options = {choose: bool, size: ~str};\n@@ -2217,6 +2206,17 @@ fn main() {\n }\n ~~~~\n \n+A pattern that's just a variable binding,\n+like `Nil` in the previous answer,\n+could either refer to an enum variant that's in scope,\n+or bind a new variable.\n+The compiler resolves this ambiguity by forbidding variable bindings that occur in ```match``` patterns from shadowing names of variants that are in scope.\n+For example, wherever ```List``` is in scope,\n+a ```match``` pattern would not be able to bind ```Nil``` as a new name.\n+The compiler interprets a variable pattern `x` as a binding _only_ if there is no variant named `x` in scope.\n+A convention you can use to avoid conflicts is simply to name variants with upper-case letters,\n+and local variables with lower-case letters.\n+\n Multiple match patterns may be joined with the `|` operator.  A\n range of values may be specified with `..`. For example:\n "}]}