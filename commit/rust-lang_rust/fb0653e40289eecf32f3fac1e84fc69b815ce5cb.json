{"sha": "fb0653e40289eecf32f3fac1e84fc69b815ce5cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMDY1M2U0MDI4OWVlY2YzMmYzZmFjMWU4NGZjNjliODE1Y2U1Y2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-29T03:20:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-29T03:20:54Z"}, "message": "Auto merge of #52751 - QuietMisdreavus:you-shall-not-pass, r=GuillaumeGomez\n\nrustdoc: rework how default passes are chosen\n\nThis is a refactor that changes how we select default passes, and changes the set of passes used for `--document-private-items`. It's groundwork for a bigger refactor i want to do.\n\nThe major changes:\n\n* There are now two sets of \"default passes\": one set for \"no flags given\" and one for \"document private items\".\n* These sets can be selected by a new `DefaultPassOption` enum, which is selected from based on the presence of `--no-defaults` or `--document-private-items` CLI flags, or their associated crate attributes.\n* When printing the list of passes, we also print the list of passes for `--document-private-items` in addition to the \"default defaults\".\n* I added `propagate-doc-cfg` and `strip-priv-imports` to the \"document private items\" set. The former is to ensure items are properly tagged with the full set of cfg flags even when \"document private items\" is active. The latter is based on feedback and personal experience navigating the `rustc` docs, which use that flag. `strip-priv-imports` only removes non-pub `use` statements, so it should be harmless from a documentation standpoint to remove those items from \"private items\" documentation.", "tree": {"sha": "2e8fcbaef638f7e5ed9295197729f9a4dd1d30e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8fcbaef638f7e5ed9295197729f9a4dd1d30e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb0653e40289eecf32f3fac1e84fc69b815ce5cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb0653e40289eecf32f3fac1e84fc69b815ce5cb", "html_url": "https://github.com/rust-lang/rust/commit/fb0653e40289eecf32f3fac1e84fc69b815ce5cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb0653e40289eecf32f3fac1e84fc69b815ce5cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a2c97c38d297307dd8554853890f51144f62172", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2c97c38d297307dd8554853890f51144f62172", "html_url": "https://github.com/rust-lang/rust/commit/6a2c97c38d297307dd8554853890f51144f62172"}, {"sha": "0db4317709cdd84c8a4cc1dc01d1f8af673bdd21", "url": "https://api.github.com/repos/rust-lang/rust/commits/0db4317709cdd84c8a4cc1dc01d1f8af673bdd21", "html_url": "https://github.com/rust-lang/rust/commit/0db4317709cdd84c8a4cc1dc01d1f8af673bdd21"}], "stats": {"total": 76, "additions": 50, "deletions": 26}, "files": [{"sha": "00cad5e376a40f1e7d1a2f820ccd22b039211399", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 23, "deletions": 26, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/fb0653e40289eecf32f3fac1e84fc69b815ce5cb/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0653e40289eecf32f3fac1e84fc69b815ce5cb/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=fb0653e40289eecf32f3fac1e84fc69b815ce5cb", "patch": "@@ -373,6 +373,10 @@ pub fn main_args(args: &[String]) -> isize {\n         for &name in passes::DEFAULT_PASSES {\n             println!(\"{:>20}\", name);\n         }\n+        println!(\"\\nPasses run with `--document-private-items`:\");\n+        for &name in passes::DEFAULT_PRIVATE_PASSES {\n+            println!(\"{:>20}\", name);\n+        }\n         return 0;\n     }\n \n@@ -623,20 +627,16 @@ fn rust_input<R, F>(cratefile: PathBuf,\n where R: 'static + Send,\n       F: 'static + Send + FnOnce(Output) -> R\n {\n-    let mut default_passes = !matches.opt_present(\"no-defaults\");\n-    let mut passes = matches.opt_strs(\"passes\");\n-    let mut plugins = matches.opt_strs(\"plugins\");\n-\n-    // We hardcode in the passes here, as this is a new flag and we\n-    // are generally deprecating passes.\n-    if matches.opt_present(\"document-private-items\") {\n-        default_passes = false;\n+    let mut default_passes = if matches.opt_present(\"no-defaults\") {\n+        passes::DefaultPassOption::None\n+    } else if matches.opt_present(\"document-private-items\") {\n+        passes::DefaultPassOption::Private\n+    } else {\n+        passes::DefaultPassOption::Default\n+    };\n \n-        passes = vec![\n-            String::from(\"collapse-docs\"),\n-            String::from(\"unindent-comments\"),\n-        ];\n-    }\n+    let mut manual_passes = matches.opt_strs(\"passes\");\n+    let mut plugins = matches.opt_strs(\"plugins\");\n \n     // First, parse the crate and extract all relevant information.\n     let mut paths = SearchPaths::new();\n@@ -706,13 +706,15 @@ where R: 'static + Send,\n             if attr.is_word() {\n                 if name == Some(\"no_default_passes\") {\n                     report_deprecated_attr(\"no_default_passes\", &diag);\n-                    default_passes = false;\n+                    if default_passes == passes::DefaultPassOption::Default {\n+                        default_passes = passes::DefaultPassOption::None;\n+                    }\n                 }\n             } else if let Some(value) = attr.value_str() {\n                 let sink = match name {\n                     Some(\"passes\") => {\n                         report_deprecated_attr(\"passes = \\\"...\\\"\", &diag);\n-                        &mut passes\n+                        &mut manual_passes\n                     },\n                     Some(\"plugins\") => {\n                         report_deprecated_attr(\"plugins = \\\"...\\\"\", &diag);\n@@ -726,20 +728,15 @@ where R: 'static + Send,\n             }\n \n             if attr.is_word() && name == Some(\"document_private_items\") {\n-                default_passes = false;\n-\n-                passes = vec![\n-                    String::from(\"collapse-docs\"),\n-                    String::from(\"unindent-comments\"),\n-                ];\n+                if default_passes == passes::DefaultPassOption::Default {\n+                    default_passes = passes::DefaultPassOption::Private;\n+                }\n             }\n         }\n \n-        if default_passes {\n-            for name in passes::DEFAULT_PASSES.iter().rev() {\n-                passes.insert(0, name.to_string());\n-            }\n-        }\n+        let mut passes: Vec<String> =\n+            passes::defaults(default_passes).iter().map(|p| p.to_string()).collect();\n+        passes.extend(manual_passes);\n \n         if !plugins.is_empty() {\n             eprintln!(\"WARNING: --plugins no longer functions; see CVE-2018-1000622\");"}, {"sha": "8de4fed5bf0c0bf8d576a06b607572ae6f329937", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fb0653e40289eecf32f3fac1e84fc69b815ce5cb/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0653e40289eecf32f3fac1e84fc69b815ce5cb/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=fb0653e40289eecf32f3fac1e84fc69b815ce5cb", "patch": "@@ -63,6 +63,33 @@ pub const DEFAULT_PASSES: &'static [&'static str] = &[\n     \"propagate-doc-cfg\",\n ];\n \n+pub const DEFAULT_PRIVATE_PASSES: &'static [&'static str] = &[\n+    \"strip-priv-imports\",\n+    \"collapse-docs\",\n+    \"unindent-comments\",\n+    \"propagate-doc-cfg\",\n+];\n+\n+#[derive(Copy, Clone, PartialEq, Eq, Debug)]\n+pub enum DefaultPassOption {\n+    Default,\n+    Private,\n+    None,\n+}\n+\n+pub fn defaults(default_set: DefaultPassOption) -> &'static [&'static str] {\n+    match default_set {\n+        DefaultPassOption::Default => {\n+            DEFAULT_PASSES\n+        },\n+        DefaultPassOption::Private => {\n+            DEFAULT_PRIVATE_PASSES\n+        },\n+        DefaultPassOption::None => {\n+            &[]\n+        },\n+    }\n+}\n \n struct Stripper<'a> {\n     retained: &'a mut DefIdSet,"}]}