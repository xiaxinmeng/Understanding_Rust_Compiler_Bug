{"sha": "9348af8396c961f8bb79cc360c091d74ea4ba34a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNDhhZjgzOTZjOTYxZjhiYjc5Y2MzNjBjMDkxZDc0ZWE0YmEzNGE=", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2019-08-14T01:22:51Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2019-08-14T01:42:10Z"}, "message": "Add NodeId for Arm, Field and FieldPat", "tree": {"sha": "0a737afc82b9f920be527d3411e38e387caa8d16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a737afc82b9f920be527d3411e38e387caa8d16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9348af8396c961f8bb79cc360c091d74ea4ba34a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9348af8396c961f8bb79cc360c091d74ea4ba34a", "html_url": "https://github.com/rust-lang/rust/commit/9348af8396c961f8bb79cc360c091d74ea4ba34a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9348af8396c961f8bb79cc360c091d74ea4ba34a/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60960a260f7b5c695fd0717311d72ce62dd4eb43", "url": "https://api.github.com/repos/rust-lang/rust/commits/60960a260f7b5c695fd0717311d72ce62dd4eb43", "html_url": "https://github.com/rust-lang/rust/commit/60960a260f7b5c695fd0717311d72ce62dd4eb43"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "aadf7ec5588b40d21595a1a85863ad118ef94fca", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=9348af8396c961f8bb79cc360c091d74ea4ba34a", "patch": "@@ -608,6 +608,7 @@ pub struct FieldPat {\n     pub pat: P<Pat>,\n     pub is_shorthand: bool,\n     pub attrs: ThinVec<Attribute>,\n+    pub id: NodeId,\n }\n \n #[derive(Clone, PartialEq, RustcEncodable, RustcDecodable, Debug, Copy)]\n@@ -925,6 +926,7 @@ pub struct Arm {\n     pub guard: Option<P<Expr>>,\n     pub body: P<Expr>,\n     pub span: Span,\n+    pub id: NodeId,\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n@@ -934,6 +936,7 @@ pub struct Field {\n     pub span: Span,\n     pub is_shorthand: bool,\n     pub attrs: ThinVec<Attribute>,\n+    pub id: NodeId,\n }\n \n pub type SpannedIdent = Spanned<Ident>;"}, {"sha": "aab782d612e1b8e4379b64fee0d6a7c358406c23", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=9348af8396c961f8bb79cc360c091d74ea4ba34a", "patch": "@@ -403,6 +403,7 @@ impl<'a> ExtCtxt<'a> {\n             span,\n             is_shorthand: false,\n             attrs: ThinVec::new(),\n+            id: ast::DUMMY_NODE_ID,\n         }\n     }\n     pub fn expr_struct(\n@@ -612,6 +613,7 @@ impl<'a> ExtCtxt<'a> {\n             guard: None,\n             body: expr,\n             span,\n+            id: ast::DUMMY_NODE_ID,\n         }\n     }\n "}, {"sha": "f910aaaf8fa7b90a0dfe747b39265bc9a641d2e4", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=9348af8396c961f8bb79cc360c091d74ea4ba34a", "patch": "@@ -383,10 +383,11 @@ pub fn noop_visit_use_tree<T: MutVisitor>(use_tree: &mut UseTree, vis: &mut T) {\n }\n \n pub fn noop_visit_arm<T: MutVisitor>(\n-    Arm { attrs, pats, guard, body, span }: &mut Arm,\n+    Arm { attrs, pats, guard, body, span, id }: &mut Arm,\n     vis: &mut T,\n ) {\n     visit_attrs(attrs, vis);\n+    vis.visit_id(id);\n     visit_vec(pats, |pat| vis.visit_pat(pat));\n     visit_opt(guard, |guard| vis.visit_expr(guard));\n     vis.visit_expr(body);\n@@ -808,9 +809,10 @@ pub fn noop_visit_struct_field<T: MutVisitor>(f: &mut StructField, visitor: &mut\n }\n \n pub fn noop_visit_field<T: MutVisitor>(f: &mut Field, vis: &mut T) {\n-    let Field { ident, expr, span, is_shorthand: _, attrs } = f;\n+    let Field { ident, expr, span, is_shorthand: _, attrs, id } = f;\n     vis.visit_ident(ident);\n     vis.visit_expr(expr);\n+    vis.visit_id(id);\n     vis.visit_span(span);\n     visit_thin_attrs(attrs, vis);\n }\n@@ -1040,8 +1042,12 @@ pub fn noop_visit_pat<T: MutVisitor>(pat: &mut P<Pat>, vis: &mut T) {\n         }\n         PatKind::Struct(path, fields, _etc) => {\n             vis.visit_path(path);\n-            for Spanned { node: FieldPat { ident, pat, is_shorthand: _, attrs }, span } in fields {\n+            for Spanned {\n+                node: FieldPat { ident, pat, is_shorthand: _, attrs, id },\n+                span\n+            } in fields {\n                 vis.visit_ident(ident);\n+                vis.visit_id(id);\n                 vis.visit_pat(pat);\n                 visit_thin_attrs(attrs, vis);\n                 vis.visit_span(span);"}, {"sha": "823dca2c9e76516c2d12ce77a7ecf604fe0d7f36", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=9348af8396c961f8bb79cc360c091d74ea4ba34a", "patch": "@@ -1444,6 +1444,7 @@ impl<'a> Parser<'a> {\n             guard,\n             body: expr,\n             span: lo.to(hi),\n+            id: ast::DUMMY_NODE_ID,\n         })\n     }\n \n@@ -1599,6 +1600,7 @@ impl<'a> Parser<'a> {\n                         expr: self.mk_expr(self.token.span, ExprKind::Err, ThinVec::new()),\n                         is_shorthand: false,\n                         attrs: ThinVec::new(),\n+                        id: ast::DUMMY_NODE_ID,\n                     });\n                 }\n             }\n@@ -1684,6 +1686,7 @@ impl<'a> Parser<'a> {\n             expr,\n             is_shorthand,\n             attrs: attrs.into(),\n+            id: ast::DUMMY_NODE_ID,\n         })\n     }\n "}, {"sha": "5a1b41645099b0f7b184aaedb30a6330d7ffdc7d", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=9348af8396c961f8bb79cc360c091d74ea4ba34a", "patch": "@@ -620,6 +620,7 @@ impl<'a> Parser<'a> {\n                 pat: subpat,\n                 is_shorthand,\n                 attrs: attrs.into(),\n+                id: ast::DUMMY_NODE_ID,\n            }\n         })\n     }"}, {"sha": "b21a6e7bc78a00b12ba0f041f62cfa9cdbd31082", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9348af8396c961f8bb79cc360c091d74ea4ba34a/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=9348af8396c961f8bb79cc360c091d74ea4ba34a", "patch": "@@ -1613,6 +1613,7 @@ impl<'a> TraitDef<'a> {\n                         source_map::Spanned {\n                             span: pat.span.with_ctxt(self.span.ctxt()),\n                             node: ast::FieldPat {\n+                                id: ast::DUMMY_NODE_ID,\n                                 ident: ident.unwrap(),\n                                 pat,\n                                 is_shorthand: false,"}]}