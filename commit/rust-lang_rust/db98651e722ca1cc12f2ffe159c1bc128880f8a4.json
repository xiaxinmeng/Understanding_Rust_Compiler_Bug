{"sha": "db98651e722ca1cc12f2ffe159c1bc128880f8a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOTg2NTFlNzIyY2ExY2MxMmYyZmZlMTU5YzFiYzEyODg4MGY4YTQ=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-11-10T11:26:09Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-12-10T16:08:42Z"}, "message": "Allow `wrong_self_convention` in `use_self` test for trait def", "tree": {"sha": "4e03068819bf8749ce3911c5155a53e49d18ad00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e03068819bf8749ce3911c5155a53e49d18ad00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db98651e722ca1cc12f2ffe159c1bc128880f8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db98651e722ca1cc12f2ffe159c1bc128880f8a4", "html_url": "https://github.com/rust-lang/rust/commit/db98651e722ca1cc12f2ffe159c1bc128880f8a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db98651e722ca1cc12f2ffe159c1bc128880f8a4/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af9382bec3f49d9c7e0f03e9cfb5e8f1c70fdbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af9382bec3f49d9c7e0f03e9cfb5e8f1c70fdbe", "html_url": "https://github.com/rust-lang/rust/commit/4af9382bec3f49d9c7e0f03e9cfb5e8f1c70fdbe"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "ded3fbb56ebb19c6f5819690c1b6cbe21d4764b9", "filename": "tests/ui/use_self.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db98651e722ca1cc12f2ffe159c1bc128880f8a4/tests%2Fui%2Fuse_self.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/db98651e722ca1cc12f2ffe159c1bc128880f8a4/tests%2Fui%2Fuse_self.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.fixed?ref=db98651e722ca1cc12f2ffe159c1bc128880f8a4", "patch": "@@ -71,6 +71,7 @@ mod lifetimes {\n \n mod issue2894 {\n     trait IntoBytes {\n+        #[allow(clippy::clippy::wrong_self_convention)]\n         fn into_bytes(&self) -> Vec<u8>;\n     }\n "}, {"sha": "a4f7b0bfd249d0a14b930db2153c6ab26c0da3a2", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db98651e722ca1cc12f2ffe159c1bc128880f8a4/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db98651e722ca1cc12f2ffe159c1bc128880f8a4/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=db98651e722ca1cc12f2ffe159c1bc128880f8a4", "patch": "@@ -71,6 +71,7 @@ mod lifetimes {\n \n mod issue2894 {\n     trait IntoBytes {\n+        #[allow(clippy::clippy::wrong_self_convention)]\n         fn into_bytes(&self) -> Vec<u8>;\n     }\n "}, {"sha": "80e1bfc75e80a379dac65b82a5b304d802eeefa2", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/db98651e722ca1cc12f2ffe159c1bc128880f8a4/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db98651e722ca1cc12f2ffe159c1bc128880f8a4/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=db98651e722ca1cc12f2ffe159c1bc128880f8a4", "patch": "@@ -37,19 +37,19 @@ LL |             Foo::new()\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:89:56\n+  --> $DIR/use_self.rs:90:56\n    |\n LL |         fn bad(foos: &[Self]) -> impl Iterator<Item = &Foo> {\n    |                                                        ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:104:13\n+  --> $DIR/use_self.rs:105:13\n    |\n LL |             TS(0)\n    |             ^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:112:25\n+  --> $DIR/use_self.rs:113:25\n    |\n LL |             fn new() -> Foo {\n    |                         ^^^ help: use the applicable keyword: `Self`\n@@ -60,7 +60,7 @@ LL |         use_self_expand!(); // Should lint in local macros\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:113:17\n+  --> $DIR/use_self.rs:114:17\n    |\n LL |                 Foo {}\n    |                 ^^^ help: use the applicable keyword: `Self`\n@@ -71,91 +71,91 @@ LL |         use_self_expand!(); // Should lint in local macros\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:148:21\n+  --> $DIR/use_self.rs:149:21\n    |\n LL |         fn baz() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:149:13\n+  --> $DIR/use_self.rs:150:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:136:29\n+  --> $DIR/use_self.rs:137:29\n    |\n LL |                 fn bar() -> Bar {\n    |                             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:137:21\n+  --> $DIR/use_self.rs:138:21\n    |\n LL |                     Bar { foo: Foo {} }\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:166:21\n+  --> $DIR/use_self.rs:167:21\n    |\n LL |             let _ = Enum::B(42);\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:167:21\n+  --> $DIR/use_self.rs:168:21\n    |\n LL |             let _ = Enum::C { field: true };\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:168:21\n+  --> $DIR/use_self.rs:169:21\n    |\n LL |             let _ = Enum::A;\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:199:13\n+  --> $DIR/use_self.rs:200:13\n    |\n LL |             nested::A::fun_1();\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:200:13\n+  --> $DIR/use_self.rs:201:13\n    |\n LL |             nested::A::A;\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:202:13\n+  --> $DIR/use_self.rs:203:13\n    |\n LL |             nested::A {};\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:221:13\n+  --> $DIR/use_self.rs:222:13\n    |\n LL |             TestStruct::from_something()\n    |             ^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:235:25\n+  --> $DIR/use_self.rs:236:25\n    |\n LL |         async fn g() -> S {\n    |                         ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:236:13\n+  --> $DIR/use_self.rs:237:13\n    |\n LL |             S {}\n    |             ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:240:16\n+  --> $DIR/use_self.rs:241:16\n    |\n LL |             &p[S::A..S::B]\n    |                ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:240:22\n+  --> $DIR/use_self.rs:241:22\n    |\n LL |             &p[S::A..S::B]\n    |                      ^ help: use the applicable keyword: `Self`"}]}