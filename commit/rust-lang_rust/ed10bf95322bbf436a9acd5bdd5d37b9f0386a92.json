{"sha": "ed10bf95322bbf436a9acd5bdd5d37b9f0386a92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMTBiZjk1MzIyYmJmNDM2YTlhY2Q1YmRkNWQzN2I5ZjAzODZhOTI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-12T22:42:41Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-12T22:42:41Z"}, "message": "Trailing comma for functions with empty bodies", "tree": {"sha": "b5560efb02559612c9611354bb11b0f4afe9471d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5560efb02559612c9611354bb11b0f4afe9471d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92", "html_url": "https://github.com/rust-lang/rust/commit/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4df405a7680c99df325bec3849634f31442bce79", "url": "https://api.github.com/repos/rust-lang/rust/commits/4df405a7680c99df325bec3849634f31442bce79", "html_url": "https://github.com/rust-lang/rust/commit/4df405a7680c99df325bec3849634f31442bce79"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "e21035e615f40e28d2413a18c5a424acefc3ca3f", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=ed10bf95322bbf436a9acd5bdd5d37b9f0386a92", "patch": "@@ -191,6 +191,7 @@ impl<'a> FmtVisitor<'a> {\n                                               &item.vis,\n                                               span,\n                                               false,\n+                                              false,\n                                               false);\n \n                 match rewrite {\n@@ -258,7 +259,8 @@ impl<'a> FmtVisitor<'a> {\n                                                                          vis,\n                                                                          span,\n                                                                          newline_brace,\n-                                                                         has_body));\n+                                                                         has_body,\n+                                                                         true));\n \n         if self.config.fn_brace_style != BraceStyle::AlwaysNextLine && !result.contains('\\n') {\n             newline_brace = false;\n@@ -303,6 +305,7 @@ impl<'a> FmtVisitor<'a> {\n                                                        &ast::Visibility::Inherited,\n                                                        span,\n                                                        false,\n+                                                       false,\n                                                        false));\n \n         // Re-attach semicolon\n@@ -1455,7 +1458,8 @@ fn rewrite_fn_base(context: &RewriteContext,\n                    vis: &ast::Visibility,\n                    span: Span,\n                    newline_brace: bool,\n-                   has_body: bool)\n+                   has_body: bool,\n+                   has_braces: bool)\n                    -> Option<(String, bool)> {\n     let mut force_new_line_for_brace = false;\n \n@@ -1665,7 +1669,6 @@ fn rewrite_fn_base(context: &RewriteContext,\n     } || (put_args_in_block && ret_str.is_empty());\n \n     if where_clause.predicates.len() == 1 && should_compress_where {\n-        // TODO hitting this path, but using a newline\n         let budget = try_opt!(context.config.max_width.checked_sub(last_line_width(&result)));\n         if let Some(where_clause_str) =\n             rewrite_where_clause(context,\n@@ -1674,7 +1677,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                  Shape::legacy(budget, indent),\n                                  Density::Compressed,\n                                  \"{\",\n-                                 !has_body,\n+                                 !has_braces,\n                                  put_args_in_block && ret_str.is_empty(),\n                                  Some(span.hi)) {\n             if !where_clause_str.contains('\\n') {\n@@ -1696,7 +1699,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                                          Shape::legacy(budget, indent),\n                                                          Density::Tall,\n                                                          \"{\",\n-                                                         !has_body,\n+                                                         !has_braces,\n                                                          put_args_in_block && ret_str.is_empty(),\n                                                          Some(span.hi)));\n "}, {"sha": "6859690fa158412134014fe6e9000b581b1c598c", "filename": "tests/target/where-clause-rfc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92/tests%2Ftarget%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed10bf95322bbf436a9acd5bdd5d37b9f0386a92/tests%2Ftarget%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwhere-clause-rfc.rs?ref=ed10bf95322bbf436a9acd5bdd5d37b9f0386a92", "patch": "@@ -78,7 +78,7 @@ pub trait Test {\n \n fn very_long_function_name<F>(very_long_argument: F) -> MyVeryLongReturnType\n where\n-    F: FnMut(Self::Item) -> bool\n+    F: FnMut(Self::Item) -> bool,\n {\n }\n "}]}