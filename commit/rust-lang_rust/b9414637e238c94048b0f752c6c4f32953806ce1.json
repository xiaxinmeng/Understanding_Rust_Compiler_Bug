{"sha": "b9414637e238c94048b0f752c6c4f32953806ce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NDE0NjM3ZTIzOGM5NDA0OGIwZjc1MmM2YzRmMzI5NTM4MDZjZTE=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-18T08:52:43Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-18T08:52:43Z"}, "message": "better messages", "tree": {"sha": "aee5c4944a3443cc0352e798b663f2b1e2494f9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aee5c4944a3443cc0352e798b663f2b1e2494f9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9414637e238c94048b0f752c6c4f32953806ce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9414637e238c94048b0f752c6c4f32953806ce1", "html_url": "https://github.com/rust-lang/rust/commit/b9414637e238c94048b0f752c6c4f32953806ce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9414637e238c94048b0f752c6c4f32953806ce1/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8453ab73ef40a33e04c95349c6d3c638e576ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8453ab73ef40a33e04c95349c6d3c638e576ae", "html_url": "https://github.com/rust-lang/rust/commit/1f8453ab73ef40a33e04c95349c6d3c638e576ae"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5d50e3513537224bf305e9c2d0538baee21a26ae", "filename": "src/mut_mut.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9414637e238c94048b0f752c6c4f32953806ce1/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9414637e238c94048b0f752c6c4f32953806ce1/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=b9414637e238c94048b0f752c6c4f32953806ce1", "patch": "@@ -26,13 +26,13 @@ impl LintPass for MutMut {\n \t\tunwrap_addr(expr).map(|e| {\n \t\t\tif unwrap_addr(e).is_some() {\n \t\t\t\tcx.span_lint(MUT_MUT, expr.span, \n-\t\t\t\t\t\"We're not sure what this means, so if you know, please tell us.\")\n+\t\t\t\t\t\"Generally you want to avoid &mut &mut _ if possible.\")\n \t\t\t} else {\n \t\t\t\tmatch expr_ty(cx.tcx, e).sty {\n \t\t\t\t\tty_ptr(mt{ty: _, mutbl: MutMutable}) |\n \t\t\t\t\tty_rptr(_, mt{ty: _, mutbl: MutMutable}) => \n \t\t\t\t\t\tcx.span_lint(MUT_MUT, expr.span,\n-\t\t\t\t\t\t\t\"This expression mutably borrows a mutable reference. Consider direct reborrowing\"),\n+\t\t\t\t\t\t\t\"This expression mutably borrows a mutable reference. Consider reborrowing\"),\n \t\t\t\t\t_ => ()\n \t\t\t\t}\n \t\t\t}\n@@ -42,7 +42,7 @@ impl LintPass for MutMut {\n \tfn check_ty(&mut self, cx: &Context, ty: &Ty) {\n \t\tif unwrap_mut(ty).and_then(unwrap_mut).is_some() {\n \t\t\tcx.span_lint(MUT_MUT, ty.span, \n-\t\t\t\t\"We're not sure what this means, so if you know, please tell us.\")\n+\t\t\t\t\"Generally you want to avoid &mut &mut _ if possible.\")\n \t\t}\n \t}\n }"}]}