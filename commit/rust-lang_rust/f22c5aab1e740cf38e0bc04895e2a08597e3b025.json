{"sha": "f22c5aab1e740cf38e0bc04895e2a08597e3b025", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMmM1YWFiMWU3NDBjZjM4ZTBiYzA0ODk1ZTJhMDg1OTdlM2IwMjU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-05-20T13:49:52Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-05-20T13:49:52Z"}, "message": "Rollup merge of #33676 - rkruppe:e0509-exact-words, r=sanxiyn\n\nReword the short diagnostic for E0509\n\nSaying that a type *implements* a trait is much more idiomatic than saying it *defines* the trait.", "tree": {"sha": "d1cf20129130a4d2cc978bdb937863d4887d31a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1cf20129130a4d2cc978bdb937863d4887d31a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f22c5aab1e740cf38e0bc04895e2a08597e3b025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f22c5aab1e740cf38e0bc04895e2a08597e3b025", "html_url": "https://github.com/rust-lang/rust/commit/f22c5aab1e740cf38e0bc04895e2a08597e3b025", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f22c5aab1e740cf38e0bc04895e2a08597e3b025/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fda31345c1c45c401e98d9d177c204bcdde8d136", "url": "https://api.github.com/repos/rust-lang/rust/commits/fda31345c1c45c401e98d9d177c204bcdde8d136", "html_url": "https://github.com/rust-lang/rust/commit/fda31345c1c45c401e98d9d177c204bcdde8d136"}, {"sha": "e575d19acc095d2aeec58176e51a9551fa2e6e88", "url": "https://api.github.com/repos/rust-lang/rust/commits/e575d19acc095d2aeec58176e51a9551fa2e6e88", "html_url": "https://github.com/rust-lang/rust/commit/e575d19acc095d2aeec58176e51a9551fa2e6e88"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "c1e83588570e7eeec7e6d01d870ee7811057b22b", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=f22c5aab1e740cf38e0bc04895e2a08597e3b025", "patch": "@@ -152,7 +152,7 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                 ty::TyEnum(def, _) if def.has_dtor() => {\n                     let mut err = struct_span_err!(bccx, move_from.span, E0509,\n                                                    \"cannot move out of type `{}`, \\\n-                                                   which defines the `Drop` trait\",\n+                                                   which implements the `Drop` trait\",\n                                                    b.ty);\n                     err.span_label(move_from.span, &format!(\"cannot move out of here\"));\n                     err"}, {"sha": "5d9c9d0bd461516d42c3de0cded3bc2eeeeb9dc2", "filename": "src/test/compile-fail/borrowck/borrowck-move-error-with-note.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-error-with-note.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-error-with-note.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-error-with-note.rs?ref=f22c5aab1e740cf38e0bc04895e2a08597e3b025", "patch": "@@ -37,7 +37,7 @@ impl Drop for S {\n \n fn move_in_match() {\n     match (S {f: \"foo\".to_string(), g: \"bar\".to_string()}) {\n-        S {         //~ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+        S {         //~ ERROR cannot move out of type `S`, which implements the `Drop` trait\n         //~| cannot move out of here\n             f: _s,  //~ NOTE to prevent move\n             g: _t   //~ NOTE and here"}, {"sha": "16302d276cee27faafc9ea046b2f742a411cb0eb", "filename": "src/test/compile-fail/borrowck/borrowck-move-out-of-struct-with-dtor.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.rs?ref=f22c5aab1e740cf38e0bc04895e2a08597e3b025", "patch": "@@ -16,17 +16,17 @@ impl Drop for S {\n fn move_in_match() {\n     match (S {f:\"foo\".to_string()}) {\n         S {f:_s} => {}\n-        //~^ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+        //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n     }\n }\n \n fn move_in_let() {\n     let S {f:_s} = S {f:\"foo\".to_string()};\n-    //~^ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+    //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n }\n \n fn move_in_fn_arg(S {f:_s}: S) {\n-    //~^ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+    //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n }\n \n fn main() {}"}, {"sha": "f5fedb8d487eedb409c306768cdfbcea487cddbb", "filename": "src/test/compile-fail/borrowck/borrowck-move-out-of-tuple-struct-with-dtor.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-tuple-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-tuple-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-tuple-struct-with-dtor.rs?ref=f22c5aab1e740cf38e0bc04895e2a08597e3b025", "patch": "@@ -16,17 +16,17 @@ impl Drop for S {\n fn move_in_match() {\n     match S(\"foo\".to_string()) {\n         S(_s) => {}\n-        //~^ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+        //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n     }\n }\n \n fn move_in_let() {\n     let S(_s) = S(\"foo\".to_string());\n-    //~^ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+    //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n }\n \n fn move_in_fn_arg(S(_s): S) {\n-    //~^ ERROR cannot move out of type `S`, which defines the `Drop` trait\n+    //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n }\n \n fn main() {}"}, {"sha": "c364788a9cc8d26a9d90d7d242e762e154957e17", "filename": "src/test/compile-fail/borrowck/borrowck-struct-update-with-dtor.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-struct-update-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-struct-update-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-struct-update-with-dtor.rs?ref=f22c5aab1e740cf38e0bc04895e2a08597e3b025", "patch": "@@ -19,11 +19,13 @@ struct T { a: isize, mv: Box<isize> }\n impl Drop for T { fn drop(&mut self) { } }\n \n fn f(s0:S) {\n-    let _s2 = S{a: 2, ..s0}; //~error: cannot move out of type `S`, which defines the `Drop` trait\n+    let _s2 = S{a: 2, ..s0};\n+    //~^ error: cannot move out of type `S`, which implements the `Drop` trait\n }\n \n fn g(s0:T) {\n-    let _s2 = T{a: 2, ..s0}; //~error: cannot move out of type `T`, which defines the `Drop` trait\n+    let _s2 = T{a: 2, ..s0};\n+    //~^ error: cannot move out of type `T`, which implements the `Drop` trait\n }\n \n fn main() { }"}, {"sha": "38049209903d19af25449c4d44ae30d8deb6178f", "filename": "src/test/compile-fail/disallowed-deconstructing-destructing-struct-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22c5aab1e740cf38e0bc04895e2a08597e3b025/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-match.rs?ref=f22c5aab1e740cf38e0bc04895e2a08597e3b025", "patch": "@@ -23,6 +23,6 @@ fn main() {\n \n     match x {\n         X { x: y } => println!(\"contents: {}\", y)\n-        //~^ ERROR cannot move out of type `X`, which defines the `Drop` trait\n+        //~^ ERROR cannot move out of type `X`, which implements the `Drop` trait\n     }\n }"}]}