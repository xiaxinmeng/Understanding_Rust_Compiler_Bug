{"sha": "83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZjU1M2M5NWM0YTdjZmQ0NGVjMDBjZTA1NjcwOGE3MDIyYjdiZjc=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-04T13:47:03Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-09T15:19:34Z"}, "message": "Address review comments", "tree": {"sha": "062d55fdcb81ccdbe5b224148e5efcf7f9ea90f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/062d55fdcb81ccdbe5b224148e5efcf7f9ea90f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "html_url": "https://github.com/rust-lang/rust/commit/83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09fff5063749662973456a076dd3f9133dc01ecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/09fff5063749662973456a076dd3f9133dc01ecf", "html_url": "https://github.com/rust-lang/rust/commit/09fff5063749662973456a076dd3f9133dc01ecf"}], "stats": {"total": 150, "additions": 140, "deletions": 10}, "files": [{"sha": "025494e3fd7be01be3cc9734a1f1322654097b40", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -333,6 +333,22 @@ impl NonMacroAttrKind {\n             NonMacroAttrKind::LegacyPluginHelper => \"legacy plugin helper attribute\",\n         }\n     }\n+\n+    pub fn article(self) -> &'static str {\n+        match self {\n+            NonMacroAttrKind::Registered => \"an\",\n+            _ => \"a\",\n+        }\n+    }\n+\n+    /// Users of some attributes cannot mark them as used, so they are considered always used.\n+    pub fn is_used(self) -> bool {\n+        match self {\n+            NonMacroAttrKind::Tool | NonMacroAttrKind::DeriveHelper => true,\n+            NonMacroAttrKind::Builtin | NonMacroAttrKind::Registered |\n+            NonMacroAttrKind::LegacyPluginHelper => false,\n+        }\n+    }\n }\n \n impl<Id> Res<Id> {\n@@ -389,6 +405,7 @@ impl<Id> Res<Id> {\n     pub fn article(&self) -> &'static str {\n         match *self {\n             Res::Def(kind, _) => kind.article(),\n+            Res::NonMacroAttr(kind) => kind.article(),\n             Res::Err => \"an\",\n             _ => \"a\",\n         }"}, {"sha": "32f1de4a8309a7415e158ea00228e645a7f167e6", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -141,8 +141,7 @@ impl<'a> Resolver<'a> {\n     crate fn get_macro(&mut self, res: Res) -> Option<Lrc<SyntaxExtension>> {\n         match res {\n             Res::Def(DefKind::Macro(..), def_id) => self.get_macro_by_def_id(def_id),\n-            Res::NonMacroAttr(attr_kind) =>\n-                Some(self.non_macro_attr(attr_kind == NonMacroAttrKind::Tool)),\n+            Res::NonMacroAttr(attr_kind) => Some(self.non_macro_attr(attr_kind.is_used())),\n             _ => None,\n         }\n     }"}, {"sha": "697e4925d7238989c9d762b37edaa605994a045d", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -1472,7 +1472,7 @@ impl<'a> Resolver<'a> {\n                 Scope::MacroRules(..) => true,\n                 Scope::CrateRoot => true,\n                 Scope::Module(..) => true,\n-                Scope::RegisteredAttrs => true,\n+                Scope::RegisteredAttrs => use_prelude,\n                 Scope::MacroUsePrelude => use_prelude || rust_2015,\n                 Scope::BuiltinAttrs => true,\n                 Scope::LegacyPluginHelpers => use_prelude || rust_2015,"}, {"sha": "3087888a563eab3e493617000326f8e398e329e9", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -94,6 +94,7 @@ fn fast_print_path(path: &ast::Path) -> Symbol {\n     }\n }\n \n+/// The code common between processing `#![register_tool]` and `#![register_attr]`.\n fn registered_idents(\n     sess: &Session,\n     attrs: &[ast::Attribute],\n@@ -832,7 +833,8 @@ impl<'a> Resolver<'a> {\n                                          res: Option<Res>, span: Span) {\n         if let Some(Res::NonMacroAttr(kind)) = res {\n             if kind != NonMacroAttrKind::Tool && binding.map_or(true, |b| b.is_import()) {\n-                let msg = format!(\"cannot use a {} through an import\", kind.descr());\n+                let msg =\n+                    format!(\"cannot use {} {} through an import\", kind.article(), kind.descr());\n                 let mut err = self.session.struct_span_err(span, &msg);\n                 if let Some(binding) = binding {\n                     err.span_note(binding.span, &format!(\"the {} imported here\", kind.descr()));"}, {"sha": "d59d0f0e28e9b2aa9028a8101bb7d6f98ba3b7e3", "filename": "src/libsyntax/feature_gate/active.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Factive.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -524,10 +524,10 @@ declare_features! (\n     (active, abi_efiapi, \"1.40.0\", Some(65815), None),\n \n     /// Allows using the `#[register_attr]` attribute.\n-    (active, register_attr, \"1.41.0\", Some(29642), None),\n+    (active, register_attr, \"1.41.0\", Some(66080), None),\n \n     /// Allows using the `#[register_attr]` attribute.\n-    (active, register_tool, \"1.41.0\", Some(44690), None),\n+    (active, register_tool, \"1.41.0\", Some(66079), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates"}, {"sha": "608cc2a09cbee328e5a2cea2f6ef93755d418729", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -330,11 +330,11 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     gated!(ffi_returns_twice, Whitelisted, template!(Word), experimental!(ffi_returns_twice)),\n     gated!(track_caller, Whitelisted, template!(Word), experimental!(track_caller)),\n     gated!(\n-        register_attr, Whitelisted, template!(List: \"attr1, attr2, ...\"),\n+        register_attr, CrateLevel, template!(List: \"attr1, attr2, ...\"),\n         experimental!(register_attr),\n     ),\n     gated!(\n-        register_tool, Whitelisted, template!(List: \"tool1, tool2, ...\"),\n+        register_tool, CrateLevel, template!(List: \"tool1, tool2, ...\"),\n         experimental!(register_tool),\n     ),\n "}, {"sha": "3d0cf9154fbca1e4ad6345f6bfc567786e4d6cf9", "filename": "src/test/ui/attributes/register-attr-tool-import.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -0,0 +1,14 @@\n+// edition:2018\n+\n+#![feature(register_attr)]\n+#![feature(register_tool)]\n+\n+#![register_attr(attr)]\n+#![register_tool(tool)]\n+\n+use attr as renamed_attr; // OK\n+use tool as renamed_tool; // OK\n+\n+#[renamed_attr] //~ ERROR cannot use an explicitly registered attribute through an import\n+#[renamed_tool::attr] //~ ERROR cannot use a tool module through an import\n+fn main() {}"}, {"sha": "6f280c8e0d931ab2e83325c8a377644e1858256a", "filename": "src/test/ui/attributes/register-attr-tool-import.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.stderr?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -0,0 +1,26 @@\n+error: cannot use an explicitly registered attribute through an import\n+  --> $DIR/register-attr-tool-import.rs:12:3\n+   |\n+LL | #[renamed_attr]\n+   |   ^^^^^^^^^^^^\n+   |\n+note: the explicitly registered attribute imported here\n+  --> $DIR/register-attr-tool-import.rs:9:5\n+   |\n+LL | use attr as renamed_attr; // OK\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: cannot use a tool module through an import\n+  --> $DIR/register-attr-tool-import.rs:13:3\n+   |\n+LL | #[renamed_tool::attr]\n+   |   ^^^^^^^^^^^^\n+   |\n+note: the tool module imported here\n+  --> $DIR/register-attr-tool-import.rs:10:5\n+   |\n+LL | use tool as renamed_tool; // OK\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a491773f5eb2c53b4bee8b0bc8a68c06eeb93ccb", "filename": "src/test/ui/attributes/register-attr-tool-prelude.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -0,0 +1,14 @@\n+#![feature(register_attr)]\n+#![feature(register_tool)]\n+\n+#![register_attr(attr)]\n+#![register_tool(tool)]\n+\n+#[no_implicit_prelude]\n+mod m {\n+    #[attr] //~ ERROR cannot find attribute `attr` in this scope\n+    #[tool::attr] //~ ERROR failed to resolve: use of undeclared type or module `tool`\n+    fn check() {}\n+}\n+\n+fn main() {}"}, {"sha": "66a4eeb6aa4814cefce02d267f0ab63cba8d1c0c", "filename": "src/test/ui/attributes/register-attr-tool-prelude.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.stderr?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -0,0 +1,15 @@\n+error[E0433]: failed to resolve: use of undeclared type or module `tool`\n+  --> $DIR/register-attr-tool-prelude.rs:10:7\n+   |\n+LL |     #[tool::attr]\n+   |       ^^^^ use of undeclared type or module `tool`\n+\n+error: cannot find attribute `attr` in this scope\n+  --> $DIR/register-attr-tool-prelude.rs:9:7\n+   |\n+LL |     #[attr]\n+   |       ^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0433`."}, {"sha": "546e372f5e3033100a03e4f5ece77c42b37b5336", "filename": "src/test/ui/attributes/register-attr-tool-unused.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.rs?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -0,0 +1,10 @@\n+#![deny(unused)]\n+\n+#![feature(register_attr)]\n+#![feature(register_tool)]\n+\n+#[register_attr(attr)] //~ ERROR crate-level attribute should be an inner attribute\n+                       //~| ERROR unused attribute\n+#[register_tool(tool)] //~ ERROR crate-level attribute should be an inner attribute\n+                       //~| ERROR unused attribute\n+fn main() {}"}, {"sha": "0756c572c35fee17c40b1b9f3d4ffa30f92dfaac", "filename": "src/test/ui/attributes/register-attr-tool-unused.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -0,0 +1,33 @@\n+error: unused attribute\n+  --> $DIR/register-attr-tool-unused.rs:6:1\n+   |\n+LL | #[register_attr(attr)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/register-attr-tool-unused.rs:1:9\n+   |\n+LL | #![deny(unused)]\n+   |         ^^^^^^\n+   = note: `#[deny(unused_attributes)]` implied by `#[deny(unused)]`\n+\n+error: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/register-attr-tool-unused.rs:6:1\n+   |\n+LL | #[register_attr(attr)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: unused attribute\n+  --> $DIR/register-attr-tool-unused.rs:8:1\n+   |\n+LL | #[register_tool(tool)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/register-attr-tool-unused.rs:8:1\n+   |\n+LL | #[register_tool(tool)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "3965d481d9b64425dd8ff1db00a7c2bee0a91441", "filename": "src/test/ui/feature-gates/feature-gate-register_attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.stderr?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[register_attr]` attribute is an experimental feature\n LL | #![register_attr(attr)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/66080\n    = help: add `#![feature(register_attr)]` to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "177342aed900fdbc3a6e6721b7f838e42723b13e", "filename": "src/test/ui/feature-gates/feature-gate-register_tool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_tool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83f553c95c4a7cfd44ec00ce056708a7022b7bf7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_tool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_tool.stderr?ref=83f553c95c4a7cfd44ec00ce056708a7022b7bf7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[register_tool]` attribute is an experimental feature\n LL | #![register_tool(tool)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see https://github.com/rust-lang/rust/issues/44690\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/66079\n    = help: add `#![feature(register_tool)]` to the crate attributes to enable\n \n error: aborting due to previous error"}]}