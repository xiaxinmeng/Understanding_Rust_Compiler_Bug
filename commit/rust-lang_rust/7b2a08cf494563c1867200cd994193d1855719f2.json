{"sha": "7b2a08cf494563c1867200cd994193d1855719f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMmEwOGNmNDk0NTYzYzE4NjcyMDBjZDk5NDE5M2QxODU1NzE5ZjI=", "commit": {"author": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2019-02-12T07:56:26Z"}, "committer": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2019-02-12T21:49:48Z"}, "message": "Add Instant::checked_duration_since, address #58402.", "tree": {"sha": "93963dd51503fbecbb07109416acb2968b6fe420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93963dd51503fbecbb07109416acb2968b6fe420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2a08cf494563c1867200cd994193d1855719f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQQzEHnM5f9ubG8rMBnAlyIdbgPfaAUCXGM/fAAKCRDAlyIdbgPf\naDQ2AP4wDekw0qxkyTn1jQCKJ+7XPYjCw5P6o8e6/leYHjSSAAD/URM0y+2jekDQ\nKB6S9y1KYYDm9chG+tT7cWD3q/RCEWY=\n=y/R1\n-----END PGP SIGNATURE-----", "payload": "tree 93963dd51503fbecbb07109416acb2968b6fe420\nparent ba2853b6d3a197cdbec5543be2592ca430b49af6\nauthor Vitaly _Vi Shukela <vi0oss@gmail.com> 1549958186 +0300\ncommitter Vitaly _Vi Shukela <vi0oss@gmail.com> 1550008188 +0300\n\nAdd Instant::checked_duration_since, address #58402.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2a08cf494563c1867200cd994193d1855719f2", "html_url": "https://github.com/rust-lang/rust/commit/7b2a08cf494563c1867200cd994193d1855719f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2a08cf494563c1867200cd994193d1855719f2/comments", "author": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba2853b6d3a197cdbec5543be2592ca430b49af6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba2853b6d3a197cdbec5543be2592ca430b49af6", "html_url": "https://github.com/rust-lang/rust/commit/ba2853b6d3a197cdbec5543be2592ca430b49af6"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "38fc0bb80d0baf0b428de8df6fd64d62de6c7609", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7b2a08cf494563c1867200cd994193d1855719f2/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2a08cf494563c1867200cd994193d1855719f2/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=7b2a08cf494563c1867200cd994193d1855719f2", "patch": "@@ -295,6 +295,7 @@\n #![feature(non_exhaustive)]\n #![feature(alloc_layout_extra)]\n #![feature(maybe_uninit)]\n+#![feature(checked_duration_since)]\n #![cfg_attr(all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n             feature(global_asm, range_contains, slice_index_methods,\n                     decl_macro, coerce_unsized, sgx_platform, ptr_wrapping_offset_from))]"}, {"sha": "973edb5479e8d6f27a4dfa0305d1c2fba3728e51", "filename": "src/libstd/time.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7b2a08cf494563c1867200cd994193d1855719f2/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2a08cf494563c1867200cd994193d1855719f2/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=7b2a08cf494563c1867200cd994193d1855719f2", "patch": "@@ -218,6 +218,30 @@ impl Instant {\n         self.0.sub_instant(&earlier.0)\n     }\n \n+    /// Returns the amount of time elapsed from another instant to this one,\n+    /// or None if that instant is earlier than this one.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// use std::time::{Duration, Instant};\n+    /// use std::thread::sleep;\n+    ///\n+    /// let now = Instant::now();\n+    /// sleep(Duration::new(1, 0));\n+    /// let new_now = Instant::now();\n+    /// println!(\"{:?}\", new_now.checked_duration_since(now));\n+    /// println!(\"{:?}\", now.checked_duration_since(new_now)); // None\n+    /// ```\n+    #[unstable(feature = \"checked_duration_since\", issue = \"58402\")]\n+    pub fn checked_duration_since(&self, earlier: Instant) -> Option<Duration> {\n+        if self >= &earlier {\n+            Some(self.0.sub_instant(&earlier.0))\n+        } else {\n+            None\n+        }\n+    }\n+\n     /// Returns the amount of time elapsed since this instant was created.\n     ///\n     /// # Panics\n@@ -626,6 +650,12 @@ mod tests {\n         (a - Duration::new(1, 0)).duration_since(a);\n     }\n \n+    #[test]\n+    fn checked_instant_duration_nopanic() {\n+        let a = Instant::now();\n+        (a - Duration::new(1, 0)).checked_duration_since(a);\n+    }\n+\n     #[test]\n     fn system_time_math() {\n         let a = SystemTime::now();"}]}