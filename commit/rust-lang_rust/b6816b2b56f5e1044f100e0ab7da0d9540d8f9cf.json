{"sha": "b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ODE2YjJiNTZmNWUxMDQ0ZjEwMGUwYWI3ZGEwZDk1NDBkOGY5Y2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-22T08:04:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-30T08:11:59Z"}, "message": "please the tidy", "tree": {"sha": "940feea1d0ddd7eeca312d829e196f12f085a109", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/940feea1d0ddd7eeca312d829e196f12f085a109"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "html_url": "https://github.com/rust-lang/rust/commit/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23cd90ed41b6f1299d51da80cc6481f28a4b0f1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/23cd90ed41b6f1299d51da80cc6481f28a4b0f1f", "html_url": "https://github.com/rust-lang/rust/commit/23cd90ed41b6f1299d51da80cc6481f28a4b0f1f"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "c20864183f47a0cf774efa72fa78d875f142a83f", "filename": "src/librustc/ich/impls_mir.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_mir.rs?ref=b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "patch": "@@ -243,7 +243,8 @@ for mir::StatementKind<'tcx> {\n     }\n }\n \n-impl<'a, 'gcx, 'tcx, T> HashStable<StableHashingContext<'a, 'gcx, 'tcx>> for mir::ValidationOperand<'tcx, T>\n+impl<'a, 'gcx, 'tcx, T> HashStable<StableHashingContext<'a, 'gcx, 'tcx>>\n+    for mir::ValidationOperand<'tcx, T>\n     where T: HashStable<StableHashingContext<'a, 'gcx, 'tcx>>\n {\n     fn hash_stable<W: StableHasherResult>(&self,"}, {"sha": "3ee86dbdc846951f203682e158f685065618f6ca", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "patch": "@@ -1596,7 +1596,8 @@ impl<'tcx> TypeFoldable<'tcx> for Statement<'tcx> {\n             // trait with a `fn visit_extent`.\n             EndRegion(ref _extent) => false,\n \n-            Validate(ref _op, ref lvalues) => lvalues.iter().any(|ty_and_lvalue| ty_and_lvalue.visit_with(visitor)),\n+            Validate(ref _op, ref lvalues) =>\n+                lvalues.iter().any(|ty_and_lvalue| ty_and_lvalue.visit_with(visitor)),\n \n             Nop => false,\n         }"}, {"sha": "d91db41d20d33191a6a60d64013d479619b13044", "filename": "src/librustc_mir/transform/add_validation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs?ref=b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "patch": "@@ -89,7 +89,7 @@ impl MirPass for AddValidation {\n             return;\n         }\n \n-        let local_decls = mir.local_decls.clone(); // TODO: Find a way to get rid of this clone.\n+        let local_decls = mir.local_decls.clone(); // FIXME: Find a way to get rid of this clone.\n \n         /// Convert an lvalue to a validation operand.\n         let lval_to_operand = |lval: Lvalue<'tcx>| -> ValidationOperand<'tcx, Lvalue<'tcx>> {\n@@ -104,7 +104,7 @@ impl MirPass for AddValidation {\n             let acquire_stmt = Statement {\n                 source_info: SourceInfo {\n                     scope: ARGUMENT_VISIBILITY_SCOPE,\n-                    span: mir.span, // TODO: Consider using just the span covering the function\n+                    span: mir.span, // FIXME: Consider using just the span covering the function\n                                     // argument declaration.\n                 },\n                 kind: StatementKind::Validate(ValidationOp::Acquire,"}, {"sha": "1a31bf975307caf47430b8683d6c4fc91be4ace4", "filename": "src/librustc_mir/transform/clean_end_regions.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc_mir%2Ftransform%2Fclean_end_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc_mir%2Ftransform%2Fclean_end_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fclean_end_regions.rs?ref=b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "patch": "@@ -43,7 +43,10 @@ impl MirPass for CleanEndRegions {\n                           _tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                           _source: MirSource,\n                           mir: &mut Mir<'tcx>) {\n-        let mut gather = GatherBorrowedRegions { seen_regions: FxHashSet(), in_validation_statement: false };\n+        let mut gather = GatherBorrowedRegions {\n+            seen_regions: FxHashSet(),\n+            in_validation_statement: false\n+        };\n         gather.visit_mir(mir);\n \n         let mut delete = DeleteTrivialEndRegions { seen_regions: &mut gather.seen_regions };"}, {"sha": "f01d71fde2648af2d0b144a3ac45ec7a217f40d2", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=b6816b2b56f5e1044f100e0ab7da0d9540d8f9cf", "patch": "@@ -11,8 +11,8 @@\n //! This pass erases all early-bound regions from the types occuring in the MIR.\n //! We want to do this once just before trans, so trans does not have to take\n //! care erasing regions all over the place.\n-//! NOTE:  We do NOT erase regions of statements that are relevant for \"types-as-contracts\"-validation,\n-//! namely, AcquireValid, ReleaseValid, and EndRegion.\n+//! NOTE:  We do NOT erase regions of statements that are relevant for\n+//! \"types-as-contracts\"-validation, namely, AcquireValid, ReleaseValid, and EndRegion.\n \n use rustc::ty::subst::Substs;\n use rustc::ty::{Ty, TyCtxt, ClosureSubsts};"}]}