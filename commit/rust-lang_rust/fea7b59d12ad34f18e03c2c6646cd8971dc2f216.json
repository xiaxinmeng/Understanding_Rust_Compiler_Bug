{"sha": "fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "node_id": "C_kwDOAAsO6NoAKGZlYTdiNTlkMTJhZDM0ZjE4ZTAzYzJjNjY0NmNkODk3MWRjMmYyMTY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-26T20:48:50Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-03T15:59:21Z"}, "message": "Make check_match take a LocalDefId.", "tree": {"sha": "8584b04d04d6dd3c8f3ecb7b79ecc9da158244ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8584b04d04d6dd3c8f3ecb7b79ecc9da158244ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "html_url": "https://github.com/rust-lang/rust/commit/fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17675855094906ba90aca2f119be8fb7afc4d456", "url": "https://api.github.com/repos/rust-lang/rust/commits/17675855094906ba90aca2f119be8fb7afc4d456", "html_url": "https://github.com/rust-lang/rust/commit/17675855094906ba90aca2f119be8fb7afc4d456"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "8d4892470ac7b5cc7f9cd8e7b17555170fc7deb2", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "patch": "@@ -765,7 +765,7 @@ fn analysis(tcx: TyCtxt<'_>, (): ()) -> Result<()> {\n         parallel!(\n             {\n                 sess.time(\"match_checking\", || {\n-                    tcx.hir().par_body_owners(|def_id| tcx.ensure().check_match(def_id.to_def_id()))\n+                    tcx.hir().par_body_owners(|def_id| tcx.ensure().check_match(def_id))\n                 });\n             },\n             {"}, {"sha": "d31b11f08927b60f1d34a8ce19bf6d30dde05e38", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "patch": "@@ -1114,9 +1114,9 @@ rustc_queries! {\n         desc { \"converting literal to mir constant\" }\n     }\n \n-    query check_match(key: DefId) {\n-        desc { |tcx| \"match-checking `{}`\", tcx.def_path_str(key) }\n-        cache_on_disk_if { key.is_local() }\n+    query check_match(key: LocalDefId) {\n+        desc { |tcx| \"match-checking `{}`\", tcx.def_path_str(key.to_def_id()) }\n+        cache_on_disk_if { true }\n     }\n \n     /// Performs part of the privacy check and computes effective visibilities."}, {"sha": "59a7253ea499981f619d1042a64fb0148b6a7261", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea7b59d12ad34f18e03c2c6646cd8971dc2f216/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=fea7b59d12ad34f18e03c2c6646cd8971dc2f216", "patch": "@@ -14,7 +14,7 @@ use rustc_errors::{\n };\n use rustc_hir as hir;\n use rustc_hir::def::*;\n-use rustc_hir::def_id::DefId;\n+use rustc_hir::def_id::LocalDefId;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::{HirId, Pat};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n@@ -27,12 +27,8 @@ use rustc_session::Session;\n use rustc_span::source_map::Spanned;\n use rustc_span::{BytePos, Span};\n \n-pub(crate) fn check_match(tcx: TyCtxt<'_>, def_id: DefId) {\n-    let body_id = match def_id.as_local() {\n-        None => return,\n-        Some(def_id) => tcx.hir().body_owned_by(def_id),\n-    };\n-\n+pub(crate) fn check_match(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n+    let body_id = tcx.hir().body_owned_by(def_id);\n     let pattern_arena = TypedArena::default();\n     let mut visitor = MatchVisitor {\n         tcx,"}]}