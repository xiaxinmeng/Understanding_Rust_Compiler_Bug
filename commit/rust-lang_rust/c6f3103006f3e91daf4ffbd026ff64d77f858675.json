{"sha": "c6f3103006f3e91daf4ffbd026ff64d77f858675", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ZjMxMDMwMDZmM2U5MWRhZjRmZmJkMDI2ZmY2NGQ3N2Y4NTg2NzU=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-11T18:53:33Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-06-12T06:46:38Z"}, "message": "librustc: Don't allow duplicate methods on impls.", "tree": {"sha": "e613181934fc214c86bb88abfd8782a5e4cf05c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e613181934fc214c86bb88abfd8782a5e4cf05c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6f3103006f3e91daf4ffbd026ff64d77f858675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f3103006f3e91daf4ffbd026ff64d77f858675", "html_url": "https://github.com/rust-lang/rust/commit/c6f3103006f3e91daf4ffbd026ff64d77f858675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6f3103006f3e91daf4ffbd026ff64d77f858675/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "html_url": "https://github.com/rust-lang/rust/commit/8fc14b6e626b5f0b98fb0cee425b7813b9de9851"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "e4be8dac712650eb584d31ea0554a589ca094490", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c6f3103006f3e91daf4ffbd026ff64d77f858675/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6f3103006f3e91daf4ffbd026ff64d77f858675/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=c6f3103006f3e91daf4ffbd026ff64d77f858675", "patch": "@@ -1226,11 +1226,25 @@ impl Resolver {\n                 // the same module that declared the type.\n \n                 // Bail out early if there are no static methods.\n+                let mut methods_seen = HashMap::new();\n                 let mut has_static_methods = false;\n                 for methods.each |method| {\n                     match method.explicit_self.node {\n                         sty_static => has_static_methods = true,\n-                        _ => {}\n+                        _ => {\n+                            // Make sure you can't define duplicate methods\n+                            let ident = method.ident;\n+                            let span = method.span;\n+                            let old_sp = methods_seen.find_or_insert(ident, span);\n+                            if *old_sp != span {\n+                                self.session.span_err(span,\n+                                                      fmt!(\"duplicate definition of method %s\",\n+                                                           *self.session.str_of(ident)));\n+                                self.session.span_note(*old_sp,\n+                                                       fmt!(\"first definition of method %s here\",\n+                                                            *self.session.str_of(ident)));\n+                            }\n+                        }\n                     }\n                 }\n "}]}