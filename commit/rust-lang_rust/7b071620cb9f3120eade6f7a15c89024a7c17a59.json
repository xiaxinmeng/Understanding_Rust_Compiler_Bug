{"sha": "7b071620cb9f3120eade6f7a15c89024a7c17a59", "node_id": "C_kwDOAAsO6NoAKDdiMDcxNjIwY2I5ZjMxMjBlYWRlNmY3YTE1Yzg5MDI0YTdjMTdhNTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-21T23:12:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-21T23:12:41Z"}, "message": "Auto merge of #2500 - Hiroki6:make-vector-clock-private, r=RalfJung\n\nmove vector_clock and sync into concurrency & make vector_clock private\n\nCloses https://github.com/rust-lang/miri/issues/2199\n\nThe thread.rs didn't have to be moved to build.\nIf it makes more sense to move the thread.rs as well, please let me know. I can move it as well.", "tree": {"sha": "de478bd629637fb72eaba06370f04a6ab6988c1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de478bd629637fb72eaba06370f04a6ab6988c1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b071620cb9f3120eade6f7a15c89024a7c17a59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b071620cb9f3120eade6f7a15c89024a7c17a59", "html_url": "https://github.com/rust-lang/rust/commit/7b071620cb9f3120eade6f7a15c89024a7c17a59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b071620cb9f3120eade6f7a15c89024a7c17a59/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab88e64b152d3704c35db96dbbc6efaaed67773f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab88e64b152d3704c35db96dbbc6efaaed67773f", "html_url": "https://github.com/rust-lang/rust/commit/ab88e64b152d3704c35db96dbbc6efaaed67773f"}, {"sha": "8ee68490122fba1849565e99804e8c78ee4d9e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee68490122fba1849565e99804e8c78ee4d9e3a", "html_url": "https://github.com/rust-lang/rust/commit/8ee68490122fba1849565e99804e8c78ee4d9e3a"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "0e176ec91fcfe99fae232c5ba374082fa8474420", "filename": "src/concurrency/data_race.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fdata_race.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -54,7 +54,10 @@ use rustc_target::abi::{Align, Size};\n \n use crate::*;\n \n-use super::weak_memory::EvalContextExt as _;\n+use super::{\n+    vector_clock::{VClock, VTimestamp, VectorIdx},\n+    weak_memory::EvalContextExt as _,\n+};\n \n pub type AllocExtra = VClockAlloc;\n "}, {"sha": "07c3f0d5993e2ac2d8409cd40cb4746e94c5e4b2", "filename": "src/concurrency/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fmod.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -1,3 +1,5 @@\n pub mod data_race;\n mod range_object_map;\n+pub mod sync;\n+mod vector_clock;\n pub mod weak_memory;"}, {"sha": "81e5a83a1fb5ec7cb1e79731f5e1894b9338f7c9", "filename": "src/concurrency/sync.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fsync.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -7,6 +7,7 @@ use log::trace;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::{Idx, IndexVec};\n \n+use super::vector_clock::VClock;\n use crate::*;\n \n /// We cannot use the `newtype_index!` macro because we have to use 0 as a\n@@ -150,7 +151,7 @@ struct FutexWaiter {\n \n /// The state of all synchronization variables.\n #[derive(Default, Debug)]\n-pub(super) struct SynchronizationState {\n+pub(crate) struct SynchronizationState {\n     mutexes: IndexVec<MutexId, Mutex>,\n     rwlocks: IndexVec<RwLockId, RwLock>,\n     condvars: IndexVec<CondvarId, Condvar>,", "previous_filename": "src/sync.rs"}, {"sha": "716fdba0f67c29aee28d5448eba1c55a46660956", "filename": "src/concurrency/vector_clock.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fvector_clock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fvector_clock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fvector_clock.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "previous_filename": "src/vector_clock.rs"}, {"sha": "30037b6394e5641a934a7fc4538f94d6748c65b2", "filename": "src/concurrency/weak_memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fweak_memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fconcurrency%2Fweak_memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fweak_memory.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -87,6 +87,7 @@ use crate::*;\n use super::{\n     data_race::{GlobalState as DataRaceState, ThreadClockSet},\n     range_object_map::{AccessType, RangeObjectMap},\n+    vector_clock::{VClock, VTimestamp, VectorIdx},\n };\n \n pub type AllocExtra = StoreBufferAlloc;"}, {"sha": "550d9b9d7b55a132d9a7f12180335c36805ac687", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -61,9 +61,7 @@ mod operator;\n mod range_map;\n mod shims;\n mod stacked_borrows;\n-mod sync;\n-mod thread;\n-mod vector_clock;\n+pub mod thread;\n \n // Establish a \"crate-wide prelude\": we often import `crate::*`.\n \n@@ -105,12 +103,10 @@ pub use crate::range_map::RangeMap;\n pub use crate::stacked_borrows::{\n     CallId, EvalContextExt as StackedBorEvalContextExt, Item, Permission, SbTag, Stack, Stacks,\n };\n-pub use crate::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n pub use crate::thread::{\n     EvalContextExt as ThreadsEvalContextExt, SchedulingAction, ThreadId, ThreadManager, ThreadState,\n };\n-pub use crate::vector_clock::{VClock, VTimestamp, VectorIdx};\n-\n+pub use concurrency::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n pub const MIRI_DEFAULT_ARGS: &[&str] = &["}, {"sha": "d639939ec5bba7ce118f579679db8c5977ca24b5", "filename": "src/shims/time.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -1,7 +1,7 @@\n use std::time::{Duration, Instant, SystemTime};\n \n+use crate::thread::Time;\n use crate::*;\n-use thread::Time;\n \n /// Returns the time elapsed between the provided time and the unix epoch as a `Duration`.\n pub fn system_time_to_duration<'tcx>(time: &SystemTime) -> InterpResult<'tcx, Duration> {"}, {"sha": "246cb100bcb5a7aeb2eacedba1d6ce02b45aee5e", "filename": "src/shims/unix/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fshims%2Funix%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fshims%2Funix%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fsync.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -3,8 +3,8 @@ use std::time::SystemTime;\n use rustc_hir::LangItem;\n use rustc_middle::ty::{layout::TyAndLayout, query::TyCtxtAt, subst::Subst, Ty};\n \n+use crate::thread::Time;\n use crate::*;\n-use thread::Time;\n \n // pthread_mutexattr_t is either 4 or 8 bytes, depending on the platform.\n "}, {"sha": "dc8b1c291148d52ff577431153dfc744bd6f23a6", "filename": "src/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b071620cb9f3120eade6f7a15c89024a7c17a59/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=7b071620cb9f3120eade6f7a15c89024a7c17a59", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::ty::layout::TyAndLayout;\n use rustc_target::spec::abi::Abi;\n \n use crate::concurrency::data_race;\n-use crate::sync::SynchronizationState;\n+use crate::concurrency::sync::SynchronizationState;\n use crate::*;\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq)]"}]}