{"sha": "ff689a1404081871afd31814f31db508bcd560dc", "node_id": "C_kwDOAAsO6NoAKGZmNjg5YTE0MDQwODE4NzFhZmQzMTgxNGYzMWRiNTA4YmNkNTYwZGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-23T06:14:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-23T06:14:31Z"}, "message": "Rollup merge of #103355 - compiler-errors:rpitit-default-check, r=oli-obk\n\nHandle return-position `impl Trait` in traits properly in `register_hidden_type`\n\nThe bounds that we get by calling `bound_explicit_item_bounds` from an RPITIT have projections, not opaques, but when we're *registering* an opaque, we want to treat it like an opaque.\n\nCoincidentally fixes #102688 as well, which makes sense, since that was failing because we were inferring an opaque type to be equal to itself (opaque cycle error => \"cannot resolve opaque type\").\n\nFixes #103352\n\nr? ```@oli-obk```", "tree": {"sha": "747856acd945f9fbd3dd5d3e1c844c0120888107", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/747856acd945f9fbd3dd5d3e1c844c0120888107"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff689a1404081871afd31814f31db508bcd560dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjVNvHCRBK7hj4Ov3rIwAA2dAIAF2a7uP4UBE5zT/CR/Zn6U6c\n2fYn4U4h03BjA19iN71OlAV54PPsbmhYaTeNRT5fr0tg/WrXVVflPPOuau6hl8d7\nI5JqewybTIG8S5faM6CEDVKIuNROeN6BFKm5asv/34w90qIC+QkIUhsbHPI2Qkxs\n4mLPNndccyaoH3VJVKuAnjMz1H1ACgPP9ERGx9Ako0cphQGmC4WM2jmusIxH8odk\nmz6sMIMhTJ79qa7JpGLoDPHAd/kf9g/lHjOzKuFDgA7mrOOzgA/DJreKKK5uJLzt\nCgEhVD5evF1VkrZ7h0zIc1QANED0hnsw2sRkhfSDV9Ox7QMOVsMAvyL/nU3lHyo=\n=l+vI\n-----END PGP SIGNATURE-----\n", "payload": "tree 747856acd945f9fbd3dd5d3e1c844c0120888107\nparent b656f5e9a64d6fe0f0b75e76e6350fb08cea562d\nparent 419fde7a38fab7c0355d4091ddafd8d775e63f3f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1666505671 +0200\ncommitter GitHub <noreply@github.com> 1666505671 +0200\n\nRollup merge of #103355 - compiler-errors:rpitit-default-check, r=oli-obk\n\nHandle return-position `impl Trait` in traits properly in `register_hidden_type`\n\nThe bounds that we get by calling `bound_explicit_item_bounds` from an RPITIT have projections, not opaques, but when we're *registering* an opaque, we want to treat it like an opaque.\n\nCoincidentally fixes #102688 as well, which makes sense, since that was failing because we were inferring an opaque type to be equal to itself (opaque cycle error => \"cannot resolve opaque type\").\n\nFixes #103352\n\nr? ```@oli-obk```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff689a1404081871afd31814f31db508bcd560dc", "html_url": "https://github.com/rust-lang/rust/commit/ff689a1404081871afd31814f31db508bcd560dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff689a1404081871afd31814f31db508bcd560dc/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b656f5e9a64d6fe0f0b75e76e6350fb08cea562d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b656f5e9a64d6fe0f0b75e76e6350fb08cea562d", "html_url": "https://github.com/rust-lang/rust/commit/b656f5e9a64d6fe0f0b75e76e6350fb08cea562d"}, {"sha": "419fde7a38fab7c0355d4091ddafd8d775e63f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/419fde7a38fab7c0355d4091ddafd8d775e63f3f", "html_url": "https://github.com/rust-lang/rust/commit/419fde7a38fab7c0355d4091ddafd8d775e63f3f"}], "stats": {"total": 77, "additions": 63, "deletions": 14}, "files": [{"sha": "0a4ecc4c033e1ce9ae0d215871a5105e5120a724", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ff689a1404081871afd31814f31db508bcd560dc/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff689a1404081871afd31814f31db508bcd560dc/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=ff689a1404081871afd31814f31db508bcd560dc", "patch": "@@ -1,6 +1,7 @@\n use crate::errors::OpaqueHiddenTypeDiag;\n use crate::infer::{DefiningAnchor, InferCtxt, InferOk};\n use crate::traits;\n+use hir::def::DefKind;\n use hir::def_id::{DefId, LocalDefId};\n use hir::{HirId, OpaqueTyOrigin};\n use rustc_data_structures::sync::Lrc;\n@@ -549,7 +550,12 @@ impl<'tcx> InferCtxt<'tcx> {\n                 ty_op: |ty| match *ty.kind() {\n                     // We can't normalize associated types from `rustc_infer`,\n                     // but we can eagerly register inference variables for them.\n-                    ty::Projection(projection_ty) if !projection_ty.has_escaping_bound_vars() => {\n+                    // FIXME(RPITIT): Don't replace RPITITs with inference vars.\n+                    ty::Projection(projection_ty)\n+                        if !projection_ty.has_escaping_bound_vars()\n+                            && tcx.def_kind(projection_ty.item_def_id)\n+                                != DefKind::ImplTraitPlaceholder =>\n+                    {\n                         self.infer_projection(\n                             param_env,\n                             projection_ty,\n@@ -565,6 +571,12 @@ impl<'tcx> InferCtxt<'tcx> {\n                     {\n                         hidden_ty\n                     }\n+                    // FIXME(RPITIT): This can go away when we move to associated types\n+                    ty::Projection(proj)\n+                        if def_id.to_def_id() == proj.item_def_id && substs == proj.substs =>\n+                    {\n+                        hidden_ty\n+                    }\n                     _ => ty,\n                 },\n                 lt_op: |lt| lt,"}, {"sha": "45ae2b8ad3a69c83a7ae23660dbc2e69e63518c8", "filename": "src/test/ui/impl-trait/in-trait/default-body-type-err-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err-2.rs?ref=ff689a1404081871afd31814f31db508bcd560dc", "patch": "@@ -0,0 +1,13 @@\n+// edition:2021\n+\n+#![allow(incomplete_features)]\n+#![feature(async_fn_in_trait)]\n+\n+pub trait Foo {\n+    async fn woopsie_async(&self) -> String {\n+        42\n+        //~^ ERROR mismatched types\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "142b1bff1a46a265a776325d7e73eb0894cf4b22", "filename": "src/test/ui/impl-trait/in-trait/default-body-type-err-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err-2.stderr?ref=ff689a1404081871afd31814f31db508bcd560dc", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/default-body-type-err-2.rs:8:9\n+   |\n+LL |         42\n+   |         ^^- help: try using a conversion method: `.to_string()`\n+   |         |\n+   |         expected struct `String`, found integer\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "ac9baf91cae37f17e72ccfa5b32744223ec19f80", "filename": "src/test/ui/impl-trait/in-trait/default-body-type-err.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err.rs?ref=ff689a1404081871afd31814f31db508bcd560dc", "patch": "@@ -0,0 +1,13 @@\n+#![allow(incomplete_features)]\n+#![feature(return_position_impl_trait_in_trait)]\n+\n+use std::ops::Deref;\n+\n+pub trait Foo {\n+    fn lol(&self) -> impl Deref<Target = String> {\n+        //~^ type mismatch resolving `<&i32 as Deref>::Target == String`\n+        &1i32\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "461247a3e3ff4c532c843ad19f1c8034b9d6cf79", "filename": "src/test/ui/impl-trait/in-trait/default-body-type-err.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-type-err.stderr?ref=ff689a1404081871afd31814f31db508bcd560dc", "patch": "@@ -0,0 +1,12 @@\n+error[E0271]: type mismatch resolving `<&i32 as Deref>::Target == String`\n+  --> $DIR/default-body-type-err.rs:7:22\n+   |\n+LL |     fn lol(&self) -> impl Deref<Target = String> {\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found struct `String`\n+LL |\n+LL |         &1i32\n+   |         ----- return type was inferred to be `&i32` here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0271`."}, {"sha": "ad3cc7c2524b90f650b23761300d2591dfdc821b", "filename": "src/test/ui/impl-trait/in-trait/default-body-with-rpit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff689a1404081871afd31814f31db508bcd560dc/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.rs?ref=ff689a1404081871afd31814f31db508bcd560dc", "patch": "@@ -1,4 +1,4 @@\n-// known-bug: #102688\n+// check-pass\n // edition:2021\n \n #![feature(async_fn_in_trait, return_position_impl_trait_in_trait)]"}, {"sha": "4529d301f9e91e3c50ee151bd97a5de6e4d7a335", "filename": "src/test/ui/impl-trait/in-trait/default-body-with-rpit.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b656f5e9a64d6fe0f0b75e76e6350fb08cea562d/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b656f5e9a64d6fe0f0b75e76e6350fb08cea562d/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-body-with-rpit.stderr?ref=b656f5e9a64d6fe0f0b75e76e6350fb08cea562d", "patch": "@@ -1,12 +0,0 @@\n-error[E0720]: cannot resolve opaque type\n-  --> $DIR/default-body-with-rpit.rs:10:28\n-   |\n-LL |     async fn baz(&self) -> impl Debug {\n-   |                            ^^^^^^^^^^ cannot resolve opaque type\n-   |\n-   = note: these returned values have a concrete \"never\" type\n-   = help: this error will resolve once the item's body returns a concrete type\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0720`."}]}