{"sha": "32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYWZiM2M0MzZlYjM5MDlhNjM2ZmQ0ZmNlMjBhMWJhMDNjYzg4ZWM=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-27T16:56:22Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: simplify including licenses and readmes to tarballs", "tree": {"sha": "17fe63eb91cdddee8a3bcfb6cc219692348a6925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17fe63eb91cdddee8a3bcfb6cc219692348a6925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjfgACgkQPgar6Auq\n8ZxEcA//QZATI/19gPGR9NtzcaHDRCsVA+dLwLl4onfdZffvrhMtVV4f/TptH+Qs\nS/rsh5n1PMIMltyWqiuv4P5UzjPzryWiRIrs4ywCvd6YpCCpaN6fDw4w3UJ9lbkr\nfgMWb23cBW9MMSMTpFanBCHyz0EJp+9mEpgsjXMmMaU+fv9gxt+kWH9ocv51RJ5j\nwZdYnZY3f/CnDmeTnnnVZ1TZFdV7WpaBeKdKrdu4HbJDbNsMRt8oJkbRBAHzZvRM\nwy37CcgzGCE2AECyoE7K1ysm87OEtasMk+NG6TivndPITa9FQClRziKXfkTKIdGr\nq3/fsuBaFQC8MD1trG/sKJyz52VIOfhpHgq2ziguHOfMoKUNliASDRQb0nXHSkIa\nwyIiySPhgYlXEibFrIKn+1wz+Eti1ScX9pnSp/UokEz3pE8L6q+gEF6srW1XhC47\nXfj9UBJQq5wzU+Q8zWq4XkXawG/xuAAsCPYBRV4JJJHmgKcim5YpRBaw+dqHu86h\nClNEcK+T9n5FcAx7jS34HFHINa3wSnM46ZfCeydTlv0hQifarFwWlPTZLoF+q1Zq\njtgRlVIDvgLEGdWCb+5HI9PcLIaPtp2fmNRzmR0YSIzRr+HM1ksGVhChNMoSIQqC\nqvX8i+llHLYvv9s9wFD8/9JPTYcqzQpHdNQ6IfwhdYGmn0iAXps=\n=X9qY\n-----END PGP SIGNATURE-----", "payload": "tree 17fe63eb91cdddee8a3bcfb6cc219692348a6925\nparent 521b884913b603ddbdcc1af97b772e40d4ea5f84\nauthor Pietro Albini <pietro@pietroalbini.org> 1606496182 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: simplify including licenses and readmes to tarballs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "html_url": "https://github.com/rust-lang/rust/commit/32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32afb3c436eb3909a636fd4fce20a1ba03cc88ec/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "521b884913b603ddbdcc1af97b772e40d4ea5f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/521b884913b603ddbdcc1af97b772e40d4ea5f84", "html_url": "https://github.com/rust-lang/rust/commit/521b884913b603ddbdcc1af97b772e40d4ea5f84"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "aa4d518d0143ac3c239af8d64e67ec953e86d812", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/32afb3c436eb3909a636fd4fce20a1ba03cc88ec/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32afb3c436eb3909a636fd4fce20a1ba03cc88ec/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "patch": "@@ -1024,13 +1024,10 @@ impl Step for Cargo {\n         tarball.set_overlay(OverlayKind::Cargo);\n \n         tarball.add_file(&cargo, \"bin\", 0o755);\n-        tarball.add_file(src.join(\"README.md\"), \"share/doc/cargo\", 0o644);\n-        tarball.add_file(src.join(\"LICENSE-MIT\"), \"share/doc/cargo\", 0o644);\n-        tarball.add_file(src.join(\"LICENSE-APACHE\"), \"share/doc/cargo\", 0o644);\n-        tarball.add_file(src.join(\"LICENSE-THIRD-PARTY\"), \"share/doc/cargo\", 0o644);\n         tarball.add_file(etc.join(\"_cargo\"), \"share/zsh/site-functions\", 0o644);\n         tarball.add_renamed_file(etc.join(\"cargo.bashcomp.sh\"), \"etc/bash_completion.d\", \"cargo\");\n         tarball.add_dir(etc.join(\"man\"), \"share/man/man1\");\n+        tarball.add_legal_and_readme_to(\"share/doc/cargo\");\n \n         for dirent in fs::read_dir(cargo.parent().unwrap()).expect(\"read_dir\") {\n             let dirent = dirent.expect(\"read dir entry\");\n@@ -1265,16 +1262,13 @@ impl Step for Clippy {\n         let cargoclippy = builder\n             .ensure(tool::CargoClippy { compiler, target, extra_features: Vec::new() })\n             .expect(\"clippy expected to build - essential tool\");\n-        let src = builder.src.join(\"src/tools/clippy\");\n \n         let mut tarball = Tarball::new(builder, \"clippy\", &target.triple);\n         tarball.set_overlay(OverlayKind::Clippy);\n         tarball.is_preview(true);\n         tarball.add_file(clippy, \"bin\", 0o755);\n         tarball.add_file(cargoclippy, \"bin\", 0o755);\n-        tarball.add_file(src.join(\"README.md\"), \"share/doc/clippy\", 0o644);\n-        tarball.add_file(src.join(\"LICENSE-APACHE\"), \"share/doc/clippy\", 0o644);\n-        tarball.add_file(src.join(\"LICENSE-MIT\"), \"share/doc/clippy\", 0o644);\n+        tarball.add_legal_and_readme_to(\"share/doc/clippy\");\n         tarball.generate()\n     }\n }"}, {"sha": "2c8f69e94b3ff9ff8f59996e57e1455480480902", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/32afb3c436eb3909a636fd4fce20a1ba03cc88ec/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32afb3c436eb3909a636fd4fce20a1ba03cc88ec/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "patch": "@@ -13,7 +13,7 @@ pub(crate) enum OverlayKind {\n }\n \n impl OverlayKind {\n-    fn included_files(&self) -> &[&str] {\n+    fn legal_and_readme(&self) -> &[&str] {\n         match self {\n             OverlayKind::Rust => &[\"COPYRIGHT\", \"LICENSE-APACHE\", \"LICENSE-MIT\", \"README.md\"],\n             OverlayKind::LLVM => {\n@@ -140,6 +140,12 @@ impl<'a> Tarball<'a> {\n         self.builder.copy(src.as_ref(), &destdir.join(new_name));\n     }\n \n+    pub(crate) fn add_legal_and_readme_to(&self, destdir: impl AsRef<Path>) {\n+        for file in self.overlay.legal_and_readme() {\n+            self.add_file(self.builder.src.join(file), destdir.as_ref(), 0o644);\n+        }\n+    }\n+\n     pub(crate) fn add_dir(&self, src: impl AsRef<Path>, dest: impl AsRef<Path>) {\n         let dest = self.image_dir.join(dest.as_ref());\n \n@@ -153,7 +159,7 @@ impl<'a> Tarball<'a> {\n         if let Some(sha) = self.builder.rust_sha() {\n             self.builder.create(&self.overlay_dir.join(\"git-commit-hash\"), &sha);\n         }\n-        for file in self.overlay.included_files() {\n+        for file in self.overlay.legal_and_readme() {\n             self.builder.install(&self.builder.src.join(file), &self.overlay_dir, 0o644);\n         }\n "}]}