{"sha": "482e407a1f4a2c67e7fe98682612b78b35025e7a", "node_id": "C_kwDOAAsO6NoAKDQ4MmU0MDdhMWY0YTJjNjdlN2ZlOTg2ODI2MTJiNzhiMzUwMjVlN2E", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-04-21T15:05:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-21T15:05:29Z"}, "message": "Rollup merge of #110633 - scottmcm:more-take, r=thomcc\n\nMore `mem::take` in `library`\n\nA bunch of places were using `replace(\u2026, &mut [])`, but that can just be `take`.", "tree": {"sha": "8a91eea370aa18cd830d2dad281b30783219289c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a91eea370aa18cd830d2dad281b30783219289c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/482e407a1f4a2c67e7fe98682612b78b35025e7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkQqY5CRBK7hj4Ov3rIwAATfQIAEqva7hJ0QSt6JGaBbulQIjT\ntvg1LQQVDGgQ4UKrZXdiVxNeEgNRoc4wMuPzPEzQ5Id8F8u2OEaKeNX7cYpGvgc/\njDUs5HTwf74neKn0QxCIaywHFAFVO4UaIiIKvzBwUIBCJGizhAJkd1esbVXEcWMY\nCtoPaISjMUgk6Fj6g67nAfiTy4GU7HxmeEdjjagKAVdnxrs4be6PZi/jWPWIBT6K\nkCfuwj4gs7AsXNlEJmZqGDZeZuS08CdWg4dz0mGvgN8SuICKUQoO49TbswNm7U6H\n9eRhn3w/29FljgMFPWDs3wycxhSSgaPOEnKvFqsHZynMBL9nHmBITPyCDex+lPU=\n=aX4x\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a91eea370aa18cd830d2dad281b30783219289c\nparent 1d1453a2f643c2dce39daaac560e92dec599baf4\nparent 8055bb87c5d17f4e108097f24171cb8baab71072\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1682089529 +0530\ncommitter GitHub <noreply@github.com> 1682089529 +0530\n\nRollup merge of #110633 - scottmcm:more-take, r=thomcc\n\nMore `mem::take` in `library`\n\nA bunch of places were using `replace(\u2026, &mut [])`, but that can just be `take`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/482e407a1f4a2c67e7fe98682612b78b35025e7a", "html_url": "https://github.com/rust-lang/rust/commit/482e407a1f4a2c67e7fe98682612b78b35025e7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/482e407a1f4a2c67e7fe98682612b78b35025e7a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d1453a2f643c2dce39daaac560e92dec599baf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1453a2f643c2dce39daaac560e92dec599baf4", "html_url": "https://github.com/rust-lang/rust/commit/1d1453a2f643c2dce39daaac560e92dec599baf4"}, {"sha": "8055bb87c5d17f4e108097f24171cb8baab71072", "url": "https://api.github.com/repos/rust-lang/rust/commits/8055bb87c5d17f4e108097f24171cb8baab71072", "html_url": "https://github.com/rust-lang/rust/commit/8055bb87c5d17f4e108097f24171cb8baab71072"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "e3ca6eb7833f4408a5d90c6796b04f5dd4c6c5fb", "filename": "library/alloc/src/vec/drain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs?ref=482e407a1f4a2c67e7fe98682612b78b35025e7a", "patch": "@@ -197,7 +197,7 @@ impl<T, A: Allocator> Drop for Drain<'_, T, A> {\n             }\n         }\n \n-        let iter = mem::replace(&mut self.iter, (&mut []).iter());\n+        let iter = mem::take(&mut self.iter);\n         let drop_len = iter.len();\n \n         let mut vec = self.vec;"}, {"sha": "b2dd92a2379a83ea3c305cbc871139950040c067", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=482e407a1f4a2c67e7fe98682612b78b35025e7a", "patch": "@@ -685,7 +685,7 @@ where\n             None\n         } else {\n             self.finished = true;\n-            Some(mem::replace(&mut self.v, &mut []))\n+            Some(mem::take(&mut self.v))\n         }\n     }\n }\n@@ -749,7 +749,7 @@ where\n         match idx_opt {\n             None => self.finish(),\n             Some(idx) => {\n-                let tmp = mem::replace(&mut self.v, &mut []);\n+                let tmp = mem::take(&mut self.v);\n                 let (head, tail) = tmp.split_at_mut(idx);\n                 self.v = head;\n                 Some(&mut tail[1..])\n@@ -830,7 +830,7 @@ where\n         if idx == self.v.len() {\n             self.finished = true;\n         }\n-        let tmp = mem::replace(&mut self.v, &mut []);\n+        let tmp = mem::take(&mut self.v);\n         let (head, tail) = tmp.split_at_mut(idx);\n         self.v = tail;\n         Some(head)\n@@ -876,7 +876,7 @@ where\n         if idx == 0 {\n             self.finished = true;\n         }\n-        let tmp = mem::replace(&mut self.v, &mut []);\n+        let tmp = mem::take(&mut self.v);\n         let (head, tail) = tmp.split_at_mut(idx);\n         self.v = head;\n         Some(tail)"}, {"sha": "a7428776d8f86978241a69a36fabe4c68aca0ed8", "filename": "library/std/src/io/impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fstd%2Fsrc%2Fio%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fstd%2Fsrc%2Fio%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fimpls.rs?ref=482e407a1f4a2c67e7fe98682612b78b35025e7a", "patch": "@@ -348,7 +348,7 @@ impl Write for &mut [u8] {\n     #[inline]\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         let amt = cmp::min(data.len(), self.len());\n-        let (a, b) = mem::replace(self, &mut []).split_at_mut(amt);\n+        let (a, b) = mem::take(self).split_at_mut(amt);\n         a.copy_from_slice(&data[..amt]);\n         *self = b;\n         Ok(amt)"}, {"sha": "8c1c8cac0efa71eb049f7ec6ac97cd329d11b333", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=482e407a1f4a2c67e7fe98682612b78b35025e7a", "patch": "@@ -253,7 +253,7 @@ mod tests;\n \n use crate::cmp;\n use crate::fmt;\n-use crate::mem::replace;\n+use crate::mem::take;\n use crate::ops::{Deref, DerefMut};\n use crate::slice;\n use crate::str;\n@@ -1186,7 +1186,7 @@ impl<'a> IoSliceMut<'a> {\n             }\n         }\n \n-        *bufs = &mut replace(bufs, &mut [])[remove..];\n+        *bufs = &mut take(bufs)[remove..];\n         if bufs.is_empty() {\n             assert!(n == accumulated_len, \"advancing io slices beyond their length\");\n         } else {\n@@ -1329,7 +1329,7 @@ impl<'a> IoSlice<'a> {\n             }\n         }\n \n-        *bufs = &mut replace(bufs, &mut [])[remove..];\n+        *bufs = &mut take(bufs)[remove..];\n         if bufs.is_empty() {\n             assert!(n == accumulated_len, \"advancing io slices beyond their length\");\n         } else {"}, {"sha": "6372fca74e0d703c27e4c0c00ffe2012b96214e4", "filename": "library/std/src/sys/unsupported/io.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482e407a1f4a2c67e7fe98682612b78b35025e7a/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fio.rs?ref=482e407a1f4a2c67e7fe98682612b78b35025e7a", "patch": "@@ -30,7 +30,7 @@ impl<'a> IoSliceMut<'a> {\n \n     #[inline]\n     pub fn advance(&mut self, n: usize) {\n-        let slice = mem::replace(&mut self.0, &mut []);\n+        let slice = mem::take(&mut self.0);\n         let (_, remaining) = slice.split_at_mut(n);\n         self.0 = remaining;\n     }"}]}