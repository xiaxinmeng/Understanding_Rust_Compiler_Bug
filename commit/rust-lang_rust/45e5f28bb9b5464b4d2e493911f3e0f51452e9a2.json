{"sha": "45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZTVmMjhiYjliNTQ2NGI0ZDJlNDkzOTExZjNlMGY1MTQ1MmU5YTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-10-08T09:24:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-08T09:24:41Z"}, "message": "Merge pull request #2067 from jugglerchris/no_effect_with_drop\n\nFix #2061 (don't suggest removing types which implement Drop)", "tree": {"sha": "7f9d448ef64e597e50b65350b17f737e29fc9cad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f9d448ef64e597e50b65350b17f737e29fc9cad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "html_url": "https://github.com/rust-lang/rust/commit/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12a7d1489aed893de9c6dc0a520e44cf3d349387", "url": "https://api.github.com/repos/rust-lang/rust/commits/12a7d1489aed893de9c6dc0a520e44cf3d349387", "html_url": "https://github.com/rust-lang/rust/commit/12a7d1489aed893de9c6dc0a520e44cf3d349387"}, {"sha": "dcaaab3801e095283706dc8d97ff69833aebe732", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcaaab3801e095283706dc8d97ff69833aebe732", "html_url": "https://github.com/rust-lang/rust/commit/dcaaab3801e095283706dc8d97ff69833aebe732"}], "stats": {"total": 331, "additions": 199, "deletions": 132}, "files": [{"sha": "f5543821949a4de453dc435da1d36b78ef7e3438", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::hir::def::Def;\n use rustc::hir::{BiAnd, BiOr, BlockCheckMode, Expr, Expr_, Stmt, StmtSemi, UnsafeSource};\n-use utils::{in_macro, snippet_opt, span_lint, span_lint_and_sugg};\n+use utils::{in_macro, snippet_opt, span_lint, span_lint_and_sugg, has_drop};\n use std::ops::Deref;\n \n /// **What it does:** Checks for statements which have no effect.\n@@ -45,7 +45,8 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n         return false;\n     }\n     match expr.node {\n-        Expr_::ExprLit(..) | Expr_::ExprClosure(.., _) | Expr_::ExprPath(..) => true,\n+        Expr_::ExprLit(..) | Expr_::ExprClosure(.., _) => true,\n+        Expr_::ExprPath(..) => !has_drop(cx, expr),\n         Expr_::ExprIndex(ref a, ref b) | Expr_::ExprBinary(_, ref a, ref b) => {\n             has_no_effect(cx, a) && has_no_effect(cx, b)\n         },\n@@ -59,7 +60,7 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n         Expr_::ExprAddrOf(_, ref inner) |\n         Expr_::ExprBox(ref inner) => has_no_effect(cx, inner),\n         Expr_::ExprStruct(_, ref fields, ref base) => {\n-            fields.iter().all(|field| has_no_effect(cx, &field.expr)) && match *base {\n+            !has_drop(cx, expr) && fields.iter().all(|field| has_no_effect(cx, &field.expr)) && match *base {\n                 Some(ref base) => has_no_effect(cx, base),\n                 None => true,\n             }\n@@ -68,7 +69,7 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n             let def = cx.tables.qpath_def(qpath, callee.hir_id);\n             match def {\n                 Def::Struct(..) | Def::Variant(..) | Def::StructCtor(..) | Def::VariantCtor(..) => {\n-                    args.iter().all(|arg| has_no_effect(cx, arg))\n+                    !has_drop(cx, expr) && args.iter().all(|arg| has_no_effect(cx, arg))\n                 },\n                 _ => false,\n             }\n@@ -145,18 +146,23 @@ fn reduce_expression<'a>(cx: &LateContext, expr: &'a Expr) -> Option<Vec<&'a Exp\n         Expr_::ExprTupField(ref inner, _) |\n         Expr_::ExprAddrOf(_, ref inner) |\n         Expr_::ExprBox(ref inner) => reduce_expression(cx, inner).or_else(|| Some(vec![inner])),\n-        Expr_::ExprStruct(_, ref fields, ref base) => Some(\n-            fields\n-                .iter()\n-                .map(|f| &f.expr)\n-                .chain(base)\n-                .map(Deref::deref)\n-                .collect(),\n-        ),\n+        Expr_::ExprStruct(_, ref fields, ref base) => {\n+            if has_drop(cx, expr) {\n+                None\n+            } else {\n+                Some(\n+                    fields\n+                        .iter()\n+                        .map(|f| &f.expr)\n+                        .chain(base)\n+                        .map(Deref::deref)\n+                        .collect())\n+            }\n+        },\n         Expr_::ExprCall(ref callee, ref args) => if let Expr_::ExprPath(ref qpath) = callee.node {\n             let def = cx.tables.qpath_def(qpath, callee.hir_id);\n             match def {\n-                Def::Struct(..) | Def::Variant(..) | Def::StructCtor(..) | Def::VariantCtor(..) => {\n+                Def::Struct(..) | Def::Variant(..) | Def::StructCtor(..) | Def::VariantCtor(..) if !has_drop(cx, expr) => {\n                     Some(args.iter().collect())\n                 },\n                 _ => None,"}, {"sha": "cf0aaf6dbaa2703d30fb7d4e11eb0f50a15ad7c9", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "patch": "@@ -358,6 +358,15 @@ pub fn implements_trait<'a, 'tcx>(\n     })\n }\n \n+/// Check whether this type implements Drop.\n+pub fn has_drop(cx: &LateContext, expr: &Expr) -> bool {\n+    let struct_ty = cx.tables.expr_ty(expr);\n+    match struct_ty.ty_adt_def() {\n+        Some(def) => def.has_dtor(cx.tcx),\n+        _ => false,\n+    }\n+}\n+\n /// Resolve the definition of a node from its `HirId`.\n pub fn resolve_node(cx: &LateContext, qpath: &QPath, id: HirId) -> def::Def {\n     cx.tables.qpath_def(qpath, id)"}, {"sha": "a037ac3cf0e11cfe2d8c02654b97f5858aeba97f", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "patch": "@@ -16,14 +16,38 @@ enum Enum {\n     Tuple(i32),\n     Struct { field: i32 },\n }\n-\n+struct DropUnit;\n+impl Drop for DropUnit {\n+    fn drop(&mut self) {}\n+}\n+struct DropStruct {\n+    field: i32\n+}\n+impl Drop for DropStruct {\n+    fn drop(&mut self) {}\n+}\n+struct DropTuple(i32);\n+impl Drop for DropTuple {\n+    fn drop(&mut self) {}\n+}\n+enum DropEnum {\n+    Tuple(i32),\n+    Struct { field: i32 },\n+}\n+impl Drop for DropEnum {\n+    fn drop(&mut self) {}\n+}\n+struct FooString {\n+    s: String,\n+}\n union Union {\n     a: u8,\n     b: f64,\n }\n \n fn get_number() -> i32 { 0 }\n fn get_struct() -> Struct { Struct { field: 0 } }\n+fn get_drop_struct() -> DropStruct { DropStruct { field: 0 } }\n \n unsafe fn unsafe_fn() -> i32 { 0 }\n \n@@ -57,10 +81,17 @@ fn main() {\n     [42; 55][13];\n     let mut x = 0;\n     || x += 5;\n+    let s: String = \"foo\".into();\n+    FooString { s: s };\n \n     // Do not warn\n     get_number();\n     unsafe { unsafe_fn() };\n+    DropUnit;\n+    DropStruct { field: 0 };\n+    DropTuple(0);\n+    DropEnum::Tuple(0);\n+    DropEnum::Struct { field: 0 };\n \n     Tuple(get_number());\n     Struct { field: get_number() };\n@@ -81,4 +112,13 @@ fn main() {\n     [get_number(); 55];\n     [42; 55][get_number() as usize];\n     {get_number()};\n+    FooString { s: String::from(\"blah\"), };\n+\n+    // Do not warn\n+    DropTuple(get_number());\n+    DropStruct { field: get_number() };\n+    DropStruct { field: get_number() };\n+    DropStruct { ..get_drop_struct() };\n+    DropEnum::Tuple(get_number());\n+    DropEnum::Struct { field: get_number() };\n }"}, {"sha": "0d8d6624a833d22ffebceff7643dea1b7d2b71d4", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 130, "deletions": 118, "changes": 248, "blob_url": "https://github.com/rust-lang/rust/blob/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45e5f28bb9b5464b4d2e493911f3e0f51452e9a2/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=45e5f28bb9b5464b4d2e493911f3e0f51452e9a2", "patch": "@@ -1,268 +1,280 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:34:5\n+  --> $DIR/no_effect.rs:58:5\n    |\n-34 |     0;\n+58 |     0;\n    |     ^^\n    |\n    = note: `-D no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:35:5\n+  --> $DIR/no_effect.rs:59:5\n    |\n-35 |     s2;\n+59 |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:36:5\n+  --> $DIR/no_effect.rs:60:5\n    |\n-36 |     Unit;\n+60 |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:37:5\n+  --> $DIR/no_effect.rs:61:5\n    |\n-37 |     Tuple(0);\n+61 |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:38:5\n+  --> $DIR/no_effect.rs:62:5\n    |\n-38 |     Struct { field: 0 };\n+62 |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:39:5\n+  --> $DIR/no_effect.rs:63:5\n    |\n-39 |     Struct { ..s };\n+63 |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:40:5\n+  --> $DIR/no_effect.rs:64:5\n    |\n-40 |     Union { a: 0 };\n+64 |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:41:5\n+  --> $DIR/no_effect.rs:65:5\n    |\n-41 |     Enum::Tuple(0);\n+65 |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:42:5\n+  --> $DIR/no_effect.rs:66:5\n    |\n-42 |     Enum::Struct { field: 0 };\n+66 |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:43:5\n+  --> $DIR/no_effect.rs:67:5\n    |\n-43 |     5 + 6;\n+67 |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:44:5\n+  --> $DIR/no_effect.rs:68:5\n    |\n-44 |     *&42;\n+68 |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:45:5\n+  --> $DIR/no_effect.rs:69:5\n    |\n-45 |     &6;\n+69 |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:46:5\n+  --> $DIR/no_effect.rs:70:5\n    |\n-46 |     (5, 6, 7);\n+70 |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:47:5\n+  --> $DIR/no_effect.rs:71:5\n    |\n-47 |     box 42;\n+71 |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:48:5\n+  --> $DIR/no_effect.rs:72:5\n    |\n-48 |     ..;\n+72 |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:49:5\n+  --> $DIR/no_effect.rs:73:5\n    |\n-49 |     5..;\n+73 |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:50:5\n+  --> $DIR/no_effect.rs:74:5\n    |\n-50 |     ..5;\n+74 |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:51:5\n+  --> $DIR/no_effect.rs:75:5\n    |\n-51 |     5..6;\n+75 |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:52:5\n+  --> $DIR/no_effect.rs:76:5\n    |\n-52 |     5..=6;\n+76 |     5..=6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:53:5\n+  --> $DIR/no_effect.rs:77:5\n    |\n-53 |     [42, 55];\n+77 |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:54:5\n+  --> $DIR/no_effect.rs:78:5\n    |\n-54 |     [42, 55][1];\n+78 |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:55:5\n+  --> $DIR/no_effect.rs:79:5\n    |\n-55 |     (42, 55).1;\n+79 |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:56:5\n+  --> $DIR/no_effect.rs:80:5\n    |\n-56 |     [42; 55];\n+80 |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:57:5\n+  --> $DIR/no_effect.rs:81:5\n    |\n-57 |     [42; 55][13];\n+81 |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:59:5\n+  --> $DIR/no_effect.rs:83:5\n    |\n-59 |     || x += 5;\n+83 |     || x += 5;\n    |     ^^^^^^^^^^\n \n+error: statement with no effect\n+  --> $DIR/no_effect.rs:85:5\n+   |\n+85 |     FooString { s: s };\n+   |     ^^^^^^^^^^^^^^^^^^^\n+\n error: statement can be reduced\n-  --> $DIR/no_effect.rs:65:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n-65 |     Tuple(get_number());\n+96 |     Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n    |\n    = note: `-D unnecessary-operation` implied by `-D warnings`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:66:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n-66 |     Struct { field: get_number() };\n+97 |     Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:67:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n-67 |     Struct { ..get_struct() };\n+98 |     Struct { ..get_struct() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:68:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n-68 |     Enum::Tuple(get_number());\n+99 |     Enum::Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:69:5\n-   |\n-69 |     Enum::Struct { field: get_number() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:100:5\n+    |\n+100 |     Enum::Struct { field: get_number() };\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:70:5\n-   |\n-70 |     5 + get_number();\n-   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n+   --> $DIR/no_effect.rs:101:5\n+    |\n+101 |     5 + get_number();\n+    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:71:5\n-   |\n-71 |     *&get_number();\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:102:5\n+    |\n+102 |     *&get_number();\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:72:5\n-   |\n-72 |     &get_number();\n-   |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:103:5\n+    |\n+103 |     &get_number();\n+    |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:73:5\n-   |\n-73 |     (5, 6, get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n+   --> $DIR/no_effect.rs:104:5\n+    |\n+104 |     (5, 6, get_number());\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:74:5\n-   |\n-74 |     box get_number();\n-   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:105:5\n+    |\n+105 |     box get_number();\n+    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:75:5\n-   |\n-75 |     get_number()..;\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:106:5\n+    |\n+106 |     get_number()..;\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:76:5\n-   |\n-76 |     ..get_number();\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:107:5\n+    |\n+107 |     ..get_number();\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:77:5\n-   |\n-77 |     5..get_number();\n-   |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n+   --> $DIR/no_effect.rs:108:5\n+    |\n+108 |     5..get_number();\n+    |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:78:5\n-   |\n-78 |     [42, get_number()];\n-   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n+   --> $DIR/no_effect.rs:109:5\n+    |\n+109 |     [42, get_number()];\n+    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:79:5\n-   |\n-79 |     [42, 55][get_number() as usize];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n+   --> $DIR/no_effect.rs:110:5\n+    |\n+110 |     [42, 55][get_number() as usize];\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:80:5\n-   |\n-80 |     (42, get_number()).1;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n+   --> $DIR/no_effect.rs:111:5\n+    |\n+111 |     (42, get_number()).1;\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:81:5\n-   |\n-81 |     [get_number(); 55];\n-   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:112:5\n+    |\n+112 |     [get_number(); 55];\n+    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:82:5\n-   |\n-82 |     [42; 55][get_number() as usize];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n+   --> $DIR/no_effect.rs:113:5\n+    |\n+113 |     [42; 55][get_number() as usize];\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:83:5\n-   |\n-83 |     {get_number()};\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:114:5\n+    |\n+114 |     {get_number()};\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+   --> $DIR/no_effect.rs:115:5\n+    |\n+115 |     FooString { s: String::from(\"blah\"), };\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `String::from(\"blah\");`\n "}]}