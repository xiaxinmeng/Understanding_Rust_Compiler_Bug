{"sha": "ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNmIzNjBjOGEyYzQwYmVjM2NmMDRiYjRjOTE5OGFkMzA3NzkzMDk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-31T01:41:49Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-31T01:41:49Z"}, "message": "Emit 0 exit code for --version and similar operations\n\nFixes #2878", "tree": {"sha": "76e174e8dabc86b70e0000784a2c7170a6fa543f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e174e8dabc86b70e0000784a2c7170a6fa543f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "html_url": "https://github.com/rust-lang/rust/commit/ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca6b360c8a2c40bec3cf04bb4c9198ad30779309/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43874113e6b9fc604dbacfd202d2a913a11fef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d43874113e6b9fc604dbacfd202d2a913a11fef4", "html_url": "https://github.com/rust-lang/rust/commit/d43874113e6b9fc604dbacfd202d2a913a11fef4"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7faa855735204903d377ed5cd58e06e60b0620f5", "filename": "src/bin/main.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca6b360c8a2c40bec3cf04bb4c9198ad30779309/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6b360c8a2c40bec3cf04bb4c9198ad30779309/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=ca6b360c8a2c40bec3cf04bb4c9198ad30779309", "patch": "@@ -172,19 +172,19 @@ fn execute(opts: &Options) -> Result<i32, failure::Error> {\n     match determine_operation(&matches)? {\n         Operation::Help(HelpOp::None) => {\n             print_usage_to_stdout(opts, \"\");\n-            return Ok(1);\n+            return Ok(0);\n         }\n         Operation::Help(HelpOp::Config) => {\n             Config::print_docs(&mut stdout(), options.unstable_features);\n-            return Ok(1);\n+            return Ok(0);\n         }\n         Operation::Help(HelpOp::FileLines) => {\n             print_help_file_lines();\n-            return Ok(1);\n+            return Ok(0);\n         }\n         Operation::Version => {\n             print_version();\n-            return Ok(1);\n+            return Ok(0);\n         }\n         Operation::ConfigOutputDefault { path } => {\n             let toml = Config::default().all_options().to_toml().map_err(err_msg)?;\n@@ -194,7 +194,7 @@ fn execute(opts: &Options) -> Result<i32, failure::Error> {\n             } else {\n                 io::stdout().write_all(toml.as_bytes())?;\n             }\n-            return Ok(1);\n+            return Ok(0);\n         }\n         Operation::Stdin { input } => format_string(input, options),\n         Operation::Format {"}]}