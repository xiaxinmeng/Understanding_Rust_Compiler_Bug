{"sha": "86f1ca812b8704beb20459bd5723d0cc3a0ace62", "node_id": "C_kwDOAAsO6NoAKDg2ZjFjYTgxMmI4NzA0YmViMjA0NTliZDU3MjNkMGNjM2EwYWNlNjI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-06T10:16:26Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-21T13:15:24Z"}, "message": "Improve diagnostic for adding more bounds to opaque types", "tree": {"sha": "700ba41dd0144e391f0142341e6bf82d4cedebf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/700ba41dd0144e391f0142341e6bf82d4cedebf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f1ca812b8704beb20459bd5723d0cc3a0ace62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f1ca812b8704beb20459bd5723d0cc3a0ace62", "html_url": "https://github.com/rust-lang/rust/commit/86f1ca812b8704beb20459bd5723d0cc3a0ace62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f1ca812b8704beb20459bd5723d0cc3a0ace62/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b323e62ba785812fbb5d6b77f2564a59dce2171", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b323e62ba785812fbb5d6b77f2564a59dce2171", "html_url": "https://github.com/rust-lang/rust/commit/4b323e62ba785812fbb5d6b77f2564a59dce2171"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "8b8cff0dbbe64cb761431b70c1886168630422bf", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/86f1ca812b8704beb20459bd5723d0cc3a0ace62/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f1ca812b8704beb20459bd5723d0cc3a0ace62/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=86f1ca812b8704beb20459bd5723d0cc3a0ace62", "patch": "@@ -2314,7 +2314,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         &self,\n         generic_param_scope: LocalDefId,\n         span: Span,\n-        origin: Option<SubregionOrigin<'tcx>>,\n+        mut origin: Option<SubregionOrigin<'tcx>>,\n         bound_kind: GenericKind<'tcx>,\n         sub: Region<'tcx>,\n     ) -> DiagnosticBuilder<'a, ErrorGuaranteed> {\n@@ -2349,6 +2349,14 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     None\n                 }\n             }\n+            GenericKind::Opaque(def_id, _substs) => {\n+                // Avoid emitting a `... so that the type` message at the error site.\n+                // It would be out of order for return position impl trait\n+                origin = None;\n+                // Make sure the lifetime suggestion is on the RPIT instead of proposing\n+                // to add a bound for opaque types (which isn't possible)\n+                Some((self.tcx.def_span(def_id).shrink_to_hi(), true))\n+            }\n             _ => None,\n         };\n "}, {"sha": "9b82332f9b067610dba54a413058bc10f2581bf0", "filename": "src/test/ui/impl-trait/unactionable_diagnostic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86f1ca812b8704beb20459bd5723d0cc3a0ace62/src%2Ftest%2Fui%2Fimpl-trait%2Funactionable_diagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f1ca812b8704beb20459bd5723d0cc3a0ace62/src%2Ftest%2Fui%2Fimpl-trait%2Funactionable_diagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funactionable_diagnostic.rs?ref=86f1ca812b8704beb20459bd5723d0cc3a0ace62", "patch": "@@ -8,6 +8,7 @@ fn foo<'t, P>(\n     post: P,\n     x: &'t Foo,\n ) -> &'t impl Trait {\n+    //~^ HELP: consider adding an explicit lifetime bound...\n     x\n }\n \n@@ -17,7 +18,6 @@ fn bar<'t, T>(\n ) -> &'t impl Trait {\n     foo(post, x)\n     //~^ ERROR: the opaque type `foo<T>::{opaque#0}` may not live long enough\n-    //~| HELP: consider adding an explicit lifetime bound `foo<T>::{opaque#0}: 't`\n }\n \n fn main() {}"}, {"sha": "a36e89f58b98e4e3b4c11097fce437f757d3674f", "filename": "src/test/ui/impl-trait/unactionable_diagnostic.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/86f1ca812b8704beb20459bd5723d0cc3a0ace62/src%2Ftest%2Fui%2Fimpl-trait%2Funactionable_diagnostic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86f1ca812b8704beb20459bd5723d0cc3a0ace62/src%2Ftest%2Fui%2Fimpl-trait%2Funactionable_diagnostic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funactionable_diagnostic.stderr?ref=86f1ca812b8704beb20459bd5723d0cc3a0ace62", "patch": "@@ -1,11 +1,13 @@\n error[E0309]: the opaque type `foo<T>::{opaque#0}` may not live long enough\n-  --> $DIR/unactionable_diagnostic.rs:18:5\n+  --> $DIR/unactionable_diagnostic.rs:19:5\n    |\n LL |     foo(post, x)\n    |     ^^^^^^^^^^^^\n    |\n-   = help: consider adding an explicit lifetime bound `foo<T>::{opaque#0}: 't`...\n-   = note: ...so that the type `impl Trait` will meet its required lifetime bounds\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | ) -> &'t impl Trait + 't {\n+   |                     ++++\n \n error: aborting due to previous error\n "}]}