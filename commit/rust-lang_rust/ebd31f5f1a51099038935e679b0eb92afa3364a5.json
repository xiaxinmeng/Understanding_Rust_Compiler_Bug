{"sha": "ebd31f5f1a51099038935e679b0eb92afa3364a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZDMxZjVmMWE1MTA5OTAzODkzNWU2NzliMGViOTJhZmEzMzY0YTU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-09-19T08:31:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-19T08:31:29Z"}, "message": "Rollup merge of #87960 - hkmatsumoto:suggest-inexisting-field-for-unmentioned-field, r=estebank\n\nSuggest replacing an inexisting field for an unmentioned field\n\nFix #87938\n\nThis PR adds a suggestion to replace an inexisting field for an\nunmentioned field. Given the following code:\n```rust\nenum Foo {\n    Bar { alpha: u8, bravo: u8, charlie: u8 },\n}\n\nfn foo(foo: Foo) {\n    match foo {\n        Foo::Bar {\n            alpha,\n            beta, // `bravo` miswritten as `beta` here.\n            charlie,\n        } => todo!(),\n    }\n}\n```\nthe compiler now emits the error messages below.\n```text\nerror[E0026]: variant `Foo::Bar` does not have a field named `beta`\n --> src/lib.rs:9:13\n  |\n9 |             beta, // `bravo` miswritten as `beta` here.\n  |             ^^^^\n  |             |\n  |             variant `Foo::Bar` does not have this field\n  |             help: `Foo::Bar` has a field named `bravo`: `bravo`\n```\n\nNote that this suggestion is available iff the number of inexisting\nfields and unmentioned fields are both 1.", "tree": {"sha": "174f9f867fde654d5aa2d86de89cf97f3185519b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/174f9f867fde654d5aa2d86de89cf97f3185519b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebd31f5f1a51099038935e679b0eb92afa3364a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRvVhCRBK7hj4Ov3rIwAA93UIAHm8BNaRt5R6ouRYNk1ieLgI\nWeUCFEsUCzcQzrRRHqdR7oKmebZsETas64AameR1Yh71sSw6JqwGDKZLmoPybGem\nYuaY7puVQ34ONiY9SluCVD1wLXyBawE1uPG+IhJqIBRuNSnSNwsZ71bq+Mr9tuJl\nsgxAk1I9IxKBQax5VjmHWhxAWXdCs74LrbJQvj+TNUnf2qqKTwkrUvNU4A6Mmxje\nDPobB+mcS2IlPB595cJ042xvt2tucCHfdvA2BRgPsXzKf8oerbve2zQnvMVm2ATT\nO7rBNOxqwrIKAI168mZ4QA3PMdBAJHc8zLIXm8pFY/efP6ZXUXrFsRMage+QshU=\n=RVn2\n-----END PGP SIGNATURE-----\n", "payload": "tree 174f9f867fde654d5aa2d86de89cf97f3185519b\nparent 3bca7230ff1ec35db25f2547cf2e83a6f450e923\nparent 37196e36918536de06e64bd2a08b9e5fcab898fa\nauthor Yuki Okushi <jtitor@2k36.org> 1632040289 +0900\ncommitter GitHub <noreply@github.com> 1632040289 +0900\n\nRollup merge of #87960 - hkmatsumoto:suggest-inexisting-field-for-unmentioned-field, r=estebank\n\nSuggest replacing an inexisting field for an unmentioned field\n\nFix #87938\n\nThis PR adds a suggestion to replace an inexisting field for an\nunmentioned field. Given the following code:\n```rust\nenum Foo {\n    Bar { alpha: u8, bravo: u8, charlie: u8 },\n}\n\nfn foo(foo: Foo) {\n    match foo {\n        Foo::Bar {\n            alpha,\n            beta, // `bravo` miswritten as `beta` here.\n            charlie,\n        } => todo!(),\n    }\n}\n```\nthe compiler now emits the error messages below.\n```text\nerror[E0026]: variant `Foo::Bar` does not have a field named `beta`\n --> src/lib.rs:9:13\n  |\n9 |             beta, // `bravo` miswritten as `beta` here.\n  |             ^^^^\n  |             |\n  |             variant `Foo::Bar` does not have this field\n  |             help: `Foo::Bar` has a field named `bravo`: `bravo`\n```\n\nNote that this suggestion is available iff the number of inexisting\nfields and unmentioned fields are both 1.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd31f5f1a51099038935e679b0eb92afa3364a5", "html_url": "https://github.com/rust-lang/rust/commit/ebd31f5f1a51099038935e679b0eb92afa3364a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebd31f5f1a51099038935e679b0eb92afa3364a5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bca7230ff1ec35db25f2547cf2e83a6f450e923", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bca7230ff1ec35db25f2547cf2e83a6f450e923", "html_url": "https://github.com/rust-lang/rust/commit/3bca7230ff1ec35db25f2547cf2e83a6f450e923"}, {"sha": "37196e36918536de06e64bd2a08b9e5fcab898fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/37196e36918536de06e64bd2a08b9e5fcab898fa", "html_url": "https://github.com/rust-lang/rust/commit/37196e36918536de06e64bd2a08b9e5fcab898fa"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "829268e3cb527d7b5240a75c4cd454f5b9a95327", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ebd31f5f1a51099038935e679b0eb92afa3364a5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebd31f5f1a51099038935e679b0eb92afa3364a5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=ebd31f5f1a51099038935e679b0eb92afa3364a5", "patch": "@@ -1452,7 +1452,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     plural\n                 ),\n             );\n-            if plural == \"\" {\n+\n+            if unmentioned_fields.len() == 1 {\n                 let input =\n                     unmentioned_fields.iter().map(|(_, field)| field.name).collect::<Vec<_>>();\n                 let suggested_name = find_best_match_for_name(&input, ident.name, None);\n@@ -1473,6 +1474,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         // We don't want to throw `E0027` in case we have thrown `E0026` for them.\n                         unmentioned_fields.retain(|&(_, x)| x.name != suggested_name);\n                     }\n+                } else if inexistent_fields.len() == 1 {\n+                    let unmentioned_field = unmentioned_fields[0].1.name;\n+                    err.span_suggestion_short(\n+                        ident.span,\n+                        &format!(\n+                            \"`{}` has a field named `{}`\",\n+                            tcx.def_path_str(variant.def_id),\n+                            unmentioned_field\n+                        ),\n+                        unmentioned_field.to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n                 }\n             }\n         }"}, {"sha": "09c52292dccaff9ba05d44d83dd16faf69881588", "filename": "src/test/ui/issues/issue-51102.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ebd31f5f1a51099038935e679b0eb92afa3364a5/src%2Ftest%2Fui%2Fissues%2Fissue-51102.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebd31f5f1a51099038935e679b0eb92afa3364a5/src%2Ftest%2Fui%2Fissues%2Fissue-51102.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51102.stderr?ref=ebd31f5f1a51099038935e679b0eb92afa3364a5", "patch": "@@ -2,7 +2,10 @@ error[E0026]: struct `SimpleStruct` does not have a field named `state`\n   --> $DIR/issue-51102.rs:13:17\n    |\n LL |                 state: 0,\n-   |                 ^^^^^ struct `SimpleStruct` does not have this field\n+   |                 ^^^^^\n+   |                 |\n+   |                 struct `SimpleStruct` does not have this field\n+   |                 help: `SimpleStruct` has a field named `no_state_here`\n \n error[E0025]: field `no_state_here` bound multiple times in the pattern\n   --> $DIR/issue-51102.rs:24:17"}, {"sha": "668405ed638c1d18ccbce364da0f940eb518fa36", "filename": "src/test/ui/numeric/numeric-fields.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ebd31f5f1a51099038935e679b0eb92afa3364a5/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebd31f5f1a51099038935e679b0eb92afa3364a5/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr?ref=ebd31f5f1a51099038935e679b0eb92afa3364a5", "patch": "@@ -16,7 +16,10 @@ error[E0026]: struct `S` does not have a field named `0x1`\n   --> $DIR/numeric-fields.rs:7:17\n    |\n LL |         S{0: a, 0x1: b, ..} => {}\n-   |                 ^^^ struct `S` does not have this field\n+   |                 ^^^\n+   |                 |\n+   |                 struct `S` does not have this field\n+   |                 help: `S` has a field named `1`\n \n error: aborting due to 2 previous errors\n "}]}