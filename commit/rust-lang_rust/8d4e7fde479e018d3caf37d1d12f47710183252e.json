{"sha": "8d4e7fde479e018d3caf37d1d12f47710183252e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNGU3ZmRlNDc5ZTAxOGQzY2FmMzdkMWQxMmY0NzcxMDE4MzI1MmU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-23T16:13:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-23T16:13:08Z"}, "message": "adjust comment", "tree": {"sha": "62b6d776ea070d864c678345e5cd9dd5bf8812f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62b6d776ea070d864c678345e5cd9dd5bf8812f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d4e7fde479e018d3caf37d1d12f47710183252e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d4e7fde479e018d3caf37d1d12f47710183252e", "html_url": "https://github.com/rust-lang/rust/commit/8d4e7fde479e018d3caf37d1d12f47710183252e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d4e7fde479e018d3caf37d1d12f47710183252e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6116f19f7baa3c1f7ed4659aa3b9b5ec5ff8ac3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6116f19f7baa3c1f7ed4659aa3b9b5ec5ff8ac3e", "html_url": "https://github.com/rust-lang/rust/commit/6116f19f7baa3c1f7ed4659aa3b9b5ec5ff8ac3e"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "97c2d8e7a8e796010dc0f5126c599b52c386de57", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d4e7fde479e018d3caf37d1d12f47710183252e/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d4e7fde479e018d3caf37d1d12f47710183252e/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=8d4e7fde479e018d3caf37d1d12f47710183252e", "patch": "@@ -260,7 +260,8 @@ impl<T: ?Sized> Box<T> {\n         // Stacked Borrows.  This function here corresponds to \"reborrowing to\n         // a raw pointer\", but there is no actual reborrow here -- so\n         // without some care, the pointer we are returning here still carries\n-        // the `Uniq` tag.  We round-trip through a mutable reference to avoid that.\n+        // the tag of `b`, with `Unique` permission.\n+        // We round-trip through a mutable reference to avoid that.\n         unsafe { Unique::new_unchecked(unique.as_mut() as *mut T) }\n     }\n "}]}