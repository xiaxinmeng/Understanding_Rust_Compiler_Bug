{"sha": "7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmN2M0ZTc0NjVmNThjZGJmZGFhZjIzMmQ1NzE5NjBmMWI3NTRiN2M=", "commit": {"author": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-01-21T17:37:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T08:46:27Z"}, "message": "do not emit create for directory again", "tree": {"sha": "c45ced6a30832a53e2485744751ddd810663107c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c45ced6a30832a53e2485744751ddd810663107c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "html_url": "https://github.com/rust-lang/rust/commit/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f88355ccb5e8ea2381e13eabcdb64880e757aff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f88355ccb5e8ea2381e13eabcdb64880e757aff1", "html_url": "https://github.com/rust-lang/rust/commit/f88355ccb5e8ea2381e13eabcdb64880e757aff1"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "a74222c02e573558a5cb39b98d750e61bcfbd554", "filename": "crates/ra_vfs/src/io.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/crates%2Fra_vfs%2Fsrc%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/crates%2Fra_vfs%2Fsrc%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fio.rs?ref=7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "patch": "@@ -68,11 +68,11 @@ impl Worker {\n         let watcher_clone = watcher.clone();\n         let (worker, worker_handle) =\n             thread_worker::spawn(\"vfs\", 128, move |input_receiver, output_sender| {\n-                let res = input_receiver\n+                input_receiver\n                     .into_iter()\n                     .map(|t| handle_task(t, &watcher_clone))\n-                    .try_for_each(|it| output_sender.send(it));\n-                res.unwrap()\n+                    .try_for_each(|it| output_sender.send(it))\n+                    .unwrap()\n             });\n         match Watcher::start(worker.inp.clone()) {\n             Ok(w) => {\n@@ -99,6 +99,7 @@ impl Worker {\n         if let Some(watcher) = self.watcher.lock().take() {\n             let _ = watcher.shutdown();\n         }\n+        let _ = self.worker.shutdown();\n         self.worker_handle.shutdown()\n     }\n }"}, {"sha": "60693589132b5f2323dd395b4a753a99f6d01a79", "filename": "crates/ra_vfs/src/watcher.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs?ref=7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "patch": "@@ -87,7 +87,7 @@ impl Watcher {\n         &mut self,\n         dir: &Path,\n         filter_entry: impl Fn(&DirEntry) -> bool,\n-        emit_for_existing: bool,\n+        emit_for_contents: bool,\n     ) {\n         for res in WalkDir::new(dir).into_iter().filter_entry(filter_entry) {\n             match res {\n@@ -98,7 +98,7 @@ impl Watcher {\n                             Err(e) => log::warn!(\"could not watch \\\"{}\\\": {}\", dir.display(), e),\n                         }\n                     }\n-                    if emit_for_existing {\n+                    if emit_for_contents && entry.depth() > 0 {\n                         // emit as create because we haven't seen it yet\n                         if let Err(e) =\n                             self.sender"}, {"sha": "b18ea74a32abcb77e2449d5c84e240175b3c6625", "filename": "crates/ra_vfs/tests/vfs.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/crates%2Fra_vfs%2Ftests%2Fvfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7c4e7465f58cdbfdaaf232d571960f1b754b7c/crates%2Fra_vfs%2Ftests%2Fvfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Ftests%2Fvfs.rs?ref=7f7c4e7465f58cdbfdaaf232d571960f1b754b7c", "patch": "@@ -40,9 +40,6 @@ fn test_vfs_works() -> std::io::Result<()> {\n         fs::write(file_path, text)?\n     }\n \n-    let gitignore = dir.path().join(\"a/.gitignore\");\n-    fs::write(gitignore, \"/target\").unwrap();\n-\n     let a_root = dir.path().join(\"a\");\n     let b_root = dir.path().join(\"a/b\");\n "}]}