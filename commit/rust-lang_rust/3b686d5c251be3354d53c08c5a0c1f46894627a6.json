{"sha": "3b686d5c251be3354d53c08c5a0c1f46894627a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNjg2ZDVjMjUxYmUzMzU0ZDUzYzA4YzVhMGMxZjQ2ODk0NjI3YTY=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-04-04T04:43:58Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-04-04T14:04:48Z"}, "message": "tweak unresolved label suggestion\n\nOnly suggest label names in the same hygiene context, and use a\nstructured suggestion.", "tree": {"sha": "105f789d4be433ff17bed4ae7872f1d0eaf1aa19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/105f789d4be433ff17bed4ae7872f1d0eaf1aa19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b686d5c251be3354d53c08c5a0c1f46894627a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlymDwoWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdKG0CACrvOwJdvDqQy4M2K71EK97onMo\n+WnjsRoIM3kHx3Bc4z+tCESlKE278EfMoCHwgwIKiWI9+idxq1y6Q1BYJgYuCvfD\niGkOO5h1VPNpFNYrMJqeoG5hZSxhWQf80oiGDLYyOTV+ql0yGliojNinKF9Xnili\nvKhnKBWlm2nXurFWdhXy1CKVBGx8IRQNsJi6uJfQFIvCPauVYLKfcFRy7rSS/d9+\nzfaNiNLjuf+F1pZJyIRqSUg12G7OCKGfYH8ANIklvdLiE9VW+HsL6iMjXZc2ZQMC\nL/2BmmAxWiH4aMDKzRvrq7GxGhIo/iYQdSlZNzIhVUgdzEu2V0BfHreCGstR\n=0SnM\n-----END PGP SIGNATURE-----", "payload": "tree 105f789d4be433ff17bed4ae7872f1d0eaf1aa19\nparent f8673e0ad85e98997faa76fa7edc99c5825f46ee\nauthor Andy Russell <arussell123@gmail.com> 1554353038 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1554386688 -0400\n\ntweak unresolved label suggestion\n\nOnly suggest label names in the same hygiene context, and use a\nstructured suggestion.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b686d5c251be3354d53c08c5a0c1f46894627a6", "html_url": "https://github.com/rust-lang/rust/commit/3b686d5c251be3354d53c08c5a0c1f46894627a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b686d5c251be3354d53c08c5a0c1f46894627a6/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8673e0ad85e98997faa76fa7edc99c5825f46ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8673e0ad85e98997faa76fa7edc99c5825f46ee", "html_url": "https://github.com/rust-lang/rust/commit/f8673e0ad85e98997faa76fa7edc99c5825f46ee"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "0c37296d2411b1a1f6b6fbb21a1c54a9b6b6491d", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=3b686d5c251be3354d53c08c5a0c1f46894627a6", "patch": "@@ -357,7 +357,12 @@ fn resolve_struct_error<'sess, 'a>(resolver: &'sess Resolver<'_>,\n                                            \"use of undeclared label `{}`\",\n                                            name);\n             if let Some(lev_candidate) = lev_candidate {\n-                err.span_label(span, format!(\"did you mean `{}`?\", lev_candidate));\n+                err.span_suggestion(\n+                    span,\n+                    \"a label with a similar name exists in this scope\",\n+                    lev_candidate.to_string(),\n+                    Applicability::MaybeIncorrect,\n+                );\n             } else {\n                 err.span_label(span, format!(\"undeclared label `{}`\", name));\n             }\n@@ -4218,7 +4223,13 @@ impl<'a> Resolver<'a> {\n                         // Picks the first label that is \"close enough\", which is not necessarily\n                         // the closest match\n                         let close_match = self.search_label(label.ident, |rib, ident| {\n-                            let names = rib.bindings.iter().map(|(id, _)| &id.name);\n+                            let names = rib.bindings.iter().filter_map(|(id, _)| {\n+                                if id.span.ctxt() == label.ident.span.ctxt() {\n+                                    Some(&id.name)\n+                                } else {\n+                                    None\n+                                }\n+                            });\n                             find_best_match_for_name(names, &*ident.as_str(), None)\n                         });\n                         self.record_def(expr.id, err_path_resolution());"}, {"sha": "d61c0687c1665afa15b559fd11bb3baddc61fbc7", "filename": "src/test/ui/hygiene/hygienic-label-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-1.stderr?ref=3b686d5c251be3354d53c08c5a0c1f46894627a6", "patch": "@@ -2,7 +2,7 @@ error[E0426]: use of undeclared label `'x`\n   --> $DIR/hygienic-label-1.rs:2:19\n    |\n LL |     () => { break 'x; }\n-   |                   ^^ did you mean `'x`?\n+   |                   ^^ undeclared label `'x`\n ...\n LL |     'x: loop { foo!() }\n    |                ------ in this macro invocation"}, {"sha": "f23e741debe9dd75f0c9870fa6c944cd0478aa15", "filename": "src/test/ui/hygiene/hygienic-label-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-2.stderr?ref=3b686d5c251be3354d53c08c5a0c1f46894627a6", "patch": "@@ -2,7 +2,7 @@ error[E0426]: use of undeclared label `'x`\n   --> $DIR/hygienic-label-2.rs:6:16\n    |\n LL |     foo!(break 'x);\n-   |                ^^ did you mean `'x`?\n+   |                ^^ undeclared label `'x`\n \n error: aborting due to previous error\n "}, {"sha": "0c4173a61aac48f13d32dd37d8685ddf048c0d98", "filename": "src/test/ui/hygiene/hygienic-label-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-3.stderr?ref=3b686d5c251be3354d53c08c5a0c1f46894627a6", "patch": "@@ -2,7 +2,7 @@ error[E0426]: use of undeclared label `'x`\n   --> $DIR/hygienic-label-3.rs:2:19\n    |\n LL |     () => { break 'x; }\n-   |                   ^^ did you mean `'x`?\n+   |                   ^^ undeclared label `'x`\n ...\n LL |         foo!()\n    |         ------ in this macro invocation"}, {"sha": "1c93da02f614255954b402ff4e189c562d1310fa", "filename": "src/test/ui/hygiene/hygienic-label-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-4.stderr?ref=3b686d5c251be3354d53c08c5a0c1f46894627a6", "patch": "@@ -2,7 +2,7 @@ error[E0426]: use of undeclared label `'x`\n   --> $DIR/hygienic-label-4.rs:6:16\n    |\n LL |     foo!(break 'x);\n-   |                ^^ did you mean `'x`?\n+   |                ^^ undeclared label `'x`\n \n error: aborting due to previous error\n "}, {"sha": "02d46a3f5960715dd3d86fa13840e23c73bfb29d", "filename": "src/test/ui/suggestions/suggest-labels.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b686d5c251be3354d53c08c5a0c1f46894627a6/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-labels.stderr?ref=3b686d5c251be3354d53c08c5a0c1f46894627a6", "patch": "@@ -2,19 +2,31 @@ error[E0426]: use of undeclared label `'fo`\n   --> $DIR/suggest-labels.rs:4:15\n    |\n LL |         break 'fo;\n-   |               ^^^ did you mean `'foo`?\n+   |               ^^^\n+help: a label with a similar name exists in this scope\n+   |\n+LL |         break 'foo;\n+   |               ^^^^\n \n error[E0426]: use of undeclared label `'bor`\n   --> $DIR/suggest-labels.rs:8:18\n    |\n LL |         continue 'bor;\n-   |                  ^^^^ did you mean `'bar`?\n+   |                  ^^^^\n+help: a label with a similar name exists in this scope\n+   |\n+LL |         continue 'bar;\n+   |                  ^^^^\n \n error[E0426]: use of undeclared label `'longlable`\n   --> $DIR/suggest-labels.rs:13:19\n    |\n LL |             break 'longlable;\n-   |                   ^^^^^^^^^^ did you mean `'longlabel1`?\n+   |                   ^^^^^^^^^^\n+help: a label with a similar name exists in this scope\n+   |\n+LL |             break 'longlabel1;\n+   |                   ^^^^^^^^^^^\n \n error: aborting due to 3 previous errors\n "}]}