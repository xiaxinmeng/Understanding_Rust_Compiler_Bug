{"sha": "2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "node_id": "C_kwDOAAsO6NoAKDJhZGYyNmZjNzJmMzU0YWFiZDY1ZGExNzZlYjlmODgwNmIwZDJlZjI", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-23T21:21:35Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-26T12:24:48Z"}, "message": "Add `rust.lto=off` to bootstrap", "tree": {"sha": "3c31e0a1ced8e1af4dd05a8c94a96cb9d3366c5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c31e0a1ced8e1af4dd05a8c94a96cb9d3366c5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "html_url": "https://github.com/rust-lang/rust/commit/2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e37043d63bfe2f3be8fa5a05b07d6c0dad5775d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e37043d63bfe2f3be8fa5a05b07d6c0dad5775d", "html_url": "https://github.com/rust-lang/rust/commit/5e37043d63bfe2f3be8fa5a05b07d6c0dad5775d"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "e0f02eac9c34b774c898ac3b2f1f8c8dcaf741d3", "filename": "config.toml.example", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "patch": "@@ -646,7 +646,8 @@ changelog-seen = 2\n \n # Select LTO mode that will be used for compiling rustc. By default, thin local LTO\n # (LTO within a single crate) is used (like for any Rust crate). You can also select\n-# \"thin\" or \"fat\" to apply Thin/Fat LTO to the `rustc_driver` dylib.\n+# \"thin\" or \"fat\" to apply Thin/Fat LTO to the `rustc_driver` dylib, or \"off\" to disable\n+# LTO entirely.\n #lto = \"thin-local\"\n \n # ============================================================================="}, {"sha": "07c0d2233caeb29f8a74d03a5963e25dafdcc8c0", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "patch": "@@ -379,6 +379,9 @@ pub fn std_cargo(builder: &Builder<'_>, target: TargetSelection, stage: u32, car\n     if stage >= 1 {\n         cargo.rustflag(\"-Cembed-bitcode=yes\");\n     }\n+    if builder.config.rust_lto == RustcLto::Off {\n+        cargo.rustflag(\"-Clto=off\");\n+    }\n \n     // By default, rustc does not include unwind tables unless they are required\n     // for a particular target. They are not required by RISC-V targets, but\n@@ -722,6 +725,13 @@ impl Step for Rustc {\n                     cargo.rustflag(\"-Cembed-bitcode=yes\");\n                 }\n                 RustcLto::ThinLocal => { /* Do nothing, this is the default */ }\n+                RustcLto::Off => {\n+                    cargo.rustflag(\"-Clto=off\");\n+                }\n+            }\n+        } else {\n+            if builder.config.rust_lto == RustcLto::Off {\n+                cargo.rustflag(\"-Clto=off\");\n             }\n         }\n "}, {"sha": "a28fe612deb7a7043676d2a0b8e80aeab44d134b", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "patch": "@@ -332,8 +332,9 @@ impl SplitDebuginfo {\n }\n \n /// LTO mode used for compiling rustc itself.\n-#[derive(Default, Clone)]\n+#[derive(Default, Clone, PartialEq)]\n pub enum RustcLto {\n+    Off,\n     #[default]\n     ThinLocal,\n     Thin,\n@@ -348,6 +349,7 @@ impl std::str::FromStr for RustcLto {\n             \"thin-local\" => Ok(RustcLto::ThinLocal),\n             \"thin\" => Ok(RustcLto::Thin),\n             \"fat\" => Ok(RustcLto::Fat),\n+            \"off\" => Ok(RustcLto::Off),\n             _ => Err(format!(\"Invalid value for rustc LTO: {}\", s)),\n         }\n     }"}, {"sha": "b98b13119e8ad56b8c44c73ba4c5e26020ebff20", "filename": "src/bootstrap/defaults/config.compiler.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fdefaults%2Fconfig.compiler.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fdefaults%2Fconfig.compiler.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdefaults%2Fconfig.compiler.toml?ref=2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "patch": "@@ -12,6 +12,8 @@ debug-logging = true\n incremental = true\n # Print backtrace on internal compiler errors during bootstrap\n backtrace-on-ice = true\n+# Make the compiler and standard library faster to build, at the expense of a ~20% runtime slowdown.\n+lto = \"off\"\n \n [llvm]\n # Will download LLVM from CI if available on your platform."}, {"sha": "f362c4111f107f99c8d6ee14b2dd559d4e11a6a0", "filename": "src/bootstrap/defaults/config.library.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fdefaults%2Fconfig.library.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2adf26fc72f354aabd65da176eb9f8806b0d2ef2/src%2Fbootstrap%2Fdefaults%2Fconfig.library.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdefaults%2Fconfig.library.toml?ref=2adf26fc72f354aabd65da176eb9f8806b0d2ef2", "patch": "@@ -8,6 +8,8 @@ bench-stage = 0\n [rust]\n # This greatly increases the speed of rebuilds, especially when there are only minor changes. However, it makes the initial build slightly slower.\n incremental = true\n+# Make the compiler and standard library faster to build, at the expense of a ~20% runtime slowdown.\n+lto = \"off\"\n \n [llvm]\n # Will download LLVM from CI if available on your platform."}]}