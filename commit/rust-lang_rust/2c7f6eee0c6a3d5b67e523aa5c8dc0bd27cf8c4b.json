{"sha": "2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjN2Y2ZWVlMGM2YTNkNWI2N2U1MjNhYTVjOGRjMGJkMjdjZjhjNGI=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-09-14T19:33:48Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-09-14T19:35:49Z"}, "message": "Fixed `map_in_place` tests after rustc upgrade\n\nThis replaces the now obsolete syntax `&[]` with `[].as_slice()`.", "tree": {"sha": "669b35969a06ae548fec2a49339a6a0558b0d8bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/669b35969a06ae548fec2a49339a6a0558b0d8bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b", "html_url": "https://github.com/rust-lang/rust/commit/2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ccab3ae8aeb1b0d7002187990aaa56b1ff03d28", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ccab3ae8aeb1b0d7002187990aaa56b1ff03d28", "html_url": "https://github.com/rust-lang/rust/commit/7ccab3ae8aeb1b0d7002187990aaa56b1ff03d28"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "6fc367474bb7bf3d1e97642be375015c8cc7384b", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=2c7f6eee0c6a3d5b67e523aa5c8dc0bd27cf8c4b", "patch": "@@ -1951,14 +1951,13 @@ impl<T> Vec<T> {\n     /// ```\n     /// let v = vec![0u, 1, 2];\n     /// let w = v.map_in_place(|i| i + 3);\n-    /// assert_eq!(w.as_slice(), &[3, 4, 5]);\n+    /// assert_eq!(w.as_slice(), [3, 4, 5].as_slice());\n     ///\n-    /// let big_endian_u16s = vec![0x1122u16, 0x3344];\n-    /// let u8s = big_endian_u16s.map_in_place(|x| [\n-    ///     ((x >> 8) & 0xff) as u8,\n-    ///     (x & 0xff) as u8\n-    /// ]);\n-    /// assert_eq!(u8s.as_slice(), &[[0x11, 0x22], [0x33, 0x44]]);\n+    /// #[deriving(PartialEq, Show)]\n+    /// struct Newtype(u8);\n+    /// let bytes = vec![0x11, 0x22];\n+    /// let newtyped_bytes = bytes.map_in_place(|x| Newtype(x));\n+    /// assert_eq!(newtyped_bytes.as_slice(), [Newtype(0x11), Newtype(0x22)].as_slice());\n     /// ```\n     pub fn map_in_place<U>(self, f: |T| -> U) -> Vec<U> {\n         let mut pv = PartialVec::from_vec(self);\n@@ -2314,7 +2313,7 @@ mod tests {\n     #[test]\n     fn test_map_in_place() {\n         let v = vec![0u, 1, 2];\n-        assert_eq!(v.map_in_place(|i: uint| i as int - 1).as_slice(), &[-1i, 0, 1]);\n+        assert_eq!(v.map_in_place(|i: uint| i as int - 1).as_slice(), [-1i, 0, 1].as_slice());\n     }\n \n     #[bench]"}]}