{"sha": "369e430b05534e694183b6faa8e4e0e540973158", "node_id": "C_kwDOAAsO6NoAKDM2OWU0MzBiMDU1MzRlNjk0MTgzYjZmYWE4ZTRlMGU1NDA5NzMxNTg", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:42:15Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:42:15Z"}, "message": "Improve doc", "tree": {"sha": "cafd9a2179a04258342d59dbde579064533aa2c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cafd9a2179a04258342d59dbde579064533aa2c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/369e430b05534e694183b6faa8e4e0e540973158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/369e430b05534e694183b6faa8e4e0e540973158", "html_url": "https://github.com/rust-lang/rust/commit/369e430b05534e694183b6faa8e4e0e540973158", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/369e430b05534e694183b6faa8e4e0e540973158/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cf74802ab111085a2137a2188892ef5d8641b0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cf74802ab111085a2137a2188892ef5d8641b0b", "html_url": "https://github.com/rust-lang/rust/commit/1cf74802ab111085a2137a2188892ef5d8641b0b"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "23f9d989c0c288c8e3d401a9aecf1058fd9a00ac", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/369e430b05534e694183b6faa8e4e0e540973158/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/369e430b05534e694183b6faa8e4e0e540973158/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=369e430b05534e694183b6faa8e4e0e540973158", "patch": "@@ -214,7 +214,9 @@ impl LineIndex {\n         Some(LineCol { line: line_col.line, col })\n     }\n \n-    /// Returns an iterator over the ranges for the lines.\n+    /// Given a range [start, end), returns a sorted iterator of non-empty ranges [start, x1), [x1,\n+    /// x2), ..., [xn, end) where all the xi, which are positions of newlines, are inside the range\n+    /// [start, end).\n     pub fn lines(&self, range: TextRange) -> impl Iterator<Item = TextRange> + '_ {\n         let lo = self.newlines.partition_point(|&it| it < range.start());\n         let hi = self.newlines.partition_point(|&it| it <= range.end());"}]}