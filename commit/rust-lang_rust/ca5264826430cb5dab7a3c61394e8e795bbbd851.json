{"sha": "ca5264826430cb5dab7a3c61394e8e795bbbd851", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNTI2NDgyNjQzMGNiNWRhYjdhM2M2MTM5NGU4ZTc5NWJiYmQ4NTE=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-31T12:11:04Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-31T12:11:04Z"}, "message": "Benchmarks for SmallVec", "tree": {"sha": "2b25def02eeab3b9a2583ed8119d36b54203a18e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b25def02eeab3b9a2583ed8119d36b54203a18e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca5264826430cb5dab7a3c61394e8e795bbbd851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca5264826430cb5dab7a3c61394e8e795bbbd851", "html_url": "https://github.com/rust-lang/rust/commit/ca5264826430cb5dab7a3c61394e8e795bbbd851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca5264826430cb5dab7a3c61394e8e795bbbd851/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9169934e27c955787e94186364dcc6fcb7455e4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9169934e27c955787e94186364dcc6fcb7455e4d", "html_url": "https://github.com/rust-lang/rust/commit/9169934e27c955787e94186364dcc6fcb7455e4d"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "2398a6f99259c5325a273d5f5108617295d43c20", "filename": "src/librustc_data_structures/small_vec.rs", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/ca5264826430cb5dab7a3c61394e8e795bbbd851/src%2Flibrustc_data_structures%2Fsmall_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca5264826430cb5dab7a3c61394e8e795bbbd851/src%2Flibrustc_data_structures%2Fsmall_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsmall_vec.rs?ref=ca5264826430cb5dab7a3c61394e8e795bbbd851", "patch": "@@ -225,3 +225,119 @@ impl<A> Decodable for SmallVec<A>\n         })\n     }\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    extern crate test;\n+    use self::test::Bencher;\n+\n+    use super::*;\n+\n+    #[bench]\n+    fn fill_small_vec_1_10_with_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 1]> = SmallVec::with_capacity(10);\n+\n+            sv.extend(0..10);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_1_10_wo_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 1]> = SmallVec::new();\n+\n+            sv.extend(0..10);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_8_10_with_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 8]> = SmallVec::with_capacity(10);\n+\n+            sv.extend(0..10);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_8_10_wo_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 8]> = SmallVec::new();\n+\n+            sv.extend(0..10);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_32_10_with_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 32]> = SmallVec::with_capacity(10);\n+\n+            sv.extend(0..10);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_32_10_wo_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 32]> = SmallVec::new();\n+\n+            sv.extend(0..10);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_1_50_with_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 1]> = SmallVec::with_capacity(50);\n+\n+            sv.extend(0..50);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_1_50_wo_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 1]> = SmallVec::new();\n+\n+            sv.extend(0..50);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_8_50_with_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 8]> = SmallVec::with_capacity(50);\n+\n+            sv.extend(0..50);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_8_50_wo_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 8]> = SmallVec::new();\n+\n+            sv.extend(0..50);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_32_50_with_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 32]> = SmallVec::with_capacity(50);\n+\n+            sv.extend(0..50);\n+        })\n+    }\n+\n+    #[bench]\n+    fn fill_small_vec_32_50_wo_cap(b: &mut Bencher) {\n+        b.iter(|| {\n+            let mut sv: SmallVec<[usize; 32]> = SmallVec::new();\n+\n+            sv.extend(0..50);\n+        })\n+    }\n+}"}]}