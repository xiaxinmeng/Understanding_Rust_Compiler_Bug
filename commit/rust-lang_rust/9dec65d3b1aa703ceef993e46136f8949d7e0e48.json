{"sha": "9dec65d3b1aa703ceef993e46136f8949d7e0e48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZWM2NWQzYjFhYTcwM2NlZWY5OTNlNDYxMzZmODk0OWQ3ZTBlNDg=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-01-24T15:46:43Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-02-07T17:28:10Z"}, "message": "wip implement lowering mode", "tree": {"sha": "9c9bef24da7959d9f52c938a053c04a043034abd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c9bef24da7959d9f52c938a053c04a043034abd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dec65d3b1aa703ceef993e46136f8949d7e0e48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dec65d3b1aa703ceef993e46136f8949d7e0e48", "html_url": "https://github.com/rust-lang/rust/commit/9dec65d3b1aa703ceef993e46136f8949d7e0e48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dec65d3b1aa703ceef993e46136f8949d7e0e48/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ea4bce1b292d455c313f914b3aa3051293c502b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea4bce1b292d455c313f914b3aa3051293c502b", "html_url": "https://github.com/rust-lang/rust/commit/7ea4bce1b292d455c313f914b3aa3051293c502b"}], "stats": {"total": 60, "additions": 34, "deletions": 26}, "files": [{"sha": "39406d8cec5304ccd618b86925623b9cc82220b1", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9dec65d3b1aa703ceef993e46136f8949d7e0e48/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dec65d3b1aa703ceef993e46136f8949d7e0e48/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=9dec65d3b1aa703ceef993e46136f8949d7e0e48", "patch": "@@ -40,8 +40,17 @@ pub struct TyLoweringContext<'a, DB: HirDatabase> {\n \n #[derive(Clone, Debug)]\n pub enum ImplTraitLoweringMode {\n+    /// `impl Trait` gets lowered into an opaque type that doesn't unify with\n+    /// anything except itself. This is used in places where values flow 'out',\n+    /// i.e. for arguments of the function we're currently checking, and return\n+    /// types of functions we're calling.\n     Opaque,\n+    /// `impl Trait` gets lowered into a placeholder that can unify with some\n+    /// type. This is used in places where values flow 'in', i.e. for arguments\n+    /// of functions we're calling, and the return type of the function we're\n+    /// currently checking.\n     Placeholder,\n+    /// `impl Trait` is disallowed and will be an error.\n     Disallowed,\n }\n \n@@ -87,12 +96,23 @@ impl Ty {\n                 Ty::Dyn(predicates)\n             }\n             TypeRef::ImplTrait(bounds) => {\n-                let self_ty = Ty::Bound(0);\n-                let predicates = bounds\n-                    .iter()\n-                    .flat_map(|b| GenericPredicate::from_type_bound(ctx, b, self_ty.clone()))\n-                    .collect();\n-                Ty::Opaque(predicates)\n+                match ctx.impl_trait_mode {\n+                    ImplTraitLoweringMode::Opaque => {\n+                        let self_ty = Ty::Bound(0);\n+                        let predicates = bounds\n+                            .iter()\n+                            .flat_map(|b| GenericPredicate::from_type_bound(ctx, b, self_ty.clone()))\n+                            .collect();\n+                        Ty::Opaque(predicates)\n+                    },\n+                    ImplTraitLoweringMode::Placeholder => {\n+                        todo!()\n+                    },\n+                    ImplTraitLoweringMode::Disallowed => {\n+                        // FIXME: report error\n+                        Ty::Unknown\n+                    },\n+                }\n             }\n             TypeRef::Error => Ty::Unknown,\n         }"}, {"sha": "764ab28001778cc18c1f9a9cf47f5d88065ed52e", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9dec65d3b1aa703ceef993e46136f8949d7e0e48/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dec65d3b1aa703ceef993e46136f8949d7e0e48/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=9dec65d3b1aa703ceef993e46136f8949d7e0e48", "patch": "@@ -994,29 +994,17 @@ fn weird_bounds() {\n     assert_snapshot!(\n         infer(r#\"\n trait Trait {}\n-fn test() {\n-    let a: impl Trait + 'lifetime = foo;\n-    let b: impl 'lifetime = foo;\n-    let b: impl (Trait) = foo;\n-    let b: impl ('lifetime) = foo;\n-    let d: impl ?Sized = foo;\n-    let e: impl Trait + ?Sized = foo;\n+fn test(a: impl Trait + 'lifetime, b: impl 'lifetime, c: impl (Trait), d: impl ('lifetime), e: impl ?Sized, f: impl Trait + ?Sized) {\n }\n \"#),\n         @r###\"\n-    [26; 237) '{     ...foo; }': ()\n-    [36; 37) 'a': impl Trait + {error}\n-    [64; 67) 'foo': impl Trait + {error}\n-    [77; 78) 'b': impl {error}\n-    [97; 100) 'foo': impl {error}\n-    [110; 111) 'b': impl Trait\n-    [128; 131) 'foo': impl Trait\n-    [141; 142) 'b': impl {error}\n-    [163; 166) 'foo': impl {error}\n-    [176; 177) 'd': impl {error}\n-    [193; 196) 'foo': impl {error}\n-    [206; 207) 'e': impl Trait + {error}\n-    [231; 234) 'foo': impl Trait + {error}\n+    [24; 25) 'a': impl Trait + {error}\n+    [51; 52) 'b': impl {error}\n+    [70; 71) 'c': impl Trait\n+    [87; 88) 'd': impl {error}\n+    [108; 109) 'e': impl {error}\n+    [124; 125) 'f': impl Trait + {error}\n+    [148; 151) '{ }': ()\n     \"###\n     );\n }"}]}