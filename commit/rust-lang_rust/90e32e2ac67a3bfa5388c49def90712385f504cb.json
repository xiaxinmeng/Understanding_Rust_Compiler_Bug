{"sha": "90e32e2ac67a3bfa5388c49def90712385f504cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZTMyZTJhYzY3YTNiZmE1Mzg4YzQ5ZGVmOTA3MTIzODVmNTA0Y2I=", "commit": {"author": {"name": "Niels Sascha Reedijk", "email": "niels.reedijk@gmail.com", "date": "2018-07-05T05:12:24Z"}, "committer": {"name": "Niels Sascha Reedijk", "email": "niels.reedijk@gmail.com", "date": "2018-07-06T05:19:11Z"}, "message": "Haiku: work around the lack of setrlimit\n\nBy default, Haiku has the desired 16 MB stack, therefore in general\nwe do not have to spawn a new thread. The code has been written in\nsuch a way that any changes in Haiku or in Rust will be adapted to.", "tree": {"sha": "75c524fac255c88ccb5ac65f111bb9c394f1f8bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75c524fac255c88ccb5ac65f111bb9c394f1f8bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90e32e2ac67a3bfa5388c49def90712385f504cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90e32e2ac67a3bfa5388c49def90712385f504cb", "html_url": "https://github.com/rust-lang/rust/commit/90e32e2ac67a3bfa5388c49def90712385f504cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90e32e2ac67a3bfa5388c49def90712385f504cb/comments", "author": {"login": "nielx", "id": 324054, "node_id": "MDQ6VXNlcjMyNDA1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/324054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nielx", "html_url": "https://github.com/nielx", "followers_url": "https://api.github.com/users/nielx/followers", "following_url": "https://api.github.com/users/nielx/following{/other_user}", "gists_url": "https://api.github.com/users/nielx/gists{/gist_id}", "starred_url": "https://api.github.com/users/nielx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nielx/subscriptions", "organizations_url": "https://api.github.com/users/nielx/orgs", "repos_url": "https://api.github.com/users/nielx/repos", "events_url": "https://api.github.com/users/nielx/events{/privacy}", "received_events_url": "https://api.github.com/users/nielx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nielx", "id": 324054, "node_id": "MDQ6VXNlcjMyNDA1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/324054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nielx", "html_url": "https://github.com/nielx", "followers_url": "https://api.github.com/users/nielx/followers", "following_url": "https://api.github.com/users/nielx/following{/other_user}", "gists_url": "https://api.github.com/users/nielx/gists{/gist_id}", "starred_url": "https://api.github.com/users/nielx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nielx/subscriptions", "organizations_url": "https://api.github.com/users/nielx/orgs", "repos_url": "https://api.github.com/users/nielx/repos", "events_url": "https://api.github.com/users/nielx/events{/privacy}", "received_events_url": "https://api.github.com/users/nielx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "html_url": "https://github.com/rust-lang/rust/commit/a8403e1cda2e0cba4f2c7282ab5adb5392bef473"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "1078dadce25f596d1d1b6efc26c359d8cad0d8de", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/90e32e2ac67a3bfa5388c49def90712385f504cb/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90e32e2ac67a3bfa5388c49def90712385f504cb/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=90e32e2ac67a3bfa5388c49def90712385f504cb", "patch": "@@ -1493,7 +1493,7 @@ pub fn in_rustc_thread<F, R>(f: F) -> Result<R, Box<Any + Send>>\n     // Temporarily have stack size set to 16MB to deal with nom-using crates failing\n     const STACK_SIZE: usize = 16 * 1024 * 1024; // 16MB\n \n-    #[cfg(unix)]\n+    #[cfg(all(unix,not(target_os = \"haiku\")))]\n     let spawn_thread = unsafe {\n         // Fetch the current resource limits\n         let mut rlim = libc::rlimit {\n@@ -1525,6 +1525,26 @@ pub fn in_rustc_thread<F, R>(f: F) -> Result<R, Box<Any + Send>>\n     #[cfg(windows)]\n     let spawn_thread = false;\n \n+    #[cfg(target_os = \"haiku\")]\n+    let spawn_thread = unsafe {\n+        // Haiku does not have setrlimit implemented for the stack size.\n+        // By default it does have the 16 MB stack limit, but we check this in\n+        // case the minimum STACK_SIZE changes or Haiku's defaults change.\n+        let mut rlim = libc::rlimit {\n+            rlim_cur: 0,\n+            rlim_max: 0,\n+        };\n+        if libc::getrlimit(libc::RLIMIT_STACK, &mut rlim) != 0 {\n+            let err = io::Error::last_os_error();\n+            error!(\"in_rustc_thread: error calling getrlimit: {}\", err);\n+            true\n+        } else if rlim.rlim_cur >= STACK_SIZE {\n+            false\n+        } else {\n+            true\n+        }\n+    };\n+\n     #[cfg(not(any(windows,unix)))]\n     let spawn_thread = true;\n "}]}