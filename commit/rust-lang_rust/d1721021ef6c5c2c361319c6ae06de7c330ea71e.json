{"sha": "d1721021ef6c5c2c361319c6ae06de7c330ea71e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNzIxMDIxZWY2YzVjMmMzNjEzMTljNmFlMDZkZTdjMzMwZWE3MWU=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-25T19:00:04Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-25T19:00:04Z"}, "message": "vscode: refactor analyzer status", "tree": {"sha": "8d9001c5017a32ac6d1551c8d0d3548be799fba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d9001c5017a32ac6d1551c8d0d3548be799fba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1721021ef6c5c2c361319c6ae06de7c330ea71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1721021ef6c5c2c361319c6ae06de7c330ea71e", "html_url": "https://github.com/rust-lang/rust/commit/d1721021ef6c5c2c361319c6ae06de7c330ea71e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1721021ef6c5c2c361319c6ae06de7c330ea71e/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eff1b3fe4d17dcecf0ec9a30c35d6c88715cb8ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/eff1b3fe4d17dcecf0ec9a30c35d6c88715cb8ea", "html_url": "https://github.com/rust-lang/rust/commit/eff1b3fe4d17dcecf0ec9a30c35d6c88715cb8ea"}], "stats": {"total": 31, "additions": 11, "deletions": 20}, "files": [{"sha": "09daa3402cf674926929e746c35b12e60ba77700", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d1721021ef6c5c2c361319c6ae06de7c330ea71e/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d1721021ef6c5c2c361319c6ae06de7c330ea71e/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=d1721021ef6c5c2c361319c6ae06de7c330ea71e", "patch": "@@ -5,7 +5,7 @@ import { Ctx, Cmd } from '../ctx';\n \n // Shows status of rust-analyzer (for debugging)\n export function analyzerStatus(ctx: Ctx): Cmd {\n-    let poller: NodeJS.Timer | null = null;\n+    let poller: NodeJS.Timer | undefined = undefined;\n     const tdcp = new TextDocumentContentProvider(ctx);\n \n     ctx.pushCleanup(\n@@ -17,41 +17,32 @@ export function analyzerStatus(ctx: Ctx): Cmd {\n \n     ctx.pushCleanup({\n         dispose() {\n-            if (poller != null) {\n+            if (poller !== undefined) {\n                 clearInterval(poller);\n             }\n         },\n     });\n \n-    return async function handle() {\n-        if (poller == null) {\n+    return async () => {\n+        if (poller === undefined) {\n             poller = setInterval(() => tdcp.eventEmitter.fire(tdcp.uri), 1000);\n         }\n         const document = await vscode.workspace.openTextDocument(tdcp.uri);\n-        return vscode.window.showTextDocument(\n-            document,\n-            vscode.ViewColumn.Two,\n-            true,\n-        );\n+        return vscode.window.showTextDocument(document, vscode.ViewColumn.Two, true);\n     };\n }\n \n-class TextDocumentContentProvider\n-    implements vscode.TextDocumentContentProvider {\n-    uri = vscode.Uri.parse('rust-analyzer-status://status');\n-    eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n+class TextDocumentContentProvider implements vscode.TextDocumentContentProvider {\n+    readonly uri = vscode.Uri.parse('rust-analyzer-status://status');\n+    readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n \n     constructor(private readonly ctx: Ctx) {\n     }\n \n-    provideTextDocumentContent(\n-        _uri: vscode.Uri,\n-    ): vscode.ProviderResult<string> {\n-        const editor = vscode.window.activeTextEditor;\n-        const client = this.ctx.client;\n-        if (!editor || !client) return '';\n+    provideTextDocumentContent(_uri: vscode.Uri): vscode.ProviderResult<string> {\n+        if (!vscode.window.activeTextEditor) return '';\n \n-        return client.sendRequest(ra.analyzerStatus, null);\n+        return this.ctx.client.sendRequest(ra.analyzerStatus, null);\n     }\n \n     get onDidChange(): vscode.Event<vscode.Uri> {"}]}