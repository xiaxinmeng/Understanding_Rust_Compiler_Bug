{"sha": "ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjM2RjMmQ0Nzc3ZjZjYWJhZjliYTU1NzNkY2IwZmM1YWRmNzczMWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-10-27T23:25:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-10-28T00:30:08Z"}, "message": "1.4 release notes", "tree": {"sha": "34dd5de3c3df27b0acd1597f44d776a3c3020d05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34dd5de3c3df27b0acd1597f44d776a3c3020d05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e", "html_url": "https://github.com/rust-lang/rust/commit/ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "679b5a9faaed845bf4a4bd8fe27a2a98df78b7ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/679b5a9faaed845bf4a4bd8fe27a2a98df78b7ad", "html_url": "https://github.com/rust-lang/rust/commit/679b5a9faaed845bf4a4bd8fe27a2a98df78b7ad"}], "stats": {"total": 169, "additions": 169, "deletions": 0}, "files": [{"sha": "2f1dac4a18781b1f0e6b78e48edcc619b65dbb20", "filename": "RELEASES.md", "status": "modified", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/rust-lang/rust/blob/ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=ec3dc2d4777f6cabaf9ba5573dcb0fc5adf7731e", "patch": "@@ -1,3 +1,172 @@\n+Version 1.4.0 (October 2015)\n+============================\n+\n+* ~1200 changes, numerous bugfixes\n+\n+Highlights\n+----------\n+\n+* Windows builds targeting the 64-bit MSVC ABI and linker (instead of\n+  GNU) are now supported and recommended for use.\n+\n+Breaking Changes\n+----------------\n+\n+* [Several changes have been made to fix type soundness and improve\n+  the behavior of associated types][sound]. See [RFC 1214]. Although\n+  we have mostly introduced these changes as warnings this release, to\n+  become errors next release, there are still some scenarios that will\n+  see immediate breakage.\n+* [The `str::lines` and `BufRead::lines` iterators treat `\\r\\n` as\n+  line breaks in addition to `\\n`][crlf].\n+* [Loans of `'static` lifetime extend to the end of a function][stat].\n+\n+Language\n+--------\n+\n+* `use` statements that import multiple items [can now rename\n+  them][i], as in `use foo::{bar as kitten, baz as puppy}`.\n+* [Binops work correctly on fat pointers][binfat].\n+* `pub extern crate`, which does not behave as expected, [issues a\n+  warning][pec] until a better solution is found.\n+\n+Libraries\n+---------\n+\n+* [Many APIs were stabilized][stab]: `<Box<str>>::into_string`,\n+  [`Arc::downgrade`], [`Arc::get_mut`], [`Arc::make_mut`],\n+  [`Arc::try_unwrap`], [`Box::from_raw`], [`Box::into_raw`], [`CStr::to_str`],\n+  [`CStr::to_string_lossy`], [`CString::from_raw`], [`CString::into_raw`],\n+  [`IntoRawFd::into_raw_fd`], [`IntoRawFd`],\n+  `IntoRawHandle::into_raw_handle`, `IntoRawHandle`,\n+  `IntoRawSocket::into_raw_socket`, `IntoRawSocket`, [`Rc::downgrade`],\n+  [`Rc::get_mut`], [`Rc::make_mut`], [`Rc::try_unwrap`], [`Result::expect`],\n+  [`String::into_boxed_str`], [`TcpStream::read_timeout`],\n+  [`TcpStream::set_read_timeout`], [`TcpStream::set_write_timeout`],\n+  [`TcpStream::write_timeout`], [`UdpSocket::read_timeout`],\n+  [`UdpSocket::set_read_timeout`], [`UdpSocket::set_write_timeout`],\n+  [`UdpSocket::write_timeout`], `Vec::append`, `Vec::split_off`,\n+  [`VecDeque::append`], [`VecDeque::retain`], [`VecDeque::split_off`],\n+  [`rc::Weak::upgrade`], [`rc::Weak`], [`slice::Iter::as_slice`],\n+  [`slice::IterMut::into_slice`], [`str::CharIndices::as_str`],\n+  [`str::Chars::as_str`], [`str::split_at_mut`], [`str::split_at`],\n+  [`sync::Weak::upgrade`], [`sync::Weak`], [`thread::park_timeout`],\n+  [`thread::sleep`].\n+* [Some APIs were deprecated][dep]: `BTreeMap::with_b`,\n+  `BTreeSet::with_b`, `Option::as_mut_slice`, `Option::as_slice`,\n+  `Result::as_mut_slice`, `Result::as_slice`, `f32::from_str_radix`,\n+  `f64::from_str_radix`.\n+* [Reverse-searching strings is faster with the 'two-way'\n+  algorithm][s].\n+* [`std::io::copy` allows `?Sized` arguments][cc].\n+* The `Windows`, `Chunks`, and `ChunksMut` iterators over slices all\n+  [override `count`, `nth` and `last` with an O(1)\n+  implementation][it].\n+* [`Default` is implemented for arrays up to `[T; 32]`][d].\n+* [`IntoRawFd` has been added to the Unix-specific prelude,\n+  `IntoRawSocket` and `IntoRawHandle` to the Windows-specific\n+  prelude][pr].\n+* [`Extend<String>` and `FromIterator<String` are both implemented for\n+  `String`][es].\n+* [`IntoIterator` is implemented for `Option<&T>` and\n+  `Result<&T>`][into].\n+* [`HashMap` and `HashSet` implement `Extend<&T>` where `T:\n+  Copy`][ext] as part of [RFC 839].\n+* [`BinaryHeap` implements `Debug`][bh2].\n+* [`Borrow` and `BorrowMut` are implemented for fixed-size\n+  arrays][bm].\n+* [`extern fn`s of with the \"Rust\" and \"C\" ABIs implement common\n+  traits including `Eq`, `Ord`, `Debug`, `Hash`][fp].\n+* [String comparison is faster][faststr].\n+* `&mut T` where `T: Write` [also implements `Write`][mutw].\n+* [A stable regression in `VecDec::push_back` that caused panics for\n+  zero-sized types was fixed][vd].\n+* [Function pointers implement traits for up to 12 parameters][fp2].\n+\n+Miscellaneous\n+-------------\n+\n+* The compiler [no longer uses the 'morestack' feature to prevent\n+  stack overflow][mm]. Instead it uses guard pages and stack\n+  probes (though stack probes are not yet implemented on any platform\n+  but Windows).\n+* [The compiler matches traits faster when projections are involved][p].\n+* The 'improper_ctypes' lint [no longer warns about use of `isize` and\n+  `usize`][ffi].\n+* [Cargo now displays useful information about what its doing during\n+  `cargo update`][cu].\n+\n+[`Arc::downgrade`]: http://doc.rust-lang.org/nightly/alloc/arc/struct.Arc.html#method.downgrade\n+[`Arc::make_mut`]: http://doc.rust-lang.org/nightly/alloc/arc/struct.Arc.html#method.make_mut\n+[`Arc::get_mut`]: http://doc.rust-lang.org/nightly/alloc/arc/struct.Arc.html#method.get_mut\n+[`Arc::try_unwrap`]: http://doc.rust-lang.org/nightly/alloc/arc/struct.Arc.html#method.try_unwrap\n+[`Box::from_raw`]: http://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html#method.from_raw\n+[`Box::into_raw`]: http://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html#method.into_raw\n+[`CStr::to_str`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CStr.html#method.to_str\n+[`CStr::to_string_lossy`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CStr.html#method.to_string_lossy\n+[`CString::from_raw`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html#method.from_raw\n+[`CString::into_raw`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html#method.into_raw\n+[`IntoRawFd::into_raw_fd`]: http://doc.rust-lang.org/nightly/std/os/unix/io/trait.IntoRawFd.html#tymethod.into_raw_fd\n+[`IntoRawFd`]: http://doc.rust-lang.org/nightly/std/os/unix/io/trait.IntoRawFd.html\n+[`Rc::downgrade`]: http://doc.rust-lang.org/nightly/alloc/rc/struct.Rc.html#method.downgrade\n+[`Rc::get_mut`]: http://doc.rust-lang.org/nightly/alloc/rc/struct.Rc.html#method.get_mut\n+[`Rc::make_mut`]: http://doc.rust-lang.org/nightly/alloc/rc/struct.Rc.html#method.make_mut\n+[`Rc::try_unwrap`]: http://doc.rust-lang.org/nightly/alloc/rc/struct.Rc.html#method.try_unwrap\n+[`Result::expect`]: http://doc.rust-lang.org/nightly/core/result/enum.Result.html#method.expect\n+[`String::into_boxed_str`]: http://doc.rust-lang.org/nightly/collections/string/struct.String.html#method.into_boxed_str\n+[`TcpStream::read_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.read_timeout\n+[`TcpStream::set_read_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.set_read_timeout\n+[`TcpStream::write_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.write_timeout\n+[`TcpStream::set_write_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.set_write_timeout\n+[`UdpSocket::read_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.read_timeout\n+[`UdpSocket::set_read_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.set_read_timeout\n+[`UdpSocket::write_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.write_timeout\n+[`UdpSocket::set_write_timeout`]: http://doc.rust-lang.org/nightly/std/net/struct.TcpStream.html#method.set_write_timeout\n+[`VecDeque::append`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.append\n+[`VecDeque::retain`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.retain\n+[`VecDeque::split_off`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.split_off\n+[`rc::Weak::upgrade`]: http://doc.rust-lang.org/nightly/std/rc/struct.Weak.html#method.upgrade\n+[`rc::Weak`]: http://doc.rust-lang.org/nightly/std/rc/struct.Weak.html\n+[`slice::Iter::as_slice`]: http://doc.rust-lang.org/nightly/std/slice/struct.Iter.html#method.as_slice\n+[`slice::IterMut::into_slice`]: http://doc.rust-lang.org/nightly/std/slice/struct.IterMut.html#method.into_slice\n+[`str::CharIndices::as_str`]: http://doc.rust-lang.org/nightly/std/str/struct.CharIndices.html#method.as_str\n+[`str::Chars::as_str`]: http://doc.rust-lang.org/nightly/std/str/struct.Chars.html#method.as_str\n+[`str::split_at_mut`]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.split_at_mut\n+[`str::split_at`]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.split_at\n+[`sync::Weak::upgrade`]: http://doc.rust-lang.org/nightly/std/sync/struct.Weak.html#method.upgrade\n+[`sync::Weak`]: http://doc.rust-lang.org/nightly/std/sync/struct.Weak.html\n+[`thread::park_timeout`]: http://doc.rust-lang.org/nightly/std/thread/fn.park_timeout.html\n+[`thread::sleep`]: http://doc.rust-lang.org/nightly/std/thread/fn.sleep.html\n+[bh2]: https://github.com/rust-lang/rust/pull/28156\n+[binfat]: https://github.com/rust-lang/rust/pull/28270\n+[bm]: https://github.com/rust-lang/rust/pull/28197\n+[cc]: https://github.com/rust-lang/rust/pull/27531\n+[crlf]: https://github.com/rust-lang/rust/pull/28034\n+[cu]: https://github.com/rust-lang/cargo/pull/1931\n+[d]: https://github.com/rust-lang/rust/pull/27825\n+[dep]: https://github.com/rust-lang/rust/pull/28339\n+[es]: https://github.com/rust-lang/rust/pull/27956\n+[ext]: https://github.com/rust-lang/rust/pull/28094\n+[faststr]: https://github.com/rust-lang/rust/pull/28338\n+[ffi]: https://github.com/rust-lang/rust/pull/28779\n+[fp]: https://github.com/rust-lang/rust/pull/28268\n+[fp2]: https://github.com/rust-lang/rust/pull/28560\n+[i]: https://github.com/rust-lang/rust/pull/27451\n+[into]: https://github.com/rust-lang/rust/pull/28039\n+[it]: https://github.com/rust-lang/rust/pull/27652\n+[mm]: https://github.com/rust-lang/rust/pull/27338\n+[mutw]: https://github.com/rust-lang/rust/pull/28368\n+[sound]: https://github.com/rust-lang/rust/pull/27641\n+[p]: https://github.com/rust-lang/rust/pull/27866\n+[pec]: https://github.com/rust-lang/rust/pull/28486\n+[pr]: https://github.com/rust-lang/rust/pull/27896\n+[RFC 839]: https://github.com/rust-lang/rfcs/blob/master/text/0839-embrace-extend-extinguish.md\n+[RFC 1214]: https://github.com/rust-lang/rfcs/blob/master/text/1214-projections-lifetimes-and-wf.md\n+[s]: https://github.com/rust-lang/rust/pull/27474\n+[stab]: https://github.com/rust-lang/rust/pull/28339\n+[stat]: https://github.com/rust-lang/rust/pull/28321\n+[vd]: https://github.com/rust-lang/rust/pull/28494\n+\n Version 1.3.0 (2015-09-17)\n ==============================\n "}]}