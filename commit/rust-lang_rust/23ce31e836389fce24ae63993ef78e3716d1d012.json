{"sha": "23ce31e836389fce24ae63993ef78e3716d1d012", "node_id": "C_kwDOAAsO6NoAKDIzY2UzMWU4MzYzODlmY2UyNGFlNjM5OTNlZjc4ZTM3MTZkMWQwMTI", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T11:58:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "simplify", "tree": {"sha": "e40a5efb816f3613b8d76418793f7412b1aa87c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e40a5efb816f3613b8d76418793f7412b1aa87c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23ce31e836389fce24ae63993ef78e3716d1d012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23ce31e836389fce24ae63993ef78e3716d1d012", "html_url": "https://github.com/rust-lang/rust/commit/23ce31e836389fce24ae63993ef78e3716d1d012", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23ce31e836389fce24ae63993ef78e3716d1d012/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d3ad04a9c84ac70c15465c1124c4d4dbef3b772", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d3ad04a9c84ac70c15465c1124c4d4dbef3b772", "html_url": "https://github.com/rust-lang/rust/commit/4d3ad04a9c84ac70c15465c1124c4d4dbef3b772"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "8d192b53f85e510eeab6b1decf4d439daaca1007", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23ce31e836389fce24ae63993ef78e3716d1d012/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ce31e836389fce24ae63993ef78e3716d1d012/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=23ce31e836389fce24ae63993ef78e3716d1d012", "patch": "@@ -726,10 +726,7 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragmen\n                         .map_err(|()| err!())\n                 }\n                 // `vis` is optional\n-                \"vis\" => match input.eat_vis() {\n-                    Some(vis) => Ok(Some(vis)),\n-                    None => Ok(None),\n-                },\n+                \"vis\" => Ok(input.eat_vis()),\n                 _ => Err(ExpandError::UnexpectedToken),\n             };\n             return tt_result.map(|it| it.map(Fragment::Tokens)).into();\n@@ -899,14 +896,7 @@ impl<'a> TtIter<'a> {\n     }\n \n     fn eat_vis(&mut self) -> Option<tt::TokenTree> {\n-        let mut fork = self.clone();\n-        match fork.expect_fragment(Visibility) {\n-            ExpandResult { value: tt, err: None } => {\n-                *self = fork;\n-                tt\n-            }\n-            ExpandResult { value: _, err: Some(_) } => None,\n-        }\n+        self.expect_fragment(Visibility).value\n     }\n \n     fn eat_char(&mut self, c: char) -> Option<tt::TokenTree> {"}]}