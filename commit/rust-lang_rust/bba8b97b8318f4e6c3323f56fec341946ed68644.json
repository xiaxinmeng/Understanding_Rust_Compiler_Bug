{"sha": "bba8b97b8318f4e6c3323f56fec341946ed68644", "node_id": "C_kwDOAAsO6NoAKGJiYThiOTdiODMxOGY0ZTZjMzMyM2Y1NmZlYzM0MTk0NmVkNjg2NDQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T03:39:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T06:32:14Z"}, "message": "Remove unnecessary sigils around `Symbol::as_str()` calls.", "tree": {"sha": "3c734e80e89a6c918c1a02012397b1cecd3feb42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c734e80e89a6c918c1a02012397b1cecd3feb42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bba8b97b8318f4e6c3323f56fec341946ed68644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bba8b97b8318f4e6c3323f56fec341946ed68644", "html_url": "https://github.com/rust-lang/rust/commit/bba8b97b8318f4e6c3323f56fec341946ed68644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bba8b97b8318f4e6c3323f56fec341946ed68644/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6009ca30f13a00a025e0470be23e4d47803198d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6009ca30f13a00a025e0470be23e4d47803198d", "html_url": "https://github.com/rust-lang/rust/commit/c6009ca30f13a00a025e0470be23e4d47803198d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ec542e55681e5be898ab0be9f2c4671b40c7950c", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=bba8b97b8318f4e6c3323f56fec341946ed68644", "patch": "@@ -33,7 +33,7 @@ impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n             return value;\n         }\n \n-        let global = self.global_string(&*symbol.as_str());\n+        let global = self.global_string(symbol.as_str());\n \n         self.const_cstr_cache.borrow_mut().insert(symbol, global);\n         global"}, {"sha": "dbee505a4977b26f1853acb52643f194fd5c437b", "filename": "src/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdeclare.rs?ref=bba8b97b8318f4e6c3323f56fec341946ed68644", "patch": "@@ -17,7 +17,7 @@ impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n                 global.set_tls_model(self.tls_model);\n             }\n             if let Some(link_section) = link_section {\n-                global.set_link_section(&link_section.as_str());\n+                global.set_link_section(link_section.as_str());\n             }\n             global\n         }\n@@ -53,7 +53,7 @@ impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n             global.set_tls_model(self.tls_model);\n         }\n         if let Some(link_section) = link_section {\n-            global.set_link_section(&link_section.as_str());\n+            global.set_link_section(link_section.as_str());\n         }\n         let global_address = global.get_address(None);\n         self.globals.borrow_mut().insert(name.to_string(), global_address);"}, {"sha": "0782adeb6a175bad86a826ab561d2dbe17c60f99", "filename": "src/intrinsic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fintrinsic%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fintrinsic%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fmod.rs?ref=bba8b97b8318f4e6c3323f56fec341946ed68644", "patch": "@@ -88,7 +88,7 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n         let arg_tys = sig.inputs();\n         let ret_ty = sig.output();\n         let name = tcx.item_name(def_id);\n-        let name_str = &*name.as_str();\n+        let name_str = name.as_str();\n \n         let llret_ty = self.layout_of(ret_ty).gcc_type(self, true);\n         let result = PlaceRef::new_sized(llresult, fn_abi.ret.layout);"}, {"sha": "aff27f71d91c464612577e5a275c452a65a674d2", "filename": "src/intrinsic/simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fintrinsic%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba8b97b8318f4e6c3323f56fec341946ed68644/src%2Fintrinsic%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fsimd.rs?ref=bba8b97b8318f4e6c3323f56fec341946ed68644", "patch": "@@ -52,7 +52,7 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n     let sig =\n         tcx.normalize_erasing_late_bound_regions(ty::ParamEnv::reveal_all(), callee_ty.fn_sig(tcx));\n     let arg_tys = sig.inputs();\n-    let name_str = &*name.as_str();\n+    let name_str = name.as_str();\n \n     // every intrinsic below takes a SIMD vector as its first argument\n     require_simd!(arg_tys[0], \"input\");"}]}