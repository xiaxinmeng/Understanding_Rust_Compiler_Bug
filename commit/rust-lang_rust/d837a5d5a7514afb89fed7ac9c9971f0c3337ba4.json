{"sha": "d837a5d5a7514afb89fed7ac9c9971f0c3337ba4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MzdhNWQ1YTc1MTRhZmI4OWZlZDdhYzljOTk3MWYwYzMzMzdiYTQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-13T16:55:06Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-14T09:30:51Z"}, "message": "Show test mod runnable in outline modules", "tree": {"sha": "1bd557081f460925f0da19369d4e3ffd29a20e5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bd557081f460925f0da19369d4e3ffd29a20e5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4", "html_url": "https://github.com/rust-lang/rust/commit/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "098a8e7b2f61a0d7c6bb1b7ad949969a9bc9356c", "url": "https://api.github.com/repos/rust-lang/rust/commits/098a8e7b2f61a0d7c6bb1b7ad949969a9bc9356c", "html_url": "https://github.com/rust-lang/rust/commit/098a8e7b2f61a0d7c6bb1b7ad949969a9bc9356c"}], "stats": {"total": 161, "additions": 155, "deletions": 6}, "files": [{"sha": "ff9b203e9f763d2c6236eeae46ebe19d0db26d72", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 112, "deletions": 6, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=d837a5d5a7514afb89fed7ac9c9971f0c3337ba4", "patch": "@@ -16,7 +16,10 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use stdx::{always, format_to};\n use syntax::ast::{self, AstNode, AttrsOwner};\n \n-use crate::{display::TryToNav, references, FileId, NavigationTarget};\n+use crate::{\n+    display::{ToNav, TryToNav},\n+    references, FileId, NavigationTarget,\n+};\n \n #[derive(Debug, Clone, Hash, PartialEq, Eq)]\n pub struct Runnable {\n@@ -176,6 +179,10 @@ pub(crate) fn runnables(db: &RootDatabase, file_id: FileId) -> Vec<Runnable> {\n         }\n     });\n \n+    sema.to_module_defs(file_id)\n+        .map(|it| runnable_mod_outline_definition(&sema, it))\n+        .for_each(|it| add_opt(it, None));\n+\n     res.extend(in_macro_expansion.into_iter().flat_map(|(_, runnables)| {\n         let use_name_in_title = runnables.len() != 1;\n         runnables.into_iter().map(move |mut r| {\n@@ -351,6 +358,30 @@ pub(crate) fn runnable_impl(sema: &Semantics<RootDatabase>, def: &hir::Impl) ->\n     Some(Runnable { use_name_in_title: false, nav, kind: RunnableKind::DocTest { test_id }, cfg })\n }\n \n+/// Creates a test mod runnable for outline modules at the top of their definition.\n+fn runnable_mod_outline_definition(\n+    sema: &Semantics<RootDatabase>,\n+    def: hir::Module,\n+) -> Option<Runnable> {\n+    if !has_test_function_or_multiple_test_submodules(sema, &def) {\n+        return None;\n+    }\n+    let path =\n+        def.path_to_root(sema.db).into_iter().rev().filter_map(|it| it.name(sema.db)).join(\"::\");\n+\n+    let attrs = def.attrs(sema.db);\n+    let cfg = attrs.cfg();\n+    match def.definition_source(sema.db).value {\n+        hir::ModuleSource::SourceFile(_) => Some(Runnable {\n+            use_name_in_title: false,\n+            nav: def.to_nav(sema.db),\n+            kind: RunnableKind::TestMod { path },\n+            cfg,\n+        }),\n+        _ => None,\n+    }\n+}\n+\n fn module_def_doctest(sema: &Semantics<RootDatabase>, def: hir::ModuleDef) -> Option<Runnable> {\n     let attrs = match def {\n         hir::ModuleDef::Module(it) => it.attrs(sema.db),\n@@ -541,7 +572,7 @@ mod not_a_root {\n     fn main() {}\n }\n \"#,\n-            &[Bin, Test, Test, Bench],\n+            &[Bin, Test, Test, Bench, TestMod],\n             expect![[r#\"\n                 [\n                     Runnable {\n@@ -618,6 +649,21 @@ mod not_a_root {\n                         },\n                         cfg: None,\n                     },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 0..137,\n+                            name: \"\",\n+                            kind: Module,\n+                        },\n+                        kind: TestMod {\n+                            path: \"\",\n+                        },\n+                        cfg: None,\n+                    },\n                 ]\n             \"#]],\n         );\n@@ -1143,7 +1189,7 @@ $0\n #[cfg(feature = \"foo\")]\n fn test_foo1() {}\n \"#,\n-            &[Test],\n+            &[Test, TestMod],\n             expect![[r#\"\n                 [\n                     Runnable {\n@@ -1174,6 +1220,21 @@ fn test_foo1() {}\n                             ),\n                         ),\n                     },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 0..51,\n+                            name: \"\",\n+                            kind: Module,\n+                        },\n+                        kind: TestMod {\n+                            path: \"\",\n+                        },\n+                        cfg: None,\n+                    },\n                 ]\n             \"#]],\n         );\n@@ -1189,7 +1250,7 @@ $0\n #[cfg(all(feature = \"foo\", feature = \"bar\"))]\n fn test_foo1() {}\n \"#,\n-            &[Test],\n+            &[Test, TestMod],\n             expect![[r#\"\n                 [\n                     Runnable {\n@@ -1230,6 +1291,21 @@ fn test_foo1() {}\n                             ),\n                         ),\n                     },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 0..73,\n+                            name: \"\",\n+                            kind: Module,\n+                        },\n+                        kind: TestMod {\n+                            path: \"\",\n+                        },\n+                        cfg: None,\n+                    },\n                 ]\n             \"#]],\n         );\n@@ -1316,7 +1392,7 @@ mod tests {\n }\n gen2!();\n \"#,\n-            &[TestMod, TestMod, Test, Test],\n+            &[TestMod, TestMod, TestMod, Test, Test],\n             expect![[r#\"\n                 [\n                     Runnable {\n@@ -1336,6 +1412,21 @@ gen2!();\n                         },\n                         cfg: None,\n                     },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 0..237,\n+                            name: \"\",\n+                            kind: Module,\n+                        },\n+                        kind: TestMod {\n+                            path: \"\",\n+                        },\n+                        cfg: None,\n+                    },\n                     Runnable {\n                         use_name_in_title: true,\n                         nav: NavigationTarget {\n@@ -1579,7 +1670,7 @@ fn t0() {}\n #[test]\n fn t1() {}\n \"#,\n-            &[Test, Test],\n+            &[Test, Test, TestMod],\n             expect![[r#\"\n                 [\n                     Runnable {\n@@ -1624,6 +1715,21 @@ fn t1() {}\n                         },\n                         cfg: None,\n                     },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                1,\n+                            ),\n+                            full_range: 0..39,\n+                            name: \"m\",\n+                            kind: Module,\n+                        },\n+                        kind: TestMod {\n+                            path: \"m\",\n+                        },\n+                        cfg: None,\n+                    },\n                 ]\n             \"#]],\n         );"}, {"sha": "f92902e2e74f837acf59618dd07a3ec45546e55d", "filename": "crates/rust-analyzer/tests/slow-tests/main.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d837a5d5a7514afb89fed7ac9c9971f0c3337ba4/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fmain.rs?ref=d837a5d5a7514afb89fed7ac9c9971f0c3337ba4", "patch": "@@ -133,6 +133,49 @@ fn main() {}\n               \"targetUri\": \"file:///[..]/tests/spam.rs\"\n             }\n           },\n+          {\n+            \"args\": {\n+              \"overrideCargo\": null,\n+              \"workspaceRoot\": server.path().join(\"foo\"),\n+              \"cargoArgs\": [\n+                \"test\",\n+                \"--package\",\n+                \"foo\",\n+                \"--test\",\n+                \"spam\"\n+              ],\n+              \"cargoExtraArgs\": [],\n+              \"executableArgs\": [\n+                \"\",\n+                \"--nocapture\"\n+              ]\n+            },\n+            \"kind\": \"cargo\",\n+            \"label\": \"test-mod \",\n+            \"location\": {\n+              \"targetUri\": \"file:///[..]/tests/spam.rs\",\n+              \"targetRange\": {\n+                \"start\": {\n+                  \"line\": 0,\n+                  \"character\": 0\n+                },\n+                \"end\": {\n+                  \"line\": 3,\n+                  \"character\": 0\n+                }\n+              },\n+              \"targetSelectionRange\": {\n+                \"start\": {\n+                  \"line\": 0,\n+                  \"character\": 0\n+                },\n+                \"end\": {\n+                  \"line\": 3,\n+                  \"character\": 0\n+                }\n+              }\n+            },\n+          },\n           {\n             \"args\": {\n               \"cargoArgs\": [\"check\", \"--package\", \"foo\", \"--all-targets\"],"}]}