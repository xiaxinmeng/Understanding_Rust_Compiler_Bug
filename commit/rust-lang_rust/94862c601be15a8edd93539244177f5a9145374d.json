{"sha": "94862c601be15a8edd93539244177f5a9145374d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ODYyYzYwMWJlMTVhOGVkZDkzNTM5MjQ0MTc3ZjVhOTE0NTM3NGQ=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-06-29T11:00:31Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-06-29T12:25:35Z"}, "message": "Correct comments about unsizing regarding #40319.", "tree": {"sha": "1cbaa5a75ab61e0e5ae3252da80668e5ad1e5e73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cbaa5a75ab61e0e5ae3252da80668e5ad1e5e73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94862c601be15a8edd93539244177f5a9145374d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJZVPG/AAoJEHynqF4EmoLo8QAP/RSY2x9NEhI58fAOxoievrc1\nx3kSBXpgYszrso2m1GzoX4Sjg/mbmVHrYf9msHEm0XTCUtnY2XvSh2nh4L23+mjJ\nZ/OV9xuza6rThiyoO9smtXZ4c9sFSyJ0gYn15vNR9amGcQS9RtY3Z03aHBp7Pu4v\nCs9ffIrgAdCDTPgPIIimLc1zUkILEw08BdmNSfTtm0matsCEXvD0DY667vcSLFwu\nMIKe/DZarJOyFxIIIGhOoXGk+wkm7Kplc4WH8KcOuAW981anZsRjFom9yWotjAUt\n7DY+Lo+t4UyWre67hDm7JonCaYZWIJF4qdas0tfEWyJKmvGOC52ymfFODQUKsej/\neGN7Yl+SE/hQdhQ+2wfOg7lPscZqD9xONWXrtYLb3PgA+7R+Nee2JGTbL+YpCEci\nQx6SqiCxBwJCOVQtxoJixFg60Kc5srrLkpjlE7WoFbOvCl1XQKKdtreGKpnzdVTZ\nW/bbixJsq3Sh0XhwuV8M4V725WdjTMrKfES3TDLZ3P5yP0VPDsYMOflWvTJKWjJz\nk5jT4QvJ6/Z7AyQG9btrgfIJgNquBC2dEk7FyIivQ+71Jb/sfZZoJAYKRdtiXhnr\n20UwLzdgMv7de3MBaQ4EFwZDIRWQK8v/eY33Zg0+7mg/Sg99v4lehoOTO/Xy3Mfa\nF+E9zq/BSr9tEFBiBnc3\n=yaba\n-----END PGP SIGNATURE-----", "payload": "tree 1cbaa5a75ab61e0e5ae3252da80668e5ad1e5e73\nparent 141265dfe8eb345d3218c771db957a93d6c7f000\nauthor Masaki Hara <ackie.h.gmai@gmail.com> 1498734031 +0900\ncommitter Masaki Hara <ackie.h.gmai@gmail.com> 1498739135 +0900\n\nCorrect comments about unsizing regarding #40319.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94862c601be15a8edd93539244177f5a9145374d", "html_url": "https://github.com/rust-lang/rust/commit/94862c601be15a8edd93539244177f5a9145374d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94862c601be15a8edd93539244177f5a9145374d/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "141265dfe8eb345d3218c771db957a93d6c7f000", "url": "https://api.github.com/repos/rust-lang/rust/commits/141265dfe8eb345d3218c771db957a93d6c7f000", "html_url": "https://github.com/rust-lang/rust/commit/141265dfe8eb345d3218c771db957a93d6c7f000"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "856fea7c2c437188fe97402e74924c96c2f65e11", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/94862c601be15a8edd93539244177f5a9145374d/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94862c601be15a8edd93539244177f5a9145374d/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=94862c601be15a8edd93539244177f5a9145374d", "patch": "@@ -2596,8 +2596,8 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                 let inner_source = field.subst(tcx, substs_a);\n                 let inner_target = field.subst(tcx, substs_b);\n \n-                // Check that the source structure with the target's\n-                // type parameters is a subtype of the target.\n+                // Check that the source struct with the target's\n+                // unsized parameters is equal to the target.\n                 let params = substs_a.iter().enumerate().map(|(i, &k)| {\n                     if ty_params.contains(i) {\n                         Kind::from(substs_b.type_at(i))\n@@ -2635,7 +2635,7 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                 let b_last = tys_b.last().unwrap();\n \n                 // Check that the source tuple with the target's\n-                // last element is a subtype of the target.\n+                // last element is equal to the target.\n                 let new_tuple = tcx.mk_tup(a_mid.iter().chain(Some(b_last)), false);\n                 let InferOk { obligations, .. } =\n                     self.infcx.at(&obligation.cause, obligation.param_env)"}]}