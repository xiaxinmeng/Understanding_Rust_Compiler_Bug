{"sha": "9188ec0f7fd068608c9446cce99944c4cc33ede3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxODhlYzBmN2ZkMDY4NjA4Yzk0NDZjY2U5OTk0NGM0Y2MzM2VkZTM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-27T19:08:44Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2016-04-27T19:08:44Z"}, "message": "Bail out on recovered errors. (#965)\n\nCloses #915\r\nCloses #930\r\nCloses #931", "tree": {"sha": "04f824310a842223e46bbc2a02dabea3186fc5f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04f824310a842223e46bbc2a02dabea3186fc5f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9188ec0f7fd068608c9446cce99944c4cc33ede3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9188ec0f7fd068608c9446cce99944c4cc33ede3", "html_url": "https://github.com/rust-lang/rust/commit/9188ec0f7fd068608c9446cce99944c4cc33ede3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9188ec0f7fd068608c9446cce99944c4cc33ede3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0755581ca49d3c583d68956bad445ad382c7af9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0755581ca49d3c583d68956bad445ad382c7af9", "html_url": "https://github.com/rust-lang/rust/commit/b0755581ca49d3c583d68956bad445ad382c7af9"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "0a222428fe1c5fab24fb1852299328bb78d0b717", "filename": "src/lib.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9188ec0f7fd068608c9446cce99944c4cc33ede3/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9188ec0f7fd068608c9446cce99944c4cc33ede3/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9188ec0f7fd068608c9446cce99944c4cc33ede3", "patch": "@@ -378,13 +378,22 @@ fn format_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n     report\n }\n \n-fn parse_input(input: Input, parse_session: &ParseSess) -> Result<ast::Crate, DiagnosticBuilder> {\n-    match input {\n+fn parse_input(input: Input,\n+               parse_session: &ParseSess)\n+               -> Result<ast::Crate, Option<DiagnosticBuilder>> {\n+    let result = match input {\n         Input::File(file) => parse::parse_crate_from_file(&file, Vec::new(), &parse_session),\n         Input::Text(text) => {\n             parse::parse_crate_from_source_str(\"stdin\".to_owned(), text, Vec::new(), &parse_session)\n         }\n+    };\n+\n+    // Bail out if the parser recovered from an error.\n+    if parse_session.span_diagnostic.has_errors() {\n+        return Err(None);\n     }\n+\n+    result.map_err(|e| Some(e))\n }\n \n pub fn format_input(input: Input, config: &Config) -> (Summary, FileMap, FormatReport) {\n@@ -405,8 +414,10 @@ pub fn format_input(input: Input, config: &Config) -> (Summary, FileMap, FormatR\n \n     let krate = match parse_input(input, &parse_session) {\n         Ok(krate) => krate,\n-        Err(mut diagnostic) => {\n-            diagnostic.emit();\n+        Err(diagnostic) => {\n+            if let Some(mut diagnostic) = diagnostic {\n+                diagnostic.emit();\n+            }\n             summary.add_parsing_error();\n             return (summary, FileMap::new(), FormatReport::new());\n         }"}, {"sha": "bd054474608b3db614271c2877eb4750a0b9ec37", "filename": "src/macros.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9188ec0f7fd068608c9446cce99944c4cc33ede3/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9188ec0f7fd068608c9446cce99944c4cc33ede3/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=9188ec0f7fd068608c9446cce99944c4cc33ede3", "patch": "@@ -81,13 +81,22 @@ pub fn rewrite_macro(mac: &ast::Mac,\n \n     if MacroStyle::Braces != style {\n         loop {\n-            expr_vec.push(match parser.parse_expr() {\n-                Ok(expr) => expr,\n+            let expr = match parser.parse_expr() {\n+                Ok(expr) => {\n+                    // Recovered errors.\n+                    if context.parse_session.span_diagnostic.has_errors() {\n+                        return None;\n+                    }\n+\n+                    expr\n+                }\n                 Err(mut e) => {\n                     e.cancel();\n                     return None;\n                 }\n-            });\n+            };\n+\n+            expr_vec.push(expr);\n \n             match parser.token {\n                 Token::Eof => break,"}, {"sha": "d04c204186c172de59f7fa6ff16d14a104fc2892", "filename": "tests/source/macros.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9188ec0f7fd068608c9446cce99944c4cc33ede3/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9188ec0f7fd068608c9446cce99944c4cc33ede3/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=9188ec0f7fd068608c9446cce99944c4cc33ede3", "patch": "@@ -55,3 +55,8 @@ fn main() {\n impl X {\n     empty_invoc!{}\n }\n+\n+gfx_pipeline!(pipe {\n+    vbuf: gfx::VertexBuffer<Vertex> = (),\n+    out: gfx::RenderTarget<ColorFormat> = \"Target0\",\n+});"}, {"sha": "902dd2e4d9add7fa97349c37cbade2ff89779329", "filename": "tests/target/macros.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9188ec0f7fd068608c9446cce99944c4cc33ede3/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9188ec0f7fd068608c9446cce99944c4cc33ede3/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=9188ec0f7fd068608c9446cce99944c4cc33ede3", "patch": "@@ -58,3 +58,8 @@ fn main() {\n impl X {\n     empty_invoc!{}\n }\n+\n+gfx_pipeline!(pipe {\n+    vbuf: gfx::VertexBuffer<Vertex> = (),\n+    out: gfx::RenderTarget<ColorFormat> = \"Target0\",\n+});"}]}