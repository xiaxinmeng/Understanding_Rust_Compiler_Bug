{"sha": "0919f7c3a3690f7a0528e8447f8a9741eee45674", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MTlmN2MzYTM2OTBmN2EwNTI4ZTg0NDdmOGE5NzQxZWVlNDU2NzQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-12T13:33:08Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-19T15:57:08Z"}, "message": "rustc_mir: use self.resolve instead of Instance::resolve where possible.", "tree": {"sha": "9a9df43dba4e40bbd2675c566b2fee665262d914", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a9df43dba4e40bbd2675c566b2fee665262d914"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0919f7c3a3690f7a0528e8447f8a9741eee45674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0919f7c3a3690f7a0528e8447f8a9741eee45674", "html_url": "https://github.com/rust-lang/rust/commit/0919f7c3a3690f7a0528e8447f8a9741eee45674", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0919f7c3a3690f7a0528e8447f8a9741eee45674/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ada6f1cd3db78f2972275c24f50721467aea4c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/ada6f1cd3db78f2972275c24f50721467aea4c70", "html_url": "https://github.com/rust-lang/rust/commit/ada6f1cd3db78f2972275c24f50721467aea4c70"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "4fcf8d38da49a9202621ebccb560e69d3d6a5a12", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0919f7c3a3690f7a0528e8447f8a9741eee45674/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0919f7c3a3690f7a0528e8447f8a9741eee45674/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=0919f7c3a3690f7a0528e8447f8a9741eee45674", "patch": "@@ -39,12 +39,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                         if self.tcx.has_attr(def_id, sym::rustc_args_required_const) {\n                             bug!(\"reifying a fn ptr that requires const arguments\");\n                         }\n-                        let instance = ty::Instance::resolve(\n-                            *self.tcx,\n-                            self.param_env,\n-                            def_id,\n-                            substs,\n-                        ).ok_or_else(|| err_inval!(TooGeneric))?;\n+                        let instance = self.resolve(def_id, substs)?;\n                         let fn_ptr = self.memory.create_fn_alloc(FnVal::Instance(instance));\n                         self.write_scalar(Scalar::Ptr(fn_ptr.into()), dest)?;\n                     }"}]}