{"sha": "2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDBiMTBjNGM2MWFjN2MwZmU2N2FlNGM5YTM5MGVhZjM3MDhhZTQ=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-01-09T16:40:13Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-01-09T16:40:13Z"}, "message": "Treat `struct(T)` the same as `struct S { x: T }` WRT being immediate args\n\nCurrently we pass a `struct S(u64)` as an immediate value on i686, but a\n`struct S { x: u64 }` is passed indirectly. This seems pretty wrong,\nas they both have the same underlying LLVM type `{ i64 }`, no sense in\ntreating them differently.", "tree": {"sha": "9a5d44627c3bbbf1cae66b70c0d8ad0596124593", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a5d44627c3bbbf1cae66b70c0d8ad0596124593"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4", "html_url": "https://github.com/rust-lang/rust/commit/2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6354d60ede5e2a7e60fa46f85243efd8dbe89711", "url": "https://api.github.com/repos/rust-lang/rust/commits/6354d60ede5e2a7e60fa46f85243efd8dbe89711", "html_url": "https://github.com/rust-lang/rust/commit/6354d60ede5e2a7e60fa46f85243efd8dbe89711"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "fb58d935922313443973f4a4140286f4412c20a7", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=2100b10c4c61ac7c0fe67ae4c9a390eaf3708ae4", "patch": "@@ -222,10 +222,7 @@ fn type_is_newtype_immediate<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n     match ty.sty {\n         ty::ty_struct(def_id, substs) => {\n             let fields = ty::struct_fields(ccx.tcx(), def_id, substs);\n-            fields.len() == 1 &&\n-                fields[0].name ==\n-                    token::special_idents::unnamed_field.name &&\n-                type_is_immediate(ccx, fields[0].mt.ty)\n+            fields.len() == 1 && type_is_immediate(ccx, fields[0].mt.ty)\n         }\n         _ => false\n     }"}]}