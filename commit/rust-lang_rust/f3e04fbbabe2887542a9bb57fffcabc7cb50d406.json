{"sha": "f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZTA0ZmJiYWJlMjg4NzU0MmE5YmI1N2ZmZmNhYmM3Y2I1MGQ0MDY=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-27T16:40:13Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-27T16:46:23Z"}, "message": "Add `inRustProject` when-clause for commands.", "tree": {"sha": "2a546bc7eb167a5f996b81831472983742515315", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a546bc7eb167a5f996b81831472983742515315"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "html_url": "https://github.com/rust-lang/rust/commit/f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94889b6472b6332436235f6074ebc8ae3ac0ef15", "url": "https://api.github.com/repos/rust-lang/rust/commits/94889b6472b6332436235f6074ebc8ae3ac0ef15", "html_url": "https://github.com/rust-lang/rust/commit/94889b6472b6332436235f6074ebc8ae3ac0ef15"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "75dbafc05a3bf3b5c176a386c6fcc5086dfa3a24", "filename": "editors/code/package.json", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "patch": "@@ -694,6 +694,70 @@\n                     ]\n                 }\n             }\n-        ]\n+        ],\n+        \"menus\": {\n+            \"commandPalette\": [\n+                {\n+                    \"command\": \"rust-analyzer.syntaxTree\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.expandMacro\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.matchingBrace\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.parentModule\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.joinLines\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.run\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.debug\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.newDebugConfig\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.analyzerStatus\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.collectGarbage\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.reload\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.onEnter\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.ssr\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.serverVersion\",\n+                    \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.toggleInlayHints\",\n+                    \"when\": \"inRustProject\"\n+                }\n+            ]\n+        }\n     }\n }"}, {"sha": "b7337621cb61b951089af0a9e5ca6468a4e24395", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "patch": "@@ -12,10 +12,13 @@ import { log, assert, isValidExecutable } from './util';\n import { PersistentState } from './persistent_state';\n import { fetchRelease, download } from './net';\n import { activateTaskProvider } from './tasks';\n+import { setContextValue } from './util';\n import { exec } from 'child_process';\n \n let ctx: Ctx | undefined;\n \n+const RUST_PROJECT_CONTEXT_NAME = \"inRustProject\";\n+\n export async function activate(context: vscode.ExtensionContext) {\n     // Register a \"dumb\" onEnter command for the case where server fails to\n     // start.\n@@ -54,6 +57,8 @@ export async function activate(context: vscode.ExtensionContext) {\n     // This a horribly, horribly wrong way to deal with this problem.\n     ctx = await Ctx.create(config, context, serverPath, workspaceFolder.uri.fsPath);\n \n+    setContextValue(RUST_PROJECT_CONTEXT_NAME, true);\n+\n     // Commands which invokes manually via command palette, shortcut, etc.\n \n     // Reloading is inspired by @DanTup maneuver: https://github.com/microsoft/vscode/issues/45774#issuecomment-373423895\n@@ -109,6 +114,7 @@ export async function activate(context: vscode.ExtensionContext) {\n }\n \n export async function deactivate() {\n+    setContextValue(RUST_PROJECT_CONTEXT_NAME, undefined);\n     await ctx?.client.stop();\n     ctx = undefined;\n }"}, {"sha": "352ef9162f3d2d54d2f6ae02670476ae40cf7aa4", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f3e04fbbabe2887542a9bb57fffcabc7cb50d406/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=f3e04fbbabe2887542a9bb57fffcabc7cb50d406", "patch": "@@ -94,3 +94,8 @@ export function isValidExecutable(path: string): boolean {\n \n     return res.status === 0;\n }\n+\n+/** Sets ['when'](https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts) clause contexts */\n+export function setContextValue(key: string, value: any): Thenable<void> {\n+    return vscode.commands.executeCommand('setContext', key, value);\n+}"}]}