{"sha": "28a3613a1da0f73da52b9becc7c0d973abdf122e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YTM2MTNhMWRhMGY3M2RhNTJiOWJlY2M3YzBkOTczYWJkZjEyMmU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-29T00:09:22Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-29T04:58:24Z"}, "message": "fix zsh completion for lint and debug flags\n\nthis correctly makes them accept 1 argument, and auto-completes the\ncomma-separated list of lint flags", "tree": {"sha": "9fc08c3671de8bc07dc9e382987f8f564f11c14c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fc08c3671de8bc07dc9e382987f8f564f11c14c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28a3613a1da0f73da52b9becc7c0d973abdf122e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28a3613a1da0f73da52b9becc7c0d973abdf122e", "html_url": "https://github.com/rust-lang/rust/commit/28a3613a1da0f73da52b9becc7c0d973abdf122e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28a3613a1da0f73da52b9becc7c0d973abdf122e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "html_url": "https://github.com/rust-lang/rust/commit/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0"}], "stats": {"total": 71, "additions": 36, "deletions": 35}, "files": [{"sha": "86dcbab93fde6afe107fde940c67507baa481208", "filename": "src/etc/zsh/_rust", "status": "modified", "additions": 36, "deletions": 35, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/28a3613a1da0f73da52b9becc7c0d973abdf122e/src%2Fetc%2Fzsh%2F_rust", "raw_url": "https://github.com/rust-lang/rust/raw/28a3613a1da0f73da52b9becc7c0d973abdf122e/src%2Fetc%2Fzsh%2F_rust", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fzsh%2F_rust?ref=28a3613a1da0f73da52b9becc7c0d973abdf122e", "patch": "@@ -29,36 +29,30 @@ _rustc_opts_switches=(\n     --target'[Target triple cpu-manufacturer-kernel\\[-os\\] to compile]'\n     --target-feature'[Target specific attributes (llc -mattr=help for detail)]'\n     --android-cross-path'[The path to the Android NDK]'\n-    {-W,--warn}'[Set lint warnings]'\n-    {-A,--allow}'[Set lint allowed]'\n-    {-D,--deny}'[Set lint denied]'\n-    {-F,--forbid}'[Set lint forbidden]'\n-    -Z'[Set internal debugging options]'\n     {-v,--version}'[Print version info and exit]'\n )\n-\n _rustc_opts_lint=(\n-    'path-statement:path statements with no effect'\n-    'deprecated-pattern:warn about deprecated uses of pattern bindings'\n-    'non-implicitly-copyable-typarams:passing non implicitly copyable types as copy type params'\n-    'missing-trait-doc:detects missing documentation for traits'\n-    'missing-struct-doc:detects missing documentation for structs'\n-    'ctypes:proper use of core::libc types in foreign modules'\n-    'implicit-copies:implicit copies of non implicitly copyable data'\n-    \"unused-mut:detect mut variables which don't need to be mutable\"\n-    'unused-imports:imports that are never used'\n-    'heap-memory:use of any (~ type or @ type) heap memory'\n-    'default-methods:allow default methods'\n-    'unused-variable:detect variables which are not used in any way'\n-    'dead-assignment:detect assignments that will never be read'\n-    'unrecognized-lint:unrecognized lint attribute'\n-    'type-limits:comparisons made useless by limits of the types involved'\n-    'unused-unsafe:unnecessary use of an `unsafe` block'\n-    'while-true:suggest using loop { } instead of while(true) { }'\n-    'non-camel-case-types:types, variants and traits should have camel case names'\n-    'managed-heap-memory:use of managed (@ type) heap memory'\n-    'unnecessary-allocation:detects unnecessary allocations that can be eliminated'\n-    'owned-heap-memory:use of owned (~ type) heap memory'\n+    'path-statement[path statements with no effect]'\n+    'deprecated-pattern[warn about deprecated uses of pattern bindings]'\n+    'non-implicitly-copyable-typarams[passing non implicitly copyable types as copy type params]'\n+    'missing-trait-doc[detects missing documentation for traits]'\n+    'missing-struct-doc[detects missing documentation for structs]'\n+    'ctypes[proper use of core::libc types in foreign modules]'\n+    'implicit-copies[implicit copies of non implicitly copyable data]'\n+    \"unused-mut[detect mut variables which don't need to be mutable]\"\n+    'unused-imports[imports that are never used]'\n+    'heap-memory[use of any (~ type or @ type) heap memory]'\n+    'default-methods[allow default methods]'\n+    'unused-variable[detect variables which are not used in any way]'\n+    'dead-assignment[detect assignments that will never be read]'\n+    'unrecognized-lint[unrecognized lint attribute]'\n+    'type-limits[comparisons made useless by limits of the types involved]'\n+    'unused-unsafe[unnecessary use of an `unsafe` block]'\n+    'while-true[suggest using loop { } instead of while(true) { }]'\n+    'non-camel-case-types[types, variants and traits should have camel case names]'\n+    'managed-heap-memory[use of managed (@ type) heap memory]'\n+    'unnecessary-allocation[detects unnecessary allocations that can be eliminated]'\n+    'owned-heap-memory[use of owned (~ type) heap memory]'\n )\n \n _rustc_opts_debug=(\n@@ -90,13 +84,20 @@ _rustc_opts_debug=(\n     'lint-llvm:Run the LLVM lint pass on the pre-optimization IR'\n )\n \n-_rustc() {\n-    case $words[2] in\n-        -[WADF]) _describe 'options' _rustc_opts_lint ;;\n-        -Z) _describe 'options' _rustc_opts_debug ;;\n-        -)  _arguments -s -w : \"$_rustc_opts_switches[@]\" ;;\n-        *) _files -g \"*.rs\" ;;\n-  esac\n+_rustc_opts_fun_lint(){\n+    _values -s , 'options' \\\n+        \"$_rustc_opts_lint[@]\"\n+}\n+\n+_rustc_opts_fun_debug(){\n+    _describe 'options' _rustc_opts_debug\n }\n \n-_rustc \"$@\"\n+_arguments -s :  \\\n+    '(-W --warn)'{-W,--warn}'[Set lint warnings]:lint options:_rustc_opts_fun_lint' \\\n+    '(-A --allow)'{-A,--allow}'[Set lint allowed]:lint options:_rustc_opts_fun_lint' \\\n+    '(-D --deny)'{-D,--deny}'[Set lint denied]:lint options:_rustc_opts_fun_lint' \\\n+    '(-F --forbid)'{-F,--forbid}'[Set lint forbidden]:lint options:_rustc_opts_fun_lint' \\\n+    '*-Z[Set internal debugging options]:debug options:_rustc_opts_fun_debug' \\\n+    \"$_rustc_opts_switches[@]\" \\\n+    '*::files:_files -g \"*.rs\"'"}]}