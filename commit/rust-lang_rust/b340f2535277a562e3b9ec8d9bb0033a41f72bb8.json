{"sha": "b340f2535277a562e3b9ec8d9bb0033a41f72bb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNDBmMjUzNTI3N2E1NjJlM2I5ZWM4ZDliYjAwMzNhNDFmNzJiYjg=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-02-23T00:04:24Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-02-23T00:51:18Z"}, "message": "Fix reading/writing 4 GiB or larger files on Windows 64-bit\n\n`ReadFile` and `WriteFile` take a DWORD (u32) for the length argument\nwhich was erroneously cast from a usize causing truncation. This meant\nmethods like `write_all` and `read_exact` would unexpectedly fail if\ngiven a buffer 4 GiB or larger.\n\nWe can instead just ask for `u32::MAX` bytes if the given buffer is too\nbig.", "tree": {"sha": "cbb36c1f61832577be68ae4d42d0be8e388b0801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbb36c1f61832577be68ae4d42d0be8e388b0801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b340f2535277a562e3b9ec8d9bb0033a41f72bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b340f2535277a562e3b9ec8d9bb0033a41f72bb8", "html_url": "https://github.com/rust-lang/rust/commit/b340f2535277a562e3b9ec8d9bb0033a41f72bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b340f2535277a562e3b9ec8d9bb0033a41f72bb8/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8fc4817dcbf50690aba1fc8bd4db336aff2dbc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8fc4817dcbf50690aba1fc8bd4db336aff2dbc6", "html_url": "https://github.com/rust-lang/rust/commit/c8fc4817dcbf50690aba1fc8bd4db336aff2dbc6"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "47676a927f65877ab02e386ace0fc98e974b46ea", "filename": "src/libstd/sys/windows/handle.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b340f2535277a562e3b9ec8d9bb0033a41f72bb8/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b340f2535277a562e3b9ec8d9bb0033a41f72bb8/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs?ref=b340f2535277a562e3b9ec8d9bb0033a41f72bb8", "patch": "@@ -8,13 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use cmp;\n use io::ErrorKind;\n use io;\n use mem;\n use ops::Deref;\n use ptr;\n use sys::c;\n use sys::cvt;\n+use u32;\n \n /// An owned container for `HANDLE` object, closing them on Drop.\n ///\n@@ -64,10 +66,12 @@ impl RawHandle {\n \n     pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {\n         let mut read = 0;\n+        // ReadFile takes a DWORD (u32) for the length so it only supports\n+        // reading u32::MAX bytes at a time.\n+        let len = cmp::min(buf.len(), u32::MAX as usize) as c::DWORD;\n         let res = cvt(unsafe {\n-            c::ReadFile(self.0, buf.as_ptr() as c::LPVOID,\n-                           buf.len() as c::DWORD, &mut read,\n-                           ptr::null_mut())\n+            c::ReadFile(self.0, buf.as_mut_ptr() as c::LPVOID,\n+                        len, &mut read, ptr::null_mut())\n         });\n \n         match res {\n@@ -85,10 +89,12 @@ impl RawHandle {\n \n     pub fn write(&self, buf: &[u8]) -> io::Result<usize> {\n         let mut amt = 0;\n+        // WriteFile takes a DWORD (u32) for the length so it only supports\n+        // writing u32::MAX bytes at a time.\n+        let len = cmp::min(buf.len(), u32::MAX as usize) as c::DWORD;\n         try!(cvt(unsafe {\n             c::WriteFile(self.0, buf.as_ptr() as c::LPVOID,\n-                            buf.len() as c::DWORD, &mut amt,\n-                            ptr::null_mut())\n+                         len, &mut amt, ptr::null_mut())\n         }));\n         Ok(amt as usize)\n     }"}]}