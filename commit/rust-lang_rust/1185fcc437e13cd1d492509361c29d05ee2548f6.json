{"sha": "1185fcc437e13cd1d492509361c29d05ee2548f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExODVmY2M0MzdlMTNjZDFkNDkyNTA5MzYxYzI5ZDA1ZWUyNTQ4ZjY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T01:14:25Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:24Z"}, "message": "librustc: De-`@mut` the `impl_method_cache`", "tree": {"sha": "bb8e3bbcf44c87ca3b7a9ca8593f0c743e63f5bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8e3bbcf44c87ca3b7a9ca8593f0c743e63f5bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1185fcc437e13cd1d492509361c29d05ee2548f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1185fcc437e13cd1d492509361c29d05ee2548f6", "html_url": "https://github.com/rust-lang/rust/commit/1185fcc437e13cd1d492509361c29d05ee2548f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1185fcc437e13cd1d492509361c29d05ee2548f6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "url": "https://api.github.com/repos/rust-lang/rust/commits/37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "html_url": "https://github.com/rust-lang/rust/commit/37e3f2fe63a9e0a41d5ebca7d276401599f3e636"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "ffbff9a87e357440338ad4c7a6d30a5d9e063318", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1185fcc437e13cd1d492509361c29d05ee2548f6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1185fcc437e13cd1d492509361c29d05ee2548f6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=1185fcc437e13cd1d492509361c29d05ee2548f6", "patch": "@@ -89,7 +89,7 @@ pub struct CrateContext {\n      // Cache of external const values\n      extern_const_values: RefCell<HashMap<ast::DefId, ValueRef>>,\n \n-     impl_method_cache: HashMap<(ast::DefId, ast::Name), ast::DefId>,\n+     impl_method_cache: RefCell<HashMap<(ast::DefId, ast::Name), ast::DefId>>,\n \n      module_data: HashMap<~str, ValueRef>,\n      lltypes: HashMap<ty::t, Type>,\n@@ -201,7 +201,7 @@ impl CrateContext {\n                   const_globals: RefCell::new(HashMap::new()),\n                   const_values: RefCell::new(HashMap::new()),\n                   extern_const_values: RefCell::new(HashMap::new()),\n-                  impl_method_cache: HashMap::new(),\n+                  impl_method_cache: RefCell::new(HashMap::new()),\n                   module_data: HashMap::new(),\n                   lltypes: HashMap::new(),\n                   llsizingtypes: HashMap::new(),"}, {"sha": "a1639f68824369d6491f77bdf426d05086877237", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1185fcc437e13cd1d492509361c29d05ee2548f6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1185fcc437e13cd1d492509361c29d05ee2548f6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=1185fcc437e13cd1d492509361c29d05ee2548f6", "patch": "@@ -296,18 +296,22 @@ pub fn trans_static_method_callee(bcx: @Block,\n pub fn method_with_name(ccx: &mut CrateContext,\n                         impl_id: ast::DefId,\n                         name: ast::Name) -> ast::DefId {\n-    let meth_id_opt = ccx.impl_method_cache.find_copy(&(impl_id, name));\n-    match meth_id_opt {\n-        Some(m) => return m,\n-        None => {}\n+    {\n+        let impl_method_cache = ccx.impl_method_cache.borrow();\n+        let meth_id_opt = impl_method_cache.get().find_copy(&(impl_id, name));\n+        match meth_id_opt {\n+            Some(m) => return m,\n+            None => {}\n+        }\n     }\n \n     let imp = ccx.tcx.impls.find(&impl_id)\n         .expect(\"could not find impl while translating\");\n     let meth = imp.methods.iter().find(|m| m.ident.name == name)\n         .expect(\"could not find method while translating\");\n \n-    ccx.impl_method_cache.insert((impl_id, name), meth.def_id);\n+    let mut impl_method_cache = ccx.impl_method_cache.borrow_mut();\n+    impl_method_cache.get().insert((impl_id, name), meth.def_id);\n     meth.def_id\n }\n "}]}