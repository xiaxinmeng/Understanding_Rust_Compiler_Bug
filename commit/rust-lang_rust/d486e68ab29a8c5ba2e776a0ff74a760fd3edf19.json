{"sha": "d486e68ab29a8c5ba2e776a0ff74a760fd3edf19", "node_id": "C_kwDOAAsO6NoAKGQ0ODZlNjhhYjI5YThjNWJhMmU3NzZhMGZmNzRhNzYwZmQzZWRmMTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T23:38:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T23:38:44Z"}, "message": "Rollup merge of #92082 - jyn514:remove-from-iterator, r=jyn514\n\nrustdoc: Write doc-comments directly instead of using FromIterator\n\nThe FromIterator impl made the code much harder to understand. The types\ndon't make sense until you realize there's a custom FromIterator impl.\n\nThis is the first commit from https://github.com/rust-lang/rust/pull/91305; since ``@camelid`` wrote it originally I don't feel bad unilaterally approving it.\n\nr? ``@ghost``\n``@bors`` r+\n\nNote that this will conflict with https://github.com/rust-lang/rust/pull/92078.", "tree": {"sha": "50f76b229371100d6341f512e266fe8ffcd960be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f76b229371100d6341f512e266fe8ffcd960be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvnEECRBK7hj4Ov3rIwAAXdcIAI/RllTfv6tD8pRDqugnGSU3\nrObRewmAHDru9VyQ+NDiYDWEM5enwfDUxkiJxgvCiAzsoqVVCxJOz0bzkyMa5Q47\nF/bqfOwET2RMS8YoqrCp+mxznICnXxpD0jTvVN4YoQI9/W066/W8tDJykeQ87Gpq\nN6K+SUYo3N5hdLpgZZhTbn4rCumLil7vNcrUdi2YT+Bp+EIO+EhzuM7l1xlz9LJw\nQhnIKH46TC98k0v3TsitOl4mNbip26SaNqi3gAgkqWfCA6Dj6/cGn8Y6gqclu8/B\n7PqxzvkY2cbwDjdvL9jswmWpia9Y08HvQsgZUYprSrDM6sQmR+vWUa3dParH6LQ=\n=04jN\n-----END PGP SIGNATURE-----\n", "payload": "tree 50f76b229371100d6341f512e266fe8ffcd960be\nparent 74c3ce9207cfb1fd14642edf1e010a86156e6145\nparent 7f383c3aaf38c94fb57b0a926b057f563b8faa47\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639870724 +0100\ncommitter GitHub <noreply@github.com> 1639870724 +0100\n\nRollup merge of #92082 - jyn514:remove-from-iterator, r=jyn514\n\nrustdoc: Write doc-comments directly instead of using FromIterator\n\nThe FromIterator impl made the code much harder to understand. The types\ndon't make sense until you realize there's a custom FromIterator impl.\n\nThis is the first commit from https://github.com/rust-lang/rust/pull/91305; since ``@camelid`` wrote it originally I don't feel bad unilaterally approving it.\n\nr? ``@ghost``\n``@bors`` r+\n\nNote that this will conflict with https://github.com/rust-lang/rust/pull/92078.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19", "html_url": "https://github.com/rust-lang/rust/commit/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74c3ce9207cfb1fd14642edf1e010a86156e6145", "url": "https://api.github.com/repos/rust-lang/rust/commits/74c3ce9207cfb1fd14642edf1e010a86156e6145", "html_url": "https://github.com/rust-lang/rust/commit/74c3ce9207cfb1fd14642edf1e010a86156e6145"}, {"sha": "7f383c3aaf38c94fb57b0a926b057f563b8faa47", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f383c3aaf38c94fb57b0a926b057f563b8faa47", "html_url": "https://github.com/rust-lang/rust/commit/7f383c3aaf38c94fb57b0a926b057f563b8faa47"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "2bd90f67cf4af64f09cf1e5db6d0a4e7eb9fd246", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=d486e68ab29a8c5ba2e776a0ff74a760fd3edf19", "patch": "@@ -1,7 +1,6 @@\n use std::cell::RefCell;\n use std::default::Default;\n use std::hash::{Hash, Hasher};\n-use std::iter::FromIterator;\n use std::lazy::SyncOnceCell as OnceCell;\n use std::path::PathBuf;\n use std::rc::Rc;\n@@ -958,16 +957,14 @@ fn add_doc_fragment(out: &mut String, frag: &DocFragment) {\n     }\n }\n \n-impl<'a> FromIterator<&'a DocFragment> for String {\n-    fn from_iter<T>(iter: T) -> Self\n-    where\n-        T: IntoIterator<Item = &'a DocFragment>,\n-    {\n-        iter.into_iter().fold(String::new(), |mut acc, frag| {\n-            add_doc_fragment(&mut acc, frag);\n-            acc\n-        })\n+/// Collapse a collection of [`DocFragment`]s into one string,\n+/// handling indentation and newlines as needed.\n+crate fn collapse_doc_fragments(doc_strings: &[DocFragment]) -> String {\n+    let mut acc = String::new();\n+    for frag in doc_strings {\n+        add_doc_fragment(&mut acc, frag);\n     }\n+    acc\n }\n \n /// A link that has not yet been rendered.\n@@ -1113,7 +1110,11 @@ impl Attributes {\n     /// Finds all `doc` attributes as NameValues and returns their corresponding values, joined\n     /// with newlines.\n     crate fn collapsed_doc_value(&self) -> Option<String> {\n-        if self.doc_strings.is_empty() { None } else { Some(self.doc_strings.iter().collect()) }\n+        if self.doc_strings.is_empty() {\n+            None\n+        } else {\n+            Some(collapse_doc_fragments(&self.doc_strings))\n+        }\n     }\n \n     crate fn get_doc_aliases(&self) -> Box<[Symbol]> {"}, {"sha": "3d3d2e50321d9df44d269d211d6ba6fbe9598a4a", "filename": "src/librustdoc/passes/unindent_comments/tests.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19/src%2Flibrustdoc%2Fpasses%2Funindent_comments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d486e68ab29a8c5ba2e776a0ff74a760fd3edf19/src%2Flibrustdoc%2Fpasses%2Funindent_comments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Funindent_comments%2Ftests.rs?ref=d486e68ab29a8c5ba2e776a0ff74a760fd3edf19", "patch": "@@ -1,4 +1,7 @@\n use super::*;\n+\n+use crate::clean::collapse_doc_fragments;\n+\n use rustc_span::create_default_session_globals_then;\n use rustc_span::source_map::DUMMY_SP;\n use rustc_span::symbol::Symbol;\n@@ -19,7 +22,7 @@ fn run_test(input: &str, expected: &str) {\n     create_default_session_globals_then(|| {\n         let mut s = create_doc_fragment(input);\n         unindent_fragments(&mut s);\n-        assert_eq!(&s.iter().collect::<String>(), expected);\n+        assert_eq!(collapse_doc_fragments(&s), expected);\n     });\n }\n "}]}