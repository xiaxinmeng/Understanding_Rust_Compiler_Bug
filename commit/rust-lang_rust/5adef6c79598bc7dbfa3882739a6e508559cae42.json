{"sha": "5adef6c79598bc7dbfa3882739a6e508559cae42", "node_id": "C_kwDOAAsO6NoAKDVhZGVmNmM3OTU5OGJjN2RiZmEzODgyNzM5YTZlNTA4NTU5Y2FlNDI", "commit": {"author": {"name": "Lucas Dumont", "email": "contact@lucasdumont.com", "date": "2022-06-07T12:45:25Z"}, "committer": {"name": "Lucas Dumont", "email": "contact@lucasdumont.com", "date": "2022-06-07T13:06:18Z"}, "message": "Add std::alloc::set_alloc_error_hook example", "tree": {"sha": "c34085391604d203bfcb8acd12e3a8058c2d0133", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c34085391604d203bfcb8acd12e3a8058c2d0133"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5adef6c79598bc7dbfa3882739a6e508559cae42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5adef6c79598bc7dbfa3882739a6e508559cae42", "html_url": "https://github.com/rust-lang/rust/commit/5adef6c79598bc7dbfa3882739a6e508559cae42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5adef6c79598bc7dbfa3882739a6e508559cae42/comments", "author": {"login": "LucasDumont", "id": 33830034, "node_id": "MDQ6VXNlcjMzODMwMDM0", "avatar_url": "https://avatars.githubusercontent.com/u/33830034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasDumont", "html_url": "https://github.com/LucasDumont", "followers_url": "https://api.github.com/users/LucasDumont/followers", "following_url": "https://api.github.com/users/LucasDumont/following{/other_user}", "gists_url": "https://api.github.com/users/LucasDumont/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasDumont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasDumont/subscriptions", "organizations_url": "https://api.github.com/users/LucasDumont/orgs", "repos_url": "https://api.github.com/users/LucasDumont/repos", "events_url": "https://api.github.com/users/LucasDumont/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasDumont/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LucasDumont", "id": 33830034, "node_id": "MDQ6VXNlcjMzODMwMDM0", "avatar_url": "https://avatars.githubusercontent.com/u/33830034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasDumont", "html_url": "https://github.com/LucasDumont", "followers_url": "https://api.github.com/users/LucasDumont/followers", "following_url": "https://api.github.com/users/LucasDumont/following{/other_user}", "gists_url": "https://api.github.com/users/LucasDumont/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasDumont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasDumont/subscriptions", "organizations_url": "https://api.github.com/users/LucasDumont/orgs", "repos_url": "https://api.github.com/users/LucasDumont/repos", "events_url": "https://api.github.com/users/LucasDumont/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasDumont/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91cacb3faf987805675e39aca41859ec1fcabef3", "url": "https://api.github.com/repos/rust-lang/rust/commits/91cacb3faf987805675e39aca41859ec1fcabef3", "html_url": "https://github.com/rust-lang/rust/commit/91cacb3faf987805675e39aca41859ec1fcabef3"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "d3879273f5b032fda900eda4988c54cb0ac96843", "filename": "library/std/src/alloc.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5adef6c79598bc7dbfa3882739a6e508559cae42/library%2Fstd%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5adef6c79598bc7dbfa3882739a6e508559cae42/library%2Fstd%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Falloc.rs?ref=5adef6c79598bc7dbfa3882739a6e508559cae42", "patch": "@@ -296,6 +296,20 @@ static HOOK: AtomicPtr<()> = AtomicPtr::new(ptr::null_mut());\n /// about the allocation that failed.\n ///\n /// The allocation error hook is a global resource.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// #![feature(alloc_error_hook)]\n+///\n+/// use std::alloc::{Layout, set_alloc_error_hook};\n+///\n+/// fn custom_alloc_error_hook(layout: Layout) {\n+///    panic!(\"memory allocation of {} bytes failed\", layout.size());\n+/// }\n+///\n+/// set_alloc_error_hook(custom_alloc_error_hook);\n+/// ```\n #[unstable(feature = \"alloc_error_hook\", issue = \"51245\")]\n pub fn set_alloc_error_hook(hook: fn(Layout)) {\n     HOOK.store(hook as *mut (), Ordering::SeqCst);"}]}