{"sha": "cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMDg3ZTVjNWU2NWZhNjFjMDU2MmNlYjJkMjQ4OGY4ZjU2NjA0NTQ=", "commit": {"author": {"name": "Suyash458", "email": "suyash.behera458@gmail.com", "date": "2020-11-28T14:11:27Z"}, "committer": {"name": "suyash458", "email": "suyash.behera458@gmail.com", "date": "2020-11-29T05:21:04Z"}, "message": "add rustc-semver to dependencies\nswitch Version/VersionReq usages to RustcVersion", "tree": {"sha": "02a54e9811b2e99fedd69ff06d9e6679f37a3be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02a54e9811b2e99fedd69ff06d9e6679f37a3be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "html_url": "https://github.com/rust-lang/rust/commit/cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/comments", "author": {"login": "Suyash458", "id": 7749510, "node_id": "MDQ6VXNlcjc3NDk1MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7749510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Suyash458", "html_url": "https://github.com/Suyash458", "followers_url": "https://api.github.com/users/Suyash458/followers", "following_url": "https://api.github.com/users/Suyash458/following{/other_user}", "gists_url": "https://api.github.com/users/Suyash458/gists{/gist_id}", "starred_url": "https://api.github.com/users/Suyash458/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Suyash458/subscriptions", "organizations_url": "https://api.github.com/users/Suyash458/orgs", "repos_url": "https://api.github.com/users/Suyash458/repos", "events_url": "https://api.github.com/users/Suyash458/events{/privacy}", "received_events_url": "https://api.github.com/users/Suyash458/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Suyash458", "id": 7749510, "node_id": "MDQ6VXNlcjc3NDk1MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7749510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Suyash458", "html_url": "https://github.com/Suyash458", "followers_url": "https://api.github.com/users/Suyash458/followers", "following_url": "https://api.github.com/users/Suyash458/following{/other_user}", "gists_url": "https://api.github.com/users/Suyash458/gists{/gist_id}", "starred_url": "https://api.github.com/users/Suyash458/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Suyash458/subscriptions", "organizations_url": "https://api.github.com/users/Suyash458/orgs", "repos_url": "https://api.github.com/users/Suyash458/repos", "events_url": "https://api.github.com/users/Suyash458/events{/privacy}", "received_events_url": "https://api.github.com/users/Suyash458/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68cf94f6a66e47234e3adefc6dfbe806cd6ad164", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cf94f6a66e47234e3adefc6dfbe806cd6ad164", "html_url": "https://github.com/rust-lang/rust/commit/68cf94f6a66e47234e3adefc6dfbe806cd6ad164"}], "stats": {"total": 69, "additions": 23, "deletions": 46}, "files": [{"sha": "45fd87b169fe47a16b5158b1f02eb79e32d78ba1", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "patch": "@@ -28,6 +28,7 @@ smallvec = { version = \"1\", features = [\"union\"] }\n toml = \"0.5.3\"\n unicode-normalization = \"0.1\"\n semver = \"0.11\"\n+rustc-semver=\"1.0.0\"\n # NOTE: cargo requires serde feat in its url dep\n # see <https://github.com/rust-lang/rust/pull/63587#issuecomment-522343864>\n url = { version =  \"2.1.0\", features = [\"serde\"] }"}, {"sha": "91849e748878f645b6453e1571cf8357f0fab61f", "filename": "clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "patch": "@@ -4,17 +4,11 @@ use rustc_ast::ast::{Attribute, Item, ItemKind, StructField, Variant, VariantDat\n use rustc_attr as attr;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{sym, Span};\n-use semver::{Version, VersionReq};\n \n-const MANUAL_NON_EXHAUSTIVE_MSRV: Version = Version {\n-    major: 1,\n-    minor: 40,\n-    patch: 0,\n-    pre: Vec::new(),\n-    build: Vec::new(),\n-};\n+const MANUAL_NON_EXHAUSTIVE_MSRV: RustcVersion = RustcVersion::new(1, 40, 0);\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for manual implementations of the non-exhaustive pattern.\n@@ -66,12 +60,12 @@ declare_clippy_lint! {\n \n #[derive(Clone)]\n pub struct ManualNonExhaustive {\n-    msrv: Option<VersionReq>,\n+    msrv: Option<RustcVersion>,\n }\n \n impl ManualNonExhaustive {\n     #[must_use]\n-    pub fn new(msrv: Option<VersionReq>) -> Self {\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n         Self { msrv }\n     }\n }"}, {"sha": "f593abdb1047d427ec2524a522582dff956b845a", "filename": "clippy_lints/src/manual_strip.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmanual_strip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmanual_strip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_strip.rs?ref=cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "patch": "@@ -13,18 +13,12 @@ use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::hir::map::Map;\n use rustc_middle::ty;\n+use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Spanned;\n use rustc_span::Span;\n-use semver::{Version, VersionReq};\n \n-const MANUAL_STRIP_MSRV: Version = Version {\n-    major: 1,\n-    minor: 45,\n-    patch: 0,\n-    pre: Vec::new(),\n-    build: Vec::new(),\n-};\n+const MANUAL_STRIP_MSRV: RustcVersion = RustcVersion::new(1, 45, 0);\n \n declare_clippy_lint! {\n     /// **What it does:**\n@@ -61,12 +55,12 @@ declare_clippy_lint! {\n }\n \n pub struct ManualStrip {\n-    msrv: Option<VersionReq>,\n+    msrv: Option<RustcVersion>,\n }\n \n impl ManualStrip {\n     #[must_use]\n-    pub fn new(msrv: Option<VersionReq>) -> Self {\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n         Self { msrv }\n     }\n }"}, {"sha": "86e3e2f637e464d04f91f27e6ba5ab4e4a34ad75", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "patch": "@@ -20,10 +20,10 @@ use rustc_hir::{\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::{self, Ty, TyS};\n+use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{Span, Spanned};\n use rustc_span::{sym, Symbol};\n-use semver::{Version, VersionReq};\n use std::cmp::Ordering;\n use std::collections::hash_map::Entry;\n use std::collections::Bound;\n@@ -535,13 +535,13 @@ declare_clippy_lint! {\n \n #[derive(Default)]\n pub struct Matches {\n-    msrv: Option<VersionReq>,\n+    msrv: Option<RustcVersion>,\n     infallible_destructuring_match_linted: bool,\n }\n \n impl Matches {\n     #[must_use]\n-    pub fn new(msrv: Option<VersionReq>) -> Self {\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n         Self {\n             msrv,\n             ..Matches::default()\n@@ -568,13 +568,7 @@ impl_lint_pass!(Matches => [\n     MATCH_SAME_ARMS,\n ]);\n \n-const MATCH_LIKE_MATCHES_MACRO_MSRV: Version = Version {\n-    major: 1,\n-    minor: 42,\n-    patch: 0,\n-    pre: Vec::new(),\n-    build: Vec::new(),\n-};\n+const MATCH_LIKE_MATCHES_MACRO_MSRV: RustcVersion = RustcVersion::new(1, 42, 0);\n \n impl<'tcx> LateLintPass<'tcx> for Matches {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {"}, {"sha": "8002c27a5e91b7e27b92818a5b51f47275832761", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "patch": "@@ -18,6 +18,7 @@ use rustc_hir::{TraitItem, TraitItemKind};\n use rustc_lint::{LateContext, LateLintPass, Lint, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::{self, TraitRef, Ty, TyS};\n+use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, SymbolStr};\n@@ -33,7 +34,6 @@ use crate::utils::{\n     snippet_with_macro_callsite, span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then, sugg,\n     walk_ptrs_ty_depth, SpanlessEq,\n };\n-use semver::{Version, VersionReq};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `.unwrap()` calls on `Option`s and on `Result`s.\n@@ -1405,12 +1405,12 @@ declare_clippy_lint! {\n }\n \n pub struct Methods {\n-    msrv: Option<VersionReq>,\n+    msrv: Option<RustcVersion>,\n }\n \n impl Methods {\n     #[must_use]\n-    pub fn new(msrv: Option<VersionReq>) -> Self {\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n         Self { msrv }\n     }\n }\n@@ -3470,13 +3470,7 @@ fn lint_suspicious_map(cx: &LateContext<'_>, expr: &hir::Expr<'_>) {\n     );\n }\n \n-const OPTION_AS_REF_DEREF_MSRV: Version = Version {\n-    major: 1,\n-    minor: 40,\n-    patch: 0,\n-    pre: Vec::new(),\n-    build: Vec::new(),\n-};\n+const OPTION_AS_REF_DEREF_MSRV: RustcVersion = RustcVersion::new(1, 40, 0);\n \n /// lint use of `_.as_ref().map(Deref::deref)` for `Option`s\n fn lint_option_as_ref_deref<'tcx>(\n@@ -3485,7 +3479,7 @@ fn lint_option_as_ref_deref<'tcx>(\n     as_ref_args: &[hir::Expr<'_>],\n     map_args: &[hir::Expr<'_>],\n     is_mut: bool,\n-    msrv: Option<&VersionReq>,\n+    msrv: Option<&RustcVersion>,\n ) {\n     if !meets_msrv(msrv, &OPTION_AS_REF_DEREF_MSRV) {\n         return;"}, {"sha": "d68f0698153304cab5ff579d3750922be94c1e1b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd087e5c5e65fa61c0562ceb2d2488f8f5660454/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=cd087e5c5e65fa61c0562ceb2d2488f8f5660454", "patch": "@@ -51,6 +51,7 @@ use rustc_lint::{LateContext, Level, Lint, LintContext};\n use rustc_middle::hir::map::Map;\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n use rustc_middle::ty::{self, layout::IntegerExt, Ty, TyCtxt, TypeFoldable};\n+use rustc_semver::RustcVersion;\n use rustc_session::Session;\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_span::source_map::original_sp;\n@@ -59,13 +60,12 @@ use rustc_span::symbol::{self, kw, Symbol};\n use rustc_span::{BytePos, Pos, Span, DUMMY_SP};\n use rustc_target::abi::Integer;\n use rustc_trait_selection::traits::query::normalize::AtExt;\n-use semver::{Version, VersionReq};\n use smallvec::SmallVec;\n \n use crate::consts::{constant, Constant};\n \n-pub fn parse_msrv(msrv: &str, sess: Option<&Session>, span: Option<Span>) -> Option<VersionReq> {\n-    if let Ok(version) = VersionReq::parse(msrv) {\n+pub fn parse_msrv(msrv: &str, sess: Option<&Session>, span: Option<Span>) -> Option<RustcVersion> {\n+    if let Ok(version) = RustcVersion::parse(msrv) {\n         return Some(version);\n     } else if let Some(sess) = sess {\n         if let Some(span) = span {\n@@ -75,8 +75,8 @@ pub fn parse_msrv(msrv: &str, sess: Option<&Session>, span: Option<Span>) -> Opt\n     None\n }\n \n-pub fn meets_msrv(msrv: Option<&VersionReq>, lint_msrv: &Version) -> bool {\n-    msrv.map_or(true, |msrv| !msrv.matches(lint_msrv))\n+pub fn meets_msrv(msrv: Option<&RustcVersion>, lint_msrv: &RustcVersion) -> bool {\n+    msrv.map_or(true, |msrv| msrv > lint_msrv)\n }\n \n macro_rules! extract_msrv_attr {"}]}