{"sha": "65767e56537e20903b54ecde7c371cbfb1b201b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NzY3ZTU2NTM3ZTIwOTAzYjU0ZWNkZTdjMzcxY2JmYjFiMjAxYjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T17:02:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T17:02:49Z"}, "message": "Auto merge of #81122 - tmiasko:no-drop, r=davidtwco\n\nVisit only terminators when removing unneeded drops\n\nNo functional changes intended", "tree": {"sha": "98d0e1c27d4405c019f451d4bc2d82b3fb4ac3c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98d0e1c27d4405c019f451d4bc2d82b3fb4ac3c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65767e56537e20903b54ecde7c371cbfb1b201b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65767e56537e20903b54ecde7c371cbfb1b201b0", "html_url": "https://github.com/rust-lang/rust/commit/65767e56537e20903b54ecde7c371cbfb1b201b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65767e56537e20903b54ecde7c371cbfb1b201b0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a243ad280a4ac57c1b8427e30e31c5b505cf10de", "url": "https://api.github.com/repos/rust-lang/rust/commits/a243ad280a4ac57c1b8427e30e31c5b505cf10de", "html_url": "https://github.com/rust-lang/rust/commit/a243ad280a4ac57c1b8427e30e31c5b505cf10de"}, {"sha": "d0a756719f86a8a304dad69803da2244473a9495", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a756719f86a8a304dad69803da2244473a9495", "html_url": "https://github.com/rust-lang/rust/commit/d0a756719f86a8a304dad69803da2244473a9495"}], "stats": {"total": 61, "additions": 20, "deletions": 41}, "files": [{"sha": "5144d48750de70d7febebd7a0c6dcc013c157781", "filename": "compiler/rustc_mir/src/transform/remove_unneeded_drops.rs", "status": "modified", "additions": 20, "deletions": 41, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/65767e56537e20903b54ecde7c371cbfb1b201b0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65767e56537e20903b54ecde7c371cbfb1b201b0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs?ref=65767e56537e20903b54ecde7c371cbfb1b201b0", "patch": "@@ -1,9 +1,8 @@\n //! This pass replaces a drop of a type that does not need dropping, with a goto\n \n use crate::transform::MirPass;\n-use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::*;\n-use rustc_middle::ty::{ParamEnv, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n \n use super::simplify::simplify_cfg;\n \n@@ -12,24 +11,26 @@ pub struct RemoveUnneededDrops;\n impl<'tcx> MirPass<'tcx> for RemoveUnneededDrops {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         trace!(\"Running RemoveUnneededDrops on {:?}\", body.source);\n-        let mut opt_finder = RemoveUnneededDropsOptimizationFinder {\n-            tcx,\n-            body,\n-            param_env: tcx.param_env(body.source.def_id()),\n-            optimizations: vec![],\n-        };\n-        opt_finder.visit_body(body);\n-        let should_simplify = !opt_finder.optimizations.is_empty();\n-        for (loc, target) in opt_finder.optimizations {\n-            if !tcx\n-                .consider_optimizing(|| format!(\"RemoveUnneededDrops {:?} \", body.source.def_id()))\n-            {\n-                break;\n-            }\n \n-            let terminator = body.basic_blocks_mut()[loc.block].terminator_mut();\n-            debug!(\"SUCCESS: replacing `drop` with goto({:?})\", target);\n-            terminator.kind = TerminatorKind::Goto { target };\n+        let did = body.source.def_id();\n+        let param_env = tcx.param_env(did);\n+        let mut should_simplify = false;\n+\n+        let (basic_blocks, local_decls) = body.basic_blocks_and_local_decls_mut();\n+        for block in basic_blocks {\n+            let terminator = block.terminator_mut();\n+            if let TerminatorKind::Drop { place, target, .. } = terminator.kind {\n+                let ty = place.ty(local_decls, tcx);\n+                if ty.ty.needs_drop(tcx, param_env) {\n+                    continue;\n+                }\n+                if !tcx.consider_optimizing(|| format!(\"RemoveUnneededDrops {:?} \", did)) {\n+                    continue;\n+                }\n+                debug!(\"SUCCESS: replacing `drop` with goto({:?})\", target);\n+                terminator.kind = TerminatorKind::Goto { target };\n+                should_simplify = true;\n+            }\n         }\n \n         // if we applied optimizations, we potentially have some cfg to cleanup to\n@@ -39,25 +40,3 @@ impl<'tcx> MirPass<'tcx> for RemoveUnneededDrops {\n         }\n     }\n }\n-\n-impl<'a, 'tcx> Visitor<'tcx> for RemoveUnneededDropsOptimizationFinder<'a, 'tcx> {\n-    fn visit_terminator(&mut self, terminator: &Terminator<'tcx>, location: Location) {\n-        match terminator.kind {\n-            TerminatorKind::Drop { place, target, .. } => {\n-                let ty = place.ty(self.body, self.tcx);\n-                let needs_drop = ty.ty.needs_drop(self.tcx, self.param_env);\n-                if !needs_drop {\n-                    self.optimizations.push((location, target));\n-                }\n-            }\n-            _ => {}\n-        }\n-        self.super_terminator(terminator, location);\n-    }\n-}\n-pub struct RemoveUnneededDropsOptimizationFinder<'a, 'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-    body: &'a Body<'tcx>,\n-    optimizations: Vec<(Location, BasicBlock)>,\n-    param_env: ParamEnv<'tcx>,\n-}"}]}