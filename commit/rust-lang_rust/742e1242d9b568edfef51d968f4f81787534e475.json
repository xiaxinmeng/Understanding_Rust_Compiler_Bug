{"sha": "742e1242d9b568edfef51d968f4f81787534e475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MmUxMjQyZDliNTY4ZWRmZWY1MWQ5NjhmNGY4MTc4NzUzNGU0NzU=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-07-02T21:07:42Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-07-25T02:17:58Z"}, "message": "Add static_recursion feature gate.", "tree": {"sha": "9791055aa9161edbe9b9384d74d3bfcd0ef0f211", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9791055aa9161edbe9b9384d74d3bfcd0ef0f211"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/742e1242d9b568edfef51d968f4f81787534e475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/742e1242d9b568edfef51d968f4f81787534e475", "html_url": "https://github.com/rust-lang/rust/commit/742e1242d9b568edfef51d968f4f81787534e475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/742e1242d9b568edfef51d968f4f81787534e475/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ebf95257bfc9093cb25dba209ded303ec167e5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebf95257bfc9093cb25dba209ded303ec167e5f", "html_url": "https://github.com/rust-lang/rust/commit/8ebf95257bfc9093cb25dba209ded303ec167e5f"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "55a9a91930045fc8109b7cd8a164188f47411945", "filename": "src/librustc/middle/check_static_recursion.rs", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/742e1242d9b568edfef51d968f4f81787534e475/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742e1242d9b568edfef51d968f4f81787534e475/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs?ref=742e1242d9b568edfef51d968f4f81787534e475", "patch": "@@ -8,16 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// This compiler pass detects static items that refer to themselves\n+// This compiler pass detects constants that refer to themselves\n // recursively.\n \n use ast_map;\n use session::Session;\n-use middle::def::{DefConst, DefAssociatedConst, DefVariant, DefMap};\n+use middle::def::{DefStatic, DefConst, DefAssociatedConst, DefVariant, DefMap};\n use util::nodemap::NodeMap;\n \n use syntax::{ast, ast_util};\n use syntax::codemap::Span;\n+use syntax::feature_gate::emit_feature_err;\n use syntax::visit::Visitor;\n use syntax::visit;\n \n@@ -37,6 +38,7 @@ struct CheckCrateVisitor<'a, 'ast: 'a> {\n impl<'a, 'ast: 'a> Visitor<'ast> for CheckCrateVisitor<'a, 'ast> {\n     fn visit_item(&mut self, it: &'ast ast::Item) {\n         match it.node {\n+            ast::ItemStatic(..) |\n             ast::ItemConst(..) => {\n                 let mut recursion_visitor =\n                     CheckItemRecursionVisitor::new(self, &it.span);\n@@ -124,8 +126,27 @@ impl<'a, 'ast: 'a> CheckItemRecursionVisitor<'a, 'ast> {\n     }\n     fn with_item_id_pushed<F>(&mut self, id: ast::NodeId, f: F)\n           where F: Fn(&mut Self) {\n-        if self.idstack.iter().any(|x| *x == id) {\n-            span_err!(self.sess, *self.root_span, E0265, \"recursive constant\");\n+        if self.idstack.iter().any(|&x| x == id) {\n+            let any_static = self.idstack.iter().any(|&x| {\n+                if let ast_map::NodeItem(item) = self.ast_map.get(x) {\n+                    if let ast::ItemStatic(..) = item.node {\n+                        true\n+                    } else {\n+                        false\n+                    }\n+                } else {\n+                    false\n+                }\n+            });\n+            if any_static {\n+                if !self.sess.features.borrow().static_recursion {\n+                    emit_feature_err(&self.sess.parse_sess.span_diagnostic,\n+                                     \"static_recursion\",\n+                                     *self.root_span, \"recursive static\");\n+                }\n+            } else {\n+                span_err!(self.sess, *self.root_span, E0265, \"recursive constant\");\n+            }\n             return;\n         }\n         self.idstack.push(id);\n@@ -216,6 +237,7 @@ impl<'a, 'ast: 'a> Visitor<'ast> for CheckItemRecursionVisitor<'a, 'ast> {\n         match e.node {\n             ast::ExprPath(..) => {\n                 match self.def_map.borrow().get(&e.id).map(|d| d.base_def) {\n+                    Some(DefStatic(def_id, _)) |\n                     Some(DefAssociatedConst(def_id, _)) |\n                     Some(DefConst(def_id))\n                            if ast_util::is_local(def_id) => {"}, {"sha": "ee895fb1a96ebbc91006e7cda485d7e090cb28c8", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/742e1242d9b568edfef51d968f4f81787534e475/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742e1242d9b568edfef51d968f4f81787534e475/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=742e1242d9b568edfef51d968f4f81787534e475", "patch": "@@ -160,6 +160,9 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n \n     // Allows using #[prelude_import] on glob `use` items.\n     (\"prelude_import\", \"1.2.0\", Active),\n+\n+    // Allows the definition recursive static items.\n+    (\"static_recursion\", \"1.3.0\", Active),\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -338,6 +341,7 @@ pub struct Features {\n     /// #![feature] attrs for non-language (library) features\n     pub declared_lib_features: Vec<(InternedString, Span)>,\n     pub const_fn: bool,\n+    pub static_recursion: bool\n }\n \n impl Features {\n@@ -362,6 +366,7 @@ impl Features {\n             declared_stable_lang_features: Vec::new(),\n             declared_lib_features: Vec::new(),\n             const_fn: false,\n+            static_recursion: false\n         }\n     }\n }\n@@ -859,6 +864,7 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &SpanHandler,\n         declared_stable_lang_features: accepted_features,\n         declared_lib_features: unknown_features,\n         const_fn: cx.has_feature(\"const_fn\"),\n+        static_recursion: cx.has_feature(\"static_recursion\")\n     }\n }\n "}, {"sha": "29b5689fa93fdcf12d51dd553fc4e7ab7fcedc6e", "filename": "src/test/compile-fail/static-recursion-gate.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/742e1242d9b568edfef51d968f4f81787534e475/src%2Ftest%2Fcompile-fail%2Fstatic-recursion-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742e1242d9b568edfef51d968f4f81787534e475/src%2Ftest%2Fcompile-fail%2Fstatic-recursion-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-recursion-gate.rs?ref=742e1242d9b568edfef51d968f4f81787534e475", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static mut S: *const u8 = unsafe { &S as *const *const u8 as *const u8 };\n+//~^ ERROR recursive static\n+\n+pub fn main() {\n+    unsafe { assert_eq!(S, *(S as *const *const u8)); }\n+}"}, {"sha": "171aef522d41adbb821c6fec9a34deb1365ee049", "filename": "src/test/run-pass/static-recursive.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/742e1242d9b568edfef51d968f4f81787534e475/src%2Ftest%2Frun-pass%2Fstatic-recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742e1242d9b568edfef51d968f4f81787534e475/src%2Ftest%2Frun-pass%2Fstatic-recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-recursive.rs?ref=742e1242d9b568edfef51d968f4f81787534e475", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(static_recursion)]\n+\n static mut S: *const u8 = unsafe { &S as *const *const u8 as *const u8 };\n \n pub fn main() {"}]}