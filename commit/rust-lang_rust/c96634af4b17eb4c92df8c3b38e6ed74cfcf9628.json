{"sha": "c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NjYzNGFmNGIxN2ViNGM5MmRmOGMzYjM4ZTZlZDc0Y2ZjZjk2Mjg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-22T19:11:39Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-22T19:11:39Z"}, "message": "Fix mem op= mem bug in trans.ml (via not terribly good fix). Closes #111.", "tree": {"sha": "6f949a3b5a8a5dc2a2f3fdfdc108f68d377dd84a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f949a3b5a8a5dc2a2f3fdfdc108f68d377dd84a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "html_url": "https://github.com/rust-lang/rust/commit/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "html_url": "https://github.com/rust-lang/rust/commit/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "9d6eed19b64a25447a5125fd79504eadb6fbcb71", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "patch": "@@ -429,6 +429,7 @@ TEST_XFAILS_LLVM := $(addprefix test/run-pass/, \\\n                       generic-tag.rs \\\n                       import.rs \\\n                       inner-module.rs \\\n+                      iter-range.rs \\\n                       large-records.rs \\\n                       lazy-and-or.rs \\\n                       lazy-init.rs \\"}, {"sha": "be7adc1a8f5c4ff15c2a1e54261b2cc9676b2c25", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "patch": "@@ -4343,8 +4343,15 @@ let trans_visitor\n             trans_vec_append dst_cell dst_ty src_oper (atom_type cx a_src)\n         | _ ->\n             let (dst_cell, _) = deref_ty DEREF_none false dst_cell dst_ty in\n+            let bits = Il.operand_bits word_bits src_oper in\n+              (* \n+               * FIXME: X86-ism going via a vreg; mem op= mem doesn't work and\n+               * IL lacks sufficient brains to cope just now.\n+               *)\n+            let src = Il.Reg (Il.next_vreg (emitter()), Il.ValTy bits) in\n             let op = trans_binop binop in\n-              emit (Il.binary op dst_cell (Il.Cell dst_cell) src_oper);\n+              mov src src_oper;\n+              emit (Il.binary op dst_cell (Il.Cell dst_cell) (Il.Cell src));\n \n \n   and trans_call id dst flv args ="}, {"sha": "ade7c51c6ab02b510147ad8ff0b2cf070940a09b", "filename": "src/test/run-pass/iter-range.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/src%2Ftest%2Frun-pass%2Fiter-range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c96634af4b17eb4c92df8c3b38e6ed74cfcf9628/src%2Ftest%2Frun-pass%2Fiter-range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fiter-range.rs?ref=c96634af4b17eb4c92df8c3b38e6ed74cfcf9628", "patch": "@@ -0,0 +1,18 @@\n+iter range(int a, int b) -> int {\n+  check (a < b);\n+\n+  let int i = a;\n+  while (i < b) {\n+    put i;\n+    i += 1;\n+  }\n+}\n+\n+fn main() {\n+  let int sum = 0;\n+  for each (int x in range(0, 100)) {\n+    sum += x;\n+  }\n+\n+  log sum;\n+}\n\\ No newline at end of file"}]}