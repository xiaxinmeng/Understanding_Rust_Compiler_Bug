{"sha": "fe588d894fa392fdf787c18a959b342d38d0c71c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNTg4ZDg5NGZhMzkyZmRmNzg3YzE4YTk1OWIzNDJkMzhkMGM3MWM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-23T12:47:13Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-23T12:47:13Z"}, "message": "Replace a few expect+format combos with unwrap_or_else+panic", "tree": {"sha": "be50072cdfa499237686ad83b94c725d2d96500e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be50072cdfa499237686ad83b94c725d2d96500e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe588d894fa392fdf787c18a959b342d38d0c71c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe588d894fa392fdf787c18a959b342d38d0c71c", "html_url": "https://github.com/rust-lang/rust/commit/fe588d894fa392fdf787c18a959b342d38d0c71c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe588d894fa392fdf787c18a959b342d38d0c71c/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "url": "https://api.github.com/repos/rust-lang/rust/commits/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "html_url": "https://github.com/rust-lang/rust/commit/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "f2b2f6f1eebe1ebe6c86aae1c8b6f46f34fb11aa", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=fe588d894fa392fdf787c18a959b342d38d0c71c", "patch": "@@ -326,7 +326,7 @@ fn main() {\n             let start = Instant::now();\n             let status = cmd\n                 .status()\n-                .expect(&format!(\"\\n\\n failed to run {:?}\", cmd));\n+                .unwrap_or_else(|_| panic!(\"\\n\\n failed to run {:?}\", cmd));\n             let dur = start.elapsed();\n \n             let is_test = args.iter().any(|a| a == \"--test\");\n@@ -346,7 +346,7 @@ fn main() {\n         }\n     }\n \n-    let code = exec_cmd(&mut cmd).expect(&format!(\"\\n\\n failed to run {:?}\", cmd));\n+    let code = exec_cmd(&mut cmd).unwrap_or_else(|_| panic!(\"\\n\\n failed to run {:?}\", cmd));\n     std::process::exit(code);\n }\n "}, {"sha": "cb28698aa3d6d22b2b7495550a40868c413a90fc", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=fe588d894fa392fdf787c18a959b342d38d0c71c", "patch": "@@ -75,7 +75,7 @@ fn install_sh(\n     let libdir_default = PathBuf::from(\"lib\");\n     let mandir_default = datadir_default.join(\"man\");\n     let prefix = builder.config.prefix.as_ref().map_or(prefix_default, |p| {\n-        fs::canonicalize(p).expect(&format!(\"could not canonicalize {}\", p.display()))\n+        fs::canonicalize(p).unwrap_or_else(|_| panic!(\"could not canonicalize {}\", p.display()))\n     });\n     let sysconfdir = builder.config.sysconfdir.as_ref().unwrap_or(&sysconfdir_default);\n     let datadir = builder.config.datadir.as_ref().unwrap_or(&datadir_default);"}, {"sha": "e73073cfad0c182b25c22deedb89f81e8b938d07", "filename": "src/librustc_codegen_llvm/back/rpath.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Flibrustc_codegen_llvm%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Flibrustc_codegen_llvm%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Frpath.rs?ref=fe588d894fa392fdf787c18a959b342d38d0c71c", "patch": "@@ -114,8 +114,8 @@ fn get_rpath_relative_to_output(config: &mut RPathConfig, lib: &Path) -> String\n     let mut output = cwd.join(&config.out_filename);\n     output.pop();\n     let output = fs::canonicalize(&output).unwrap_or(output);\n-    let relative = path_relative_from(&lib, &output)\n-        .expect(&format!(\"couldn't create relative path from {:?} to {:?}\", output, lib));\n+    let relative = path_relative_from(&lib, &output).unwrap_or_else(||\n+        panic!(\"couldn't create relative path from {:?} to {:?}\", output, lib));\n     // FIXME (#9639): This needs to handle non-utf8 paths\n     format!(\"{}/{}\", prefix,\n             relative.to_str().expect(\"non-utf8 component in path\"))"}, {"sha": "223c04f420f3ff978576cf7f7ad044a4faf9cd37", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=fe588d894fa392fdf787c18a959b342d38d0c71c", "patch": "@@ -1277,7 +1277,7 @@ pub fn provide(providers: &mut Providers) {\n         all.iter()\n             .find(|cgu| *cgu.name() == name)\n             .cloned()\n-            .expect(&format!(\"failed to find cgu with name {:?}\", name))\n+            .unwrap_or_else(|| panic!(\"failed to find cgu with name {:?}\", name))\n     };\n     providers.compile_codegen_unit = compile_codegen_unit;\n "}, {"sha": "8ccb3be1ad912431f5de64226f8c1427c4b51770", "filename": "src/libsyntax_ext/format_foreign.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Flibsyntax_ext%2Fformat_foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe588d894fa392fdf787c18a959b342d38d0c71c/src%2Flibsyntax_ext%2Fformat_foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat_foreign.rs?ref=fe588d894fa392fdf787c18a959b342d38d0c71c", "patch": "@@ -232,11 +232,11 @@ pub mod printf {\n     impl Num {\n         fn from_str(s: &str, arg: Option<&str>) -> Self {\n             if let Some(arg) = arg {\n-                Num::Arg(arg.parse().expect(&format!(\"invalid format arg `{:?}`\", arg)))\n+                Num::Arg(arg.parse().unwrap_or_else(|_| panic!(\"invalid format arg `{:?}`\", arg)))\n             } else if s == \"*\" {\n                 Num::Next\n             } else {\n-                Num::Num(s.parse().expect(&format!(\"invalid format num `{:?}`\", s)))\n+                Num::Num(s.parse().unwrap_or_else(|_| panic!(\"invalid format num `{:?}`\", s)))\n             }\n         }\n "}]}