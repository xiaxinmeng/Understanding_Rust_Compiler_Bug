{"sha": "f29c3c421b9fd2afb52062590c5f2e052f8d3815", "node_id": "C_kwDOAAsO6NoAKGYyOWMzYzQyMWI5ZmQyYWZiNTIwNjI1OTBjNWYyZTA1MmY4ZDM4MTU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-28T17:31:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-28T17:40:24Z"}, "message": "entirely get rid of NeedsRfc CTFE errors", "tree": {"sha": "7fe4616d775b19754f2e1e4068e74104a090600c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fe4616d775b19754f2e1e4068e74104a090600c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f29c3c421b9fd2afb52062590c5f2e052f8d3815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f29c3c421b9fd2afb52062590c5f2e052f8d3815", "html_url": "https://github.com/rust-lang/rust/commit/f29c3c421b9fd2afb52062590c5f2e052f8d3815", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f29c3c421b9fd2afb52062590c5f2e052f8d3815/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f9145b094188d1915138385cb4dc8c8656090c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f9145b094188d1915138385cb4dc8c8656090c", "html_url": "https://github.com/rust-lang/rust/commit/a9f9145b094188d1915138385cb4dc8c8656090c"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "bba4b1815b457ca475cf0a51bb9292485311d39d", "filename": "compiler/rustc_const_eval/src/const_eval/error.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f29c3c421b9fd2afb52062590c5f2e052f8d3815/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29c3c421b9fd2afb52062590c5f2e052f8d3815/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs?ref=f29c3c421b9fd2afb52062590c5f2e052f8d3815", "patch": "@@ -15,7 +15,6 @@ use crate::interpret::{\n /// The CTFE machine has some custom error kinds.\n #[derive(Clone, Debug)]\n pub enum ConstEvalErrKind {\n-    NeedsRfc(String),\n     ConstAccessesStatic,\n     ModifiedGlobal,\n     AssertFailure(AssertKind<ConstInt>),\n@@ -42,9 +41,6 @@ impl fmt::Display for ConstEvalErrKind {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         use self::ConstEvalErrKind::*;\n         match *self {\n-            NeedsRfc(ref msg) => {\n-                write!(f, \"\\\"{}\\\" needs an rfc before being allowed inside constants\", msg)\n-            }\n             ConstAccessesStatic => write!(f, \"constant accesses static\"),\n             ModifiedGlobal => {\n                 write!(f, \"modifying a static's initial value from another static's initializer\")"}, {"sha": "9ea9fbe0e0e54188260281048bf8bfd11edfc308", "filename": "compiler/rustc_const_eval/src/const_eval/machine.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f29c3c421b9fd2afb52062590c5f2e052f8d3815/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29c3c421b9fd2afb52062590c5f2e052f8d3815/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=f29c3c421b9fd2afb52062590c5f2e052f8d3815", "patch": "@@ -340,11 +340,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n \n         // CTFE-specific intrinsics.\n         let Some(ret) = target else {\n-            return Err(ConstEvalErrKind::NeedsRfc(format!(\n-                \"calling intrinsic `{}`\",\n-                intrinsic_name\n-            ))\n-            .into());\n+            throw_unsup_format!(\"intrinsic `{intrinsic_name}` is not supported at compile-time\");\n         };\n         match intrinsic_name {\n             sym::ptr_guaranteed_eq | sym::ptr_guaranteed_ne => {\n@@ -401,11 +397,9 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n                 }\n             }\n             _ => {\n-                return Err(ConstEvalErrKind::NeedsRfc(format!(\n-                    \"calling intrinsic `{}`\",\n-                    intrinsic_name\n-                ))\n-                .into());\n+                throw_unsup_format!(\n+                    \"intrinsic `{intrinsic_name}` is not supported at compile-time\"\n+                );\n             }\n         }\n \n@@ -448,7 +442,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         _left: &ImmTy<'tcx>,\n         _right: &ImmTy<'tcx>,\n     ) -> InterpResult<'tcx, (Scalar, bool, Ty<'tcx>)> {\n-        Err(ConstEvalErrKind::NeedsRfc(\"pointer arithmetic or comparison\".to_string()).into())\n+        throw_unsup_format!(\"pointer arithmetic or comparison is not supported at compile-time\");\n     }\n \n     fn before_terminator(ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {"}, {"sha": "6a19b294585ae038bf6edfc87a432e6996dde9d7", "filename": "src/test/ui/consts/miri_unleashed/ptr_arith.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f29c3c421b9fd2afb52062590c5f2e052f8d3815/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fptr_arith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29c3c421b9fd2afb52062590c5f2e052f8d3815/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fptr_arith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fptr_arith.rs?ref=f29c3c421b9fd2afb52062590c5f2e052f8d3815", "patch": "@@ -19,4 +19,7 @@ static PTR_INT_TRANSMUTE: () = unsafe {\n     //~| unable to turn pointer into raw bytes\n };\n \n+// I'd love to test pointer comparison, but that is not possible since\n+// their `PartialEq` impl is non-`const`.\n+\n fn main() {}"}]}