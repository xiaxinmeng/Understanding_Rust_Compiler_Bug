{"sha": "e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMzI3ZDM4MzNlNmIxZWE0YjIzZWNkMzMzMmI4NjljZTgyZjE5OTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-01T02:27:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-01T03:22:47Z"}, "message": "Fix warnings", "tree": {"sha": "6b101b93a898c80bd075ddc5870648230e097b1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b101b93a898c80bd075ddc5870648230e097b1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "html_url": "https://github.com/rust-lang/rust/commit/e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f336afd45990f3799f0fa5667a992c2c06789fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f336afd45990f3799f0fa5667a992c2c06789fc3", "html_url": "https://github.com/rust-lang/rust/commit/f336afd45990f3799f0fa5667a992c2c06789fc3"}], "stats": {"total": 51, "additions": 21, "deletions": 30}, "files": [{"sha": "086c6a33b3ec8a84afae8e6d1af8ee9b57fd08fb", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -18,7 +18,6 @@ use metadata::decoder;\n use metadata::filesearch::FileSearch;\n use metadata::loader;\n \n-use core::either;\n use core::hashmap::linear::LinearMap;\n use core::vec;\n use syntax::attr;"}, {"sha": "ba232f55f74f69d45974859c85d22026ca6486f8", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -18,7 +18,6 @@ use util::ppaux::{ty_to_str};\n use core::hashmap::linear::LinearMap;\n use core::char;\n use core::cmp;\n-use core::either;\n use core::i8;\n use core::i16;\n use core::i32;"}, {"sha": "a93618b66246f58f7abe7c0fdd1a7e927f9f13f4", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -718,8 +718,8 @@ pub impl VisitContext {\n     }\n \n     fn use_receiver(&self,\n-                    expr_id: node_id,\n-                    span: span,\n+                    _expr_id: node_id,\n+                    _span: span,\n                     receiver_expr: @expr,\n                     visitor: vt<VisitContext>)\n     {"}, {"sha": "70d9dfacb6940f06edffc699fe37a56d15ffc9bf", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -1358,7 +1358,7 @@ pub impl Resolver {\n                                        item_id: def_id,\n                                        +parent_privacy: Privacy,\n                                        parent: ReducedGraphParent,\n-                                       &&visitor: vt<ReducedGraphParent>) {\n+                                       &&_visitor: vt<ReducedGraphParent>) {\n         let ident = variant.node.name;\n         let (child, _) = self.add_child(ident, parent, ForbidDuplicateValues,\n                                         variant.span);"}, {"sha": "55e6b30439ba42cc7e7ac7d71d112dd6841fdada", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -11,7 +11,7 @@\n use core::prelude::*;\n \n use back::abi;\n-use lib::llvm::{llvm, SetLinkage, InternalLinkage, PrivateLinkage,\n+use lib::llvm::{llvm, SetLinkage, PrivateLinkage,\n                 ValueRef, TypeRef, Bool, True, False};\n use metadata::csearch;\n use middle::const_eval;"}, {"sha": "7dc2e385e2cf632b1bf792fd9f2f6224ccb23168", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -11,7 +11,6 @@\n use core::prelude::*;\n \n use back::{link, abi};\n-use driver::session;\n use lib::llvm::{SequentiallyConsistent, Acquire, Release, Xchg};\n use lib::llvm::{TypeRef, ValueRef};\n use lib;"}, {"sha": "056ccf185995b8ddfc3218874378bceed3fe3d7d", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -110,7 +110,6 @@ use util::common::{block_query, indenter, loop_query};\n use util::ppaux::{bound_region_to_str, expr_repr, pat_repr};\n use util::ppaux;\n \n-use core::either;\n use core::hashmap::linear::LinearMap;\n use core::ptr;\n use core::result::{Result, Ok, Err};\n@@ -119,7 +118,7 @@ use core::str;\n use core::vec;\n use std::list::Nil;\n use syntax::abi::AbiSet;\n-use syntax::ast::{provided, required, ty_i};\n+use syntax::ast::{provided, required};\n use syntax::ast;\n use syntax::ast_map;\n use syntax::ast_util::local_def;\n@@ -3021,7 +3020,7 @@ pub fn check_enum_variants(ccx: @mut CrateCtxt,\n                            vs: &[ast::variant],\n                            id: ast::node_id) {\n     fn do_check(ccx: @mut CrateCtxt,\n-                sp: span,\n+                _sp: span,\n                 vs: &[ast::variant],\n                 id: ast::node_id,\n                 disr_vals: &mut ~[int],\n@@ -3303,7 +3302,7 @@ pub fn type_is_c_like_enum(fcx: @mut FnCtxt, sp: span, typ: ty::t) -> bool {\n \n pub fn ast_expr_vstore_to_vstore(fcx: @mut FnCtxt,\n                                  e: @ast::expr,\n-                                 n: uint,\n+                                 _n: uint,\n                                  v: ast::expr_vstore)\n                               -> ty::vstore {\n     match v {"}, {"sha": "f1d743e79e58a1dc6b54e66cdad7d1834638a43c", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -33,7 +33,7 @@ are represented as `ty_param()` instances.\n use core::prelude::*;\n \n use metadata::csearch;\n-use middle::ty::{InstantiatedTraitRef, arg};\n+use middle::ty::InstantiatedTraitRef;\n use middle::ty::{substs, ty_param_bounds_and_ty, ty_param_substs_and_ty};\n use middle::ty;\n use middle::typeck::astconv::{AstConv, ty_of_arg};\n@@ -860,7 +860,7 @@ pub fn ty_of_item(ccx: &CrateCtxt, it: @ast::item)\n         tcx.tcache.insert(local_def(it.id), tpt);\n         return tpt;\n       }\n-      ast::item_fn(ref decl, purity, abi, ref generics, _) => {\n+      ast::item_fn(ref decl, purity, _, ref generics, _) => {\n         let bounds = ty_param_bounds(ccx, generics);\n         let tofd = astconv::ty_of_bare_fn(ccx,\n                                           &empty_rscope,"}, {"sha": "43731c6a676cad88902275f01bdf4a3216509bd8", "filename": "src/librustc/middle/typeck/infer/coercion.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcoercion.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -66,20 +66,19 @@ we may want to adjust precisely when coercions occur.\n \n use core::prelude::*;\n \n-use middle::ty::{TyVar, AutoPtr, AutoBorrowVec, AutoBorrowFn};\n-use middle::ty::{AutoAdjustment, AutoDerefRef, AutoRef};\n-use middle::ty::{vstore_slice, vstore_box, vstore_uniq, vstore_fixed};\n+use middle::ty::{AutoPtr, AutoBorrowVec, AutoBorrowFn};\n+use middle::ty::{AutoDerefRef, AutoRef};\n+use middle::ty::{vstore_slice, vstore_box, vstore_uniq};\n use middle::ty::{mt};\n use middle::ty;\n use middle::typeck::infer::{CoerceResult, resolve_type};\n use middle::typeck::infer::combine::CombineFields;\n use middle::typeck::infer::sub::Sub;\n use middle::typeck::infer::to_str::InferStr;\n use middle::typeck::infer::resolve::try_resolve_tvar_shallow;\n-use util::common::{indent, indenter};\n+use util::common::indenter;\n \n-use syntax::abi::AbiSet;\n-use syntax::ast::{m_const, m_imm, m_mutbl};\n+use syntax::ast::m_imm;\n use syntax::ast;\n \n // Note: Coerce is not actually a combiner, in that it does not"}, {"sha": "9c8c8997ae0875f08a3c26fca11749dd2308de8e", "filename": "src/librustc/middle/typeck/infer/glb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -21,7 +21,7 @@ use middle::typeck::infer::{cres, InferCtxt};\n use middle::typeck::isr_alist;\n use syntax::ast;\n use syntax::ast::{Many, Once, extern_fn, impure_fn, m_const, m_imm, m_mutbl};\n-use syntax::ast::{noreturn, pure_fn, ret_style, return_val, unsafe_fn};\n+use syntax::ast::{pure_fn, unsafe_fn};\n use syntax::ast::{Onceness, purity};\n use syntax::abi::AbiSet;\n use syntax::codemap::span;"}, {"sha": "9630351b5c9be187fe2b35514d93f81dd46d32ba", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -20,7 +20,6 @@ use uv;\n use uv::iotask;\n use uv::iotask::IoTask;\n \n-use core::io::{Reader, ReaderUtil, Writer};\n use core::io;\n use core::libc::size_t;\n use core::libc;\n@@ -1439,7 +1438,7 @@ struct TcpBufferedSocketData {\n     mut buf_off: uint\n }\n \n-//#[cfg(test)]\n+#[cfg(test)]\n pub mod test {\n     use net::ip;\n     use net::tcp::{GenericListenErr, TcpConnectErrData, TcpListenErrData};"}, {"sha": "2e7ae4c537a8c7ebeec2f9c3c7438a4d2b051e8b", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -10,7 +10,7 @@\n \n // The Rust abstract syntax tree.\n \n-use codemap::{span, FileName, spanned};\n+use codemap::{span, spanned};\n use abi::AbiSet;\n use opt_vec::OptVec;\n "}, {"sha": "f22b466efebda0321fa71695b14f30987ed5240c", "filename": "src/libsyntax/ast_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -15,7 +15,6 @@ use ast::*;\n use ast;\n use ast_util::{inlined_item_utils, stmt_id};\n use ast_util;\n-use attr;\n use codemap;\n use codemap::spanned;\n use diagnostic::span_handler;"}, {"sha": "9f8dbef9b967b54bccb350333d7b2780ef968bcb", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -19,7 +19,6 @@ use codemap::BytePos;\n use diagnostic::span_handler;\n use parse::comments::{doc_comment_style, strip_doc_comment_decoration};\n \n-use core::either::Either;\n use core::vec;\n use core::hashmap::linear::LinearSet;\n use std;"}, {"sha": "18ebceaeb4396870fe1977a46e71025f20f1a4cf", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -286,7 +286,7 @@ pub fn create_enum_variant_pattern(cx: @ext_ctxt,\n     }\n }\n \n-pub fn variant_arg_count(cx: @ext_ctxt, span: span, variant: &variant) -> uint {\n+pub fn variant_arg_count(_cx: @ext_ctxt, _span: span, variant: &variant) -> uint {\n     match variant.node.kind {\n         tuple_variant_kind(ref args) => args.len(),\n         struct_variant_kind(ref struct_def) => struct_def.fields.len(),"}, {"sha": "1d1a101d61f1dbcf2b3a5c3bf249d562b105962d", "filename": "src/libsyntax/ext/pipes/ast_builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -16,7 +16,7 @@\n use core::prelude::*;\n \n use abi::AbiSet;\n-use ast::{ident, node_id};\n+use ast::ident;\n use ast;\n use ast_util;\n use codemap::{span, respan, dummy_sp, spanned};"}, {"sha": "ceafecde3a0b1b661b717af47568a9511a071c30", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -3777,7 +3777,7 @@ pub impl Parser {\n         };\n     }\n \n-    fn parse_enum_def(&self, generics: &ast::Generics) -> enum_def {\n+    fn parse_enum_def(&self, _generics: &ast::Generics) -> enum_def {\n         let mut variants = ~[];\n         let mut all_nullary = true, have_disr = false;\n         while *self.token != token::RBRACE {"}, {"sha": "0c79cbca039a6e9623aba3456c80eb1004cfb19c", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3327d3833e6b1ea4b23ecd3332b869ce82f1999/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=e3327d3833e6b1ea4b23ecd3332b869ce82f1999", "patch": "@@ -11,7 +11,6 @@\n use core::prelude::*;\n \n use abi::AbiSet;\n-use abi;\n use ast::{RegionTyParamBound, TraitTyParamBound, required, provided};\n use ast;\n use ast_util;\n@@ -2180,7 +2179,7 @@ pub fn print_opt_sigil(s: @ps, opt_sigil: Option<ast::Sigil>) {\n }\n \n pub fn print_fn_header_info(s: @ps,\n-                            opt_sty: Option<ast::self_ty_>,\n+                            _opt_sty: Option<ast::self_ty_>,\n                             opt_purity: Option<ast::purity>,\n                             abis: AbiSet,\n                             onceness: ast::Onceness,"}]}