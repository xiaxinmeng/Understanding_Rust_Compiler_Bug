{"sha": "e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MWU3M2ZjYzQxYTA5ZDFkOTU1MTY5ZmE3ZWE1YjBiZTY1YzFmY2I=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-30T00:03:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-30T00:03:52Z"}, "message": "Rollup merge of #43501 - topecongiro:span-to-whereclause, r=nrc\n\nAdd Span to ast::WhereClause\n\nThis PR adds `Span` field to `ast::WhereClause`. The motivation here is to make rustfmt's life easier when recovering comments before and after where clause.\nr? @nrc", "tree": {"sha": "3e77da27cf8b181fc2fae87a5ca7afe49254c069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e77da27cf8b181fc2fae87a5ca7afe49254c069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "html_url": "https://github.com/rust-lang/rust/commit/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f205f48a00fc710bac8b181ee720f2807314d7e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f205f48a00fc710bac8b181ee720f2807314d7e3", "html_url": "https://github.com/rust-lang/rust/commit/f205f48a00fc710bac8b181ee720f2807314d7e3"}, {"sha": "6375b77ebb640001e9d076eec8601d926d2543f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6375b77ebb640001e9d076eec8601d926d2543f7", "html_url": "https://github.com/rust-lang/rust/commit/6375b77ebb640001e9d076eec8601d926d2543f7"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "ad4a984cfd9bbcd3d4597a2de8820ed65f93379b", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "patch": "@@ -336,6 +336,7 @@ impl Default for Generics {\n             where_clause: WhereClause {\n                 id: DUMMY_NODE_ID,\n                 predicates: Vec::new(),\n+                span: DUMMY_SP,\n             },\n             span: DUMMY_SP,\n         }\n@@ -347,6 +348,7 @@ impl Default for Generics {\n pub struct WhereClause {\n     pub id: NodeId,\n     pub predicates: Vec<WherePredicate>,\n+    pub span: Span,\n }\n \n /// A single predicate in a `where` clause"}, {"sha": "a54e2573af40a7fe2e34858f94ec6146113139b3", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "patch": "@@ -737,14 +737,15 @@ pub fn noop_fold_generics<T: Folder>(Generics {ty_params, lifetimes, where_claus\n }\n \n pub fn noop_fold_where_clause<T: Folder>(\n-                              WhereClause {id, predicates}: WhereClause,\n+                              WhereClause {id, predicates, span}: WhereClause,\n                               fld: &mut T)\n                               -> WhereClause {\n     WhereClause {\n         id: fld.new_id(id),\n         predicates: predicates.move_map(|predicate| {\n             fld.fold_where_predicate(predicate)\n-        })\n+        }),\n+        span: span,\n     }\n }\n "}, {"sha": "7b105a8fa14c2f5bdca2f0739d4233a8e288875f", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "patch": "@@ -892,6 +892,7 @@ mod tests {\n                                         where_clause: ast::WhereClause {\n                                             id: ast::DUMMY_NODE_ID,\n                                             predicates: Vec::new(),\n+                                            span: syntax_pos::DUMMY_SP,\n                                         },\n                                         span: syntax_pos::DUMMY_SP,\n                                     },"}, {"sha": "70d4031625cbdc9847821512be37175c8f056176", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "patch": "@@ -4302,6 +4302,7 @@ impl<'a> Parser<'a> {\n                 where_clause: WhereClause {\n                     id: ast::DUMMY_NODE_ID,\n                     predicates: Vec::new(),\n+                    span: syntax_pos::DUMMY_SP,\n                 },\n                 span: span_lo.to(self.prev_span),\n             })\n@@ -4369,11 +4370,13 @@ impl<'a> Parser<'a> {\n         let mut where_clause = WhereClause {\n             id: ast::DUMMY_NODE_ID,\n             predicates: Vec::new(),\n+            span: syntax_pos::DUMMY_SP,\n         };\n \n         if !self.eat_keyword(keywords::Where) {\n             return Ok(where_clause);\n         }\n+        let lo = self.prev_span;\n \n         // This is a temporary future proofing.\n         //\n@@ -4451,6 +4454,7 @@ impl<'a> Parser<'a> {\n             }\n         }\n \n+        where_clause.span = lo.to(self.prev_span);\n         Ok(where_clause)\n     }\n "}, {"sha": "e9d11e73837aa7d32c0f9c21fad8207e6741b616", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "patch": "@@ -1041,6 +1041,7 @@ impl<'a> State<'a> {\n                     where_clause: ast::WhereClause {\n                         id: ast::DUMMY_NODE_ID,\n                         predicates: Vec::new(),\n+                        span: syntax_pos::DUMMY_SP,\n                     },\n                     span: syntax_pos::DUMMY_SP,\n                 };\n@@ -2983,6 +2984,7 @@ impl<'a> State<'a> {\n             where_clause: ast::WhereClause {\n                 id: ast::DUMMY_NODE_ID,\n                 predicates: Vec::new(),\n+                span: syntax_pos::DUMMY_SP,\n             },\n             span: syntax_pos::DUMMY_SP,\n         };"}, {"sha": "f5ac1743920c11874eabf7164b7458840d868ec2", "filename": "src/libsyntax_ext/deriving/generic/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fty.rs?ref=e61e73fcc41a09d1d955169fa7ea5b0be65c1fcb", "patch": "@@ -216,6 +216,7 @@ fn mk_generics(lifetimes: Vec<ast::LifetimeDef>, ty_params: Vec<ast::TyParam>, s\n         where_clause: ast::WhereClause {\n             id: ast::DUMMY_NODE_ID,\n             predicates: Vec::new(),\n+            span: span,\n         },\n         span: span,\n     }"}]}