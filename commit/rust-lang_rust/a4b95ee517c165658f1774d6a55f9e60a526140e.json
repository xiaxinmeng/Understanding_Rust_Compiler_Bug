{"sha": "a4b95ee517c165658f1774d6a55f9e60a526140e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Yjk1ZWU1MTdjMTY1NjU4ZjE3NzRkNmE1NWY5ZTYwYTUyNjE0MGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-17T23:30:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-17T23:30:18Z"}, "message": "Rollup merge of #80023 - sasurau4:feature/enhance-error-message-when-wrongly-written-broken-label, r=lcnr\n\nEnhance error message when misspelled label to value in break expression\n\nFix #79424", "tree": {"sha": "47118ad57704cbab63fd0e06f7a6f14bacb56c4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47118ad57704cbab63fd0e06f7a6f14bacb56c4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4b95ee517c165658f1774d6a55f9e60a526140e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf2+oKCRBK7hj4Ov3rIwAAdHIIAAkEo2HJ8q/g/H5/RYUB/HId\n/l/PatlWqqTcFUr9hBVXjVldjt6CGVlIpdcO6h2a6fKltsoULL1YnhYVAtGD9Byd\n7v1fxKXeZXWVRisiJ9PsAXvSmQ8FYE2R0LKikUVx3cFbpqVh0rGk21ywJqGSHae1\ncjpmHZRdE+R62HOuyzfboeNLo5NwcE3uU81wmtffxddaSvZEjCguKtsadIaw9LSB\n7qxROstR7kHaesI76xCSPFYTqnvrQX543o5bhz+bXorbtw+Pl7t8AfnZTUvfGDRP\n+7mmpSYWqFw8aj8hauW/WJzpAPsh7OrhYyPczkvdYX9aTLNfkblYiyqnPJ6FgRY=\n=dEiT\n-----END PGP SIGNATURE-----\n", "payload": "tree 47118ad57704cbab63fd0e06f7a6f14bacb56c4d\nparent 2e9ed6fb936f422bbb6be70468d8cd6b9b23495c\nparent e9ca2909ad49b9a15c7da29cc4350dda4aeefb10\nauthor Dylan DPC <dylan.dpc@gmail.com> 1608247818 +0100\ncommitter GitHub <noreply@github.com> 1608247818 +0100\n\nRollup merge of #80023 - sasurau4:feature/enhance-error-message-when-wrongly-written-broken-label, r=lcnr\n\nEnhance error message when misspelled label to value in break expression\n\nFix #79424\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b95ee517c165658f1774d6a55f9e60a526140e", "html_url": "https://github.com/rust-lang/rust/commit/a4b95ee517c165658f1774d6a55f9e60a526140e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4b95ee517c165658f1774d6a55f9e60a526140e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "html_url": "https://github.com/rust-lang/rust/commit/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c"}, {"sha": "e9ca2909ad49b9a15c7da29cc4350dda4aeefb10", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ca2909ad49b9a15c7da29cc4350dda4aeefb10", "html_url": "https://github.com/rust-lang/rust/commit/e9ca2909ad49b9a15c7da29cc4350dda4aeefb10"}], "stats": {"total": 115, "additions": 113, "deletions": 2}, "files": [{"sha": "68f59baffce1787ecd3a10bef915063c51c44643", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a4b95ee517c165658f1774d6a55f9e60a526140e/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b95ee517c165658f1774d6a55f9e60a526140e/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=a4b95ee517c165658f1774d6a55f9e60a526140e", "patch": "@@ -542,6 +542,26 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 err.span_label(base_span, fallback_label);\n             }\n         }\n+        if let Some(err_code) = &err.code {\n+            if err_code == &rustc_errors::error_code!(E0425) {\n+                for label_rib in &self.label_ribs {\n+                    for (label_ident, _) in &label_rib.bindings {\n+                        if format!(\"'{}\", ident) == label_ident.to_string() {\n+                            let msg = \"a label with a similar name exists\";\n+                            // FIXME: consider only emitting this suggestion if a label would be valid here\n+                            // which is pretty much only the case for `break` expressions.\n+                            err.span_suggestion(\n+                                span,\n+                                &msg,\n+                                label_ident.name.to_string(),\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n         (err, candidates)\n     }\n "}, {"sha": "ebfd5642c9fa8e34521b181c48e52f2cca2665db", "filename": "src/test/ui/label/label_misspelled.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.rs?ref=a4b95ee517c165658f1774d6a55f9e60a526140e", "patch": "@@ -0,0 +1,18 @@\n+fn main() {\n+    'LOOP: loop {\n+        LOOP;\n+        //~^ ERROR cannot find value `LOOP` in this scope\n+    };\n+    'while_loop: while true { //~ WARN denote infinite loops with\n+        while_loop;\n+        //~^ ERROR cannot find value `while_loop` in this scope\n+    };\n+    'while_let: while let Some(_) = Some(()) {\n+        while_let;\n+        //~^ ERROR cannot find value `while_let` in this scope\n+    }\n+    'for_loop: for _ in 0..3 {\n+        for_loop;\n+        //~^ ERROR cannot find value `for_loop` in this scope\n+    };\n+}"}, {"sha": "1368ca4126cddd4901ac41ea5f4ba5db74885be3", "filename": "src/test/ui/label/label_misspelled.stderr", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.stderr?ref=a4b95ee517c165658f1774d6a55f9e60a526140e", "patch": "@@ -0,0 +1,47 @@\n+error[E0425]: cannot find value `LOOP` in this scope\n+  --> $DIR/label_misspelled.rs:3:9\n+   |\n+LL |         LOOP;\n+   |         ^^^^\n+   |         |\n+   |         not found in this scope\n+   |         help: a label with a similar name exists: `'LOOP`\n+\n+error[E0425]: cannot find value `while_loop` in this scope\n+  --> $DIR/label_misspelled.rs:7:9\n+   |\n+LL |         while_loop;\n+   |         ^^^^^^^^^^\n+   |         |\n+   |         not found in this scope\n+   |         help: a label with a similar name exists: `'while_loop`\n+\n+error[E0425]: cannot find value `while_let` in this scope\n+  --> $DIR/label_misspelled.rs:11:9\n+   |\n+LL |         while_let;\n+   |         ^^^^^^^^^\n+   |         |\n+   |         not found in this scope\n+   |         help: a label with a similar name exists: `'while_let`\n+\n+error[E0425]: cannot find value `for_loop` in this scope\n+  --> $DIR/label_misspelled.rs:15:9\n+   |\n+LL |         for_loop;\n+   |         ^^^^^^^^\n+   |         |\n+   |         not found in this scope\n+   |         help: a label with a similar name exists: `'for_loop`\n+\n+warning: denote infinite loops with `loop { ... }`\n+  --> $DIR/label_misspelled.rs:6:5\n+   |\n+LL |     'while_loop: while true {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use `loop`\n+   |\n+   = note: `#[warn(while_true)]` on by default\n+\n+error: aborting due to 4 previous errors; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "8a080cfdf494a6a7732a457647d711a32b6d1dfd", "filename": "src/test/ui/loops/loop-break-value.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Floops%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Floops%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floop-break-value.rs?ref=a4b95ee517c165658f1774d6a55f9e60a526140e", "patch": "@@ -90,4 +90,10 @@ fn main() {\n         break; //~ ERROR mismatched types\n         break 4;\n     };\n+\n+    'LOOP: for _ in 0 .. 9 {\n+        break LOOP;\n+        //~^ ERROR cannot find value `LOOP` in this scope\n+        //~| ERROR `break` with value from a `for` loop\n+    }\n }"}, {"sha": "0237435c8b46a0657fe4b6f3981bf7147434e3d7", "filename": "src/test/ui/loops/loop-break-value.stderr", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Floops%2Floop-break-value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4b95ee517c165658f1774d6a55f9e60a526140e/src%2Ftest%2Fui%2Floops%2Floop-break-value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floop-break-value.stderr?ref=a4b95ee517c165658f1774d6a55f9e60a526140e", "patch": "@@ -1,3 +1,12 @@\n+error[E0425]: cannot find value `LOOP` in this scope\n+  --> $DIR/loop-break-value.rs:95:15\n+   |\n+LL |         break LOOP;\n+   |               ^^^^\n+   |               |\n+   |               not found in this scope\n+   |               help: a label with a similar name exists: `'LOOP`\n+\n warning: denote infinite loops with `loop { ... }`\n   --> $DIR/loop-break-value.rs:26:5\n    |\n@@ -94,6 +103,17 @@ help: instead, use `break` on its own without a value inside this `for` loop\n LL |             break;\n    |             ^^^^^\n \n+error[E0571]: `break` with value from a `for` loop\n+  --> $DIR/loop-break-value.rs:95:9\n+   |\n+LL |         break LOOP;\n+   |         ^^^^^^^^^^ can only break with a value inside `loop` or breakable block\n+   |\n+help: instead, use `break` on its own without a value inside this `for` loop\n+   |\n+LL |         break;\n+   |         ^^^^^\n+\n error[E0308]: mismatched types\n   --> $DIR/loop-break-value.rs:4:31\n    |\n@@ -151,7 +171,7 @@ LL |         break;\n    |         expected integer, found `()`\n    |         help: give it a value of the expected type: `break value`\n \n-error: aborting due to 16 previous errors; 1 warning emitted\n+error: aborting due to 18 previous errors; 1 warning emitted\n \n-Some errors have detailed explanations: E0308, E0571.\n+Some errors have detailed explanations: E0308, E0425, E0571.\n For more information about an error, try `rustc --explain E0308`."}]}