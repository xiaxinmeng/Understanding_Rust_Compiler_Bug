{"sha": "0ff2c81bb94417cd0e0b91d97443b59893e539ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZjJjODFiYjk0NDE3Y2QwZTBiOTFkOTc0NDNiNTk4OTNlNTM5YWU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-08-25T15:56:39Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-08-25T15:56:39Z"}, "message": "Fix reporting of build script errors", "tree": {"sha": "5e59b651c19c04f99cb0893cdd1fe5b1caf2a0ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e59b651c19c04f99cb0893cdd1fe5b1caf2a0ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ff2c81bb94417cd0e0b91d97443b59893e539ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff2c81bb94417cd0e0b91d97443b59893e539ae", "html_url": "https://github.com/rust-lang/rust/commit/0ff2c81bb94417cd0e0b91d97443b59893e539ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ff2c81bb94417cd0e0b91d97443b59893e539ae/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "095df7bc39988453857e0fef5b773b405379b629", "url": "https://api.github.com/repos/rust-lang/rust/commits/095df7bc39988453857e0fef5b773b405379b629", "html_url": "https://github.com/rust-lang/rust/commit/095df7bc39988453857e0fef5b773b405379b629"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "7ed7de04fbe29faa7877f225a1504bc5f01d902c", "filename": "crates/project_model/src/build_scripts.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ff2c81bb94417cd0e0b91d97443b59893e539ae/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff2c81bb94417cd0e0b91d97443b59893e539ae/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs?ref=0ff2c81bb94417cd0e0b91d97443b59893e539ae", "patch": "@@ -196,6 +196,10 @@ impl WorkspaceBuildScripts {\n \n         Ok(res)\n     }\n+\n+    pub fn error(&self) -> Option<&str> {\n+        self.error.as_deref()\n+    }\n }\n \n // FIXME: File a better way to know if it is a dylib."}, {"sha": "efac6d6868740460dace5f0464bef875023c2089", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0ff2c81bb94417cd0e0b91d97443b59893e539ae/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff2c81bb94417cd0e0b91d97443b59893e539ae/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=0ff2c81bb94417cd0e0b91d97443b59893e539ae", "patch": "@@ -445,19 +445,29 @@ impl GlobalState {\n     }\n \n     fn fetch_build_data_error(&self) -> Option<String> {\n-        let mut buf = String::new();\n+        let mut buf = \"rust-analyzer failed to run build scripts:\\n\".to_string();\n+        let mut has_errors = false;\n \n         for ws in &self.fetch_build_data_queue.last_op_result().1 {\n-            if let Err(err) = ws {\n-                stdx::format_to!(buf, \"rust-analyzer failed to run custom build: {:#}\\n\", err);\n+            match ws {\n+                Ok(data) => {\n+                    if let Some(err) = data.error() {\n+                        has_errors = true;\n+                        stdx::format_to!(buf, \"{:#}\\n\", err);\n+                    }\n+                }\n+                Err(err) => {\n+                    has_errors = true;\n+                    stdx::format_to!(buf, \"{:#}\\n\", err);\n+                }\n             }\n         }\n \n-        if buf.is_empty() {\n-            return None;\n+        if has_errors {\n+            Some(buf)\n+        } else {\n+            None\n         }\n-\n-        Some(buf)\n     }\n \n     fn reload_flycheck(&mut self) {"}]}