{"sha": "66ef5f2bb55f3204d50b5011e3d15385065834c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZWY1ZjJiYjU1ZjMyMDRkNTBiNTAxMWUzZDE1Mzg1MDY1ODM0YzE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-01-17T07:41:44Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-01-17T07:41:44Z"}, "message": "Rename ObjectSum into TraitObject in AST/HIR", "tree": {"sha": "92ffdb2f95e232a88435d555914aeb7bb98a13ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92ffdb2f95e232a88435d555914aeb7bb98a13ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66ef5f2bb55f3204d50b5011e3d15385065834c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66ef5f2bb55f3204d50b5011e3d15385065834c1", "html_url": "https://github.com/rust-lang/rust/commit/66ef5f2bb55f3204d50b5011e3d15385065834c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66ef5f2bb55f3204d50b5011e3d15385065834c1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "869b81646d527d9eb37bc73c526e0567a107aea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/869b81646d527d9eb37bc73c526e0567a107aea7", "html_url": "https://github.com/rust-lang/rust/commit/869b81646d527d9eb37bc73c526e0567a107aea7"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "7527d7fb318dddc543424d2012f25605e83f2af4", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -566,7 +566,7 @@ pub fn walk_ty<'v, V: Visitor<'v>>(visitor: &mut V, typ: &'v Ty) {\n             visitor.visit_ty(ty);\n             visitor.visit_nested_body(length)\n         }\n-        TyObjectSum(ref bounds) => {\n+        TyTraitObject(ref bounds) => {\n             walk_list!(visitor, visit_ty_param_bound, bounds);\n         }\n         TyImplTrait(ref bounds) => {"}, {"sha": "57f40e7140e10d4e567d6a202f672c17e4a624a6", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -317,8 +317,8 @@ impl<'a> LoweringContext<'a> {\n                     let expr = self.lower_expr(expr);\n                     hir::TyTypeof(self.record_body(expr, None))\n                 }\n-                TyKind::ObjectSum(ref bounds) => {\n-                    hir::TyObjectSum(self.lower_bounds(bounds))\n+                TyKind::TraitObject(ref bounds) => {\n+                    hir::TyTraitObject(self.lower_bounds(bounds))\n                 }\n                 TyKind::ImplTrait(ref bounds) => {\n                     hir::TyImplTrait(self.lower_bounds(bounds))"}, {"sha": "b631d67e4736571d8097b309ed2d0efe90993543", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -1216,7 +1216,7 @@ pub enum Ty_ {\n     TyPath(QPath),\n     /// A trait object type `Bound1 + Bound2 + Bound3`\n     /// where `Bound` is a trait or a lifetime.\n-    TyObjectSum(TyParamBounds),\n+    TyTraitObject(TyParamBounds),\n     /// An `impl Bound1 + Bound2 + Bound3` type\n     /// where `Bound` is a trait or a lifetime.\n     TyImplTrait(TyParamBounds),"}, {"sha": "377f2ea26aba995da2e0da3fcf7e4112b4d7b68f", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -418,7 +418,7 @@ impl<'a> State<'a> {\n             hir::TyPath(ref qpath) => {\n                 self.print_qpath(qpath, false)?\n             }\n-            hir::TyObjectSum(ref bounds) => {\n+            hir::TyTraitObject(ref bounds) => {\n                 self.print_bounds(\"\", &bounds[..])?;\n             }\n             hir::TyImplTrait(ref bounds) => {"}, {"sha": "f0e86e81c076d060e4c3a1a373949026f1d70259", "filename": "src/librustc_incremental/calculate_svh/svh_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -456,7 +456,7 @@ fn saw_ty(node: &Ty_) -> SawTyComponent {\n       TyNever => SawTyNever,\n       TyTup(..) => SawTyTup,\n       TyPath(_) => SawTyPath,\n-      TyObjectSum(..) => SawTyObjectSum,\n+      TyTraitObject(..) => SawTyObjectSum,\n       TyImplTrait(..) => SawTyImplTrait,\n       TyTypeof(..) => SawTyTypeof,\n       TyInfer => SawTyInfer"}, {"sha": "b7b027102b2afbd3c999d85f74d9982725fb0277", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -143,7 +143,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                     err.emit();\n                 });\n             }\n-            TyKind::ObjectSum(ref bounds) => {\n+            TyKind::TraitObject(ref bounds) => {\n                 self.no_questions_in_bounds(bounds, \"trait object types\", false);\n             }\n             _ => {}"}, {"sha": "e4529b58f03ce9eeed248127ea8b8a1b0e87f248", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -1347,7 +1347,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n         match path.def {\n             Def::Trait(trait_def_id) => {\n                 // N.B. this case overlaps somewhat with\n-                // TyObjectSum, see that fn for details\n+                // TyTraitObject, see that fn for details\n \n                 assert_eq!(opt_self_ty, None);\n                 tcx.prohibit_type_params(path.segments.split_last().unwrap().1);\n@@ -1525,7 +1525,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                 }\n                 tcx.mk_fn_ptr(bare_fn_ty)\n             }\n-            hir::TyObjectSum(ref bounds) => {\n+            hir::TyTraitObject(ref bounds) => {\n                 self.conv_object_ty_poly_trait_ref(rscope, ast_ty.span, bounds)\n             }\n             hir::TyImplTrait(ref bounds) => {"}, {"sha": "a77485477b1591330dec2162217592e8ccadb12e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -1765,7 +1765,7 @@ impl Clean<Type> for hir::Ty {\n                     trait_: box resolve_type(cx, trait_path.clean(cx), self.id)\n                 }\n             }\n-            TyObjectSum(ref bounds) => {\n+            TyTraitObject(ref bounds) => {\n                 let lhs_ty = bounds[0].clean(cx);\n                 match lhs_ty {\n                     TraitBound(poly_trait, ..) => {"}, {"sha": "62cef26b6d1f50c0b431bf1fcae32e7d72f4c8a5", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -1359,7 +1359,7 @@ pub enum TyKind {\n     Path(Option<QSelf>, Path),\n     /// A trait object type `Bound1 + Bound2 + Bound3`\n     /// where `Bound` is a trait or a lifetime.\n-    ObjectSum(TyParamBounds),\n+    TraitObject(TyParamBounds),\n     /// An `impl Bound1 + Bound2 + Bound3` type\n     /// where `Bound` is a trait or a lifetime.\n     ImplTrait(TyParamBounds),"}, {"sha": "f936fc79991f7694a82c702dbc0d09973af28320", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -386,8 +386,8 @@ pub fn noop_fold_ty<T: Folder>(t: P<Ty>, fld: &mut T) -> P<Ty> {\n             TyKind::Typeof(expr) => {\n                 TyKind::Typeof(fld.fold_expr(expr))\n             }\n-            TyKind::ObjectSum(bounds) => {\n-                TyKind::ObjectSum(bounds.move_map(|b| fld.fold_ty_param_bound(b)))\n+            TyKind::TraitObject(bounds) => {\n+                TyKind::TraitObject(bounds.move_map(|b| fld.fold_ty_param_bound(b)))\n             }\n             TyKind::ImplTrait(bounds) => {\n                 TyKind::ImplTrait(bounds.move_map(|b| fld.fold_ty_param_bound(b)))"}, {"sha": "62897159bf0c62fb1fe3935ab6fa388d215272c4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -1045,7 +1045,7 @@ impl<'a> Parser<'a> {\n                 Some(TraitTyParamBound(poly_trait_ref, TraitBoundModifier::None)).into_iter()\n                 .chain(other_bounds)\n                 .collect();\n-            Ok(ast::TyKind::ObjectSum(all_bounds))\n+            Ok(ast::TyKind::TraitObject(all_bounds))\n         }\n     }\n \n@@ -1327,7 +1327,7 @@ impl<'a> Parser<'a> {\n         }\n \n         let sp = mk_sp(lo, self.prev_span.hi);\n-        let sum = TyKind::ObjectSum(bounds);\n+        let sum = TyKind::TraitObject(bounds);\n         Ok(P(Ty {id: ast::DUMMY_NODE_ID, node: sum, span: sp}))\n     }\n "}, {"sha": "7115a38b448068e6225bee27f0d88e9e68d23190", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -1028,7 +1028,7 @@ impl<'a> State<'a> {\n             ast::TyKind::Path(Some(ref qself), ref path) => {\n                 self.print_qpath(path, qself, false)?\n             }\n-            ast::TyKind::ObjectSum(ref bounds) => {\n+            ast::TyKind::TraitObject(ref bounds) => {\n                 self.print_bounds(\"\", &bounds[..])?;\n             }\n             ast::TyKind::ImplTrait(ref bounds) => {"}, {"sha": "1a95e672f3c73acfb433c74aa1217005eb20cf6b", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ef5f2bb55f3204d50b5011e3d15385065834c1/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=66ef5f2bb55f3204d50b5011e3d15385065834c1", "patch": "@@ -346,7 +346,7 @@ pub fn walk_ty<'a, V: Visitor<'a>>(visitor: &mut V, typ: &'a Ty) {\n             visitor.visit_ty(ty);\n             visitor.visit_expr(expression)\n         }\n-        TyKind::ObjectSum(ref bounds) => {\n+        TyKind::TraitObject(ref bounds) => {\n             walk_list!(visitor, visit_ty_param_bound, bounds);\n         }\n         TyKind::ImplTrait(ref bounds) => {"}]}