{"sha": "c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "node_id": "C_kwDOAAsO6NoAKGMxOWE4OTNmODdlNzBmYzFjOWJhYjE5M2MzZjljODNkOWE5ZDcxZDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-17T08:04:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-17T08:04:52Z"}, "message": "Auto merge of #103116 - TaKO8Ki:fix-103053, r=lcnr\n\nFix `own_substs` ICE\n\nFixes #103053", "tree": {"sha": "1f964256ae3b424fc1a095b4183e9b9487782bf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f964256ae3b424fc1a095b4183e9b9487782bf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "html_url": "https://github.com/rust-lang/rust/commit/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1536ab1b383f21b38f8d49230a2aecc51daffa3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1536ab1b383f21b38f8d49230a2aecc51daffa3d", "html_url": "https://github.com/rust-lang/rust/commit/1536ab1b383f21b38f8d49230a2aecc51daffa3d"}, {"sha": "0b6fa0d418f8de754c32459c333a64b08b5ed863", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6fa0d418f8de754c32459c333a64b08b5ed863", "html_url": "https://github.com/rust-lang/rust/commit/0b6fa0d418f8de754c32459c333a64b08b5ed863"}], "stats": {"total": 49, "additions": 44, "deletions": 5}, "files": [{"sha": "7b3178e610fe4b36f18ddf4a41404f166e6e596b", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "patch": "@@ -902,11 +902,18 @@ impl<'a, 'tcx> FindInferSourceVisitor<'a, 'tcx> {\n             // impl is currently the `DefId` of `Output` in the trait definition\n             // which makes this somewhat difficult and prevents us from just\n             // using `self.path_inferred_subst_iter` here.\n-            hir::ExprKind::Struct(&hir::QPath::Resolved(_self_ty, path), _, _) => {\n-                if let Some(ty) = self.opt_node_type(expr.hir_id) {\n-                    if let ty::Adt(_, substs) = ty.kind() {\n-                        return Box::new(self.resolved_path_inferred_subst_iter(path, substs));\n-                    }\n+            hir::ExprKind::Struct(&hir::QPath::Resolved(_self_ty, path), _, _)\n+            // FIXME(TaKO8Ki): Ideally we should support this. For that\n+            // we have to map back from the self type to the\n+            // type alias though. That's difficult.\n+            //\n+            // See the `need_type_info/issue-103053.rs` test for\n+            // a example.\n+            if !matches!(path.res, Res::Def(DefKind::TyAlias, _)) => {\n+                if let Some(ty) = self.opt_node_type(expr.hir_id)\n+                    && let ty::Adt(_, substs) = ty.kind()\n+                {\n+                    return Box::new(self.resolved_path_inferred_subst_iter(path, substs));\n                 }\n             }\n             hir::ExprKind::MethodCall(segment, ..) => {"}, {"sha": "05169666f83e446b344a70c81460ce8d59dc08fb", "filename": "src/test/ui/inference/need_type_info/issue-103053.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fissue-103053.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fissue-103053.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fissue-103053.rs?ref=c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "patch": "@@ -0,0 +1,18 @@\n+trait TypeMapper {\n+    type MapType;\n+}\n+\n+type Mapped<T> = <T as TypeMapper>::MapType;\n+\n+struct Test {}\n+\n+impl TypeMapper for () {\n+    type MapType = Test;\n+}\n+\n+fn test() {\n+    Mapped::<()> {};\n+    None; //~ ERROR type annotations needed\n+}\n+\n+fn main() {}"}, {"sha": "84f0475d8cdac9e315fb370a518036850a7d4e41", "filename": "src/test/ui/inference/need_type_info/issue-103053.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fissue-103053.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fissue-103053.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fneed_type_info%2Fissue-103053.stderr?ref=c19a893f87e70fc1c9bab193c3f9c83d9a9d71d3", "patch": "@@ -0,0 +1,14 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-103053.rs:15:5\n+   |\n+LL |     None;\n+   |     ^^^^ cannot infer type of the type parameter `T` declared on the enum `Option`\n+   |\n+help: consider specifying the generic argument\n+   |\n+LL |     None::<T>;\n+   |         +++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}