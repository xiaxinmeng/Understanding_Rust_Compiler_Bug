{"sha": "77e8ddfaf342a94a7d3c3167c31199bf26b04f1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZThkZGZhZjM0MmE5NGE3ZDNjMzE2N2MzMTE5OWJmMjZiMDRmMWY=", "commit": {"author": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2015-04-15T08:51:30Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-17T02:23:36Z"}, "message": "rustc: Add long diagnostics for E0170", "tree": {"sha": "9e7e8bd400c66075caec5a66a7d14017b5f0ccb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e7e8bd400c66075caec5a66a7d14017b5f0ccb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e8ddfaf342a94a7d3c3167c31199bf26b04f1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e8ddfaf342a94a7d3c3167c31199bf26b04f1f", "html_url": "https://github.com/rust-lang/rust/commit/77e8ddfaf342a94a7d3c3167c31199bf26b04f1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e8ddfaf342a94a7d3c3167c31199bf26b04f1f/comments", "author": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaf92f04d1c9b90f05c586ed811e6b185743018d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaf92f04d1c9b90f05c586ed811e6b185743018d", "html_url": "https://github.com/rust-lang/rust/commit/aaf92f04d1c9b90f05c586ed811e6b185743018d"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "222ebb09f915b7956979b3b5b0dbc4c411fd331f", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/77e8ddfaf342a94a7d3c3167c31199bf26b04f1f/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e8ddfaf342a94a7d3c3167c31199bf26b04f1f/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=77e8ddfaf342a94a7d3c3167c31199bf26b04f1f", "patch": "@@ -191,6 +191,32 @@ loop {\n }\n \"##,\n \n+E0170: r##\"\n+Enum variants are qualified by default. For example, given this type:\n+\n+enum Method {\n+    GET,\n+    POST\n+}\n+\n+you would match it using:\n+\n+match m {\n+    Method::GET => ...\n+    Method::POST => ...\n+}\n+\n+If you don't qualify the names, the code will bind new variables named \"GET\" and\n+\"POST\" instead. This behavior is likely not what you want, so rustc warns when\n+that happens.\n+\n+Qualified names are good practice, and most code works well with them. But if\n+you prefer them unqualified, you can import the variants into scope:\n+\n+use Method::*;\n+enum Method { GET, POST }\n+\"##,\n+\n E0297: r##\"\n Patterns used to bind names must be irrefutable. That is, they must guarantee\n that a name will be extracted in all cases. Instead of pattern matching the\n@@ -296,7 +322,6 @@ register_diagnostics! {\n     E0137,\n     E0138,\n     E0139,\n-    E0170,\n     E0261, // use of undeclared lifetime name\n     E0262, // illegal lifetime parameter name\n     E0263, // lifetime name declared twice in same scope"}]}