{"sha": "0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a", "node_id": "C_kwDOAAsO6NoAKDBjNjkxOGZlMjEwZWJlZDk2MzljMmYxYjFmYmZhYzRlYjBmZWYzOGE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-06-27T14:46:36Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-15T15:56:16Z"}, "message": "Reuse a helper method instead of manually rolling it", "tree": {"sha": "74b2c4920e77d1ce62042893290fb97c101ab44c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74b2c4920e77d1ce62042893290fb97c101ab44c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a", "html_url": "https://github.com/rust-lang/rust/commit/0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a8a048b5853c6e44af53d924a7c0feb2140e5af", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a8a048b5853c6e44af53d924a7c0feb2140e5af", "html_url": "https://github.com/rust-lang/rust/commit/7a8a048b5853c6e44af53d924a7c0feb2140e5af"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "63acd731db7c9735c901d335dcf5d276db1f1d0c", "filename": "compiler/rustc_mir_build/src/build/matches/test.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs?ref=0c6918fe210ebed9639c2f1b1fbfac4eb0fef38a", "patch": "@@ -724,9 +724,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         // So, if we have a match-pattern like `x @ Enum::Variant(P1, P2)`,\n         // we want to create a set of derived match-patterns like\n         // `(x as Variant).0 @ P1` and `(x as Variant).1 @ P1`.\n-        let elem =\n-            ProjectionElem::Downcast(Some(adt_def.variant(variant_index).name), variant_index);\n-        let downcast_place = match_pair.place.project(elem); // `(x as Variant)`\n+        let downcast_place = match_pair.place.downcast(adt_def, variant_index); // `(x as Variant)`\n         let consequent_match_pairs = subpatterns.iter().map(|subpattern| {\n             // e.g., `(x as Variant).0`\n             let place = downcast_place.clone().field(subpattern.field, subpattern.pattern.ty);"}]}