{"sha": "f463e69d203ffdd1a0c6c73612a0ba514a700a78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NjNlNjlkMjAzZmZkZDFhMGM2YzczNjEyYTBiYTUxNGE3MDBhNzg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-06-08T02:59:32Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-28T14:44:15Z"}, "message": "librustc: Add a small vector optimization for GEPi. Shaves a second off trans, I think?", "tree": {"sha": "d558640288f9a2e9c8219c68229cde02c86b48f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d558640288f9a2e9c8219c68229cde02c86b48f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f463e69d203ffdd1a0c6c73612a0ba514a700a78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f463e69d203ffdd1a0c6c73612a0ba514a700a78", "html_url": "https://github.com/rust-lang/rust/commit/f463e69d203ffdd1a0c6c73612a0ba514a700a78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f463e69d203ffdd1a0c6c73612a0ba514a700a78/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90ad44428759617723f2f4630aa22bbed6f33aaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/90ad44428759617723f2f4630aa22bbed6f33aaf", "html_url": "https://github.com/rust-lang/rust/commit/90ad44428759617723f2f4630aa22bbed6f33aaf"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "a90089bb47035f23c61750ea575bca45b8630ff9", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f463e69d203ffdd1a0c6c73612a0ba514a700a78/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f463e69d203ffdd1a0c6c73612a0ba514a700a78/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=f463e69d203ffdd1a0c6c73612a0ba514a700a78", "patch": "@@ -610,12 +610,21 @@ pub fn GEP(cx: block, Pointer: ValueRef, Indices: &[ValueRef]) -> ValueRef {\n \n // Simple wrapper around GEP that takes an array of ints and wraps them\n // in C_i32()\n-//\n-// FIXME #6571: Use a small-vector optimization to avoid allocations here.\n+#[inline]\n pub fn GEPi(cx: block, base: ValueRef, ixs: &[uint]) -> ValueRef {\n-    let v = do vec::map(ixs) |i| { C_i32(*i as i32) };\n-    count_insn(cx, \"gepi\");\n-    return InBoundsGEP(cx, base, v);\n+    // Small vector optimization. This should catch 100% of the cases that\n+    // we care about.\n+    if ixs.len() < 16 {\n+        let mut small_vec = [ C_i32(0), ..16 ];\n+        for ixs.eachi |i, &ix| {\n+            small_vec[i] = C_i32(ix as i32)\n+        }\n+        InBoundsGEP(cx, base, small_vec.slice(0, ixs.len()))\n+    } else {\n+        let v = do vec::map(ixs) |i| { C_i32(*i as i32) };\n+        count_insn(cx, \"gepi\");\n+        InBoundsGEP(cx, base, v)\n+    }\n }\n \n pub fn InBoundsGEP(cx: block, Pointer: ValueRef, Indices: &[ValueRef]) -> ValueRef {"}]}