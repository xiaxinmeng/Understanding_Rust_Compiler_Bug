{"sha": "eaf9df2dc311f6338a7549256bd0b893de687ffa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZjlkZjJkYzMxMWY2MzM4YTc1NDkyNTZiZDBiODkzZGU2ODdmZmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-21T06:04:48Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-21T06:04:48Z"}, "message": "Remove dead code.", "tree": {"sha": "69c748d4cc03fd5485dff87cea18e5d629adccb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69c748d4cc03fd5485dff87cea18e5d629adccb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaf9df2dc311f6338a7549256bd0b893de687ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf9df2dc311f6338a7549256bd0b893de687ffa", "html_url": "https://github.com/rust-lang/rust/commit/eaf9df2dc311f6338a7549256bd0b893de687ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaf9df2dc311f6338a7549256bd0b893de687ffa/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e731520be5d43059b5b87ffc8e1b249e4a824a9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e731520be5d43059b5b87ffc8e1b249e4a824a9a", "html_url": "https://github.com/rust-lang/rust/commit/e731520be5d43059b5b87ffc8e1b249e4a824a9a"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "9cf08e6b1f1b9ff9566163298409c52140d2c54b", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/eaf9df2dc311f6338a7549256bd0b893de687ffa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaf9df2dc311f6338a7549256bd0b893de687ffa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=eaf9df2dc311f6338a7549256bd0b893de687ffa", "patch": "@@ -1247,19 +1247,6 @@ impure fn trans_mod(@trans_ctxt cx, &ast._mod m) {\n fn collect_item(&@trans_ctxt cx, @ast.item i) -> @trans_ctxt {\n     alt (i.node) {\n         case (ast.item_fn(?name, ?f, ?fid, ?ann)) {\n-            auto fn_inputs;\n-            auto fn_output;\n-            alt (typeck.ann_to_type(ann).struct) {\n-                case (typeck.ty_fn(?ins, ?out)) {\n-                    fn_inputs = ins;\n-                    fn_output = out;\n-                }\n-                case (_) {\n-                    log \"trans: fn item doesn't have function type!\";\n-                    fail;\n-                }\n-            }\n-\n             cx.items.insert(fid, i);\n             auto llty = node_type(cx, ann);\n             let str s = cx.names.next(\"_rust_fn\") + \".\" + name;"}]}