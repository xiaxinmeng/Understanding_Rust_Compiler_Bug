{"sha": "5a9538acb55f0980728a159996fdeff77b845455", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOTUzOGFjYjU1ZjA5ODA3MjhhMTU5OTk2ZmRlZmY3N2I4NDU0NTU=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-03-13T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-03-15T22:26:03Z"}, "message": "Functions inlined into reachable functions are reachable\n\nConsider functions to be reachable for code coverage purposes, either\nwhen they reach the code generation directly, or indirectly as inlined\npart of another function.", "tree": {"sha": "d7c4aed4f924dccedbbfa5be31579e0a62825ebc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7c4aed4f924dccedbbfa5be31579e0a62825ebc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a9538acb55f0980728a159996fdeff77b845455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a9538acb55f0980728a159996fdeff77b845455", "html_url": "https://github.com/rust-lang/rust/commit/5a9538acb55f0980728a159996fdeff77b845455", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a9538acb55f0980728a159996fdeff77b845455/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1796cc0e6c43f1958d746c94608503c900b3a28e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1796cc0e6c43f1958d746c94608503c900b3a28e", "html_url": "https://github.com/rust-lang/rust/commit/1796cc0e6c43f1958d746c94608503c900b3a28e"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "352638aa88ee8a4f4772354bbbb722b9fff1080f", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a9538acb55f0980728a159996fdeff77b845455/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a9538acb55f0980728a159996fdeff77b845455/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs?ref=5a9538acb55f0980728a159996fdeff77b845455", "patch": "@@ -284,7 +284,7 @@ fn add_unreachable_coverage<'tcx>(\n     let all_def_ids: DefIdSet =\n         tcx.mir_keys(LOCAL_CRATE).iter().map(|local_def_id| local_def_id.to_def_id()).collect();\n \n-    let (codegenned_def_ids, _) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+    let codegenned_def_ids = tcx.codegened_and_inlined_items(LOCAL_CRATE);\n \n     let mut unreachable_def_ids_by_file: FxHashMap<Symbol, Vec<DefId>> = FxHashMap::default();\n     for &non_codegenned_def_id in all_def_ids.difference(codegenned_def_ids) {"}, {"sha": "f912653d920ca7e72cd55603e96c3a364fa6c3f8", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a9538acb55f0980728a159996fdeff77b845455/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a9538acb55f0980728a159996fdeff77b845455/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=5a9538acb55f0980728a159996fdeff77b845455", "patch": "@@ -1397,6 +1397,14 @@ rustc_queries! {\n     query is_codegened_item(def_id: DefId) -> bool {\n         desc { |tcx| \"determining whether `{}` needs codegen\", tcx.def_path_str(def_id) }\n     }\n+\n+    /// All items participating in code generation together with items inlined into them.\n+    query codegened_and_inlined_items(_: CrateNum)\n+        -> &'tcx DefIdSet {\n+        eval_always\n+       desc { \"codegened_and_inlined_items\" }\n+    }\n+\n     query codegen_unit(_: Symbol) -> &'tcx CodegenUnit<'tcx> {\n         desc { \"codegen_unit\" }\n     }"}, {"sha": "dc2379fd92b834cba2dc31d3919230fbbede99f1", "filename": "compiler/rustc_mir/src/monomorphize/partitioning/mod.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5a9538acb55f0980728a159996fdeff77b845455/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a9538acb55f0980728a159996fdeff77b845455/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpartitioning%2Fmod.rs?ref=5a9538acb55f0980728a159996fdeff77b845455", "patch": "@@ -424,8 +424,33 @@ fn collect_and_partition_mono_items<'tcx>(\n     (tcx.arena.alloc(mono_items), codegen_units)\n }\n \n+fn codegened_and_inlined_items<'tcx>(tcx: TyCtxt<'tcx>, cnum: CrateNum) -> &'tcx DefIdSet {\n+    let (items, cgus) = tcx.collect_and_partition_mono_items(cnum);\n+    let mut visited = DefIdSet::default();\n+    let mut result = items.clone();\n+\n+    for cgu in cgus {\n+        for (item, _) in cgu.items() {\n+            if let MonoItem::Fn(ref instance) = item {\n+                let did = instance.def_id();\n+                if !visited.insert(did) {\n+                    continue;\n+                }\n+                for scope in &tcx.instance_mir(instance.def).source_scopes {\n+                    if let Some((ref inlined, _)) = scope.inlined {\n+                        result.insert(inlined.def_id());\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    tcx.arena.alloc(result)\n+}\n+\n pub fn provide(providers: &mut Providers) {\n     providers.collect_and_partition_mono_items = collect_and_partition_mono_items;\n+    providers.codegened_and_inlined_items = codegened_and_inlined_items;\n \n     providers.is_codegened_item = |tcx, def_id| {\n         let (all_mono_items, _) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);"}]}