{"sha": "f32d9f4853e878cdd721d5120aea023e901f81d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMmQ5ZjQ4NTNlODc4Y2RkNzIxZDUxMjBhZWEwMjNlOTAxZjgxZDQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-05-02T21:22:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-05-02T21:36:04Z"}, "message": "Remove unused sp_size arg passed through walk_vec{1,2} in shape code.", "tree": {"sha": "6123d4fbfe691d04c00bd82cfb1d91d8b6b88d48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6123d4fbfe691d04c00bd82cfb1d91d8b6b88d48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f32d9f4853e878cdd721d5120aea023e901f81d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f32d9f4853e878cdd721d5120aea023e901f81d4", "html_url": "https://github.com/rust-lang/rust/commit/f32d9f4853e878cdd721d5120aea023e901f81d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f32d9f4853e878cdd721d5120aea023e901f81d4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc6c3a8946981740f2f59c80bc259593c700fb46", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6c3a8946981740f2f59c80bc259593c700fb46", "html_url": "https://github.com/rust-lang/rust/commit/dc6c3a8946981740f2f59c80bc259593c700fb46"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "6322c5287917964cae03cade1966ef3139bb335f", "filename": "src/rt/rust_box_annihilator.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_box_annihilator.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_box_annihilator.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_box_annihilator.cpp?ref=f32d9f4853e878cdd721d5120aea023e901f81d4", "patch": "@@ -43,7 +43,7 @@ class annihilator : public shape::data<annihilator,shape::ptr> {\n         : shape::data<annihilator,shape::ptr>(in_task, in_align, in_sp,\n                                         in_params, in_tables, in_data) {}\n \n-    void walk_vec2(bool is_pod, uint16_t sp_size) {\n+    void walk_vec2(bool is_pod) {\n         void *vec = shape::get_dp<void *>(dp);\n         walk_vec2(is_pod, get_vec_data_range(dp));\n         task->kernel->free(vec);"}, {"sha": "0b75d856f81b3d1731760048453a5e1884658f0b", "filename": "src/rt/rust_cc.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_cc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_cc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_cc.cpp?ref=f32d9f4853e878cdd721d5120aea023e901f81d4", "patch": "@@ -73,7 +73,7 @@ class irc : public shape::data<irc,shape::ptr> {\n                                   in_tables, in_data),\n       ircs(in_ircs) {}\n \n-    void walk_vec2(bool is_pod, uint16_t sp_size) {\n+    void walk_vec2(bool is_pod) {\n         if (is_pod || shape::get_dp<void *>(dp) == NULL)\n             return;     // There can't be any outbound pointers from this.\n \n@@ -305,7 +305,7 @@ class mark : public shape::data<mark,shape::ptr> {\n                                    in_tables, in_data),\n       marked(in_marked) {}\n \n-    void walk_vec2(bool is_pod, uint16_t sp_size) {\n+    void walk_vec2(bool is_pod) {\n         if (is_pod || shape::get_dp<void *>(dp) == NULL)\n             return;     // There can't be any outbound pointers from this.\n "}, {"sha": "0413b7f94936a838e038eab4cfb84b738e6d82bc", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=f32d9f4853e878cdd721d5120aea023e901f81d4", "patch": "@@ -337,7 +337,7 @@ class cmp : public data<cmp,ptr_pair> {\n                          in_dp),\n       result(0) {}\n \n-    void walk_vec2(bool is_pod, uint16_t sp_size) {\n+    void walk_vec2(bool is_pod) {\n         walk_vec2(is_pod, get_vec_data_range(dp));\n     }\n "}, {"sha": "3aaea6f739c4604d4d47cc746959e9ed5ae58983", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/f32d9f4853e878cdd721d5120aea023e901f81d4/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=f32d9f4853e878cdd721d5120aea023e901f81d4", "patch": "@@ -429,7 +429,7 @@ ctxt<T>::walk_vec0() {\n     uint16_t sp_size = get_u16_bump(sp);\n     const uint8_t *end_sp = sp + sp_size;\n \n-    static_cast<T *>(this)->walk_vec1(is_pod, sp_size);\n+    static_cast<T *>(this)->walk_vec1(is_pod);\n \n     sp = end_sp;\n }\n@@ -569,7 +569,7 @@ class print : public ctxt<print> {\n                    const type_param *params, const uint8_t *end_sp);\n     void walk_var1(uint8_t param);\n \n-    void walk_vec1(bool is_pod, uint16_t sp_size) {\n+    void walk_vec1(bool is_pod) {\n         DPRINT(\"vec<\"); walk(); DPRINT(\">\");\n     }\n     void walk_uniq1() {\n@@ -645,7 +645,7 @@ class size_of : public ctxt<size_of> {\n     void walk_tydesc1(char) { sa.set(sizeof(void *),   sizeof(void *)); }\n     void walk_closure1();\n \n-    void walk_vec1(bool is_pod, uint16_t sp_size) {\n+    void walk_vec1(bool is_pod) {\n         sa.set(sizeof(void *), sizeof(void *));\n     }\n \n@@ -903,8 +903,8 @@ class data : public ctxt< data<T,U> > {\n         static_cast<T *>(this)->walk_struct2(end_sp);\n     }\n \n-    void walk_vec1(bool is_pod, uint16_t sp_size) {\n-        DATA_SIMPLE(void *, walk_vec2(is_pod, sp_size));\n+    void walk_vec1(bool is_pod) {\n+        DATA_SIMPLE(void *, walk_vec2(is_pod));\n     }\n \n     void walk_box1() { DATA_SIMPLE(void *, walk_box2()); }\n@@ -1102,7 +1102,7 @@ class log : public data<log,ptr> {\n       out(other.out),\n       prefix(\"\") {}\n \n-    void walk_vec2(bool is_pod, uint16_t sp_size) {\n+    void walk_vec2(bool is_pod) {\n         if (!get_dp<void *>(dp))\n             out << prefix << \"(null)\";\n         else"}]}