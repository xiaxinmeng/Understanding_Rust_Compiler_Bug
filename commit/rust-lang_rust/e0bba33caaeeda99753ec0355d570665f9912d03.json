{"sha": "e0bba33caaeeda99753ec0355d570665f9912d03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYmJhMzNjYWFlZWRhOTk3NTNlYzAzNTVkNTcwNjY1Zjk5MTJkMDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-14T03:44:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-21T01:23:47Z"}, "message": "Rename std::task::spawn_inner to unsafe_spawn_inner\n\nDelete the rest of the old, unused spawn functions.\n\nIssue #1022", "tree": {"sha": "256d015519ee21f88d8c0028f0d20b7f20fd29f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/256d015519ee21f88d8c0028f0d20b7f20fd29f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0bba33caaeeda99753ec0355d570665f9912d03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0bba33caaeeda99753ec0355d570665f9912d03", "html_url": "https://github.com/rust-lang/rust/commit/e0bba33caaeeda99753ec0355d570665f9912d03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0bba33caaeeda99753ec0355d570665f9912d03/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "446aea11d0dcb668c796c666dcb48dd89e69fbc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/446aea11d0dcb668c796c666dcb48dd89e69fbc7", "html_url": "https://github.com/rust-lang/rust/commit/446aea11d0dcb668c796c666dcb48dd89e69fbc7"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "a0c1e37aff1ba6752d32bef3e6b74822b7d58e1e", "filename": "src/lib/task.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e0bba33caaeeda99753ec0355d570665f9912d03/src%2Flib%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0bba33caaeeda99753ec0355d570665f9912d03/src%2Flib%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftask.rs?ref=e0bba33caaeeda99753ec0355d570665f9912d03", "patch": "@@ -131,23 +131,13 @@ fn spawn_inner2<~T>(-data: T, f: fn#(T),\n     let dataptr: *u8 = unsafe::reinterpret_cast(data);\n     unsafe::leak(data);\n     let wrapped = bind wrapper(dataptr, f);\n-    ret spawn_inner(wrapped, notify);\n+    ret unsafe_spawn_inner(wrapped, notify);\n }\n \n-fn spawn(-thunk: fn()) -> task { spawn_inner(thunk, none) }\n-\n-fn spawn_notify(-thunk: fn(), notify: comm::chan<task_notification>) -> task {\n-    spawn_inner(thunk, some(notify))\n-}\n-\n-fn spawn_joinable(-thunk: fn()) -> joinable_task {\n-    let p = comm::port::<task_notification>();\n-    let id = spawn_notify(thunk, comm::chan::<task_notification>(p));\n-    ret (id, p);\n-}\n-\n-// FIXME: make this a fn~ once those are supported.\n-fn spawn_inner(-thunk: fn(), notify: option<comm::chan<task_notification>>) ->\n+// FIXME: This is the old spawn function that spawns a shared closure.\n+// It is a hack and needs to be rewritten.\n+fn unsafe_spawn_inner(-thunk: fn(),\n+                      notify: option<comm::chan<task_notification>>) ->\n    task_id unsafe {\n     let id = rustrt::new_task();\n "}]}