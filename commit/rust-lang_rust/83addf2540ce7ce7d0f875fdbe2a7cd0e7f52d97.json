{"sha": "83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "node_id": "C_kwDOAAsO6NoAKDgzYWRkZjI1NDBjZTdjZTdkMGY4NzVmZGJlMmE3Y2QwZTdmNTJkOTc", "commit": {"author": {"name": "Miguel Ojeda", "email": "ojeda@kernel.org", "date": "2022-06-28T23:09:02Z"}, "committer": {"name": "Miguel Ojeda", "email": "ojeda@kernel.org", "date": "2022-06-29T02:44:23Z"}, "message": "alloc: fix `no_global_oom_handling` warnings\n\nRust 1.62.0 introduced a couple new `unused_imports` warnings\nin `no_global_oom_handling` builds, making a total of 5 warnings:\n\n```txt\nwarning: unused import: `Unsize`\n --> library/alloc/src/boxed/thin.rs:6:33\n  |\n6 | use core::marker::{PhantomData, Unsize};\n  |                                 ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `from_fn`\n  --> library/alloc/src/string.rs:51:18\n   |\n51 | use core::iter::{from_fn, FusedIterator};\n   |                  ^^^^^^^\n\nwarning: unused import: `core::ops::Deref`\n  --> library/alloc/src/vec/into_iter.rs:12:5\n   |\n12 | use core::ops::Deref;\n   |     ^^^^^^^^^^^^^^^^\n\nwarning: associated function `shrink` is never used\n   --> library/alloc/src/raw_vec.rs:424:8\n    |\n424 |     fn shrink(&mut self, cap: usize) -> Result<(), TryReserveError> {\n    |        ^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: associated function `forget_remaining_elements` is never used\n   --> library/alloc/src/vec/into_iter.rs:126:19\n    |\n126 |     pub(crate) fn forget_remaining_elements(&mut self) {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\nThis patch cleans them so that projects compiling `alloc` without\ninfallible allocations do not see the warnings. It also enables\nthe use of `-Dwarnings`.\n\nThe couple `dead_code` ones may be reverted when some fallible\nallocation support starts using them.\n\nSigned-off-by: Miguel Ojeda <ojeda@kernel.org>", "tree": {"sha": "a3c0cf3caf5b40d733f17e9228cf96d0b3d82bf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3c0cf3caf5b40d733f17e9228cf96d0b3d82bf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "html_url": "https://github.com/rust-lang/rust/commit/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/comments", "author": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2953edc7b7a00d14c4ba940ebb46b4e7148a9d71", "url": "https://api.github.com/repos/rust-lang/rust/commits/2953edc7b7a00d14c4ba940ebb46b4e7148a9d71", "html_url": "https://github.com/rust-lang/rust/commit/2953edc7b7a00d14c4ba940ebb46b4e7148a9d71"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "09308d4d0906d3e1abcd7d5403e728477f52906f", "filename": "library/alloc/src/boxed/thin.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs?ref=83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "patch": "@@ -3,7 +3,9 @@\n // by matthieu-m\n use crate::alloc::{self, Layout, LayoutError};\n use core::fmt::{self, Debug, Display, Formatter};\n-use core::marker::{PhantomData, Unsize};\n+use core::marker::PhantomData;\n+#[cfg(not(no_global_oom_handling))]\n+use core::marker::Unsize;\n use core::mem;\n use core::ops::{Deref, DerefMut};\n use core::ptr::Pointee;"}, {"sha": "b0f4529abdfa5eb0f48727edb02952895c91d9b2", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "patch": "@@ -421,6 +421,7 @@ impl<T, A: Allocator> RawVec<T, A> {\n         Ok(())\n     }\n \n+    #[cfg(not(no_global_oom_handling))]\n     fn shrink(&mut self, cap: usize) -> Result<(), TryReserveError> {\n         assert!(cap <= self.capacity(), \"Tried to shrink to a larger capacity\");\n "}, {"sha": "b1513e5e0f31c50db71835ad98ebc723e571a961", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "patch": "@@ -46,9 +46,9 @@\n use core::char::{decode_utf16, REPLACEMENT_CHARACTER};\n use core::fmt;\n use core::hash;\n+use core::iter::FusedIterator;\n #[cfg(not(no_global_oom_handling))]\n-use core::iter::FromIterator;\n-use core::iter::{from_fn, FusedIterator};\n+use core::iter::{from_fn, FromIterator};\n #[cfg(not(no_global_oom_handling))]\n use core::ops::Add;\n #[cfg(not(no_global_oom_handling))]"}, {"sha": "28979457b7fd389049ee21ef83308be1264949c5", "filename": "library/alloc/src/vec/into_iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs?ref=83addf2540ce7ce7d0f875fdbe2a7cd0e7f52d97", "patch": "@@ -9,6 +9,7 @@ use core::iter::{\n };\n use core::marker::PhantomData;\n use core::mem::{self, ManuallyDrop};\n+#[cfg(not(no_global_oom_handling))]\n use core::ops::Deref;\n use core::ptr::{self, NonNull};\n use core::slice::{self};\n@@ -123,6 +124,7 @@ impl<T, A: Allocator> IntoIter<T, A> {\n     }\n \n     /// Forgets to Drop the remaining elements while still allowing the backing allocation to be freed.\n+    #[cfg(not(no_global_oom_handling))]\n     pub(crate) fn forget_remaining_elements(&mut self) {\n         self.ptr = self.end;\n     }"}]}