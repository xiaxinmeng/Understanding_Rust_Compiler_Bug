{"sha": "13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYzFhMDE5MzY2MDVlYmQ2MTVlZTQ1OGE3ZWIwMmNhODlmOWViZGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-04T01:04:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-04T01:04:48Z"}, "message": "Auto merge of #6416 - deg4uss3r:map_err_restricted, r=ebroto\n\nMoved map_err_ignore to restriction and updated help message\n\nThis MR moves map_err_ignore lint from `pedantic` to the `restriction` category of lints and updates the help message to give the user an option to ignore the lint by naming the closure variable e.g. `.map_err(|_ignored| ...`\n\n---\n\nchangelog: move map_err_ignore to restriction category", "tree": {"sha": "9836761bc773c1f942a32fa71a3c6ed91ce8daa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9836761bc773c1f942a32fa71a3c6ed91ce8daa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "html_url": "https://github.com/rust-lang/rust/commit/13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f22b1c58a0b2d5051c45283a88ea101d66e75ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f22b1c58a0b2d5051c45283a88ea101d66e75ef", "html_url": "https://github.com/rust-lang/rust/commit/7f22b1c58a0b2d5051c45283a88ea101d66e75ef"}, {"sha": "5f821fbcf1687c4476c117bcab5a3b2a4a977d4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f821fbcf1687c4476c117bcab5a3b2a4a977d4c", "html_url": "https://github.com/rust-lang/rust/commit/5f821fbcf1687c4476c117bcab5a3b2a4a977d4c"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "a861a34aeb757a104e1fb92dbe5296384c74d4ab", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "patch": "@@ -1217,6 +1217,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&integer_division::INTEGER_DIVISION),\n         LintId::of(&let_underscore::LET_UNDERSCORE_MUST_USE),\n         LintId::of(&literal_representation::DECIMAL_LITERAL_REPRESENTATION),\n+        LintId::of(&map_err_ignore::MAP_ERR_IGNORE),\n         LintId::of(&matches::REST_PAT_IN_FULLY_BOUND_STRUCTS),\n         LintId::of(&matches::WILDCARD_ENUM_MATCH_ARM),\n         LintId::of(&mem_forget::MEM_FORGET),\n@@ -1283,7 +1284,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&loops::EXPLICIT_ITER_LOOP),\n         LintId::of(&macro_use::MACRO_USE_IMPORTS),\n         LintId::of(&manual_ok_or::MANUAL_OK_OR),\n-        LintId::of(&map_err_ignore::MAP_ERR_IGNORE),\n         LintId::of(&match_on_vec_items::MATCH_ON_VEC_ITEMS),\n         LintId::of(&matches::MATCH_BOOL),\n         LintId::of(&matches::MATCH_SAME_ARMS),"}, {"sha": "f3c0515b9bcde0e9e4522a9a517dc03e93fa8d38", "filename": "clippy_lints/src/map_err_ignore.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/clippy_lints%2Fsrc%2Fmap_err_ignore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/clippy_lints%2Fsrc%2Fmap_err_ignore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_err_ignore.rs?ref=13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "patch": "@@ -99,7 +99,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     pub MAP_ERR_IGNORE,\n-    pedantic,\n+    restriction,\n     \"`map_err` should not ignore the original error\"\n }\n \n@@ -133,9 +133,9 @@ impl<'tcx> LateLintPass<'tcx> for MapErrIgnore {\n                                     cx,\n                                     MAP_ERR_IGNORE,\n                                     body_span,\n-                                    \"`map_err(|_|...` ignores the original error\",\n+                                    \"`map_err(|_|...` wildcard pattern discards the original error\",\n                                     None,\n-                                    \"Consider wrapping the error in an enum variant\",\n+                                    \"Consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)\",\n                                 );\n                             }\n                         }"}, {"sha": "00e037843f8c29e47afffe937d9ddc6052ee190c", "filename": "tests/ui/map_err.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/tests%2Fui%2Fmap_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/tests%2Fui%2Fmap_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_err.rs?ref=13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "patch": "@@ -22,5 +22,9 @@ fn main() -> Result<(), Errors> {\n \n     println!(\"{:?}\", x.map_err(|_| Errors::Ignored));\n \n+    // Should not warn you because you explicitly ignore the parameter\n+    // using a named wildcard value\n+    println!(\"{:?}\", x.map_err(|_foo| Errors::Ignored));\n+\n     Ok(())\n }"}, {"sha": "8ee2941790d3542d243502c8dd81135480830d06", "filename": "tests/ui/map_err.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/tests%2Fui%2Fmap_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13c1a01936605ebd615ee458a7eb02ca89f9ebdb/tests%2Fui%2Fmap_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_err.stderr?ref=13c1a01936605ebd615ee458a7eb02ca89f9ebdb", "patch": "@@ -1,11 +1,11 @@\n-error: `map_err(|_|...` ignores the original error\n+error: `map_err(|_|...` wildcard pattern discards the original error\n   --> $DIR/map_err.rs:23:32\n    |\n LL |     println!(\"{:?}\", x.map_err(|_| Errors::Ignored));\n    |                                ^^^\n    |\n    = note: `-D clippy::map-err-ignore` implied by `-D warnings`\n-   = help: Consider wrapping the error in an enum variant\n+   = help: Consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)\n \n error: aborting due to previous error\n "}]}