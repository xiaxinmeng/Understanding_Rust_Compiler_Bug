{"sha": "f0174fcbee229c67ebfdae9012628891a55be7aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMTc0ZmNiZWUyMjljNjdlYmZkYWU5MDEyNjI4ODkxYTU1YmU3YWE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-06-08T06:19:44Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-06-08T21:38:38Z"}, "message": "use the slice_pat hack in libstd too", "tree": {"sha": "a4d4ab0ecd2e14ba3637ad4349b3c57858e59055", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4d4ab0ecd2e14ba3637ad4349b3c57858e59055"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0174fcbee229c67ebfdae9012628891a55be7aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0174fcbee229c67ebfdae9012628891a55be7aa", "html_url": "https://github.com/rust-lang/rust/commit/f0174fcbee229c67ebfdae9012628891a55be7aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0174fcbee229c67ebfdae9012628891a55be7aa/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b1abf5c65d4019542ff3cf5daa15c0e22e7e012", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b1abf5c65d4019542ff3cf5daa15c0e22e7e012", "html_url": "https://github.com/rust-lang/rust/commit/9b1abf5c65d4019542ff3cf5daa15c0e22e7e012"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "135ea8a5e7cb40412c310d8a922df41ba085cd33", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f0174fcbee229c67ebfdae9012628891a55be7aa/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0174fcbee229c67ebfdae9012628891a55be7aa/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=f0174fcbee229c67ebfdae9012628891a55be7aa", "patch": "@@ -467,3 +467,15 @@ pub mod __rand {\n // the rustdoc documentation for primitive types. Using `include!`\n // because rustdoc only looks for these modules at the crate level.\n include!(\"primitive_docs.rs\");\n+\n+// FIXME(stage0): remove this after a snapshot\n+// HACK: this is needed because the interpretation of slice\n+// patterns changed between stage0 and now.\n+#[cfg(stage0)]\n+fn slice_pat<'a, 'b, T>(t: &'a &'b [T]) -> &'a &'b [T] {\n+    t\n+}\n+#[cfg(not(stage0))]\n+fn slice_pat<'a, 'b, T>(t: &'a &'b [T]) -> &'b [T] {\n+    *t\n+}"}, {"sha": "d705b8986d0b1108d23985c1820004aa36ed9296", "filename": "src/libstd/sys/common/wtf8.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f0174fcbee229c67ebfdae9012628891a55be7aa/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0174fcbee229c67ebfdae9012628891a55be7aa/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs?ref=f0174fcbee229c67ebfdae9012628891a55be7aa", "patch": "@@ -560,20 +560,15 @@ impl Wtf8 {\n         }\n     }\n \n-    // FIXME(stage0): use slice patterns after snapshot\n     #[inline]\n     fn final_lead_surrogate(&self) -> Option<u16> {\n         let len = self.len();\n         if len < 3 {\n             return None\n         }\n-        if self.bytes[len-3] == 0xed &&\n-            self.bytes[len-2] >= 0xa0 &&\n-            self.bytes[len-2] <= 0xaf\n-        {\n-            Some(decode_surrogate(self.bytes[len-2], self.bytes[len-1]))\n-        } else {\n-            None\n+        match ::slice_pat(&&self.bytes[(len - 3)..]) {\n+            &[0xED, b2 @ 0xA0...0xAF, b3] => Some(decode_surrogate(b2, b3)),\n+            _ => None\n         }\n     }\n \n@@ -583,13 +578,9 @@ impl Wtf8 {\n         if len < 3 {\n             return None\n         }\n-        if self.bytes[0] == 0xed &&\n-            self.bytes[1] >= 0xb0 &&\n-            self.bytes[1] <= 0xbf\n-        {\n-            Some(decode_surrogate(self.bytes[1], self.bytes[2]))\n-        } else {\n-            None\n+        match ::slice_pat(&&self.bytes[..3]) {\n+            &[0xED, b2 @ 0xB0...0xBF, b3] => Some(decode_surrogate(b2, b3)),\n+            _ => None\n         }\n     }\n }"}, {"sha": "c243e890526f78526d1777c7de94862f0b8f87c6", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f0174fcbee229c67ebfdae9012628891a55be7aa/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0174fcbee229c67ebfdae9012628891a55be7aa/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=f0174fcbee229c67ebfdae9012628891a55be7aa", "patch": "@@ -117,10 +117,10 @@ impl Drop for FindNextFileHandle {\n \n impl DirEntry {\n     fn new(root: &Arc<PathBuf>, wfd: &c::WIN32_FIND_DATAW) -> Option<DirEntry> {\n-        match &wfd.cFileName[0..3] {\n+        match ::slice_pat(&&wfd.cFileName[0..3]) {\n             // check for '.' and '..'\n-            [46, 0, ..] |\n-            [46, 46, 0, ..] => return None,\n+            &[46, 0, ..] |\n+            &[46, 46, 0, ..] => return None,\n             _ => {}\n         }\n "}]}