{"sha": "637dbb26a72598dfe5649f29c80ff53d3fb6098d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzN2RiYjI2YTcyNTk4ZGZlNTY0OWYyOWM4MGZmNTNkM2ZiNjA5OGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-10T11:39:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-10T11:39:13Z"}, "message": "Merge #9548\n\n9548: add: Adding self keyword completion in complete_fn_param r=lnicola a=feniljain\n\nSolves #9522\r\n\r\nI haven't added Arc<self> for now as there were some conflicting opinions on it\n\nCo-authored-by: vi_mi <fenil.jain2018@vitstudent.ac.in>", "tree": {"sha": "070761466c2b633c50429fe4b7a2f7ac40150d7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/070761466c2b633c50429fe4b7a2f7ac40150d7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/637dbb26a72598dfe5649f29c80ff53d3fb6098d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg6YbhCRBK7hj4Ov3rIwAA1qYIAEtqGv5ctV5y+IXZgo/0GGkI\nOAVU8otZsyKHpDfp36RgmtEPdrtMiQCCn18xhLDbt/B1k+T+ya0i/ltB9qGEHfeW\nldPA1K2Fc8NYE7ulYopMW5YkSBIZ5oEH2uJ7wotnUA/pu+mmECbzgESoQb7xw9f6\nE37JHEOroKAgqJEr7JAbkLx+UxNkDKoXQ3Vss895hofjVm/9vZGZPFIpUuzOSIUv\nQwPweqvqXMm1FaZvR9XEwlw4vhi3z14YjqoYZfBuK0n+IbdtB60ptMnuZp+jth1m\nvkaXMYUbpJex9V/kWZ6Pfn0hy+/c/6xUhCX4V1CYuhPuZbBY/ZhicX/ub5PkzdM=\n=K4SH\n-----END PGP SIGNATURE-----\n", "payload": "tree 070761466c2b633c50429fe4b7a2f7ac40150d7a\nparent 10273a7d63678d7159b38f8164de272255151825\nparent 1338ddbe80fda78d6f48d9c1e303da7c462858de\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625917153 +0000\ncommitter GitHub <noreply@github.com> 1625917153 +0000\n\nMerge #9548\n\n9548: add: Adding self keyword completion in complete_fn_param r=lnicola a=feniljain\n\nSolves #9522\r\n\r\nI haven't added Arc<self> for now as there were some conflicting opinions on it\n\nCo-authored-by: vi_mi <fenil.jain2018@vitstudent.ac.in>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/637dbb26a72598dfe5649f29c80ff53d3fb6098d", "html_url": "https://github.com/rust-lang/rust/commit/637dbb26a72598dfe5649f29c80ff53d3fb6098d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/637dbb26a72598dfe5649f29c80ff53d3fb6098d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10273a7d63678d7159b38f8164de272255151825", "url": "https://api.github.com/repos/rust-lang/rust/commits/10273a7d63678d7159b38f8164de272255151825", "html_url": "https://github.com/rust-lang/rust/commit/10273a7d63678d7159b38f8164de272255151825"}, {"sha": "1338ddbe80fda78d6f48d9c1e303da7c462858de", "url": "https://api.github.com/repos/rust-lang/rust/commits/1338ddbe80fda78d6f48d9c1e303da7c462858de", "html_url": "https://github.com/rust-lang/rust/commit/1338ddbe80fda78d6f48d9c1e303da7c462858de"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "7805da24abd6681ec834f8b1510582ea622514a6", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 45, "deletions": 7, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/637dbb26a72598dfe5649f29c80ff53d3fb6098d/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/637dbb26a72598dfe5649f29c80ff53d3fb6098d/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=637dbb26a72598dfe5649f29c80ff53d3fb6098d", "patch": "@@ -12,9 +12,9 @@ use crate::{CompletionContext, CompletionItem, CompletionItemKind, CompletionKin\n /// functions in a file have a `spam: &mut Spam` parameter, a completion with\n /// `spam: &mut Spam` insert text/label and `spam` lookup string will be\n /// suggested.\n-pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext) {\n+pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     if !ctx.is_param {\n-        return;\n+        return None;\n     }\n \n     let mut params = FxHashMap::default();\n@@ -53,11 +53,27 @@ pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n         };\n     }\n \n-    params.into_iter().for_each(|(label, lookup)| {\n-        let mut item = CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label);\n-        item.kind(CompletionItemKind::Binding).lookup_by(lookup);\n-        item.add_to(acc)\n-    });\n+    let self_completion_items = [\"self\", \"&self\", \"mut self\", \"&mut self\"];\n+    if ctx.impl_def.is_some() && me?.param_list()?.params().next().is_none() {\n+        self_completion_items.iter().for_each(|self_item| {\n+            add_new_item_to_acc(ctx, acc, self_item.to_string(), self_item.to_string())\n+        });\n+    }\n+\n+    params.into_iter().for_each(|(label, lookup)| add_new_item_to_acc(ctx, acc, label, lookup));\n+\n+    Some(())\n+}\n+\n+fn add_new_item_to_acc(\n+    ctx: &CompletionContext,\n+    acc: &mut Completions,\n+    label: String,\n+    lookup: String,\n+) {\n+    let mut item = CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label);\n+    item.kind(CompletionItemKind::Binding).lookup_by(lookup);\n+    item.add_to(acc)\n }\n \n #[cfg(test)]\n@@ -143,4 +159,26 @@ fn foo2($0) {}\n             \"#]],\n         )\n     }\n+\n+    #[test]\n+    fn test_param_completion_self_param() {\n+        check(\n+            r#\"\n+                struct A {}\n+\n+                impl A {\n+                    fn foo(file_id: FileId) {}\n+                    fn new($0) {\n+                    }\n+                }\n+            \"#,\n+            expect![[r#\"\n+                bn self\n+                bn &self\n+                bn mut self\n+                bn &mut self\n+                bn file_id: FileId\n+            \"#]],\n+        )\n+    }\n }"}]}