{"sha": "85941c72497e69653b847744a447ae51b433d4ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1OTQxYzcyNDk3ZTY5NjUzYjg0Nzc0NGE0NDdhZTUxYjQzM2Q0YmE=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-18T14:30:12Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-18T14:49:56Z"}, "message": "Rename write/read os string functions", "tree": {"sha": "6ba631f9edb1fb10b928418bfdf624c1cda6019b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ba631f9edb1fb10b928418bfdf624c1cda6019b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85941c72497e69653b847744a447ae51b433d4ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85941c72497e69653b847744a447ae51b433d4ba", "html_url": "https://github.com/rust-lang/rust/commit/85941c72497e69653b847744a447ae51b433d4ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85941c72497e69653b847744a447ae51b433d4ba/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68fec4b3fe3a86a01e39d31d05a8438c07845aba", "url": "https://api.github.com/repos/rust-lang/rust/commits/68fec4b3fe3a86a01e39d31d05a8438c07845aba", "html_url": "https://github.com/rust-lang/rust/commit/68fec4b3fe3a86a01e39d31d05a8438c07845aba"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "454f7d2c2f80e2a12061fb0a300a76f2af81f479", "filename": "src/helpers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85941c72497e69653b847744a447ae51b433d4ba/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85941c72497e69653b847744a447ae51b433d4ba/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=85941c72497e69653b847744a447ae51b433d4ba", "patch": "@@ -346,12 +346,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(())\n     }\n \n-    fn read_os_string(&mut self, scalar: Scalar<Tag>) -> InterpResult<'tcx, OsString> {\n+    fn read_os_string_from_c_string(&mut self, scalar: Scalar<Tag>) -> InterpResult<'tcx, OsString> {\n         let bytes = self.eval_context_mut().memory.read_c_str(scalar)?;\n         Ok(bytes_to_os_str(bytes)?.into())\n     }\n \n-    fn write_os_str(&mut self, os_str: &OsStr, ptr: Pointer<Tag>, size: u64) -> InterpResult<'tcx> {\n+    fn write_os_str_to_c_string(&mut self, os_str: &OsStr, ptr: Pointer<Tag>, size: u64) -> InterpResult<'tcx> {\n         let bytes = os_str_to_bytes(os_str)?;\n         // If `size` is smaller or equal than `bytes.len()`, writing `bytes` plus the required null\n         // terminator to memory using the `ptr` pointer would cause an overflow."}, {"sha": "7e2df4f985d19e48449c1693356e226a7303ce46", "filename": "src/shims/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85941c72497e69653b847744a447ae51b433d4ba/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85941c72497e69653b847744a447ae51b433d4ba/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=85941c72497e69653b847744a447ae51b433d4ba", "patch": "@@ -128,7 +128,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // If we cannot get the current directory, we return null\n         match env::current_dir() {\n             Ok(cwd) => {\n-                if this.write_os_str(&OsString::from(cwd), buf, size).is_ok() {\n+                if this.write_os_str_to_c_string(&OsString::from(cwd), buf, size).is_ok() {\n                     return Ok(Scalar::Ptr(buf));\n                 }\n                 let erange = this.eval_libc(\"ERANGE\")?;\n@@ -144,7 +144,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         this.check_no_isolation(\"chdir\")?;\n \n-        let path = this.read_os_string(this.read_scalar(path_op)?.not_undef()?)?;\n+        let path = this.read_os_string_from_c_string(this.read_scalar(path_op)?.not_undef()?)?;\n \n         match env::set_current_dir(path) {\n             Ok(()) => Ok(0),"}, {"sha": "7cc574f05f1360a6010157cfb91b0ea75fa29aaa", "filename": "src/shims/fs.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85941c72497e69653b847744a447ae51b433d4ba/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85941c72497e69653b847744a447ae51b433d4ba/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=85941c72497e69653b847744a447ae51b433d4ba", "patch": "@@ -94,7 +94,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             throw_unsup_format!(\"unsupported flags {:#x}\", flag & !mirror);\n         }\n \n-        let path: std::path::PathBuf = this.read_os_string(this.read_scalar(path_op)?.not_undef()?)?.into();\n+        let path: std::path::PathBuf = this.read_os_string_from_c_string(this.read_scalar(path_op)?.not_undef()?)?.into();\n \n         let fd = options.open(path).map(|file| {\n             let mut fh = &mut this.machine.file_handler;\n@@ -210,11 +210,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         this.check_no_isolation(\"unlink\")?;\n \n-        let path_bytes = this\n-            .memory\n-            .read_c_str(this.read_scalar(path_op)?.not_undef()?)?;\n-        let path = std::str::from_utf8(path_bytes)\n-            .map_err(|_| err_unsup_format!(\"{:?} is not a valid utf-8 string\", path_bytes))?;\n+        let path = this.read_os_string_from_c_string(this.read_scalar(path_op)?.not_undef()?)?;\n \n         let result = remove_file(path).map(|_| 0);\n "}]}