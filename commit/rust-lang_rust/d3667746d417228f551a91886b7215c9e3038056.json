{"sha": "d3667746d417228f551a91886b7215c9e3038056", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNjY3NzQ2ZDQxNzIyOGY1NTFhOTE4ODZiNzIxNWM5ZTMwMzgwNTY=", "commit": {"author": {"name": "Carol Nichols", "email": "carol.nichols@gmail.com", "date": "2015-05-02T20:28:53Z"}, "committer": {"name": "Carol Nichols", "email": "carol.nichols@gmail.com", "date": "2015-05-04T00:16:03Z"}, "message": "Update tests to not use old ~ syntax", "tree": {"sha": "b39a9a9ae4ac6aa14f42c63e697c606d3c440478", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b39a9a9ae4ac6aa14f42c63e697c606d3c440478"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3667746d417228f551a91886b7215c9e3038056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3667746d417228f551a91886b7215c9e3038056", "html_url": "https://github.com/rust-lang/rust/commit/d3667746d417228f551a91886b7215c9e3038056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3667746d417228f551a91886b7215c9e3038056/comments", "author": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "232b2022b515fdba7e06354c635998cbc0d76114", "url": "https://api.github.com/repos/rust-lang/rust/commits/232b2022b515fdba7e06354c635998cbc0d76114", "html_url": "https://github.com/rust-lang/rust/commit/232b2022b515fdba7e06354c635998cbc0d76114"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "dea2a0c5a23f8180c0779c39b6b43f610511b5c3", "filename": "src/test/debuginfo/issue11600.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3667746d417228f551a91886b7215c9e3038056/src%2Ftest%2Fdebuginfo%2Fissue11600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3667746d417228f551a91886b7215c9e3038056/src%2Ftest%2Fdebuginfo%2Fissue11600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue11600.rs?ref=d3667746d417228f551a91886b7215c9e3038056", "patch": "@@ -13,7 +13,7 @@\n // ignore-test\n \n fn main() {\n-    let args : ~[String] = ::std::os::args();\n+    let args : Vec<String> = ::std::os::args();\n     ::std::io::println(args[0]);\n }\n "}, {"sha": "ab75c2064a403667f5edd6168cfacdb25d409e2e", "filename": "src/test/run-pass/issue-4241.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3667746d417228f551a91886b7215c9e3038056/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3667746d417228f551a91886b7215c9e3038056/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4241.rs?ref=d3667746d417228f551a91886b7215c9e3038056", "patch": "@@ -22,8 +22,8 @@ use std::io::{ReaderUtil,WriterUtil};\n enum Result {\n   Nil,\n   Int(isize),\n-  Data(~[u8]),\n-  List(~[Result]),\n+  Data(Vec<u8>),\n+  List(Vec<Result>),\n   Error(String),\n   Status(String)\n }\n@@ -35,15 +35,15 @@ fn parse_data(len: usize, io: @io::Reader) -> Result {\n       assert_eq!(bytes.len(), len);\n       Data(bytes)\n   } else {\n-      Data(~[])\n+      Data(vec![])\n   };\n   assert_eq!(io.read_char(), '\\r');\n   assert_eq!(io.read_char(), '\\n');\n   return res;\n }\n \n fn parse_list(len: usize, io: @io::Reader) -> Result {\n-    let mut list: ~[Result] = ~[];\n+    let mut list: Vec<Result> = vec![];\n     for _ in 0..len {\n         let v = match io.read_char() {\n             '$' => parse_bulk(io),\n@@ -72,7 +72,7 @@ fn parse_multi(io: @io::Reader) -> Result {\n     match from_str::<isize>(chop(io.read_line())) {\n     None => panic!(),\n     Some(-1) => Nil,\n-    Some(0) => List(~[]),\n+    Some(0) => List(vec![]),\n     Some(len) if len >= 0 => parse_list(len as usize, io),\n     Some(_) => panic!()\n     }\n@@ -96,7 +96,7 @@ fn parse_response(io: @io::Reader) -> Result {\n     }\n }\n \n-fn cmd_to_string(cmd: ~[String]) -> String {\n+fn cmd_to_string(cmd: Vec<String>) -> String {\n   let mut res = \"*\".to_string();\n   res.push_str(cmd.len().to_string());\n   res.push_str(\"\\r\\n\");\n@@ -107,15 +107,15 @@ fn cmd_to_string(cmd: ~[String]) -> String {\n   res\n }\n \n-fn query(cmd: ~[String], sb: TcpSocketBuf) -> Result {\n+fn query(cmd: Vec<String>, sb: TcpSocketBuf) -> Result {\n   let cmd = cmd_to_string(cmd);\n   //println!(\"{}\", cmd);\n   sb.write_str(cmd);\n   let res = parse_response(@sb as @io::Reader);\n   res\n }\n \n-fn query2(cmd: ~[String]) -> Result {\n+fn query2(cmd: Vec<String>) -> Result {\n   let _cmd = cmd_to_string(cmd);\n     io::with_str_reader(\"$3\\r\\nXXX\\r\\n\".to_string())(|sb| {\n     let res = parse_response(@sb as @io::Reader);"}]}