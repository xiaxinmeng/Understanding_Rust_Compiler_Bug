{"sha": "97bd45b3730c8f09327b6f8ca5133de38269101c", "node_id": "C_kwDOAAsO6NoAKDk3YmQ0NWIzNzMwYzhmMDkzMjdiNmY4Y2E1MTMzZGUzODI2OTEwMWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-20T00:09:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-20T00:09:37Z"}, "message": "Rollup merge of #88361 - WaffleLapkin:patch-2, r=jyn514\n\nMakes docs for references a little less confusing\n\n- Make clear that the `Pointer` trait is related to formatting\n- Make clear that the `Pointer` trait is implemented for references (previously it was confusing to first see that it's implemented and then see it in \"expect\")\n- Make clear that `&T` (shared reference) implements `Send` (if `T: Send + Sync`)", "tree": {"sha": "46c55821cbd779986010b3c5cc8dfd14aa61415c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46c55821cbd779986010b3c5cc8dfd14aa61415c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97bd45b3730c8f09327b6f8ca5133de38269101c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhmDzCCRBK7hj4Ov3rIwAApsEIACpu2bmdKVqhR0wET7xZvZHA\nZkry11/OpvX44v3Esi3IP8auoVilMXsCCY87ccFdz3vRnamspCs4r8n6VVrT6hjk\nY+wmCZLO1rg/daTpBm5VhkQCGr8kdfpQc3WQeU+gymTi9v8snxb/E/r5y8teT2Xk\nyf2Me2SE4LEncMBL0yFcvpPtBUxlFYGFB3hQUyKp4P7wHYNeNjgw5g0gJz5uzy2P\nEheUgND+uvC1BOUtPhLTvvXsPIvBdI8RpZnZpFXaj1T56vC7v2Ff56KM1TOTGS7I\nxs6rB7cF6DtwKkjkEddFkw0SxoB0L4+BGX/2LfdJBXPX8YjZ8z9B6DcU4ANK27I=\n=Tro/\n-----END PGP SIGNATURE-----\n", "payload": "tree 46c55821cbd779986010b3c5cc8dfd14aa61415c\nparent a77da2d454e6caa227a85b16410b95f93495e7e0\nparent cdb0c29a9cf83db18906d7da7e2dbb581044a633\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1637366977 +0100\ncommitter GitHub <noreply@github.com> 1637366977 +0100\n\nRollup merge of #88361 - WaffleLapkin:patch-2, r=jyn514\n\nMakes docs for references a little less confusing\n\n- Make clear that the `Pointer` trait is related to formatting\n- Make clear that the `Pointer` trait is implemented for references (previously it was confusing to first see that it's implemented and then see it in \"expect\")\n- Make clear that `&T` (shared reference) implements `Send` (if `T: Send + Sync`)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97bd45b3730c8f09327b6f8ca5133de38269101c", "html_url": "https://github.com/rust-lang/rust/commit/97bd45b3730c8f09327b6f8ca5133de38269101c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97bd45b3730c8f09327b6f8ca5133de38269101c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a77da2d454e6caa227a85b16410b95f93495e7e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a77da2d454e6caa227a85b16410b95f93495e7e0", "html_url": "https://github.com/rust-lang/rust/commit/a77da2d454e6caa227a85b16410b95f93495e7e0"}, {"sha": "cdb0c29a9cf83db18906d7da7e2dbb581044a633", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb0c29a9cf83db18906d7da7e2dbb581044a633", "html_url": "https://github.com/rust-lang/rust/commit/cdb0c29a9cf83db18906d7da7e2dbb581044a633"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "f47a30c9b5d7dc109b4d402f1c918378615aa373", "filename": "library/core/src/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97bd45b3730c8f09327b6f8ca5133de38269101c/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97bd45b3730c8f09327b6f8ca5133de38269101c/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprimitive_docs.rs?ref=97bd45b3730c8f09327b6f8ca5133de38269101c", "patch": "@@ -1104,11 +1104,10 @@ mod prim_usize {}\n /// * [`Clone`] \\(Note that this will not defer to `T`'s `Clone` implementation if it exists!)\n /// * [`Deref`]\n /// * [`Borrow`]\n-/// * [`Pointer`]\n+/// * [`fmt::Pointer`]\n ///\n /// [`Deref`]: ops::Deref\n /// [`Borrow`]: borrow::Borrow\n-/// [`Pointer`]: fmt::Pointer\n ///\n /// `&mut T` references get all of the above except `Copy` and `Clone` (to prevent creating\n /// multiple simultaneous mutable borrows), plus the following, regardless of the type of its\n@@ -1124,7 +1123,7 @@ mod prim_usize {}\n /// The following traits are implemented on `&T` references if the underlying `T` also implements\n /// that trait:\n ///\n-/// * All the traits in [`std::fmt`] except [`Pointer`] and [`fmt::Write`]\n+/// * All the traits in [`std::fmt`] except [`fmt::Pointer`] (which is implemented regardless of the type of its referent) and [`fmt::Write`]\n /// * [`PartialOrd`]\n /// * [`Ord`]\n /// * [`PartialEq`]\n@@ -1133,9 +1132,9 @@ mod prim_usize {}\n /// * [`Fn`] \\(in addition, `&T` references get [`FnMut`] and [`FnOnce`] if `T: Fn`)\n /// * [`Hash`]\n /// * [`ToSocketAddrs`]\n+/// * [`Send`] \\(`&T` references also require <code>T: [Sync]</code>)\n ///\n /// [`std::fmt`]: fmt\n-/// ['Pointer`]: fmt::Pointer\n /// [`Hash`]: hash::Hash\n #[doc = concat!(\"[`ToSocketAddrs`]: \", include_str!(\"../primitive_docs/net_tosocketaddrs.md\"))]\n ///\n@@ -1150,7 +1149,6 @@ mod prim_usize {}\n /// * [`ExactSizeIterator`]\n /// * [`FusedIterator`]\n /// * [`TrustedLen`]\n-/// * [`Send`] \\(note that `&T` references only get `Send` if <code>T: [Sync]</code>)\n /// * [`io::Write`]\n /// * [`Read`]\n /// * [`Seek`]"}, {"sha": "f47a30c9b5d7dc109b4d402f1c918378615aa373", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97bd45b3730c8f09327b6f8ca5133de38269101c/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97bd45b3730c8f09327b6f8ca5133de38269101c/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=97bd45b3730c8f09327b6f8ca5133de38269101c", "patch": "@@ -1104,11 +1104,10 @@ mod prim_usize {}\n /// * [`Clone`] \\(Note that this will not defer to `T`'s `Clone` implementation if it exists!)\n /// * [`Deref`]\n /// * [`Borrow`]\n-/// * [`Pointer`]\n+/// * [`fmt::Pointer`]\n ///\n /// [`Deref`]: ops::Deref\n /// [`Borrow`]: borrow::Borrow\n-/// [`Pointer`]: fmt::Pointer\n ///\n /// `&mut T` references get all of the above except `Copy` and `Clone` (to prevent creating\n /// multiple simultaneous mutable borrows), plus the following, regardless of the type of its\n@@ -1124,7 +1123,7 @@ mod prim_usize {}\n /// The following traits are implemented on `&T` references if the underlying `T` also implements\n /// that trait:\n ///\n-/// * All the traits in [`std::fmt`] except [`Pointer`] and [`fmt::Write`]\n+/// * All the traits in [`std::fmt`] except [`fmt::Pointer`] (which is implemented regardless of the type of its referent) and [`fmt::Write`]\n /// * [`PartialOrd`]\n /// * [`Ord`]\n /// * [`PartialEq`]\n@@ -1133,9 +1132,9 @@ mod prim_usize {}\n /// * [`Fn`] \\(in addition, `&T` references get [`FnMut`] and [`FnOnce`] if `T: Fn`)\n /// * [`Hash`]\n /// * [`ToSocketAddrs`]\n+/// * [`Send`] \\(`&T` references also require <code>T: [Sync]</code>)\n ///\n /// [`std::fmt`]: fmt\n-/// ['Pointer`]: fmt::Pointer\n /// [`Hash`]: hash::Hash\n #[doc = concat!(\"[`ToSocketAddrs`]: \", include_str!(\"../primitive_docs/net_tosocketaddrs.md\"))]\n ///\n@@ -1150,7 +1149,6 @@ mod prim_usize {}\n /// * [`ExactSizeIterator`]\n /// * [`FusedIterator`]\n /// * [`TrustedLen`]\n-/// * [`Send`] \\(note that `&T` references only get `Send` if <code>T: [Sync]</code>)\n /// * [`io::Write`]\n /// * [`Read`]\n /// * [`Seek`]"}]}