{"sha": "287993c9619c95ccde422032448125b8477e2f6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4Nzk5M2M5NjE5Yzk1Y2NkZTQyMjAzMjQ0ODEyNWI4NDc3ZTJmNmQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T01:58:45Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T02:20:33Z"}, "message": "Remove machinery for halting error output", "tree": {"sha": "003c5ff231c003057c318f3de86b8353a2f79cbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/003c5ff231c003057c318f3de86b8353a2f79cbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/287993c9619c95ccde422032448125b8477e2f6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/287993c9619c95ccde422032448125b8477e2f6d", "html_url": "https://github.com/rust-lang/rust/commit/287993c9619c95ccde422032448125b8477e2f6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/287993c9619c95ccde422032448125b8477e2f6d/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bbc79c5aed7d1457f8448c1723be1a366a20112", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbc79c5aed7d1457f8448c1723be1a366a20112", "html_url": "https://github.com/rust-lang/rust/commit/4bbc79c5aed7d1457f8448c1723be1a366a20112"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "bbfe92ef1413e682835ef6d3bdb98b55f280bc67", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/287993c9619c95ccde422032448125b8477e2f6d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/287993c9619c95ccde422032448125b8477e2f6d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=287993c9619c95ccde422032448125b8477e2f6d", "patch": "@@ -29,8 +29,6 @@ pub enum DiagnosticImportance {\n \n /// An operation that is not *always* allowed in a const context.\n pub trait NonConstOp: std::fmt::Debug {\n-    const STOPS_CONST_CHECKING: bool = false;\n-\n     /// Returns an enum indicating whether this operation is allowed within the given item.\n     fn status_in_item(&self, _ccx: &ConstCx<'_, '_>) -> Status {\n         Status::Forbidden"}, {"sha": "7588c01ed3cb77b5718f3ba27efc24b4e00db2ab", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/287993c9619c95ccde422032448125b8477e2f6d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/287993c9619c95ccde422032448125b8477e2f6d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=287993c9619c95ccde422032448125b8477e2f6d", "patch": "@@ -181,8 +181,6 @@ pub struct Validator<'mir, 'tcx> {\n     /// The span of the current statement.\n     span: Span,\n \n-    const_checking_stopped: bool,\n-\n     error_emitted: bool,\n     secondary_errors: Vec<Diagnostic>,\n }\n@@ -201,7 +199,6 @@ impl Validator<'mir, 'tcx> {\n             span: ccx.body.span,\n             ccx,\n             qualifs: Default::default(),\n-            const_checking_stopped: false,\n             error_emitted: false,\n             secondary_errors: Vec::new(),\n         }\n@@ -289,12 +286,6 @@ impl Validator<'mir, 'tcx> {\n     /// Emits an error at the given `span` if an expression cannot be evaluated in the current\n     /// context.\n     pub fn check_op_spanned<O: NonConstOp>(&mut self, op: O, span: Span) {\n-        // HACK: This is for strict equivalence with the old `qualify_min_const_fn` pass, which\n-        // only emitted one error per function. It should be removed and the test output updated.\n-        if self.const_checking_stopped {\n-            return;\n-        }\n-\n         let gate = match op.status_in_item(self.ccx) {\n             Status::Allowed => return,\n \n@@ -328,10 +319,6 @@ impl Validator<'mir, 'tcx> {\n \n             ops::DiagnosticImportance::Secondary => err.buffer(&mut self.secondary_errors),\n         }\n-\n-        if O::STOPS_CONST_CHECKING {\n-            self.const_checking_stopped = true;\n-        }\n     }\n \n     fn check_static(&mut self, def_id: DefId, span: Span) {"}]}