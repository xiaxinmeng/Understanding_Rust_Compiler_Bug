{"sha": "7c380939517de8f3bddd2ed850a6dfdd6d8fcb49", "node_id": "C_kwDOAAsO6NoAKDdjMzgwOTM5NTE3ZGU4ZjNiZGRkMmVkODUwYTZkZmRkNmQ4ZmNiNDk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-22T18:07:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-22T18:07:33Z"}, "message": "Rollup merge of #95188 - c410-f3r:aqui-vamos-nos, r=petrochenkov\n\n[`macro-metavar-expr`] Fix generated tokens hygiene\n\nOnly uses `Marker` on generated tokens -> https://github.com/rust-lang/rust/issues/83527#issuecomment-1074439425)\n\nI really don't know how to test this PR\n\nr? `@petrochenkov`", "tree": {"sha": "31839e7e6af4c9a02adfe6cc6a2756162213590d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31839e7e6af4c9a02adfe6cc6a2756162213590d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c380939517de8f3bddd2ed850a6dfdd6d8fcb49", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOhBmCRBK7hj4Ov3rIwAAsZsIAHnlDb1EaSW8jS2a8RszlpKp\n16PxGrkMIJXcKqnfyGpZmo9TC8K80T2HCjgKDcPQtC84d7ExpjXDRMOBUN9jU4jC\nGrHnxlAejSVA7t3Ek0T/R0HcVGT16P1XBCaaCkVS9opX3AbNRgHSn9bveL4nGtUk\nzTebQNr2HFXHgZ4jjRb3zVCwSX1Rou0w78DyyozDc8jdto9IBVv9MhM/CROUbRM+\ncCascxSa9P0mkLd2ceaLMJfZuFXgFN+UXInjf7BNg+B+8N6LdpLeM/haToc+Ytq/\nz7u6NgrbgFsmwHiy8RO/Md4R6m2HPHhKCUJXyiYLDhEzMULgnfi0ckRI48k4p/g=\n=s/nS\n-----END PGP SIGNATURE-----\n", "payload": "tree 31839e7e6af4c9a02adfe6cc6a2756162213590d\nparent 3ea44938e21f0de8ae7d4f6399a8a30f97867c70\nparent 74e7313e0e425260da26a61e8ee8bbf80a65f014\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1647972453 +0100\ncommitter GitHub <noreply@github.com> 1647972453 +0100\n\nRollup merge of #95188 - c410-f3r:aqui-vamos-nos, r=petrochenkov\n\n[`macro-metavar-expr`] Fix generated tokens hygiene\n\nOnly uses `Marker` on generated tokens -> https://github.com/rust-lang/rust/issues/83527#issuecomment-1074439425)\n\nI really don't know how to test this PR\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c380939517de8f3bddd2ed850a6dfdd6d8fcb49", "html_url": "https://github.com/rust-lang/rust/commit/7c380939517de8f3bddd2ed850a6dfdd6d8fcb49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c380939517de8f3bddd2ed850a6dfdd6d8fcb49/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ea44938e21f0de8ae7d4f6399a8a30f97867c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea44938e21f0de8ae7d4f6399a8a30f97867c70", "html_url": "https://github.com/rust-lang/rust/commit/3ea44938e21f0de8ae7d4f6399a8a30f97867c70"}, {"sha": "74e7313e0e425260da26a61e8ee8bbf80a65f014", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e7313e0e425260da26a61e8ee8bbf80a65f014", "html_url": "https://github.com/rust-lang/rust/commit/74e7313e0e425260da26a61e8ee8bbf80a65f014"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "e8a1e61376fe5e60ee0cb99094559b46a1d27028", "filename": "compiler/rustc_expand/src/mbe/transcribe.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7c380939517de8f3bddd2ed850a6dfdd6d8fcb49/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c380939517de8f3bddd2ed850a6dfdd6d8fcb49/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs?ref=7c380939517de8f3bddd2ed850a6dfdd6d8fcb49", "patch": "@@ -257,7 +257,7 @@ pub(super) fn transcribe<'a>(\n \n             // Replace meta-variable expressions with the result of their expansion.\n             mbe::TokenTree::MetaVarExpr(sp, expr) => {\n-                transcribe_metavar_expr(cx, expr, interp, &repeats, &mut result, &sp)?;\n+                transcribe_metavar_expr(cx, expr, interp, &mut marker, &repeats, &mut result, &sp)?;\n             }\n \n             // If we are entering a new delimiter, we push its contents to the `stack` to be\n@@ -513,17 +513,23 @@ fn transcribe_metavar_expr<'a>(\n     cx: &ExtCtxt<'a>,\n     expr: MetaVarExpr,\n     interp: &FxHashMap<MacroRulesNormalizedIdent, NamedMatch>,\n+    marker: &mut Marker,\n     repeats: &[(usize, usize)],\n     result: &mut Vec<TreeAndSpacing>,\n     sp: &DelimSpan,\n ) -> PResult<'a, ()> {\n+    let mut visited_span = || {\n+        let mut span = sp.entire();\n+        marker.visit_span(&mut span);\n+        span\n+    };\n     match expr {\n         MetaVarExpr::Count(original_ident, depth_opt) => {\n             let matched = matched_from_ident(cx, original_ident, interp)?;\n             let count = count_repetitions(cx, depth_opt, matched, &repeats, sp)?;\n             let tt = TokenTree::token(\n                 TokenKind::lit(token::Integer, sym::integer(count), None),\n-                sp.entire(),\n+                visited_span(),\n             );\n             result.push(tt.into());\n         }\n@@ -536,7 +542,7 @@ fn transcribe_metavar_expr<'a>(\n                 result.push(\n                     TokenTree::token(\n                         TokenKind::lit(token::Integer, sym::integer(*index), None),\n-                        sp.entire(),\n+                        visited_span(),\n                     )\n                     .into(),\n                 );\n@@ -548,7 +554,7 @@ fn transcribe_metavar_expr<'a>(\n                 result.push(\n                     TokenTree::token(\n                         TokenKind::lit(token::Integer, sym::integer(*length), None),\n-                        sp.entire(),\n+                        visited_span(),\n                     )\n                     .into(),\n                 );"}]}