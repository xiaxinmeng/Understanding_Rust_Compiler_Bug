{"sha": "9f283c97e154a81f1407498c6d318d4f1cae94f0", "node_id": "C_kwDOAAsO6NoAKDlmMjgzYzk3ZTE1NGE4MWYxNDA3NDk4YzZkMzE4ZDRmMWNhZTk0ZjA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-12T21:07:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-12T21:07:18Z"}, "message": "Auto merge of #9835 - koka831:fix/9035, r=Alexendoo\n\nAvoid linting unsized mutable reference\n\nfix https://github.com/rust-lang/rust-clippy/issues/9035\n\nchangelog: [`mut_mut`] avoid suggesting to reborrow unsized mutable reference", "tree": {"sha": "79dc010cff0ef11c78040e964a35e32d3457611a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79dc010cff0ef11c78040e964a35e32d3457611a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f283c97e154a81f1407498c6d318d4f1cae94f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f283c97e154a81f1407498c6d318d4f1cae94f0", "html_url": "https://github.com/rust-lang/rust/commit/9f283c97e154a81f1407498c6d318d4f1cae94f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f283c97e154a81f1407498c6d318d4f1cae94f0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb326e761b51f6b07906871a8da9e076a7ffb2cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb326e761b51f6b07906871a8da9e076a7ffb2cd", "html_url": "https://github.com/rust-lang/rust/commit/bb326e761b51f6b07906871a8da9e076a7ffb2cd"}, {"sha": "93edc127a0d9a5ecd403a2f72ff6c02c5fadb696", "url": "https://api.github.com/repos/rust-lang/rust/commits/93edc127a0d9a5ecd403a2f72ff6c02c5fadb696", "html_url": "https://github.com/rust-lang/rust/commit/93edc127a0d9a5ecd403a2f72ff6c02c5fadb696"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "ae17327fd2a63db53d6096ca515b8fe1081bae3d", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9f283c97e154a81f1407498c6d318d4f1cae94f0/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f283c97e154a81f1407498c6d318d4f1cae94f0/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=9f283c97e154a81f1407498c6d318d4f1cae94f0", "patch": "@@ -68,13 +68,15 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for MutVisitor<'a, 'tcx> {\n                     expr.span,\n                     \"generally you want to avoid `&mut &mut _` if possible\",\n                 );\n-            } else if let ty::Ref(_, _, hir::Mutability::Mut) = self.cx.typeck_results().expr_ty(e).kind() {\n-                span_lint(\n-                    self.cx,\n-                    MUT_MUT,\n-                    expr.span,\n-                    \"this expression mutably borrows a mutable reference. Consider reborrowing\",\n-                );\n+            } else if let ty::Ref(_, ty, hir::Mutability::Mut) = self.cx.typeck_results().expr_ty(e).kind() {\n+                if ty.peel_refs().is_sized(self.cx.tcx.at(expr.span), self.cx.param_env) {\n+                    span_lint(\n+                        self.cx,\n+                        MUT_MUT,\n+                        expr.span,\n+                        \"this expression mutably borrows a mutable reference. Consider reborrowing\",\n+                    );\n+                }\n             }\n         }\n     }"}, {"sha": "ee3a856566cc1d40cb000c91e3da40819978d918", "filename": "tests/ui/mut_mut.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9f283c97e154a81f1407498c6d318d4f1cae94f0/tests%2Fui%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f283c97e154a81f1407498c6d318d4f1cae94f0/tests%2Fui%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.rs?ref=9f283c97e154a81f1407498c6d318d4f1cae94f0", "patch": "@@ -57,3 +57,20 @@ fn issue6922() {\n     // do not lint from an external macro\n     mut_mut!();\n }\n+\n+mod issue9035 {\n+    use std::fmt::Display;\n+\n+    struct Foo<'a> {\n+        inner: &'a mut dyn Display,\n+    }\n+\n+    impl Foo<'_> {\n+        fn foo(&mut self) {\n+            let hlp = &mut self.inner;\n+            bar(hlp);\n+        }\n+    }\n+\n+    fn bar(_: &mut impl Display) {}\n+}"}]}