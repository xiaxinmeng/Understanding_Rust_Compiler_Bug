{"sha": "b432f60afe6c7cbe765e04c5796e70ae012b7a36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MzJmNjBhZmU2YzdjYmU3NjVlMDRjNTc5NmU3MGFlMDEyYjdhMzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-26T20:26:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-26T20:26:35Z"}, "message": "Merge pull request #2489 from rust-lang-nursery/rustup\n\nRustup to rustc 1.26.0-nightly (322d7f7b9 2018-02-25)", "tree": {"sha": "497b947395e671bd6d3d1af80c31de46577b8b03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/497b947395e671bd6d3d1af80c31de46577b8b03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b432f60afe6c7cbe765e04c5796e70ae012b7a36", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJalG17CRBK7hj4Ov3rIwAAdHIIAHe/D+9CkWVp62xITMwUbaTp\njJR9KIYJ3RtLzvlCq4QsZ3I9scWc+vLRUXfuUdtoBWm170QrpwvB+T764jbRcdq4\n4jC+cEhh5LrjOTYvqE5sn6ZBuPmPukauM2eGDTMi+f9OIn20SRZIw/lEWstTC5ox\nZg1ks7u2qpZidYPt4aPpbsgU/f9hRAu730TfocSs1+XMj7oe4ACSdXbf3OdTcX/7\nm0cjiqNFcUa08rj7e+8Jg0uJnuW/anvdftzd4i80cqXBCuALf00TDFBn5t7CNtDC\nQMavESx50f5ViTw1pxxMd/hYuK3b2lQAIr5mvvGMcP6wHJRFZPvK0w+UBlO69F0=\n=qLU6\n-----END PGP SIGNATURE-----\n", "payload": "tree 497b947395e671bd6d3d1af80c31de46577b8b03\nparent 6097b8240b745359f019260278a82406e65f677c\nparent 167d978372c21036ae0485ede7ba49436f78b294\nauthor Manish Goregaokar <manishsmail@gmail.com> 1519676795 -0800\ncommitter GitHub <noreply@github.com> 1519676795 -0800\n\nMerge pull request #2489 from rust-lang-nursery/rustup\n\nRustup to rustc 1.26.0-nightly (322d7f7b9 2018-02-25)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b432f60afe6c7cbe765e04c5796e70ae012b7a36", "html_url": "https://github.com/rust-lang/rust/commit/b432f60afe6c7cbe765e04c5796e70ae012b7a36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b432f60afe6c7cbe765e04c5796e70ae012b7a36/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6097b8240b745359f019260278a82406e65f677c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6097b8240b745359f019260278a82406e65f677c", "html_url": "https://github.com/rust-lang/rust/commit/6097b8240b745359f019260278a82406e65f677c"}, {"sha": "167d978372c21036ae0485ede7ba49436f78b294", "url": "https://api.github.com/repos/rust-lang/rust/commits/167d978372c21036ae0485ede7ba49436f78b294", "html_url": "https://github.com/rust-lang/rust/commit/167d978372c21036ae0485ede7ba49436f78b294"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "8702ec1e716a8679d9bfa6f28904dcde08675c9c", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b432f60afe6c7cbe765e04c5796e70ae012b7a36/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b432f60afe6c7cbe765e04c5796e70ae012b7a36/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=b432f60afe6c7cbe765e04c5796e70ae012b7a36", "patch": "@@ -149,7 +149,7 @@ fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, item: &Item, trait_ref\n                     }\n                 }\n                 for subst in substs {\n-                    if let Some(subst) = subst.as_type() {\n+                    if let ty::subst::UnpackedKind::Type(subst) = subst.unpack() {\n                         if let ty::TyParam(_) = subst.sty {\n                             return;\n                         }"}, {"sha": "9142ebdbf21d7582663cb5cccde2e2462c753beb", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b432f60afe6c7cbe765e04c5796e70ae012b7a36/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b432f60afe6c7cbe765e04c5796e70ae012b7a36/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=b432f60afe6c7cbe765e04c5796e70ae012b7a36", "patch": "@@ -377,6 +377,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box question_mark::QuestionMarkPass);\n     reg.register_late_lint_pass(box suspicious_trait_impl::SuspiciousImpl);\n     reg.register_late_lint_pass(box redundant_field_names::RedundantFieldNames);\n+    reg.register_late_lint_pass(box misc::BareTraitLate);\n \n \n     reg.register_lint_group(\"clippy_restrictions\", vec!["}, {"sha": "97bfd3d0c9587d1c33700b75f6acd1f0af521549", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/b432f60afe6c7cbe765e04c5796e70ae012b7a36/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b432f60afe6c7cbe765e04c5796e70ae012b7a36/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=b432f60afe6c7cbe765e04c5796e70ae012b7a36", "patch": "@@ -636,3 +636,61 @@ fn check_cast(cx: &LateContext, span: Span, e: &Expr, ty: &Ty) {\n         }\n     }\n }\n+\n+declare_lint! {\n+    pub BARE_TRAIT_OBJECT,\n+    Warn,\n+    \"suggest using `dyn Trait` for trait objects\"\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct BareTraitLate;\n+\n+impl LintPass for BareTraitLate {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(BARE_TRAIT_OBJECT)\n+    }\n+}\n+\n+use rustc::hir::intravisit::{walk_ty, NestedVisitorMap, Visitor};\n+\n+struct TraitTyVisitor<'a, 'tcx: 'a> {\n+    cx: &'a LateContext<'a, 'tcx>\n+}\n+\n+impl<'a, 'tcx> Visitor<'tcx> for TraitTyVisitor<'a, 'tcx> {\n+    fn visit_ty(&mut self, ty: &'tcx Ty) {\n+        println!(\"{:?}\", ty.node);\n+        if let TyPath(ref qpath) = ty.node {\n+            println!(\"{:?}\", qpath);\n+            let hir_id = self.cx.tcx.hir.node_to_hir_id(ty.id);\n+            let def = self.cx.tables.qpath_def(qpath, hir_id);\n+            let t = self.cx.tcx.type_of(def.def_id());\n+            println!(\"{:?}\", t);\n+            if let ty::TyDynamic(..) = t.sty {\n+                let mut err = self.cx.struct_span_lint(BARE_TRAIT_OBJECT, ty.span,\n+                    \"Trait objects without an explicit `dyn` are deprecated\");\n+                let sugg = match self.cx.tcx.sess.codemap().span_to_snippet(ty.span) {\n+                    Ok(s) => format!(\"dyn {}\", s),\n+                    Err(_) => format!(\"dyn <type>\")\n+                };\n+                err.span_suggestion(ty.span, \"use `dyn`\", sugg);\n+                err.emit();\n+            }\n+        }\n+        walk_ty(self, ty)\n+    }\n+    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n+        NestedVisitorMap::None\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BareTraitLate {\n+    fn check_ty(&mut self, cx: &LateContext<'a, 'tcx>, ty: &'tcx Ty) {\n+        if !cx.sess().features.borrow().dyn_trait {\n+            return;\n+        }\n+        println!(\"toplevel {:?}\", ty);\n+        TraitTyVisitor { cx }.visit_ty(ty)\n+    }\n+}"}]}