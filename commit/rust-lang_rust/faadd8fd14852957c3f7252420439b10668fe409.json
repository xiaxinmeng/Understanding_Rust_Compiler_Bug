{"sha": "faadd8fd14852957c3f7252420439b10668fe409", "node_id": "C_kwDOAAsO6NoAKGZhYWRkOGZkMTQ4NTI5NTdjM2Y3MjUyNDIwNDM5YjEwNjY4ZmU0MDk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-05T14:26:49Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-30T11:51:49Z"}, "message": "Box HIR Generics and Impl.", "tree": {"sha": "9227531d32234fafb7980804e0a810a4e9a362c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9227531d32234fafb7980804e0a810a4e9a362c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faadd8fd14852957c3f7252420439b10668fe409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faadd8fd14852957c3f7252420439b10668fe409", "html_url": "https://github.com/rust-lang/rust/commit/faadd8fd14852957c3f7252420439b10668fe409", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faadd8fd14852957c3f7252420439b10668fe409/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ffe8a1a9049c58501132a07f1567605acff4541", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ffe8a1a9049c58501132a07f1567605acff4541", "html_url": "https://github.com/rust-lang/rust/commit/5ffe8a1a9049c58501132a07f1567605acff4541"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "96c00c205ff2e9401e0589e1a9786fb47c2c2356", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faadd8fd14852957c3f7252420439b10668fe409/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faadd8fd14852957c3f7252420439b10668fe409/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=faadd8fd14852957c3f7252420439b10668fe409", "patch": "@@ -68,7 +68,7 @@ impl<'tcx> LateLintPass<'tcx> for NewWithoutDefault {\n             ..\n         }) = item.kind\n         {\n-            for assoc_item in items {\n+            for assoc_item in *items {\n                 if assoc_item.kind == (hir::AssocItemKind::Fn { has_self: false }) {\n                     let impl_item = cx.tcx.hir().impl_item(assoc_item.id);\n                     if in_external_macro(cx.sess(), impl_item.span) {"}, {"sha": "1469cb434c00c07dfeb0190d14c5527bf5e96c25", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faadd8fd14852957c3f7252420439b10668fe409/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faadd8fd14852957c3f7252420439b10668fe409/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=faadd8fd14852957c3f7252420439b10668fe409", "patch": "@@ -42,7 +42,7 @@ impl<'tcx> LateLintPass<'tcx> for PartialEqNeImpl {\n             if let Some(eq_trait) = cx.tcx.lang_items().eq_trait();\n             if trait_ref.path.res.def_id() == eq_trait;\n             then {\n-                for impl_item in impl_items {\n+                for impl_item in *impl_items {\n                     if impl_item.ident.name == sym::ne {\n                         span_lint_hir(\n                             cx,"}, {"sha": "fc1c2af9257bf98484d807b775a7a2da416a56e2", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faadd8fd14852957c3f7252420439b10668fe409/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faadd8fd14852957c3f7252420439b10668fe409/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=faadd8fd14852957c3f7252420439b10668fe409", "patch": "@@ -36,7 +36,7 @@ impl<'tcx> LateLintPass<'tcx> for SerdeApi {\n                 if did == visit_did {\n                     let mut seen_str = None;\n                     let mut seen_string = None;\n-                    for item in items {\n+                    for item in *items {\n                         match item.ident.as_str() {\n                             \"visit_str\" => seen_str = Some(item.span),\n                             \"visit_string\" => seen_string = Some(item.span),"}]}