{"sha": "3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZGFhYmNiYzljZjIyM2Y2YTJmOGY2NDViMjA5MjE2NmY5MTFlYWI=", "commit": {"author": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-03-21T08:50:35Z"}, "committer": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-03-21T08:58:04Z"}, "message": "Fix suggestion with generics for `field_reassign_with_default` lint", "tree": {"sha": "0efbdf1beb5ee9d4c971b7cd40dc7558a18f30b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0efbdf1beb5ee9d4c971b7cd40dc7558a18f30b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "html_url": "https://github.com/rust-lang/rust/commit/3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bdaa77d958d91a6d1328b438ca4e15758fbc6ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bdaa77d958d91a6d1328b438ca4e15758fbc6ed", "html_url": "https://github.com/rust-lang/rust/commit/0bdaa77d958d91a6d1328b438ca4e15758fbc6ed"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "568a174445c1805a9669acbafb6c307580dcbd3c", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "patch": "@@ -104,6 +104,7 @@ impl LateLintPass<'_> for Default {\n         }\n     }\n \n+    #[allow(clippy::too_many_lines)]\n     fn check_block<'tcx>(&mut self, cx: &LateContext<'tcx>, block: &Block<'tcx>) {\n         // start from the `let mut _ = _::default();` and look at all the following\n         // statements, see if they re-assign the fields of the binding\n@@ -197,6 +198,24 @@ impl LateLintPass<'_> for Default {\n                     .collect::<Vec<String>>()\n                     .join(\", \");\n \n+                // give correct suggestion if generics are involved (see #6944)\n+                let binding_type = if_chain! {\n+                    if let ty::Adt(adt_def, substs) = binding_type.kind();\n+                    if !substs.is_empty();\n+                    let adt_def_ty_name = cx.tcx.item_name(adt_def.did);\n+                    let generic_args = substs.iter().collect::<Vec<_>>();\n+                    let tys_str = generic_args\n+                        .iter()\n+                        .map(ToString::to_string)\n+                        .collect::<Vec<_>>()\n+                        .join(\", \");\n+                    then {\n+                        format!(\"{}::<{}>\", adt_def_ty_name, &tys_str)\n+                    } else {\n+                        binding_type.to_string()\n+                    }\n+                };\n+\n                 let sugg = if ext_with_default {\n                     if field_list.is_empty() {\n                         format!(\"{}::default()\", binding_type)"}, {"sha": "1368c5d79848032b423bb3f6520655a8e6567bf5", "filename": "tests/ui/field_reassign_with_default.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/tests%2Fui%2Ffield_reassign_with_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/tests%2Fui%2Ffield_reassign_with_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffield_reassign_with_default.rs?ref=3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "patch": "@@ -136,6 +136,13 @@ fn main() {\n \n     // Don't lint in external macros\n     field_reassign_with_default!();\n+\n+    // be sure suggestion is correct with generics\n+    let mut a: Wrapper<bool> = Default::default();\n+    a.i = true;\n+\n+    let mut a: WrapperMulti<i32, i64> = Default::default();\n+    a.i = 42;\n }\n \n mod m {\n@@ -145,3 +152,14 @@ mod m {\n         b: u64,\n     }\n }\n+\n+#[derive(Default)]\n+struct Wrapper<T> {\n+    i: T,\n+}\n+\n+#[derive(Default)]\n+struct WrapperMulti<T, U> {\n+    i: T,\n+    j: U,\n+}"}, {"sha": "dd7c0360bb1e2bc40355e216bec4fad739615f43", "filename": "tests/ui/field_reassign_with_default.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/tests%2Fui%2Ffield_reassign_with_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ddaabcbc9cf223f6a2f8f645b2092166f911eab/tests%2Fui%2Ffield_reassign_with_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffield_reassign_with_default.stderr?ref=3ddaabcbc9cf223f6a2f8f645b2092166f911eab", "patch": "@@ -83,5 +83,29 @@ note: consider initializing the variable with `C { i: vec![1], ..Default::defaul\n LL |     let mut a: C = C::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n+error: field assignment outside of initializer for an instance created with Default::default()\n+  --> $DIR/field_reassign_with_default.rs:142:5\n+   |\n+LL |     a.i = true;\n+   |     ^^^^^^^^^^^\n+   |\n+note: consider initializing the variable with `Wrapper::<bool> { i: true }` and removing relevant reassignments\n+  --> $DIR/field_reassign_with_default.rs:141:5\n+   |\n+LL |     let mut a: Wrapper<bool> = Default::default();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: field assignment outside of initializer for an instance created with Default::default()\n+  --> $DIR/field_reassign_with_default.rs:145:5\n+   |\n+LL |     a.i = 42;\n+   |     ^^^^^^^^^\n+   |\n+note: consider initializing the variable with `WrapperMulti::<i32, i64> { i: 42, ..Default::default() }` and removing relevant reassignments\n+  --> $DIR/field_reassign_with_default.rs:144:5\n+   |\n+LL |     let mut a: WrapperMulti<i32, i64> = Default::default();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 9 previous errors\n "}]}