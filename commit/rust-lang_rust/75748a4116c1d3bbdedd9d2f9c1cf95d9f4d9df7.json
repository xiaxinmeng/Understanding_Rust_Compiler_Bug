{"sha": "75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NzQ4YTQxMTZjMWQzYmJkZWRkOWQyZjljMWNmOTVkOWY0ZDlkZjc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-07-08T17:00:40Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-07-15T17:00:06Z"}, "message": "ci: Update dist-{i686,x86_64}-linux to Debian 6\n\nThis increases the minimum `{i686,x86_64}-unknown-linux-gnu` platform\nfrom RHEL/CentOS 5 (glibc 2.5 and kernel 2.6.18) to a slightly newer\nDebian 6 `squeeze` (glibc 2.11 and kernel 2.6.32). While that release is\nalready EOL, it happens to match the minimum common versions of two\nenterprise distros that do still need Rust support -- RHEL 6 (glibc 2.12\nand kernel 2.6.32) and SLES 11 SP4 (glibc 2.11 and kernel 3.0).", "tree": {"sha": "1227757839e894d09a32b6127850319291ed9277", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1227757839e894d09a32b6127850319291ed9277"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "html_url": "https://github.com/rust-lang/rust/commit/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e11379f3b4c376fbb9a6c4d44f3286ccc28d149", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e11379f3b4c376fbb9a6c4d44f3286ccc28d149", "html_url": "https://github.com/rust-lang/rust/commit/7e11379f3b4c376fbb9a6c4d44f3286ccc28d149"}], "stats": {"total": 199, "additions": 101, "deletions": 98}, "files": [{"sha": "9a051caa0667881dc49ee425bf295a4cde1d3c5f", "filename": "src/ci/docker/host-x86_64/dist-i686-linux/Dockerfile", "status": "modified", "additions": 46, "deletions": 45, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i686-linux%2FDockerfile?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -1,34 +1,44 @@\n-FROM centos:5\n+# We use Debian 6 (glibc 2.11, kernel 2.6.32) as a common base for other\n+# distros that still need Rust support: RHEL 6 (glibc 2.12, kernel 2.6.32) and\n+# SLES 11 SP4 (glibc 2.11, kernel 3.0).\n+FROM debian:6\n \n WORKDIR /build\n \n-# Centos 5 is EOL and is no longer available from the usual mirrors, so switch\n-# to http://vault.centos.org/\n-RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf\n-RUN sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo\n-RUN sed -i 's|#\\(baseurl.*\\)mirror.centos.org/centos/$releasever|\\1vault.centos.org/5.11|' /etc/yum.repos.d/*.repo\n+# Debian 6 is EOL and no longer available from the usual mirrors,\n+# so we'll need to switch to http://archive.debian.org/\n+RUN sed -i '/updates/d' /etc/apt/sources.list && \\\n+    sed -i 's/httpredir/archive/' /etc/apt/sources.list\n \n-RUN yum upgrade -y && yum install -y \\\n-      curl \\\n+RUN apt-get update && \\\n+    apt-get install --allow-unauthenticated -y --no-install-recommends \\\n+      automake \\\n       bzip2 \\\n+      ca-certificates \\\n+      curl \\\n+      file \\\n+      g++ \\\n+      g++-multilib \\\n       gcc \\\n-      gcc-c++ \\\n+      gcc-multilib \\\n+      git \\\n+      lib32z1-dev \\\n+      libedit-dev \\\n+      libncurses-dev \\\n       make \\\n-      glibc-devel \\\n+      patch \\\n       perl \\\n-      zlib-devel \\\n-      file \\\n-      xz \\\n-      which \\\n-      pkgconfig \\\n+      pkg-config \\\n+      unzip \\\n       wget \\\n-      autoconf \\\n-      gettext\n+      xz-utils \\\n+      zlib1g-dev\n \n ENV PATH=/rustroot/bin:$PATH\n-ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib\n+ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib32:/rustroot/lib\n ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n WORKDIR /tmp\n+RUN mkdir /home/user\n COPY host-x86_64/dist-x86_64-linux/shared.sh /tmp/\n \n # We need a build of openssl which supports SNI to download artifacts from\n@@ -38,14 +48,14 @@ COPY host-x86_64/dist-x86_64-linux/shared.sh /tmp/\n COPY host-x86_64/dist-x86_64-linux/build-openssl.sh /tmp/\n RUN ./build-openssl.sh\n \n-# The `curl` binary on CentOS doesn't support SNI which is needed for fetching\n+# The `curl` binary on Debian 6 doesn't support SNI which is needed for fetching\n # some https urls we have, so install a new version of libcurl + curl which is\n # using the openssl we just built previously.\n #\n # Note that we also disable a bunch of optional features of curl that we don't\n # really need.\n COPY host-x86_64/dist-x86_64-linux/build-curl.sh /tmp/\n-RUN ./build-curl.sh\n+RUN ./build-curl.sh && apt-get remove -y curl\n \n # binutils < 2.22 has a bug where the 32-bit executables it generates\n # immediately segfault in Rust, so we need to install our own binutils.\n@@ -54,40 +64,24 @@ RUN ./build-curl.sh\n COPY host-x86_64/dist-x86_64-linux/build-binutils.sh /tmp/\n RUN ./build-binutils.sh\n \n-# libssh2 (a dependency of Cargo) requires cmake 2.8.11 or higher but CentOS\n-# only has 2.6.4, so build our own\n-COPY host-x86_64/dist-x86_64-linux/build-cmake.sh /tmp/\n-RUN ./build-cmake.sh\n-\n-# Need a newer version of gcc than centos has to compile LLVM nowadays\n+# Need at least GCC 5.1 to compile LLVM nowadays\n COPY host-x86_64/dist-x86_64-linux/build-gcc.sh /tmp/\n-RUN ./build-gcc.sh\n+RUN ./build-gcc.sh && apt-get remove -y gcc g++\n \n-# CentOS 5.5 has Python 2.4 by default, but LLVM needs 2.7+\n+# Debian 6 has Python 2.6 by default, but LLVM needs 2.7+\n COPY host-x86_64/dist-x86_64-linux/build-python.sh /tmp/\n RUN ./build-python.sh\n \n-# Now build LLVM+Clang 7, afterwards configuring further compilations to use the\n+# LLVM needs cmake 3.4.3 or higher, and is planning to raise to 3.13.4.\n+COPY host-x86_64/dist-x86_64-linux/build-cmake.sh /tmp/\n+RUN ./build-cmake.sh\n+\n+# Now build LLVM+Clang, afterwards configuring further compilations to use the\n # clang/clang++ compilers.\n-COPY host-x86_64/dist-x86_64-linux/build-clang.sh host-x86_64/dist-x86_64-linux/llvm-project-centos.patch /tmp/\n+COPY host-x86_64/dist-x86_64-linux/build-clang.sh /tmp/\n RUN ./build-clang.sh\n ENV CC=clang CXX=clang++\n \n-# Apparently CentOS 5.5 desn't have `git` in yum, but we're gonna need it for\n-# cloning, so download and build it here.\n-COPY host-x86_64/dist-x86_64-linux/build-git.sh /tmp/\n-RUN ./build-git.sh\n-\n-# for sanitizers, we need kernel headers files newer than the ones CentOS ships\n-# with so we install newer ones here\n-COPY host-x86_64/dist-x86_64-linux/build-headers.sh /tmp/\n-RUN ./build-headers.sh\n-\n-# OpenSSL requires a more recent version of perl\n-# with so we install newer ones here\n-COPY host-x86_64/dist-x86_64-linux/build-perl.sh /tmp/\n-RUN ./build-perl.sh\n-\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n@@ -117,4 +111,11 @@ ENV CFLAGS -mstackrealign\n # libcurl, instead it should compile its own.\n ENV LIBCURL_NO_PKG_CONFIG 1\n \n+# There was a bad interaction between \"old\" 32-bit binaries on current 64-bit\n+# kernels with selinux enabled, where ASLR mmap would sometimes choose a low\n+# address and then block it for being below `vm.mmap_min_addr` -> `EACCES`.\n+# This is probably a kernel bug, but setting `ulimit -Hs` works around it.\n+# See also `src/ci/run.sh` where this takes effect.\n+ENV SET_HARD_RLIMIT_STACK 1\n+\n ENV DIST_REQUIRE_ALL_TOOLS 1"}, {"sha": "1f0978c0082c5898166955a5dba385dc8deb62f4", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 39, "deletions": 45, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -1,34 +1,44 @@\n-FROM centos:5\n+# We use Debian 6 (glibc 2.11, kernel 2.6.32) as a common base for other\n+# distros that still need Rust support: RHEL 6 (glibc 2.12, kernel 2.6.32) and\n+# SLES 11 SP4 (glibc 2.11, kernel 3.0).\n+FROM debian:6\n \n WORKDIR /build\n \n-# Centos 5 is EOL and is no longer available from the usual mirrors, so switch\n-# to http://vault.centos.org/\n-RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf\n-RUN sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo\n-RUN sed -i 's|#\\(baseurl.*\\)mirror.centos.org/centos/$releasever|\\1vault.centos.org/5.11|' /etc/yum.repos.d/*.repo\n+# Debian 6 is EOL and no longer available from the usual mirrors,\n+# so we'll need to switch to http://archive.debian.org/\n+RUN sed -i '/updates/d' /etc/apt/sources.list && \\\n+    sed -i 's/httpredir/archive/' /etc/apt/sources.list\n \n-RUN yum upgrade -y && yum install -y \\\n-      curl \\\n+RUN apt-get update && \\\n+    apt-get install --allow-unauthenticated -y --no-install-recommends \\\n+      automake \\\n       bzip2 \\\n+      ca-certificates \\\n+      curl \\\n+      file \\\n+      g++ \\\n+      g++-multilib \\\n       gcc \\\n-      gcc-c++ \\\n+      gcc-multilib \\\n+      git \\\n+      lib32z1-dev \\\n+      libedit-dev \\\n+      libncurses-dev \\\n       make \\\n-      glibc-devel \\\n+      patch \\\n       perl \\\n-      zlib-devel \\\n-      file \\\n-      xz \\\n-      which \\\n-      pkgconfig \\\n+      pkg-config \\\n+      unzip \\\n       wget \\\n-      autoconf \\\n-      gettext\n+      xz-utils \\\n+      zlib1g-dev\n \n ENV PATH=/rustroot/bin:$PATH\n-ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib\n+ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib32:/rustroot/lib\n ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n WORKDIR /tmp\n+RUN mkdir /home/user\n COPY host-x86_64/dist-x86_64-linux/shared.sh /tmp/\n \n # We need a build of openssl which supports SNI to download artifacts from\n@@ -38,14 +48,14 @@ COPY host-x86_64/dist-x86_64-linux/shared.sh /tmp/\n COPY host-x86_64/dist-x86_64-linux/build-openssl.sh /tmp/\n RUN ./build-openssl.sh\n \n-# The `curl` binary on CentOS doesn't support SNI which is needed for fetching\n+# The `curl` binary on Debian 6 doesn't support SNI which is needed for fetching\n # some https urls we have, so install a new version of libcurl + curl which is\n # using the openssl we just built previously.\n #\n # Note that we also disable a bunch of optional features of curl that we don't\n # really need.\n COPY host-x86_64/dist-x86_64-linux/build-curl.sh /tmp/\n-RUN ./build-curl.sh\n+RUN ./build-curl.sh && apt-get remove -y curl\n \n # binutils < 2.22 has a bug where the 32-bit executables it generates\n # immediately segfault in Rust, so we need to install our own binutils.\n@@ -54,40 +64,24 @@ RUN ./build-curl.sh\n COPY host-x86_64/dist-x86_64-linux/build-binutils.sh /tmp/\n RUN ./build-binutils.sh\n \n-# libssh2 (a dependency of Cargo) requires cmake 2.8.11 or higher but CentOS\n-# only has 2.6.4, so build our own\n-COPY host-x86_64/dist-x86_64-linux/build-cmake.sh /tmp/\n-RUN ./build-cmake.sh\n-\n-# Build a version of gcc capable of building LLVM 6\n+# Need at least GCC 5.1 to compile LLVM nowadays\n COPY host-x86_64/dist-x86_64-linux/build-gcc.sh /tmp/\n-RUN ./build-gcc.sh\n+RUN ./build-gcc.sh && apt-get remove -y gcc g++\n \n-# CentOS 5.5 has Python 2.4 by default, but LLVM needs 2.7+\n+# Debian 6 has Python 2.6 by default, but LLVM needs 2.7+\n COPY host-x86_64/dist-x86_64-linux/build-python.sh /tmp/\n RUN ./build-python.sh\n \n-# Now build LLVM+Clang 7, afterwards configuring further compilations to use the\n+# LLVM needs cmake 3.4.3 or higher, and is planning to raise to 3.13.4.\n+COPY host-x86_64/dist-x86_64-linux/build-cmake.sh /tmp/\n+RUN ./build-cmake.sh\n+\n+# Now build LLVM+Clang, afterwards configuring further compilations to use the\n # clang/clang++ compilers.\n-COPY host-x86_64/dist-x86_64-linux/build-clang.sh host-x86_64/dist-x86_64-linux/llvm-project-centos.patch /tmp/\n+COPY host-x86_64/dist-x86_64-linux/build-clang.sh /tmp/\n RUN ./build-clang.sh\n ENV CC=clang CXX=clang++\n \n-# Apparently CentOS 5.5 desn't have `git` in yum, but we're gonna need it for\n-# cloning, so download and build it here.\n-COPY host-x86_64/dist-x86_64-linux/build-git.sh /tmp/\n-RUN ./build-git.sh\n-\n-# for sanitizers, we need kernel headers files newer than the ones CentOS ships\n-# with so we install newer ones here\n-COPY host-x86_64/dist-x86_64-linux/build-headers.sh /tmp/\n-RUN ./build-headers.sh\n-\n-# OpenSSL requires a more recent version of perl\n-# with so we install newer ones here\n-COPY host-x86_64/dist-x86_64-linux/build-perl.sh /tmp/\n-RUN ./build-perl.sh\n-\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n "}, {"sha": "2c00a628a1d350e764dbd51b534167a808e98c00", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/build-clang.sh", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-clang.sh?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -12,9 +12,6 @@ cd llvm-project\n curl -L https://github.com/llvm/llvm-project/archive/$LLVM.tar.gz | \\\n   tar xzf - --strip-components=1\n \n-yum install -y patch\n-patch -Np1 < ../llvm-project-centos.patch\n-\n mkdir clang-build\n cd clang-build\n "}, {"sha": "e17831a1afee56da93229799ff3ac6ae2113c005", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/build-cmake.sh", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-cmake.sh?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -3,14 +3,15 @@\n set -ex\n source shared.sh\n \n-curl https://cmake.org/files/v3.6/cmake-3.6.3.tar.gz | tar xzf -\n+CMAKE=3.13.4\n+curl -L https://github.com/Kitware/CMake/releases/download/v$CMAKE/cmake-$CMAKE.tar.gz | tar xzf -\n \n mkdir cmake-build\n cd cmake-build\n-hide_output ../cmake-3.6.3/configure --prefix=/rustroot\n+hide_output ../cmake-$CMAKE/configure --prefix=/rustroot\n hide_output make -j10\n hide_output make install\n \n cd ..\n rm -rf cmake-build\n-rm -rf cmake-3.6.3\n+rm -rf cmake-$CMAKE"}, {"sha": "a60c6be9f322211ad3be6371c2809dc1169236cc", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/build-curl.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-curl.sh?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -36,4 +36,3 @@ hide_output make install\n cd ..\n rm -rf curl-build\n rm -rf curl-$VERSION\n-yum erase -y curl"}, {"sha": "9d7461ebee32b4a86de019254bf6eab3ed9497aa", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/build-gcc.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-gcc.sh?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -37,4 +37,3 @@ ln -s gcc /rustroot/bin/cc\n cd ..\n rm -rf gcc-build\n rm -rf gcc-$GCC\n-yum erase -y gcc gcc-c++ binutils"}, {"sha": "5231aa2e7661979f0ff006deeb5093682900311e", "filename": "src/ci/run.sh", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=75748a4116c1d3bbdedd9d2f9c1cf95d9f4d9df7", "patch": "@@ -20,6 +20,18 @@ if [ -f /proc/sys/kernel/core_pattern ]; then\n   ulimit -c unlimited\n fi\n \n+# There was a bad interaction between \"old\" 32-bit binaries on current 64-bit\n+# kernels with selinux enabled, where ASLR mmap would sometimes choose a low\n+# address and then block it for being below `vm.mmap_min_addr` -> `EACCES`.\n+# This is probably a kernel bug, but setting `ulimit -Hs` works around it.\n+# See also `dist-i686-linux` where this setting is enabled.\n+if [ \"$SET_HARD_RLIMIT_STACK\" = \"1\" ]; then\n+  rlimit_stack=$(ulimit -Ss)\n+  if [ \"$rlimit_stack\" != \"\" ]; then\n+    ulimit -Hs \"$rlimit_stack\"\n+  fi\n+fi\n+\n ci_dir=`cd $(dirname $0) && pwd`\n source \"$ci_dir/shared.sh\"\n "}]}