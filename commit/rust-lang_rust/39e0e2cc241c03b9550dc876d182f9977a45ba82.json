{"sha": "39e0e2cc241c03b9550dc876d182f9977a45ba82", "node_id": "C_kwDOAAsO6NoAKDM5ZTBlMmNjMjQxYzAzYjk1NTBkYzg3NmQxODJmOTk3N2E0NWJhODI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-26T05:59:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-26T05:59:56Z"}, "message": "Rollup merge of #103533 - jachris:cast-without-mut, r=oli-obk\n\nUse &self instead of &mut self for cast methods\n\nr? ``@oli-obk``", "tree": {"sha": "d72ce250d10afe84de1211cd25daa3fb91b2ef27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d72ce250d10afe84de1211cd25daa3fb91b2ef27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39e0e2cc241c03b9550dc876d182f9977a45ba82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjWMzcCRBK7hj4Ov3rIwAAZS4IAKCb757ruiYxLZUzlMwHarh2\nHUH3KfRhqqggq4ByNgZe1SBu5Ux6wCK5jmmDhwGGSYjsFCE6YMBETjGxAaAmg7RH\nbmPevJYfnHlXFYJLJ/bDlMDOeYQuf1ZokQZQLatN7Gu5Y6YqCNIPNAGLU+Povcno\nbfp9ZogKuxfu/IHZyFdKiVcTMeyCBRahud7abuKis6hsnT5z/hMlp8Udie1zAfMB\n0IgPp4IMs4fcomriTjPwbQDFqTQjcSSmfCWSm2jCFUGsv1dgw152XiLW0QaZ3HrZ\n1jj0nBqLldXxhYniZcTifQHznZkYcQMlvDbn6Fcd9EgnpPi6WeHOlrIEiudC/7k=\n=CRKp\n-----END PGP SIGNATURE-----\n", "payload": "tree d72ce250d10afe84de1211cd25daa3fb91b2ef27\nparent c956351f97ebed440f269633f84a85f8e7b36b4e\nparent 5378c82d808f01bbb0d1c03ea03b2865f10db8cd\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1666763996 +0530\ncommitter GitHub <noreply@github.com> 1666763996 +0530\n\nRollup merge of #103533 - jachris:cast-without-mut, r=oli-obk\n\nUse &self instead of &mut self for cast methods\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39e0e2cc241c03b9550dc876d182f9977a45ba82", "html_url": "https://github.com/rust-lang/rust/commit/39e0e2cc241c03b9550dc876d182f9977a45ba82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39e0e2cc241c03b9550dc876d182f9977a45ba82/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c956351f97ebed440f269633f84a85f8e7b36b4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c956351f97ebed440f269633f84a85f8e7b36b4e", "html_url": "https://github.com/rust-lang/rust/commit/c956351f97ebed440f269633f84a85f8e7b36b4e"}, {"sha": "5378c82d808f01bbb0d1c03ea03b2865f10db8cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5378c82d808f01bbb0d1c03ea03b2865f10db8cd", "html_url": "https://github.com/rust-lang/rust/commit/5378c82d808f01bbb0d1c03ea03b2865f10db8cd"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cb33c4d4c465a711e497d7661760838a48f2eb79", "filename": "compiler/rustc_const_eval/src/interpret/cast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/39e0e2cc241c03b9550dc876d182f9977a45ba82/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e0e2cc241c03b9550dc876d182f9977a45ba82/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs?ref=39e0e2cc241c03b9550dc876d182f9977a45ba82", "patch": "@@ -139,7 +139,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     }\n \n     pub fn int_to_int_or_float(\n-        &mut self,\n+        &self,\n         src: &ImmTy<'tcx, M::Provenance>,\n         cast_ty: Ty<'tcx>,\n     ) -> InterpResult<'tcx, Immediate<M::Provenance>> {\n@@ -154,7 +154,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     }\n \n     pub fn float_to_float_or_int(\n-        &mut self,\n+        &self,\n         src: &ImmTy<'tcx, M::Provenance>,\n         cast_ty: Ty<'tcx>,\n     ) -> InterpResult<'tcx, Immediate<M::Provenance>> {\n@@ -176,7 +176,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n     /// Handles 'FnPtrToPtr' and 'PtrToPtr' casts.\n     pub fn ptr_to_ptr(\n-        &mut self,\n+        &self,\n         src: &ImmTy<'tcx, M::Provenance>,\n         cast_ty: Ty<'tcx>,\n     ) -> InterpResult<'tcx, Immediate<M::Provenance>> {\n@@ -226,7 +226,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     }\n \n     pub fn pointer_from_exposed_address_cast(\n-        &mut self,\n+        &self,\n         src: &ImmTy<'tcx, M::Provenance>,\n         cast_ty: Ty<'tcx>,\n     ) -> InterpResult<'tcx, Immediate<M::Provenance>> {"}]}