{"sha": "d647696c1f167802c9bb9ffe2c98459b152d563c", "node_id": "C_kwDOAAsO6NoAKGQ2NDc2OTZjMWYxNjc4MDJjOWJiOWZmZTJjOTg0NTliMTUyZDU2M2M", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-10-21T19:06:26Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-11-10T18:48:31Z"}, "message": "Added `clippy::version` attribute to all normal lints\n\nSo, some context for this, well, more a story. I'm not used to scripting, I've never really scripted anything, even if it's a valuable skill. I just never really needed it. Now, `@flip1995` correctly suggested using a script for this in `rust-clippy#7813`...\n\nAnd I decided to write a script using nushell because why not? This was a mistake... I spend way more time on this than I would like to admit. It has definitely been more than 4 hours. It shouldn't take that long, but me being new to scripting and nushell just wasn't a good mixture... Anyway, here is the script that creates another script which adds the versions. Fun...\n\nJust execute this on the `gh-pages` branch and the resulting `replacer.sh` in `clippy_lints` and it should all work.\n\n```nu\nmv v0.0.212 rust-1.00.0;\nmv beta rust-1.57.0;\nmv master rust-1.58.0;\n\nlet paths = (open ./rust-1.58.0/lints.json | select id id_span | flatten | select id path);\nlet versions = (\n    ls | where name =~ \"rust-\" | select name | format {name}/lints.json |\n    each { open $it | select id | insert version $it | str substring \"5,11\" version} |\n    group-by id | rotate counter-clockwise id version |\n    update version {get version | first 1} | flatten | select id version);\n$paths | each { |row|\n    let version = ($versions | where id == ($row.id) | format {version})\n    let idu = ($row.id | str upcase)\n    $\"sed -i '0,/($idu),/{s/pub ($idu),/#[clippy::version = \"($version)\"]\\n    pub ($idu),/}' ($row.path)\"\n} | str collect \";\" | str find-replace --all '1.00.0' 'pre 1.29.0' | save \"replacer.sh\";\n```\n\nAnd this still has some problems, but at this point I just want to be done -.-", "tree": {"sha": "9c24b99e18625eae5fc763a971ea598b71ae65eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c24b99e18625eae5fc763a971ea598b71ae65eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d647696c1f167802c9bb9ffe2c98459b152d563c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmGME/8ACgkQ/Ny/Ka9k\n1gFLbg//UAcQ2FB5TjwTI/NGDkkajj7zZ1K/E+/Owya2HTqL3O+Zc1esTC1rIfEG\n/ygAUbwxOIWAtUjp+9tBxotU+KJPXd4DrTwWCUJZaUUxa/mmy9lsimQAGGFwIPsi\n1mjnPvjaVuXO459L3H8eGNN2G5/eq0ymGwKP2xwcwjxSPdtxuDp1asyPx0FVRpEF\n3s8gxLzmmnkxjKU1VpU988GzLRWmaZOmMVCNrsFQ3WbF4QUR6DaWQbUJFujxYPdZ\nJsz0tkm5d2Oxa4PCKKahaR2XCm1HtiALzCB85fNSim2l3WvrNc1lN91DrgEu/5iC\nGw7iSn/lzV5G9eF9SM8+nkQK9oAg9NgxAcFetqqfRRmYAdw6gE5b/Nyy54Ugsg+g\nXmEZcfd5Q0cVuRBn3VmGcI3o+B5MAbTLlJTy17LrBkyQa1/WSd6mBSuay34di5K3\nPYmHcGab/E87V/WusTYZJ71k/nRVIIQr3RTCK+J6RQRK9vIFazfGMejcM3qQCIFy\ntlAzAAWjBvTJbmYsEQs1jfTu//QXmSxeWuRjtOw5oVU91YrAYq7QAoBFolRKsd6K\nYu++mwmVENDKdlFoFPJMizdL4p1l7/TrbFH8o506J+aQ3H2+XupMeBNIfqlsdaAg\nuIM/u+dYnmBMILoPdjFiFGnyaY/1GSdPht7pVqglES0+PTVBl2c=\n=/rtH\n-----END PGP SIGNATURE-----", "payload": "tree 9c24b99e18625eae5fc763a971ea598b71ae65eb\nparent 63cb41098bf1d9f1948492dd4c53e33ba2db828a\nauthor xFrednet <xFrednet@gmail.com> 1634843186 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1636570111 +0100\n\nAdded `clippy::version` attribute to all normal lints\n\nSo, some context for this, well, more a story. I'm not used to scripting, I've never really scripted anything, even if it's a valuable skill. I just never really needed it. Now, `@flip1995` correctly suggested using a script for this in `rust-clippy#7813`...\n\nAnd I decided to write a script using nushell because why not? This was a mistake... I spend way more time on this than I would like to admit. It has definitely been more than 4 hours. It shouldn't take that long, but me being new to scripting and nushell just wasn't a good mixture... Anyway, here is the script that creates another script which adds the versions. Fun...\n\nJust execute this on the `gh-pages` branch and the resulting `replacer.sh` in `clippy_lints` and it should all work.\n\n```nu\nmv v0.0.212 rust-1.00.0;\nmv beta rust-1.57.0;\nmv master rust-1.58.0;\n\nlet paths = (open ./rust-1.58.0/lints.json | select id id_span | flatten | select id path);\nlet versions = (\n    ls | where name =~ \"rust-\" | select name | format {name}/lints.json |\n    each { open $it | select id | insert version $it | str substring \"5,11\" version} |\n    group-by id | rotate counter-clockwise id version |\n    update version {get version | first 1} | flatten | select id version);\n$paths | each { |row|\n    let version = ($versions | where id == ($row.id) | format {version})\n    let idu = ($row.id | str upcase)\n    $\"sed -i '0,/($idu),/{s/pub ($idu),/#[clippy::version = \"($version)\"]\\n    pub ($idu),/}' ($row.path)\"\n} | str collect \";\" | str find-replace --all '1.00.0' 'pre 1.29.0' | save \"replacer.sh\";\n```\n\nAnd this still has some problems, but at this point I just want to be done -.-\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d647696c1f167802c9bb9ffe2c98459b152d563c", "html_url": "https://github.com/rust-lang/rust/commit/d647696c1f167802c9bb9ffe2c98459b152d563c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d647696c1f167802c9bb9ffe2c98459b152d563c/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63cb41098bf1d9f1948492dd4c53e33ba2db828a", "url": "https://api.github.com/repos/rust-lang/rust/commits/63cb41098bf1d9f1948492dd4c53e33ba2db828a", "html_url": "https://github.com/rust-lang/rust/commit/63cb41098bf1d9f1948492dd4c53e33ba2db828a"}], "stats": {"total": 490, "additions": 490, "deletions": 0}, "files": [{"sha": "7665aa8380b3c396594f5af3a066bd9b72eef463", "filename": "clippy_lints/src/absurd_extreme_comparisons.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fabsurd_extreme_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fabsurd_extreme_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fabsurd_extreme_comparisons.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// if vec.len() <= 0 {}\n     /// if 100 > i32::MAX {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ABSURD_EXTREME_COMPARISONS,\n     correctness,\n     \"a comparison with a maximum or minimum value that is always true or false\""}, {"sha": "12435eefbc4eeaf89816d09a1493c8049f85c61b", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// let x = std::f32::consts::PI;\n     /// let y = std::f64::consts::FRAC_1_PI;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub APPROX_CONSTANT,\n     correctness,\n     \"the approximate of a known float constant (in `std::fXX::consts`)\""}, {"sha": "e0c1d6ab6e12235577859c606f9e572dcbaf9f0f", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -25,6 +25,7 @@ declare_clippy_lint! {\n     /// # let a = 0;\n     /// a + 1;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INTEGER_ARITHMETIC,\n     restriction,\n     \"any integer arithmetic expression which could overflow or panic\"\n@@ -43,6 +44,7 @@ declare_clippy_lint! {\n     /// # let a = 0.0;\n     /// a + 1.0;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FLOAT_ARITHMETIC,\n     restriction,\n     \"any floating-point arithmetic statement\""}, {"sha": "53704da1046bcf236a5a511c0b83a5557b6ba4ab", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     /// f(a.try_into().expect(\"Unexpected u16 overflow in f\"));\n     /// ```\n     ///\n+    #[clippy::version = \"1.41.0\"]\n     pub AS_CONVERSIONS,\n     restriction,\n     \"using a potentially dangerous silent `as` conversion\""}, {"sha": "0322698f029556d3e0fc341ddc3e4f2df3f9db42", "filename": "clippy_lints/src/asm_syntax.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fasm_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fasm_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fasm_syntax.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -75,6 +75,7 @@ declare_clippy_lint! {\n     /// asm!(\"lea ({}), {}\", in(reg) ptr, lateout(reg) _, options(att_syntax));\n     /// # }\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub INLINE_ASM_X86_INTEL_SYNTAX,\n     restriction,\n     \"prefer AT&T x86 assembly syntax\"\n@@ -111,6 +112,7 @@ declare_clippy_lint! {\n     /// asm!(\"lea {}, [{}]\", lateout(reg) _, in(reg) ptr);\n     /// # }\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub INLINE_ASM_X86_ATT_SYNTAX,\n     restriction,\n     \"prefer Intel x86 assembly syntax\""}, {"sha": "521fc84ee9c375ae3d74416afd0b8a60bb1fc86c", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// const B: bool = false;\n     /// assert!(B)\n     /// ```\n+    #[clippy::version = \"1.34.0\"]\n     pub ASSERTIONS_ON_CONSTANTS,\n     style,\n     \"`assert!(true)` / `assert!(false)` will be optimized out by the compiler, and should probably be replaced by a `panic!()` or `unreachable!()`\""}, {"sha": "e16f4369da9fcdd488063d232f2f70890e86bef4", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// a += b;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ASSIGN_OP_PATTERN,\n     style,\n     \"assigning the result of an operation on a variable to that same variable\"\n@@ -60,6 +61,7 @@ declare_clippy_lint! {\n     /// // ...\n     /// a += a + b;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MISREFACTORED_ASSIGN_OP,\n     suspicious,\n     \"having a variable on both sides of an assign op\""}, {"sha": "0619490e73c4361da3284406b0b8bdceff50a128", "filename": "clippy_lints/src/async_yields_async.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fasync_yields_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fasync_yields_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fasync_yields_async.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     ///   };\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub ASYNC_YIELDS_ASYNC,\n     correctness,\n     \"async blocks that return a type that can be awaited\""}, {"sha": "1edb7c950e7b1d0bd141654178cf032d731b3a59", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -66,6 +66,7 @@ declare_clippy_lint! {\n     /// #[inline(always)]\n     /// fn not_quite_hot_code(..) { ... }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INLINE_ALWAYS,\n     pedantic,\n     \"use of `#[inline(always)]`\"\n@@ -100,6 +101,7 @@ declare_clippy_lint! {\n     /// #[macro_use]\n     /// extern crate baz;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USELESS_ATTRIBUTE,\n     correctness,\n     \"use of lint attributes on `extern crate` items\"\n@@ -119,6 +121,7 @@ declare_clippy_lint! {\n     /// #[deprecated(since = \"forever\")]\n     /// fn something_else() { /* ... */ }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DEPRECATED_SEMVER,\n     correctness,\n     \"use of `#[deprecated(since = \\\"x\\\")]` where x is not semver\"\n@@ -156,6 +159,7 @@ declare_clippy_lint! {\n     /// #[allow(dead_code)]\n     /// fn this_is_fine_too() { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EMPTY_LINE_AFTER_OUTER_ATTR,\n     nursery,\n     \"empty line after outer attribute\"\n@@ -179,6 +183,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// #![deny(clippy::as_conversions)]\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub BLANKET_CLIPPY_RESTRICTION_LINTS,\n     suspicious,\n     \"enabling the complete restriction group\"\n@@ -210,6 +215,7 @@ declare_clippy_lint! {\n     /// #[rustfmt::skip]\n     /// fn main() { }\n     /// ```\n+    #[clippy::version = \"1.32.0\"]\n     pub DEPRECATED_CFG_ATTR,\n     complexity,\n     \"usage of `cfg_attr(rustfmt)` instead of tool attributes\"\n@@ -242,6 +248,7 @@ declare_clippy_lint! {\n     /// fn conditional() { }\n     /// ```\n     /// Check the [Rust Reference](https://doc.rust-lang.org/reference/conditional-compilation.html#target_os) for more details.\n+    #[clippy::version = \"1.45.0\"]\n     pub MISMATCHED_TARGET_OS,\n     correctness,\n     \"usage of `cfg(operating_system)` instead of `cfg(target_os = \\\"operating_system\\\")`\""}, {"sha": "1cc3418d4748c98728116538fba64a80949abefc", "filename": "clippy_lints/src/await_holding_invalid.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -47,6 +47,7 @@ declare_clippy_lint! {\n     ///   bar.await;\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub AWAIT_HOLDING_LOCK,\n     pedantic,\n     \"Inside an async function, holding a MutexGuard while calling await\"\n@@ -88,6 +89,7 @@ declare_clippy_lint! {\n     ///   bar.await;\n     /// }\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub AWAIT_HOLDING_REFCELL_REF,\n     pedantic,\n     \"Inside an async function, holding a RefCell ref while calling await\""}, {"sha": "0977cf22b2c4e00343756b8ef381f66291ae24f5", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     /// # let x = 1;\n     /// if (x & 1 == 2) { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BAD_BIT_MASK,\n     correctness,\n     \"expressions of the form `_ & mask == select` that will only ever return `true` or `false`\"\n@@ -73,6 +74,7 @@ declare_clippy_lint! {\n     /// # let x = 1;\n     /// if (x | 1 > 3) {  }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INEFFECTIVE_BIT_MASK,\n     correctness,\n     \"expressions where a bit mask will be rendered useless by a comparison, e.g., `(x | 1) > 2`\"\n@@ -95,6 +97,7 @@ declare_clippy_lint! {\n     /// # let x = 1;\n     /// if x & 0b1111 == 0 { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub VERBOSE_BIT_MASK,\n     pedantic,\n     \"expressions where a bit mask is less readable than the corresponding method call\""}, {"sha": "1600fb25d89e24cec4b9935477b1d19f25a4987d", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -17,6 +17,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let foo = 3.14;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BLACKLISTED_NAME,\n     style,\n     \"usage of a blacklisted/placeholder name\""}, {"sha": "b59f49357df241c9f6a0cd33a9cebb26d142aeee", "filename": "clippy_lints/src/blocks_in_if_conditions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     /// let res = { let x = somefunc(); x };\n     /// if res { /* ... */ }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub BLOCKS_IN_IF_CONDITIONS,\n     style,\n     \"useless or complex blocks that can be eliminated in conditions\""}, {"sha": "a59abc6630671e3a6f88bb3594cdfa9eab91b87d", "filename": "clippy_lints/src/bool_assert_comparison.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbool_assert_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbool_assert_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbool_assert_comparison.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -23,6 +23,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// assert!(!\"a\".is_empty());\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub BOOL_ASSERT_COMPARISON,\n     style,\n     \"Using a boolean as comparison value in an assert_* macro when there is no need\""}, {"sha": "51835ee7488fb01fe3090b45633eb0039dbb6743", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// if a && true  // should be: if a\n     /// if !(a == b)  // should be: if a != b\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NONMINIMAL_BOOL,\n     complexity,\n     \"boolean expressions that can be written more concisely\"\n@@ -52,6 +53,7 @@ declare_clippy_lint! {\n     /// if a && b || a { ... }\n     /// ```\n     /// The `b` is unnecessary, the expression is equivalent to `if a`.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LOGIC_BUG,\n     correctness,\n     \"boolean expressions that contain terminals which can be eliminated\""}, {"sha": "a938ada9d2aaa61aa6c6e3bbfb354c0d7f9013a0", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// # let vec = vec![1_u8];\n     /// &vec.iter().filter(|x| **x == 0u8).count(); // use bytecount::count instead\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NAIVE_BYTECOUNT,\n     pedantic,\n     \"use of naive `<slice>.filter(|&x| x == y).count()` to count byte values\""}, {"sha": "23f79fdc68238ec24ecb1fe5dd2c6e7c08dd3279", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -42,6 +42,7 @@ declare_clippy_lint! {\n     /// keywords = [\"clippy\", \"lint\", \"plugin\"]\n     /// categories = [\"development-tools\", \"development-tools::cargo-plugins\"]\n     /// ```\n+    #[clippy::version = \"1.32.0\"]\n     pub CARGO_COMMON_METADATA,\n     cargo,\n     \"common metadata is defined in `Cargo.toml`\""}, {"sha": "3f286dd9e2fca893b849ce17450b909caf4d3d02", "filename": "clippy_lints/src/case_sensitive_file_extension_comparisons.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcase_sensitive_file_extension_comparisons.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     ///     filename.rsplit('.').next().map(|ext| ext.eq_ignore_ascii_case(\"rs\")) == Some(true)\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n     pedantic,\n     \"Checks for calls to ends_with with case-sensitive file extensions\""}, {"sha": "c674327486cb9582011aa756371ba1a052ee91af", "filename": "clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     /// let x = u64::MAX;\n     /// x as f64;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CAST_PRECISION_LOSS,\n     pedantic,\n     \"casts that cause loss of precision, e.g., `x as f32` where `x: u64`\"\n@@ -61,6 +62,7 @@ declare_clippy_lint! {\n     /// let y: i8 = -1;\n     /// y as u128; // will return 18446744073709551615\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CAST_SIGN_LOSS,\n     pedantic,\n     \"casts from signed types to unsigned types, e.g., `x as u32` where `x: i32`\"\n@@ -83,6 +85,7 @@ declare_clippy_lint! {\n     ///     x as u8\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CAST_POSSIBLE_TRUNCATION,\n     pedantic,\n     \"casts that may cause truncation of the value, e.g., `x as u8` where `x: u32`, or `x as i32` where `x: f32`\"\n@@ -106,6 +109,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// u32::MAX as i32; // will yield a value of `-1`\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CAST_POSSIBLE_WRAP,\n     pedantic,\n     \"casts that may cause wrapping around the value, e.g., `x as i32` where `x: u32` and `x > i32::MAX`\"\n@@ -138,6 +142,7 @@ declare_clippy_lint! {\n     ///     u64::from(x)\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CAST_LOSSLESS,\n     pedantic,\n     \"casts using `as` that are known to be lossless, e.g., `x as u64` where `x: u8`\"\n@@ -163,6 +168,7 @@ declare_clippy_lint! {\n     /// let _ = 2_i32;\n     /// let _ = 0.5_f32;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNNECESSARY_CAST,\n     complexity,\n     \"cast to the same type, e.g., `x as i32` where `x: i32`\"\n@@ -190,6 +196,7 @@ declare_clippy_lint! {\n     /// (&1u8 as *const u8).cast::<u16>();\n     /// (&mut 1u8 as *mut u8).cast::<u16>();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CAST_PTR_ALIGNMENT,\n     pedantic,\n     \"cast from a pointer to a more-strictly-aligned pointer\"\n@@ -217,6 +224,7 @@ declare_clippy_lint! {\n     /// fn fun2() -> i32 { 1 }\n     /// let a = fun2 as usize;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FN_TO_NUMERIC_CAST,\n     style,\n     \"casting a function pointer to a numeric type other than usize\"\n@@ -247,6 +255,7 @@ declare_clippy_lint! {\n     /// let fn_ptr = fn2 as usize;\n     /// let fn_ptr_truncated = fn_ptr as i32;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FN_TO_NUMERIC_CAST_WITH_TRUNCATION,\n     style,\n     \"casting a function pointer to a numeric type not wide enough to store the address\"\n@@ -283,6 +292,7 @@ declare_clippy_lint! {\n     /// }\n     /// let _ = fn3 as fn() -> u16;\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub FN_TO_NUMERIC_CAST_ANY,\n     restriction,\n     \"casting a function pointer to any integer type\"\n@@ -317,6 +327,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.33.0\"]\n     pub CAST_REF_TO_MUT,\n     correctness,\n     \"a cast of reference to a mutable pointer\"\n@@ -344,6 +355,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// b'x'\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CHAR_LIT_AS_U8,\n     complexity,\n     \"casting a character literal to `u8` truncates\"\n@@ -372,6 +384,7 @@ declare_clippy_lint! {\n     /// let _ = ptr.cast::<i32>();\n     /// let _ = mut_ptr.cast::<i32>();\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub PTR_AS_PTR,\n     pedantic,\n     \"casting using `as` from and to raw pointers that doesn't change its mutability, where `pointer::cast` could take the place of `as`\""}, {"sha": "ffe6340bd77a58efe1ecf0588c306139b400b722", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// i32::try_from(foo).is_ok()\n     /// # ;\n     /// ```\n+    #[clippy::version = \"1.37.0\"]\n     pub CHECKED_CONVERSIONS,\n     pedantic,\n     \"`try_from` could replace manual bounds checking when casting\""}, {"sha": "84a2373efe15b0adadd14d9361d18638ad084545", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// No. You'll see it when you get the warning.\n+    #[clippy::version = \"1.35.0\"]\n     pub COGNITIVE_COMPLEXITY,\n     nursery,\n     \"functions that should be split up into multiple functions\""}, {"sha": "f03f34e5a4b381e0fc238a252dcafb5d914bf2f4", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -47,6 +47,7 @@ declare_clippy_lint! {\n     ///     \u2026\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub COLLAPSIBLE_IF,\n     style,\n     \"nested `if`s that can be collapsed (e.g., `if x { if y { ... } }`\"\n@@ -82,6 +83,7 @@ declare_clippy_lint! {\n     ///     \u2026\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub COLLAPSIBLE_ELSE_IF,\n     style,\n     \"nested `else`-`if` expressions that can be collapsed (e.g., `else { if x { ... } }`)\""}, {"sha": "626f9971f01e7d678cbc69c22a00d09841109cf7", "filename": "clippy_lints/src/collapsible_match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_match.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     ///     };\n     /// }\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub COLLAPSIBLE_MATCH,\n     style,\n     \"Nested `match` or `if let` expressions where the patterns may be \\\"collapsed\\\" together.\""}, {"sha": "399d11472b09b2a6f49b8346c65a09cdb8368267", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -49,6 +49,7 @@ declare_clippy_lint! {\n     ///      }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub COMPARISON_CHAIN,\n     style,\n     \"`if`s that can be rewritten with `match` and `cmp`\""}, {"sha": "d07bc23235b0f37bdadf0811097775129c8e3802", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     ///     \u2026\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub IFS_SAME_COND,\n     correctness,\n     \"consecutive `if`s with the same condition\"\n@@ -88,6 +89,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub SAME_FUNCTIONS_IN_IF_CONDITION,\n     pedantic,\n     \"consecutive `if`s with the same function call\"\n@@ -109,6 +111,7 @@ declare_clippy_lint! {\n     ///     42\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub IF_SAME_THEN_ELSE,\n     correctness,\n     \"`if` with the same `then` and `else` blocks\"\n@@ -147,6 +150,7 @@ declare_clippy_lint! {\n     ///     42\n     /// };\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub BRANCHES_SHARING_CODE,\n     nursery,\n     \"`if` statement with shared code in all blocks\""}, {"sha": "026683f6006246e040ee445bd8f910df5db5c38d", "filename": "clippy_lints/src/copy_iterator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopy_iterator.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// let a: Vec<_> = my_iterator.take(1).collect();\n     /// let b: Vec<_> = my_iterator.collect();\n     /// ```\n+    #[clippy::version = \"1.30.0\"]\n     pub COPY_ITERATOR,\n     pedantic,\n     \"implementing `Iterator` on a `Copy` type\""}, {"sha": "6bc4054a5abca5237a689d5d5c46ffa8e0c72b05", "filename": "clippy_lints/src/create_dir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcreate_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fcreate_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcreate_dir.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -23,6 +23,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// std::fs::create_dir_all(\"foo\");\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub CREATE_DIR,\n     restriction,\n     \"calling `std::fs::create_dir` instead of `std::fs::create_dir_all`\""}, {"sha": "1aae4c81c73c0b3e85da93aa9651fb3672fb45c5", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -23,6 +23,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// true\n     /// ```\n+    #[clippy::version = \"1.34.0\"]\n     pub DBG_MACRO,\n     restriction,\n     \"`dbg!` macro is intended as a debugging tool\""}, {"sha": "a0b137efe221a3bc8113a2936403bbce99f9b874", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let s = String::default();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DEFAULT_TRAIT_ACCESS,\n     pedantic,\n     \"checks for literal calls to `Default::default()`\"\n@@ -62,6 +63,7 @@ declare_clippy_lint! {\n     ///     .. Default::default()\n     /// };\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub FIELD_REASSIGN_WITH_DEFAULT,\n     style,\n     \"binding initialized with Default should have its fields set in the initializer\""}, {"sha": "3573ea5f02671becbce4b4f1ddd00559fe9c84c9", "filename": "clippy_lints/src/default_numeric_fallback.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -46,6 +46,7 @@ declare_clippy_lint! {\n     /// let i = 10i32;\n     /// let f = 1.23f64;\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub DEFAULT_NUMERIC_FALLBACK,\n     restriction,\n     \"usage of unconstrained numeric literals which may cause default numeric fallback.\""}, {"sha": "bbaae94d3ddbe108ff5dd0a24b20d68f35937234", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// let _ = d.unwrap().deref();\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub EXPLICIT_DEREF_METHODS,\n     pedantic,\n     \"Explicit use of deref or deref_mut method while not in a method chain.\""}, {"sha": "d0fab2b48fb074beba10b3e7b864d64eaab74549", "filename": "clippy_lints/src/derivable_impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fderivable_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fderivable_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderivable_impls.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -46,6 +46,7 @@ declare_clippy_lint! {\n     /// has exactly equal bounds, and therefore this lint is disabled for types with\n     /// generic parameters.\n     ///\n+    #[clippy::version = \"1.57.0\"]\n     pub DERIVABLE_IMPLS,\n     complexity,\n     \"manual implementation of the `Default` trait which is equal to a derive\""}, {"sha": "4b232a26e5d0f69eae482e72c590ac0e2d834fb7", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     ///     ...\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DERIVE_HASH_XOR_EQ,\n     correctness,\n     \"deriving `Hash` but implementing `PartialEq` explicitly\"\n@@ -88,6 +89,7 @@ declare_clippy_lint! {\n     /// #[derive(Ord, PartialOrd, PartialEq, Eq)]\n     /// struct Foo;\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub DERIVE_ORD_XOR_PARTIAL_ORD,\n     correctness,\n     \"deriving `Ord` but implementing `PartialOrd` explicitly\"\n@@ -114,6 +116,7 @@ declare_clippy_lint! {\n     ///     // ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXPL_IMPL_CLONE_ON_COPY,\n     pedantic,\n     \"implementing `Clone` explicitly on `Copy` types\"\n@@ -147,6 +150,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub UNSAFE_DERIVE_DESERIALIZE,\n     pedantic,\n     \"deriving `serde::Deserialize` on a type that has methods using `unsafe`\""}, {"sha": "c2217353b323783214e7e86b199884d38c886163", "filename": "clippy_lints/src/disallowed_method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_method.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -47,6 +47,7 @@ declare_clippy_lint! {\n     /// let mut xs = Vec::new(); // Vec::new is _not_ disallowed in the config.\n     /// xs.push(123); // Vec::push is _not_ disallowed in the config.\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub DISALLOWED_METHOD,\n     nursery,\n     \"use of a disallowed method call\""}, {"sha": "3c3f3631849e58dc1b44a8da92edf70d84dff02d", "filename": "clippy_lints/src/disallowed_script_idents.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdisallowed_script_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdisallowed_script_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_script_idents.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     /// let z\u00e4hler = 10; // OK, it's still latin.\n     /// let \u30ab\u30a6\u30f3\u30bf = 10; // Will spawn the lint.\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub DISALLOWED_SCRIPT_IDENTS,\n     restriction,\n     \"usage of non-allowed Unicode scripts\""}, {"sha": "7e784ca224499b733c7059346a61659dd5d34148", "filename": "clippy_lints/src/disallowed_type.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdisallowed_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdisallowed_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_type.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -42,6 +42,7 @@ declare_clippy_lint! {\n     /// // A similar type that is allowed by the config\n     /// use std::collections::HashMap;\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub DISALLOWED_TYPE,\n     nursery,\n     \"use of a disallowed type\""}, {"sha": "249cf260309be5cb6f022a062b002e8c2e3c4e47", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -67,6 +67,7 @@ declare_clippy_lint! {\n     /// /// [SmallVec]: SmallVec\n     /// fn main() {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DOC_MARKDOWN,\n     pedantic,\n     \"presence of `_`, `::` or camel-case outside backticks in documentation\"\n@@ -101,6 +102,7 @@ declare_clippy_lint! {\n     ///     unimplemented!();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.39.0\"]\n     pub MISSING_SAFETY_DOC,\n     style,\n     \"`pub unsafe fn` without `# Safety` docs\"\n@@ -129,6 +131,7 @@ declare_clippy_lint! {\n     ///     unimplemented!();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub MISSING_ERRORS_DOC,\n     pedantic,\n     \"`pub fn` returns `Result` without `# Errors` in doc comment\"\n@@ -159,6 +162,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub MISSING_PANICS_DOC,\n     pedantic,\n     \"`pub fn` may panic without `# Panics` in doc comment\"\n@@ -187,6 +191,7 @@ declare_clippy_lint! {\n     ///     unimplemented!();\n     /// }\n     /// ``````\n+    #[clippy::version = \"1.40.0\"]\n     pub NEEDLESS_DOCTEST_MAIN,\n     style,\n     \"presence of `fn main() {` in code examples\""}, {"sha": "176092e5b28003da7671dc77cf1fc03bd40004d5", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// # let y = 2;\n     /// if x <= y {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DOUBLE_COMPARISONS,\n     complexity,\n     \"unnecessary double comparisons that can be simplified\""}, {"sha": "e10f740d24a4193d4c141b7c1f1e96a12239353f", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// foo(0);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DOUBLE_PARENS,\n     complexity,\n     \"Warn on unnecessary double parentheses\""}, {"sha": "a8f8e3d8a42c0bba557b0dc04fdbb9b2f9730a6b", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -25,6 +25,7 @@ declare_clippy_lint! {\n     /// // still locked\n     /// operation_that_requires_mutex_to_be_unlocked();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DROP_REF,\n     correctness,\n     \"calls to `std::mem::drop` with a reference instead of an owned value\"\n@@ -46,6 +47,7 @@ declare_clippy_lint! {\n     /// let x = Box::new(1);\n     /// std::mem::forget(&x) // Should have been forget(x), x will still be dropped\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FORGET_REF,\n     correctness,\n     \"calls to `std::mem::forget` with a reference instead of an owned value\"\n@@ -67,6 +69,7 @@ declare_clippy_lint! {\n     /// std::mem::drop(x) // A copy of x is passed to the function, leaving the\n     ///                   // original unaffected\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DROP_COPY,\n     correctness,\n     \"calls to `std::mem::drop` with a value that implements Copy\"\n@@ -94,6 +97,7 @@ declare_clippy_lint! {\n     /// std::mem::forget(x) // A copy of x is passed to the function, leaving the\n     ///                     // original unaffected\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FORGET_COPY,\n     correctness,\n     \"calls to `std::mem::forget` with a value that implements Copy\""}, {"sha": "3070d105014f561ea5274b09c733af42b1f4bbad", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// let _micros = dur.subsec_micros();\n     /// let _millis = dur.subsec_millis();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DURATION_SUBSEC,\n     complexity,\n     \"checks for calculation of subsecond microseconds or milliseconds\""}, {"sha": "92c56c762aad61624155680f632f127a5f1c683d", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     ///     // We don't care about zero.\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ELSE_IF_WITHOUT_ELSE,\n     restriction,\n     \"`if` expression with an `else if`, but without a final `else` branch\""}, {"sha": "af9e65e636135d8fb186f7390bb89d8047e46230", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     ///\n     /// struct Test(!);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EMPTY_ENUM,\n     pedantic,\n     \"enum with no variants\""}, {"sha": "3d92eb16870e3d88c8d9460507d4b15cb20c4236", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -54,6 +54,7 @@ declare_clippy_lint! {\n     /// # let v = 1;\n     /// map.entry(k).or_insert(v);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MAP_ENTRY,\n     perf,\n     \"use of `contains_key` followed by `insert` on a `HashMap` or `BTreeMap`\""}, {"sha": "3b6661c817be7677fe01941e096af0e4f786c1ac", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     ///     Y = 0,\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ENUM_CLIKE_UNPORTABLE_VARIANT,\n     correctness,\n     \"C-like enums that are `repr(isize/usize)` and have values that don't fit into an `i32`\""}, {"sha": "fc3a35efaf84db0afa05bffedd3e8f92245a75ef", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     ///     Battenberg,\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ENUM_VARIANT_NAMES,\n     style,\n     \"enums where all variants share a prefix/postfix\"\n@@ -59,6 +60,7 @@ declare_clippy_lint! {\n     ///     struct BlackForest;\n     /// }\n     /// ```\n+    #[clippy::version = \"1.33.0\"]\n     pub MODULE_NAME_REPETITIONS,\n     pedantic,\n     \"type names prefixed/postfixed with their containing module's name\"\n@@ -89,6 +91,7 @@ declare_clippy_lint! {\n     ///     ...\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MODULE_INCEPTION,\n     style,\n     \"modules that have the same name as their parent module\""}, {"sha": "101234605273393b13d7754d8ff28e0e1ee37725", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     /// # let b = 4;\n     /// assert_eq!(a, a);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EQ_OP,\n     correctness,\n     \"equal operands on both sides of a comparison or bitwise combination (e.g., `x == x`)\"\n@@ -59,6 +60,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// x == *y\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OP_REF,\n     style,\n     \"taking a reference to satisfy the type constraints on `==`\""}, {"sha": "8905cc0de45779408368701d73cb92f5b80196d1", "filename": "clippy_lints/src/equatable_if_let.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fequatable_if_let.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     ///     do_thing();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub EQUATABLE_IF_LET,\n     nursery,\n     \"using pattern matching instead of equality\""}, {"sha": "d49cec26be5f02c6933c72e50227b5c8501b05ad", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -21,6 +21,7 @@ declare_clippy_lint! {\n     /// 0 * x;\n     /// x & 0;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ERASING_OP,\n     correctness,\n     \"using erasing operations, e.g., `x * 0` or `y & 0`\""}, {"sha": "bc5d2f6278dee7e9c05fd58ce40fc0b80b7d16af", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     /// foo(x);\n     /// println!(\"{}\", x);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BOXED_LOCAL,\n     perf,\n     \"using `Box<T>` where unnecessary\""}, {"sha": "5a4b424710440f03b947c4b03cabb337839df59d", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     /// ```\n     /// where `foo(_)` is a plain function that takes the exact argument type of\n     /// `x`.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub REDUNDANT_CLOSURE,\n     style,\n     \"redundant closures, i.e., `|a| foo(a)` (which can be written as just `foo`)\"\n@@ -60,6 +61,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// Some('a').map(char::to_uppercase);\n     /// ```\n+    #[clippy::version = \"1.35.0\"]\n     pub REDUNDANT_CLOSURE_FOR_METHOD_CALLS,\n     pedantic,\n     \"redundant closures for method calls\""}, {"sha": "cdac9f3e6e1776949edb94d07a993b42f0d05c8a", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     /// };\n     /// let a = tmp + x;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EVAL_ORDER_DEPENDENCE,\n     suspicious,\n     \"whether a variable read occurs before a write depends on sub-expression evaluation order\"\n@@ -67,6 +68,7 @@ declare_clippy_lint! {\n     /// let x = (a, b, c, panic!());\n     /// // can simply be replaced by `panic!()`\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DIVERGING_SUB_EXPRESSION,\n     complexity,\n     \"whether an expression contains a diverging sub expression\""}, {"sha": "5435e15de7b4b182fd252d88330aadd3617846be", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -37,6 +37,7 @@ declare_clippy_lint! {\n     ///     Finished,\n     /// }\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub STRUCT_EXCESSIVE_BOOLS,\n     pedantic,\n     \"using too many bools in a struct\"\n@@ -75,6 +76,7 @@ declare_clippy_lint! {\n     ///\n     /// fn f(shape: Shape, temperature: Temperature) { ... }\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub FN_PARAMS_EXCESSIVE_BOOLS,\n     pedantic,\n     \"using too many bools in function parameters\""}, {"sha": "b0f50b5c144bbe45a6487cee425aa3501258169f", "filename": "clippy_lints/src/exhaustive_items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexhaustive_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexhaustive_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexhaustive_items.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     ///     Baz\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub EXHAUSTIVE_ENUMS,\n     restriction,\n     \"detects exported enums that have not been marked #[non_exhaustive]\"\n@@ -60,6 +61,7 @@ declare_clippy_lint! {\n     ///     baz: String,\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub EXHAUSTIVE_STRUCTS,\n     restriction,\n     \"detects exported structs that have not been marked #[non_exhaustive]\""}, {"sha": "d64cc61916c5eb4cf0bf00314253cc8b229d4b97", "filename": "clippy_lints/src/exit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexit.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -18,6 +18,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// std::process::exit(0)\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub EXIT,\n     restriction,\n     \"`std::process::exit` is called, terminating the program\""}, {"sha": "6b327b9ce1720aeb1fbde29b499fb174f8a393e5", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -23,6 +23,7 @@ declare_clippy_lint! {\n     /// // this would be clearer as `eprintln!(\"foo: {:?}\", bar);`\n     /// writeln!(&mut std::io::stderr(), \"foo: {:?}\", bar).unwrap();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXPLICIT_WRITE,\n     complexity,\n     \"using the `write!()` family of functions instead of the `print!()` family of functions, when using the latter would work\""}, {"sha": "05d300058cf4f270ca6e9713c40deb1bbe7b1e8a", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -44,6 +44,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FALLIBLE_IMPL_FROM,\n     nursery,\n     \"Warn on impls of `From<..>` that contain `panic!()` or `unwrap()`\""}, {"sha": "dc6bef52ddd9fb3256168e3cec80fd9a2bfb0af1", "filename": "clippy_lints/src/feature_name.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffeature_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffeature_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffeature_name.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// ghi = []\n     /// ```\n     ///\n+    #[clippy::version = \"1.57.0\"]\n     pub REDUNDANT_FEATURE_NAMES,\n     cargo,\n     \"usage of a redundant feature name\"\n@@ -60,6 +61,7 @@ declare_clippy_lint! {\n     /// def = []\n     ///\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub NEGATIVE_FEATURE_NAMES,\n     cargo,\n     \"usage of a negative feature name\""}, {"sha": "ca8886228de264a042c24c89e2f9688d4c15bb9f", "filename": "clippy_lints/src/float_equality_without_abs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffloat_equality_without_abs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffloat_equality_without_abs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_equality_without_abs.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -37,6 +37,7 @@ declare_clippy_lint! {\n     ///     (a - b).abs() < f32::EPSILON\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub FLOAT_EQUALITY_WITHOUT_ABS,\n     suspicious,\n     \"float equality check without `.abs()`\""}, {"sha": "d30dede833cbf50104651c2112b361d6ffbf5157", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     /// let v: f64 = 0.123_456_789_9;\n     /// println!(\"{}\", v); //  0.123_456_789_9\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXCESSIVE_PRECISION,\n     style,\n     \"excessive precision for float literal\"\n@@ -50,6 +51,7 @@ declare_clippy_lint! {\n     /// let _: f32 = 16_777_216.0;\n     /// let _: f64 = 16_777_217.0;\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub LOSSY_FLOAT_LITERAL,\n     restriction,\n     \"lossy whole number float literals\""}, {"sha": "914723a48029cea67f125307419a25eda99b5344", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -43,6 +43,7 @@ declare_clippy_lint! {\n     /// let _ = a.ln_1p();\n     /// let _ = a.exp_m1();\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub IMPRECISE_FLOPS,\n     nursery,\n     \"usage of imprecise floating point operations\"\n@@ -99,6 +100,7 @@ declare_clippy_lint! {\n     /// let _ = a.abs();\n     /// let _ = -a.abs();\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub SUBOPTIMAL_FLOPS,\n     nursery,\n     \"usage of sub-optimal floating point operations\""}, {"sha": "3f043e5f2f1c55be2ec3b1833297bfb76e8d547b", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// foo.to_owned();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USELESS_FORMAT,\n     complexity,\n     \"useless use of `format!`\""}, {"sha": "f0e1a67dcddb93d852d21eeae72b812be8280dbe", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// # use std::panic::Location;\n     /// println!(\"error: something failed at {}\", Location::caller());\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub FORMAT_IN_FORMAT_ARGS,\n     perf,\n     \"`format!` used in a macro that does formatting\"\n@@ -56,6 +57,7 @@ declare_clippy_lint! {\n     /// # use std::panic::Location;\n     /// println!(\"error: something failed at {}\", Location::caller());\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub TO_STRING_IN_FORMAT_ARGS,\n     perf,\n     \"`to_string` applied to a type that implements `Display` in format args\""}, {"sha": "3e85c8a9c8071a91bc65f45dbc847207e743e1ff", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -21,6 +21,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// a =- 42; // confusing, should it be `a -= 42` or `a = -42`?\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SUSPICIOUS_ASSIGNMENT_FORMATTING,\n     suspicious,\n     \"suspicious formatting of `*=`, `-=` or `!=`\"\n@@ -43,6 +44,7 @@ declare_clippy_lint! {\n     /// if foo &&! bar { // this should be `foo && !bar` but looks like a different operator\n     /// }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub SUSPICIOUS_UNARY_OP_FORMATTING,\n     suspicious,\n     \"suspicious formatting of unary `-` or `!` on the RHS of a BinOp\"\n@@ -79,6 +81,7 @@ declare_clippy_lint! {\n     /// if bar { // this is the `else` block of the previous `if`, but should it be?\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SUSPICIOUS_ELSE_FORMATTING,\n     suspicious,\n     \"suspicious formatting of `else`\"\n@@ -99,6 +102,7 @@ declare_clippy_lint! {\n     ///     -4, -5, -6\n     /// ];\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub POSSIBLE_MISSING_COMMA,\n     correctness,\n     \"possible missing comma in array\""}, {"sha": "866ff216f84a21df3dc04355760f8d8e4a11e40b", "filename": "clippy_lints/src/from_over_into.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffrom_over_into.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffrom_over_into.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_over_into.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub FROM_OVER_INTO,\n     style,\n     \"Warns on implementations of `Into<..>` to use `From<..>`\""}, {"sha": "73e800073b03fe6c0f0e6d93ceef01a834f0dd61", "filename": "clippy_lints/src/from_str_radix_10.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     /// let input: &str = get_input();\n     /// let num: u16 = input.parse()?;\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub FROM_STR_RADIX_10,\n     style,\n     \"from_str_radix with radix 10\""}, {"sha": "ad031cbc09d4d0f631b4fcf87df345aa97924985", "filename": "clippy_lints/src/functions/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     ///     // ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TOO_MANY_ARGUMENTS,\n     complexity,\n     \"functions with too many arguments\"\n@@ -49,6 +50,7 @@ declare_clippy_lint! {\n     ///     println!(\"\");\n     /// }\n     /// ```\n+    #[clippy::version = \"1.34.0\"]\n     pub TOO_MANY_LINES,\n     pedantic,\n     \"functions with too many lines\"\n@@ -84,6 +86,7 @@ declare_clippy_lint! {\n     ///     println!(\"{}\", unsafe { *x });\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NOT_UNSAFE_PTR_ARG_DEREF,\n     correctness,\n     \"public functions dereferencing raw pointer arguments but not marked `unsafe`\"\n@@ -103,6 +106,7 @@ declare_clippy_lint! {\n     /// #[must_use]\n     /// fn useless() { }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub MUST_USE_UNIT,\n     style,\n     \"`#[must_use]` attribute on a unit-returning function / method\"\n@@ -126,6 +130,7 @@ declare_clippy_lint! {\n     ///     unimplemented!();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub DOUBLE_MUST_USE,\n     style,\n     \"`#[must_use]` attribute on a `#[must_use]`-returning function / method\"\n@@ -155,6 +160,7 @@ declare_clippy_lint! {\n     /// // this could be annotated with `#[must_use]`.\n     /// fn id<T>(t: T) -> T { t }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub MUST_USE_CANDIDATE,\n     pedantic,\n     \"function or method that could take a `#[must_use]` attribute\"\n@@ -204,6 +210,7 @@ declare_clippy_lint! {\n     ///\n     /// Note that there are crates that simplify creating the error type, e.g.\n     /// [`thiserror`](https://docs.rs/thiserror).\n+    #[clippy::version = \"1.49.0\"]\n     pub RESULT_UNIT_ERR,\n     style,\n     \"public function returning `Result` with an `Err` type of `()`\""}, {"sha": "03af498eae3c0f8f6e59dcee974d9387888ea689", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// async fn is_send(bytes: std::sync::Arc<[u8]>) {}\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub FUTURE_NOT_SEND,\n     nursery,\n     \"public Futures must be Send\""}, {"sha": "edca701869e0fc2eb89dd14574a9700957f414df", "filename": "clippy_lints/src/get_last_with_len.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fget_last_with_len.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     /// let x = vec![2, 3, 5];\n     /// let last_element = x.last();\n     /// ```\n+    #[clippy::version = \"1.37.0\"]\n     pub GET_LAST_WITH_LEN,\n     complexity,\n     \"Using `x.get(x.len() - 1)` when `x.last()` is correct and simpler\""}, {"sha": "b4e7bbc767135474d1c33d5b3b601e4548a89ad0", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -22,6 +22,7 @@ declare_clippy_lint! {\n     /// # let x = 1;\n     /// x / 1 + 0 * 1 - 0 | 0;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub IDENTITY_OP,\n     complexity,\n     \"using identity operations, e.g., `x + 0` or `y / 1`\""}, {"sha": "e20741d2407e63b21a09ff0b4d40b299dbedcd77", "filename": "clippy_lints/src/if_let_mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_mutex.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     ///     use_locked(locked);\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub IF_LET_MUTEX,\n     correctness,\n     \"locking a `Mutex` in an `if let` block can cause deadlocks\""}, {"sha": "3d59b783337a441b3ca1151f19667fe0174b41b4", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     ///     a()\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub IF_NOT_ELSE,\n     pedantic,\n     \"`if` branches that could be swapped so no negation operation is necessary on the condition\""}, {"sha": "d95f5d41071659055875aedaa24bc0106d87e67e", "filename": "clippy_lints/src/if_then_some_else_none.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     ///     42\n     /// });\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub IF_THEN_SOME_ELSE_NONE,\n     restriction,\n     \"Finds if-else that could be written using `bool::then`\""}, {"sha": "6358228dd47f0e421cc06a7f1306655db868234f", "filename": "clippy_lints/src/implicit_hasher.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_hasher.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -54,6 +54,7 @@ declare_clippy_lint! {\n     ///\n     /// pub fn foo<S: BuildHasher>(map: &mut HashMap<i32, i32, S>) { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub IMPLICIT_HASHER,\n     pedantic,\n     \"missing generalization over different hashers\""}, {"sha": "07caeada80d003fa96f48474a741c22bacf121d0", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     ///     return x;\n     /// }\n     /// ```\n+    #[clippy::version = \"1.33.0\"]\n     pub IMPLICIT_RETURN,\n     restriction,\n     \"use a return statement like `return expr` instead of an expression\""}, {"sha": "4088c54623d36a3dc4187589ada0bf02e4345053", "filename": "clippy_lints/src/implicit_saturating_sub.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// i = i.saturating_sub(1);\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub IMPLICIT_SATURATING_SUB,\n     pedantic,\n     \"Perform saturating subtraction instead of implicitly checking lower bound of data type\""}, {"sha": "1debdef9d86c7b077594bef9115ec3fbf70d8f9b", "filename": "clippy_lints/src/inconsistent_struct_constructor.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -55,6 +55,7 @@ declare_clippy_lint! {\n     /// # let y = 2;\n     /// Foo { x, y };\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub INCONSISTENT_STRUCT_CONSTRUCTOR,\n     pedantic,\n     \"the order of the field init shorthand is inconsistent with the order in the struct definition\""}, {"sha": "9ead4bb27a5881eb3ab43d6def4481f658999b44", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// x[0];\n     /// x[3];\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OUT_OF_BOUNDS_INDEXING,\n     correctness,\n     \"out of bounds constant indexing\"\n@@ -85,6 +86,7 @@ declare_clippy_lint! {\n     /// y.get(10..);\n     /// y.get(..100);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INDEXING_SLICING,\n     restriction,\n     \"indexing/slicing usage\""}, {"sha": "c7db47a552b2cef43093f7af8e4094b3b91025dc", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     ///\n     /// iter::repeat(1_u8).collect::<Vec<_>>();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INFINITE_ITER,\n     correctness,\n     \"infinite iteration\"\n@@ -42,6 +43,7 @@ declare_clippy_lint! {\n     /// let infinite_iter = 0..;\n     /// [0..].iter().zip(infinite_iter.take_while(|x| *x > 5));\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MAYBE_INFINITE_ITER,\n     pedantic,\n     \"possible infinite iteration\""}, {"sha": "254d3f8a4d0f901a672585236c66e19819d963a5", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     ///     fn other() {}\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MULTIPLE_INHERENT_IMPL,\n     restriction,\n     \"Multiple inherent impl that could be grouped\""}, {"sha": "60d234cd6f08f19fcb904f3b68df5a5ccab418b1", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.38.0\"]\n     pub INHERENT_TO_STRING,\n     style,\n     \"type implements inherent method `to_string()`, but should instead implement the `Display` trait\"\n@@ -88,6 +89,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.38.0\"]\n     pub INHERENT_TO_STRING_SHADOW_DISPLAY,\n     correctness,\n     \"type implements inherent method `to_string()`, which gets shadowed by the implementation of the `Display` trait\""}, {"sha": "df69d3dcc51603fa18e14d8177667c359f3c179a", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -24,6 +24,7 @@ declare_clippy_lint! {\n     ///     fn name(&self) -> &'static str;\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INLINE_FN_WITHOUT_BODY,\n     correctness,\n     \"use of `#[inline]` on trait methods without bodies\""}, {"sha": "3716d36ad88168a2fb7eb84f1a02484981c3d341", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// # let y = 1;\n     /// if x > y {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INT_PLUS_ONE,\n     complexity,\n     \"instead of using `x >= y + 1`, use `x > y`\""}, {"sha": "fa78620567880e64488c3d613240e07313907339", "filename": "clippy_lints/src/integer_division.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finteger_division.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finteger_division.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finteger_division.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -23,6 +23,7 @@ declare_clippy_lint! {\n     /// let x = 3f32 / 2f32;\n     /// println!(\"{}\", x);\n     /// ```\n+    #[clippy::version = \"1.37.0\"]\n     pub INTEGER_DIVISION,\n     restriction,\n     \"integer division may cause loss of precision\""}, {"sha": "36e03e50a8e4f4c2c950bb297f88b8d374524f6d", "filename": "clippy_lints/src/invalid_upcast_comparisons.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finvalid_upcast_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Finvalid_upcast_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finvalid_upcast_comparisons.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// let x: u8 = 1;\n     /// (x as u32) > 300;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INVALID_UPCAST_COMPARISONS,\n     pedantic,\n     \"a comparison involving an upcast which is always true or false\""}, {"sha": "b118d3c8b8727242427c85d4383eb381458e3ddb", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -45,6 +45,7 @@ declare_clippy_lint! {\n     ///     foo(); // prints \"foo\"\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ITEMS_AFTER_STATEMENTS,\n     pedantic,\n     \"blocks where an item comes after a statement\""}, {"sha": "968bbc524b2514080059f90daa9b04bb3a61d0b9", "filename": "clippy_lints/src/iter_not_returning_iterator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fiter_not_returning_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fiter_not_returning_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fiter_not_returning_iterator.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     ///    }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub ITER_NOT_RETURNING_ITERATOR,\n     pedantic,\n     \"methods named `iter` or `iter_mut` that do not return an `Iterator`\""}, {"sha": "80260e4cd8315f3c42738bdd19cd0afccd2b1c1c", "filename": "clippy_lints/src/large_const_arrays.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_const_arrays.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// pub static a = [0u32; 1_000_000];\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub LARGE_CONST_ARRAYS,\n     perf,\n     \"large non-scalar const array may cause performance overhead\""}, {"sha": "0191713f60d3f599f773303b61dfa3331c1170ae", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     ///     B(Box<[i32; 8000]>),\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LARGE_ENUM_VARIANT,\n     perf,\n     \"large size difference between variants on an enum\""}, {"sha": "1cc2c28c04ad4dfb0c351091ec550ed753cb0826", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -19,6 +19,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// let a = [0u32; 1_000_000];\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub LARGE_STACK_ARRAYS,\n     pedantic,\n     \"allocating large arrays on stack may cause stack overflow\""}, {"sha": "09cd0d22d8b0fb3eb45da2f41aa21f28eb3e85c2", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -46,6 +46,7 @@ declare_clippy_lint! {\n     ///     ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LEN_ZERO,\n     style,\n     \"checking `.len() == 0` or `.len() > 0` (or similar) when `.is_empty()` could be used instead\"\n@@ -71,6 +72,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LEN_WITHOUT_IS_EMPTY,\n     style,\n     \"traits or impls with a public `len` method but no corresponding `is_empty` method\"\n@@ -108,6 +110,7 @@ declare_clippy_lint! {\n     ///     ..\n     /// }\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub COMPARISON_TO_EMPTY,\n     style,\n     \"checking `x == \\\"\\\"` or `x == []` (or similar) when `.is_empty()` could be used instead\""}, {"sha": "db09d00d7303f3e80cdd876be081a7ac664c2b29", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -48,6 +48,7 @@ declare_clippy_lint! {\n     ///     None\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USELESS_LET_IF_SEQ,\n     nursery,\n     \"unidiomatic `let mut` declaration followed by initialization in `if`\""}, {"sha": "557051fb8d2dc2565ddd1efaae12cd355f32e754", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// // is_ok() is marked #[must_use]\n     /// let _ = f().is_ok();\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub LET_UNDERSCORE_MUST_USE,\n     restriction,\n     \"non-binding let on a `#[must_use]` expression\"\n@@ -53,6 +54,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// let _lock = mutex.lock();\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub LET_UNDERSCORE_LOCK,\n     correctness,\n     \"non-binding let on a synchronization lock\"\n@@ -94,6 +96,7 @@ declare_clippy_lint! {\n     ///     // dropped at end of scope\n     /// }\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub LET_UNDERSCORE_DROP,\n     pedantic,\n     \"non-binding let on a type that implements `Drop`\""}, {"sha": "fad3343d128510aca02466f18960f65a251932b2", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -45,6 +45,7 @@ declare_clippy_lint! {\n     ///     x\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_LIFETIMES,\n     complexity,\n     \"using explicit lifetimes for references in function arguments when elision rules \\\n@@ -73,6 +74,7 @@ declare_clippy_lint! {\n     ///     // ...\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXTRA_UNUSED_LIFETIMES,\n     complexity,\n     \"unused lifetimes in function definitions\""}, {"sha": "130543bbbee80ef229aa818188f9bab24e191c2f", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let x: u64 = 61_864_918_973_511;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNREADABLE_LITERAL,\n     pedantic,\n     \"long literal without underscores\"\n@@ -53,6 +54,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// 2_i32;\n     /// ```\n+    #[clippy::version = \"1.30.0\"]\n     pub MISTYPED_LITERAL_SUFFIXES,\n     correctness,\n     \"mistyped literal suffix\"\n@@ -75,6 +77,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let x: u64 = 61_864_918_973_511;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INCONSISTENT_DIGIT_GROUPING,\n     style,\n     \"integer literals with digits grouped inconsistently\"\n@@ -93,6 +96,7 @@ declare_clippy_lint! {\n     /// let x: u32 = 0xFFF_FFF;\n     /// let y: u8 = 0b01_011_101;\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub UNUSUAL_BYTE_GROUPINGS,\n     style,\n     \"binary or hex literals that aren't grouped by four\"\n@@ -111,6 +115,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x: u64 = 6186491_8973511;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LARGE_DIGIT_GROUPS,\n     pedantic,\n     \"grouping digits into groups that are too large\"\n@@ -128,6 +133,7 @@ declare_clippy_lint! {\n     /// `255` => `0xFF`\n     /// `65_535` => `0xFFFF`\n     /// `4_042_322_160` => `0xF0F0_F0F0`\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DECIMAL_LITERAL_REPRESENTATION,\n     restriction,\n     \"using decimal representation when hexadecimal would be better\""}, {"sha": "ccec648fa78dd1655a984a8d41f8e4fc32d56589", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -47,6 +47,7 @@ declare_clippy_lint! {\n     /// # let mut dst = vec![0; 65];\n     /// dst[64..(src.len() + 64)].clone_from_slice(&src[..]);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MANUAL_MEMCPY,\n     perf,\n     \"manually copying items between slices\"\n@@ -75,6 +76,7 @@ declare_clippy_lint! {\n     ///     println!(\"{}\", i);\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_RANGE_LOOP,\n     style,\n     \"for-looping over a range of indices where an iterator over items would do\"\n@@ -107,6 +109,7 @@ declare_clippy_lint! {\n     ///     // ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXPLICIT_ITER_LOOP,\n     pedantic,\n     \"for-looping over `_.iter()` or `_.iter_mut()` when `&_` or `&mut _` would do\"\n@@ -135,6 +138,7 @@ declare_clippy_lint! {\n     ///     // ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXPLICIT_INTO_ITER_LOOP,\n     pedantic,\n     \"for-looping over `_.into_iter()` when `_` would do\"\n@@ -158,6 +162,7 @@ declare_clippy_lint! {\n     ///     ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ITER_NEXT_LOOP,\n     correctness,\n     \"for-looping over `_.next()` which is probably not intended\"\n@@ -201,6 +206,7 @@ declare_clippy_lint! {\n     ///     // ..\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub FOR_LOOPS_OVER_FALLIBLES,\n     suspicious,\n     \"for-looping over an `Option` or a `Result`, which is more clearly expressed as an `if let`\"\n@@ -233,6 +239,7 @@ declare_clippy_lint! {\n     ///     // .. do something with x\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WHILE_LET_LOOP,\n     complexity,\n     \"`loop { if let { ... } else break }`, which can be written as a `while let` loop\"\n@@ -254,6 +261,7 @@ declare_clippy_lint! {\n     /// // should be\n     /// let len = iterator.count();\n     /// ```\n+    #[clippy::version = \"1.30.0\"]\n     pub NEEDLESS_COLLECT,\n     perf,\n     \"collecting an iterator when collect is not needed\"\n@@ -284,6 +292,7 @@ declare_clippy_lint! {\n     /// # fn bar(bar: usize, baz: usize) {}\n     /// for (i, item) in v.iter().enumerate() { bar(i, *item); }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXPLICIT_COUNTER_LOOP,\n     complexity,\n     \"for-looping with an explicit counter when `_.enumerate()` would do\"\n@@ -317,6 +326,7 @@ declare_clippy_lint! {\n     /// ```no_run\n     /// loop {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EMPTY_LOOP,\n     suspicious,\n     \"empty `loop {}`, which should block or sleep\"\n@@ -336,6 +346,7 @@ declare_clippy_lint! {\n     ///     ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WHILE_LET_ON_ITERATOR,\n     style,\n     \"using a `while let` loop instead of a for loop on an iterator\"\n@@ -364,6 +375,7 @@ declare_clippy_lint! {\n     ///     ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FOR_KV_MAP,\n     style,\n     \"looping on a map using `iter` when `keys` or `values` would do\"\n@@ -385,6 +397,7 @@ declare_clippy_lint! {\n     ///     break;\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEVER_LOOP,\n     correctness,\n     \"any loop that will always `break` or `return`\"\n@@ -420,6 +433,7 @@ declare_clippy_lint! {\n     ///     println!(\"{}\", i); // prints numbers from 0 to 42, not 0 to 21\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MUT_RANGE_BOUND,\n     suspicious,\n     \"for loop over a range where one of the bounds is a mutable variable\"\n@@ -446,6 +460,7 @@ declare_clippy_lint! {\n     ///     println!(\"let me loop forever!\");\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WHILE_IMMUTABLE_CONDITION,\n     correctness,\n     \"variables used within while expression are not mutated in the body\"\n@@ -480,6 +495,7 @@ declare_clippy_lint! {\n     /// let mut vec: Vec<u8> = vec![item1; 20];\n     /// vec.resize(20 + 30, item2);\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub SAME_ITEM_PUSH,\n     style,\n     \"the same item is pushed inside of a for loop\"\n@@ -506,6 +522,7 @@ declare_clippy_lint! {\n     /// let item = &item1;\n     /// println!(\"{}\", item);\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub SINGLE_ELEMENT_LOOP,\n     complexity,\n     \"there is no reason to have a single element loop\"\n@@ -537,6 +554,7 @@ declare_clippy_lint! {\n     ///     println!(\"{}\", n);\n     /// }\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub MANUAL_FLATTEN,\n     complexity,\n     \"for loops over `Option`s or `Result`s with a single expression can be simplified\""}, {"sha": "262a26951c68110152da002292a89b57145c607c", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -24,6 +24,7 @@ declare_clippy_lint! {\n     /// #[macro_use]\n     /// use some_macro;\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub MACRO_USE_IMPORTS,\n     pedantic,\n     \"#[macro_use] is no longer needed\""}, {"sha": "fad8fa467d4b80f23917e969d0a865fdde3a6906", "filename": "clippy_lints/src/main_recursion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     ///     main();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.38.0\"]\n     pub MAIN_RECURSION,\n     style,\n     \"recursion using the entrypoint\""}, {"sha": "ed3166086f7ee05721b5c9e60b7d1109a0850fda", "filename": "clippy_lints/src/manual_assert.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_assert.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// let sad_people: Vec<&str> = vec![];\n     /// assert!(sad_people.is_empty(), \"there are sad people: {:?}\", sad_people);\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub MANUAL_ASSERT,\n     pedantic,\n     \"`panic!` and only a `panic!` in `if`-then statement\""}, {"sha": "86819752f90ffe1753eaa2baa4d681f569bf9046", "filename": "clippy_lints/src/manual_async_fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_async_fn.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// async fn foo() -> i32 { 42 }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub MANUAL_ASYNC_FN,\n     style,\n     \"manual implementations of `async` functions can be simplified using the dedicated syntax\""}, {"sha": "cf5dabd94620587adb4b11f8a26840b115331aca", "filename": "clippy_lints/src/manual_map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_map.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// Some(0).map(|x| x + 1);\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub MANUAL_MAP,\n     style,\n     \"reimplementation of `map`\""}, {"sha": "63a72d4fddeb0b4d30a74d0b394fdde062c509b1", "filename": "clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -52,6 +52,7 @@ declare_clippy_lint! {\n     /// #[non_exhaustive]\n     /// struct T(pub i32, pub i32);\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub MANUAL_NON_EXHAUSTIVE,\n     style,\n     \"manual implementations of the non-exhaustive pattern can be simplified using #[non_exhaustive]\""}, {"sha": "b60e2dc366b416e455ea5fe04ea2a38845f22d89", "filename": "clippy_lints/src/manual_ok_or.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_ok_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_ok_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_ok_or.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     /// let foo: Option<i32> = None;\n     /// foo.ok_or(\"error\");\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub MANUAL_OK_OR,\n     pedantic,\n     \"finds patterns that can be encoded more concisely with `Option::ok_or`\""}, {"sha": "f8e28f1671f07cc66b26a6f0dd74570d38595d95", "filename": "clippy_lints/src/manual_strip.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_strip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_strip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_strip.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -42,6 +42,7 @@ declare_clippy_lint! {\n     ///     assert_eq!(end.to_uppercase(), \"WORLD!\");\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub MANUAL_STRIP,\n     complexity,\n     \"suggests using `strip_{prefix,suffix}` over `str::{starts,ends}_with` and slicing\""}, {"sha": "aac3c6e0de2bb6b12f2bb0f65f3e7de60a9148f7", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     /// let foo: Option<i32> = None;\n     /// foo.unwrap_or(1);\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub MANUAL_UNWRAP_OR,\n     complexity,\n     \"finds patterns that can be encoded more concisely with `Option::unwrap_or` or `Result::unwrap_or`\""}, {"sha": "c2b78e21861d7d38b09eb4cf4e12254c58a0ce6d", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -37,6 +37,7 @@ declare_clippy_lint! {\n     /// let y = x.iter();\n     /// let z = y.cloned();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MAP_CLONE,\n     style,\n     \"using `iterator.map(|x| x.clone())`, or dereferencing closures for `Copy` types\""}, {"sha": "61f21d532c5016ffc3b09a6f7b4705f291c4ab7f", "filename": "clippy_lints/src/map_err_ignore.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmap_err_ignore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmap_err_ignore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_err_ignore.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -97,6 +97,7 @@ declare_clippy_lint! {\n     ///         })\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub MAP_ERR_IGNORE,\n     restriction,\n     \"`map_err` should not ignore the original error\""}, {"sha": "a84de3e079b3918b9c0bb98d91f84d2862278e46", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -47,6 +47,7 @@ declare_clippy_lint! {\n     ///     log_err_msg(format_msg(msg));\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OPTION_MAP_UNIT_FN,\n     complexity,\n     \"using `option.map(f)`, where `f` is a function or closure that returns `()`\"\n@@ -87,6 +88,7 @@ declare_clippy_lint! {\n     ///     log_err_msg(format_msg(msg));\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub RESULT_MAP_UNIT_FN,\n     complexity,\n     \"using `result.map(f)`, where `f` is a function or closure that returns `()`\""}, {"sha": "583b577ffe25d51ea72332b2e130b77c07b7ba20", "filename": "clippy_lints/src/match_on_vec_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatch_on_vec_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatch_on_vec_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatch_on_vec_items.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     ///     _ => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub MATCH_ON_VEC_ITEMS,\n     pedantic,\n     \"matching on vector elements can panic\""}, {"sha": "b1839f00aaee95d1922eea1eaf9c68e3c9a584c2", "filename": "clippy_lints/src/match_result_ok.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatch_result_ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatch_result_ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatch_result_ok.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     ///        vec.push(value)\n     /// }\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub MATCH_RESULT_OK,\n     style,\n     \"usage of `ok()` in `let Some(pat)` statements is unnecessary, match on `Ok(pat)` instead\""}, {"sha": "3316ebf405109591fdcd3270f26b5639887f71aa", "filename": "clippy_lints/src/match_str_case_mismatch.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatch_str_case_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatch_str_case_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatch_str_case_mismatch.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     ///     _ => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub MATCH_STR_CASE_MISMATCH,\n     correctness,\n     \"creation of a case altering match expression with non-compliant arms\""}, {"sha": "74765a1a1de627994eb5b84cd70378f307c853b2", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -57,6 +57,7 @@ declare_clippy_lint! {\n     ///     bar(foo);\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SINGLE_MATCH,\n     style,\n     \"a `match` statement with a single nontrivial arm (i.e., where the other arm is `_ => {}`) instead of `if let`\"\n@@ -98,6 +99,7 @@ declare_clippy_lint! {\n     ///     bar(&other_ref);\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SINGLE_MATCH_ELSE,\n     pedantic,\n     \"a `match` statement with two arms where the second arm's pattern is a placeholder instead of a specific match pattern\"\n@@ -129,6 +131,7 @@ declare_clippy_lint! {\n     ///     _ => frob(x),\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MATCH_REF_PATS,\n     style,\n     \"a `match` or `if let` with all arms prefixed with `&` instead of deref-ing the match expression\"\n@@ -163,6 +166,7 @@ declare_clippy_lint! {\n     ///     bar();\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MATCH_BOOL,\n     pedantic,\n     \"a `match` on a boolean expression instead of an `if..else` block\"\n@@ -185,6 +189,7 @@ declare_clippy_lint! {\n     ///     _ => (),\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MATCH_OVERLAPPING_ARM,\n     style,\n     \"a `match` with overlapping arms\"\n@@ -207,6 +212,7 @@ declare_clippy_lint! {\n     ///     Err(_) => panic!(\"err\"),\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MATCH_WILD_ERR_ARM,\n     pedantic,\n     \"a `match` with `Err(_)` arm and take drastic actions\"\n@@ -233,6 +239,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let r: Option<&()> = x.as_ref();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MATCH_AS_REF,\n     complexity,\n     \"a `match` on an Option value instead of using `as_ref()` or `as_mut`\"\n@@ -265,6 +272,7 @@ declare_clippy_lint! {\n     ///     Foo::B(_) => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"1.34.0\"]\n     pub WILDCARD_ENUM_MATCH_ARM,\n     restriction,\n     \"a wildcard enum match arm using `_`\"\n@@ -299,6 +307,7 @@ declare_clippy_lint! {\n     ///     Foo::C => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n     pedantic,\n     \"a wildcard enum match for a single variant\"\n@@ -326,6 +335,7 @@ declare_clippy_lint! {\n     ///     _ => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub WILDCARD_IN_OR_PATTERNS,\n     complexity,\n     \"a wildcard pattern used with others patterns in same match arm\"\n@@ -361,6 +371,7 @@ declare_clippy_lint! {\n     /// let wrapper = Wrapper::Data(42);\n     /// let Wrapper::Data(data) = wrapper;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INFALLIBLE_DESTRUCTURING_MATCH,\n     style,\n     \"a `match` statement with a single infallible arm instead of a `let`\"\n@@ -392,6 +403,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let (c, d) = (a, b);\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub MATCH_SINGLE_BINDING,\n     complexity,\n     \"a match with a single binding instead of using `let` statement\"\n@@ -422,6 +434,7 @@ declare_clippy_lint! {\n     ///     _ => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub REST_PAT_IN_FULLY_BOUND_STRUCTS,\n     restriction,\n     \"a match on a struct that binds all fields but still uses the wildcard pattern\"\n@@ -477,6 +490,7 @@ declare_clippy_lint! {\n     /// if IpAddr::V6(Ipv6Addr::LOCALHOST).is_ipv6() {}\n     /// Ok::<i32, i32>(42).is_ok();\n     /// ```\n+    #[clippy::version = \"1.31.0\"]\n     pub REDUNDANT_PATTERN_MATCHING,\n     style,\n     \"use the proper utility function avoiding an `if let`\"\n@@ -513,6 +527,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let a = matches!(x, Some(0));\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub MATCH_LIKE_MATCHES_MACRO,\n     style,\n     \"a match that could be written with the matches! macro\"\n@@ -557,6 +572,7 @@ declare_clippy_lint! {\n     ///     Quz => quz(),\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MATCH_SAME_ARMS,\n     pedantic,\n     \"`match` with identical arm bodies\""}, {"sha": "5ffcfd4d2641709c5fa7fd0f8f2fd824e2c5cd24", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -19,6 +19,7 @@ declare_clippy_lint! {\n     /// # use std::rc::Rc;\n     /// mem::forget(Rc::new(55))\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MEM_FORGET,\n     restriction,\n     \"`mem::forget` usage on `Drop` types, likely to cause memory leaks\""}, {"sha": "7fc39f17232fd41050e000e3eead23503d34bea9", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     /// let mut an_option = Some(0);\n     /// let taken = an_option.take();\n     /// ```\n+    #[clippy::version = \"1.31.0\"]\n     pub MEM_REPLACE_OPTION_WITH_NONE,\n     style,\n     \"replacing an `Option` with `None` instead of `take()`\"\n@@ -66,6 +67,7 @@ declare_clippy_lint! {\n     /// The [take_mut](https://docs.rs/take_mut) crate offers a sound solution,\n     /// at the cost of either lazily creating a replacement value or aborting\n     /// on panic, to ensure that the uninitialized value cannot be observed.\n+    #[clippy::version = \"1.39.0\"]\n     pub MEM_REPLACE_WITH_UNINIT,\n     correctness,\n     \"`mem::replace(&mut _, mem::uninitialized())` or `mem::replace(&mut _, mem::zeroed())`\"\n@@ -90,6 +92,7 @@ declare_clippy_lint! {\n     /// let mut text = String::from(\"foo\");\n     /// let taken = std::mem::take(&mut text);\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub MEM_REPLACE_WITH_DEFAULT,\n     style,\n     \"replacing a value of type `T` with `T::default()` instead of using `std::mem::take`\""}, {"sha": "5cb849a56bc6a4c85190a3b48ce5c9195a5fdef5", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -99,6 +99,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// [1, 2, 3].iter().copied();\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub CLONED_INSTEAD_OF_COPIED,\n     pedantic,\n     \"used `cloned` where `copied` could be used instead\"\n@@ -121,6 +122,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let nums: Vec<i32> = [\"1\", \"2\", \"whee!\"].iter().filter_map(|x| x.parse().ok()).collect();\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub FLAT_MAP_OPTION,\n     pedantic,\n     \"used `flat_map` where `filter_map` could be used instead\"\n@@ -166,6 +168,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// res.expect(\"more helpful message\");\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub UNWRAP_USED,\n     restriction,\n     \"using `.unwrap()` on `Result` or `Option`, which should at least get a better message using `expect()`\"\n@@ -208,6 +211,7 @@ declare_clippy_lint! {\n     /// res?;\n     /// # Ok::<(), ()>(())\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub EXPECT_USED,\n     restriction,\n     \"using `.expect()` on `Result` or `Option`, which might be better handled\"\n@@ -237,6 +241,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SHOULD_IMPLEMENT_TRAIT,\n     style,\n     \"defining a method that should be implementing a std trait\"\n@@ -284,6 +289,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WRONG_SELF_CONVENTION,\n     style,\n     \"defining a method named with an established prefix (like \\\"into_\\\") that takes `self` with the wrong convention\"\n@@ -310,6 +316,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// x.expect(\"why did I do this again?\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OK_EXPECT,\n     style,\n     \"using `ok().expect()`, which gives worse error messages than calling `expect` directly on the Result\"\n@@ -335,6 +342,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// x.unwrap_or_default();\n     /// ```\n+    #[clippy::version = \"1.56.0\"]\n     pub UNWRAP_OR_ELSE_DEFAULT,\n     style,\n     \"using `.unwrap_or_else(Default::default)`, which is more succinctly expressed as `.unwrap_or_default()`\"\n@@ -375,6 +383,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// x.map_or_else(some_function, |a| a + 1);\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub MAP_UNWRAP_OR,\n     pedantic,\n     \"using `.map(f).unwrap_or(a)` or `.map(f).unwrap_or_else(func)`, which are more succinctly expressed as `map_or(a, f)` or `map_or_else(a, f)`\"\n@@ -401,6 +410,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// opt.and_then(|a| Some(a + 1));\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OPTION_MAP_OR_NONE,\n     style,\n     \"using `Option.map_or(None, f)`, which is more succinctly expressed as `and_then(f)`\"\n@@ -426,6 +436,7 @@ declare_clippy_lint! {\n     /// # let r: Result<u32, &str> = Ok(1);\n     /// assert_eq!(Some(1), r.ok());\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub RESULT_MAP_OR_INTO_OPTION,\n     style,\n     \"using `Result.map_or(None, Some)`, which is more succinctly expressed as `ok()`\"\n@@ -458,6 +469,7 @@ declare_clippy_lint! {\n     /// let _ = res().map(|s| if s.len() == 42 { 10 } else { 20 });\n     /// let _ = res().map_err(|s| if s.len() == 42 { 10 } else { 20 });\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub BIND_INSTEAD_OF_MAP,\n     complexity,\n     \"using `Option.and_then(|x| Some(y))`, which is more succinctly expressed as `map(|x| y)`\"\n@@ -481,6 +493,7 @@ declare_clippy_lint! {\n     /// # let vec = vec![1];\n     /// vec.iter().find(|x| **x == 0);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FILTER_NEXT,\n     complexity,\n     \"using `filter(p).next()`, which is more succinctly expressed as `.find(p)`\"\n@@ -504,6 +517,7 @@ declare_clippy_lint! {\n     /// # let vec = vec![1];\n     /// vec.iter().find(|x| **x != 0);\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub SKIP_WHILE_NEXT,\n     complexity,\n     \"using `skip_while(p).next()`, which is more succinctly expressed as `.find(!p)`\"\n@@ -527,6 +541,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// vec.iter().flat_map(|x| x.iter());\n     /// ```\n+    #[clippy::version = \"1.31.0\"]\n     pub MAP_FLATTEN,\n     pedantic,\n     \"using combinations of `flatten` and `map` which can usually be written as a single method call\"\n@@ -553,6 +568,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// (0_i32..10).filter_map(|n| n.checked_add(1));\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub MANUAL_FILTER_MAP,\n     complexity,\n     \"using `_.filter(_).map(_)` in a way that can be written more simply as `filter_map(_)`\"\n@@ -579,6 +595,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// (0_i32..10).find_map(|n| n.checked_add(1));\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub MANUAL_FIND_MAP,\n     complexity,\n     \"using `_.find(_).map(_)` in a way that can be written more simply as `find_map(_)`\"\n@@ -601,6 +618,7 @@ declare_clippy_lint! {\n     /// ```rust\n     ///  (0..3).find_map(|x| if x == 2 { Some(x) } else { None });\n     /// ```\n+    #[clippy::version = \"1.36.0\"]\n     pub FILTER_MAP_NEXT,\n     pedantic,\n     \"using combination of `filter_map` and `next` which can usually be written as a single method call\"\n@@ -623,6 +641,7 @@ declare_clippy_lint! {\n     /// # let iter = vec![vec![0]].into_iter();\n     /// iter.flatten();\n     /// ```\n+    #[clippy::version = \"1.39.0\"]\n     pub FLAT_MAP_IDENTITY,\n     complexity,\n     \"call to `flat_map` where `flatten` is sufficient\"\n@@ -652,6 +671,7 @@ declare_clippy_lint! {\n     ///\n     /// let _ = !\"hello world\".contains(\"world\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SEARCH_IS_SOME,\n     complexity,\n     \"using an iterator or string search followed by `is_some()` or `is_none()`, which is more succinctly expressed as a call to `any()` or `contains()` (with negation in case of `is_none()`)\"\n@@ -676,6 +696,7 @@ declare_clippy_lint! {\n     /// let name = \"foo\";\n     /// if name.starts_with('_') {};\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CHARS_NEXT_CMP,\n     style,\n     \"using `.chars().next()` to check if a string starts with a char\"\n@@ -710,6 +731,7 @@ declare_clippy_lint! {\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or_default();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OR_FUN_CALL,\n     perf,\n     \"using any `*or` method with a function call, which suggests `*or_else`\"\n@@ -748,6 +770,7 @@ declare_clippy_lint! {\n     /// # let err_msg = \"I'm a teapot\";\n     /// foo.unwrap_or_else(|| panic!(\"Err {}: {}\", err_code, err_msg));\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub EXPECT_FUN_CALL,\n     perf,\n     \"using any `expect` method with a function call\"\n@@ -765,6 +788,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// 42u64.clone();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CLONE_ON_COPY,\n     complexity,\n     \"using `clone` on a `Copy` type\"\n@@ -792,6 +816,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// Rc::clone(&x);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CLONE_ON_REF_PTR,\n     restriction,\n     \"using 'clone' on a ref-counted pointer\"\n@@ -814,6 +839,7 @@ declare_clippy_lint! {\n     ///     println!(\"{:p} {:p}\", *y, z); // prints out the same pointer\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CLONE_DOUBLE_REF,\n     correctness,\n     \"using `clone` on `&&T`\"\n@@ -837,6 +863,7 @@ declare_clippy_lint! {\n     /// // OK, the specialized impl is used\n     /// [\"foo\", \"bar\"].iter().map(|&s| s.to_string());\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub INEFFICIENT_TO_STRING,\n     pedantic,\n     \"using `to_string` on `&&T` where `T: ToString`\"\n@@ -898,6 +925,7 @@ declare_clippy_lint! {\n     ///     fn new() -> Self;\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEW_RET_NO_SELF,\n     style,\n     \"not returning type containing `Self` in a `new` method\"\n@@ -922,6 +950,7 @@ declare_clippy_lint! {\n     ///\n     /// // Good\n     /// _.split('x');\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SINGLE_CHAR_PATTERN,\n     perf,\n     \"using a single-character str where a char could be used, e.g., `_.split(\\\"x\\\")`\"\n@@ -941,6 +970,7 @@ declare_clippy_lint! {\n     ///     //..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ITERATOR_STEP_BY_ZERO,\n     correctness,\n     \"using `Iterator::step_by(0)`, which will panic at runtime\"\n@@ -962,6 +992,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let _ = std::iter::empty::<Option<i32>>().flatten();\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub OPTION_FILTER_MAP,\n     complexity,\n     \"filtering `Option` for `Some` then force-unwrapping, which can be one type-safe operation\"\n@@ -989,6 +1020,7 @@ declare_clippy_lint! {\n     /// # s.insert(1);\n     /// let x = s.iter().next();\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub ITER_NTH_ZERO,\n     style,\n     \"replace `iter.nth(0)` with `iter.next()`\"\n@@ -1015,6 +1047,7 @@ declare_clippy_lint! {\n     /// let bad_vec = some_vec.get(3);\n     /// let bad_slice = &some_vec[..].get(3);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ITER_NTH,\n     perf,\n     \"using `.iter().nth()` on a standard library type with O(1) element access\"\n@@ -1039,6 +1072,7 @@ declare_clippy_lint! {\n     /// let bad_vec = some_vec.iter().nth(3);\n     /// let bad_slice = &some_vec[..].iter().nth(3);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ITER_SKIP_NEXT,\n     style,\n     \"using `.skip(x).next()` on an iterator\"\n@@ -1075,6 +1109,7 @@ declare_clippy_lint! {\n     /// let last = some_vec[3];\n     /// some_vec[0] = 1;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub GET_UNWRAP,\n     restriction,\n     \"using `.get().unwrap()` or `.get_mut().unwrap()` when using `[]` would work instead\"\n@@ -1098,6 +1133,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// a.append(&mut b);\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub EXTEND_WITH_DRAIN,\n     perf,\n     \"using vec.append(&mut vec) to move the full range of a vecor to another\"\n@@ -1127,6 +1163,7 @@ declare_clippy_lint! {\n     /// s.push_str(abc);\n     /// s.push_str(&def);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub STRING_EXTEND_CHARS,\n     style,\n     \"using `x.extend(s.chars())` where s is a `&str` or `String`\"\n@@ -1150,6 +1187,7 @@ declare_clippy_lint! {\n     /// let s = [1, 2, 3, 4, 5];\n     /// let s2: Vec<isize> = s.to_vec();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ITER_CLONED_COLLECT,\n     style,\n     \"using `.cloned().collect()` on slice to create a `Vec`\"\n@@ -1174,6 +1212,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// name.ends_with('_') || name.ends_with('-');\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CHARS_LAST_CMP,\n     style,\n     \"using `.chars().last()` or `.chars().next_back()` to check if a string ends with a char\"\n@@ -1199,6 +1238,7 @@ declare_clippy_lint! {\n     /// let x: &[i32] = &[1, 2, 3, 4, 5];\n     /// do_stuff(x);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USELESS_ASREF,\n     complexity,\n     \"using `as_ref` where the types before and after the call are the same\"\n@@ -1221,6 +1261,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let _ = (0..3).any(|x| x > 2);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNNECESSARY_FOLD,\n     style,\n     \"using `fold` when a more succinct alternative exists\"\n@@ -1250,6 +1291,7 @@ declare_clippy_lint! {\n     /// // As there is no conditional check on the argument this could be written as:\n     /// let _ = (0..4).map(|x| x + 1);\n     /// ```\n+    #[clippy::version = \"1.31.0\"]\n     pub UNNECESSARY_FILTER_MAP,\n     complexity,\n     \"using `filter_map` when a more succinct alternative exists\"\n@@ -1273,6 +1315,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let _ = (&vec![3, 4, 5]).iter();\n     /// ```\n+    #[clippy::version = \"1.32.0\"]\n     pub INTO_ITER_ON_REF,\n     style,\n     \"using `.into_iter()` on a reference\"\n@@ -1292,6 +1335,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let _ = (0..3).map(|x| x + 2).count();\n     /// ```\n+    #[clippy::version = \"1.39.0\"]\n     pub SUSPICIOUS_MAP,\n     suspicious,\n     \"suspicious usage of map\"\n@@ -1326,6 +1370,7 @@ declare_clippy_lint! {\n     ///     MaybeUninit::uninit().assume_init()\n     /// };\n     /// ```\n+    #[clippy::version = \"1.39.0\"]\n     pub UNINIT_ASSUMED_INIT,\n     correctness,\n     \"`MaybeUninit::uninit().assume_init()`\"\n@@ -1354,6 +1399,7 @@ declare_clippy_lint! {\n     /// let add = x.saturating_add(y);\n     /// let sub = x.saturating_sub(y);\n     /// ```\n+    #[clippy::version = \"1.39.0\"]\n     pub MANUAL_SATURATING_ARITHMETIC,\n     style,\n     \"`.chcked_add/sub(x).unwrap_or(MAX/MIN)`\"\n@@ -1371,6 +1417,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// unsafe { (&() as *const ()).offset(1) };\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub ZST_OFFSET,\n     correctness,\n     \"Check for offset calculations on raw pointers to zero-sized types\"\n@@ -1412,6 +1459,7 @@ declare_clippy_lint! {\n     /// # Ok::<_, std::io::Error>(())\n     /// # };\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub FILETYPE_IS_FILE,\n     restriction,\n     \"`FileType::is_file` is not recommended to test for readable file type\"\n@@ -1437,6 +1485,7 @@ declare_clippy_lint! {\n     /// opt.as_deref()\n     /// # ;\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub OPTION_AS_REF_DEREF,\n     complexity,\n     \"using `as_ref().map(Deref::deref)`, which is more succinctly expressed as `as_deref()`\"\n@@ -1463,6 +1512,7 @@ declare_clippy_lint! {\n     /// a.get(2);\n     /// b.get(0);\n     /// ```\n+    #[clippy::version = \"1.46.0\"]\n     pub ITER_NEXT_SLICE,\n     style,\n     \"using `.iter().next()` on a sliced array, which can be shortened to just `.get()`\"\n@@ -1488,6 +1538,7 @@ declare_clippy_lint! {\n     /// string.insert(0, 'R');\n     /// string.push('R');\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub SINGLE_CHAR_ADD_STR,\n     style,\n     \"`push_str()` or `insert_str()` used with a single-character string literal as parameter\"\n@@ -1526,6 +1577,7 @@ declare_clippy_lint! {\n     ///\n     /// opt.unwrap_or(42);\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub UNNECESSARY_LAZY_EVALUATIONS,\n     style,\n     \"using unnecessary lazy evaluation, which can be replaced with simpler eager evaluation\"\n@@ -1546,6 +1598,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// (0..3).try_for_each(|t| Err(t));\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub MAP_COLLECT_RESULT_UNIT,\n     style,\n     \"using `.map(_).collect::<Result<(),_>()`, which can be replaced with `try_for_each`\"\n@@ -1578,6 +1631,7 @@ declare_clippy_lint! {\n     ///\n     /// assert_eq!(v, vec![5, 5, 5, 5, 5]);\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub FROM_ITER_INSTEAD_OF_COLLECT,\n     pedantic,\n     \"use `.collect()` instead of `::from_iter()`\"\n@@ -1607,6 +1661,7 @@ declare_clippy_lint! {\n     ///     assert!(x >= 0);\n     /// });\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub INSPECT_FOR_EACH,\n     complexity,\n     \"using `.inspect().for_each()`, which can be replaced with `.for_each()`\"\n@@ -1629,6 +1684,7 @@ declare_clippy_lint! {\n     /// # let iter = vec![Some(1)].into_iter();\n     /// iter.flatten();\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub FILTER_MAP_IDENTITY,\n     complexity,\n     \"call to `filter_map` where `flatten` is sufficient\"\n@@ -1651,6 +1707,7 @@ declare_clippy_lint! {\n     /// let x = [1, 2, 3];\n     /// let y: Vec<_> = x.iter().map(|x| 2*x).collect();\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub MAP_IDENTITY,\n     complexity,\n     \"using iterator.map(|x| x)\"\n@@ -1672,6 +1729,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let _ = \"Hello\".as_bytes().get(3);\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub BYTES_NTH,\n     style,\n     \"replace `.bytes().nth()` with `.as_bytes().get()`\"\n@@ -1697,6 +1755,7 @@ declare_clippy_lint! {\n     /// let b = a.clone();\n     /// let c = a.clone();\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub IMPLICIT_CLONE,\n     pedantic,\n     \"implicitly cloning a value by invoking a function on its dereferenced type\"\n@@ -1722,6 +1781,7 @@ declare_clippy_lint! {\n     /// let _ = some_vec.len();\n     /// let _ = &some_vec[..].len();\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub ITER_COUNT,\n     complexity,\n     \"replace `.iter().count()` with `.len()`\"\n@@ -1751,6 +1811,7 @@ declare_clippy_lint! {\n     ///     // use x\n     /// }\n     /// ```\n+    #[clippy::version = \"1.54.0\"]\n     pub SUSPICIOUS_SPLITN,\n     correctness,\n     \"checks for `.splitn(0, ..)` and `.splitn(1, ..)`\"\n@@ -1771,6 +1832,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let x: String = \"x\".repeat(10);\n     /// ```\n+    #[clippy::version = \"1.54.0\"]\n     pub MANUAL_STR_REPEAT,\n     perf,\n     \"manual implementation of `str::repeat`\"\n@@ -1793,6 +1855,7 @@ declare_clippy_lint! {\n     /// let (key, value) = _.split_once('=')?;\n     /// let value = _.split_once('=')?.1;\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub MANUAL_SPLIT_ONCE,\n     complexity,\n     \"replace `.splitn(2, pat)` with `.split_once(pat)`\""}, {"sha": "a6450aec4f7d46f4e108fbafa953058c741f17f8", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// ```\n     /// It will always be equal to `0`. Probably the author meant to clamp the value\n     /// between 0 and 100, but has erroneously swapped `min` and `max`.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MIN_MAX,\n     correctness,\n     \"`min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\""}, {"sha": "a93537104bfa182af03814c91d1b77a0c25cc658", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -56,6 +56,7 @@ declare_clippy_lint! {\n     ///     true\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TOPLEVEL_REF_ARG,\n     style,\n     \"an entire binding declared as `ref`, in a function argument or a `let` statement\"\n@@ -79,6 +80,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// if x.is_nan() { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CMP_NAN,\n     correctness,\n     \"comparisons to `NAN`, which will always return false, probably not intended\"\n@@ -112,6 +114,7 @@ declare_clippy_lint! {\n     /// if (y - 1.23f64).abs() < error_margin { }\n     /// if (y - x).abs() > error_margin { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FLOAT_CMP,\n     pedantic,\n     \"using `==` or `!=` on float values instead of comparing difference with an epsilon\"\n@@ -139,6 +142,7 @@ declare_clippy_lint! {\n     /// # let y = String::from(\"foo\");\n     /// if x == y {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CMP_OWNED,\n     perf,\n     \"creating owned instances for comparing with others, e.g., `x == \\\"foo\\\".to_string()`\"\n@@ -162,6 +166,7 @@ declare_clippy_lint! {\n     /// let a = x % 1;\n     /// let a = x % -1;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MODULO_ONE,\n     correctness,\n     \"taking a number modulo +/-1, which can either panic/overflow or always returns 0\"\n@@ -187,6 +192,7 @@ declare_clippy_lint! {\n     /// let y = _x + 1; // Here we are using `_x`, even though it has a leading\n     ///                 // underscore. We should rename `_x` to `x`\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USED_UNDERSCORE_BINDING,\n     pedantic,\n     \"using a binding which is prefixed with an underscore\"\n@@ -207,6 +213,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// f() && g(); // We should write `if f() { g(); }`.\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SHORT_CIRCUIT_STATEMENT,\n     complexity,\n     \"using a short circuit boolean condition as a statement\"\n@@ -228,6 +235,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let a = std::ptr::null::<u32>();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ZERO_PTR,\n     style,\n     \"using `0 as *{const, mut} T`\"\n@@ -259,6 +267,7 @@ declare_clippy_lint! {\n     /// // let error_margin = std::f64::EPSILON;\n     /// if (x - ONE).abs() < error_margin { }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub FLOAT_CMP_CONST,\n     restriction,\n     \"using `==` or `!=` on float constants instead of comparing difference with an epsilon\""}, {"sha": "4b56eaebaea1624c5894747560c31baeaaeb4f88", "filename": "clippy_lints/src/misc_early/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -46,6 +46,7 @@ declare_clippy_lint! {\n     ///     Foo { .. } => {},\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNNEEDED_FIELD_PATTERN,\n     restriction,\n     \"struct fields bound to a wildcard instead of using `..`\"\n@@ -67,6 +68,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// fn bar(a: i32, _b: i32) {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DUPLICATE_UNDERSCORE_ARGUMENT,\n     style,\n     \"function arguments having names which only differ by an underscore\"\n@@ -85,6 +87,7 @@ declare_clippy_lint! {\n     /// let mut x = 3;\n     /// --x;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DOUBLE_NEG,\n     style,\n     \"`--x`, which is a double negation of `x` and not a pre-decrement as in C/C++\"\n@@ -106,6 +109,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let y = 0x1A9BACD;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MIXED_CASE_HEX_LITERALS,\n     style,\n     \"hex literals whose letter digits are not consistently upper- or lowercased\"\n@@ -129,6 +133,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let y = 123832_i32;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNSEPARATED_LITERAL_SUFFIX,\n     restriction,\n     \"literals whose suffix is not separated by an underscore\"\n@@ -189,6 +194,7 @@ declare_clippy_lint! {\n     /// ```\n     ///\n     /// prints `83` (as `83 == 0o123` while `123 == 0o173`).\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ZERO_PREFIXED_LITERAL,\n     complexity,\n     \"integer literals starting with `0`\"\n@@ -210,6 +216,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BUILTIN_TYPE_SHADOW,\n     style,\n     \"shadowing a builtin type\"\n@@ -239,6 +246,7 @@ declare_clippy_lint! {\n     ///     y => (),\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub REDUNDANT_PATTERN,\n     style,\n     \"using `name @ _` in a pattern\"\n@@ -273,6 +281,7 @@ declare_clippy_lint! {\n     ///     _ => (),\n     /// }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub UNNEEDED_WILDCARD_PATTERN,\n     complexity,\n     \"tuple patterns with a wildcard pattern (`_`) is next to a rest pattern (`..`)\""}, {"sha": "a8d410508563c72092cfaa587c014863353ba979", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -63,6 +63,7 @@ declare_clippy_lint! {\n     /// }\n     /// # }\n     /// ```\n+    #[clippy::version = \"1.34.0\"]\n     pub MISSING_CONST_FOR_FN,\n     nursery,\n     \"Lint functions definitions that could be made `const fn`\""}, {"sha": "db6aab0671bd08d7a58a9a0a02675072d6d45c7e", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     /// allowed-by-default lint for\n     /// public members, but has no way to enforce documentation of private items.\n     /// This lint fixes that.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MISSING_DOCS_IN_PRIVATE_ITEMS,\n     restriction,\n     \"detects missing documentation for public and private members\""}, {"sha": "68d49e0f1503116b21341b0e248d0f5e5444b901", "filename": "clippy_lints/src/missing_enforced_import_rename.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_enforced_import_rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_enforced_import_rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_enforced_import_rename.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// use serde_json::Value as JsonValue;\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub MISSING_ENFORCED_IMPORT_RENAMES,\n     restriction,\n     \"enforce import renames\""}, {"sha": "ac2f16b49e3f1cd3fc3bc560b8aac36d268735da", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -52,6 +52,7 @@ declare_clippy_lint! {\n     ///    fn def_bar() {} // missing #[inline]\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MISSING_INLINE_IN_PUBLIC_ITEMS,\n     restriction,\n     \"detects missing `#[inline]` attribute for public callables (functions, trait methods, methods...)\""}, {"sha": "3b65f80cba20aeb057459af04949401b6069d318", "filename": "clippy_lints/src/module_style.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmodule_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmodule_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodule_style.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     ///   stuff.rs\n     ///   lib.rs\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub MOD_MODULE_FILES,\n     restriction,\n     \"checks that module layout is consistent\"\n@@ -61,6 +62,7 @@ declare_clippy_lint! {\n     ///   lib.rs\n     /// ```\n \n+    #[clippy::version = \"1.57.0\"]\n     pub SELF_NAMED_MODULE_FILES,\n     restriction,\n     \"checks that module layout is consistent\""}, {"sha": "d182a7d52497d45fd59cf8d367f8e84e207d3e10", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -24,6 +24,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x = -17 % 3;\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub MODULO_ARITHMETIC,\n     restriction,\n     \"any modulo arithmetic statement\""}, {"sha": "e45cc86d417ac09aa103c518fabb0ec66f6c9880", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// ctrlc = \"=3.1.0\"\n     /// ansi_term = \"=0.11.0\"\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MULTIPLE_CRATE_VERSIONS,\n     cargo,\n     \"multiple versions of the same crate being used\""}, {"sha": "5fe887a4573cccb99b283dab4af6b5e969e9cc1a", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -72,6 +72,7 @@ declare_clippy_lint! {\n     ///     let _: HashSet<Bad> = HashSet::new();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.42.0\"]\n     pub MUTABLE_KEY_TYPE,\n     suspicious,\n     \"Check for mutable `Map`/`Set` key type\""}, {"sha": "bcbea8f1e66b47edadc368481dc4a50584b48597", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -22,6 +22,7 @@ declare_clippy_lint! {\n     /// # let mut y = 1;\n     /// let x = &mut &mut y;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MUT_MUT,\n     pedantic,\n     \"usage of double-mut refs, e.g., `&mut &mut ...`\""}, {"sha": "b1e6308d2e1a006ff7d33a7e2ce27c607cf67454", "filename": "clippy_lints/src/mut_mutex_lock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     /// let value = value_mutex.get_mut().unwrap();\n     /// *value += 1;\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub MUT_MUTEX_LOCK,\n     style,\n     \"`&mut Mutex::lock` does unnecessary locking\""}, {"sha": "63a1cf7b7d5bd8492c1fe91da435e106a88d293d", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -23,6 +23,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// my_vec.push(&value)\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNNECESSARY_MUT_PASSED,\n     style,\n     \"an argument passed as a mutable reference although the callee only demands an immutable reference\""}, {"sha": "fa7274990db390d1c3f32fb67153b61daaecdd76", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// fn take_a_mut_parameter(_: &mut u32) -> bool { unimplemented!() }\n     /// debug_assert!(take_a_mut_parameter(&mut 5));\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub DEBUG_ASSERT_WITH_MUT_CALL,\n     nursery,\n     \"mutable arguments in `debug_assert{,_ne,_eq}!`\""}, {"sha": "816377fe65e9f31e61b5458784af40267abd46cc", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// # use std::sync::atomic::AtomicBool;\n     /// let x = AtomicBool::new(y);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MUTEX_ATOMIC,\n     perf,\n     \"using a mutex where an atomic value could be used instead\"\n@@ -64,6 +65,7 @@ declare_clippy_lint! {\n     /// # use std::sync::atomic::AtomicUsize;\n     /// let x = AtomicUsize::new(0usize);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MUTEX_INTEGER,\n     nursery,\n     \"using a mutex for an integer type\""}, {"sha": "9838d3cad9f02d537732033a0435ffa73281ea1f", "filename": "clippy_lints/src/needless_arbitrary_self_type.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_arbitrary_self_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_arbitrary_self_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_arbitrary_self_type.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -52,6 +52,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub NEEDLESS_ARBITRARY_SELF_TYPE,\n     complexity,\n     \"type of `self` parameter is already by default `Self`\""}, {"sha": "a8a8d174a823e309f088517808464b9a6d8ad4d8", "filename": "clippy_lints/src/needless_bitwise_bool.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_bitwise_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_bitwise_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bitwise_bool.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// let (x,y) = (true, false);\n     /// if x && !y {}\n     /// ```\n+    #[clippy::version = \"1.54.0\"]\n     pub NEEDLESS_BITWISE_BOOL,\n     pedantic,\n     \"Boolean expressions that use bitwise rather than lazy operators\""}, {"sha": "3709f3948c2b5f541295eaeaa074d8595aed9256", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// !x\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_BOOL,\n     complexity,\n     \"if-statements with plain booleans in the then- and else-clause, e.g., `if p { true } else { false }`\"\n@@ -65,6 +66,7 @@ declare_clippy_lint! {\n     /// if x {}\n     /// if !y {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BOOL_COMPARISON,\n     complexity,\n     \"comparing a variable to a boolean, e.g., `if x == true` or `if x != true`\""}, {"sha": "6709fed91bd18040df18c333887c7990be4f3a10", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -37,6 +37,7 @@ declare_clippy_lint! {\n     /// let x: &i32 = &5;\n     /// fun(x);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_BORROW,\n     style,\n     \"taking a reference that is going to be automatically dereferenced\"\n@@ -63,6 +64,7 @@ declare_clippy_lint! {\n     ///     // use `&x` here\n     /// }\n     /// ```\n+    #[clippy::version = \"1.54.0\"]\n     pub REF_BINDING_TO_REFERENCE,\n     pedantic,\n     \"`ref` binding to a reference\""}, {"sha": "0fcc419e722272b3afccf433f60f3afb07974436", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     /// let mut v = Vec::<String>::new();\n     /// let _ = v.iter_mut().filter(|a| a.is_empty());\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_BORROWED_REFERENCE,\n     complexity,\n     \"destructuring a reference and borrowing the inner value\""}, {"sha": "98a3bce1ff38a1e9d107b54d8f725af240156c9a", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -110,6 +110,7 @@ declare_clippy_lint! {\n     ///     # break;\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_CONTINUE,\n     pedantic,\n     \"`continue` statements that can be replaced by a rearrangement of code\""}, {"sha": "0c1da0351739a25de814988d9db6da15b5bb554b", "filename": "clippy_lints/src/needless_for_each.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_for_each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_for_each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_for_each.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     ///     println!(\"{}\", elem);\n     /// }\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub NEEDLESS_FOR_EACH,\n     pedantic,\n     \"using `for_each` where a `for` loop would be simpler\""}, {"sha": "a28b08c33ec46c533d4d4cfa361d80acd9b3c099", "filename": "clippy_lints/src/needless_option_as_deref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_option_as_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_option_as_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_option_as_deref.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// let a = Some(&1);\n     /// let b = a;\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub NEEDLESS_OPTION_AS_DEREF,\n     complexity,\n     \"no-op use of `deref` or `deref_mut` method to `Option`.\""}, {"sha": "35877d51c0c166c89ec0e70598ed377a84b70a96", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -51,6 +51,7 @@ declare_clippy_lint! {\n     ///     assert_eq!(v.len(), 42);\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_PASS_BY_VALUE,\n     pedantic,\n     \"functions taking arguments by value, but not consuming them in its body\""}, {"sha": "3ca933ea8fbe3fab84e88f2318e9458146f39669", "filename": "clippy_lints/src/needless_question_mark.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_question_mark.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -53,6 +53,7 @@ declare_clippy_lint! {\n     ///     tr.and_then(|t| t.magic)\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub NEEDLESS_QUESTION_MARK,\n     complexity,\n     \"Suggest `value.inner_option` instead of `Some(value.inner_option?)`. The same goes for `Result<T, E>`.\""}, {"sha": "ed315efaa2fa7c546de3a7fabce42dc2997a80f5", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     ///     ..zero_point\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_UPDATE,\n     complexity,\n     \"using `Foo { ..base }` when there are no missing fields\""}, {"sha": "efe31a1544187ebeec7ca98fb3e6e034272f9312", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     ///     _ => false,\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEG_CMP_OP_ON_PARTIAL_ORD,\n     complexity,\n     \"The use of negated comparison operators on partially ordered types may produce confusing code.\""}, {"sha": "cb67fab17400590a04c008afd701f66047f64d6a", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// x * -1\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEG_MULTIPLY,\n     style,\n     \"multiplying integers with `-1`\""}, {"sha": "f0c0c89ca8f3b5bfff8df170daa76273a47b3566", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -45,6 +45,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEW_WITHOUT_DEFAULT,\n     style,\n     \"`fn new() -> Self` method without `Default` implementation\""}, {"sha": "31134743d029bfc73f5d8b9c878971a1ea451cda", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -22,6 +22,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// 0;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NO_EFFECT,\n     complexity,\n     \"statements with no effect\"\n@@ -44,6 +45,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// let _i_serve_no_purpose = 1;\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub NO_EFFECT_UNDERSCORE_BINDING,\n     pedantic,\n     \"binding to `_` prefixed variable with no side-effect\"\n@@ -62,6 +64,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// compute_array()[0];\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNNECESSARY_OPERATION,\n     complexity,\n     \"outer expressions with no effect\""}, {"sha": "df82775d50713d0c891c74cfe67e408c5baa9140", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -69,6 +69,7 @@ declare_clippy_lint! {\n     /// STATIC_ATOM.store(9, SeqCst);\n     /// assert_eq!(STATIC_ATOM.load(SeqCst), 9); // use a `static` item to refer to the same instance\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DECLARE_INTERIOR_MUTABLE_CONST,\n     style,\n     \"declaring `const` with interior mutability\"\n@@ -113,6 +114,7 @@ declare_clippy_lint! {\n     /// STATIC_ATOM.store(9, SeqCst);\n     /// assert_eq!(STATIC_ATOM.load(SeqCst), 9); // use a `static` item to refer to the same instance\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BORROW_INTERIOR_MUTABLE_CONST,\n     style,\n     \"referencing `const` with interior mutability\""}, {"sha": "1a124e2d3cbf39874e50593b34c31b0c45d11a8a", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -24,6 +24,7 @@ declare_clippy_lint! {\n     /// let checked_exp = something;\n     /// let checked_expr = something_else;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SIMILAR_NAMES,\n     pedantic,\n     \"similarly named items and bindings\"\n@@ -42,6 +43,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// let (a, b, c, d, e, f, g) = (...);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MANY_SINGLE_CHAR_NAMES,\n     pedantic,\n     \"too many single character bindings\"\n@@ -62,6 +64,7 @@ declare_clippy_lint! {\n     /// let ___1 = 1;\n     /// let __1___2 = 11;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub JUST_UNDERSCORES_AND_DIGITS,\n     style,\n     \"unclear name\""}, {"sha": "4b57dbc4c412a0d117352899f7ec55005cb19184", "filename": "clippy_lints/src/non_octal_unix_permissions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_octal_unix_permissions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_octal_unix_permissions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_octal_unix_permissions.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     /// let mut options = OpenOptions::new();\n     /// options.mode(0o644);\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub NON_OCTAL_UNIX_PERMISSIONS,\n     correctness,\n     \"use of non-octal value to set unix file permissions, which will be translated into octal\""}, {"sha": "9c07488bfe6ef39cd5bfcec0263719377de7f98a", "filename": "clippy_lints/src/non_send_fields_in_send_ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_send_fields_in_send_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnon_send_fields_in_send_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_send_fields_in_send_ty.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -43,6 +43,7 @@ declare_clippy_lint! {\n     /// ```\n     /// Use thread-safe types like [`std::sync::Arc`](https://doc.rust-lang.org/std/sync/struct.Arc.html)\n     /// or specify correct bounds on generic type parameters (`T: Send`).\n+    #[clippy::version = \"1.57.0\"]\n     pub NON_SEND_FIELDS_IN_SEND_TY,\n     suspicious,\n     \"there is field that does not implement `Send` in a `Send` struct\""}, {"sha": "3dcc9e26c9e2d9b43d1cbcb8509d09347f17b1db", "filename": "clippy_lints/src/nonstandard_macro_braces.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// vec![1, 2, 3];\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub NONSTANDARD_MACRO_BRACES,\n     nursery,\n     \"check consistent use of braces in macro\""}, {"sha": "2c77100bdcfc8837a52b2751fb519a8e674d8bf1", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -22,6 +22,7 @@ declare_clippy_lint! {\n     ///\n     /// OpenOptions::new().read(true).truncate(true);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NONSENSICAL_OPEN_OPTIONS,\n     correctness,\n     \"nonsensical combination of options for opening a file\""}, {"sha": "3f5286ba097b5970993d6f7027b94c512a556041", "filename": "clippy_lints/src/option_env_unwrap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_env_unwrap.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// ```rust,no_run\n     /// let _ = env!(\"HOME\");\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub OPTION_ENV_UNWRAP,\n     correctness,\n     \"using `option_env!(...).unwrap()` to get environment variable\""}, {"sha": "df72f4b0eb28766a187b66a5f842472c762d92ab", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -59,6 +59,7 @@ declare_clippy_lint! {\n     ///     y*y\n     /// }, |foo| foo);\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub OPTION_IF_LET_ELSE,\n     nursery,\n     \"reimplementation of Option::map_or\""}, {"sha": "6dabbd4803117692a025804c9ccdd0302e077cd0", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -19,6 +19,7 @@ declare_clippy_lint! {\n     /// # let b = 2;\n     /// a + b < a;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OVERFLOW_CHECK_CONDITIONAL,\n     complexity,\n     \"overflow checks inspired by C which are likely to panic\""}, {"sha": "8769c0452146435d1869b0ea30bfa74721052acb", "filename": "clippy_lints/src/panic_in_result_fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     ///     Err(String::from(\"error\"))\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub PANIC_IN_RESULT_FN,\n     restriction,\n     \"functions of type `Result<..>` that contain `panic!()`, `todo!()`, `unreachable()`, `unimplemented()` or assertion\""}, {"sha": "edfac824ded987e8c47c5e45493c76b1beb83720", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -17,6 +17,7 @@ declare_clippy_lint! {\n     /// ```no_run\n     /// panic!(\"even with a good reason\");\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub PANIC,\n     restriction,\n     \"usage of the `panic!` macro\"\n@@ -33,6 +34,7 @@ declare_clippy_lint! {\n     /// ```no_run\n     /// unimplemented!();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNIMPLEMENTED,\n     restriction,\n     \"`unimplemented!` should not be present in production code\"\n@@ -49,6 +51,7 @@ declare_clippy_lint! {\n     /// ```no_run\n     /// todo!();\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub TODO,\n     restriction,\n     \"`todo!` should not be present in production code\"\n@@ -65,6 +68,7 @@ declare_clippy_lint! {\n     /// ```no_run\n     /// unreachable!();\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub UNREACHABLE,\n     restriction,\n     \"usage of the `unreachable!` macro\""}, {"sha": "e827cdaae8728922580a9f4e7d9fbc7cafd5b3b6", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -25,6 +25,7 @@ declare_clippy_lint! {\n     ///    fn ne(&self, other: &Foo) -> bool { !(self == other) }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PARTIALEQ_NE_IMPL,\n     complexity,\n     \"re-implementing `PartialEq::ne`\""}, {"sha": "3092ab8392a7231b99e23e74f71764ce88c21b1e", "filename": "clippy_lints/src/pass_by_ref_or_value.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -65,6 +65,7 @@ declare_clippy_lint! {\n     /// // Better\n     /// fn foo(v: u32) {}\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRIVIALLY_COPY_PASS_BY_REF,\n     pedantic,\n     \"functions taking small copyable arguments by reference\"\n@@ -98,6 +99,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// fn foo(v: &TooLarge) {}\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub LARGE_TYPES_PASSED_BY_VALUE,\n     pedantic,\n     \"functions taking large arguments by value\""}, {"sha": "8ebee9bd04d3177c8aa8a4f2bfbdee035d41f998", "filename": "clippy_lints/src/path_buf_push_overwrite.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     /// x.push(\"bar\");\n     /// assert_eq!(x, PathBuf::from(\"/foo/bar\"));\n     /// ```\n+    #[clippy::version = \"1.36.0\"]\n     pub PATH_BUF_PUSH_OVERWRITE,\n     nursery,\n     \"calling `push` with file system root on `PathBuf` can overwrite it\""}, {"sha": "3e7eef4edac8a8f56f34e1444fff83ed5424b370", "filename": "clippy_lints/src/pattern_type_mismatch.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -77,6 +77,7 @@ declare_clippy_lint! {\n     ///     *a += b;\n     /// }\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub PATTERN_TYPE_MISMATCH,\n     restriction,\n     \"type of pattern does not match the expression type\""}, {"sha": "cc0533c9f5d1aa5b0abfb43e5050b42605f34265", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -42,6 +42,7 @@ declare_clippy_lint! {\n     /// ### Example\n     /// * `1 << 2 + 3` equals 32, while `(1 << 2) + 3` equals 7\n     /// * `-1i32.abs()` equals -1, while `(-1i32).abs()` equals 1\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PRECEDENCE,\n     complexity,\n     \"operations where precedence may be unclear\""}, {"sha": "c08a19d520b607bac1658b9ce50ab64928d2f5e3", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -70,6 +70,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// fn foo(&[u32]) { .. }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PTR_ARG,\n     style,\n     \"fn arguments of the type `&Vec<...>` or `&String`, suggesting to use `&[...]` or `&str` instead, respectively\"\n@@ -96,6 +97,7 @@ declare_clippy_lint! {\n     ///     ..\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CMP_NULL,\n     style,\n     \"comparing a pointer to a null pointer, suggesting to use `.is_null()` instead\"\n@@ -121,6 +123,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// fn foo(&Foo) -> &mut Bar { .. }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MUT_FROM_REF,\n     correctness,\n     \"fns that create mutable refs from immutable ref args\"\n@@ -143,6 +146,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// unsafe { std::slice::from_raw_parts(NonNull::dangling().as_ptr(), 0); }\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub INVALID_NULL_PTR_USAGE,\n     correctness,\n     \"invalid usage of a null pointer, suggesting `NonNull::dangling()` instead\""}, {"sha": "3c126fc1ca69a27cc0862dcb3f44a8cf1f2df211", "filename": "clippy_lints/src/ptr_eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fptr_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fptr_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_eq.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     ///\n     /// assert!(std::ptr::eq(a, b));\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub PTR_EQ,\n     style,\n     \"use `std::ptr::eq` when comparing raw pointers\""}, {"sha": "964564b57946b5784536ab86e62013fe073b869d", "filename": "clippy_lints/src/ptr_offset_with_cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -38,6 +38,7 @@ declare_clippy_lint! {\n     ///     ptr.add(offset);\n     /// }\n     /// ```\n+    #[clippy::version = \"1.30.0\"]\n     pub PTR_OFFSET_WITH_CAST,\n     complexity,\n     \"unneeded pointer offset cast\""}, {"sha": "a5531993ee6ad36bb038edf750c1f22b993fc6ba", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// option?;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub QUESTION_MARK,\n     style,\n     \"checks for expressions that could be replaced by the question mark operator\""}, {"sha": "09c64485bbb27f4b605e27d51e7d48b15e1bb2c9", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     /// # let x = vec![1];\n     /// x.iter().enumerate();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub RANGE_ZIP_WITH_LEN,\n     complexity,\n     \"zipping iterator with a range when `enumerate()` would do\"\n@@ -72,6 +73,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// for x..=y { .. }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub RANGE_PLUS_ONE,\n     pedantic,\n     \"`x..(y+1)` reads better as `x..=y`\"\n@@ -100,6 +102,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// for x..y { .. }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub RANGE_MINUS_ONE,\n     pedantic,\n     \"`x..=(y-1)` reads better as `x..y`\"\n@@ -132,6 +135,7 @@ declare_clippy_lint! {\n     ///     let sub = &arr[1..3];\n     /// }\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub REVERSED_EMPTY_RANGES,\n     correctness,\n     \"reversing the limits of range expressions, resulting in empty ranges\"\n@@ -158,6 +162,7 @@ declare_clippy_lint! {\n     ///# let x = 6;\n     /// assert!((3..8).contains(&x));\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub MANUAL_RANGE_CONTAINS,\n     style,\n     \"manually reimplementing {`Range`, `RangeInclusive`}`::contains`\""}, {"sha": "1a2c86a768649e501b5a05be3f949a98e9219baf", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -62,6 +62,7 @@ declare_clippy_lint! {\n     ///\n     /// Path::new(\"/a/b\").join(\"c\").to_path_buf();\n     /// ```\n+    #[clippy::version = \"1.32.0\"]\n     pub REDUNDANT_CLONE,\n     perf,\n     \"`clone()` of an owned value that is going to be dropped immediately\""}, {"sha": "0de282542fc3c73fc0e15446364b1505e1b3c3b8", "filename": "clippy_lints/src/redundant_closure_call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_closure_call.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let a = 42\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub REDUNDANT_CLOSURE_CALL,\n     complexity,\n     \"throwaway closures called in the expression they are defined\""}, {"sha": "93dbe936d5841b2e9b9b289ea3e445c5a1857c4c", "filename": "clippy_lints/src/redundant_else.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_else.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     ///     print!(\"Moving on...\");\n     /// }\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub REDUNDANT_ELSE,\n     pedantic,\n     \"`else` branch that can be removed without changing semantics\""}, {"sha": "0dea4a784b2170829f7f1a7be2c825f4dca7f2fd", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// let foo = Foo { bar };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub REDUNDANT_FIELD_NAMES,\n     style,\n     \"checks for fields in struct literals where shorthands could be used\""}, {"sha": "2cee3c14d7f30f89db58dc7797d8090d4fe6d3a1", "filename": "clippy_lints/src/redundant_pub_crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     ///     pub fn internal_fn() { }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub REDUNDANT_PUB_CRATE,\n     nursery,\n     \"Using `pub(crate)` visibility on items that are not crate visible due to the visibility of the module that contains them.\""}, {"sha": "b2bd0103d1114125f0849b91cb6a7abdb811e194", "filename": "clippy_lints/src/redundant_slicing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_slicing.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     ///     x\n     /// }\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub REDUNDANT_SLICING,\n     complexity,\n     \"redundant slicing of the whole range of a type\""}, {"sha": "ea5064217abe55ac47b63a6b91e9ef0369059547", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     ///  const FOO: &[(&str, &str, fn(&Bar) -> bool)] = &[...]\n     ///  static FOO: &[(&str, &str, fn(&Bar) -> bool)] = &[...]\n     /// ```\n+    #[clippy::version = \"1.37.0\"]\n     pub REDUNDANT_STATIC_LIFETIMES,\n     style,\n     \"Using explicit `'static` lifetime for constants or statics when elision rules would allow omitting them.\""}, {"sha": "909d6971a5497305a7937bd7b70984e7ffb729b6", "filename": "clippy_lints/src/ref_option_ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fref_option_ref.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// let x: Option<&u32> = Some(&0u32);\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub REF_OPTION_REF,\n     pedantic,\n     \"use `Option<&T>` instead of `&Option<&T>`\""}, {"sha": "22ae7a291d00e5486e9ef8cb6a7b306aefda8257", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// let a = f(b);\n     /// let c = d;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub DEREF_ADDROF,\n     complexity,\n     \"use of `*&` or `*&mut` in an expression\"\n@@ -124,6 +125,7 @@ declare_clippy_lint! {\n     /// # let point = Point(30, 20);\n     /// let x = point.0;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub REF_IN_DEREF,\n     complexity,\n     \"Use of reference in auto dereference expression.\""}, {"sha": "8e5983b4773a8cd418d2e26565f42ac2f14ac8a8", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -22,6 +22,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// Regex::new(\"|\")\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub INVALID_REGEX,\n     correctness,\n     \"invalid regular expressions\"\n@@ -46,6 +47,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// Regex::new(\"^foobar\")\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRIVIAL_REGEX,\n     nursery,\n     \"trivial regular expressions\""}, {"sha": "b5dd2de633742813a9b72347cf1fbc2e09724a44", "filename": "clippy_lints/src/repeat_once.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Frepeat_once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Frepeat_once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frepeat_once.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     ///     let x = String::from(\"hello world\").clone();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub REPEAT_ONCE,\n     complexity,\n     \"using `.repeat(1)` instead of `String.clone()`, `str.to_string()` or `slice.to_vec()` \""}, {"sha": "494bc7dda18e76008aebf3460fb1d64b4a88d0ee", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -37,6 +37,7 @@ declare_clippy_lint! {\n     ///     String::new()\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LET_AND_RETURN,\n     style,\n     \"creating a let-binding and then immediately returning it like `let x = expr; x` at the end of a block\"\n@@ -62,6 +63,7 @@ declare_clippy_lint! {\n     ///     x\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NEEDLESS_RETURN,\n     style,\n     \"using a return statement like `return expr;` where an expression would suffice\""}, {"sha": "3f38d12fb557ffa167d3ed09168e09424c8e6649", "filename": "clippy_lints/src/same_name_method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsame_name_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsame_name_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsame_name_method.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     ///     fn foo(&self) {}\n     /// }\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub SAME_NAME_METHOD,\n     restriction,\n     \"two method with same name\""}, {"sha": "b14f0518bdb77807751ee8041097a98ef96e10ff", "filename": "clippy_lints/src/self_assignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fself_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fself_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fself_assignment.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     ///     a.y = a.y;\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub SELF_ASSIGNMENT,\n     correctness,\n     \"explicit self-assignment\""}, {"sha": "dd73dbfe09e12b33c0e0d6bf427682414b0cb867", "filename": "clippy_lints/src/self_named_constructors.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fself_named_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fself_named_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fself_named_constructors.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -32,6 +32,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub SELF_NAMED_CONSTRUCTORS,\n     style,\n     \"method should not have the same name as the type it is implemented for\""}, {"sha": "0b3bbbc815580841e701e22d419e37e6ecc336e3", "filename": "clippy_lints/src/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     ///     println!(\"Hello world\");\n     /// }\n     /// ```\n+    #[clippy::version = \"1.52.0\"]\n     pub SEMICOLON_IF_NOTHING_RETURNED,\n     pedantic,\n     \"add a semicolon if nothing is returned\""}, {"sha": "a38b3c4ab69b70fe10c49e8d73712720661a6226", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -15,6 +15,7 @@ declare_clippy_lint! {\n     /// ### Example\n     /// Implementing `Visitor::visit_string` but not\n     /// `Visitor::visit_str`.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SERDE_API_MISUSE,\n     correctness,\n     \"various things that will negatively affect your serde experience\""}, {"sha": "5f82aed872cafc855ac9ed0e115c13a6b2a9f6b0", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let y = &x; // use different variable name\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SHADOW_SAME,\n     restriction,\n     \"rebinding a name to itself, e.g., `let mut x = &mut x`\"\n@@ -55,6 +56,7 @@ declare_clippy_lint! {\n     /// let x = 2;\n     /// let y = x + 1;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SHADOW_REUSE,\n     restriction,\n     \"rebinding a name to an expression that re-uses the original value, e.g., `let x = x + 1`\"\n@@ -84,6 +86,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let w = z; // use different variable name\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SHADOW_UNRELATED,\n     restriction,\n     \"rebinding a name without even using the original value\""}, {"sha": "28d32203da9d73136f7b0c0a69a75af8690e8b21", "filename": "clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     ///     regex::Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub SINGLE_COMPONENT_PATH_IMPORTS,\n     style,\n     \"imports with single component path are redundant\""}, {"sha": "df1e85afdd799a917fad95e4325de826050faa36", "filename": "clippy_lints/src/size_of_in_element_count.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsize_of_in_element_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsize_of_in_element_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsize_of_in_element_count.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     /// let mut y = [2u8; SIZE];\n     /// unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>() * SIZE) };\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub SIZE_OF_IN_ELEMENT_COUNT,\n     correctness,\n     \"using `size_of::<T>` or `size_of_val::<T>` where a count of elements of `T` is expected\""}, {"sha": "1ae772ef70b124ae31244efd4ca23cc2058b7e38", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// let mut vec1 = vec![0; len];\n     /// let mut vec2 = vec![0; len];\n     /// ```\n+    #[clippy::version = \"1.32.0\"]\n     pub SLOW_VECTOR_INITIALIZATION,\n     perf,\n     \"slow vector initialization\""}, {"sha": "953d21e07a3908063d2ab59f13051ffa942f4f74", "filename": "clippy_lints/src/stable_sort_primitive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// let mut vec = vec![2, 1, 3];\n     /// vec.sort_unstable();\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub STABLE_SORT_PRIMITIVE,\n     perf,\n     \"use of sort() when sort_unstable() is equivalent\""}, {"sha": "368274440d5dcb23551ed30be7d4a8ba5f808ece", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// x += \", World\";\n     /// x.push_str(\", World\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub STRING_ADD_ASSIGN,\n     pedantic,\n     \"using `x = x + ..` where x is a `String` instead of `push_str()`\"\n@@ -58,6 +59,7 @@ declare_clippy_lint! {\n     /// let x = \"Hello\".to_owned();\n     /// x + \", World\";\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub STRING_ADD,\n     restriction,\n     \"using `x + ..` where x is a `String` instead of `push_str()`\"\n@@ -102,6 +104,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let bs = b\"a byte string\";\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub STRING_LIT_AS_BYTES,\n     nursery,\n     \"calling `as_bytes` on a string literal instead of using a byte string literal\"\n@@ -125,6 +128,7 @@ declare_clippy_lint! {\n     /// ```rust,should_panic\n     /// &\"\u00d6lkanne\"[1..];\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub STRING_SLICE,\n     restriction,\n     \"slicing a string\"\n@@ -227,6 +231,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let _ = &\"Hello World!\"[6..11];\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub STRING_FROM_UTF8_AS_BYTES,\n     complexity,\n     \"casting string slices to byte slices and back\"\n@@ -371,6 +376,7 @@ declare_clippy_lint! {\n     /// // example code which does not raise clippy warning\n     /// let _ = \"str\".to_owned();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub STR_TO_STRING,\n     restriction,\n     \"using `to_string()` on a `&str`, which should be `to_owned()`\"\n@@ -420,6 +426,7 @@ declare_clippy_lint! {\n     /// let msg = String::from(\"Hello World\");\n     /// let _ = msg.clone();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub STRING_TO_STRING,\n     restriction,\n     \"using `to_string()` on a `String`, which should be `clone()`\""}, {"sha": "be7431f11aad04af75a906aeb92c6a931caf3af9", "filename": "clippy_lints/src/strlen_on_c_strings.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fstrlen_on_c_strings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fstrlen_on_c_strings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrlen_on_c_strings.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// let cstring = CString::new(\"foo\").expect(\"CString::new failed\");\n     /// let len = cstring.as_bytes().len();\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub STRLEN_ON_C_STRINGS,\n     complexity,\n     \"using `libc::strlen` on a `CString` or `CStr` value, while `as_bytes().len()` or `to_bytes().len()` respectively can be used instead\""}, {"sha": "faf43fd9fc1ad536ff934eb4cd1d4d5f116e2931", "filename": "clippy_lints/src/suspicious_operation_groupings.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -59,6 +59,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub SUSPICIOUS_OPERATION_GROUPINGS,\n     nursery,\n     \"groupings of binary operations that look suspiciously like typos\""}, {"sha": "a3195de81d15c7415be7d5f95a3626ad1c0ba54a", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -25,6 +25,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SUSPICIOUS_ARITHMETIC_IMPL,\n     suspicious,\n     \"suspicious use of operators in impl of arithmetic trait\"\n@@ -46,6 +47,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub SUSPICIOUS_OP_ASSIGN_IMPL,\n     suspicious,\n     \"suspicious use of operators in impl of OpAssign trait\""}, {"sha": "a8c7ca4c91687e69583b08917b79b62f33ea8d34", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -35,6 +35,7 @@ declare_clippy_lint! {\n     /// let mut b = 2;\n     /// std::mem::swap(&mut a, &mut b);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub MANUAL_SWAP,\n     complexity,\n     \"manual swap of two variables\"\n@@ -60,6 +61,7 @@ declare_clippy_lint! {\n     /// # let mut b = 2;\n     /// std::mem::swap(&mut a, &mut b);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ALMOST_SWAPPED,\n     correctness,\n     \"`foo = bar; bar = foo` sequence\""}, {"sha": "c9b4b245f4cc25019d130f05b33151bf80a81bdf", "filename": "clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -51,6 +51,7 @@ declare_clippy_lint! {\n     ///    second_string: String,\n     ///}\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub TABS_IN_DOC_COMMENTS,\n     style,\n     \"using tabs in doc comments is not recommended\""}, {"sha": "3766b8f8ed10d6aed395454ffcaa2f8e1ce12bd8", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -17,6 +17,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// (0, 0).0 = 1\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TEMPORARY_ASSIGNMENT,\n     complexity,\n     \"assignments to temporaries\""}, {"sha": "5eb58b47838298d493c0c4c88def60ec2e0182c0", "filename": "clippy_lints/src/to_digit_is_some.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_digit_is_some.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// # let radix = 10;\n     /// let is_digit = c.is_digit(radix);\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub TO_DIGIT_IS_SOME,\n     style,\n     \"`char.is_digit()` is clearer\""}, {"sha": "f8b6bdcd3e15ed413e98e9530045fa5bc5e6fc2a", "filename": "clippy_lints/src/to_string_in_display.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fto_string_in_display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fto_string_in_display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_string_in_display.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub TO_STRING_IN_DISPLAY,\n     correctness,\n     \"`to_string` method used while implementing `Display` trait\""}, {"sha": "47c0a84cd4630ee97a94f3ebfc29f7987ea4e3ff", "filename": "clippy_lints/src/trailing_empty_array.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftrailing_empty_array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftrailing_empty_array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrailing_empty_array.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     ///     last: [u32; 0],\n     /// }\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub TRAILING_EMPTY_ARRAY,\n     nursery,\n     \"struct with a trailing zero-sized array but without `#[repr(C)]` or another `repr` attribute\""}, {"sha": "fb4abceac25e2ccab72372e32f4094c1d8742e81", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// pub fn foo<T>(t: T) where T: Copy + Clone {}\n     /// ```\n+    #[clippy::version = \"1.38.0\"]\n     pub TYPE_REPETITION_IN_BOUNDS,\n     pedantic,\n     \"Types are repeated unnecessary in trait bounds use `+` instead of using `T: _, T: _`\"\n@@ -57,6 +58,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// fn func<T>(arg: T) where T: Clone + Default {}\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub TRAIT_DUPLICATION_IN_BOUNDS,\n     pedantic,\n     \"Check if the same trait bounds are specified twice during a function declaration\""}, {"sha": "3ad4ec74bf51c1bdde228e00f451c3685fa92e31", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// let ptr: *const T = core::intrinsics::transmute('x')\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WRONG_TRANSMUTE,\n     correctness,\n     \"transmutes that are confusing at best, undefined behaviour at worst and always useless\"\n@@ -55,6 +56,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// core::intrinsics::transmute(t); // where the result type is the same as `t`'s\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USELESS_TRANSMUTE,\n     nursery,\n     \"transmutes that have the same to and from types or could be a cast/coercion\"\n@@ -80,6 +82,7 @@ declare_clippy_lint! {\n     /// # let p: *const [i32] = &[];\n     /// p as *const [u16];\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n     complexity,\n     \"transmutes that could be a pointer cast\"\n@@ -98,6 +101,7 @@ declare_clippy_lint! {\n     /// core::intrinsics::transmute(t) // where the result type is the same as\n     ///                                // `*t` or `&t`'s\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub CROSSPOINTER_TRANSMUTE,\n     complexity,\n     \"transmutes that have to or from types that are a pointer to the other\"\n@@ -125,6 +129,7 @@ declare_clippy_lint! {\n     /// // can be written:\n     /// let _: &T = &*p;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRANSMUTE_PTR_TO_REF,\n     complexity,\n     \"transmutes from a pointer to a reference type\"\n@@ -158,6 +163,7 @@ declare_clippy_lint! {\n     /// // should be:\n     /// let _ = std::char::from_u32(x).unwrap();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRANSMUTE_INT_TO_CHAR,\n     complexity,\n     \"transmutes from an integer to a `char`\"\n@@ -191,6 +197,7 @@ declare_clippy_lint! {\n     /// // should be:\n     /// let _ = std::str::from_utf8(b).unwrap();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRANSMUTE_BYTES_TO_STR,\n     complexity,\n     \"transmutes from a `&[u8]` to a `&str`\"\n@@ -213,6 +220,7 @@ declare_clippy_lint! {\n     /// // should be:\n     /// let _: bool = x != 0;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRANSMUTE_INT_TO_BOOL,\n     complexity,\n     \"transmutes from an integer to a `bool`\"\n@@ -235,6 +243,7 @@ declare_clippy_lint! {\n     /// // should be:\n     /// let _: f32 = f32::from_bits(1_u32);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRANSMUTE_INT_TO_FLOAT,\n     complexity,\n     \"transmutes from an integer to a float\"\n@@ -257,6 +266,7 @@ declare_clippy_lint! {\n     /// // should be:\n     /// let _: u32 = 1f32.to_bits();\n     /// ```\n+    #[clippy::version = \"1.41.0\"]\n     pub TRANSMUTE_FLOAT_TO_INT,\n     complexity,\n     \"transmutes from a float to an integer\"\n@@ -279,6 +289,7 @@ declare_clippy_lint! {\n     /// // should be\n     /// let x: [u8; 8] = 0i64.to_ne_bytes();\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub TRANSMUTE_NUM_TO_BYTES,\n     complexity,\n     \"transmutes from a number to an array of `u8`\"\n@@ -306,6 +317,7 @@ declare_clippy_lint! {\n     /// let _ = ptr as *const f32;\n     /// let _ = unsafe{ &*(&1u32 as *const u32 as *const f32) };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TRANSMUTE_PTR_TO_PTR,\n     pedantic,\n     \"transmutes from a pointer to a pointer / a reference to a reference\"\n@@ -337,6 +349,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// vec![2_u16].into_iter().map(u32::from).collect::<Vec<_>>();\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub UNSOUND_COLLECTION_TRANSMUTE,\n     correctness,\n     \"transmute between collections of layout-incompatible types\""}, {"sha": "7939dfedc3a2b4fb6d39555f29a3596828895861", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -25,6 +25,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let null_ref: &u64 = unsafe { std::mem::transmute(0 as *const u64) };\n     /// ```\n+    #[clippy::version = \"1.35.0\"]\n     pub TRANSMUTING_NULL,\n     correctness,\n     \"transmutes from a null pointer to a reference, which is undefined behavior\""}, {"sha": "e0e7ec9a452c139b19d4aeabe0dc99d4981935bb", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -41,6 +41,7 @@ declare_clippy_lint! {\n     ///     Ok(0)\n     /// }\n     /// ```\n+    #[clippy::version = \"1.38.0\"]\n     pub TRY_ERR,\n     style,\n     \"return errors explicitly rather than hiding them behind a `?`\""}, {"sha": "5a7ef760a3025dcbf890a3175fe1d31200fed05c", "filename": "clippy_lints/src/types/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -43,6 +43,7 @@ declare_clippy_lint! {\n     ///     values: Vec<Foo>,\n     /// }\n     /// ```\n+    #[clippy::version = \"1.57.0\"]\n     pub BOX_COLLECTION,\n     perf,\n     \"usage of `Box<Vec<T>>`, vector elements are already on the heap\"\n@@ -75,6 +76,7 @@ declare_clippy_lint! {\n     ///     values: Vec<i32>,\n     /// }\n     /// ```\n+    #[clippy::version = \"1.33.0\"]\n     pub VEC_BOX,\n     complexity,\n     \"usage of `Vec<Box<T>>` where T: Sized, vector elements are already on the heap\"\n@@ -113,6 +115,7 @@ declare_clippy_lint! {\n     ///     Contents::None\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub OPTION_OPTION,\n     pedantic,\n     \"usage of `Option<Option<T>>`\"\n@@ -152,6 +155,7 @@ declare_clippy_lint! {\n     /// # use std::collections::LinkedList;\n     /// let x: LinkedList<usize> = LinkedList::new();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LINKEDLIST,\n     pedantic,\n     \"usage of LinkedList, usually a vector is faster, or a more specialized data structure like a `VecDeque`\"\n@@ -176,6 +180,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// fn foo(bar: &T) { ... }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub BORROWED_BOX,\n     complexity,\n     \"a borrow of a boxed type\"\n@@ -200,6 +205,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// fn foo(bar: &usize) {}\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub REDUNDANT_ALLOCATION,\n     perf,\n     \"redundant allocation\"\n@@ -234,6 +240,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// fn foo(interned: Rc<str>) { ... }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub RC_BUFFER,\n     restriction,\n     \"shared ownership of a buffer type\"\n@@ -255,6 +262,7 @@ declare_clippy_lint! {\n     ///     inner: Rc<Vec<Vec<Box<(u32, u32, u32, u32)>>>>,\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub TYPE_COMPLEXITY,\n     complexity,\n     \"usage of very complex types that might be better factored into `type` definitions\"\n@@ -287,6 +295,7 @@ declare_clippy_lint! {\n     /// use std::cell::RefCell\n     /// fn foo(interned: Rc<RefCell<i32>>) { ... }\n     /// ```\n+    #[clippy::version = \"1.55.0\"]\n     pub RC_MUTEX,\n     restriction,\n     \"usage of `Rc<Mutex<T>>`\""}, {"sha": "c886faf5d28c6db974238976cfd344ae872f7d26", "filename": "clippy_lints/src/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     /// // Safety: references are guaranteed to be non-null.\n     /// let ptr = unsafe { NonNull::new_unchecked(a) };\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub UNDOCUMENTED_UNSAFE_BLOCKS,\n     restriction,\n     \"creating an unsafe block without explaining why it is safe\""}, {"sha": "c58fa67a023881c6a74255f5adb80b6bc9204761", "filename": "clippy_lints/src/undropped_manually_drops.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     ///     std::mem::ManuallyDrop::drop(&mut std::mem::ManuallyDrop::new(S));\n     /// }\n     /// ```\n+    #[clippy::version = \"1.49.0\"]\n     pub UNDROPPED_MANUALLY_DROPS,\n     correctness,\n     \"use of safe `std::mem::drop` function to drop a std::mem::ManuallyDrop, which will not drop the inner value\""}, {"sha": "a514e8c44e2b6888b2930fa0ae03fa5a452d7c8e", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     /// ### Example\n     /// You don't see it, but there may be a zero-width space or soft hyphen\n     /// some\u00adwhere in this text.\n+    #[clippy::version = \"1.49.0\"]\n     pub INVISIBLE_CHARACTERS,\n     correctness,\n     \"using an invisible character in a string literal, which is confusing\"\n@@ -44,6 +45,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x = String::from(\"\\u{20ac}\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub NON_ASCII_LITERAL,\n     restriction,\n     \"using any literal non-ASCII chars in a string literal instead of using the `\\\\u` escape\"\n@@ -62,6 +64,7 @@ declare_clippy_lint! {\n     /// ### Example\n     /// You may not see it, but \"a\u0300\"\" and \"\u00e0\"\" aren't the same string. The\n     /// former when escaped is actually `\"a\\u{300}\"` while the latter is `\"\\u{e0}\"`.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNICODE_NOT_NFC,\n     pedantic,\n     \"using a Unicode literal not in NFC normal form (see [Unicode tr15](http://www.unicode.org/reports/tr15/) for further information)\""}, {"sha": "46cc76b150e4a20e5f4b63dd85874c38ce57b987", "filename": "clippy_lints/src/uninit_vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funinit_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funinit_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funinit_vec.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -52,6 +52,7 @@ declare_clippy_lint! {\n     ///    // perform initialization with `remaining`\n     ///    vec.set_len(...);  // Safe to call `set_len()` on initialized part\n     ///    ```\n+    #[clippy::version = \"1.58.0\"]\n     pub UNINIT_VEC,\n     correctness,\n     \"Vec with uninitialized data\""}, {"sha": "26b4e0f58a870beabd074916fad606a8ceb862da", "filename": "clippy_lints/src/unit_hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funit_hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funit_hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_hash.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     /// \tWithValue(x) => x.hash(&mut state),\n     /// }\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub UNIT_HASH,\n     correctness,\n     \"hashing a unit value, which does nothing\""}, {"sha": "9fb8f2368994a89a2db0dffd348884ea204c5c73", "filename": "clippy_lints/src/unit_return_expecting_ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -30,6 +30,7 @@ declare_clippy_lint! {\n     /// let mut twins = vec!((1, 1), (2, 2));\n     /// twins.sort_by_key(|x| { x.1; });\n     /// ```\n+    #[clippy::version = \"1.47.0\"]\n     pub UNIT_RETURN_EXPECTING_ORD,\n     correctness,\n     \"fn arguments of type Fn(...) -> Ord returning the unit type ().\""}, {"sha": "d9f5b53b413a03dd5734a2edadfa202f7bf7ee98", "filename": "clippy_lints/src/unit_types/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funit_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funit_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Fmod.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -21,6 +21,7 @@ declare_clippy_lint! {\n     ///     1;\n     /// };\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub LET_UNIT_VALUE,\n     pedantic,\n     \"creating a `let` binding to a value of unit type, which usually can't be used afterwards\"\n@@ -68,6 +69,7 @@ declare_clippy_lint! {\n     /// assert_eq!({ foo(); }, { bar(); });\n     /// ```\n     /// will always succeed\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNIT_CMP,\n     correctness,\n     \"comparing unit values\"\n@@ -88,6 +90,7 @@ declare_clippy_lint! {\n     ///     baz(a);\n     /// })\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNIT_ARG,\n     complexity,\n     \"passing unit to a function\""}, {"sha": "0bcafde658a43046760479f766987764f8c45902", "filename": "clippy_lints/src/unnamed_address.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnamed_address.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnamed_address.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnamed_address.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -24,6 +24,7 @@ declare_clippy_lint! {\n     ///     // ...\n     /// }\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub FN_ADDRESS_COMPARISONS,\n     correctness,\n     \"comparison with an address of a function item\"\n@@ -47,6 +48,7 @@ declare_clippy_lint! {\n     ///     ...\n     /// }\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub VTABLE_ADDRESS_COMPARISONS,\n     correctness,\n     \"comparison with an address of a trait vtable\""}, {"sha": "839a4bdab09de36e5a32b4ad335fc66382233be1", "filename": "clippy_lints/src/unnecessary_self_imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -26,6 +26,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// use std::io;\n     /// ```\n+    #[clippy::version = \"1.53.0\"]\n     pub UNNECESSARY_SELF_IMPORTS,\n     restriction,\n     \"imports ending in `::{self}`, which can be omitted\""}, {"sha": "d024577f485317b55bb54acbc35f571bff8bf6d7", "filename": "clippy_lints/src/unnecessary_sort_by.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     /// # let mut vec: Vec<A> = Vec::new();\n     /// vec.sort_by_key(|a| a.foo());\n     /// ```\n+    #[clippy::version = \"1.46.0\"]\n     pub UNNECESSARY_SORT_BY,\n     complexity,\n     \"Use of `Vec::sort_by` when `Vec::sort_by_key` or `Vec::sort` would be clearer\""}, {"sha": "1728533f18b858caeb6b9814f37ff2dcdbbc5e78", "filename": "clippy_lints/src/unnecessary_wraps.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wraps.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -49,6 +49,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub UNNECESSARY_WRAPS,\n     pedantic,\n     \"functions that only return `Ok` or `Some`\""}, {"sha": "0bd151fed91cc57c50c2b0c8ca3a93dd09dd4880", "filename": "clippy_lints/src/unnested_or_patterns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnested_or_patterns.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     ///     if let Some(0 | 2) = Some(0) {}\n     /// }\n     /// ```\n+    #[clippy::version = \"1.46.0\"]\n     pub UNNESTED_OR_PATTERNS,\n     pedantic,\n     \"unnested or-patterns, e.g., `Foo(Bar) | Foo(Baz) instead of `Foo(Bar | Baz)`\""}, {"sha": "44b1989dbc68a4a4eb30b01491b0bc018546235d", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -21,6 +21,7 @@ declare_clippy_lint! {\n     /// extern crate crossbeam;\n     /// use crossbeam::{spawn_unsafe as spawn};\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNSAFE_REMOVED_FROM_NAME,\n     style,\n     \"`unsafe` removed from API names on import\""}, {"sha": "1ccb78425c29af05f3415a393603ad08be412012", "filename": "clippy_lints/src/unused_async.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_async.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     /// }\n     /// let number_future = async { get_random_number_improved() };\n     /// ```\n+    #[clippy::version = \"1.54.0\"]\n     pub UNUSED_ASYNC,\n     pedantic,\n     \"finds async functions with no await statements\""}, {"sha": "d4b5c9770a271200bb0efc997fe7b77a843bc8cc", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     ///     Ok(())\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNUSED_IO_AMOUNT,\n     correctness,\n     \"unused written/read amount\""}, {"sha": "fd9d5b52e501f318199e5fa94ad9cf55dd79cad6", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -29,6 +29,7 @@ declare_clippy_lint! {\n     ///     fn method() {}\n     /// }\n     /// ```\n+    #[clippy::version = \"1.40.0\"]\n     pub UNUSED_SELF,\n     pedantic,\n     \"methods that contain a `self` argument but don't use it\""}, {"sha": "48c17fa2a40b25c543143a12dcd3f38a9f2bb633", "filename": "clippy_lints/src/unused_unit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_unit.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// fn return_unit() {}\n     /// ```\n+    #[clippy::version = \"1.31.0\"]\n     pub UNUSED_UNIT,\n     style,\n     \"needless unit expression\""}, {"sha": "9e83cae79bc897480ae06d1e2bb70fa01576d6cf", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -39,6 +39,7 @@ declare_clippy_lint! {\n     ///     do_something_with(value)\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub UNNECESSARY_UNWRAP,\n     complexity,\n     \"checks for calls of `unwrap[_err]()` that cannot fail\"\n@@ -65,6 +66,7 @@ declare_clippy_lint! {\n     /// ```\n     ///\n     /// This code will always panic. The if condition should probably be inverted.\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PANICKING_UNWRAP,\n     correctness,\n     \"checks for calls of `unwrap[_err]()` that will always fail\""}, {"sha": "994df85cb8ac4f7c5130275884a75f12e34491f6", "filename": "clippy_lints/src/unwrap_in_result.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funwrap_in_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Funwrap_in_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap_in_result.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -51,6 +51,7 @@ declare_clippy_lint! {\n     ///     Ok(())\n     /// }\n     /// ```\n+    #[clippy::version = \"1.48.0\"]\n     pub UNWRAP_IN_RESULT,\n     restriction,\n     \"functions of type `Result<..>` or `Option`<...> that contain `expect()` or `unwrap()`\""}, {"sha": "4773e35076057e0bf32a65a507d5e9c71faf4d79", "filename": "clippy_lints/src/upper_case_acronyms.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -33,6 +33,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// struct HttpResponse;\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub UPPER_CASE_ACRONYMS,\n     style,\n     \"capitalized acronyms are against the naming convention\""}, {"sha": "059f7f647f88f0e0f486a400a4608b6fbf422884", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -51,6 +51,7 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USE_SELF,\n     nursery,\n     \"unnecessary structure name repetition whereas `Self` is applicable\""}, {"sha": "0e4b32541c97785672a65a8e08eb86eda3ee7135", "filename": "clippy_lints/src/useless_conversion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuseless_conversion.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -28,6 +28,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let s: String = format!(\"hello\");\n     /// ```\n+    #[clippy::version = \"1.45.0\"]\n     pub USELESS_CONVERSION,\n     complexity,\n     \"calls to `Into`, `TryInto`, `From`, `TryFrom`, or `IntoIter` which perform useless conversions to the same type\""}, {"sha": "79e7410c3a8381183f256da06d11fb7a446db435", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// foo(&[1, 2]);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USELESS_VEC,\n     perf,\n     \"useless `vec!`\""}, {"sha": "1bc0eb6303c01f692c04d08fdf29f94e86fecf0a", "filename": "clippy_lints/src/vec_init_then_push.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fvec_init_then_push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fvec_init_then_push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec_init_then_push.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let v = vec![0];\n     /// ```\n+    #[clippy::version = \"1.51.0\"]\n     pub VEC_INIT_THEN_PUSH,\n     perf,\n     \"`push` immediately after `Vec` creation\""}, {"sha": "3441d9ccdfa25db333ee7a22456b3eb952ddcb4e", "filename": "clippy_lints/src/vec_resize_to_zero.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// vec!(1, 2, 3, 4, 5).resize(0, 5)\n     /// ```\n+    #[clippy::version = \"1.46.0\"]\n     pub VEC_RESIZE_TO_ZERO,\n     correctness,\n     \"emptying a vector with `resize(0, an_int)` instead of `clear()` is probably an argument inversion mistake\""}, {"sha": "ebdaff1e676b7e187511536f6dca84bc38f58804", "filename": "clippy_lints/src/verbose_file_reads.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fverbose_file_reads.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -27,6 +27,7 @@ declare_clippy_lint! {\n     /// # use std::fs;\n     /// let mut bytes = fs::read(\"foo.txt\").unwrap();\n     /// ```\n+    #[clippy::version = \"1.44.0\"]\n     pub VERBOSE_FILE_READS,\n     restriction,\n     \"use of `File::read_to_end` or `File::read_to_string`\""}, {"sha": "80d7b8a1b6df559820863c39c0199f9abb88615c", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     /// [dependencies]\n     /// regex = \"*\"\n     /// ```\n+    #[clippy::version = \"1.32.0\"]\n     pub WILDCARD_DEPENDENCIES,\n     cargo,\n     \"wildcard dependencies being used\""}, {"sha": "832da66a53695c55287ddda2eb3dc1343cab1b0a", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -34,6 +34,7 @@ declare_clippy_lint! {\n     /// use std::cmp::Ordering;\n     /// foo(Ordering::Less)\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ENUM_GLOB_USE,\n     pedantic,\n     \"use items that import all variants of an enum\"\n@@ -86,6 +87,7 @@ declare_clippy_lint! {\n     ///\n     /// foo();\n     /// ```\n+    #[clippy::version = \"1.43.0\"]\n     pub WILDCARD_IMPORTS,\n     pedantic,\n     \"lint `use _::*` statements\""}, {"sha": "1b3c15fdf23a182905dc0523bb033d4e7f5f6cf9", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -31,6 +31,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// println!();\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PRINTLN_EMPTY_STRING,\n     style,\n     \"using `println!(\\\"\\\")` with an empty string\"\n@@ -55,6 +56,7 @@ declare_clippy_lint! {\n     /// # let name = \"World\";\n     /// println!(\"Hello {}!\", name);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PRINT_WITH_NEWLINE,\n     style,\n     \"using `print!()` with a format string that ends in a single newline\"\n@@ -76,6 +78,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// println!(\"Hello world!\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PRINT_STDOUT,\n     restriction,\n     \"printing on stdout\"\n@@ -97,6 +100,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// eprintln!(\"Hello world!\");\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub PRINT_STDERR,\n     restriction,\n     \"printing on stderr\"\n@@ -116,6 +120,7 @@ declare_clippy_lint! {\n     /// # let foo = \"bar\";\n     /// println!(\"{:?}\", foo);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub USE_DEBUG,\n     restriction,\n     \"use of `Debug`-based formatting\"\n@@ -142,6 +147,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// println!(\"foo\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub PRINT_LITERAL,\n     style,\n     \"printing a literal with a format string\"\n@@ -165,6 +171,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// writeln!(buf);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WRITELN_EMPTY_STRING,\n     style,\n     \"using `writeln!(buf, \\\"\\\")` with an empty string\"\n@@ -191,6 +198,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// writeln!(buf, \"Hello {}!\", name);\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WRITE_WITH_NEWLINE,\n     style,\n     \"using `write!()` with a format string that ends in a single newline\"\n@@ -219,6 +227,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// writeln!(buf, \"foo\");\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub WRITE_LITERAL,\n     style,\n     \"writing a literal with a format string\""}, {"sha": "641681185a2f60a7ad48d672690b88786f2d8ca5", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let nan = f32::NAN;\n     /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n     pub ZERO_DIVIDED_BY_ZERO,\n     complexity,\n     \"usage of `0.0 / 0.0` to obtain NaN instead of `f32::NAN` or `f64::NAN`\""}, {"sha": "eb8436a501d54b057010db4c95b6f67a68a9452e", "filename": "clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d647696c1f167802c9bb9ffe2c98459b152d563c/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=d647696c1f167802c9bb9ffe2c98459b152d563c", "patch": "@@ -36,6 +36,7 @@ declare_clippy_lint! {\n     ///     todo!();\n     /// }\n     /// ```\n+    #[clippy::version = \"1.50.0\"]\n     pub ZERO_SIZED_MAP_VALUES,\n     pedantic,\n     \"usage of map with zero-sized value type\""}]}