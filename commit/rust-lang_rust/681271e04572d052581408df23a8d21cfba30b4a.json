{"sha": "681271e04572d052581408df23a8d21cfba30b4a", "node_id": "C_kwDOAAsO6NoAKDY4MTI3MWUwNDU3MmQwNTI1ODE0MDhkZjIzYThkMjFjZmJhMzBiNGE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-17T05:08:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-17T05:08:14Z"}, "message": "Rollup merge of #92819 - euclio:atty, r=CraftSpider\n\nrustdoc: remove hand-rolled isatty\n\nThis PR replaces bindings to the platform-specific isatty APIs with the `isatty` crate, as done elsewhere in the repository.", "tree": {"sha": "9f109680e809a45705ce642df20258dfa7590e36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f109680e809a45705ce642df20258dfa7590e36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/681271e04572d052581408df23a8d21cfba30b4a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh5Pm+CRBK7hj4Ov3rIwAALg4IACmXWVzbIMqnDzzLe39R0fIW\nlRa8dANcN+cpQavgu9r1n2+gxiTdzeE8l7Fo0La3kT2w56p9evLIs3YOFqtDe9Tj\nX/E9h0bbc1AG/2dPBIXZsVFXl/bFSDhwo6DsujVoC0bIdJAnJvqb1/U5AnOimLqd\nb7UzU10CtiG81mVasibs/B8zMw6jNtoOJEYT61fsfpW46d4OxsQDIN5doJ9F67QE\n+BOpUG+S5SFWCDx15b7pgZKQ5Yg6T5QsPT6r3pCtLgVvN0RdZrorkSQFEo3eRiBB\n1mkq0qQfeAB1pCgb7bQU/6iRe4JROWPc5jQpSTk1WnjuC1Uclhq1YSSkmvF7Y+g=\n=IWAB\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f109680e809a45705ce642df20258dfa7590e36\nparent ff1b653cdb1f176bf995b58cec3c7e74965cdac5\nparent 51d7665be170df3abbaf4bc0fcf435820011d214\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642396094 +0100\ncommitter GitHub <noreply@github.com> 1642396094 +0100\n\nRollup merge of #92819 - euclio:atty, r=CraftSpider\n\nrustdoc: remove hand-rolled isatty\n\nThis PR replaces bindings to the platform-specific isatty APIs with the `isatty` crate, as done elsewhere in the repository.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/681271e04572d052581408df23a8d21cfba30b4a", "html_url": "https://github.com/rust-lang/rust/commit/681271e04572d052581408df23a8d21cfba30b4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/681271e04572d052581408df23a8d21cfba30b4a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff1b653cdb1f176bf995b58cec3c7e74965cdac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff1b653cdb1f176bf995b58cec3c7e74965cdac5", "html_url": "https://github.com/rust-lang/rust/commit/ff1b653cdb1f176bf995b58cec3c7e74965cdac5"}, {"sha": "51d7665be170df3abbaf4bc0fcf435820011d214", "url": "https://api.github.com/repos/rust-lang/rust/commits/51d7665be170df3abbaf4bc0fcf435820011d214", "html_url": "https://github.com/rust-lang/rust/commit/51d7665be170df3abbaf4bc0fcf435820011d214"}], "stats": {"total": 58, "additions": 17, "deletions": 41}, "files": [{"sha": "18b85103202e32744279d3c48c3173a523a70219", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/681271e04572d052581408df23a8d21cfba30b4a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/681271e04572d052581408df23a8d21cfba30b4a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=681271e04572d052581408df23a8d21cfba30b4a", "patch": "@@ -4443,6 +4443,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"arrayvec\",\n  \"askama\",\n+ \"atty\",\n  \"expect-test\",\n  \"itertools 0.9.0\",\n  \"minifier\","}, {"sha": "ccb844cd10b258d57973b88a270220bfa38bd8f1", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/681271e04572d052581408df23a8d21cfba30b4a/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/681271e04572d052581408df23a8d21cfba30b4a/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=681271e04572d052581408df23a8d21cfba30b4a", "patch": "@@ -9,6 +9,7 @@ path = \"lib.rs\"\n [dependencies]\n arrayvec = { version = \"0.7\", default-features = false }\n askama = { version = \"0.11\", default-features = false }\n+atty = \"0.2\"\n pulldown-cmark = { version = \"0.9\", default-features = false }\n minifier = \"0.0.41\"\n rayon = \"1.5.1\""}, {"sha": "d854aa86b3afd0434a18270ad89e9b126fa034c6", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 15, "deletions": 41, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/681271e04572d052581408df23a8d21cfba30b4a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/681271e04572d052581408df23a8d21cfba30b4a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=681271e04572d052581408df23a8d21cfba30b4a", "patch": "@@ -71,7 +71,8 @@ extern crate tikv_jemalloc_sys;\n use tikv_jemalloc_sys as jemalloc_sys;\n \n use std::default::Default;\n-use std::env;\n+use std::env::{self, VarError};\n+use std::io;\n use std::process;\n \n use rustc_driver::{abort_on_err, describe_lints};\n@@ -179,47 +180,20 @@ pub fn main() {\n }\n \n fn init_logging() {\n-    use std::io;\n-\n-    // FIXME remove these and use winapi 0.3 instead\n-    // Duplicates: bootstrap/compile.rs, librustc_errors/emitter.rs, rustc_driver/lib.rs\n-    #[cfg(unix)]\n-    fn stdout_isatty() -> bool {\n-        extern crate libc;\n-        unsafe { libc::isatty(libc::STDOUT_FILENO) != 0 }\n-    }\n-\n-    #[cfg(windows)]\n-    fn stdout_isatty() -> bool {\n-        extern crate winapi;\n-        use winapi::um::consoleapi::GetConsoleMode;\n-        use winapi::um::processenv::GetStdHandle;\n-        use winapi::um::winbase::STD_OUTPUT_HANDLE;\n-\n-        unsafe {\n-            let handle = GetStdHandle(STD_OUTPUT_HANDLE);\n-            let mut out = 0;\n-            GetConsoleMode(handle, &mut out) != 0\n-        }\n-    }\n-\n-    let color_logs = match std::env::var(\"RUSTDOC_LOG_COLOR\") {\n-        Ok(value) => match value.as_ref() {\n-            \"always\" => true,\n-            \"never\" => false,\n-            \"auto\" => stdout_isatty(),\n-            _ => early_error(\n-                ErrorOutputType::default(),\n-                &format!(\n-                    \"invalid log color value '{}': expected one of always, never, or auto\",\n-                    value\n-                ),\n-            ),\n-        },\n-        Err(std::env::VarError::NotPresent) => stdout_isatty(),\n-        Err(std::env::VarError::NotUnicode(_value)) => early_error(\n+    let color_logs = match std::env::var(\"RUSTDOC_LOG_COLOR\").as_deref() {\n+        Ok(\"always\") => true,\n+        Ok(\"never\") => false,\n+        Ok(\"auto\") | Err(VarError::NotPresent) => atty::is(atty::Stream::Stdout),\n+        Ok(value) => early_error(\n+            ErrorOutputType::default(),\n+            &format!(\"invalid log color value '{}': expected one of always, never, or auto\", value),\n+        ),\n+        Err(VarError::NotUnicode(value)) => early_error(\n             ErrorOutputType::default(),\n-            \"non-Unicode log color value: expected one of always, never, or auto\",\n+            &format!(\n+                \"invalid log color value '{}': expected one of always, never, or auto\",\n+                value.to_string_lossy()\n+            ),\n         ),\n     };\n     let filter = tracing_subscriber::EnvFilter::from_env(\"RUSTDOC_LOG\");"}]}