{"sha": "ba46b61bbcd0d2860105c429cf73254c388e9118", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNDZiNjFiYmNkMGQyODYwMTA1YzQyOWNmNzMyNTRjMzg4ZTkxMTg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-01-31T18:59:57Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-03-10T23:44:46Z"}, "message": "bless UI tests", "tree": {"sha": "3d1714cb76bd911733851b1aba4f506f5371788d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d1714cb76bd911733851b1aba4f506f5371788d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba46b61bbcd0d2860105c429cf73254c388e9118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba46b61bbcd0d2860105c429cf73254c388e9118", "html_url": "https://github.com/rust-lang/rust/commit/ba46b61bbcd0d2860105c429cf73254c388e9118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba46b61bbcd0d2860105c429cf73254c388e9118/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3d5eaf2bba89db8359393ac7656db19cb421fb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d5eaf2bba89db8359393ac7656db19cb421fb5", "html_url": "https://github.com/rust-lang/rust/commit/e3d5eaf2bba89db8359393ac7656db19cb421fb5"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "4b195f3a06edc730bcd14217e0af83b6e164e64f", "filename": "src/test/ui/const-generics/array-impls/alloc-types-no-impls-length-33.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba46b61bbcd0d2860105c429cf73254c388e9118/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba46b61bbcd0d2860105c429cf73254c388e9118/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.rs?ref=ba46b61bbcd0d2860105c429cf73254c388e9118", "patch": "@@ -4,7 +4,7 @@ use std::{convert::TryFrom, rc::Rc, sync::Arc};\n \n pub fn no_vec() {\n     let v: Vec<_> = [0; 33].into();\n-    //~^ ERROR the trait bound `std::vec::Vec<u8>: std::convert::From<[u8; 33]>` is not satisfied\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n }\n \n pub fn no_box() {"}, {"sha": "d795840551c50175184f374be842eaedaf5e2957", "filename": "src/test/ui/const-generics/array-impls/alloc-types-no-impls-length-33.stderr", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ba46b61bbcd0d2860105c429cf73254c388e9118/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ba46b61bbcd0d2860105c429cf73254c388e9118/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.stderr?ref=ba46b61bbcd0d2860105c429cf73254c388e9118", "patch": "@@ -1,5 +1,14 @@\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/alloc-types-no-impls-length-33.rs:6:29\n+   |\n+LL |     let v: Vec<_> = [0; 33].into();\n+   |                             ^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[{integer}; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::convert::From<[{integer}; 33]>` for `std::vec::Vec<{integer}>`\n+   = note: required because of the requirements on the impl of `std::convert::Into<std::vec::Vec<{integer}>>` for `[{integer}; 33]`\n+\n error[E0277]: the trait bound `std::boxed::Box<[i32; 33]>: std::convert::From<std::boxed::Box<[i32]>>` is not satisfied\n-  --> $DIR/alloc-types-no-impls-length-33.rs:7:23\n+  --> $DIR/alloc-types-no-impls-length-33.rs:12:23\n    |\n LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::boxed::Box<[i32]>>` is not implemented for `std::boxed::Box<[i32; 33]>`\n@@ -14,7 +23,7 @@ LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);\n    = note: required because of the requirements on the impl of `std::convert::TryFrom<std::boxed::Box<[i32]>>` for `std::boxed::Box<[i32; 33]>`\n \n error[E0277]: the trait bound `std::boxed::Box<[i32; 33]>: std::convert::TryFrom<std::boxed::Box<[i32]>>` is not satisfied\n-  --> $DIR/alloc-types-no-impls-length-33.rs:7:23\n+  --> $DIR/alloc-types-no-impls-length-33.rs:12:23\n    |\n LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::TryFrom<std::boxed::Box<[i32]>>` is not implemented for `std::boxed::Box<[i32; 33]>`\n@@ -23,7 +32,7 @@ LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);\n              <std::boxed::Box<[T; _]> as std::convert::TryFrom<std::boxed::Box<[T]>>>\n \n error[E0277]: the trait bound `std::rc::Rc<[i32; 33]>: std::convert::From<std::rc::Rc<[i32]>>` is not satisfied\n-  --> $DIR/alloc-types-no-impls-length-33.rs:14:23\n+  --> $DIR/alloc-types-no-impls-length-33.rs:19:23\n    |\n LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::rc::Rc<[i32]>>` is not implemented for `std::rc::Rc<[i32; 33]>`\n@@ -38,7 +47,7 @@ LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);\n    = note: required because of the requirements on the impl of `std::convert::TryFrom<std::rc::Rc<[i32]>>` for `std::rc::Rc<[i32; 33]>`\n \n error[E0277]: the trait bound `std::rc::Rc<[i32; 33]>: std::convert::TryFrom<std::rc::Rc<[i32]>>` is not satisfied\n-  --> $DIR/alloc-types-no-impls-length-33.rs:14:23\n+  --> $DIR/alloc-types-no-impls-length-33.rs:19:23\n    |\n LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::TryFrom<std::rc::Rc<[i32]>>` is not implemented for `std::rc::Rc<[i32; 33]>`\n@@ -47,7 +56,7 @@ LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);\n              <std::rc::Rc<[T; _]> as std::convert::TryFrom<std::rc::Rc<[T]>>>\n \n error[E0277]: the trait bound `std::sync::Arc<[i32; 33]>: std::convert::From<std::sync::Arc<[i32]>>` is not satisfied\n-  --> $DIR/alloc-types-no-impls-length-33.rs:21:23\n+  --> $DIR/alloc-types-no-impls-length-33.rs:26:23\n    |\n LL |     let boxed_array = <Arc<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::sync::Arc<[i32]>>` is not implemented for `std::sync::Arc<[i32; 33]>`\n@@ -62,14 +71,14 @@ LL |     let boxed_array = <Arc<[i32; 33]>>::try_from(boxed_slice);\n    = note: required because of the requirements on the impl of `std::convert::TryFrom<std::sync::Arc<[i32]>>` for `std::sync::Arc<[i32; 33]>`\n \n error[E0277]: the trait bound `std::sync::Arc<[i32; 33]>: std::convert::TryFrom<std::sync::Arc<[i32]>>` is not satisfied\n-  --> $DIR/alloc-types-no-impls-length-33.rs:21:23\n+  --> $DIR/alloc-types-no-impls-length-33.rs:26:23\n    |\n LL |     let boxed_array = <Arc<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::TryFrom<std::sync::Arc<[i32]>>` is not implemented for `std::sync::Arc<[i32; 33]>`\n    |\n    = help: the following implementations were found:\n              <std::sync::Arc<[T; _]> as std::convert::TryFrom<std::sync::Arc<[T]>>>\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}