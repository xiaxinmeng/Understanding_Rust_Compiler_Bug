{"sha": "3f3087bb7f78426d033e95c3d2dcecce8878d02e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMzA4N2JiN2Y3ODQyNmQwMzNlOTVjM2QyZGNlY2NlODg3OGQwMmU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-29T10:12:09Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-29T10:14:54Z"}, "message": "Simplify Set1::insert.", "tree": {"sha": "f4be0a4404b381f44c7da41fe27c01a3e1116969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4be0a4404b381f44c7da41fe27c01a3e1116969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f3087bb7f78426d033e95c3d2dcecce8878d02e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3087bb7f78426d033e95c3d2dcecce8878d02e", "html_url": "https://github.com/rust-lang/rust/commit/3f3087bb7f78426d033e95c3d2dcecce8878d02e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f3087bb7f78426d033e95c3d2dcecce8878d02e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9d80325a65b0375eea526409a0f3aaf1cbc23c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9d80325a65b0375eea526409a0f3aaf1cbc23c", "html_url": "https://github.com/rust-lang/rust/commit/4b9d80325a65b0375eea526409a0f3aaf1cbc23c"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "593a09b6866dbb8335b58c42b5be149941b1bf64", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3f3087bb7f78426d033e95c3d2dcecce8878d02e/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3087bb7f78426d033e95c3d2dcecce8878d02e/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=3f3087bb7f78426d033e95c3d2dcecce8878d02e", "patch": "@@ -170,16 +170,11 @@ pub enum Set1<T> {\n \n impl<T: PartialEq> Set1<T> {\n     pub fn insert(&mut self, value: T) {\n-        if let Set1::Empty = *self {\n-            *self = Set1::One(value);\n-            return;\n-        }\n-        if let Set1::One(ref old) = *self {\n-            if *old == value {\n-                return;\n-            }\n-        }\n-        *self = Set1::Many;\n+        *self = match self {\n+            Set1::Empty => Set1::One(value),\n+            Set1::One(old) if *old == value => return,\n+            _ => Set1::Many,\n+        };\n     }\n }\n "}]}