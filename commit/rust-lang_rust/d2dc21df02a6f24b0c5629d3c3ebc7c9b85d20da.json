{"sha": "d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZGMyMWRmMDJhNmYyNGIwYzU2MjlkM2MzZWJjN2M5Yjg1ZDIwZGE=", "commit": {"author": {"name": "bobtwinkles", "email": "srkoser+GitHub@gmail.com", "date": "2018-04-21T22:00:09Z"}, "committer": {"name": "bobtwinkles", "email": "srkoser+GitHub@gmail.com", "date": "2018-04-24T03:59:58Z"}, "message": "Add documentation for SyntaxContext::remove_mark", "tree": {"sha": "3b5f07bd31d5d000c18ae4854040a4372142f018", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b5f07bd31d5d000c18ae4854040a4372142f018"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da", "html_url": "https://github.com/rust-lang/rust/commit/d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da/comments", "author": {"login": "bobtwinkles", "id": 1514748, "node_id": "MDQ6VXNlcjE1MTQ3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1514748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobtwinkles", "html_url": "https://github.com/bobtwinkles", "followers_url": "https://api.github.com/users/bobtwinkles/followers", "following_url": "https://api.github.com/users/bobtwinkles/following{/other_user}", "gists_url": "https://api.github.com/users/bobtwinkles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobtwinkles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobtwinkles/subscriptions", "organizations_url": "https://api.github.com/users/bobtwinkles/orgs", "repos_url": "https://api.github.com/users/bobtwinkles/repos", "events_url": "https://api.github.com/users/bobtwinkles/events{/privacy}", "received_events_url": "https://api.github.com/users/bobtwinkles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bobtwinkles", "id": 1514748, "node_id": "MDQ6VXNlcjE1MTQ3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1514748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobtwinkles", "html_url": "https://github.com/bobtwinkles", "followers_url": "https://api.github.com/users/bobtwinkles/followers", "following_url": "https://api.github.com/users/bobtwinkles/following{/other_user}", "gists_url": "https://api.github.com/users/bobtwinkles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobtwinkles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobtwinkles/subscriptions", "organizations_url": "https://api.github.com/users/bobtwinkles/orgs", "repos_url": "https://api.github.com/users/bobtwinkles/repos", "events_url": "https://api.github.com/users/bobtwinkles/events{/privacy}", "received_events_url": "https://api.github.com/users/bobtwinkles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "725c9b0ede0b222cd64a8dc87cbeed052ecad157", "url": "https://api.github.com/repos/rust-lang/rust/commits/725c9b0ede0b222cd64a8dc87cbeed052ecad157", "html_url": "https://github.com/rust-lang/rust/commit/725c9b0ede0b222cd64a8dc87cbeed052ecad157"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "6eb662744c3025cafeebcdb38f09f72d0e546d81", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=d2dc21df02a6f24b0c5629d3c3ebc7c9b85d20da", "patch": "@@ -238,6 +238,22 @@ impl SyntaxContext {\n         })\n     }\n \n+    /// Pulls a single mark off of the syntax context. This effectively moves the\n+    /// context up one macro definition level. That is, if we have a nested macro\n+    /// definition as follows:\n+    ///\n+    /// ```rust\n+    /// macro_rules! f {\n+    ///    macro_rules! g {\n+    ///        ...\n+    ///    }\n+    /// }\n+    /// ```\n+    ///\n+    /// and we have a SyntaxContext that is referring to something declared by an invocation\n+    /// of g (call it g1), calling remove_mark will result in the SyntaxContext for the\n+    /// invocation of f that created g1.\n+    /// Returns the mark that was removed.\n     pub fn remove_mark(&mut self) -> Mark {\n         HygieneData::with(|data| {\n             let outer_mark = data.syntax_contexts[self.0 as usize].outer_mark;"}]}