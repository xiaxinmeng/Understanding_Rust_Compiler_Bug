{"sha": "da8976d8657980c14cb1301e826ef4bfb5512b9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhODk3NmQ4NjU3OTgwYzE0Y2IxMzAxZTgyNmVmNGJmYjU1MTJiOWI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-16T19:29:45Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-23T12:42:20Z"}, "message": "emacs-lsp: Add runnables support", "tree": {"sha": "2b349ebcd3c3ad2d8ca56f0b8bb2418708587a44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b349ebcd3c3ad2d8ca56f0b8bb2418708587a44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da8976d8657980c14cb1301e826ef4bfb5512b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da8976d8657980c14cb1301e826ef4bfb5512b9b", "html_url": "https://github.com/rust-lang/rust/commit/da8976d8657980c14cb1301e826ef4bfb5512b9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da8976d8657980c14cb1301e826ef4bfb5512b9b/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5fb33a94618d45051192d99e859bdd44c3daa36", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5fb33a94618d45051192d99e859bdd44c3daa36", "html_url": "https://github.com/rust-lang/rust/commit/e5fb33a94618d45051192d99e859bdd44c3daa36"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "4af65c7f022daa547aedc2e5b4cf5608f3685666", "filename": "editors/emacs/ra-emacs-lsp.el", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/da8976d8657980c14cb1301e826ef4bfb5512b9b/editors%2Femacs%2Fra-emacs-lsp.el", "raw_url": "https://github.com/rust-lang/rust/raw/da8976d8657980c14cb1301e826ef4bfb5512b9b/editors%2Femacs%2Fra-emacs-lsp.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Fra-emacs-lsp.el?ref=da8976d8657980c14cb1301e826ef4bfb5512b9b", "patch": "@@ -80,6 +80,12 @@\n   :ignore-messages nil\n   :server-id 'rust-analyzer))\n \n+(with-eval-after-load 'company-lsp\n+  ;; company-lsp provides a snippet handler for rust by default that adds () after function calls, which RA does better\n+  (setq company-lsp--snippet-functions (assq-delete-all \"rust\" company-lsp--snippet-functions)))\n+\n+;; join lines\n+\n (defun rust-analyzer--join-lines-params ()\n   \"Join lines params.\"\n   (list :textDocument (lsp--text-document-identifier)\n@@ -94,10 +100,6 @@\n                                        (rust-analyzer--join-lines-params)))\n    (rust-analyzer--apply-source-change)))\n \n-(with-eval-after-load 'company-lsp\n-  ;; company-lsp provides a snippet handler for rust by default that adds () after function calls, which RA does better\n-  (setq company-lsp--snippet-functions (assq-delete-all \"rust\" company-lsp--snippet-functions)))\n-\n ;; extend selection\n \n (defun rust-analyzer-extend-selection ()\n@@ -135,5 +137,39 @@\n (with-eval-after-load 'expand-region\n   (add-hook 'rust-mode-hook 'rust-analyzer--add-er-expansion))\n \n+;; runnables\n+(defvar rust-analyzer--last-runnable)\n+\n+(defun rust-analyzer--runnables-params ()\n+  (list :textDocument (lsp--text-document-identifier)\n+        :position (lsp--cur-position)))\n+\n+(defun rust-analyzer--runnables ()\n+  (lsp-send-request (lsp-make-request \"rust-analyzer/runnables\"\n+                                      (rust-analyzer--runnables-params))))\n+\n+(defun rust-analyzer--select-runnable ()\n+  (lsp--completing-read\n+   \"Select runnable:\"\n+   (if rust-analyzer--last-runnable\n+       (cons rust-analyzer--last-runnable (rust-analyzer--runnables))\n+       (rust-analyzer--runnables))\n+   (-lambda ((&hash \"label\")) label)))\n+\n+(defun rust-analyzer-run (runnable)\n+  (interactive (list (rust-analyzer--select-runnable)))\n+  (-let (((&hash \"env\" \"bin\" \"args\" \"label\") runnable))\n+    (compilation-start\n+     (string-join (cons bin args) \" \")\n+     ;; cargo-process-mode is nice, but try to work without it...\n+     (if (functionp 'cargo-process-mode) 'cargo-process-mode nil)\n+     (lambda (_) (concat \"*\" label \"*\")))\n+    (setq rust-analyzer--last-runnable runnable)))\n+\n+(defun rust-analyzer-rerun (&optional runnable)\n+  (interactive (list (or rust-analyzer--last-runnable\n+                         (rust-analyzer--select-runnable))))\n+  (rust-analyzer-run (or runnable rust-analyzer--last-runnable)))\n+\n (provide 'ra-emacs-lsp)\n ;;; ra-emacs-lsp.el ends here"}]}