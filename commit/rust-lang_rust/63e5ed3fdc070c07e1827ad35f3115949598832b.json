{"sha": "63e5ed3fdc070c07e1827ad35f3115949598832b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZTVlZDNmZGMwNzBjMDdlMTgyN2FkMzVmMzExNTk0OTU5ODgzMmI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-11-05T13:37:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-05T13:37:07Z"}, "message": "Rollup merge of #66082 - GuillaumeGomez:cleanup-highlightsourcelines, r=kinnison\n\nclean highlightSourceLines code\n\nThis is the first part of https://github.com/rust-lang/rust/issues/66046. Now that I've splitted the hashchange stuff and the source code lines highlighting, I'll be able to fix the whole issue once and for all.\n\nr? @kinnison", "tree": {"sha": "3f6caddeb21bfa7710c0b4f1eb8467123b3afb8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f6caddeb21bfa7710c0b4f1eb8467123b3afb8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63e5ed3fdc070c07e1827ad35f3115949598832b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwXsDCRBK7hj4Ov3rIwAAdHIIAG4uVbboggr0lmNpryfLLrby\nx61E/7AK9MT3YAO8J9ZV8kJZDFexJMAmE3xSyuKW/aN+iKZ0noHOQMAQjxlOVk6D\n/l6fImqn/uqHX0OOc1QUtNLE6R5qDZZswYtO0tcYyZpsk42GO8AfFVgg1masH96k\nO2xRvRs3P3R3iQTLMkpGXgGjLeTxuZDP0mRdbvK4k4msATMH9N/blbDFN/XRSo1I\n+FgESYtAXAHhWTS4Xa9ZL4Qe36ebVK9sxgwQCaPbc4IvKqveA1H3bhoy9blN5mtl\nmNAXDGoUiROEdLltDMyQa0Dj5yUFgoOn6Fwak2PlicRKUGy6BjIVrI/kTuOhRUw=\n=FcOZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f6caddeb21bfa7710c0b4f1eb8467123b3afb8c\nparent 50035e8d84c055ae9c54a0da638c4c02f4c0ef0a\nparent 1c78af7de24d9ff1f11531c5b5aa2f2ae44c4d8c\nauthor Pietro Albini <pietro@pietroalbini.org> 1572961027 +0100\ncommitter GitHub <noreply@github.com> 1572961027 +0100\n\nRollup merge of #66082 - GuillaumeGomez:cleanup-highlightsourcelines, r=kinnison\n\nclean highlightSourceLines code\n\nThis is the first part of https://github.com/rust-lang/rust/issues/66046. Now that I've splitted the hashchange stuff and the source code lines highlighting, I'll be able to fix the whole issue once and for all.\n\nr? @kinnison\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63e5ed3fdc070c07e1827ad35f3115949598832b", "html_url": "https://github.com/rust-lang/rust/commit/63e5ed3fdc070c07e1827ad35f3115949598832b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63e5ed3fdc070c07e1827ad35f3115949598832b/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50035e8d84c055ae9c54a0da638c4c02f4c0ef0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/50035e8d84c055ae9c54a0da638c4c02f4c0ef0a", "html_url": "https://github.com/rust-lang/rust/commit/50035e8d84c055ae9c54a0da638c4c02f4c0ef0a"}, {"sha": "1c78af7de24d9ff1f11531c5b5aa2f2ae44c4d8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c78af7de24d9ff1f11531c5b5aa2f2ae44c4d8c", "html_url": "https://github.com/rust-lang/rust/commit/1c78af7de24d9ff1f11531c5b5aa2f2ae44c4d8c"}], "stats": {"total": 96, "additions": 54, "deletions": 42}, "files": [{"sha": "53e16978ff12b0fde3fcc2b331fca01fb1ae42fd", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 54, "deletions": 42, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/63e5ed3fdc070c07e1827ad35f3115949598832b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/63e5ed3fdc070c07e1827ad35f3115949598832b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=63e5ed3fdc070c07e1827ad35f3115949598832b", "patch": "@@ -163,59 +163,71 @@ function getSearchElement() {\n \n     var main = document.getElementById(\"main\");\n \n-    function highlightSourceLines(ev) {\n-        // If we're in mobile mode, we should add the sidebar in any case.\n+    function onHashChange(ev) {\n+        // If we're in mobile mode, we should hide the sidebar in any case.\n         hideSidebar();\n-        var elem;\n-        var search = getSearchElement();\n-        var i, from, to, match = window.location.hash.match(/^#?(\\d+)(?:-(\\d+))?$/);\n+        var match = window.location.hash.match(/^#?(\\d+)(?:-(\\d+))?$/);\n         if (match) {\n-            from = parseInt(match[1], 10);\n-            to = from;\n-            if (typeof match[2] !== \"undefined\") {\n-                to = parseInt(match[2], 10);\n-            }\n-            if (to < from) {\n-                var tmp = to;\n-                to = from;\n-                from = tmp;\n-            }\n-            elem = document.getElementById(from);\n-            if (!elem) {\n-                return;\n-            }\n-            if (ev === null) {\n-                var x = document.getElementById(from);\n-                if (x) {\n-                    x.scrollIntoView();\n-                }\n-            }\n-            onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(e) {\n-                onEachLazy(e.getElementsByTagName(\"span\"), function(i_e) {\n-                    removeClass(i_e, \"line-highlighted\");\n-                });\n-            });\n-            for (i = from; i <= to; ++i) {\n-                elem = document.getElementById(i);\n-                if (!elem) {\n-                    break;\n-                }\n-                addClass(elem, \"line-highlighted\");\n-            }\n-        } else if (ev !== null && search && !hasClass(search, \"hidden\") && ev.newURL) {\n+            return highlightSourceLines(match, ev);\n+        }\n+        var search = getSearchElement();\n+        if (ev !== null && search && !hasClass(search, \"hidden\") && ev.newURL) {\n             addClass(search, \"hidden\");\n             removeClass(main, \"hidden\");\n             var hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n             if (browserSupportsHistoryApi()) {\n                 history.replaceState(hash, \"\", \"?search=#\" + hash);\n             }\n-            elem = document.getElementById(hash);\n+            var elem = document.getElementById(hash);\n             if (elem) {\n                 elem.scrollIntoView();\n             }\n         }\n     }\n \n+    function highlightSourceLines(match, ev) {\n+        if (typeof match === \"undefined\") {\n+            // If we're in mobile mode, we should hide the sidebar in any case.\n+            hideSidebar();\n+            match = window.location.hash.match(/^#?(\\d+)(?:-(\\d+))?$/);\n+        }\n+        if (!match) {\n+            return;\n+        }\n+        var from = parseInt(match[1], 10);\n+        var to = from;\n+        if (typeof match[2] !== \"undefined\") {\n+            to = parseInt(match[2], 10);\n+        }\n+        if (to < from) {\n+            var tmp = to;\n+            to = from;\n+            from = tmp;\n+        }\n+        var elem = document.getElementById(from);\n+        if (!elem) {\n+            return;\n+        }\n+        if (!ev) {\n+            var x = document.getElementById(from);\n+            if (x) {\n+                x.scrollIntoView();\n+            }\n+        }\n+        onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(e) {\n+            onEachLazy(e.getElementsByTagName(\"span\"), function(i_e) {\n+                removeClass(i_e, \"line-highlighted\");\n+            });\n+        });\n+        for (var i = from; i <= to; ++i) {\n+            elem = document.getElementById(i);\n+            if (!elem) {\n+                break;\n+            }\n+            addClass(elem, \"line-highlighted\");\n+        }\n+    }\n+\n     function expandSection(id) {\n         var elem = document.getElementById(id);\n         if (elem && isHidden(elem)) {\n@@ -234,8 +246,8 @@ function getSearchElement() {\n         }\n     }\n \n-    highlightSourceLines(null);\n-    window.onhashchange = highlightSourceLines;\n+    highlightSourceLines();\n+    window.onhashchange = onHashChange;\n \n     // Gets the human-readable string for the virtual-key code of the\n     // given KeyboardEvent, ev.\n@@ -358,7 +370,7 @@ function getSearchElement() {\n             var set_fragment = function(name) {\n                 if (browserSupportsHistoryApi()) {\n                     history.replaceState(null, null, \"#\" + name);\n-                    highlightSourceLines(null);\n+                    highlightSourceLines();\n                 } else {\n                     location.replace(\"#\" + name);\n                 }"}]}