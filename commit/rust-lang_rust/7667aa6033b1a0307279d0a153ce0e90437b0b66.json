{"sha": "7667aa6033b1a0307279d0a153ce0e90437b0b66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NjdhYTYwMzNiMWEwMzA3Mjc5ZDBhMTUzY2UwZTkwNDM3YjBiNjY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-23T19:32:06Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-25T11:50:12Z"}, "message": "Refactoring a bit", "tree": {"sha": "ddf5a147f4f58ce4b004bc83742e5c4447b5eeef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddf5a147f4f58ce4b004bc83742e5c4447b5eeef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7667aa6033b1a0307279d0a153ce0e90437b0b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7667aa6033b1a0307279d0a153ce0e90437b0b66", "html_url": "https://github.com/rust-lang/rust/commit/7667aa6033b1a0307279d0a153ce0e90437b0b66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7667aa6033b1a0307279d0a153ce0e90437b0b66/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "519dc15cb149a08f4df6746f1e2cb6cd44e3a252", "url": "https://api.github.com/repos/rust-lang/rust/commits/519dc15cb149a08f4df6746f1e2cb6cd44e3a252", "html_url": "https://github.com/rust-lang/rust/commit/519dc15cb149a08f4df6746f1e2cb6cd44e3a252"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "908319f875bdb52959212a2e63387f02f30f8557", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7667aa6033b1a0307279d0a153ce0e90437b0b66/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7667aa6033b1a0307279d0a153ce0e90437b0b66/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7667aa6033b1a0307279d0a153ce0e90437b0b66", "patch": "@@ -1081,14 +1081,6 @@ dependencies = [\n  \"drop_bomb\",\n ]\n \n-[[package]]\n-name = \"ra_proc_macro\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"ra_mbe\",\n- \"ra_tt\",\n-]\n-\n [[package]]\n name = \"ra_prof\"\n version = \"0.1.0\""}, {"sha": "bd32ac20aac6959eadc724759d61230fd23a4d7e", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7667aa6033b1a0307279d0a153ce0e90437b0b66/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7667aa6033b1a0307279d0a153ce0e90437b0b66/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=7667aa6033b1a0307279d0a153ce0e90437b0b66", "patch": "@@ -476,8 +476,11 @@ impl AsMacroCall for AstIdWithPath<ast::ModuleItem> {\n     ) -> Option<MacroCallId> {\n         let def = resolver(self.path.clone())?;\n         Some(\n-            def.as_lazy_macro(db.upcast(), MacroCallKind::Attr(self.ast_id, self.path.to_string()))\n-                .into(),\n+            def.as_lazy_macro(\n+                db.upcast(),\n+                MacroCallKind::Attr(self.ast_id, self.path.segments.last()?.to_string()),\n+            )\n+            .into(),\n         )\n     }\n }"}, {"sha": "79aea5806c92fdb965f81fb38d69efddfe9a6ed9", "filename": "crates/ra_hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7667aa6033b1a0307279d0a153ce0e90437b0b66/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7667aa6033b1a0307279d0a153ce0e90437b0b66/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=7667aa6033b1a0307279d0a153ce0e90437b0b66", "patch": "@@ -229,7 +229,7 @@ fn partial_ord_expand(\n mod tests {\n     use super::*;\n     use crate::{test_db::TestDB, AstId, MacroCallId, MacroCallKind, MacroCallLoc};\n-    use name::Name;\n+    use name::{known, Name};\n     use ra_db::{fixture::WithFixture, SourceDatabase};\n \n     fn expand_builtin_derive(s: &str, name: Name) -> String {\n@@ -261,7 +261,7 @@ mod tests {\n         #[derive(Copy)]\n         struct Foo;\n \"#,\n-            name::known::Copy,\n+            known::Copy,\n         );\n \n         assert_eq!(expanded, \"impl< >std::marker::CopyforFoo< >{}\");\n@@ -274,7 +274,7 @@ mod tests {\n         #[derive(Copy)]\n         struct Foo<A, B>;\n \"#,\n-            name::known::Copy,\n+            known::Copy,\n         );\n \n         assert_eq!(\n@@ -290,7 +290,7 @@ mod tests {\n         #[derive(Copy)]\n         struct Foo<A, B, 'a, 'b>;\n \"#,\n-            name::known::Copy,\n+            known::Copy,\n         );\n \n         // We currently just ignore lifetimes\n@@ -308,7 +308,7 @@ mod tests {\n         #[derive(Clone)]\n         struct Foo<A, B>;\n \"#,\n-            name::known::Clone,\n+            known::Clone,\n         );\n \n         assert_eq!("}]}