{"sha": "ae755938640e4477acc77331aac2b02d0f17ac94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNzU1OTM4NjQwZTQ0NzdhY2M3NzMzMWFhYzJiMDJkMGYxN2FjOTQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2016-06-12T08:09:07Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2016-06-12T08:09:44Z"}, "message": "Fix markdown formatting error of E0277, E0284, E0310, E0502.", "tree": {"sha": "54e3adebc44e6f3d30d09b75d595a18b2cca5ca4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54e3adebc44e6f3d30d09b75d595a18b2cca5ca4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae755938640e4477acc77331aac2b02d0f17ac94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJXXRjIAAoJEP72yAUdDgE8PgwP/jA8rQBE4tO/F9+Oj+43x4C6\ntXZ6bwyuIUlKJ7nz0x5R05YLJYFaFsq+rSx+/bjXpwyBs//GkRnDZvuMrbuvnCgF\nEbcnS2HNjMKi3TYRcqWe+ygFdNQDG1iT+7Svelz+gtKlJSs290jse7qAFm5GU+jI\nJxOevZ3ks8WaX9DyIYntuU3WmP7HrdofjtIndMG5kYjv0gOZ2yl29GsDEiJwp8Xg\nv9UkDZ7+vP69qsbpQgcpE2xvVMr6y7UIwmMYhuVMIpoUKYimMl/H++1+GJDVdFDe\n4kS5g3/Qpj8o5TOis0TpKi4ptzwgKq9HfHr3PTz1Ze/2P6fE1PZGlf7PaGn7TmYe\nRax8FFEW0wuu+DRo9dEDSDAI2ndUN5SJVTsSRqSQRFrWiY5hxpYNlgsCZPHup/Oo\nXhqRilfWLB4jrZYc0G6/MfmZf9xLYS0pnf8WxfT8bwidfYQKR4Dhvcs4UCKt9uIJ\nlaldY1FoY/u81AFapoxVBp9t+vh+H4yJdKAtpjP+rozAFoWF/suKPDuljJFm5W+m\nSvStYjkdviD7I6lg3LjIQW0i1vhNEgti5dMSm3w3OM0TryR02C6nlDEWmOL45ZnP\nrw0eKjVQz/BAmHPP1c7coDxvkXgd9632nbt+IfPr7FbvBS0o2RIgTMMZ5EVsz9MA\nEcLck4pDOG8TjDVSeIax\n=zl7s\n-----END PGP SIGNATURE-----", "payload": "tree 54e3adebc44e6f3d30d09b75d595a18b2cca5ca4\nparent 4c45d26a820570509193fcb317775a8e9ad5efb7\nauthor kennytm <kennytm@gmail.com> 1465718947 +0800\ncommitter kennytm <kennytm@gmail.com> 1465718984 +0800\n\nFix markdown formatting error of E0277, E0284, E0310, E0502.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae755938640e4477acc77331aac2b02d0f17ac94", "html_url": "https://github.com/rust-lang/rust/commit/ae755938640e4477acc77331aac2b02d0f17ac94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae755938640e4477acc77331aac2b02d0f17ac94/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c45d26a820570509193fcb317775a8e9ad5efb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c45d26a820570509193fcb317775a8e9ad5efb7", "html_url": "https://github.com/rust-lang/rust/commit/4c45d26a820570509193fcb317775a8e9ad5efb7"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "30dcca833f84558a374032e20b85c3e0ff81463e", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae755938640e4477acc77331aac2b02d0f17ac94/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae755938640e4477acc77331aac2b02d0f17ac94/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=ae755938640e4477acc77331aac2b02d0f17ac94", "patch": "@@ -1112,6 +1112,7 @@ fn main() {\n ```\n \n Or in a generic context, an erroneous code example would look like:\n+\n ```compile_fail\n fn some_func<T>(foo: T) {\n     println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n@@ -1130,6 +1131,7 @@ we only call it with a parameter that does implement `Debug`, the compiler\n still rejects the function: It must work with all possible input types. In\n order to make this example compile, we need to restrict the generic type we're\n accepting:\n+\n ```\n use std::fmt;\n \n@@ -1146,11 +1148,10 @@ fn main() {\n     // struct WithoutDebug;\n     // some_func(WithoutDebug);\n }\n+```\n \n Rust only looks at the signature of the called function, as such it must\n already specify all requirements that will be used for every type parameter.\n-```\n-\n \"##,\n \n E0281: r##\"\n@@ -1381,6 +1382,7 @@ denotes this will cause this error.\n struct Foo<T> {\n     foo: &'static T\n }\n+```\n \n This will compile, because it has the constraint on the type parameter:\n "}, {"sha": "8852d17c98df0be27ad4cc393f7525f1a3cd3fad", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae755938640e4477acc77331aac2b02d0f17ac94/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae755938640e4477acc77331aac2b02d0f17ac94/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=ae755938640e4477acc77331aac2b02d0f17ac94", "patch": "@@ -516,15 +516,18 @@ fn foo(a: &mut i32) {\n             //        as immutable\n }\n ```\n+\n To fix this error, ensure that you don't have any other references to the\n variable before trying to access it mutably:\n+\n ```\n fn bar(x: &mut i32) {}\n fn foo(a: &mut i32) {\n     bar(a);\n     let ref y = a; // ok!\n }\n ```\n+\n For more information on the rust ownership system, take a look at\n https://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n \"##,"}]}