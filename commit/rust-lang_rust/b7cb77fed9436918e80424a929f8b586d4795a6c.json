{"sha": "b7cb77fed9436918e80424a929f8b586d4795a6c", "node_id": "C_kwDOAAsO6NoAKGI3Y2I3N2ZlZDk0MzY5MThlODA0MjRhOTI5ZjhiNTg2ZDQ3OTVhNmM", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-17T13:00:21Z"}, "committer": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-17T13:01:29Z"}, "message": "Document how to get the type of a default associated type", "tree": {"sha": "203b1e6608a030a814fc894fc74b48ed80ad672c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/203b1e6608a030a814fc894fc74b48ed80ad672c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7cb77fed9436918e80424a929f8b586d4795a6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7cb77fed9436918e80424a929f8b586d4795a6c", "html_url": "https://github.com/rust-lang/rust/commit/b7cb77fed9436918e80424a929f8b586d4795a6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7cb77fed9436918e80424a929f8b586d4795a6c/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "159ba8a92c9e2fa4121f106176309521f4af87e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/159ba8a92c9e2fa4121f106176309521f4af87e9", "html_url": "https://github.com/rust-lang/rust/commit/159ba8a92c9e2fa4121f106176309521f4af87e9"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "9fce0f3108662484e8927e4e63825ac752d8d009", "filename": "compiler/rustc_middle/src/ty/assoc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b7cb77fed9436918e80424a929f8b586d4795a6c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7cb77fed9436918e80424a929f8b586d4795a6c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fassoc.rs?ref=b7cb77fed9436918e80424a929f8b586d4795a6c", "patch": "@@ -37,6 +37,11 @@ impl AssocItem {\n         Ident::new(self.name, tcx.def_ident_span(self.def_id).unwrap())\n     }\n \n+    /// Gets the defaultness of the associated item.\n+    /// To get the default associated type, use the [`type_of`] query on the\n+    /// [`DefId`] of the type.\n+    ///\n+    /// [`type_of`]: crate::ty::TyCtxt::type_of\n     pub fn defaultness(&self, tcx: TyCtxt<'_>) -> hir::Defaultness {\n         tcx.impl_defaultness(self.def_id)\n     }"}]}