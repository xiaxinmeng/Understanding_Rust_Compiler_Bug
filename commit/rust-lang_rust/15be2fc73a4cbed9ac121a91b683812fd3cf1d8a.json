{"sha": "15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YmUyZmM3M2E0Y2JlZDlhYzEyMWE5MWI2ODM4MTJmZDNjZjFkOGE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-02T14:31:58Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-02T14:31:58Z"}, "message": "Add 'copy' bounds to functions that were faultily accepted without\n\nIssue #1390", "tree": {"sha": "bf590e46234f2fcc34a78e47ef42527bc0683612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf590e46234f2fcc34a78e47ef42527bc0683612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "html_url": "https://github.com/rust-lang/rust/commit/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c14943dead216ce62b9197a6030dad8e2047428", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c14943dead216ce62b9197a6030dad8e2047428", "html_url": "https://github.com/rust-lang/rust/commit/8c14943dead216ce62b9197a6030dad8e2047428"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "e0a137ca9e8483593d6024a521b2ccfe5c21cd39", "filename": "src/libcore/option.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -36,7 +36,7 @@ pure fn get<copy T>(opt: t<T>) -> T {\n \n /*\n */\n-fn map<T, U>(opt: t<T>, f: block(T) -> U) -> t<U> {\n+fn map<T, copy U>(opt: t<T>, f: block(T) -> U) -> t<U> {\n     alt opt { some(x) { some(f(x)) } none. { none } }\n }\n \n@@ -61,7 +61,7 @@ Function: from_maybe\n \n Returns the contained value or a default\n */\n-pure fn from_maybe<T>(def: T, opt: t<T>) -> T {\n+pure fn from_maybe<copy T>(def: T, opt: t<T>) -> T {\n     alt opt { some(x) { x } none. { def } }\n }\n \n@@ -70,7 +70,7 @@ Function: maybe\n \n Applies a function to the contained value or returns a default\n */\n-fn maybe<T, U>(def: U, opt: t<T>, f: block(T) -> U) -> U {\n+fn maybe<T, copy U>(def: U, opt: t<T>, f: block(T) -> U) -> U {\n     alt opt { none. { def } some(t) { f(t) } }\n }\n "}, {"sha": "91038474eadd4c4703ae12a8f22630607b664550", "filename": "src/libcore/result.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -37,7 +37,7 @@ Failure:\n \n If the result is an error\n */\n-fn get<T, U>(res: t<T, U>) -> T {\n+fn get<copy T, U>(res: t<T, U>) -> T {\n     alt res {\n       ok(t) { t }\n       err(_) {\n@@ -57,7 +57,7 @@ Failure:\n \n If the result is not an error\n */\n-fn get_err<T, U>(res: t<T, U>) -> U {\n+fn get_err<T, copy U>(res: t<T, U>) -> U {\n     alt res {\n       err(u) { u }\n       ok(_) {"}, {"sha": "8da26c55b105547a97b1371b34d5f0eb72c2e603", "filename": "src/libstd/deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibstd%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibstd%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdeque.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -57,7 +57,7 @@ fn create<copy T>() -> t<T> {\n \n         ret rv;\n     }\n-    fn get<T>(elts: [mutable cell<T>], i: uint) -> T {\n+    fn get<copy T>(elts: [mutable cell<T>], i: uint) -> T {\n         ret alt elts[i] { option::some(t) { t } _ { fail } };\n     }\n     obj deque<copy T>(mutable nelts: uint,"}, {"sha": "f4d984a8937c239882fd70d6de4a2b7ac2380f0a", "filename": "src/libstd/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibstd%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Flibstd%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Futil.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -7,7 +7,7 @@ Function: id\n \n The identity function\n */\n-pure fn id<T>(x: T) -> T { x }\n+pure fn id<copy T>(x: T) -> T { x }\n \n /*\n Function: unreachable"}, {"sha": "bc19200e32374f4789363db61b3b31c14a9f5a3f", "filename": "src/test/run-pass/expr-alt-generic-box2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-box2.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -4,7 +4,7 @@\n // -*- rust -*-\n type compare<T> = fn@(T, T) -> bool;\n \n-fn test_generic<T>(expected: T, eq: compare<T>) {\n+fn test_generic<copy T>(expected: T, eq: compare<T>) {\n     let actual: T = alt true { true { expected } };\n     assert (eq(expected, actual));\n }"}, {"sha": "301d56389b12e67fe17d9751db8aa195d8b9bef0", "filename": "src/test/run-pass/expr-alt-generic-unique1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-unique1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-unique1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-unique1.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -3,7 +3,7 @@\n // -*- rust -*-\n type compare<T> = fn@(~T, ~T) -> bool;\n \n-fn test_generic<T>(expected: ~T, eq: compare<T>) {\n+fn test_generic<copy T>(expected: ~T, eq: compare<T>) {\n     let actual: ~T = alt true { true { expected } };\n     assert (eq(expected, actual));\n }"}, {"sha": "5640dca0b4eb00859d0225d4f8d04219a35ebf55", "filename": "src/test/run-pass/expr-alt-generic-unique2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-unique2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-unique2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-alt-generic-unique2.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -4,7 +4,7 @@\n // -*- rust -*-\n type compare<T> = fn@(T, T) -> bool;\n \n-fn test_generic<T>(expected: T, eq: compare<T>) {\n+fn test_generic<copy T>(expected: T, eq: compare<T>) {\n     let actual: T = alt true { true { expected } };\n     assert (eq(expected, actual));\n }"}, {"sha": "5a2f7d8b71cd8a4c21776a20495f7a61863530a0", "filename": "src/test/run-pass/expr-alt-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-alt-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-alt-generic.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -4,7 +4,7 @@\n // -*- rust -*-\n type compare<T> = fn@(T, T) -> bool;\n \n-fn test_generic<T>(expected: T, eq: compare<T>) {\n+fn test_generic<copy T>(expected: T, eq: compare<T>) {\n     let actual: T = alt true { true { expected } };\n     assert (eq(expected, actual));\n }"}, {"sha": "5cd3f2a178b21e3342b73a2cd8f07ff3bc52129e", "filename": "src/test/run-pass/expr-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15be2fc73a4cbed9ac121a91b683812fd3cf1d8a/src%2Ftest%2Frun-pass%2Fexpr-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-fn.rs?ref=15be2fc73a4cbed9ac121a91b683812fd3cf1d8a", "patch": "@@ -9,7 +9,7 @@ fn test_vec() {\n }\n \n fn test_generic() {\n-    fn f<T>(t: T) -> T { t }\n+    fn f<copy T>(t: T) -> T { t }\n     assert (f(10) == 10);\n }\n "}]}