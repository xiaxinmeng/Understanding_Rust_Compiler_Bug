{"sha": "392d54963fd77a42ef054881004a7a0acad542d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MmQ1NDk2M2ZkNzdhNDJlZjA1NDg4MTAwNGE3YTBhY2FkNTQyZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-18T20:03:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-18T20:03:54Z"}, "message": "Auto merge of #78880 - CDirkx:not_supported, r=joshtriplett\n\nAdd `Unsupported` to `std::io::ErrorKind`\n\nI noticed a significant portion of the uses of `ErrorKind::Other` in std is for unsupported operations.\nThe notion that a specific operation is not available on a target (and will thus never succeed) seems semantically distinct enough from just \"an unspecified error occurred\", which is why I am proposing to add the variant `Unsupported` to `std::io::ErrorKind`.\n\n**Implementation**:\n\nThe following variant will be added to `std::io::ErrorKind`:\n\n```rust\n/// This operation is unsupported on this platform.\nUnsupported\n```\n`std::io::ErrorKind::Unsupported` is an error returned when a given operation is not supported on a platform, and will thus never succeed; there is no way for the software to recover. It will be used instead of `Other` where appropriate, e.g. on wasm for file and network operations.\n\n`decode_error_kind` will be updated  to decode operating system errors to `Unsupported`:\n- Unix and VxWorks: `libc::ENOSYS`\n- Windows: `c::ERROR_CALL_NOT_IMPLEMENTED`\n- WASI: `wasi::ERRNO_NOSYS`\n\n**Stability**:\nThis changes the kind of error returned by some functions on some platforms, which I think is not covered by the stability guarantees of the std? User code could depend on this behavior, expecting `ErrorKind::Other`, however the docs already mention:\n\n> Errors that are `Other` now may move to a different or a new `ErrorKind` variant in the future. It is not recommended to match an error against `Other` and to expect any additional characteristics, e.g., a specific `Error::raw_os_error` return value.\n\nThe most recent variant added to `ErrorKind` was `UnexpectedEof` in `1.6.0` (almost 5 years ago), but `ErrorKind` is marked as `#[non_exhaustive]` and the docs warn about exhaustively matching on it, so adding a new variant per se should not be a breaking change.\n\nThe variant `Unsupported` itself could be marked as `#[unstable]`, however, because this PR also immediately uses this new variant and changes the errors returned by functions I'm inclined to agree with the others in this thread that the variant should be insta-stabilized.", "tree": {"sha": "5a647eae63adf90595c8ab31a2c69de91a25d71f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a647eae63adf90595c8ab31a2c69de91a25d71f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/392d54963fd77a42ef054881004a7a0acad542d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/392d54963fd77a42ef054881004a7a0acad542d4", "html_url": "https://github.com/rust-lang/rust/commit/392d54963fd77a42ef054881004a7a0acad542d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/392d54963fd77a42ef054881004a7a0acad542d4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c37e19da4209f4713d3809ec6a60190765656fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c37e19da4209f4713d3809ec6a60190765656fc", "html_url": "https://github.com/rust-lang/rust/commit/8c37e19da4209f4713d3809ec6a60190765656fc"}, {"sha": "024a49aed117dcaa7221d2899e8f8be40d7f2411", "url": "https://api.github.com/repos/rust-lang/rust/commits/024a49aed117dcaa7221d2899e8f8be40d7f2411", "html_url": "https://github.com/rust-lang/rust/commit/024a49aed117dcaa7221d2899e8f8be40d7f2411"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "129d82652d75915f55dc7907e52fddfbd08a0b9d", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/392d54963fd77a42ef054881004a7a0acad542d4/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/392d54963fd77a42ef054881004a7a0acad542d4/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=392d54963fd77a42ef054881004a7a0acad542d4", "patch": "@@ -77,7 +77,7 @@ fn main() {\n     let error_kind = ErrorKind::NotFound;\n     match error_kind {\n         ErrorKind::NotFound => {},\n-        ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | _ => {},\n+        ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | ErrorKind::Unsupported | _ => {},\n     }\n     match error_kind {\n         ErrorKind::NotFound => {},\n@@ -98,6 +98,7 @@ fn main() {\n         ErrorKind::Interrupted => {},\n         ErrorKind::Other => {},\n         ErrorKind::UnexpectedEof => {},\n+        ErrorKind::Unsupported => {},\n         _ => {},\n     }\n }"}, {"sha": "028ecb63e7e6dcc7dddf75c0b170ef944d65e054", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/392d54963fd77a42ef054881004a7a0acad542d4/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/392d54963fd77a42ef054881004a7a0acad542d4/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=392d54963fd77a42ef054881004a7a0acad542d4", "patch": "@@ -98,6 +98,7 @@ fn main() {\n         ErrorKind::Interrupted => {},\n         ErrorKind::Other => {},\n         ErrorKind::UnexpectedEof => {},\n+        ErrorKind::Unsupported => {},\n         _ => {},\n     }\n }"}, {"sha": "fd45cad00d6b51bd6c5cc980957b46439899f9d8", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/392d54963fd77a42ef054881004a7a0acad542d4/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/392d54963fd77a42ef054881004a7a0acad542d4/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=392d54963fd77a42ef054881004a7a0acad542d4", "patch": "@@ -32,7 +32,7 @@ error: wildcard matches known variants and will also match future added variants\n   --> $DIR/wildcard_enum_match_arm.rs:80:9\n    |\n LL |         _ => {},\n-   |         ^ help: try this: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | _`\n+   |         ^ help: try this: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | ErrorKind::Unsupported | _`\n \n error: aborting due to 5 previous errors\n "}]}