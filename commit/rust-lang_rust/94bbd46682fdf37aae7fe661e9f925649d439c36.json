{"sha": "94bbd46682fdf37aae7fe661e9f925649d439c36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YmJkNDY2ODJmZGYzN2FhZTdmZTY2MWU5ZjkyNTY0OWQ0MzljMzY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-22T18:18:06Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-22T18:18:06Z"}, "message": "Add span label to primary error span", "tree": {"sha": "978da85387d0c1e989fd3d4e607b7a8c122d5f04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/978da85387d0c1e989fd3d4e607b7a8c122d5f04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94bbd46682fdf37aae7fe661e9f925649d439c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94bbd46682fdf37aae7fe661e9f925649d439c36", "html_url": "https://github.com/rust-lang/rust/commit/94bbd46682fdf37aae7fe661e9f925649d439c36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94bbd46682fdf37aae7fe661e9f925649d439c36/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52fbd3e5690bfe008b343bdc35c78390239b64cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/52fbd3e5690bfe008b343bdc35c78390239b64cc", "html_url": "https://github.com/rust-lang/rust/commit/52fbd3e5690bfe008b343bdc35c78390239b64cc"}], "stats": {"total": 156, "additions": 76, "deletions": 80}, "files": [{"sha": "22e1a188ddef1c4a9aca394562603655e6a690a1", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1583,13 +1583,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         };\n         let mut err = struct_span_err!(\n             self.tcx().sess,\n-            expr.span,\n+            field.span,\n             E0616,\n             \"field `{}` of {} `{}` is private\",\n             field,\n             kind_name,\n             struct_path\n         );\n+        err.span_label(field.span, \"private field\");\n         // Also check if an accessible method exists, which is often what is meant.\n         if self.method_exists(field, expr_t, expr.hir_id, false) && !self.expr_in_place(expr.hir_id)\n         {\n@@ -1614,7 +1615,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             field,\n             expr_t\n         );\n-\n+        err.span_label(field.span, \"method, not a field\");\n         if !self.expr_in_place(expr.hir_id) {\n             self.suggest_method_call(\n                 &mut err,"}, {"sha": "1bc047dd356e03547dac219ec2692fda245cdddd", "filename": "src/test/ui/error-codes/E0615.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Ferror-codes%2FE0615.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Ferror-codes%2FE0615.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0615.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -2,7 +2,7 @@ error[E0615]: attempted to take value of method `method` on type `Foo`\n   --> $DIR/E0615.rs:11:7\n    |\n LL |     f.method;\n-   |       ^^^^^^\n+   |       ^^^^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}, {"sha": "422bf687e7bd43c080daf65f2d56db62f9e99494", "filename": "src/test/ui/error-codes/E0616.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Ferror-codes%2FE0616.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Ferror-codes%2FE0616.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0616.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `x` of struct `a::Foo` is private\n-  --> $DIR/E0616.rs:13:5\n+  --> $DIR/E0616.rs:13:7\n    |\n LL |     f.x;\n-   |     ^^^\n+   |       ^ private field\n \n error: aborting due to previous error\n "}, {"sha": "2d22bb395140b369966d033ce7c4ed1964b39384", "filename": "src/test/ui/error-codes/ex-E0611.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Ferror-codes%2Fex-E0611.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Ferror-codes%2Fex-E0611.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fex-E0611.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `0` of struct `a::Foo` is private\n-  --> $DIR/ex-E0611.rs:11:4\n+  --> $DIR/ex-E0611.rs:11:6\n    |\n LL |    y.0;\n-   |    ^^^\n+   |      ^ private field\n \n error: aborting due to previous error\n "}, {"sha": "b3d9214d3d12134b669ca76a96e65837a4cc6461", "filename": "src/test/ui/explore-issue-38412.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -17,22 +17,22 @@ LL |     r.a_unstable_undeclared_pub;\n    = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0616]: field `b_crate` of struct `pub_and_stability::Record` is private\n-  --> $DIR/explore-issue-38412.rs:31:5\n+  --> $DIR/explore-issue-38412.rs:31:7\n    |\n LL |     r.b_crate;\n-   |     ^^^^^^^^^\n+   |       ^^^^^^^ private field\n \n error[E0616]: field `c_mod` of struct `pub_and_stability::Record` is private\n-  --> $DIR/explore-issue-38412.rs:32:5\n+  --> $DIR/explore-issue-38412.rs:32:7\n    |\n LL |     r.c_mod;\n-   |     ^^^^^^^\n+   |       ^^^^^ private field\n \n error[E0616]: field `d_priv` of struct `pub_and_stability::Record` is private\n-  --> $DIR/explore-issue-38412.rs:33:5\n+  --> $DIR/explore-issue-38412.rs:33:7\n    |\n LL |     r.d_priv;\n-   |     ^^^^^^^^\n+   |       ^^^^^^ private field\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n   --> $DIR/explore-issue-38412.rs:37:5\n@@ -44,22 +44,22 @@ LL |     t.2;\n    = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0616]: field `3` of struct `pub_and_stability::Tuple` is private\n-  --> $DIR/explore-issue-38412.rs:38:5\n+  --> $DIR/explore-issue-38412.rs:38:7\n    |\n LL |     t.3;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0616]: field `4` of struct `pub_and_stability::Tuple` is private\n-  --> $DIR/explore-issue-38412.rs:39:5\n+  --> $DIR/explore-issue-38412.rs:39:7\n    |\n LL |     t.4;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0616]: field `5` of struct `pub_and_stability::Tuple` is private\n-  --> $DIR/explore-issue-38412.rs:40:5\n+  --> $DIR/explore-issue-38412.rs:40:7\n    |\n LL |     t.5;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n   --> $DIR/explore-issue-38412.rs:44:7"}, {"sha": "482957a326437eaca84528d07ab8abc979b6f099", "filename": "src/test/ui/hygiene/nested_macro_privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fnested_macro_privacy.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `i` of struct `foo::S` is private\n-  --> $DIR/nested_macro_privacy.rs:15:5\n+  --> $DIR/nested_macro_privacy.rs:15:18\n    |\n LL |     S::default().i;\n-   |     ^^^^^^^^^^^^^^\n+   |                  ^ private field\n \n error: aborting due to previous error\n "}, {"sha": "c6af47805ea5bdfd4f5983f5d2d0cc094528835a", "filename": "src/test/ui/implicit-method-bind.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fimplicit-method-bind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fimplicit-method-bind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimplicit-method-bind.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -2,7 +2,7 @@ error[E0615]: attempted to take value of method `abs` on type `i32`\n   --> $DIR/implicit-method-bind.rs:2:20\n    |\n LL |     let _f = 10i32.abs;\n-   |                    ^^^\n+   |                    ^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}, {"sha": "49b946b354e53a8b51ed38c7d073ddac14a38648", "filename": "src/test/ui/issues/issue-13853-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-13853-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-13853-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13853-2.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -2,7 +2,7 @@ error[E0615]: attempted to take value of method `get` on type `std::boxed::Box<(\n   --> $DIR/issue-13853-2.rs:5:43\n    |\n LL | fn foo(res : Box<dyn ResponseHook>) { res.get }\n-   |                                           ^^^\n+   |                                           ^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}, {"sha": "45775e0e4ae36d786f8126b17f8666a577112f48", "filename": "src/test/ui/issues/issue-25386.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-25386.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-25386.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25386.rs?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -17,12 +17,12 @@ mod stuff {\n macro_rules! check_ptr_exist {\n     ($var:expr, $member:ident) => (\n         (*$var.c_object).$member.is_some()\n-        //~^ ERROR field `name` of struct `stuff::CObj` is private\n-        //~^^ ERROR field `c_object` of struct `stuff::Item` is private\n+        //~^ ERROR field `c_object` of struct `stuff::Item` is private\n     );\n }\n \n fn main() {\n     let item = stuff::Item::new();\n     println!(\"{}\", check_ptr_exist!(item, name));\n+    //~^ ERROR field `name` of struct `stuff::CObj` is private\n }"}, {"sha": "6419e7a557194a50b226f0e6421115fad128cb92", "filename": "src/test/ui/issues/issue-25386.stderr", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-25386.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-25386.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25386.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,24 +1,19 @@\n error[E0616]: field `c_object` of struct `stuff::Item` is private\n-  --> $DIR/issue-25386.rs:19:11\n+  --> $DIR/issue-25386.rs:19:16\n    |\n LL |         (*$var.c_object).$member.is_some()\n-   |           ^^^^^^^^^^^^^\n+   |                ^^^^^^^^ private field\n ...\n LL |     println!(\"{}\", check_ptr_exist!(item, name));\n    |                    ---------------------------- in this macro invocation\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0616]: field `name` of struct `stuff::CObj` is private\n-  --> $DIR/issue-25386.rs:19:9\n+  --> $DIR/issue-25386.rs:26:43\n    |\n-LL |         (*$var.c_object).$member.is_some()\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n-...\n LL |     println!(\"{}\", check_ptr_exist!(item, name));\n-   |                    ---------------------------- in this macro invocation\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+   |                                           ^^^^ private field\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f7df5b6232bdac9780aebf84c7965c1e83da75fa", "filename": "src/test/ui/issues/issue-26472.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-26472.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-26472.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26472.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,19 +1,19 @@\n error[E0616]: field `len` of struct `sub::S` is private\n-  --> $DIR/issue-26472.rs:11:13\n+  --> $DIR/issue-26472.rs:11:15\n    |\n LL |     let v = s.len;\n-   |             ^^^^^\n+   |               ^^^ private field\n    |\n help: a method `len` also exists, call it with parentheses\n    |\n LL |     let v = s.len();\n    |                  ^^\n \n error[E0616]: field `len` of struct `sub::S` is private\n-  --> $DIR/issue-26472.rs:12:5\n+  --> $DIR/issue-26472.rs:12:7\n    |\n LL |     s.len = v;\n-   |     ^^^^^\n+   |       ^^^ private field\n \n error: aborting due to 2 previous errors\n "}, {"sha": "dab8f40015621f641667d23ddc8b5310b3d6159d", "filename": "src/test/ui/issues/issue-3763.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,14 +1,14 @@\n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n-  --> $DIR/issue-3763.rs:18:19\n+  --> $DIR/issue-3763.rs:18:32\n    |\n LL |     let _woohoo = (&my_struct).priv_field;\n-   |                   ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                ^^^^^^^^^^ private field\n \n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n-  --> $DIR/issue-3763.rs:21:19\n+  --> $DIR/issue-3763.rs:21:41\n    |\n LL |     let _woohoo = (Box::new(my_struct)).priv_field;\n-   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                         ^^^^^^^^^^ private field\n \n error[E0624]: associated function `happyfun` is private\n   --> $DIR/issue-3763.rs:24:18\n@@ -23,10 +23,10 @@ LL |     (Box::new(my_struct)).happyfun();\n    |                           ^^^^^^^^\n \n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n-  --> $DIR/issue-3763.rs:27:16\n+  --> $DIR/issue-3763.rs:27:26\n    |\n LL |     let nope = my_struct.priv_field;\n-   |                ^^^^^^^^^^^^^^^^^^^^\n+   |                          ^^^^^^^^^^ private field\n \n error: aborting due to 5 previous errors\n "}, {"sha": "f9aef08c353bb07c9500d7f9fef457d33c1bd028", "filename": "src/test/ui/issues/issue-54062.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-54062.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fissues%2Fissue-54062.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54062.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `inner` of struct `std::sync::Mutex` is private\n-  --> $DIR/issue-54062.rs:10:13\n+  --> $DIR/issue-54062.rs:10:24\n    |\n LL |     let _ = test.comps.inner.lock().unwrap();\n-   |             ^^^^^^^^^^^^^^^^\n+   |                        ^^^^^ private field\n \n error[E0599]: no method named `unwrap` found for struct `std::sys_common::mutex::MutexGuard<'_>` in the current scope\n   --> $DIR/issue-54062.rs:10:37"}, {"sha": "cafe9abae045dd0cf4b09ead6bd3f409290f9b29", "filename": "src/test/ui/methods/assign-to-method.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fmethods%2Fassign-to-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fmethods%2Fassign-to-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fassign-to-method.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -2,15 +2,15 @@ error[E0615]: attempted to take value of method `speak` on type `Cat`\n   --> $DIR/assign-to-method.rs:22:10\n    |\n LL |     nyan.speak = || println!(\"meow\");\n-   |          ^^^^^\n+   |          ^^^^^ method, not a field\n    |\n    = help: methods are immutable and cannot be assigned to\n \n error[E0615]: attempted to take value of method `speak` on type `Cat`\n   --> $DIR/assign-to-method.rs:23:10\n    |\n LL |     nyan.speak += || println!(\"meow\");\n-   |          ^^^^^\n+   |          ^^^^^ method, not a field\n    |\n    = help: methods are immutable and cannot be assigned to\n "}, {"sha": "bc8a1c85e561a354b75cbe16e09331e631ad4dc2", "filename": "src/test/ui/methods/method-missing-call.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fmethods%2Fmethod-missing-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fmethods%2Fmethod-missing-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-missing-call.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -2,7 +2,7 @@ error[E0615]: attempted to take value of method `get_x` on type `Point`\n   --> $DIR/method-missing-call.rs:22:26\n    |\n LL |                         .get_x;\n-   |                          ^^^^^\n+   |                          ^^^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |\n@@ -13,7 +13,7 @@ error[E0615]: attempted to take value of method `filter_map` on type `std::iter:\n   --> $DIR/method-missing-call.rs:29:16\n    |\n LL |               .filter_map;\n-   |                ^^^^^^^^^^\n+   |                ^^^^^^^^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}, {"sha": "ca22401f45bb47b6b27f2d542a6db3413b91cf9a", "filename": "src/test/ui/paren-span.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fparen-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fparen-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparen-span.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `x` of struct `m::S` is private\n-  --> $DIR/paren-span.rs:19:12\n+  --> $DIR/paren-span.rs:19:14\n    |\n LL |     paren!(s.x);\n-   |            ^^^\n+   |              ^ private field\n \n error: aborting due to previous error\n "}, {"sha": "ac00d82adab42e54f034de5f50b873c5b86f07aa", "filename": "src/test/ui/privacy/private-struct-field-cross-crate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-cross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-cross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-cross-crate.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `meows` of struct `cci_class::kitties::cat` is private\n-  --> $DIR/private-struct-field-cross-crate.rs:7:14\n+  --> $DIR/private-struct-field-cross-crate.rs:7:19\n    |\n LL |   assert_eq!(nyan.meows, 52);\n-   |              ^^^^^^^^^^\n+   |                   ^^^^^ private field\n \n error: aborting due to previous error\n "}, {"sha": "c89ae507ab5fd8a93b0946b3f951a1a8d97e138a", "filename": "src/test/ui/privacy/private-struct-field.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `meows` of struct `cat::Cat` is private\n-  --> $DIR/private-struct-field.rs:13:16\n+  --> $DIR/private-struct-field.rs:13:21\n    |\n LL |     assert_eq!(nyan.meows, 52);\n-   |                ^^^^^^^^^^\n+   |                     ^^^^^ private field\n \n error: aborting due to previous error\n "}, {"sha": "4d616a0b81b1b63098d2eabd01a6611bfa8438cc", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -47,10 +47,10 @@ LL |         pub(super) fn f() {}\n    |         ^^^^^^^^^^^^^^^^^\n \n error[E0616]: field `x` of struct `foo::bar::S` is private\n-  --> $DIR/test.rs:31:5\n+  --> $DIR/test.rs:31:18\n    |\n LL |     S::default().x;\n-   |     ^^^^^^^^^^^^^^\n+   |                  ^ private field\n \n error[E0624]: associated function `f` is private\n   --> $DIR/test.rs:32:18\n@@ -65,16 +65,16 @@ LL |     S::g();\n    |     ^^^^\n \n error[E0616]: field `y` of struct `pub_restricted::Universe` is private\n-  --> $DIR/test.rs:42:13\n+  --> $DIR/test.rs:42:15\n    |\n LL |     let _ = u.y;\n-   |             ^^^\n+   |               ^ private field\n \n error[E0616]: field `z` of struct `pub_restricted::Universe` is private\n-  --> $DIR/test.rs:43:13\n+  --> $DIR/test.rs:43:15\n    |\n LL |     let _ = u.z;\n-   |             ^^^\n+   |               ^ private field\n \n error[E0624]: associated function `g` is private\n   --> $DIR/test.rs:45:7"}, {"sha": "a23cf90332b02e4b7b4f8844a9b1679568bd7a11", "filename": "src/test/ui/privacy/union-field-privacy-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,8 +1,8 @@\n error[E0616]: field `c` of union `m::U` is private\n-  --> $DIR/union-field-privacy-2.rs:14:13\n+  --> $DIR/union-field-privacy-2.rs:14:15\n    |\n LL |     let c = u.c;\n-   |             ^^^\n+   |               ^ private field\n \n error: aborting due to previous error\n "}, {"sha": "e378a56713400b7d1323c10a1d7d1745fab521ef", "filename": "src/test/ui/proc-macro/issue-50493.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -8,15 +8,15 @@ error[E0616]: field `field` of struct `Restricted` is private\n   --> $DIR/issue-50493.rs:6:10\n    |\n LL | #[derive(Derive)]\n-   |          ^^^^^^\n+   |          ^^^^^^ private field\n    |\n    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0616]: field `field` of struct `Restricted` is private\n   --> $DIR/issue-50493.rs:6:10\n    |\n LL | #[derive(Derive)]\n-   |          ^^^^^^\n+   |          ^^^^^^ private field\n    |\n    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f8b16ec0d01b34a33d9ea7d01aa558d8d8779ae8", "filename": "src/test/ui/structs/struct-field-privacy.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-privacy.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -1,32 +1,32 @@\n error[E0616]: field `a` of struct `inner::A` is private\n-  --> $DIR/struct-field-privacy.rs:23:5\n+  --> $DIR/struct-field-privacy.rs:23:7\n    |\n LL |     b.a;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0616]: field `b` of struct `inner::B` is private\n-  --> $DIR/struct-field-privacy.rs:26:5\n+  --> $DIR/struct-field-privacy.rs:26:7\n    |\n LL |     c.b;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0616]: field `a` of struct `xc::A` is private\n-  --> $DIR/struct-field-privacy.rs:28:5\n+  --> $DIR/struct-field-privacy.rs:28:7\n    |\n LL |     d.a;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0616]: field `b` of struct `xc::B` is private\n-  --> $DIR/struct-field-privacy.rs:32:5\n+  --> $DIR/struct-field-privacy.rs:32:7\n    |\n LL |     e.b;\n-   |     ^^^\n+   |       ^ private field\n \n error[E0616]: field `1` of struct `inner::Z` is private\n-  --> $DIR/struct-field-privacy.rs:35:5\n+  --> $DIR/struct-field-privacy.rs:35:7\n    |\n LL |     z.1;\n-   |     ^^^\n+   |       ^ private field\n \n error: aborting due to 5 previous errors\n "}, {"sha": "b03bea1eddbf08391a6531e223912e3ae95e4c6a", "filename": "src/test/ui/suggestions/fn-or-tuple-struct-without-args.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -250,7 +250,7 @@ error[E0615]: attempted to take value of method `ban` on type `X`\n   --> $DIR/fn-or-tuple-struct-without-args.rs:43:22\n    |\n LL |     let _: usize = X.ban;\n-   |                      ^^^\n+   |                      ^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |\n@@ -261,7 +261,7 @@ error[E0615]: attempted to take value of method `bal` on type `X`\n   --> $DIR/fn-or-tuple-struct-without-args.rs:44:22\n    |\n LL |     let _: usize = X.bal;\n-   |                      ^^^\n+   |                      ^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}, {"sha": "04c67ec6a06b6a7b7eb89e5476e751f53aee7bdf", "filename": "src/test/ui/suggestions/method-missing-parentheses.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fsuggestions%2Fmethod-missing-parentheses.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Fsuggestions%2Fmethod-missing-parentheses.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmethod-missing-parentheses.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -8,7 +8,7 @@ error[E0615]: attempted to take value of method `collect` on type `std::vec::Int\n   --> $DIR/method-missing-parentheses.rs:2:32\n    |\n LL |     let _ = vec![].into_iter().collect::<usize>;\n-   |                                ^^^^^^^\n+   |                                ^^^^^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}, {"sha": "461db1712064fdcdcb698ba537908e95d42e1169", "filename": "src/test/ui/union/union-suggest-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94bbd46682fdf37aae7fe661e9f925649d439c36/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.stderr?ref=94bbd46682fdf37aae7fe661e9f925649d439c36", "patch": "@@ -14,7 +14,7 @@ error[E0615]: attempted to take value of method `calculate` on type `U`\n   --> $DIR/union-suggest-field.rs:18:15\n    |\n LL |     let y = u.calculate;\n-   |               ^^^^^^^^^\n+   |               ^^^^^^^^^ method, not a field\n    |\n help: use parentheses to call the method\n    |"}]}