{"sha": "652ae9f50e67610b482a2c99360737e1b8e8077b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MmFlOWY1MGU2NzYxMGI0ODJhMmM5OTM2MDczN2UxYjhlODA3N2I=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-09T00:34:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-09T00:34:16Z"}, "message": "Fix structure returns harder.", "tree": {"sha": "c2b64e13daa705e03a537b1546c031b22a7578d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2b64e13daa705e03a537b1546c031b22a7578d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/652ae9f50e67610b482a2c99360737e1b8e8077b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/652ae9f50e67610b482a2c99360737e1b8e8077b", "html_url": "https://github.com/rust-lang/rust/commit/652ae9f50e67610b482a2c99360737e1b8e8077b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/652ae9f50e67610b482a2c99360737e1b8e8077b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a3a03572c7b2f49efc898ace7f8841092ec22e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a3a03572c7b2f49efc898ace7f8841092ec22e", "html_url": "https://github.com/rust-lang/rust/commit/e3a3a03572c7b2f49efc898ace7f8841092ec22e"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "ef0e714369b839694d36eef396092ef09235baea", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/652ae9f50e67610b482a2c99360737e1b8e8077b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/652ae9f50e67610b482a2c99360737e1b8e8077b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=652ae9f50e67610b482a2c99360737e1b8e8077b", "patch": "@@ -1403,6 +1403,15 @@ impure fn trans_call(@block_ctxt cx, @ast.expr f,\n     auto args_res = trans_args(f_res._0.bcx, args, fn_ty);\n     auto retval = args_res._0.build.FastCall(f_res._0.val, args_res._1);\n \n+    // Structured returns come back as first-class values. This is nice for\n+    // LLVM but wrong for us; we treat structured values by pointer in\n+    // most of our code here. So spill it to an alloca.\n+    if (typeck.type_is_structural(ret_ty)) {\n+        auto local = args_res._0.build.Alloca(type_of(cx.fcx.ccx, ret_ty));\n+        args_res._0.build.Store(retval, local);\n+        retval = local;\n+    }\n+\n     // Retval doesn't correspond to anything really tangible in the frame, but\n     // it's a ref all the same, so we put a note here to drop it when we're\n     // done in this scope."}]}