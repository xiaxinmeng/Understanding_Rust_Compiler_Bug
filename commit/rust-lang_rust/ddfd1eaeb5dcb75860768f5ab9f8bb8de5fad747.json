{"sha": "ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZmQxZWFlYjVkY2I3NTg2MDc2OGY1YWI5ZjhiYjhkZTVmYWQ3NDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-07T02:55:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-07T02:55:10Z"}, "message": "Use fuzzy_eq in run-pass/intrinsics-math.rs", "tree": {"sha": "91eb8566a8a20cb9699127784acf792c69cfbe97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91eb8566a8a20cb9699127784acf792c69cfbe97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747", "html_url": "https://github.com/rust-lang/rust/commit/ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "098f71d348bbb08e9832dd4c82bd531f511458f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/098f71d348bbb08e9832dd4c82bd531f511458f2", "html_url": "https://github.com/rust-lang/rust/commit/098f71d348bbb08e9832dd4c82bd531f511458f2"}], "stats": {"total": 56, "additions": 30, "deletions": 26}, "files": [{"sha": "ba3df4e92029bc25801380ddc6ec6b32f362ef97", "filename": "src/test/run-pass/intrinsics-math.rs", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs?ref=ddfd1eaeb5dcb75860768f5ab9f8bb8de5fad747", "patch": "@@ -1,3 +1,7 @@\n+extern mod std;\n+\n+use std::cmp::FuzzyEq;\n+\n #[abi = \"rust-intrinsic\"]  \n extern mod rusti {\n     fn sqrtf32(x: f32) -> f32;\n@@ -36,44 +40,44 @@ fn main() {\n \n     use rusti::*;\n \n-    assert(sqrtf32(64f32) == 8f32);\n-    assert(sqrtf64(64f64) == 8f64);\n+    assert(sqrtf32(64f32).fuzzy_eq(&8f32));\n+    assert(sqrtf64(64f64).fuzzy_eq(&8f64));\n \n-    assert(powif32(25f32, -2i32) == 0.0016f32);\n-    assert(powif64(23.2f64, 2i32) == 538.24f64);\n+    assert(powif32(25f32, -2i32).fuzzy_eq(&0.0016f32));\n+    assert(powif64(23.2f64, 2i32).fuzzy_eq(&538.24f64));\n \n-    assert(sinf32(0f32) == 0f32);\n-    assert(sinf64(f64::consts::pi / 2f64) == 1f64);\n+    assert(sinf32(0f32).fuzzy_eq(&0f32));\n+    assert(sinf64(f64::consts::pi / 2f64).fuzzy_eq(&1f64));\n \n-    assert(cosf32(0f32) == 1f32);\n-    assert(cosf64(f64::consts::pi * 2f64) == 1f64);\n+    assert(cosf32(0f32).fuzzy_eq(&1f32));\n+    assert(cosf64(f64::consts::pi * 2f64).fuzzy_eq(&1f64));\n \n-    assert(powf32(25f32, -2f32) == 0.0016f32);\n-    assert(powf64(400f64, 0.5f64) == 20f64);\n+    assert(powf32(25f32, -2f32).fuzzy_eq(&0.0016f32));\n+    assert(powf64(400f64, 0.5f64).fuzzy_eq(&20f64));\n \n-    assert(fabsf32(expf32(1f32) - f32::consts::e) < 0.000001f32);\n-    assert(expf64(1f64) == f64::consts::e);\n+    assert(fabsf32(expf32(1f32) - f32::consts::e).fuzzy_eq(&0f32));\n+    assert(expf64(1f64).fuzzy_eq(&f64::consts::e));\n \n-    assert(exp2f32(10f32) == 1024f32);\n-    assert(exp2f64(50f64) == 1125899906842624f64);\n+    assert(exp2f32(10f32).fuzzy_eq(&1024f32));\n+    assert(exp2f64(50f64).fuzzy_eq(&1125899906842624f64));\n \n-    assert(fabsf32(logf32(f32::consts::e) - 1f32) < 0.000001f32);\n-    assert(logf64(1f64) == 0f64);\n+    assert(fabsf32(logf32(f32::consts::e) - 1f32).fuzzy_eq(&0f32));\n+    assert(logf64(1f64).fuzzy_eq(&0f64));\n \n-    assert(log10f32(10f32) == 1f32);\n-    assert(log10f64(f64::consts::e) == f64::consts::log10_e);\n+    assert(log10f32(10f32).fuzzy_eq(&1f32));\n+    assert(log10f64(f64::consts::e).fuzzy_eq(&f64::consts::log10_e));\n \n-    assert(log2f32(8f32) == 3f32);\n-    assert(log2f64(f64::consts::e) == f64::consts::log2_e);\n+    assert(log2f32(8f32).fuzzy_eq(&3f32));\n+    assert(log2f64(f64::consts::e).fuzzy_eq(&f64::consts::log2_e));\n   \n-    assert(fmaf32(1.0f32, 2.0f32, 5.0f32) == 7.0f32);\n-    assert(fmaf64(0.0f64, -2.0f64, f64::consts::e) == f64::consts::e);\n+    assert(fmaf32(1.0f32, 2.0f32, 5.0f32).fuzzy_eq(&7.0f32));\n+    assert(fmaf64(0.0f64, -2.0f64, f64::consts::e).fuzzy_eq(&f64::consts::e));\n \n-    assert(fabsf32(-1.0f32) == 1.0f32);\n-    assert(fabsf64(34.2f64) == 34.2f64);\n+    assert(fabsf32(-1.0f32).fuzzy_eq(&1.0f32));\n+    assert(fabsf64(34.2f64).fuzzy_eq(&34.2f64));\n \n-    assert(floorf32(3.8f32) == 3.0f32);\n-    assert(floorf64(-1.1f64) == -2.0f64);\n+    assert(floorf32(3.8f32).fuzzy_eq(&3.0f32));\n+    assert(floorf64(-1.1f64).fuzzy_eq(&-2.0f64));\n \n     // Causes linker error\n     // undefined reference to llvm.ceil.f32/64"}]}