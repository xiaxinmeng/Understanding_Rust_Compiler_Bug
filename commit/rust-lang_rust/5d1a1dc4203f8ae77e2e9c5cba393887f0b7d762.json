{"sha": "5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMWExZGM0MjAzZjhhZTc3ZTJlOWM1Y2JhMzkzODg3ZjBiN2Q3NjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-07T01:03:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-07T05:45:53Z"}, "message": "rt: Rename stk_seg.limit to stk_seg.end\n\nrust_task is using the word limit it two ways, so one has to change.", "tree": {"sha": "e8d3d5d7fe77500c5abc1ead6bcec1efdd6c6f4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8d3d5d7fe77500c5abc1ead6bcec1efdd6c6f4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "html_url": "https://github.com/rust-lang/rust/commit/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d7b89bc4dc63632ee0003869811933ddc1962e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d7b89bc4dc63632ee0003869811933ddc1962e9", "html_url": "https://github.com/rust-lang/rust/commit/3d7b89bc4dc63632ee0003869811933ddc1962e9"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "601a7c3f0ef9a674b643cb117c294dd9d9b3056b", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "patch": "@@ -286,7 +286,6 @@ rust_scheduler::start_main_loop() {\n              scheduled_task->state->name);\n \n         place_task_in_tls(scheduled_task);\n-        //pthread_setspecific(89, (void *)scheduled_task->stk->limit);\n \n         interrupt_flag = 0;\n "}, {"sha": "0f97a0a6853ec589e6d77bb34a7ba24777c2abd8", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "patch": "@@ -51,8 +51,8 @@ new_stk(rust_scheduler *sched, rust_task *task, size_t minsz)\n     LOGPTR(task->sched, \"new stk\", (uintptr_t)stk);\n     memset(stk, 0, sizeof(stk_seg));\n     stk->next = task->stk;\n-    stk->limit = (uintptr_t) &stk->data[minsz + RED_ZONE_SIZE];\n-    LOGPTR(task->sched, \"stk limit\", stk->limit);\n+    stk->end = (uintptr_t) &stk->data[minsz + RED_ZONE_SIZE];\n+    LOGPTR(task->sched, \"stk end\", stk->end);\n     stk->valgrind_id =\n         VALGRIND_STACK_REGISTER(&stk->data[0],\n                                 &stk->data[minsz + RED_ZONE_SIZE]);\n@@ -106,7 +106,7 @@ rust_task::rust_task(rust_scheduler *sched, rust_task_list *state,\n     user.notify_enabled = 0;\n \n     stk = new_stk(sched, this, 0);\n-    user.rust_sp = stk->limit;\n+    user.rust_sp = stk->end;\n     if (supervisor) {\n         supervisor->ref();\n     }\n@@ -582,7 +582,7 @@ rust_task::new_stack(size_t stk_sz, void *args_addr, size_t args_sz) {\n \n     stk_seg *stk_seg = new_stk(sched, this, stk_sz + args_sz);\n \n-    uint8_t *new_sp = (uint8_t*)stk_seg->limit;\n+    uint8_t *new_sp = (uint8_t*)stk_seg->end;\n     size_t sizeof_retaddr = sizeof(void*);\n     // Make enough room on the new stack to hold the old stack pointer\n     // in addition to the function arguments\n@@ -608,7 +608,7 @@ rust_task::record_stack_limit() {\n     // account for those 256 bytes.\n     const unsigned LIMIT_OFFSET = 256;\n     A(sched,\n-      (uintptr_t)stk->limit - RED_ZONE_SIZE\n+      (uintptr_t)stk->end - RED_ZONE_SIZE\n       - (uintptr_t)stk->data >= LIMIT_OFFSET,\n       \"Stack size must be greater than LIMIT_OFFSET\");\n     record_sp(stk->data + LIMIT_OFFSET + RED_ZONE_SIZE);\n@@ -627,9 +627,9 @@ rust_task::reset_stack_limit() {\n     uintptr_t sp = get_sp();\n     // Not positive these bounds for sp are correct.\n     // I think that the first possible value for esp on a new\n-    // stack is stk->limit, which points one word in front of\n+    // stack is stk->end, which points one word in front of\n     // the first work to be pushed onto a new stack.\n-    while (sp <= (uintptr_t)stk->data || stk->limit < sp) {\n+    while (sp <= (uintptr_t)stk->data || stk->end < sp) {\n         del_stk(this, stk);\n         A(sched, stk != NULL, \"Failed to find the current stack\");\n     }"}, {"sha": "3d5cbff9910363be0191620ff03446c7fdb67090", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "patch": "@@ -25,7 +25,7 @@ struct rust_box;\n \n struct stk_seg {\n     stk_seg *next;\n-    uintptr_t limit;\n+    uintptr_t end;\n     unsigned int valgrind_id;\n #ifndef _LP64\n     uint32_t pad;"}]}