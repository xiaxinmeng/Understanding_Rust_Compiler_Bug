{"sha": "ac5272b3c7cd929b2144cfc244271e6e3d1d64ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNTI3MmIzYzdjZDkyOWIyMTQ0Y2ZjMjQ0MjcxZTZlM2QxZDY0ZWU=", "commit": {"author": {"name": "Andy Wang", "email": "qian.wang19@imperial.ac.uk", "date": "2021-04-10T12:48:06Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2021-05-05T14:10:57Z"}, "message": "Use RealFileName for Session::working_dir as it may also be remapped", "tree": {"sha": "261801600ce10ea9e2ca1eaee99a6c084211ddac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/261801600ce10ea9e2ca1eaee99a6c084211ddac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac5272b3c7cd929b2144cfc244271e6e3d1d64ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5272b3c7cd929b2144cfc244271e6e3d1d64ee", "html_url": "https://github.com/rust-lang/rust/commit/ac5272b3c7cd929b2144cfc244271e6e3d1d64ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac5272b3c7cd929b2144cfc244271e6e3d1d64ee/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a1b87c9ce295030a373cc4e37cac7e89294903f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a1b87c9ce295030a373cc4e37cac7e89294903f", "html_url": "https://github.com/rust-lang/rust/commit/0a1b87c9ce295030a373cc4e37cac7e89294903f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "10d3651789b3a0d0b9d0d5d2cd8835586f7f0721", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac5272b3c7cd929b2144cfc244271e6e3d1d64ee/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac5272b3c7cd929b2144cfc244271e6e3d1d64ee/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=ac5272b3c7cd929b2144cfc244271e6e3d1d64ee", "patch": "@@ -64,7 +64,7 @@ impl<'tcx> DebugContext<'tcx> {\n         // FIXME: how to get version when building out of tree?\n         // Normally this would use option_env!(\"CFG_VERSION\").\n         let producer = format!(\"cg_clif (rustc {})\", \"unknown version\");\n-        let comp_dir = tcx.sess.working_dir.0.to_string_lossy().into_owned();\n+        let comp_dir = tcx.sess.working_dir.stable_name().to_string_lossy().into_owned();\n         let (name, file_info) = match tcx.sess.local_crate_source_file.clone() {\n             Some(path) => {\n                 let name = path.to_string_lossy().into_owned();"}]}