{"sha": "a846945b82f1bfe5f01aff6688927ddb5f4b2514", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NDY5NDViODJmMWJmZTVmMDFhZmY2Njg4OTI3ZGRiNWY0YjI1MTQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-09T13:06:42Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-11T12:26:26Z"}, "message": "lintcheck: make sure we lauch from the repo root\n\nThis will terminate the program if run via \"cargo run\".\n\"cargo run\" does currently not work because at least a bunch of paths do not take that into account.", "tree": {"sha": "1560ec5a62113fbc19ad25c7cab6a5d2a758308c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1560ec5a62113fbc19ad25c7cab6a5d2a758308c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a846945b82f1bfe5f01aff6688927ddb5f4b2514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a846945b82f1bfe5f01aff6688927ddb5f4b2514", "html_url": "https://github.com/rust-lang/rust/commit/a846945b82f1bfe5f01aff6688927ddb5f4b2514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a846945b82f1bfe5f01aff6688927ddb5f4b2514/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2546e6f006da4acc79dbed3711674e7d7b73f1f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2546e6f006da4acc79dbed3711674e7d7b73f1f0", "html_url": "https://github.com/rust-lang/rust/commit/2546e6f006da4acc79dbed3711674e7d7b73f1f0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "e6b2d49cfef043fbfa4567e96757646c858c6349", "filename": "lintcheck/src/main.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a846945b82f1bfe5f01aff6688927ddb5f4b2514/lintcheck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a846945b82f1bfe5f01aff6688927ddb5f4b2514/lintcheck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2Fsrc%2Fmain.rs?ref=a846945b82f1bfe5f01aff6688927ddb5f4b2514", "patch": "@@ -1,5 +1,6 @@\n // Run clippy on a fixed set of crates and collect the warnings.\n-// This helps observing the impact clippy changes have on a set of real-world code (and not just our testsuite).\n+// This helps observing the impact clippy changes have on a set of real-world code (and not just our\n+// testsuite).\n //\n // When a new lint is introduced, we can search the results for new warnings and check for false\n // positives.\n@@ -556,12 +557,29 @@ fn lintcheck_needs_rerun(lintcheck_logs_path: &Path) -> bool {\n     logs_modified < clippy_modified\n }\n \n+fn is_in_clippy_root() -> bool {\n+    if let Ok(pb) = std::env::current_dir() {\n+        if let Some(file) = pb.file_name() {\n+            return file == PathBuf::from(\"rust-clippy\");\n+        }\n+    }\n+\n+    false\n+}\n+\n /// lintchecks `main()` function\n ///\n /// # Panics\n ///\n-/// This function panics if the clippy binaries don't exist.\n+/// This function panics if the clippy binaries don't exist\n+/// or if lintcheck is executed from the wrong directory (aka none-repo-root)\n pub fn main() {\n+    // assert that we launch lintcheck from the repo root (via cargo dev-lintcheck)\n+    if !is_in_clippy_root() {\n+        eprintln!(\"lintcheck needs to be run from clippys repo root!\\nUse `cargo dev-lintcheck` alternatively.\");\n+        std::process::exit(3);\n+    }\n+\n     let clap_config = &get_clap_config();\n \n     let config = LintcheckConfig::from_clap(clap_config);"}]}