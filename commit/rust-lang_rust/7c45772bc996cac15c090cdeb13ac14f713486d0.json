{"sha": "7c45772bc996cac15c090cdeb13ac14f713486d0", "node_id": "C_kwDOAAsO6NoAKDdjNDU3NzJiYzk5NmNhYzE1YzA5MGNkZWIxM2FjMTRmNzEzNDg2ZDA", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-08T13:00:03Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-29T18:36:53Z"}, "message": "Make verbose query description more useful.", "tree": {"sha": "957b5988c9cc5a108a0dd6d2e638066ab8080fe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/957b5988c9cc5a108a0dd6d2e638066ab8080fe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c45772bc996cac15c090cdeb13ac14f713486d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c45772bc996cac15c090cdeb13ac14f713486d0", "html_url": "https://github.com/rust-lang/rust/commit/7c45772bc996cac15c090cdeb13ac14f713486d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c45772bc996cac15c090cdeb13ac14f713486d0/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0098a5cc3a87d857e597af824d0ce1ed1ad85e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0098a5cc3a87d857e597af824d0ce1ed1ad85e0", "html_url": "https://github.com/rust-lang/rust/commit/e0098a5cc3a87d857e597af824d0ce1ed1ad85e0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e69f6aa3a93a67028e3224677739e0e1d7e130b3", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c45772bc996cac15c090cdeb13ac14f713486d0/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c45772bc996cac15c090cdeb13ac14f713486d0/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=7c45772bc996cac15c090cdeb13ac14f713486d0", "patch": "@@ -309,7 +309,7 @@ pub(crate) fn create_query_frame<\n         ty::print::with_forced_impl_filename_line!(do_describe(tcx.tcx, key))\n     );\n     let description =\n-        if tcx.sess.verbose() { format!(\"{} [{}]\", description, name) } else { description };\n+        if tcx.sess.verbose() { format!(\"{} [{:?}]\", description, name) } else { description };\n     let span = if kind == dep_graph::DepKind::def_span {\n         // The `def_span` query is used to calculate `default_span`,\n         // so exit to avoid infinite recursion."}]}