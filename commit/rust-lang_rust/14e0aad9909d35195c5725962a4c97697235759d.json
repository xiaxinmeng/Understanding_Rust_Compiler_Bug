{"sha": "14e0aad9909d35195c5725962a4c97697235759d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZTBhYWQ5OTA5ZDM1MTk1YzU3MjU5NjJhNGM5NzY5NzIzNTc1OWQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-14T16:48:10Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-21T12:51:58Z"}, "message": "symbol_names: treat ReifyShim like VtableShim.", "tree": {"sha": "06265a24f9e72fde673e7c65c15a2424904d2527", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06265a24f9e72fde673e7c65c15a2424904d2527"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14e0aad9909d35195c5725962a4c97697235759d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14e0aad9909d35195c5725962a4c97697235759d", "html_url": "https://github.com/rust-lang/rust/commit/14e0aad9909d35195c5725962a4c97697235759d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14e0aad9909d35195c5725962a4c97697235759d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98803c182b2ba6ef5dccb6bf501958249295eac0", "url": "https://api.github.com/repos/rust-lang/rust/commits/98803c182b2ba6ef5dccb6bf501958249295eac0", "html_url": "https://github.com/rust-lang/rust/commit/98803c182b2ba6ef5dccb6bf501958249295eac0"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "46372701a92544eec022aed942edc5b584df7d54", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14e0aad9909d35195c5725962a4c97697235759d/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14e0aad9909d35195c5725962a4c97697235759d/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=14e0aad9909d35195c5725962a4c97697235759d", "patch": "@@ -406,10 +406,6 @@ impl<'tcx> Instance<'tcx> {\n             | InstanceDef::VtableShim(..) => Some(self.substs),\n         }\n     }\n-\n-    pub fn is_vtable_shim(&self) -> bool {\n-        if let InstanceDef::VtableShim(..) = self.def { true } else { false }\n-    }\n }\n \n fn needs_fn_once_adapter_shim("}, {"sha": "7b082309f34b549343cd01a36a19bc1926381720", "filename": "src/librustc_symbol_mangling/legacy.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14e0aad9909d35195c5725962a4c97697235759d/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14e0aad9909d35195c5725962a4c97697235759d/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Flegacy.rs?ref=14e0aad9909d35195c5725962a4c97697235759d", "patch": "@@ -59,10 +59,14 @@ pub(super) fn mangle(\n         .print_def_path(def_id, &[])\n         .unwrap();\n \n-    if instance.is_vtable_shim() {\n+    if let ty::InstanceDef::VtableShim(..) = instance.def {\n         let _ = printer.write_str(\"{{vtable-shim}}\");\n     }\n \n+    if let ty::InstanceDef::ReifyShim(..) = instance.def {\n+        let _ = printer.write_str(\"{{reify-shim}}\");\n+    }\n+\n     printer.path.finish(hash)\n }\n \n@@ -123,7 +127,8 @@ fn get_symbol_hash<'tcx>(\n         }\n \n         // We want to avoid accidental collision between different types of instances.\n-        // Especially, VtableShim may overlap with its original instance without this.\n+        // Especially, `VtableShim`s and `ReifyShim`s may overlap with their original\n+        // instances without this.\n         discriminant(&instance.def).hash_stable(&mut hcx, &mut hasher);\n     });\n "}, {"sha": "e22a49061bb19efb1dc556ef4e8baf89f5bf9306", "filename": "src/librustc_symbol_mangling/v0.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/14e0aad9909d35195c5725962a4c97697235759d/src%2Flibrustc_symbol_mangling%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14e0aad9909d35195c5725962a4c97697235759d/src%2Flibrustc_symbol_mangling%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Fv0.rs?ref=14e0aad9909d35195c5725962a4c97697235759d", "patch": "@@ -34,8 +34,17 @@ pub(super) fn mangle(\n         binders: vec![],\n         out: String::from(prefix),\n     };\n-    cx = if instance.is_vtable_shim() {\n-        cx.path_append_ns(|cx| cx.print_def_path(def_id, substs), 'S', 0, \"\").unwrap()\n+\n+    // Append `::{shim:...#0}` to shims that can coexist with a non-shim instance.\n+    let shim_kind = match instance.def {\n+        ty::InstanceDef::VtableShim(_) => Some(\"vtable\"),\n+        ty::InstanceDef::ReifyShim(_) => Some(\"reify\"),\n+\n+        _ => None,\n+    };\n+\n+    cx = if let Some(shim_kind) = shim_kind {\n+        cx.path_append_ns(|cx| cx.print_def_path(def_id, substs), 'S', 0, shim_kind).unwrap()\n     } else {\n         cx.print_def_path(def_id, substs).unwrap()\n     };"}]}