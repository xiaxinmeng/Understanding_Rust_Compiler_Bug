{"sha": "12750c88931f707e63f2ec19396710bf70a39ae8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNzUwYzg4OTMxZjcwN2U2M2YyZWMxOTM5NjcxMGJmNzBhMzlhZTg=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-11T11:43:29Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-12T02:21:04Z"}, "message": "std: methodise str::capacity", "tree": {"sha": "ba64fff273742e3ab4f9249d31d060561a3ae818", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba64fff273742e3ab4f9249d31d060561a3ae818"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12750c88931f707e63f2ec19396710bf70a39ae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12750c88931f707e63f2ec19396710bf70a39ae8", "html_url": "https://github.com/rust-lang/rust/commit/12750c88931f707e63f2ec19396710bf70a39ae8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12750c88931f707e63f2ec19396710bf70a39ae8/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac00a94895f4d9a8119ef35494fddb9d66436ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac00a94895f4d9a8119ef35494fddb9d66436ae", "html_url": "https://github.com/rust-lang/rust/commit/3ac00a94895f4d9a8119ef35494fddb9d66436ae"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "fdcca339f9bfb2d986dc7ce9a39513840453c75f", "filename": "src/libstd/str.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/12750c88931f707e63f2ec19396710bf70a39ae8/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12750c88931f707e63f2ec19396710bf70a39ae8/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=12750c88931f707e63f2ec19396710bf70a39ae8", "patch": "@@ -1094,18 +1094,6 @@ pub fn subslice_offset(outer: &str, inner: &str) -> uint {\n     }\n }\n \n-\n-/**\n- * Returns the number of single-byte characters the string can hold without\n- * reallocating\n- */\n-pub fn capacity(s: &const ~str) -> uint {\n-    let buf: &const ~[u8] = unsafe { cast::transmute(s) };\n-    let vcap = vec::capacity(buf);\n-    assert!(vcap > 0u);\n-    vcap - 1u\n-}\n-\n /// Escape each char in `s` with char::escape_default.\n pub fn escape_default(s: &str) -> ~str {\n     let mut out: ~str = ~\"\";\n@@ -2020,6 +2008,7 @@ pub trait OwnedStr {\n     fn append(&self, rhs: &str) -> ~str; // FIXME #4850: this should consume self.\n     fn reserve(&mut self, n: uint);\n     fn reserve_at_least(&mut self, n: uint);\n+    fn capacity(&self) -> uint;\n \n     fn as_bytes_with_null_consume(self) -> ~[u8];\n }\n@@ -2212,6 +2201,17 @@ impl OwnedStr for ~str {\n         self.reserve(uint::next_power_of_two(n + 1u) - 1u)\n     }\n \n+    /**\n+     * Returns the number of single-byte characters the string can hold without\n+     * reallocating\n+     */\n+    fn capacity(&self) -> uint {\n+        let buf: &const ~[u8] = unsafe { cast::transmute(self) };\n+        let vcap = vec::capacity(buf);\n+        assert!(vcap > 0u);\n+        vcap - 1u\n+    }\n+\n     /// Convert to a vector of bytes. This does not allocate a new\n     /// string, and includes the null terminator.\n     #[inline]"}]}