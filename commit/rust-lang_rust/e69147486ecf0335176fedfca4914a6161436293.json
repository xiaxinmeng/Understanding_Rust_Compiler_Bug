{"sha": "e69147486ecf0335176fedfca4914a6161436293", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OTE0NzQ4NmVjZjAzMzUxNzZmZWRmY2E0OTE0YTYxNjE0MzYyOTM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-18T15:53:18Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "cargo clippy dev: fix extraction of downloaded crates", "tree": {"sha": "521d042f7c50ea14c7e8709559d5952c64d2fa56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/521d042f7c50ea14c7e8709559d5952c64d2fa56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e69147486ecf0335176fedfca4914a6161436293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e69147486ecf0335176fedfca4914a6161436293", "html_url": "https://github.com/rust-lang/rust/commit/e69147486ecf0335176fedfca4914a6161436293", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e69147486ecf0335176fedfca4914a6161436293/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63176834c2a9cc6718a4e7b20238b607331f1f1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/63176834c2a9cc6718a4e7b20238b607331f1f1d", "html_url": "https://github.com/rust-lang/rust/commit/63176834c2a9cc6718a4e7b20238b607331f1f1d"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "b18c4edc2366389f81177276c3ab8adc293e8561", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e69147486ecf0335176fedfca4914a6161436293/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e69147486ecf0335176fedfca4914a6161436293/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=e69147486ecf0335176fedfca4914a6161436293", "patch": "@@ -34,28 +34,30 @@ impl KrateSource {\n             self.name, self.version\n         );\n         println!(\"Downloading {}, {} / {}\", self.name, self.version, url);\n-        std::fs::create_dir(\"target/crater/\").unwrap();\n+        let _ = std::fs::create_dir(\"target/crater/\");\n \n-        std::fs::create_dir(&krate_download_dir).unwrap();\n-        std::fs::create_dir(&extract_dir).unwrap();\n+        let _ = std::fs::create_dir(&krate_download_dir);\n+        let _ = std::fs::create_dir(&extract_dir);\n \n         let krate_name = format!(\"{}-{}.crate.tar.gz\", &self.name, &self.version);\n-        let mut krate_dest = std::fs::File::create(krate_download_dir.join(krate_name)).unwrap();\n+        let krate_file_path = krate_download_dir.join(krate_name);\n+        let mut krate_dest = std::fs::File::create(&krate_file_path).unwrap();\n         let mut krate_req = ureq::get(&url).call().unwrap().into_reader();\n         std::io::copy(&mut krate_req, &mut krate_dest).unwrap();\n-        let krate = krate_dest;\n-        dbg!(&krate);\n-        let tar = flate2::read::GzDecoder::new(&krate);\n-        let mut archiv = tar::Archive::new(tar);\n-        let extracted_path = extract_dir.join(format!(\"{}-{}\", self.name, self.version));\n-      // println!(\"ar:  p: {:?}\", &krate, extracted_path);\n-        archiv.unpack(&extracted_path).expect(\"Failed to extract!\");\n-        // extract\n+        // unzip the tarball\n+        let dl = std::fs::File::open(krate_file_path).unwrap();\n+\n+        let ungz_tar = flate2::read::GzDecoder::new(dl);\n+        // extract the tar archive\n+        let mut archiv = tar::Archive::new(ungz_tar);\n+        let extract_path = extract_dir.join(format!(\"{}-{}/\", self.name, self.version));\n+        archiv.unpack(&extract_path).expect(\"Failed to extract!\");\n+        // extracted\n \n         Krate {\n             version: self.version.clone(),\n             name: self.name.clone(),\n-            path: extracted_path,\n+            path: extract_path,\n         }\n     }\n }\n@@ -88,11 +90,13 @@ pub fn run() {\n     // assert that clippy is found\n     assert!(\n         cargo_clippy_path.is_file(),\n-        \"target/debug/cargo-clippy binary not found! {}\", cargo_clippy_path.display()\n+        \"target/debug/cargo-clippy binary not found! {}\",\n+        cargo_clippy_path.display()\n     );\n     assert!(\n         clippy_driver_path.is_file(),\n-        \"target/debug/clippy-driver binary not found! {}\", clippy_driver_path.display()\n+        \"target/debug/clippy-driver binary not found! {}\",\n+        clippy_driver_path.display()\n     );\n \n     // download and extract the crates, then run clippy on them and collect clippys warnings"}]}