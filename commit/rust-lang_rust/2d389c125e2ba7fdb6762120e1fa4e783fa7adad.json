{"sha": "2d389c125e2ba7fdb6762120e1fa4e783fa7adad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMzg5YzEyNWUyYmE3ZmRiNjc2MjEyMGUxZmE0ZTc4M2ZhN2FkYWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-11T01:49:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-17T16:07:16Z"}, "message": "std: Stabilize the `str_matches` feature\n\nThis commit stabilizes the `str::{matches, rmatches}` functions and iterators,\nbut renames the unstable feature for the `str::{matches,rmatches}_indices`\nfunction to `str_match_indices` due to the comment present on the functions\nabout the iterator's return value.", "tree": {"sha": "c0f11a93bc6d1ec4d424dd19da3881c7ecacc374", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0f11a93bc6d1ec4d424dd19da3881c7ecacc374"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d389c125e2ba7fdb6762120e1fa4e783fa7adad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d389c125e2ba7fdb6762120e1fa4e783fa7adad", "html_url": "https://github.com/rust-lang/rust/commit/2d389c125e2ba7fdb6762120e1fa4e783fa7adad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d389c125e2ba7fdb6762120e1fa4e783fa7adad/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17a1059d8343ffd66fe3f3c51e3bf9b493cdf2f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/17a1059d8343ffd66fe3f3c51e3bf9b493cdf2f3", "html_url": "https://github.com/rust-lang/rust/commit/17a1059d8343ffd66fe3f3c51e3bf9b493cdf2f3"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "55265aac99f8ea25d6862685d767f5ca6eb4ee77", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2d389c125e2ba7fdb6762120e1fa4e783fa7adad/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d389c125e2ba7fdb6762120e1fa4e783fa7adad/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=2d389c125e2ba7fdb6762120e1fa4e783fa7adad", "patch": "@@ -1527,8 +1527,7 @@ impl str {\n     /// let v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\n     /// assert_eq!(v, [\"1\", \"2\", \"3\"]);\n     /// ```\n-    #[unstable(feature = \"str_matches\",\n-               reason = \"method got recently added\")]\n+    #[stable(feature = \"str_matches\", since = \"1.2.0\")]\n     pub fn matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> Matches<'a, P> {\n         core_str::StrExt::matches(self, pat)\n     }\n@@ -1560,8 +1559,7 @@ impl str {\n     /// let v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\n     /// assert_eq!(v, [\"3\", \"2\", \"1\"]);\n     /// ```\n-    #[unstable(feature = \"str_matches\",\n-               reason = \"method got recently added\")]\n+    #[stable(feature = \"str_matches\", since = \"1.2.0\")]\n     pub fn rmatches<'a, P: Pattern<'a>>(&'a self, pat: P) -> RMatches<'a, P>\n         where P::Searcher: ReverseSearcher<'a>\n     {\n@@ -1605,7 +1603,7 @@ impl str {\n     /// let v: Vec<(usize, usize)> = \"ababa\".match_indices(\"aba\").collect();\n     /// assert_eq!(v, [(0, 3)]); // only the first `aba`\n     /// ```\n-    #[unstable(feature = \"str_matches\",\n+    #[unstable(feature = \"str_match_indices\",\n                reason = \"might have its iterator type changed\")]\n     // NB: Right now MatchIndices yields `(usize, usize)`, but it would\n     // be more consistent with `matches` and `char_indices` to return `(usize, &str)`\n@@ -1649,7 +1647,7 @@ impl str {\n     /// let v: Vec<(usize, usize)> = \"ababa\".rmatch_indices(\"aba\").collect();\n     /// assert_eq!(v, [(2, 5)]); // only the last `aba`\n     /// ```\n-    #[unstable(feature = \"str_matches\",\n+    #[unstable(feature = \"str_match_indices\",\n                reason = \"might have its iterator type changed\")]\n     // NB: Right now RMatchIndices yields `(usize, usize)`, but it would\n     // be more consistent with `rmatches` and `char_indices` to return `(usize, &str)`"}, {"sha": "5a621176c4a812b45976d9744964f2ea31eeab62", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d389c125e2ba7fdb6762120e1fa4e783fa7adad/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d389c125e2ba7fdb6762120e1fa4e783fa7adad/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=2d389c125e2ba7fdb6762120e1fa4e783fa7adad", "patch": "@@ -738,7 +738,7 @@ generate_pattern_iterators! {\n         #[doc=\"Created with the method `.rmatch_indices()`.\"]\n         struct RMatchIndices;\n     stability:\n-        #[unstable(feature = \"str_internals\",\n+        #[unstable(feature = \"str_match_indices\",\n                    reason = \"type may be removed or have its iterator impl changed\")]\n     internal:\n         MatchIndicesInternal yielding ((usize, usize));\n@@ -779,7 +779,7 @@ generate_pattern_iterators! {\n         #[doc=\"Created with the method `.rmatches()`.\"]\n         struct RMatches;\n     stability:\n-        #[unstable(feature = \"str_internals\", reason = \"type got recently added\")]\n+        #[stable(feature = \"str_matches\", since = \"1.2.0\")]\n     internal:\n         MatchesInternal yielding (&'a str);\n     delegate double ended;"}]}