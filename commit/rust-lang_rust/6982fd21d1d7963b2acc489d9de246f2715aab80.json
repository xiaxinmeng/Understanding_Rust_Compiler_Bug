{"sha": "6982fd21d1d7963b2acc489d9de246f2715aab80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ODJmZDIxZDFkNzk2M2IyYWNjNDg5ZDlkZTI0NmYyNzE1YWFiODA=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-25T15:14:59Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-01T15:38:46Z"}, "message": "Be more permissive with required bounds on existential types", "tree": {"sha": "8b0dc8c75974e2190136b439f8bbb9d04c2dcec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b0dc8c75974e2190136b439f8bbb9d04c2dcec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6982fd21d1d7963b2acc489d9de246f2715aab80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6982fd21d1d7963b2acc489d9de246f2715aab80", "html_url": "https://github.com/rust-lang/rust/commit/6982fd21d1d7963b2acc489d9de246f2715aab80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6982fd21d1d7963b2acc489d9de246f2715aab80/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "381c5416855f53e130d5156aec5f9067fc981dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/381c5416855f53e130d5156aec5f9067fc981dfa", "html_url": "https://github.com/rust-lang/rust/commit/381c5416855f53e130d5156aec5f9067fc981dfa"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "5390382ee2d76871d2b90c698d611b92709daa31", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6982fd21d1d7963b2acc489d9de246f2715aab80/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6982fd21d1d7963b2acc489d9de246f2715aab80/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=6982fd21d1d7963b2acc489d9de246f2715aab80", "patch": "@@ -1385,10 +1385,7 @@ pub fn check_item_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, it: &'tcx hir::Ite\n         }\n         hir::ItemKind::Existential(..) => {\n             let def_id = tcx.hir().local_def_id(it.id);\n-            let pty_ty = tcx.type_of(def_id);\n-            let generics = tcx.generics_of(def_id);\n \n-            check_bounds_are_used(tcx, &generics, pty_ty);\n             let substs = Substs::identity_for_item(tcx, def_id);\n             check_opaque(tcx, def_id, substs, it.span);\n         }"}, {"sha": "14d63ecc6bb5dd7d8977660ab75eec702255dbdf", "filename": "src/test/ui/existential_types/generic_duplicate_param_use.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6982fd21d1d7963b2acc489d9de246f2715aab80/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6982fd21d1d7963b2acc489d9de246f2715aab80/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use.rs?ref=6982fd21d1d7963b2acc489d9de246f2715aab80", "patch": "@@ -1,8 +1,10 @@\n+// compile-pass\n #![feature(existential_type)]\n \n fn main() {}\n \n-existential type Two<T, U>: 'static; //~ ERROR type parameter `U` is unused\n+// test that unused generic parameters are ok\n+existential type Two<T, U>: 'static;\n \n fn one<T: 'static>(t: T) -> Two<T, T> {\n     t"}, {"sha": "7af6508788129e868c5c8d6c2370762e252c53da", "filename": "src/test/ui/existential_types/unused_generic_param.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6982fd21d1d7963b2acc489d9de246f2715aab80/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6982fd21d1d7963b2acc489d9de246f2715aab80/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.rs?ref=6982fd21d1d7963b2acc489d9de246f2715aab80", "patch": "@@ -1,15 +1,18 @@\n+// compile-pass\n #![feature(existential_type)]\n \n fn main() {\n }\n \n-existential type PartiallyDefined<T>: 'static; //~ `T` is unused\n+// test that unused generic parameters are ok\n+existential type PartiallyDefined<T>: 'static;\n \n fn partially_defined<T: std::fmt::Debug>(_: T) -> PartiallyDefined<T> {\n     4u32\n }\n \n-existential type PartiallyDefined2<T>: 'static; //~ `T` is unused\n+// test that unused generic parameters are ok\n+existential type PartiallyDefined2<T>: 'static;\n \n fn partially_defined2<T: std::fmt::Debug>(_: T) -> PartiallyDefined2<T> {\n     4u32"}]}