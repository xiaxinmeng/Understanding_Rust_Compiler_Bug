{"sha": "1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhM2IzZDQyOTg3M2IwZjY5MjZhOThlNGYwYTRiNzhhNTIzMGM5MjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-24T17:25:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-24T17:25:49Z"}, "message": "Rollup merge of #57863 - davidtwco:issue-57684, r=estebank\n\nAdd suggestion for incorrect field syntax.\n\nFixes #57684.\n\nThis commit adds a suggestion when a `=` character is used when\nspecifying the value of a field in a struct constructor incorrectly\ninstead of a `:` character.\n\nr? @estebank", "tree": {"sha": "fd129a1094037513da75df834a81af81cb906c4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd129a1094037513da75df834a81af81cb906c4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcSfUdCRBK7hj4Ov3rIwAAdHIIAG4UqmvlruVJr66gvrVCeZGt\n9/ZgCfr6WF08BTWu6/xEVzXtKzknIUkezYQ39Jrrw/A2eNamX0DmSVtuzP8e+JLg\nfH2uHKbEgmQg9ee/vO5bbEJtNAba8L1V9Z0F1iOGt+MjuQFLSew7lcvXIAW0/X3F\nh14/7SG6b5eGEWmmdPmwi5HB0WjHlfjY4n/zVLIKJvz4doxUKTuJ3s8PhBuC7Sm6\nNaZ4f1wL5Do82PwKTishbxrQXsx9qkLXSD57ptmZxtXz+pxtL9YYxVM5wNVYuZ/O\n8wX41aqZoCBEUy6J4NewdpWaQAgjEg3G1/hiZ/iZr8aGZhTGGMWq1Vg1ygz4MEo=\n=NXKe\n-----END PGP SIGNATURE-----\n", "payload": "tree fd129a1094037513da75df834a81af81cb906c4a\nparent 5b288ae0eb26f5d17edd6ca4a2d0c5f28be81674\nparent f14d007ee4f4b69cdb3880db49608b432bea8352\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548350749 +0100\ncommitter GitHub <noreply@github.com> 1548350749 +0100\n\nRollup merge of #57863 - davidtwco:issue-57684, r=estebank\n\nAdd suggestion for incorrect field syntax.\n\nFixes #57684.\n\nThis commit adds a suggestion when a `=` character is used when\nspecifying the value of a field in a struct constructor incorrectly\ninstead of a `:` character.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "html_url": "https://github.com/rust-lang/rust/commit/1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b288ae0eb26f5d17edd6ca4a2d0c5f28be81674", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b288ae0eb26f5d17edd6ca4a2d0c5f28be81674", "html_url": "https://github.com/rust-lang/rust/commit/5b288ae0eb26f5d17edd6ca4a2d0c5f28be81674"}, {"sha": "f14d007ee4f4b69cdb3880db49608b432bea8352", "url": "https://api.github.com/repos/rust-lang/rust/commits/f14d007ee4f4b69cdb3880db49608b432bea8352", "html_url": "https://github.com/rust-lang/rust/commit/f14d007ee4f4b69cdb3880db49608b432bea8352"}], "stats": {"total": 110, "additions": 109, "deletions": 1}, "files": [{"sha": "9f1a9bfa6e62b30831dc572daf818069ff7464ae", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "patch": "@@ -2322,8 +2322,24 @@ impl<'a> Parser<'a> {\n         let lo = self.span;\n \n         // Check if a colon exists one ahead. This means we're parsing a fieldname.\n-        let (fieldname, expr, is_shorthand) = if self.look_ahead(1, |t| t == &token::Colon) {\n+        let (fieldname, expr, is_shorthand) = if self.look_ahead(1, |t| {\n+            t == &token::Colon || t == &token::Eq\n+        }) {\n             let fieldname = self.parse_field_name()?;\n+\n+            // Check for an equals token. This means the source incorrectly attempts to\n+            // initialize a field with an eq rather than a colon.\n+            if self.token == token::Eq {\n+                self.diagnostic()\n+                    .struct_span_err(self.span, \"expected `:`, found `=`\")\n+                    .span_suggestion_with_applicability(\n+                        fieldname.span.shrink_to_hi().to(self.span),\n+                        \"replace equals symbol with a colon\",\n+                        \":\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n+            }\n             self.bump(); // `:`\n             (fieldname, self.parse_expr()?, false)\n         } else {"}, {"sha": "4a432206d51e1488275e52a8ce1ac1fa1b80550d", "filename": "src/test/ui/issues/issue-57684.fixed", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Ftest%2Fui%2Fissues%2Fissue-57684.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Ftest%2Fui%2Fissues%2Fissue-57684.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57684.fixed?ref=1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "patch": "@@ -0,0 +1,37 @@\n+// run-rustfix\n+\n+#![allow(warnings)]\n+\n+// This test checks that the following error is emitted when a `=` character is used to initialize\n+// a struct field when a `:` is expected.\n+//\n+// ```\n+// error: struct fields are initialized with a colon\n+//   --> $DIR/issue-57684.rs:12:20\n+//    |\n+// LL |     let _ = X { f1 = 5 };\n+//    |                    ^ help: replace equals symbol with a colon: `:`\n+// ```\n+\n+struct X {\n+    f1: i32,\n+}\n+\n+struct Y {\n+    f1: i32,\n+    f2: i32,\n+    f3: i32,\n+}\n+\n+fn main() {\n+    let _ = X { f1: 5 };\n+    //~^ ERROR expected `:`, found `=`\n+\n+    let f3 = 3;\n+    let _ = Y {\n+        f1: 5,\n+        //~^ ERROR expected `:`, found `=`\n+        f2: 4,\n+        f3,\n+    };\n+}"}, {"sha": "7a62785e32f1c045583ca276283bca8cfaa2bc6a", "filename": "src/test/ui/issues/issue-57684.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Ftest%2Fui%2Fissues%2Fissue-57684.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Ftest%2Fui%2Fissues%2Fissue-57684.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57684.rs?ref=1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "patch": "@@ -0,0 +1,37 @@\n+// run-rustfix\n+\n+#![allow(warnings)]\n+\n+// This test checks that the following error is emitted when a `=` character is used to initialize\n+// a struct field when a `:` is expected.\n+//\n+// ```\n+// error: struct fields are initialized with a colon\n+//   --> $DIR/issue-57684.rs:12:20\n+//    |\n+// LL |     let _ = X { f1 = 5 };\n+//    |                    ^ help: replace equals symbol with a colon: `:`\n+// ```\n+\n+struct X {\n+    f1: i32,\n+}\n+\n+struct Y {\n+    f1: i32,\n+    f2: i32,\n+    f3: i32,\n+}\n+\n+fn main() {\n+    let _ = X { f1 = 5 };\n+    //~^ ERROR expected `:`, found `=`\n+\n+    let f3 = 3;\n+    let _ = Y {\n+        f1 = 5,\n+        //~^ ERROR expected `:`, found `=`\n+        f2: 4,\n+        f3,\n+    };\n+}"}, {"sha": "514bbffde6b1e957b68ad94042b1bef77d322a48", "filename": "src/test/ui/issues/issue-57684.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Ftest%2Fui%2Fissues%2Fissue-57684.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a3b3d429873b0f6926a98e4f0a4b78a5230c925/src%2Ftest%2Fui%2Fissues%2Fissue-57684.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57684.stderr?ref=1a3b3d429873b0f6926a98e4f0a4b78a5230c925", "patch": "@@ -0,0 +1,18 @@\n+error: expected `:`, found `=`\n+  --> $DIR/issue-57684.rs:27:20\n+   |\n+LL |     let _ = X { f1 = 5 };\n+   |                   -^\n+   |                   |\n+   |                   help: replace equals symbol with a colon: `:`\n+\n+error: expected `:`, found `=`\n+  --> $DIR/issue-57684.rs:32:12\n+   |\n+LL |         f1 = 5,\n+   |           -^\n+   |           |\n+   |           help: replace equals symbol with a colon: `:`\n+\n+error: aborting due to 2 previous errors\n+"}]}