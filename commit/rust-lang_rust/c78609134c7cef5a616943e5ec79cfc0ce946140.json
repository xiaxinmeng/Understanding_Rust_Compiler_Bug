{"sha": "c78609134c7cef5a616943e5ec79cfc0ce946140", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ODYwOTEzNGM3Y2VmNWE2MTY5NDNlNWVjNzljZmMwY2U5NDYxNDA=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2016-01-15T21:44:53Z"}, "committer": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2016-01-21T21:46:50Z"}, "message": "[MIR] use mir::repr::Constant in ExprKind::Repeat, close #29789", "tree": {"sha": "6f4fec5cf685ef9d15528f3ac25c70d4fff31e5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f4fec5cf685ef9d15528f3ac25c70d4fff31e5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c78609134c7cef5a616943e5ec79cfc0ce946140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c78609134c7cef5a616943e5ec79cfc0ce946140", "html_url": "https://github.com/rust-lang/rust/commit/c78609134c7cef5a616943e5ec79cfc0ce946140", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c78609134c7cef5a616943e5ec79cfc0ce946140/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ae76b363c1c109b1e2ab363f92ef9db80b18075", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae76b363c1c109b1e2ab363f92ef9db80b18075", "html_url": "https://github.com/rust-lang/rust/commit/9ae76b363c1c109b1e2ab363f92ef9db80b18075"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "c389e8e7330917f7d88dba8fce39998b93d1e2ac", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c78609134c7cef5a616943e5ec79cfc0ce946140/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78609134c7cef5a616943e5ec79cfc0ce946140/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=c78609134c7cef5a616943e5ec79cfc0ce946140", "patch": "@@ -44,7 +44,6 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n             }\n             ExprKind::Repeat { value, count } => {\n                 let value_operand = unpack!(block = this.as_operand(block, value));\n-                let count = this.as_constant(count);\n                 block.and(Rvalue::Repeat(value_operand, count))\n             }\n             ExprKind::Borrow { region, borrow_kind, arg } => {"}, {"sha": "121b9c70ec35d4b917378b7321ccac327c91f75a", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c78609134c7cef5a616943e5ec79cfc0ce946140/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78609134c7cef5a616943e5ec79cfc0ce946140/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=c78609134c7cef5a616943e5ec79cfc0ce946140", "patch": "@@ -325,14 +325,11 @@ impl<'tcx> Mirror<'tcx> for &'tcx hir::Expr {\n \n             hir::ExprRepeat(ref v, ref c) => ExprKind::Repeat {\n                 value: v.to_ref(),\n-                count: Expr {\n+                count: Constant {\n                     ty: cx.tcx.expr_ty(c),\n-                    temp_lifetime: None,\n                     span: c.span,\n-                    kind: ExprKind::Literal {\n-                        literal: cx.const_eval_literal(c)\n-                    }\n-                }.to_ref()\n+                    literal: cx.const_eval_literal(c)\n+                }\n             },\n             hir::ExprRet(ref v) =>\n                 ExprKind::Return { value: v.to_ref() },"}, {"sha": "0c673b4a644e68b47d7ab04ffc82d5a131e10c45", "filename": "src/librustc_mir/hair/mod.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c78609134c7cef5a616943e5ec79cfc0ce946140/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78609134c7cef5a616943e5ec79cfc0ce946140/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fmod.rs?ref=c78609134c7cef5a616943e5ec79cfc0ce946140", "patch": "@@ -14,7 +14,7 @@\n //! unit-tested and separated from the Rust source and compiler data\n //! structures.\n \n-use rustc::mir::repr::{BinOp, BorrowKind, Field, Literal, Mutability, UnOp, ItemKind};\n+use rustc::mir::repr::{Constant, BinOp, BorrowKind, Field, Literal, Mutability, UnOp, ItemKind};\n use rustc::middle::const_eval::ConstVal;\n use rustc::middle::def_id::DefId;\n use rustc::middle::region::CodeExtent;\n@@ -213,10 +213,7 @@ pub enum ExprKind<'tcx> {\n     },\n     Repeat {\n         value: ExprRef<'tcx>,\n-        // FIXME(#29789): Add a separate hair::Constant<'tcx> so this could be more explicit about\n-        // its contained data. Currently this should only contain expression of ExprKind::Literal\n-        // kind.\n-        count: ExprRef<'tcx>,\n+        count: Constant<'tcx>,\n     },\n     Vec {\n         fields: Vec<ExprRef<'tcx>>,\n@@ -341,7 +338,6 @@ pub struct FieldPattern<'tcx> {\n     pub field: Field,\n     pub pattern: Pattern<'tcx>,\n }\n-\n ///////////////////////////////////////////////////////////////////////////\n // The Mirror trait\n "}]}