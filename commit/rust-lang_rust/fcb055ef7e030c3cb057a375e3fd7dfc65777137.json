{"sha": "fcb055ef7e030c3cb057a375e3fd7dfc65777137", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjYjA1NWVmN2UwMzBjM2NiMDU3YTM3NWUzZmQ3ZGZjNjU3NzcxMzc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-08-18T00:30:29Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-08-18T00:31:03Z"}, "message": "forgotten tests for #3217, #2977, #3067", "tree": {"sha": "b2a92bc94ee41a6331243bd045f85edb8a7185be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2a92bc94ee41a6331243bd045f85edb8a7185be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcb055ef7e030c3cb057a375e3fd7dfc65777137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcb055ef7e030c3cb057a375e3fd7dfc65777137", "html_url": "https://github.com/rust-lang/rust/commit/fcb055ef7e030c3cb057a375e3fd7dfc65777137", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcb055ef7e030c3cb057a375e3fd7dfc65777137/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b1d83ca6494d10cb1ffaf50032e0a2d833ad635", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1d83ca6494d10cb1ffaf50032e0a2d833ad635", "html_url": "https://github.com/rust-lang/rust/commit/4b1d83ca6494d10cb1ffaf50032e0a2d833ad635"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "6dfe23c1995a97ca441afbf7d9aa34ee9de1e9a3", "filename": "src/test/compile-fail/borrowck-borrowed-uniq-rvalue-2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fcb055ef7e030c3cb057a375e3fd7dfc65777137/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcb055ef7e030c3cb057a375e3fd7dfc65777137/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs?ref=fcb055ef7e030c3cb057a375e3fd7dfc65777137", "patch": "@@ -0,0 +1,9 @@\n+struct defer {\n+    x: &[&str];\n+    new(x: &[&str]) { self.x = x; }\n+    drop { #error[\"%?\", self.x]; }\n+}\n+\n+fn main() {\n+    let _x = defer(~[\"Goodbye\", \"world!\"]); //~ ERROR illegal borrow\n+}"}, {"sha": "59b8be67ae759620e6b67900b36192b21307b584", "filename": "src/test/compile-fail/borrowck-borrowed-uniq-rvalue.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fcb055ef7e030c3cb057a375e3fd7dfc65777137/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcb055ef7e030c3cb057a375e3fd7dfc65777137/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs?ref=fcb055ef7e030c3cb057a375e3fd7dfc65777137", "patch": "@@ -0,0 +1,13 @@\n+//buggy.rs\n+use std;\n+import std::map::hashmap;\n+import std::map;\n+\n+fn main() {\n+    let buggy_map :hashmap<uint, &uint> = hashmap::<uint, &uint>(uint::hash, uint::eq);\n+    buggy_map.insert(42, ~1); //~ ERROR illegal borrow\n+    \n+    // but it is ok if we use a temporary\n+    let tmp = ~2;\n+    buggy_map.insert(43, tmp);\n+}"}, {"sha": "654801403de3e267d1caac5ae48185c3c577fe25", "filename": "src/test/compile-fail/borrowck-ref-into-rvalue.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fcb055ef7e030c3cb057a375e3fd7dfc65777137/src%2Ftest%2Fcompile-fail%2Fborrowck-ref-into-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcb055ef7e030c3cb057a375e3fd7dfc65777137/src%2Ftest%2Fcompile-fail%2Fborrowck-ref-into-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-ref-into-rvalue.rs?ref=fcb055ef7e030c3cb057a375e3fd7dfc65777137", "patch": "@@ -0,0 +1,11 @@\n+fn main() {\n+    let msg;\n+    match some(~\"Hello\") { //~ ERROR illegal borrow\n+        some(ref m) => {\n+            msg = m;\n+        },  \n+        none => { fail }\n+    }   \n+    io::println(*msg);\n+}\n+"}]}