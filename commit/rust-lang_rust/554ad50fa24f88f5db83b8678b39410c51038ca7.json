{"sha": "554ad50fa24f88f5db83b8678b39410c51038ca7", "node_id": "C_kwDOAAsO6NoAKDU1NGFkNTBmYTI0Zjg4ZjVkYjgzYjg2NzhiMzk0MTBjNTEwMzhjYTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-22T23:28:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-22T23:28:53Z"}, "message": "Rollup merge of #92117 - solid-rs:fix-kmc-solid-read-buf, r=yaahc\n\nkmc-solid: Add `std::sys::solid::fs::File::read_buf`\n\nThis PR adds `std::sys::solid::fs::File::read_buf` to catch up with the changes introduced by #81156 and fix the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets..", "tree": {"sha": "9cd9f48f99fbaaf212d3f077fe7ab1bd4d587524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd9f48f99fbaaf212d3f077fe7ab1bd4d587524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554ad50fa24f88f5db83b8678b39410c51038ca7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhw7S2CRBK7hj4Ov3rIwAAyuIIADybJfk88bG5Yx8OpgfzTTLP\nyM1qckuSKRjhoCxPw3T0X+AlkKRVdHABeUUtb6AzvqeHiGyEsakrWFZ4oV9caIHM\n25O1GRh7mPnOchGbffQZQRncOKYBydLy1vDnlPbPrjiqxhcpEIDkgBIxSWXfrdgG\nO20/pNL9WbR9W7qiNUV9F3a4f2/vaBpjMSamxs6BHFW08fb773+lfbO5QJ0KIyAx\nRmuMiMLWGwr/iNGvocN7TKfsXwdRZ6g5Xgop71A2+oSYa3b76nVXk2gkOQHTjWl+\njahBkJ3wbYJ2uUkOo4NGRTuS2RYb6F+cI4J5BOWZBUrqRfjByvhUjp6uXmdbbvw=\n=Q7+M\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cd9f48f99fbaaf212d3f077fe7ab1bd4d587524\nparent 9f68b6e01e9c025e31634176e391a34be6095131\nparent 874514c7b4f58256eb1c9fe4c9903cdb9e09cada\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1640215733 +0100\ncommitter GitHub <noreply@github.com> 1640215733 +0100\n\nRollup merge of #92117 - solid-rs:fix-kmc-solid-read-buf, r=yaahc\n\nkmc-solid: Add `std::sys::solid::fs::File::read_buf`\n\nThis PR adds `std::sys::solid::fs::File::read_buf` to catch up with the changes introduced by #81156 and fix the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets..\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554ad50fa24f88f5db83b8678b39410c51038ca7", "html_url": "https://github.com/rust-lang/rust/commit/554ad50fa24f88f5db83b8678b39410c51038ca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554ad50fa24f88f5db83b8678b39410c51038ca7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f68b6e01e9c025e31634176e391a34be6095131", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f68b6e01e9c025e31634176e391a34be6095131", "html_url": "https://github.com/rust-lang/rust/commit/9f68b6e01e9c025e31634176e391a34be6095131"}, {"sha": "874514c7b4f58256eb1c9fe4c9903cdb9e09cada", "url": "https://api.github.com/repos/rust-lang/rust/commits/874514c7b4f58256eb1c9fe4c9903cdb9e09cada", "html_url": "https://github.com/rust-lang/rust/commit/874514c7b4f58256eb1c9fe4c9903cdb9e09cada"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "8a0eeff0c4d75f3e56d1078fbf9dece5197ee409", "filename": "library/std/src/sys/solid/fs.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/554ad50fa24f88f5db83b8678b39410c51038ca7/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554ad50fa24f88f5db83b8678b39410c51038ca7/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs?ref=554ad50fa24f88f5db83b8678b39410c51038ca7", "patch": "@@ -2,7 +2,7 @@ use super::{abi, error};\n use crate::{\n     ffi::{CStr, CString, OsStr, OsString},\n     fmt,\n-    io::{self, IoSlice, IoSliceMut, SeekFrom},\n+    io::{self, IoSlice, IoSliceMut, ReadBuf, SeekFrom},\n     mem::MaybeUninit,\n     os::raw::{c_int, c_short},\n     os::solid::ffi::OsStrExt,\n@@ -339,6 +339,32 @@ impl File {\n         }\n     }\n \n+    pub fn read_buf(&self, buf: &mut ReadBuf<'_>) -> io::Result<()> {\n+        unsafe {\n+            let len = buf.remaining();\n+            let mut out_num_bytes = MaybeUninit::uninit();\n+            error::SolidError::err_if_negative(abi::SOLID_FS_Read(\n+                self.fd.raw(),\n+                buf.unfilled_mut().as_mut_ptr() as *mut u8,\n+                len,\n+                out_num_bytes.as_mut_ptr(),\n+            ))\n+            .map_err(|e| e.as_io_error())?;\n+\n+            // Safety: `out_num_bytes` is filled by the successful call to\n+            // `SOLID_FS_Read`\n+            let num_bytes_read = out_num_bytes.assume_init();\n+\n+            // Safety: `num_bytes_read` bytes were written to the unfilled\n+            // portion of the buffer\n+            buf.assume_init(num_bytes_read);\n+\n+            buf.add_filled(num_bytes_read);\n+\n+            Ok(())\n+        }\n+    }\n+\n     pub fn read_vectored(&self, bufs: &mut [IoSliceMut<'_>]) -> io::Result<usize> {\n         crate::io::default_read_vectored(|buf| self.read(buf), bufs)\n     }"}]}