{"sha": "e37f468b218f11096173538774c77c483006efdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzN2Y0NjhiMjE4ZjExMDk2MTczNTM4Nzc0Yzc3YzQ4MzAwNmVmZGQ=", "commit": {"author": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2018-12-23T22:25:15Z"}, "committer": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2018-12-23T22:25:15Z"}, "message": "Change \\r detection much simpler.", "tree": {"sha": "e70f2dbdf0dfab40619d246ffb46de5c8f4354fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e70f2dbdf0dfab40619d246ffb46de5c8f4354fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37f468b218f11096173538774c77c483006efdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37f468b218f11096173538774c77c483006efdd", "html_url": "https://github.com/rust-lang/rust/commit/e37f468b218f11096173538774c77c483006efdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37f468b218f11096173538774c77c483006efdd/comments", "author": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a316e3ac7d48e01c6eb6987b74e2c0e040bf206", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a316e3ac7d48e01c6eb6987b74e2c0e040bf206", "html_url": "https://github.com/rust-lang/rust/commit/6a316e3ac7d48e01c6eb6987b74e2c0e040bf206"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "635ee9a85f296a35bc71ae8aa2d2898ad185708c", "filename": "src/comment.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e37f468b218f11096173538774c77c483006efdd/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f468b218f11096173538774c77c483006efdd/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=e37f468b218f11096173538774c77c483006efdd", "patch": "@@ -1304,13 +1304,7 @@ impl<'a> Iterator for LineClasses<'a> {\n             None => FullCodeCharKind::Normal,\n         };\n \n-        while let Some((kind, mut c)) = self.base.next() {\n-            // If \\r\\n newline appears, consume one more character.\n-            // Then do the same process with the single \\n case.\n-            if c == '\\r' && self.base.peek().map_or(false, |(_, c2)| *c2 == '\\n') {\n-                self.base.next();\n-                c = '\\n';\n-            }\n+        while let Some((kind, c)) = self.base.next() {\n             if c == '\\n' {\n                 self.kind = match (start_class, kind) {\n                     (FullCodeCharKind::Normal, FullCodeCharKind::InString) => {\n@@ -1327,6 +1321,11 @@ impl<'a> Iterator for LineClasses<'a> {\n             }\n         }\n \n+        // Workaround for CRLF newline.\n+        if line.ends_with('\\r') {\n+            line.pop();\n+        }\n+\n         Some((self.kind, line))\n     }\n }"}]}