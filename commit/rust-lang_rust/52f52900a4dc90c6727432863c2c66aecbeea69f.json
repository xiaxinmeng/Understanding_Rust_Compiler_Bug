{"sha": "52f52900a4dc90c6727432863c2c66aecbeea69f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZjUyOTAwYTRkYzkwYzY3Mjc0MzI4NjNjMmM2NmFlY2JlZWE2OWY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-10-24T05:52:01Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-10-24T05:52:01Z"}, "message": "Don't emit try_err lint in external macros", "tree": {"sha": "8e33e11408e4805de7a6b31ce916dfebf7166d0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e33e11408e4805de7a6b31ce916dfebf7166d0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52f52900a4dc90c6727432863c2c66aecbeea69f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl2xPHAQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5r4YD/4mH/R0qpRqFFmaRh8W2ovbhG9jpfLmSOmc\nddCJ1YekWjfTWLA/JYGigo9XEIJwocewhUCjj8Gt8TexPdKfC40TEH/l4AO1Lq+z\nZPmeqmfRjEvBnLD/+Krx8VV7gUYtpAj7gYy3IH5b6ZhqC6Ovux1JnXhuLL2R2gMC\ngiA54C3Zr90Dt5uYptBJqa4bhVP3GdqAgFYHBsWlyUMyZ6frcgGJ2xFgZ10kdUat\nfNevkprWwEvEC6cjDwt3M7Wu7NRtWgRnuqF3T+GGfzZSU9QLi9s5IMDpAaiu01mH\nopVM2VMOaFv4PizbyQrzxdXj8cMeDYZ2wDswvgP37rWl3HQfUgxoBkTwkFIfNJ2y\nLJgFarHcIa3+DKdJYh6zetFmMPEMAcFs22dEEX9NCdT4hs/Rflt1I3khHLBwNEfz\nVFtJxjadURDbDl3bEG24P65s9nRBpdXwk8HPEXeRRPZNoFaaPi3zATVTsGz1WRkG\nzNtC7O6YWmQcRLNwlgc07CSmuutbrX36eOrApjAbLjjgp0hEMmBzz8VLzvneL+6s\nosALpYw4lkktBcMpCTCO8z0w5ksvoiJ+TrvSpQaIo8CgPNOtVI2n26VPIMtBoHOq\nPdGB+ipE6rXun5DKnp2wZUyzCCd5AitWgcKGSehyCmik2oWN4qqmvXOFJwcLluDu\n2WTsDHRESQ==\n=sEPI\n-----END PGP SIGNATURE-----", "payload": "tree 8e33e11408e4805de7a6b31ce916dfebf7166d0a\nparent 850dfdae60cd8b28a40b099f8e390534205b9ede\nauthor Philipp Hansch <dev@phansch.net> 1571896321 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1571896321 +0200\n\nDon't emit try_err lint in external macros\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52f52900a4dc90c6727432863c2c66aecbeea69f", "html_url": "https://github.com/rust-lang/rust/commit/52f52900a4dc90c6727432863c2c66aecbeea69f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52f52900a4dc90c6727432863c2c66aecbeea69f/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "850dfdae60cd8b28a40b099f8e390534205b9ede", "url": "https://api.github.com/repos/rust-lang/rust/commits/850dfdae60cd8b28a40b099f8e390534205b9ede", "html_url": "https://github.com/rust-lang/rust/commit/850dfdae60cd8b28a40b099f8e390534205b9ede"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "0985f966e8eb8876650193caae2df06363e1bd3d", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/52f52900a4dc90c6727432863c2c66aecbeea69f/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52f52900a4dc90c6727432863c2c66aecbeea69f/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=52f52900a4dc90c6727432863c2c66aecbeea69f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{match_qpath, paths, snippet, snippet_with_macro_callsite, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::hir::*;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::Ty;\n use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_errors::Applicability;\n@@ -54,6 +54,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TryErr {\n         //         val,\n         // };\n         if_chain! {\n+            if !in_external_macro(cx.tcx.sess, expr.span);\n             if let ExprKind::Match(ref match_arg, _, MatchSource::TryDesugar) = expr.kind;\n             if let ExprKind::Call(ref match_fun, ref try_args) = match_arg.kind;\n             if let ExprKind::Path(ref match_fun_path) = match_fun.kind;"}, {"sha": "002b05b588d78e46fb270bb0c6d8ad3200b755d0", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=52f52900a4dc90c6727432863c2c66aecbeea69f", "patch": "@@ -16,3 +16,18 @@ macro_rules! must_use_unit {\n         fn foo() {}\n     };\n }\n+\n+#[macro_export]\n+macro_rules! try_err {\n+    () => {\n+        pub fn try_err_fn() -> Result<i32, i32> {\n+            let err: i32 = 1;\n+            // To avoid warnings during rustfix\n+            if true {\n+                Err(err)?\n+            } else {\n+                Ok(2)\n+            }\n+        }\n+    };\n+}"}, {"sha": "29d9139d3e346e87e13cb62dbe96cfb9a08c9ebd", "filename": "tests/ui/try_err.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Ftry_err.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Ftry_err.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.fixed?ref=52f52900a4dc90c6727432863c2c66aecbeea69f", "patch": "@@ -1,7 +1,11 @@\n // run-rustfix\n+// aux-build:macro_rules.rs\n \n #![deny(clippy::try_err)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n // Tests that a simple case works\n // Should flag `Err(err)?`\n pub fn basic_test() -> Result<i32, i32> {\n@@ -77,6 +81,9 @@ fn main() {\n     negative_test().unwrap();\n     closure_matches_test().unwrap();\n     closure_into_test().unwrap();\n+\n+    // We don't want to lint in external macros\n+    try_err!();\n }\n \n macro_rules! bar {"}, {"sha": "5e85d091a2ae73359046f06a82d7e3ce744d9672", "filename": "tests/ui/try_err.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.rs?ref=52f52900a4dc90c6727432863c2c66aecbeea69f", "patch": "@@ -1,7 +1,11 @@\n // run-rustfix\n+// aux-build:macro_rules.rs\n \n #![deny(clippy::try_err)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n // Tests that a simple case works\n // Should flag `Err(err)?`\n pub fn basic_test() -> Result<i32, i32> {\n@@ -77,6 +81,9 @@ fn main() {\n     negative_test().unwrap();\n     closure_matches_test().unwrap();\n     closure_into_test().unwrap();\n+\n+    // We don't want to lint in external macros\n+    try_err!();\n }\n \n macro_rules! bar {"}, {"sha": "dbd910f56241b5f9bc245eb4bdf76db03e4b21c4", "filename": "tests/ui/try_err.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Ftry_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52f52900a4dc90c6727432863c2c66aecbeea69f/tests%2Fui%2Ftry_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.stderr?ref=52f52900a4dc90c6727432863c2c66aecbeea69f", "patch": "@@ -1,35 +1,35 @@\n error: returning an `Err(_)` with the `?` operator\n-  --> $DIR/try_err.rs:11:9\n+  --> $DIR/try_err.rs:15:9\n    |\n LL |         Err(err)?;\n    |         ^^^^^^^^^ help: try this: `return Err(err)`\n    |\n note: lint level defined here\n-  --> $DIR/try_err.rs:3:9\n+  --> $DIR/try_err.rs:4:9\n    |\n LL | #![deny(clippy::try_err)]\n    |         ^^^^^^^^^^^^^^^\n \n error: returning an `Err(_)` with the `?` operator\n-  --> $DIR/try_err.rs:21:9\n+  --> $DIR/try_err.rs:25:9\n    |\n LL |         Err(err)?;\n    |         ^^^^^^^^^ help: try this: `return Err(err.into())`\n \n error: returning an `Err(_)` with the `?` operator\n-  --> $DIR/try_err.rs:41:17\n+  --> $DIR/try_err.rs:45:17\n    |\n LL |                 Err(err)?;\n    |                 ^^^^^^^^^ help: try this: `return Err(err)`\n \n error: returning an `Err(_)` with the `?` operator\n-  --> $DIR/try_err.rs:60:17\n+  --> $DIR/try_err.rs:64:17\n    |\n LL |                 Err(err)?;\n    |                 ^^^^^^^^^ help: try this: `return Err(err.into())`\n \n error: returning an `Err(_)` with the `?` operator\n-  --> $DIR/try_err.rs:96:9\n+  --> $DIR/try_err.rs:103:9\n    |\n LL |         Err(foo!())?;\n    |         ^^^^^^^^^^^^ help: try this: `return Err(foo!())`"}]}