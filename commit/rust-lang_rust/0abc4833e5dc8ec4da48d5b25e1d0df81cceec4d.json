{"sha": "0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYmM0ODMzZTVkYzhlYzRkYTQ4ZDViMjVlMWQwZGY4MWNjZWVjNGQ=", "commit": {"author": {"name": "Christoph Walcher", "email": "christoph-wa@gmx.de", "date": "2020-08-06T00:42:40Z"}, "committer": {"name": "Christoph Walcher", "email": "christoph-wa@gmx.de", "date": "2020-08-06T00:56:07Z"}, "message": "Lint .min(x).max(y) with x < y\n\nFixes #5854", "tree": {"sha": "9c2bcc6ac2fe914f4b90816e6fe7df319f9d245c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c2bcc6ac2fe914f4b90816e6fe7df319f9d245c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE2xeoiquC04hUiBqUoZMWSk0F7kQFAl8rVScACgkQoZMWSk0F\n7kTn/wgAovA7kOSM1B34IPSk4xZPRIoCtGTWVy5x3fqzx2ZV9vRqGuK66Tf6cZv9\nGPePtQk7ko49yLmQ/bOKVQxmUYEQ4dYVOBm/EC0tWC1Uk3gnX7arhuUdhJzrgMuO\nySIl76i/Oekho6HSmHDOaAxmjOXs1zfvY/GyfS0teurlqhe1mlJHL5Vkvo4PA5Qi\n7qhWWbkfzdNHiZDKON7TMWXEjJWBL7wk3OR8C7SRC74ETIR0v+150JHrgNbfAJ7p\nahcsVBCMKR7D4WAZWWMJwbx6yaGgZ1Mqo78LLtouHwu4kkztNEvW7sxj8vfNrpcu\nBP9/ZzrdD92N8UJxKiDbgUYECGT/yw==\n=iTRx\n-----END PGP SIGNATURE-----", "payload": "tree 9c2bcc6ac2fe914f4b90816e6fe7df319f9d245c\nparent 2d4c3379d355c436342113a302421faf3990fb29\nauthor Christoph Walcher <christoph-wa@gmx.de> 1596674560 +0200\ncommitter Christoph Walcher <christoph-wa@gmx.de> 1596675367 +0200\n\nLint .min(x).max(y) with x < y\n\nFixes #5854\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "html_url": "https://github.com/rust-lang/rust/commit/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/comments", "author": {"login": "wiomoc", "id": 10638299, "node_id": "MDQ6VXNlcjEwNjM4Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/10638299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiomoc", "html_url": "https://github.com/wiomoc", "followers_url": "https://api.github.com/users/wiomoc/followers", "following_url": "https://api.github.com/users/wiomoc/following{/other_user}", "gists_url": "https://api.github.com/users/wiomoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiomoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiomoc/subscriptions", "organizations_url": "https://api.github.com/users/wiomoc/orgs", "repos_url": "https://api.github.com/users/wiomoc/repos", "events_url": "https://api.github.com/users/wiomoc/events{/privacy}", "received_events_url": "https://api.github.com/users/wiomoc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wiomoc", "id": 10638299, "node_id": "MDQ6VXNlcjEwNjM4Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/10638299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiomoc", "html_url": "https://github.com/wiomoc", "followers_url": "https://api.github.com/users/wiomoc/followers", "following_url": "https://api.github.com/users/wiomoc/following{/other_user}", "gists_url": "https://api.github.com/users/wiomoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiomoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiomoc/subscriptions", "organizations_url": "https://api.github.com/users/wiomoc/orgs", "repos_url": "https://api.github.com/users/wiomoc/repos", "events_url": "https://api.github.com/users/wiomoc/events{/privacy}", "received_events_url": "https://api.github.com/users/wiomoc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4c3379d355c436342113a302421faf3990fb29", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4c3379d355c436342113a302421faf3990fb29", "html_url": "https://github.com/rust-lang/rust/commit/2d4c3379d355c436342113a302421faf3990fb29"}], "stats": {"total": 98, "additions": 78, "deletions": 20}, "files": [{"sha": "1f798fd1120913ef87c979dffdd974e0d927300f", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 33, "deletions": 19, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "patch": "@@ -18,6 +18,10 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// min(0, max(100, x))\n     /// ```\n+    /// or\n+    /// ```ignore\n+    /// x.max(100).min(0)\n+    /// ```\n     /// It will always be equal to `0`. Probably the author meant to clamp the value\n     /// between 0 and 100, but has erroneously swapped `min` and `max`.\n     pub MIN_MAX,\n@@ -60,25 +64,35 @@ enum MinMax {\n }\n \n fn min_max<'a>(cx: &LateContext<'_>, expr: &'a Expr<'a>) -> Option<(MinMax, Constant, &'a Expr<'a>)> {\n-    if let ExprKind::Call(ref path, ref args) = expr.kind {\n-        if let ExprKind::Path(ref qpath) = path.kind {\n-            cx.typeck_results()\n-                .qpath_res(qpath, path.hir_id)\n-                .opt_def_id()\n-                .and_then(|def_id| {\n-                    if match_def_path(cx, def_id, &paths::CMP_MIN) {\n-                        fetch_const(cx, args, MinMax::Min)\n-                    } else if match_def_path(cx, def_id, &paths::CMP_MAX) {\n-                        fetch_const(cx, args, MinMax::Max)\n-                    } else {\n-                        None\n-                    }\n-                })\n-        } else {\n-            None\n-        }\n-    } else {\n-        None\n+    match expr.kind {\n+        ExprKind::Call(ref path, ref args) => {\n+            if let ExprKind::Path(ref qpath) = path.kind {\n+                cx.typeck_results()\n+                    .qpath_res(qpath, path.hir_id)\n+                    .opt_def_id()\n+                    .and_then(|def_id| {\n+                        if match_def_path(cx, def_id, &paths::CMP_MIN) {\n+                            fetch_const(cx, args, MinMax::Min)\n+                        } else if match_def_path(cx, def_id, &paths::CMP_MAX) {\n+                            fetch_const(cx, args, MinMax::Max)\n+                        } else {\n+                            None\n+                        }\n+                    })\n+            } else {\n+                None\n+            }\n+        },\n+        ExprKind::MethodCall(ref path, _, ref args, _) => {\n+            if path.ident.as_str() == sym!(max).as_str() {\n+                fetch_const(cx, args, MinMax::Max)\n+            } else if path.ident.as_str() == sym!(min).as_str() {\n+                fetch_const(cx, args, MinMax::Min)\n+            } else {\n+                None\n+            }\n+        },\n+        _ => None,\n     }\n }\n "}, {"sha": "90ec5676493a1d3ace7ed036ef635d56625999c7", "filename": "tests/ui/min_max.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/tests%2Fui%2Fmin_max.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/tests%2Fui%2Fmin_max.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.rs?ref=0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "patch": "@@ -30,4 +30,18 @@ fn main() {\n     max(min(s, \"Apple\"), \"Zoo\");\n \n     max(\"Apple\", min(s, \"Zoo\")); // ok\n+\n+    x.min(1).max(3);\n+    x.max(3).min(1);\n+\n+    x.max(1).min(3); // ok\n+    x.min(3).max(1); // ok\n+\n+    max(x.min(1), 3);\n+    min(x.max(1), 3); // ok\n+\n+    s.max(\"Zoo\").min(\"Apple\");\n+    s.min(\"Apple\").max(\"Zoo\");\n+\n+    s.min(\"Zoo\").max(\"Apple\"); // ok\n }"}, {"sha": "653946dc025f82b5da472e4aed86abce750d1152", "filename": "tests/ui/min_max.stderr", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/tests%2Fui%2Fmin_max.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d/tests%2Fui%2Fmin_max.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.stderr?ref=0abc4833e5dc8ec4da48d5b25e1d0df81cceec4d", "patch": "@@ -42,5 +42,35 @@ error: this `min`/`max` combination leads to constant result\n LL |     max(min(s, \"Apple\"), \"Zoo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:34:5\n+   |\n+LL |     x.min(1).max(3);\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:35:5\n+   |\n+LL |     x.max(3).min(1);\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:40:5\n+   |\n+LL |     max(x.min(1), 3);\n+   |     ^^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:43:5\n+   |\n+LL |     s.max(\"Zoo\").min(\"Apple\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:44:5\n+   |\n+LL |     s.min(\"Apple\").max(\"Zoo\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n "}]}