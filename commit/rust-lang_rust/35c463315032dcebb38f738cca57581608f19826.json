{"sha": "35c463315032dcebb38f738cca57581608f19826", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YzQ2MzMxNTAzMmRjZWJiMzhmNzM4Y2NhNTc1ODE2MDhmMTk4MjY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-02T13:24:51Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-02T13:24:51Z"}, "message": "Make `vis` matcher optional and fix typo", "tree": {"sha": "6a48f9cbdf7ecd94488d1fd1705b95c96515272f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a48f9cbdf7ecd94488d1fd1705b95c96515272f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c463315032dcebb38f738cca57581608f19826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c463315032dcebb38f738cca57581608f19826", "html_url": "https://github.com/rust-lang/rust/commit/35c463315032dcebb38f738cca57581608f19826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c463315032dcebb38f738cca57581608f19826/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0e7022afe17f35fd0f6960a279e375b19061919", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0e7022afe17f35fd0f6960a279e375b19061919", "html_url": "https://github.com/rust-lang/rust/commit/b0e7022afe17f35fd0f6960a279e375b19061919"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "1b579f319b764a58b6e33fcd05df8904b4b07298", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/35c463315032dcebb38f738cca57581608f19826/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c463315032dcebb38f738cca57581608f19826/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=35c463315032dcebb38f738cca57581608f19826", "patch": "@@ -206,8 +206,24 @@ fn match_lhs(pattern: &crate::Subtree, input: &mut TtCursor) -> Result<Bindings,\n                             );\n                         }\n                         \"vis\" => {\n-                            let vis = input.eat_vis().ok_or(ExpandError::UnexpectedToken)?.clone();\n-                            res.inner.insert(text.clone(), Binding::Simple(vis.into()));\n+                            // `vis` is optional\n+                            if let Some(vis) = input.try_eat_vis() {\n+                                let vis = vis.clone();\n+                                res.inner.insert(text.clone(), Binding::Simple(vis.into()));\n+                            } else {\n+                                // FIXME: Do we have a better way to represent an empty token ?\n+                                // Insert an empty subtree for empty token\n+                                res.inner.insert(\n+                                    text.clone(),\n+                                    Binding::Simple(\n+                                        tt::Subtree {\n+                                            delimiter: tt::Delimiter::None,\n+                                            token_trees: vec![],\n+                                        }\n+                                        .into(),\n+                                    ),\n+                                );\n+                            }\n                         }\n \n                         _ => return Err(ExpandError::UnexpectedToken),"}, {"sha": "3554dc110cc4030807b7408745ab8f3ed96bde09", "filename": "crates/ra_mbe/src/subtree_source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35c463315032dcebb38f738cca57581608f19826/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c463315032dcebb38f738cca57581608f19826/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs?ref=35c463315032dcebb38f738cca57581608f19826", "patch": "@@ -319,7 +319,7 @@ fn convert_ident(ident: &tt::Ident) -> TtToken {\n \n fn convert_punct(p: &tt::Punct) -> TtToken {\n     let kind = match p.char {\n-        // lexer may produce combpund tokens for these ones\n+        // lexer may produce compound tokens for these ones\n         '.' => DOT,\n         ':' => COLON,\n         '=' => EQ,"}, {"sha": "d85ab43e407cdbd6f54ba81516a5a5dfa390793b", "filename": "crates/ra_mbe/src/tt_cursor.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35c463315032dcebb38f738cca57581608f19826/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c463315032dcebb38f738cca57581608f19826/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs?ref=35c463315032dcebb38f738cca57581608f19826", "patch": "@@ -149,9 +149,16 @@ impl<'a> TtCursor<'a> {\n         self.eat_ident().cloned().map(|ident| tt::Leaf::from(ident).into())\n     }\n \n-    pub(crate) fn eat_vis(&mut self) -> Option<tt::TokenTree> {\n+    pub(crate) fn try_eat_vis(&mut self) -> Option<tt::TokenTree> {\n+        // `vis` matcher is optional\n+        let old_pos = self.pos;\n         let parser = Parser::new(&mut self.pos, self.subtree);\n-        parser.parse_vis()\n+\n+        let res = parser.parse_vis();\n+        if res.is_none() {\n+            self.pos = old_pos;\n+        }\n+        res\n     }\n \n     pub(crate) fn expect_char(&mut self, char: char) -> Result<(), ParseError> {"}]}