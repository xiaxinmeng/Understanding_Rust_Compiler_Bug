{"sha": "07e1043222a62443962b6691ff0131e57d73ce2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZTEwNDMyMjJhNjI0NDM5NjJiNjY5MWZmMDEzMWU1N2Q3M2NlMmQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-23T09:29:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-23T09:29:18Z"}, "message": "Rollup merge of #70286 - RalfJung:no-experiments, r=petrochenkov\n\nMiri error type: remove UbExperimental variant\n\nIn https://github.com/rust-lang/miri/pull/1250, I will move Miri away from that variant, and use a custom `MachineStop` exception instead.", "tree": {"sha": "b5717a9698a99ed92df9da39c5edd0e0a53ce697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5717a9698a99ed92df9da39c5edd0e0a53ce697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07e1043222a62443962b6691ff0131e57d73ce2d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeeIFuCRBK7hj4Ov3rIwAAdHIIAKQcdtSQH0SkMJa5u2kQ5S5s\nKIgD3V7jd7HlKW4beqYc0RdpQ6I7+Sl6I8utSlkxA3dTleryleCY2mG84LVcIXmA\nvOiVss3gb0Rz4XcvAJUN9MgcEfOaHnFr2RJnzUloQ2WSp4SB6t13esUYfzPsYUh7\n6NW/AtFHcLImC0zVJ83VNwTwPoAyuw8So//AVGJCF9Fg5PtVJWiB1PdUDZyQ2FG0\nMn5sMcb6joCr4oCiBF9oU/67n3XRuI3nQGVbx9hptAFPnVpWrjsQzlpq2IzVkWV2\nOqWK7wivFAM0o7G5eXqh4TiaOm9OPMdbs/fXnFZGXOwhCNHXhyo3v6pz0AHXx8o=\n=I2UO\n-----END PGP SIGNATURE-----\n", "payload": "tree b5717a9698a99ed92df9da39c5edd0e0a53ce697\nparent bb85308ce73a730a5f0f7014490cb9335f5096d2\nparent 29df39ba8cc8a3591cf5c9c098f37243b783ca3e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1584955758 +0100\ncommitter GitHub <noreply@github.com> 1584955758 +0100\n\nRollup merge of #70286 - RalfJung:no-experiments, r=petrochenkov\n\nMiri error type: remove UbExperimental variant\n\nIn https://github.com/rust-lang/miri/pull/1250, I will move Miri away from that variant, and use a custom `MachineStop` exception instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07e1043222a62443962b6691ff0131e57d73ce2d", "html_url": "https://github.com/rust-lang/rust/commit/07e1043222a62443962b6691ff0131e57d73ce2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07e1043222a62443962b6691ff0131e57d73ce2d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb85308ce73a730a5f0f7014490cb9335f5096d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb85308ce73a730a5f0f7014490cb9335f5096d2", "html_url": "https://github.com/rust-lang/rust/commit/bb85308ce73a730a5f0f7014490cb9335f5096d2"}, {"sha": "29df39ba8cc8a3591cf5c9c098f37243b783ca3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/29df39ba8cc8a3591cf5c9c098f37243b783ca3e", "html_url": "https://github.com/rust-lang/rust/commit/29df39ba8cc8a3591cf5c9c098f37243b783ca3e"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "f665881ae4c22390b5eb653e352cb0406f67192c", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/07e1043222a62443962b6691ff0131e57d73ce2d/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07e1043222a62443962b6691ff0131e57d73ce2d/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=07e1043222a62443962b6691ff0131e57d73ce2d", "patch": "@@ -319,8 +319,6 @@ impl fmt::Debug for InvalidProgramInfo<'_> {\n pub enum UndefinedBehaviorInfo {\n     /// Free-form case. Only for errors that are never caught!\n     Ub(String),\n-    /// Free-form case for experimental UB. Only for errors that are never caught!\n-    UbExperimental(String),\n     /// Unreachable code was executed.\n     Unreachable,\n     /// An enum discriminant was set to a value which was outside the range of valid values.\n@@ -381,7 +379,7 @@ impl fmt::Debug for UndefinedBehaviorInfo {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         use UndefinedBehaviorInfo::*;\n         match self {\n-            Ub(msg) | UbExperimental(msg) => write!(f, \"{}\", msg),\n+            Ub(msg) => write!(f, \"{}\", msg),\n             Unreachable => write!(f, \"entering unreachable code\"),\n             InvalidDiscriminant(val) => write!(f, \"encountering invalid enum discriminant {}\", val),\n             BoundsCheckFailed { ref len, ref index } => write!(\n@@ -563,8 +561,7 @@ impl InterpError<'_> {\n             InterpError::MachineStop(_)\n             | InterpError::Unsupported(UnsupportedOpInfo::Unsupported(_))\n             | InterpError::UndefinedBehavior(UndefinedBehaviorInfo::ValidationFailure(_))\n-            | InterpError::UndefinedBehavior(UndefinedBehaviorInfo::Ub(_))\n-            | InterpError::UndefinedBehavior(UndefinedBehaviorInfo::UbExperimental(_)) => true,\n+            | InterpError::UndefinedBehavior(UndefinedBehaviorInfo::Ub(_)) => true,\n             _ => false,\n         }\n     }"}]}