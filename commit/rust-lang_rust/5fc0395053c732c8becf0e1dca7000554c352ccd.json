{"sha": "5fc0395053c732c8becf0e1dca7000554c352ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYzAzOTUwNTNjNzMyYzhiZWNmMGUxZGNhNzAwMDU1NGMzNTJjY2Q=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-06T13:17:48Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-06T13:58:21Z"}, "message": "Resolve a couple of `unimplemented!()`s\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "a915012073c3dbd84ace0e7573bd95e3f44a3771", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a915012073c3dbd84ace0e7573bd95e3f44a3771"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fc0395053c732c8becf0e1dca7000554c352ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc0395053c732c8becf0e1dca7000554c352ccd", "html_url": "https://github.com/rust-lang/rust/commit/5fc0395053c732c8becf0e1dca7000554c352ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fc0395053c732c8becf0e1dca7000554c352ccd/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0454f0638f235dd7c8b4bb57ea5614e5e877746", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0454f0638f235dd7c8b4bb57ea5614e5e877746", "html_url": "https://github.com/rust-lang/rust/commit/c0454f0638f235dd7c8b4bb57ea5614e5e877746"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "413c1428ff954e13f09275edaec37d364fc03f0b", "filename": "src/librustc/infer/canonical/query_response.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5fc0395053c732c8becf0e1dca7000554c352ccd/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fc0395053c732c8becf0e1dca7000554c352ccd/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_response.rs?ref=5fc0395053c732c8becf0e1dca7000554c352ccd", "patch": "@@ -318,8 +318,9 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n                     obligations.extend(ok.into_obligations());\n                 }\n \n-                (UnpackedKind::Const(..), UnpackedKind::Const(..)) => {\n-                    unimplemented!() // FIXME(const_generics)\n+                (UnpackedKind::Const(v1), UnpackedKind::Const(v2)) => {\n+                    let ok = self.at(cause, param_env).eq(v1, v2)?;\n+                    obligations.extend(ok.into_obligations());\n                 }\n \n                 _ => {\n@@ -626,8 +627,9 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n                         obligations\n                             .extend(self.at(cause, param_env).eq(v1, v2)?.into_obligations());\n                     }\n-                    (UnpackedKind::Const(..), UnpackedKind::Const(..)) => {\n-                        unimplemented!() // FIXME(const_generics)\n+                    (UnpackedKind::Const(v1), UnpackedKind::Const(v2)) => {\n+                        let ok = self.at(cause, param_env).eq(v1, v2)?;\n+                        obligations.extend(ok.into_obligations());\n                     }\n                     _ => {\n                         bug!(\"kind mismatch, cannot unify {:?} and {:?}\", value1, value2,);"}]}