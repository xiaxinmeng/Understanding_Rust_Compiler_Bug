{"sha": "417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxN2FjMjkzOWE4N2I4NGM3MGY0YzhiM2MyYTM0M2MyNTNhNWM1ZDE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-09-06T22:09:24Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-09-06T23:07:17Z"}, "message": "Implement libc::nanosleep shim", "tree": {"sha": "e4e1db42bace43f7966e63d0a10cba1e44517cb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4e1db42bace43f7966e63d0a10cba1e44517cb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "html_url": "https://github.com/rust-lang/rust/commit/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d323e10324298a8fc7c268079c7999794525a7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d323e10324298a8fc7c268079c7999794525a7a", "html_url": "https://github.com/rust-lang/rust/commit/6d323e10324298a8fc7c268079c7999794525a7a"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "26c743b360e064844f11c8284780f99096333b81", "filename": "src/shims/posix/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/src%2Fshims%2Fposix%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/src%2Fshims%2Fposix%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fforeign_items.rs?ref=417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "patch": "@@ -382,6 +382,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let result = this.sched_yield()?;\n                 this.write_scalar(Scalar::from_i32(result), dest)?;\n             }\n+            \"nanosleep\" => {\n+                let &[req, rem] = check_arg_count(args)?;\n+                let result = this.nanosleep(req, rem)?;\n+                this.write_scalar(Scalar::from_i32(result), dest)?;\n+            }\n \n             // Miscellaneous\n             \"isatty\" => {"}, {"sha": "32c1ce888ed0e922e3d4eee683525e4c3b8a78ad", "filename": "src/shims/time.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "patch": "@@ -3,7 +3,8 @@ use std::convert::TryFrom;\n \n use crate::stacked_borrows::Tag;\n use crate::*;\n-use helpers::{immty_from_int_checked, immty_from_uint_checked};\n+use helpers::{immty_from_int_checked, immty_from_uint_checked, TimespecError};\n+use thread::Time;\n \n /// Returns the time elapsed between the provided time and the unix epoch as a `Duration`.\n pub fn system_time_to_duration<'tcx>(time: &SystemTime) -> InterpResult<'tcx, Duration> {\n@@ -177,4 +178,40 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.write_packed_immediates(info, &imms)?;\n         Ok(0) // KERN_SUCCESS\n     }\n+\n+    fn nanosleep(\n+        &mut self,\n+        req_op: OpTy<'tcx, Tag>,\n+        _rem: OpTy<'tcx, Tag>,\n+    ) -> InterpResult<'tcx, i32> {\n+        // Signal handlers are not supported, so rem will never be written to.\n+\n+        let this = self.eval_context_mut();\n+\n+        this.check_no_isolation(\"nanosleep\")?;\n+\n+        let duration = match this.read_timespec(req_op)? {\n+            Ok(duration) => duration,\n+            Err(TimespecError) => {\n+                let einval = this.eval_libc(\"EINVAL\")?;\n+                this.set_last_error(einval)?;\n+                return Ok(-1);\n+            }\n+        };\n+        let timeout_time = Time::RealTime(SystemTime::now().checked_add(duration).unwrap());\n+\n+        let active_thread = this.get_active_thread();\n+        this.block_thread(active_thread);\n+\n+        this.register_timeout_callback(\n+            active_thread,\n+            timeout_time,\n+            Box::new(move |ecx| {\n+                ecx.unblock_thread(active_thread);\n+                Ok(())\n+            }),\n+        );\n+\n+        Ok(0)\n+    }\n }"}, {"sha": "ae287234d177465fef09eef4fef7fe389d5451fc", "filename": "tests/run-pass/time.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/tests%2Frun-pass%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417ac2939a87b84c70f4c8b3c2a343c253a5c5d1/tests%2Frun-pass%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftime.rs?ref=417ac2939a87b84c70f4c8b3c2a343c253a5c5d1", "patch": "@@ -8,6 +8,14 @@ fn duration_sanity(diff: Duration) {\n     assert!(diff.as_millis() < 500);\n }\n \n+#[cfg(unix)]\n+fn test_sleep() {\n+    let before = Instant::now();\n+    std::thread::sleep(Duration::from_millis(100));\n+    let after = Instant::now();\n+    assert!((after - before).as_millis() >= 100);\n+}\n+\n fn main() {\n     // Check `SystemTime`.\n     let now1 = SystemTime::now();\n@@ -36,4 +44,7 @@ fn main() {\n     assert_eq!(now1 + diff, now2);\n     assert_eq!(now2 - diff, now1);\n     duration_sanity(diff);\n+\n+    #[cfg(unix)]\n+    test_sleep();\n }"}]}