{"sha": "eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "node_id": "C_kwDOAAsO6NoAKGViODZkYWExMzgzZDUzMzBhMThhYTRlNzgyNzBhNmNhNWI0ZWE0Njk", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-06-22T05:56:40Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-06-22T05:56:40Z"}, "message": "add \"was\" to pluralize macro and use it", "tree": {"sha": "060731bcaa468d2b593cc4828fa406ac0ae81151", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/060731bcaa468d2b593cc4828fa406ac0ae81151"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "html_url": "https://github.com/rust-lang/rust/commit/eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f847261478de5fa72d7e1d2ec3341e31a794fcaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f847261478de5fa72d7e1d2ec3341e31a794fcaf", "html_url": "https://github.com/rust-lang/rust/commit/f847261478de5fa72d7e1d2ec3341e31a794fcaf"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "1cd19c7eaab35c61cd6eb12b7ff6681ea916ccee", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "patch": "@@ -26,6 +26,9 @@ macro_rules! pluralize {\n     (\"is\", $x:expr) => {\n         if $x == 1 { \"is\" } else { \"are\" }\n     };\n+    (\"was\", $x:expr) => {\n+        if $x == 1 { \"was\" } else { \"were\" }\n+    };\n     (\"this\", $x:expr) => {\n         if $x == 1 { \"this\" } else { \"these\" }\n     };"}, {"sha": "c69de6434539ad4abd7045f2d2d4500a0e81059e", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "patch": "@@ -1839,25 +1839,28 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }\n             })\n             .partition(|field| field.2);\n-        let remaining_private_fields_len = remaining_private_fields.len();\n-        let names = match &remaining_private_fields\n-            .iter()\n-            .map(|(name, _, _)| name.to_string())\n-            .collect::<Vec<_>>()[..]\n-        {\n-            _ if remaining_private_fields_len > 6 => String::new(),\n-            [name] => format!(\"`{name}` \"),\n-            [names @ .., last] => {\n-                let names = names.iter().map(|name| format!(\"`{name}`\")).collect::<Vec<_>>();\n-                format!(\"{} and `{last}` \", names.join(\", \"))\n-            }\n-            [] => unreachable!(),\n-        };\n         err.span_labels(used_private_fields.iter().map(|(_, span, _)| *span), \"private field\");\n-        err.note(format!(\n-            \"... and other private field{s} {names}that were not provided\",\n-            s = pluralize!(remaining_private_fields_len),\n-        ));\n+        if !remaining_private_fields.is_empty() {\n+            let remaining_private_fields_len = remaining_private_fields.len();\n+            let names = match &remaining_private_fields\n+                .iter()\n+                .map(|(name, _, _)| name.to_string())\n+                .collect::<Vec<_>>()[..]\n+            {\n+                _ if remaining_private_fields_len > 6 => String::new(),\n+                [name] => format!(\"`{name}` \"),\n+                [names @ .., last] => {\n+                    let names = names.iter().map(|name| format!(\"`{name}`\")).collect::<Vec<_>>();\n+                    format!(\"{} and `{last}` \", names.join(\", \"))\n+                }\n+                [] => unreachable!(),\n+            };\n+            err.note(format!(\n+                \"... and other private field{s} {names}that {were} not provided\",\n+                s = pluralize!(remaining_private_fields_len),\n+                were = pluralize!(\"was\", remaining_private_fields_len),\n+            ));\n+        }\n         err.emit();\n     }\n "}, {"sha": "197ca8d5a7b25ca280caaacc10107564abef3adf", "filename": "src/test/ui/issues/issue-76077.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/src%2Ftest%2Fui%2Fissues%2Fissue-76077.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/src%2Ftest%2Fui%2Fissues%2Fissue-76077.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-76077.stderr?ref=eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "patch": "@@ -4,7 +4,7 @@ error: cannot construct `Foo` with struct literal syntax due to private fields\n LL |     foo::Foo {};\n    |     ^^^^^^^^\n    |\n-   = note: ... and other private field `you_cant_use_this_field` that were not provided\n+   = note: ... and other private field `you_cant_use_this_field` that was not provided\n \n error: aborting due to previous error\n "}, {"sha": "21ba760ad0bcc3e438ba4cf7ac0e13dc1a2ae664", "filename": "src/test/ui/privacy/issue-79593.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/src%2Ftest%2Fui%2Fprivacy%2Fissue-79593.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/src%2Ftest%2Fui%2Fprivacy%2Fissue-79593.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fissue-79593.stderr?ref=eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "patch": "@@ -16,7 +16,7 @@ error: cannot construct `Pub` with struct literal syntax due to private fields\n LL |     foo::Pub {};\n    |     ^^^^^^^^\n    |\n-   = note: ... and other private field `private` that were not provided\n+   = note: ... and other private field `private` that was not provided\n \n error[E0063]: missing field `y` in initializer of `Enum`\n   --> $DIR/issue-79593.rs:23:5"}, {"sha": "f0bd3e0ddf768002cf8af4d82fa92e4843666675", "filename": "src/test/ui/typeck/issue-87872-missing-inaccessible-field-literal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/src%2Ftest%2Fui%2Ftypeck%2Fissue-87872-missing-inaccessible-field-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb86daa1383d5330a18aa4e78270a6ca5b4ea469/src%2Ftest%2Fui%2Ftypeck%2Fissue-87872-missing-inaccessible-field-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-87872-missing-inaccessible-field-literal.stderr?ref=eb86daa1383d5330a18aa4e78270a6ca5b4ea469", "patch": "@@ -4,7 +4,7 @@ error: cannot construct `Foo` with struct literal syntax due to private fields\n LL |     foo::Foo {};\n    |     ^^^^^^^^\n    |\n-   = note: ... and other private field `you_cant_use_this_field` that were not provided\n+   = note: ... and other private field `you_cant_use_this_field` that was not provided\n \n error: aborting due to previous error\n "}]}