{"sha": "e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NzBhOTk0MTNmMDBkZTE3Y2U4ZjY1Yjc3ZGRjZDVjYzY4MDVhMWQ=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-11-07T14:44:45Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-11-07T14:44:45Z"}, "message": "cargo xtask format with 1.39", "tree": {"sha": "a7794b1b89440dfe2d088a4716d25bfefafebc08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7794b1b89440dfe2d088a4716d25bfefafebc08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "html_url": "https://github.com/rust-lang/rust/commit/e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e670a99413f00de17ce8f65b77ddcd5cc6805a1d/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e19c0df19eb4ce71bbd24114452157c65c8209", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e19c0df19eb4ce71bbd24114452157c65c8209", "html_url": "https://github.com/rust-lang/rust/commit/14e19c0df19eb4ce71bbd24114452157c65c8209"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9b2e440fb9c21a6eb5a19fced114bc7dca06695b", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e670a99413f00de17ce8f65b77ddcd5cc6805a1d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e670a99413f00de17ce8f65b77ddcd5cc6805a1d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "patch": "@@ -28,7 +28,7 @@ fn type_with_bounds_cond(p: &mut Parser, allow_bounds: bool) {\n         T![fn] | T![unsafe] | T![extern] => fn_pointer_type(p),\n         T![for] => for_type(p),\n         T![impl] => impl_trait_type(p),\n-        T![dyn ] => dyn_trait_type(p),\n+        T![dyn] => dyn_trait_type(p),\n         // Some path types are not allowed to have bounds (no plus)\n         T![<] => path_type_(p, allow_bounds),\n         _ if paths::is_use_path_start(p) => path_or_macro_type_(p, allow_bounds),\n@@ -234,9 +234,9 @@ fn impl_trait_type(p: &mut Parser) {\n // test dyn_trait_type\n // type A = dyn Iterator<Item=Foo<'a>> + 'a;\n fn dyn_trait_type(p: &mut Parser) {\n-    assert!(p.at(T![dyn ]));\n+    assert!(p.at(T![dyn]));\n     let m = p.start();\n-    p.bump(T![dyn ]);\n+    p.bump(T![dyn]);\n     type_params::bounds_without_colon(p);\n     m.complete(p, DYN_TRAIT_TYPE);\n }"}]}