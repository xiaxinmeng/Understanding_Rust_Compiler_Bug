{"sha": "9a3392e174a432a5f06c1157befc1ce0fae74bec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMzM5MmUxNzRhNDMyYTVmMDZjMTE1N2JlZmMxY2UwZmFlNzRiZWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-17T14:29:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-17T14:29:33Z"}, "message": "Auto merge of #58416 - cuviper:dist-linux-gcc, r=alexcrichton\n\n[CI] Update GCC in the dist-linux builders\n\nUpstream LLVM is planning to raise their minimum toolchain requirements, so they may start using C++14 features. This new policy has already landed in the form of a \"soft\" error.\nhttp://lists.llvm.org/pipermail/llvm-dev/2019-February/130117.html\n\nFor GCC, they will require at least version 5.1. This PR moves our crosstool-ng builders to their max GCC 5.2, with a few small patches to fix compatibility. The dist-x86_64-linux builder is updated to GCC 5.5 and LLVM/Clang 8.0.0-rc2, which also affects dist-i686-linux sharing the same scripts.\n\nr? @alexcrichton", "tree": {"sha": "793693f558a891ce1fe5c9560b7f4791988c5ef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/793693f558a891ce1fe5c9560b7f4791988c5ef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a3392e174a432a5f06c1157befc1ce0fae74bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a3392e174a432a5f06c1157befc1ce0fae74bec", "html_url": "https://github.com/rust-lang/rust/commit/9a3392e174a432a5f06c1157befc1ce0fae74bec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a3392e174a432a5f06c1157befc1ce0fae74bec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8af675a07576940ba24e3d91abd10b029b937946", "url": "https://api.github.com/repos/rust-lang/rust/commits/8af675a07576940ba24e3d91abd10b029b937946", "html_url": "https://github.com/rust-lang/rust/commit/8af675a07576940ba24e3d91abd10b029b937946"}, {"sha": "adb54c2fa7c3ea665cd63f91a86ad98902d78d1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb54c2fa7c3ea665cd63f91a86ad98902d78d1a", "html_url": "https://github.com/rust-lang/rust/commit/adb54c2fa7c3ea665cd63f91a86ad98902d78d1a"}], "stats": {"total": 423, "additions": 312, "deletions": 111}, "files": [{"sha": "34320ab4411e2d70640efd7e55f2e62011f230a7", "filename": "src/ci/docker/README.md", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2FREADME.md?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -131,36 +131,42 @@ $category > $option = $value -- $comment\n For targets: `arm-unknown-linux-gnueabi`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n+- Path and misc options > Patches origin = Bundled, then local\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = arm\n - Target options > Architecture level = armv6 -- (+)\n - Target options > Floating point = software (no FPU) -- (\\*)\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 3.2.72 -- Precise kernel\n-- C-library > glibc version = 2.14.1\n-- C compiler > gcc version = 4.9.3\n+- C-library > glibc version = 2.16.0\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n ### `arm-linux-gnueabihf.config`\n \n For targets: `arm-unknown-linux-gnueabihf`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n+- Path and misc options > Patches origin = Bundled, then local\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = arm\n - Target options > Architecture level = armv6 -- (+)\n - Target options > Use specific FPU = vfp -- (+)\n - Target options > Floating point = hardware (FPU) -- (\\*)\n - Target options > Default instruction set mode = arm -- (+)\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 3.2.72 -- Precise kernel\n-- C-library > glibc version = 2.14.1\n-- C compiler > gcc version = 4.9.3\n+- C-library > glibc version = 2.16.0\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n ### `armv7-linux-gnueabihf.config`\n \n For targets: `armv7-unknown-linux-gnueabihf`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n+- Path and misc options > Patches origin = Bundled, then local\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = arm\n - Target options > Suffix to the arch-part = v7\n - Target options > Architecture level = armv7-a -- (+)\n@@ -169,8 +175,8 @@ For targets: `armv7-unknown-linux-gnueabihf`\n - Target options > Default instruction set mode = thumb -- (\\*)\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 3.2.72 -- Precise kernel\n-- C-library > glibc version = 2.14.1\n-- C compiler > gcc version = 4.9.3\n+- C-library > glibc version = 2.16.0\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n (\\*) These options have been selected to match the configuration of the arm\n@@ -204,7 +210,7 @@ For targets: `powerpc-unknown-linux-gnu`\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 2.6.32.68 -- ~RHEL6 kernel\n - C-library > glibc version = 2.12.2 -- ~RHEL6 glibc\n-- C compiler > gcc version = 4.9.3\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n ### `powerpc64-linux-gnu.config`\n@@ -221,7 +227,7 @@ For targets: `powerpc64-unknown-linux-gnu`\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 2.6.32.68 -- ~RHEL6 kernel\n - C-library > glibc version = 2.12.2 -- ~RHEL6 glibc\n-- C compiler > gcc version = 4.9.3\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n (+) These CPU options match the configuration of the toolchains in RHEL6.\n@@ -232,12 +238,12 @@ For targets: `s390x-unknown-linux-gnu`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n - Path and misc options > Patches origin = Bundled, then local\n-- Path and misc options > Local patch directory = /build/patches\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = s390\n - Target options > Bitness = 64-bit\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 2.6.32.68 -- ~RHEL6 kernel\n - C-library > glibc version = 2.12.2 -- ~RHEL6 glibc\n-- C compiler > gcc version = 4.9.3\n+- C compiler > gcc version = 5.2.0\n - C compiler > gcc extra config = --with-arch=z10 -- LLVM's minimum support\n - C compiler > C++ = ENABLE -- to cross compile LLVM"}, {"sha": "48851ae232c99c481ba7482e5758b17e98bab6c9", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -16,6 +16,7 @@ RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n WORKDIR /tmp\n \n+COPY dist-arm-linux/patches/ /tmp/patches/\n COPY dist-arm-linux/arm-linux-gnueabi.config dist-arm-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n "}, {"sha": "4185112d8be90f28c34da0d0242fe36f1452f989", "filename": "src/ci/docker/dist-arm-linux/arm-linux-gnueabi.config", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-arm-linux%2Farm-linux-gnueabi.config", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-arm-linux%2Farm-linux-gnueabi.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Farm-linux-gnueabi.config?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -3,6 +3,7 @@\n # Crosstool-NG Configuration\n #\n CT_CONFIGURE_has_make381=y\n+CT_CONFIGURE_has_xz=y\n CT_MODULES=y\n \n #\n@@ -44,14 +45,16 @@ CT_CONNECT_TIMEOUT=10\n # CT_FORCE_EXTRACT is not set\n CT_OVERIDE_CONFIG_GUESS_SUB=y\n # CT_ONLY_EXTRACT is not set\n-CT_PATCH_BUNDLED=y\n+# CT_PATCH_BUNDLED is not set\n # CT_PATCH_LOCAL is not set\n-# CT_PATCH_BUNDLED_LOCAL is not set\n+CT_PATCH_BUNDLED_LOCAL=y\n # CT_PATCH_LOCAL_BUNDLED is not set\n # CT_PATCH_BUNDLED_FALLBACK_LOCAL is not set\n # CT_PATCH_LOCAL_FALLBACK_BUNDLED is not set\n # CT_PATCH_NONE is not set\n-CT_PATCH_ORDER=\"bundled\"\n+CT_PATCH_ORDER=\"bundled,local\"\n+CT_PATCH_USE_LOCAL=y\n+CT_LOCAL_PATCH_DIR=\"/tmp/patches\"\n \n #\n # Build behavior\n@@ -391,8 +394,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -407,8 +410,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -420,7 +424,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -492,15 +496,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -526,15 +528,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "871d5225c0f714e035a0d97c7c2d841acfa09431", "filename": "src/ci/docker/dist-arm-linux/patches/glibc/ports-2.16.0/001-arm-libgcc_s_resume-used.patch", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -0,0 +1,48 @@\n+commit bdb24c2851fd5f0ad9b82d7ea1db911d334b02d2\n+Author: Joseph Myers <joseph@codesourcery.com>\n+Date:   Tue May 20 21:27:13 2014 +0000\n+\n+    Fix ARM build with GCC trunk.\n+    \n+    sysdeps/unix/sysv/linux/arm/unwind-resume.c and\n+    sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c have static\n+    variables that are written in C code but only read from toplevel asms.\n+    Current GCC trunk now optimizes away such apparently write-only static\n+    variables, so causing a build failure.  This patch marks those\n+    variables with __attribute_used__ to avoid that optimization.\n+    \n+    Tested that this fixes the build for ARM.\n+    \n+            * sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c\n+            (libgcc_s_resume): Use __attribute_used__.\n+            * sysdeps/unix/sysv/linux/arm/unwind-resume.c (libgcc_s_resume):\n+            Likewise.\n+\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+index 29e2c2b00b04..e848bfeffdcb 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+@@ -22,7 +22,8 @@\n+ #include <pthreadP.h>\n+ \n+ static void *libgcc_s_handle;\n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ static _Unwind_Reason_Code (*libgcc_s_forcedunwind)\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+index 285b99b5ed0d..48d00fc83641 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+@@ -20,7 +20,8 @@\n+ #include <stdio.h>\n+ #include <unwind.h>\n+ \n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ "}, {"sha": "d1dd9faaa103526b51cc3d2f99756d8eb745524f", "filename": "src/ci/docker/dist-armhf-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -16,6 +16,7 @@ RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n WORKDIR /tmp\n \n+COPY dist-armhf-linux/patches/ /tmp/patches/\n COPY dist-armhf-linux/arm-linux-gnueabihf.config dist-armhf-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n "}, {"sha": "bebbcd1670a5e154bb5674a67af6054ac3ee7d2f", "filename": "src/ci/docker/dist-armhf-linux/arm-linux-gnueabihf.config", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -3,6 +3,7 @@\n # Crosstool-NG Configuration\n #\n CT_CONFIGURE_has_make381=y\n+CT_CONFIGURE_has_xz=y\n CT_MODULES=y\n \n #\n@@ -44,14 +45,16 @@ CT_CONNECT_TIMEOUT=10\n # CT_FORCE_EXTRACT is not set\n CT_OVERIDE_CONFIG_GUESS_SUB=y\n # CT_ONLY_EXTRACT is not set\n-CT_PATCH_BUNDLED=y\n+# CT_PATCH_BUNDLED is not set\n # CT_PATCH_LOCAL is not set\n-# CT_PATCH_BUNDLED_LOCAL is not set\n+CT_PATCH_BUNDLED_LOCAL=y\n # CT_PATCH_LOCAL_BUNDLED is not set\n # CT_PATCH_BUNDLED_FALLBACK_LOCAL is not set\n # CT_PATCH_LOCAL_FALLBACK_BUNDLED is not set\n # CT_PATCH_NONE is not set\n-CT_PATCH_ORDER=\"bundled\"\n+CT_PATCH_ORDER=\"bundled,local\"\n+CT_PATCH_USE_LOCAL=y\n+CT_LOCAL_PATCH_DIR=\"/tmp/patches\"\n \n #\n # Build behavior\n@@ -392,8 +395,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -408,8 +411,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -421,7 +425,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -493,15 +497,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -527,15 +529,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "871d5225c0f714e035a0d97c7c2d841acfa09431", "filename": "src/ci/docker/dist-armhf-linux/patches/glibc/ports-2.16.0/001-arm-libgcc_s_resume-used.patch", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -0,0 +1,48 @@\n+commit bdb24c2851fd5f0ad9b82d7ea1db911d334b02d2\n+Author: Joseph Myers <joseph@codesourcery.com>\n+Date:   Tue May 20 21:27:13 2014 +0000\n+\n+    Fix ARM build with GCC trunk.\n+    \n+    sysdeps/unix/sysv/linux/arm/unwind-resume.c and\n+    sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c have static\n+    variables that are written in C code but only read from toplevel asms.\n+    Current GCC trunk now optimizes away such apparently write-only static\n+    variables, so causing a build failure.  This patch marks those\n+    variables with __attribute_used__ to avoid that optimization.\n+    \n+    Tested that this fixes the build for ARM.\n+    \n+            * sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c\n+            (libgcc_s_resume): Use __attribute_used__.\n+            * sysdeps/unix/sysv/linux/arm/unwind-resume.c (libgcc_s_resume):\n+            Likewise.\n+\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+index 29e2c2b00b04..e848bfeffdcb 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+@@ -22,7 +22,8 @@\n+ #include <pthreadP.h>\n+ \n+ static void *libgcc_s_handle;\n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ static _Unwind_Reason_Code (*libgcc_s_forcedunwind)\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+index 285b99b5ed0d..48d00fc83641 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+@@ -20,7 +20,8 @@\n+ #include <stdio.h>\n+ #include <unwind.h>\n+ \n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ "}, {"sha": "170b8134d3edcd8ac32931c06416e472f5f0253e", "filename": "src/ci/docker/dist-armv7-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -16,6 +16,7 @@ RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n WORKDIR /tmp\n \n+COPY dist-armv7-linux/patches/ /tmp/patches/\n COPY dist-armv7-linux/build-toolchains.sh dist-armv7-linux/armv7-linux-gnueabihf.config /tmp/\n RUN ./build-toolchains.sh\n "}, {"sha": "5cccfd8444d3536a8c501e48f8782a958e795fd9", "filename": "src/ci/docker/dist-armv7-linux/armv7-linux-gnueabihf.config", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -3,6 +3,7 @@\n # Crosstool-NG Configuration\n #\n CT_CONFIGURE_has_make381=y\n+CT_CONFIGURE_has_xz=y\n CT_MODULES=y\n \n #\n@@ -44,14 +45,16 @@ CT_CONNECT_TIMEOUT=10\n # CT_FORCE_EXTRACT is not set\n CT_OVERIDE_CONFIG_GUESS_SUB=y\n # CT_ONLY_EXTRACT is not set\n-CT_PATCH_BUNDLED=y\n+# CT_PATCH_BUNDLED is not set\n # CT_PATCH_LOCAL is not set\n-# CT_PATCH_BUNDLED_LOCAL is not set\n+CT_PATCH_BUNDLED_LOCAL=y\n # CT_PATCH_LOCAL_BUNDLED is not set\n # CT_PATCH_BUNDLED_FALLBACK_LOCAL is not set\n # CT_PATCH_LOCAL_FALLBACK_BUNDLED is not set\n # CT_PATCH_NONE is not set\n-CT_PATCH_ORDER=\"bundled\"\n+CT_PATCH_ORDER=\"bundled,local\"\n+CT_PATCH_USE_LOCAL=y\n+CT_LOCAL_PATCH_DIR=\"/tmp/patches\"\n \n #\n # Build behavior\n@@ -155,12 +158,6 @@ CT_ARCH_EXCLUSIVE_WITH_CPU=y\n # CT_ARCH_FLOAT_AUTO is not set\n # CT_ARCH_FLOAT_SOFTFP is not set\n CT_ARCH_FLOAT=\"hard\"\n-# CT_ARCH_ALPHA_EV4 is not set\n-# CT_ARCH_ALPHA_EV45 is not set\n-# CT_ARCH_ALPHA_EV5 is not set\n-# CT_ARCH_ALPHA_EV56 is not set\n-# CT_ARCH_ALPHA_EV6 is not set\n-# CT_ARCH_ALPHA_EV67 is not set\n \n #\n # arm other options\n@@ -311,8 +308,6 @@ CT_LIBC=\"glibc\"\n CT_LIBC_VERSION=\"2.16.0\"\n CT_LIBC_glibc=y\n # CT_LIBC_musl is not set\n-# CT_LIBC_newlib is not set\n-# CT_LIBC_none is not set\n # CT_LIBC_uClibc is not set\n CT_LIBC_avr_libc_AVAILABLE=y\n CT_LIBC_glibc_AVAILABLE=y\n@@ -400,8 +395,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -416,8 +411,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -429,7 +425,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -501,15 +497,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -535,15 +529,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "871d5225c0f714e035a0d97c7c2d841acfa09431", "filename": "src/ci/docker/dist-armv7-linux/patches/glibc/ports-2.16.0/001-arm-libgcc_s_resume-used.patch", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -0,0 +1,48 @@\n+commit bdb24c2851fd5f0ad9b82d7ea1db911d334b02d2\n+Author: Joseph Myers <joseph@codesourcery.com>\n+Date:   Tue May 20 21:27:13 2014 +0000\n+\n+    Fix ARM build with GCC trunk.\n+    \n+    sysdeps/unix/sysv/linux/arm/unwind-resume.c and\n+    sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c have static\n+    variables that are written in C code but only read from toplevel asms.\n+    Current GCC trunk now optimizes away such apparently write-only static\n+    variables, so causing a build failure.  This patch marks those\n+    variables with __attribute_used__ to avoid that optimization.\n+    \n+    Tested that this fixes the build for ARM.\n+    \n+            * sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c\n+            (libgcc_s_resume): Use __attribute_used__.\n+            * sysdeps/unix/sysv/linux/arm/unwind-resume.c (libgcc_s_resume):\n+            Likewise.\n+\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+index 29e2c2b00b04..e848bfeffdcb 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+@@ -22,7 +22,8 @@\n+ #include <pthreadP.h>\n+ \n+ static void *libgcc_s_handle;\n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ static _Unwind_Reason_Code (*libgcc_s_forcedunwind)\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+index 285b99b5ed0d..48d00fc83641 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+@@ -20,7 +20,8 @@\n+ #include <stdio.h>\n+ #include <unwind.h>\n+ \n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ "}, {"sha": "a96b4882c2d5765e3a600e77ebbef747f6e4d9ff", "filename": "src/ci/docker/dist-powerpc-linux/patches/glibc/2.12.2/002-newer-gcc.patch", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -0,0 +1,26 @@\n+diff --git a/configure b/configure\n+index b6752d147c6b..6089a3403410 100755\n+--- a/configure\n++++ b/configure\n+@@ -5079,7 +5079,7 @@ $as_echo_n \"checking version of $CC... \" >&6; }\n+   ac_prog_version=`$CC -v 2>&1 | sed -n 's/^.*version \\([egcygnustpi-]*[0-9.]*\\).*$/\\1/p'`\n+   case $ac_prog_version in\n+     '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+-    3.4* | 4.[0-9]* )\n++    3.4* | [4-9].* )\n+        ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+     *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+ \n+diff --git a/configure.in b/configure.in\n+index 56849dfc489a..09677eb3d0c1 100644\n+--- a/configure.in\n++++ b/configure.in\n+@@ -960,7 +960,7 @@ fi\n+ # These programs are version sensitive.\n+ AC_CHECK_TOOL_PREFIX\n+ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,\n+-  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | 4.[0-9]* ],\n++  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | [4-9].* ],\n+   critic_missing=\"$critic_missing gcc\")\n+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,\n+   [GNU Make[^0-9]*\\([0-9][0-9.]*\\)],"}, {"sha": "7df41da2bf76e87cc5f3fe670b252b6850318578", "filename": "src/ci/docker/dist-powerpc-linux/powerpc-linux-gnu.config", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpowerpc-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpowerpc-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpowerpc-linux-gnu.config?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -359,8 +359,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -375,8 +375,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -388,7 +389,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -460,15 +461,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -494,15 +493,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "a96b4882c2d5765e3a600e77ebbef747f6e4d9ff", "filename": "src/ci/docker/dist-powerpc64-linux/patches/glibc/2.12.2/003-newer-gcc.patch", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpatches%2Fglibc%2F2.12.2%2F003-newer-gcc.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpatches%2Fglibc%2F2.12.2%2F003-newer-gcc.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpatches%2Fglibc%2F2.12.2%2F003-newer-gcc.patch?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -0,0 +1,26 @@\n+diff --git a/configure b/configure\n+index b6752d147c6b..6089a3403410 100755\n+--- a/configure\n++++ b/configure\n+@@ -5079,7 +5079,7 @@ $as_echo_n \"checking version of $CC... \" >&6; }\n+   ac_prog_version=`$CC -v 2>&1 | sed -n 's/^.*version \\([egcygnustpi-]*[0-9.]*\\).*$/\\1/p'`\n+   case $ac_prog_version in\n+     '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+-    3.4* | 4.[0-9]* )\n++    3.4* | [4-9].* )\n+        ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+     *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+ \n+diff --git a/configure.in b/configure.in\n+index 56849dfc489a..09677eb3d0c1 100644\n+--- a/configure.in\n++++ b/configure.in\n+@@ -960,7 +960,7 @@ fi\n+ # These programs are version sensitive.\n+ AC_CHECK_TOOL_PREFIX\n+ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,\n+-  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | 4.[0-9]* ],\n++  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | [4-9].* ],\n+   critic_missing=\"$critic_missing gcc\")\n+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,\n+   [GNU Make[^0-9]*\\([0-9][0-9.]*\\)],"}, {"sha": "4aab4f4fd44457eccf86ed90e8290bdd59f1e6e1", "filename": "src/ci/docker/dist-powerpc64-linux/powerpc64-linux-gnu.config", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpowerpc64-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpowerpc64-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpowerpc64-linux-gnu.config?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -359,8 +359,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -375,8 +375,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -388,7 +389,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -460,15 +461,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -494,15 +493,10 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n-# CT_CLOOG_V_0_18_1 is not set\n-# CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "a96b4882c2d5765e3a600e77ebbef747f6e4d9ff", "filename": "src/ci/docker/dist-s390x-linux/patches/glibc/2.12.2/002-newer-gcc.patch", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -0,0 +1,26 @@\n+diff --git a/configure b/configure\n+index b6752d147c6b..6089a3403410 100755\n+--- a/configure\n++++ b/configure\n+@@ -5079,7 +5079,7 @@ $as_echo_n \"checking version of $CC... \" >&6; }\n+   ac_prog_version=`$CC -v 2>&1 | sed -n 's/^.*version \\([egcygnustpi-]*[0-9.]*\\).*$/\\1/p'`\n+   case $ac_prog_version in\n+     '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+-    3.4* | 4.[0-9]* )\n++    3.4* | [4-9].* )\n+        ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+     *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+ \n+diff --git a/configure.in b/configure.in\n+index 56849dfc489a..09677eb3d0c1 100644\n+--- a/configure.in\n++++ b/configure.in\n+@@ -960,7 +960,7 @@ fi\n+ # These programs are version sensitive.\n+ AC_CHECK_TOOL_PREFIX\n+ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,\n+-  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | 4.[0-9]* ],\n++  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | [4-9].* ],\n+   critic_missing=\"$critic_missing gcc\")\n+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,\n+   [GNU Make[^0-9]*\\([0-9][0-9.]*\\)],"}, {"sha": "cd1c41b02e3122e53059ac6a9a5565cd8952cb62", "filename": "src/ci/docker/dist-s390x-linux/s390x-linux-gnu.config", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -339,8 +339,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -355,8 +355,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -368,7 +369,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -440,15 +441,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -474,15 +473,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "ac681b71686229cedb957e8f95b1337e2297c06a", "filename": "src/ci/docker/dist-x86_64-linux/build-clang.sh", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -4,26 +4,14 @@ set -ex\n \n source shared.sh\n \n-# Currently these commits are all tip-of-tree as of 2018-12-16, used to pick up\n-# a fix for rust-lang/rust#56849\n-LLVM=032b00a5404865765cda7db3039f39d54964d8b0\n-LLD=3e4aa4e8671523321af51449e0569f455ef3ad43\n-CLANG=a6b9739069763243020f4ea6fe586bc135fde1f9\n+LLVM=llvmorg-8.0.0-rc2\n \n-mkdir clang\n-cd clang\n+mkdir llvm-project\n+cd llvm-project\n \n-curl -L https://github.com/llvm-mirror/llvm/archive/$LLVM.tar.gz | \\\n+curl -L https://github.com/llvm/llvm-project/archive/$LLVM.tar.gz | \\\n   tar xzf - --strip-components=1\n \n-mkdir -p tools/clang\n-curl -L https://github.com/llvm-mirror/clang/archive/$CLANG.tar.gz | \\\n-  tar xzf - --strip-components=1 -C tools/clang\n-\n-mkdir -p tools/lld\n-curl -L https://github.com/llvm-mirror/lld/archive/$LLD.tar.gz | \\\n-  tar zxf - --strip-components=1 -C tools/lld\n-\n mkdir clang-build\n cd clang-build\n \n@@ -39,20 +27,21 @@ cd clang-build\n #\n # [1]: https://sourceware.org/ml/crossgcc/2008-11/msg00028.html\n INC=\"/rustroot/include\"\n-INC=\"$INC:/rustroot/lib/gcc/x86_64-unknown-linux-gnu/4.8.5/include-fixed\"\n+INC=\"$INC:/rustroot/lib/gcc/x86_64-unknown-linux-gnu/5.5.0/include-fixed\"\n INC=\"$INC:/usr/include\"\n \n hide_output \\\n-    cmake .. \\\n+    cmake ../llvm \\\n       -DCMAKE_C_COMPILER=/rustroot/bin/gcc \\\n       -DCMAKE_CXX_COMPILER=/rustroot/bin/g++ \\\n       -DCMAKE_BUILD_TYPE=Release \\\n       -DCMAKE_INSTALL_PREFIX=/rustroot \\\n       -DLLVM_TARGETS_TO_BUILD=X86 \\\n+      -DLLVM_ENABLE_PROJECTS=\"clang;lld\" \\\n       -DC_INCLUDE_DIRS=\"$INC\"\n \n hide_output make -j10\n hide_output make install\n \n cd ../..\n-rm -rf clang\n+rm -rf llvm-project"}, {"sha": "7f6e94d326ddf3012e8bf1257b5b99f727c4f1cb", "filename": "src/ci/docker/dist-x86_64-linux/build-gcc.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -3,9 +3,9 @@ set -ex\n \n source shared.sh\n \n-GCC=4.8.5\n+GCC=5.5.0\n \n-curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.bz2 | tar xjf -\n+curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.xz | xzcat | tar xf -\n cd gcc-$GCC\n \n # FIXME(#49246): Remove the `sed` below."}, {"sha": "a678d353d52f5881f69ffde98d10dfac6ceeb465", "filename": "src/ci/docker/dist-x86_64-linux/build-perl.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-perl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9a3392e174a432a5f06c1157befc1ce0fae74bec/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-perl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-perl.sh?ref=9a3392e174a432a5f06c1157befc1ce0fae74bec", "patch": "@@ -11,7 +11,8 @@ cd perl-5.28.0\n # Gotta do some hackery to tell python about our custom OpenSSL build, but other\n # than that fairly normal.\n CC=gcc \\\n-CFLAGS='-I /rustroot/include' LDFLAGS='-L /rustroot/lib -L /rustroot/lib64' \\\n+CFLAGS='-I /rustroot/include -fgnu89-inline' \\\n+LDFLAGS='-L /rustroot/lib -L /rustroot/lib64' \\\n     hide_output ./configure.gnu\n hide_output make -j10\n hide_output make install"}]}