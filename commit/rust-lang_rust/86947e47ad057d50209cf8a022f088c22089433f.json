{"sha": "86947e47ad057d50209cf8a022f088c22089433f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OTQ3ZTQ3YWQwNTdkNTAyMDljZjhhMDIyZjA4OGMyMjA4OTQzM2Y=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-03T22:20:38Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-06T16:07:40Z"}, "message": "More documentation on pipes, and moving assert in runtime.", "tree": {"sha": "7f3bddbd7dd5e683da8491e59ea140036cf0b0d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3bddbd7dd5e683da8491e59ea140036cf0b0d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86947e47ad057d50209cf8a022f088c22089433f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86947e47ad057d50209cf8a022f088c22089433f", "html_url": "https://github.com/rust-lang/rust/commit/86947e47ad057d50209cf8a022f088c22089433f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86947e47ad057d50209cf8a022f088c22089433f/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8e9724fb1b14a415d922431a5bc74f937c9ff38", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8e9724fb1b14a415d922431a5bc74f937c9ff38", "html_url": "https://github.com/rust-lang/rust/commit/d8e9724fb1b14a415d922431a5bc74f937c9ff38"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "cd4265ada8e6eff0e5f51fdb6d4c9f6482feff66", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/86947e47ad057d50209cf8a022f088c22089433f/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86947e47ad057d50209cf8a022f088c22089433f/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=86947e47ad057d50209cf8a022f088c22089433f", "patch": "@@ -41,6 +41,21 @@ buffer that is carried along in the endpoint data structures.\n \n FIXME (#3072) - This is still incomplete\n \n+\n+\n+## Invariants\n+\n+This section attempts to document the invariants that must hold to\n+avoid races. These primarily deal with the state and blocked_task\n+fields on packet_headers.\n+\n+1. If the sender reads a some(task) out of blocked_task, then the task\n+that is pointed there will remain live for any events that the sender\n+might signal.\n+\n+2. The sender may only read the blocked_task field if it first ensures\n+that the packet's state field is blocked.\n+\n */\n \n import unsafe::{forget, reinterpret_cast, transmute};"}, {"sha": "58a0e3eae6c9526353b579b51a0eda8ef800b3c1", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86947e47ad057d50209cf8a022f088c22089433f/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/86947e47ad057d50209cf8a022f088c22089433f/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=86947e47ad057d50209cf8a022f088c22089433f", "patch": "@@ -678,11 +678,11 @@ MUST_CHECK bool rust_task::wait_event(void **result) {\n \n void\n rust_task::signal_event(void *event) {\n-    scoped_lock with(lifecycle_lock);\n-\n     assert(task_state_blocked == state ||\n            task_state_running == state);\n \n+    scoped_lock with(lifecycle_lock);\n+\n     this->event = event;\n     event_reject = true;\n     if(task_state_blocked == state) {"}]}