{"sha": "da355efc1c8bde662da6f0289b492ce694bb398c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMzU1ZWZjMWM4YmRlNjYyZGE2ZjAyODliNDkyY2U2OTRiYjM5OGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-19T19:32:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-19T19:32:45Z"}, "message": "Auto merge of #24517 - erickt:str, r=alexcrichton\n\nThis implementation is currently about 3-4 times faster than using the `.to_string()` based approach.\r\n\r\nI would also suggest we deprecate `String::from_str` since it's redundant with the stable `String::from` method, but I'll leave that for a future PR.", "tree": {"sha": "0168f4afe1981d4c4d3185493193d8770fd630f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0168f4afe1981d4c4d3185493193d8770fd630f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da355efc1c8bde662da6f0289b492ce694bb398c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da355efc1c8bde662da6f0289b492ce694bb398c", "html_url": "https://github.com/rust-lang/rust/commit/da355efc1c8bde662da6f0289b492ce694bb398c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da355efc1c8bde662da6f0289b492ce694bb398c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "html_url": "https://github.com/rust-lang/rust/commit/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2"}, {"sha": "f055054eab2a510ad3252599a015f660eef6aedd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f055054eab2a510ad3252599a015f660eef6aedd", "html_url": "https://github.com/rust-lang/rust/commit/f055054eab2a510ad3252599a015f660eef6aedd"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "81710286fde21311ecc577b4e47d1a4ff6d930b7", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/da355efc1c8bde662da6f0289b492ce694bb398c/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da355efc1c8bde662da6f0289b492ce694bb398c/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=da355efc1c8bde662da6f0289b492ce694bb398c", "patch": "@@ -1013,9 +1013,20 @@ impl AsRef<str> for String {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> From<&'a str> for String {\n+    #[cfg(not(test))]\n     #[inline]\n     fn from(s: &'a str) -> String {\n-        s.to_string()\n+        String { vec: <[_]>::to_vec(s.as_bytes()) }\n+    }\n+\n+    // HACK(japaric): with cfg(test) the inherent `[T]::to_vec` method, which is\n+    // required for this method definition, is not available. Since we don't\n+    // require this method for testing purposes, I'll just stub it\n+    // NB see the slice::hack module in slice.rs for more information\n+    #[inline]\n+    #[cfg(test)]\n+    fn from(_: &str) -> String {\n+        panic!(\"not available with cfg(test)\");\n     }\n }\n "}, {"sha": "d842d1e7f27c04541194864f827cf647d16e9823", "filename": "src/libcollectionstest/string.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/da355efc1c8bde662da6f0289b492ce694bb398c/src%2Flibcollectionstest%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da355efc1c8bde662da6f0289b492ce694bb398c/src%2Flibcollectionstest%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstring.rs?ref=da355efc1c8bde662da6f0289b492ce694bb398c", "patch": "@@ -450,3 +450,30 @@ fn bench_exact_size_shrink_to_fit(b: &mut Bencher) {\n         r\n     });\n }\n+\n+#[bench]\n+fn bench_from_str(b: &mut Bencher) {\n+    let s = \"Hello there, the quick brown fox jumped over the lazy dog! \\\n+             Lorem ipsum dolor sit amet, consectetur. \";\n+    b.iter(|| {\n+        String::from_str(s)\n+    })\n+}\n+\n+#[bench]\n+fn bench_from(b: &mut Bencher) {\n+    let s = \"Hello there, the quick brown fox jumped over the lazy dog! \\\n+             Lorem ipsum dolor sit amet, consectetur. \";\n+    b.iter(|| {\n+        String::from(s)\n+    })\n+}\n+\n+#[bench]\n+fn bench_to_string(b: &mut Bencher) {\n+    let s = \"Hello there, the quick brown fox jumped over the lazy dog! \\\n+             Lorem ipsum dolor sit amet, consectetur. \";\n+    b.iter(|| {\n+        s.to_string()\n+    })\n+}"}]}