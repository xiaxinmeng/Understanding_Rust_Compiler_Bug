{"sha": "122e1c3802afcaa803287b06127c499df63e2dab", "node_id": "C_kwDOAAsO6NoAKDEyMmUxYzM4MDJhZmNhYTgwMzI4N2IwNjEyN2M0OTlkZjYzZTJkYWI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T05:13:11Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T06:32:42Z"}, "message": "Remove unnecessary sigils around `Ident::as_str()` calls.", "tree": {"sha": "8009d2f1dbb56bc40faac06fe959d85bf5d59e7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8009d2f1dbb56bc40faac06fe959d85bf5d59e7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/122e1c3802afcaa803287b06127c499df63e2dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/122e1c3802afcaa803287b06127c499df63e2dab", "html_url": "https://github.com/rust-lang/rust/commit/122e1c3802afcaa803287b06127c499df63e2dab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/122e1c3802afcaa803287b06127c499df63e2dab/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bb5f81d8d818ffd506ead1d08996d60e05bba07", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb5f81d8d818ffd506ead1d08996d60e05bba07", "html_url": "https://github.com/rust-lang/rust/commit/3bb5f81d8d818ffd506ead1d08996d60e05bba07"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b7dd6b06ff8276adfdec82a2d58641606b229941", "filename": "src/items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/122e1c3802afcaa803287b06127c499df63e2dab/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122e1c3802afcaa803287b06127c499df63e2dab/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=122e1c3802afcaa803287b06127c499df63e2dab", "patch": "@@ -616,10 +616,10 @@ impl<'a> FmtVisitor<'a> {\n                 (TyAlias(lty), TyAlias(rty))\n                     if both_type(&lty.ty, &rty.ty) || both_opaque(&lty.ty, &rty.ty) =>\n                 {\n-                    a.ident.as_str().cmp(&b.ident.as_str())\n+                    a.ident.as_str().cmp(b.ident.as_str())\n                 }\n                 (Const(..), Const(..)) | (MacCall(..), MacCall(..)) => {\n-                    a.ident.as_str().cmp(&b.ident.as_str())\n+                    a.ident.as_str().cmp(b.ident.as_str())\n                 }\n                 (Fn(..), Fn(..)) => a.span.lo().cmp(&b.span.lo()),\n                 (TyAlias(ty), _) if is_type(&ty.ty) => Ordering::Less,\n@@ -1029,7 +1029,7 @@ pub(crate) fn format_trait(\n         if !bounds.is_empty() {\n             let ident_hi = context\n                 .snippet_provider\n-                .span_after(item.span, &item.ident.as_str());\n+                .span_after(item.span, item.ident.as_str());\n             let bound_hi = bounds.last().unwrap().span().hi();\n             let snippet = context.snippet(mk_sp(ident_hi, bound_hi));\n             if contains_comment(snippet) {"}, {"sha": "9d438a80d942f8aca16f74f7412a01e23ca1d11e", "filename": "src/modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/122e1c3802afcaa803287b06127c499df63e2dab/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122e1c3802afcaa803287b06127c499df63e2dab/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=122e1c3802afcaa803287b06127c499df63e2dab", "patch": "@@ -467,10 +467,10 @@ impl<'ast, 'sess, 'c> ModResolver<'ast, 'sess> {\n             if let DirectoryOwnership::Owned { relative } = &mut self.directory.ownership {\n                 if let Some(ident) = relative.take() {\n                     // remove the relative offset\n-                    self.directory.path.push(&*ident.as_str());\n+                    self.directory.path.push(ident.as_str());\n                 }\n             }\n-            self.directory.path.push(&*id.as_str());\n+            self.directory.path.push(id.as_str());\n         }\n     }\n "}, {"sha": "13bfc92507d0a9d5d676cc0c50874f6923d16c95", "filename": "src/reorder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/122e1c3802afcaa803287b06127c499df63e2dab/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122e1c3802afcaa803287b06127c499df63e2dab/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=122e1c3802afcaa803287b06127c499df63e2dab", "patch": "@@ -26,7 +26,7 @@ use crate::visitor::FmtVisitor;\n fn compare_items(a: &ast::Item, b: &ast::Item) -> Ordering {\n     match (&a.kind, &b.kind) {\n         (&ast::ItemKind::Mod(..), &ast::ItemKind::Mod(..)) => {\n-            a.ident.as_str().cmp(&b.ident.as_str())\n+            a.ident.as_str().cmp(b.ident.as_str())\n         }\n         (&ast::ItemKind::ExternCrate(ref a_name), &ast::ItemKind::ExternCrate(ref b_name)) => {\n             // `extern crate foo as bar;`\n@@ -44,7 +44,7 @@ fn compare_items(a: &ast::Item, b: &ast::Item) -> Ordering {\n                 (Some(..), None) => Ordering::Greater,\n                 (None, Some(..)) => Ordering::Less,\n                 (None, None) => Ordering::Equal,\n-                (Some(..), Some(..)) => a.ident.as_str().cmp(&b.ident.as_str()),\n+                (Some(..), Some(..)) => a.ident.as_str().cmp(b.ident.as_str()),\n             }\n         }\n         _ => unreachable!(),"}]}