{"sha": "0b037c17b867cc8d47c0391b3d681fbf5a66ce80", "node_id": "C_kwDOAAsO6NoAKDBiMDM3YzE3Yjg2N2NjOGQ0N2MwMzkxYjNkNjgxZmJmNWE2NmNlODA", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-09-14T15:39:32Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-09-14T17:36:03Z"}, "message": "Update theme check tests", "tree": {"sha": "9a0b361b73df9a8a2b9d66f2840625cb3a7465bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a0b361b73df9a8a2b9d66f2840625cb3a7465bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b037c17b867cc8d47c0391b3d681fbf5a66ce80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b037c17b867cc8d47c0391b3d681fbf5a66ce80", "html_url": "https://github.com/rust-lang/rust/commit/0b037c17b867cc8d47c0391b3d681fbf5a66ce80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b037c17b867cc8d47c0391b3d681fbf5a66ce80/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb42dae9870c8e1085e9e524363123741a49a255", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb42dae9870c8e1085e9e524363123741a49a255", "html_url": "https://github.com/rust-lang/rust/commit/fb42dae9870c8e1085e9e524363123741a49a255"}], "stats": {"total": 60, "additions": 39, "deletions": 21}, "files": [{"sha": "54226c6cf3b155bcad28190d436bcbf7036f43d2", "filename": "src/librustdoc/theme/tests.rs", "status": "modified", "additions": 39, "deletions": 21, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/0b037c17b867cc8d47c0391b3d681fbf5a66ce80/src%2Flibrustdoc%2Ftheme%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b037c17b867cc8d47c0391b3d681fbf5a66ce80/src%2Flibrustdoc%2Ftheme%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme%2Ftests.rs?ref=0b037c17b867cc8d47c0391b3d681fbf5a66ce80", "patch": "@@ -44,11 +44,7 @@ rule j end {}\n \"#;\n \n     let mut ret = Vec::new();\n-    get_differences(\n-        &load_css_paths(against.as_bytes()),\n-        &load_css_paths(text.as_bytes()),\n-        &mut ret,\n-    );\n+    get_differences(&load_css_paths(against).unwrap(), &load_css_paths(text).unwrap(), &mut ret);\n     assert!(ret.is_empty());\n }\n \n@@ -61,57 +57,79 @@ a\n c // sdf\n d {}\n \"#;\n-    let paths = load_css_paths(text.as_bytes());\n-    assert!(paths.children.contains(&CssPath::new(\"a b c d\".to_owned())));\n+    let paths = load_css_paths(text).unwrap();\n+    assert!(paths.contains_key(&\"a b c d\".to_owned()));\n }\n \n #[test]\n fn test_comparison() {\n     let x = r#\"\n-a {\n-    b {\n-        c {}\n-    }\n+@a {\n+    b {}\n }\n \"#;\n \n     let y = r#\"\n-a {\n+@a {\n     b {}\n+    c {}\n }\n \"#;\n \n-    let against = load_css_paths(y.as_bytes());\n-    let other = load_css_paths(x.as_bytes());\n+    let against = load_css_paths(y).unwrap();\n+    let other = load_css_paths(x).unwrap();\n \n     let mut ret = Vec::new();\n     get_differences(&against, &other, &mut ret);\n     assert!(ret.is_empty());\n     get_differences(&other, &against, &mut ret);\n-    assert_eq!(ret, vec![\"  Missing \\\"c\\\" rule\".to_owned()]);\n+    assert_eq!(ret, vec![\"  Missing rule `c`\".to_owned()]);\n }\n \n #[test]\n fn check_empty_css() {\n-    let events = load_css_events(&[]);\n-    assert_eq!(events.len(), 0);\n+    let paths = load_css_paths(\"\").unwrap();\n+    assert_eq!(paths.len(), 0);\n }\n \n #[test]\n fn check_invalid_css() {\n-    let events = load_css_events(b\"*\");\n-    assert_eq!(events.len(), 0);\n+    let paths = load_css_paths(\"*\").unwrap();\n+    assert_eq!(paths.len(), 0);\n }\n \n #[test]\n fn test_with_minification() {\n     let text = include_str!(\"../html/static/css/themes/dark.css\");\n     let minified = minifier::css::minify(&text).expect(\"CSS minification failed\").to_string();\n \n-    let against = load_css_paths(text.as_bytes());\n-    let other = load_css_paths(minified.as_bytes());\n+    let against = load_css_paths(text).unwrap();\n+    let other = load_css_paths(&minified).unwrap();\n \n     let mut ret = Vec::new();\n     get_differences(&against, &other, &mut ret);\n     assert!(ret.is_empty());\n }\n+\n+#[test]\n+fn test_media() {\n+    let text = r#\"\n+@media (min-width: 701px) {\n+    a:hover {\n+        color: #fff;\n+    }\n+\n+    b {\n+        x: y;\n+    }\n+}\n+\"#;\n+\n+    let paths = load_css_paths(text).unwrap();\n+    eprintln!(\"{:?}\", paths);\n+    let p = paths.get(\"@media (min-width:701px)\");\n+    assert!(p.is_some());\n+    let p = p.unwrap();\n+    assert!(p.children.get(\"a:hover\").is_some());\n+    assert!(p.children.get(\"b\").is_some());\n+}"}]}