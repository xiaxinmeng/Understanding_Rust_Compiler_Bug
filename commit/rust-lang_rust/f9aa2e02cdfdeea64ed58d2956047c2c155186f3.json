{"sha": "f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "node_id": "C_kwDOAAsO6NoAKGY5YWEyZTAyY2RmZGVlYTY0ZWQ1OGQyOTU2MDQ3YzJjMTU1MTg2ZjM", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-06-02T20:15:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-06-02T22:04:46Z"}, "message": "Tweak output", "tree": {"sha": "4411fe18f1a15bd57dcde122fc8442207269e20a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4411fe18f1a15bd57dcde122fc8442207269e20a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "html_url": "https://github.com/rust-lang/rust/commit/f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8567b686f9b5f85b18341d77814088a4a7409238", "url": "https://api.github.com/repos/rust-lang/rust/commits/8567b686f9b5f85b18341d77814088a4a7409238", "html_url": "https://github.com/rust-lang/rust/commit/8567b686f9b5f85b18341d77814088a4a7409238"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "c809b8bdd73db56eb530d8c10f89b11426d6d553", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "patch": "@@ -2,7 +2,7 @@\n //! up data structures required by type-checking/codegen.\n \n use crate::errors::{CopyImplOnNonAdt, CopyImplOnTypeWithDtor, DropImplOnWrongItem};\n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, MultiSpan};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::lang_items::LangItem;\n@@ -16,6 +16,7 @@ use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::misc::{can_type_implement_copy, CopyImplementationError};\n use rustc_trait_selection::traits::predicate_for_trait_def;\n use rustc_trait_selection::traits::{self, ObligationCause, TraitEngine, TraitEngineExt};\n+use std::collections::BTreeMap;\n \n pub fn check_trait(tcx: TyCtxt<'_>, trait_def_id: DefId) {\n     let lang_items = tcx.lang_items();\n@@ -101,6 +102,7 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n                     generics = self_item.kind.generics();\n                 }\n             }\n+            let mut errors: BTreeMap<_, Vec<_>> = Default::default();\n             let mut bounds = vec![];\n \n             for (field, ty) in fields {\n@@ -127,13 +129,10 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n                         // FIXME: This error could be more descriptive, especially if the error_predicate\n                         // contains a foreign type or if it's a deeply nested type...\n                         if error_predicate != error.root_obligation.predicate {\n-                            err.span_note(\n-                                error.obligation.cause.span,\n-                                &format!(\n-                                    \"the `Copy` impl for `{}` requires that `{}`\",\n-                                    ty, error_predicate\n-                                ),\n-                            );\n+                            errors\n+                                .entry((ty.to_string(), error_predicate.to_string()))\n+                                .or_default()\n+                                .push(error.obligation.cause.span);\n                         }\n                         if let ty::PredicateKind::Trait(ty::TraitPredicate {\n                             trait_ref,\n@@ -153,6 +152,13 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n                     }\n                 });\n             }\n+            for ((ty, error_predicate), spans) in errors {\n+                let span: MultiSpan = spans.into();\n+                err.span_note(\n+                    span,\n+                    &format!(\"the `Copy` impl for `{}` requires that `{}`\", ty, error_predicate),\n+                );\n+            }\n             if let Some(generics) = generics {\n                 suggest_constraining_type_params(\n                     tcx,"}, {"sha": "4eb1e318d97c30172b8d92d2579f42f9875360b2", "filename": "src/test/ui/suggestions/missing-bound-in-derive-copy-impl-3.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr?ref=f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "patch": "@@ -14,9 +14,6 @@ note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n    |\n LL |     pub loc: Vector2<K>,\n    |     ^^^^^^^^^^^^^^^^^^^\n-note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n-  --> $DIR/missing-bound-in-derive-copy-impl-3.rs:13:5\n-   |\n LL |     pub size: Vector2<K>\n    |     ^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "1cf2ab95bc3a8a6a878bc59cebb36c28a9906a82", "filename": "src/test/ui/suggestions/missing-bound-in-derive-copy-impl.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9aa2e02cdfdeea64ed58d2956047c2c155186f3/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr?ref=f9aa2e02cdfdeea64ed58d2956047c2c155186f3", "patch": "@@ -14,9 +14,6 @@ note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n    |\n LL |     pub loc: Vector2<K>,\n    |     ^^^^^^^^^^^^^^^^^^^\n-note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n-  --> $DIR/missing-bound-in-derive-copy-impl.rs:12:5\n-   |\n LL |     pub size: Vector2<K>\n    |     ^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)"}]}