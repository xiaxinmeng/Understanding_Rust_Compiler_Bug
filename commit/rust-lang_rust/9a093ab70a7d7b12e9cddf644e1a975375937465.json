{"sha": "9a093ab70a7d7b12e9cddf644e1a975375937465", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMDkzYWI3MGE3ZDdiMTJlOWNkZGY2NDRlMWE5NzUzNzU5Mzc0NjU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-17T23:33:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-23T22:23:02Z"}, "message": "extra: change workcache::Work::unwrap to move out of self.", "tree": {"sha": "5347cb55cd5f3b455dd2bc7f4fa37528e1355494", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5347cb55cd5f3b455dd2bc7f4fa37528e1355494"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a093ab70a7d7b12e9cddf644e1a975375937465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a093ab70a7d7b12e9cddf644e1a975375937465", "html_url": "https://github.com/rust-lang/rust/commit/9a093ab70a7d7b12e9cddf644e1a975375937465", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a093ab70a7d7b12e9cddf644e1a975375937465/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5803e67eecda097932424a6c7b52cd1addd76b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5803e67eecda097932424a6c7b52cd1addd76b9", "html_url": "https://github.com/rust-lang/rust/commit/d5803e67eecda097932424a6c7b52cd1addd76b9"}], "stats": {"total": 44, "additions": 18, "deletions": 26}, "files": [{"sha": "191dd6460cd06b9c1de4c98310db46961ac5ad04", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 18, "deletions": 26, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9a093ab70a7d7b12e9cddf644e1a975375937465/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a093ab70a7d7b12e9cddf644e1a975375937465/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=9a093ab70a7d7b12e9cddf644e1a975375937465", "patch": "@@ -330,37 +330,29 @@ impl<T:Send +\n     pub fn new(p: @mut Prep, e: Either<T,PortOne<(Exec,T)>>) -> Work<T> {\n         Work { prep: p, res: Some(e) }\n     }\n-}\n \n-// FIXME (#3724): movable self. This should be in impl Work.\n-fn unwrap<T:Send +\n-            Encodable<json::Encoder> +\n-            Decodable<json::Decoder>>( // FIXME(#5121)\n-        w: Work<T>) -> T {\n-    let mut ww = w;\n-    let s = ww.res.take();\n-\n-    match s {\n-        None => fail!(),\n-        Some(Left(v)) => v,\n-        Some(Right(port)) => {\n-            let (exe, v) = recv_one(port);\n-\n-            let s = json_encode(&v);\n-\n-            let p = &*ww.prep;\n-            do p.ctxt.db.write |db| {\n-                db.cache(p.fn_name,\n-                         &p.declared_inputs,\n-                         &exe.discovered_inputs,\n-                         &exe.discovered_outputs,\n-                         s);\n+    pub fn unwrap(self) -> T {\n+        let Work { prep, res } = self;\n+        match res {\n+            None => fail!(),\n+            Some(Left(v)) => v,\n+            Some(Right(port)) => {\n+                let (exe, v) = recv_one(port);\n+                let s = json_encode(&v);\n+                do prep.ctxt.db.write |db| {\n+                    db.cache(prep.fn_name,\n+                             &prep.declared_inputs,\n+                             &exe.discovered_inputs,\n+                             &exe.discovered_outputs,\n+                             s);\n+                }\n+                v\n             }\n-            v\n         }\n     }\n }\n \n+\n //#[test]\n fn test() {\n     use std::io::WriterUtil;\n@@ -385,6 +377,6 @@ fn test() {\n             out.to_str()\n         }\n     };\n-    let s = unwrap(w);\n+    let s = w.unwrap();\n     io::println(s);\n }"}]}