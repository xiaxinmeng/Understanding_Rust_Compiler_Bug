{"sha": "88df0e391842f89dbd95fb8e375e11d8263ae156", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZGYwZTM5MTg0MmY4OWRiZDk1ZmI4ZTM3NWUxMWQ4MjYzYWUxNTY=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-27T00:08:27Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-27T17:55:41Z"}, "message": "Fix arguments on Redox", "tree": {"sha": "445e6abf8f088a1168acfc9da8a36e4ec1f37ea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/445e6abf8f088a1168acfc9da8a36e4ec1f37ea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88df0e391842f89dbd95fb8e375e11d8263ae156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88df0e391842f89dbd95fb8e375e11d8263ae156", "html_url": "https://github.com/rust-lang/rust/commit/88df0e391842f89dbd95fb8e375e11d8263ae156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88df0e391842f89dbd95fb8e375e11d8263ae156/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86896ba0be624a9c09a07cc816bd972e032e4bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/86896ba0be624a9c09a07cc816bd972e032e4bc8", "html_url": "https://github.com/rust-lang/rust/commit/86896ba0be624a9c09a07cc816bd972e032e4bc8"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "212895d7b76fc661e2db49144288813d0ccffb5c", "filename": "src/libstd/sys/redox/args.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88df0e391842f89dbd95fb8e375e11d8263ae156/src%2Flibstd%2Fsys%2Fredox%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88df0e391842f89dbd95fb8e375e11d8263ae156/src%2Flibstd%2Fsys%2Fredox%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fargs.rs?ref=88df0e391842f89dbd95fb8e375e11d8263ae156", "patch": "@@ -52,10 +52,9 @@ impl DoubleEndedIterator for Args {\n mod imp {\n     use os::unix::prelude::*;\n     use mem;\n-    use ffi::OsString;\n+    use ffi::{CStr, OsString};\n     use marker::PhantomData;\n-    use slice;\n-    use str;\n+    use libc;\n     use super::Args;\n \n     use sys_common::mutex::Mutex;\n@@ -64,12 +63,9 @@ mod imp {\n     static LOCK: Mutex = Mutex::new();\n \n     pub unsafe fn init(argc: isize, argv: *const *const u8) {\n-        let mut args: Vec<Vec<u8>> = Vec::new();\n-        for i in 0..argc {\n-            let len = *(argv.offset(i * 2)) as usize;\n-            let ptr = *(argv.offset(i * 2 + 1));\n-            args.push(slice::from_raw_parts(ptr, len).to_vec());\n-        }\n+        let args = (0..argc).map(|i| {\n+            CStr::from_ptr(*argv.offset(i) as *const libc::c_char).to_bytes().to_vec()\n+        }).collect();\n \n         LOCK.lock();\n         let ptr = get_global_ptr();"}]}