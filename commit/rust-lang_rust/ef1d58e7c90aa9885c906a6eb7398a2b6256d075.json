{"sha": "ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMWQ1OGU3YzkwYWE5ODg1YzkwNmE2ZWI3Mzk4YTJiNjI1NmQwNzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-12T18:50:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-12T18:50:20Z"}, "message": "Auto merge of #75354 - estebank:tuple-struct-as-struct-pat, r=petrochenkov\n\nDetect tuple variants used as struct pattern and suggest correct pattern\n\nFix #61326\n\nr? @petrochenkov", "tree": {"sha": "c0788874d3b69212d35bbd020a33502a03f7db58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0788874d3b69212d35bbd020a33502a03f7db58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "html_url": "https://github.com/rust-lang/rust/commit/ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "url": "https://api.github.com/repos/rust-lang/rust/commits/3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "html_url": "https://github.com/rust-lang/rust/commit/3df25ae186e89c885d9a71cd37fbd7a37e39fc85"}, {"sha": "17ada052e7f8b785eaadb6fb49197357ad644d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/17ada052e7f8b785eaadb6fb49197357ad644d65", "html_url": "https://github.com/rust-lang/rust/commit/17ada052e7f8b785eaadb6fb49197357ad644d65"}], "stats": {"total": 57, "additions": 43, "deletions": 14}, "files": [{"sha": "f0ea325d2ab740521d09d79c92cd1cf3c45eb423", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "patch": "@@ -701,7 +701,16 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n                 if let Some(span) = self.def_span(def_id) {\n                     err.span_label(span, &format!(\"`{}` defined here\", path_str));\n                 }\n-                err.span_label(span, format!(\"did you mean `{}( /* fields */ )`?\", path_str));\n+                let fields =\n+                    self.r.field_names.get(&def_id).map_or(\"/* fields */\".to_string(), |fields| {\n+                        vec![\"_\"; fields.len()].join(\", \")\n+                    });\n+                err.span_suggestion(\n+                    span,\n+                    \"use the tuple variant pattern syntax instead\",\n+                    format!(\"{}({})\", path_str, fields),\n+                    Applicability::HasPlaceholders,\n+                );\n             }\n             (Res::SelfTy(..), _) if ns == ValueNS => {\n                 err.span_label(span, fallback_label);"}, {"sha": "7b0d9717e63a2bfeff13615842e12727a09271e0", "filename": "src/test/ui/empty/empty-struct-tuple-pat.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr?ref=ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "patch": "@@ -23,23 +23,29 @@ LL |     Empty4()\n    |     -------- `E::Empty4` defined here\n ...\n LL |         E::Empty4 => ()\n-   |         ^^^^^^^^^ did you mean `E::Empty4( /* fields */ )`?\n+   |         ^^^^^^^^^ help: use the tuple variant pattern syntax instead: `E::Empty4()`\n \n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `XE::XEmpty5`\n   --> $DIR/empty-struct-tuple-pat.rs:33:9\n    |\n LL |         XE::XEmpty5 => (),\n-   |         ^^^^-------\n-   |         |   |\n-   |         |   help: a unit variant with a similar name exists: `XEmpty4`\n-   |         did you mean `XE::XEmpty5( /* fields */ )`?\n+   |         ^^^^^^^^^^^\n    | \n   ::: $DIR/auxiliary/empty-struct.rs:7:5\n    |\n LL |     XEmpty4,\n    |     ------- similarly named unit variant `XEmpty4` defined here\n LL |     XEmpty5(),\n    |     --------- `XE::XEmpty5` defined here\n+   |\n+help: use the tuple variant pattern syntax instead\n+   |\n+LL |         XE::XEmpty5(/* fields */) => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: a unit variant with a similar name exists\n+   |\n+LL |         XE::XEmpty4 => (),\n+   |             ^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "f95afb9c1fdc76cbea779302c4d934920896de5f", "filename": "src/test/ui/issues/issue-32004.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr?ref=ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "patch": "@@ -7,10 +7,16 @@ LL |     Baz\n    |     --- similarly named unit variant `Baz` defined here\n ...\n LL |         Foo::Bar => {}\n-   |         ^^^^^---\n-   |         |    |\n-   |         |    help: a unit variant with a similar name exists: `Baz`\n-   |         did you mean `Foo::Bar( /* fields */ )`?\n+   |         ^^^^^^^^\n+   |\n+help: use the tuple variant pattern syntax instead\n+   |\n+LL |         Foo::Bar(_) => {}\n+   |         ^^^^^^^^^^^\n+help: a unit variant with a similar name exists\n+   |\n+LL |         Foo::Baz => {}\n+   |              ^^^\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `S`\n   --> $DIR/issue-32004.rs:16:9"}, {"sha": "eb0428341020f6966b3392cdf41548ec570f631a", "filename": "src/test/ui/issues/issue-63983.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fissues%2Fissue-63983.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fissues%2Fissue-63983.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-63983.stderr?ref=ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "patch": "@@ -5,7 +5,7 @@ LL |     Tuple(i32),\n    |     ---------- `MyEnum::Tuple` defined here\n ...\n LL |         MyEnum::Tuple => \"\",\n-   |         ^^^^^^^^^^^^^ did you mean `MyEnum::Tuple( /* fields */ )`?\n+   |         ^^^^^^^^^^^^^ help: use the tuple variant pattern syntax instead: `MyEnum::Tuple(_)`\n \n error[E0532]: expected unit struct, unit variant or constant, found struct variant `MyEnum::Struct`\n   --> $DIR/issue-63983.rs:10:9"}, {"sha": "1bcef450bb9be4706477d6367ec7cb91c7da1058", "filename": "src/test/ui/parser/recover-from-bad-variant.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.rs?ref=ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "patch": "@@ -9,6 +9,7 @@ fn main() {\n     match x {\n         Enum::Foo(a, b) => {}\n         //~^ ERROR expected tuple struct or tuple variant, found struct variant `Enum::Foo`\n-        Enum::Bar(a, b) => {}\n+        Enum::Bar { a, b } => {}\n+        //~^ ERROR tuple variant `Enum::Bar` written as struct variant\n     }\n }"}, {"sha": "89232a519d7b2443c74389f4f993d32eef9e32ce", "filename": "src/test/ui/parser/recover-from-bad-variant.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef1d58e7c90aa9885c906a6eb7398a2b6256d075/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.stderr?ref=ef1d58e7c90aa9885c906a6eb7398a2b6256d075", "patch": "@@ -18,6 +18,13 @@ LL |     Foo { a: usize, b: usize },\n LL |         Enum::Foo(a, b) => {}\n    |         ^^^^^^^^^^^^^^^ help: use struct pattern syntax instead: `Enum::Foo { a, b }`\n \n-error: aborting due to 2 previous errors\n+error[E0769]: tuple variant `Enum::Bar` written as struct variant\n+  --> $DIR/recover-from-bad-variant.rs:12:9\n+   |\n+LL |         Enum::Bar { a, b } => {}\n+   |         ^^^^^^^^^^^^^^^^^^ help: use the tuple variant pattern syntax instead: `Enum::Bar(a, b)`\n+\n+error: aborting due to 3 previous errors\n \n-For more information about this error, try `rustc --explain E0532`.\n+Some errors have detailed explanations: E0532, E0769.\n+For more information about an error, try `rustc --explain E0532`."}]}