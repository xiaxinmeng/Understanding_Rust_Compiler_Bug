{"sha": "a4bba694c0bdf35142682374cb01c3083e11ebae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YmJhNjk0YzBiZGYzNTE0MjY4MjM3NGNiMDFjMzA4M2UxMWViYWU=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-05-06T05:49:45Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-05-06T05:49:45Z"}, "message": "Clean up while_loop tests\n\nAt some stage, we started adding test cases inside the function which tests\nrefutable patterns. This commits splits those test cases out into separate\nfunctions.", "tree": {"sha": "24560b71dbea67056cbf528accd82a32848d7421", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24560b71dbea67056cbf528accd82a32848d7421"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4bba694c0bdf35142682374cb01c3083e11ebae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4bba694c0bdf35142682374cb01c3083e11ebae", "html_url": "https://github.com/rust-lang/rust/commit/a4bba694c0bdf35142682374cb01c3083e11ebae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4bba694c0bdf35142682374cb01c3083e11ebae/comments", "author": null, "committer": null, "parents": [{"sha": "fc96aa036884183ddc68d2659f4633e6f138b4e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc96aa036884183ddc68d2659f4633e6f138b4e0", "html_url": "https://github.com/rust-lang/rust/commit/fc96aa036884183ddc68d2659f4633e6f138b4e0"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "005ce141d27a3f580e9183bb5110cf597afd545e", "filename": "tests/ui/while_loop.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a4bba694c0bdf35142682374cb01c3083e11ebae/tests%2Fui%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4bba694c0bdf35142682374cb01c3083e11ebae/tests%2Fui%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.rs?ref=a4bba694c0bdf35142682374cb01c3083e11ebae", "patch": "@@ -169,7 +169,10 @@ fn refutable() {\n     for &(1, 2, 3) in b {}\n     for &Option::None in b.next() {}\n     // */\n+}\n \n+fn nested_loops() {\n+    let a = [42, 1337];\n     let mut y = a.iter();\n     loop {\n         // x is reused, so don't lint here\n@@ -189,7 +192,9 @@ fn refutable() {\n             // use a for loop here\n         }\n     }\n+}\n \n+fn issue1948() {\n     // should not trigger clippy::while_let_loop lint because break passes an expression\n     let a = Some(10);\n     let b = loop {\n@@ -199,31 +204,37 @@ fn refutable() {\n             break None;\n         }\n     };\n+}\n \n+fn issue1121() {\n     use std::collections::HashSet;\n     let mut values = HashSet::new();\n     values.insert(1);\n \n     while let Some(&value) = values.iter().next() {\n         values.remove(&value);\n     }\n+}\n \n+fn issue2965() {\n     // This should not cause an ICE and suggest:\n     //\n     // for _ in values.iter() {}\n     //\n-    // See #2965\n+    use std::collections::HashSet;\n+    let mut values = HashSet::new();\n+    values.insert(1);\n+\n     while let Some(..) = values.iter().next() {\n         values.remove(&1);\n     }\n+}\n \n-    // Issue 3670\n-    {\n-        let array = [Some(0), None, Some(1)];\n-        let mut iter = array.iter();\n+fn issue3670() {\n+    let array = [Some(0), None, Some(1)];\n+    let mut iter = array.iter();\n \n-        while let Some(elem) = iter.next() {\n-            let _ = elem.or_else(|| *iter.next()?);\n-        }\n+    while let Some(elem) = iter.next() {\n+        let _ = elem.or_else(|| *iter.next()?);\n     }\n }"}, {"sha": "4c27ea0b9ba32237532b9982578676c8589a1e59", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4bba694c0bdf35142682374cb01c3083e11ebae/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4bba694c0bdf35142682374cb01c3083e11ebae/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=a4bba694c0bdf35142682374cb01c3083e11ebae", "patch": "@@ -100,13 +100,13 @@ LL |         loop {}\n    = note: `-D clippy::empty-loop` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:188:29\n+  --> $DIR/while_loop.rs:191:29\n    |\n LL |         while let Some(v) = y.next() {\n    |                             ^^^^^^^^ help: try: `for v in y { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:216:26\n+  --> $DIR/while_loop.rs:228:26\n    |\n LL |     while let Some(..) = values.iter().next() {\n    |                          ^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in values.iter() { .. }`"}]}