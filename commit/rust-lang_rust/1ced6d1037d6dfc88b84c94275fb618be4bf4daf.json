{"sha": "1ced6d1037d6dfc88b84c94275fb618be4bf4daf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZWQ2ZDEwMzdkNmRmYzg4Yjg0Yzk0Mjc1ZmI2MThiZTRiZjRkYWY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-01-11T04:40:05Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-01-11T04:40:05Z"}, "message": "Minor refactoring in macros.rs", "tree": {"sha": "48a5d052b59feb4970e6cdfde68f47d9cb53119c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48a5d052b59feb4970e6cdfde68f47d9cb53119c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ced6d1037d6dfc88b84c94275fb618be4bf4daf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ced6d1037d6dfc88b84c94275fb618be4bf4daf", "html_url": "https://github.com/rust-lang/rust/commit/1ced6d1037d6dfc88b84c94275fb618be4bf4daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ced6d1037d6dfc88b84c94275fb618be4bf4daf/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631bf6803713e976fdc8b25f2aa607a0d9572fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/631bf6803713e976fdc8b25f2aa607a0d9572fa5", "html_url": "https://github.com/rust-lang/rust/commit/631bf6803713e976fdc8b25f2aa607a0d9572fa5"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "926c76dce7f06a1fb5b7f4649fd309a27eef4690", "filename": "src/macros.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1ced6d1037d6dfc88b84c94275fb618be4bf4daf/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ced6d1037d6dfc88b84c94275fb618be4bf4daf/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=1ced6d1037d6dfc88b84c94275fb618be4bf4daf", "patch": "@@ -40,7 +40,7 @@ use utils::{format_visibility, mk_sp};\n const FORCED_BRACKET_MACROS: &[&str] = &[\"vec!\"];\n \n // FIXME: use the enum from libsyntax?\n-#[derive(Clone, Copy, PartialEq, Eq)]\n+#[derive(Clone, Copy, PartialEq, Eq, Debug)]\n enum MacroStyle {\n     Parens,\n     Brackets,\n@@ -65,6 +65,7 @@ impl MacroStyle {\n     }\n }\n \n+#[derive(Debug)]\n pub enum MacroArg {\n     Expr(ast::Expr),\n     Ty(ast::Ty),\n@@ -83,16 +84,16 @@ impl Rewrite for MacroArg {\n \n fn parse_macro_arg(parser: &mut Parser) -> Option<MacroArg> {\n     macro_rules! parse_macro_arg {\n-        ($target:tt, $macro_arg:ident, $parser:ident) => {\n+        ($macro_arg: ident, $parser: ident) => {\n             let mut cloned_parser = (*parser).clone();\n             match cloned_parser.$parser() {\n-                Ok($target) => {\n+                Ok(x) => {\n                     if parser.sess.span_diagnostic.has_errors() {\n                         parser.sess.span_diagnostic.reset_err_count();\n                     } else {\n                         // Parsing succeeded.\n                         *parser = cloned_parser;\n-                        return Some(MacroArg::$macro_arg((*$target).clone()));\n+                        return Some(MacroArg::$macro_arg((*x).clone()));\n                     }\n                 }\n                 Err(mut e) => {\n@@ -103,9 +104,9 @@ fn parse_macro_arg(parser: &mut Parser) -> Option<MacroArg> {\n         }\n     }\n \n-    parse_macro_arg!(expr, Expr, parse_expr);\n-    parse_macro_arg!(ty, Ty, parse_ty);\n-    parse_macro_arg!(pat, Pat, parse_pat);\n+    parse_macro_arg!(Expr, parse_expr);\n+    parse_macro_arg!(Ty, parse_ty);\n+    parse_macro_arg!(Pat, parse_pat);\n \n     None\n }"}]}