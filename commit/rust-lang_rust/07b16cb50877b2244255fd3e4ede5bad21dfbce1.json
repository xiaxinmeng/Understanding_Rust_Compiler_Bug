{"sha": "07b16cb50877b2244255fd3e4ede5bad21dfbce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YjE2Y2I1MDg3N2IyMjQ0MjU1ZmQzZTRlZGU1YmFkMjFkZmJjZTE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-04-24T17:32:11Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-04-26T14:45:02Z"}, "message": "don't allocate in get_symbol_hash", "tree": {"sha": "eb08b2f81915d379b3898b6e36b0e24539f068c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb08b2f81915d379b3898b6e36b0e24539f068c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07b16cb50877b2244255fd3e4ede5bad21dfbce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07b16cb50877b2244255fd3e4ede5bad21dfbce1", "html_url": "https://github.com/rust-lang/rust/commit/07b16cb50877b2244255fd3e4ede5bad21dfbce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07b16cb50877b2244255fd3e4ede5bad21dfbce1/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aac5fc0f3754bf8a7ec63119895530616ac7ccc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aac5fc0f3754bf8a7ec63119895530616ac7ccc", "html_url": "https://github.com/rust-lang/rust/commit/9aac5fc0f3754bf8a7ec63119895530616ac7ccc"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "aef9140ba4556cf9b14f927daaf13d12bbadc4a7", "filename": "src/librustc_trans/back/symbol_names.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/07b16cb50877b2244255fd3e4ede5bad21dfbce1/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b16cb50877b2244255fd3e4ede5bad21dfbce1/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs?ref=07b16cb50877b2244255fd3e4ede5bad21dfbce1", "patch": "@@ -137,7 +137,7 @@ fn get_symbol_hash<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                              // values for generic type parameters,\n                              // if any.\n                              substs: Option<&'tcx Substs<'tcx>>)\n-                             -> String {\n+                             -> u64 {\n     debug!(\"get_symbol_hash(def_id={:?}, parameters={:?})\", def_id, substs);\n \n     let mut hasher = ty::util::TypeIdHasher::<u64>::new(tcx);\n@@ -172,7 +172,7 @@ fn get_symbol_hash<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     });\n \n     // 64 bits should be enough to avoid collisions.\n-    format!(\"h{:016x}\", hasher.finish())\n+    hasher.finish()\n }\n \n fn def_symbol_name<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n@@ -280,7 +280,7 @@ fn compute_symbol_name<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, instance: Instance\n \n     let hash = get_symbol_hash(tcx, Some(def_id), instance_ty, Some(substs));\n \n-    SymbolPathBuffer::from_interned(tcx.def_symbol_name(def_id)).finish(&hash)\n+    SymbolPathBuffer::from_interned(tcx.def_symbol_name(def_id)).finish(hash)\n }\n \n // Follow C++ namespace-mangling style, see\n@@ -324,10 +324,9 @@ impl SymbolPathBuffer {\n         ty::SymbolName { name: Symbol::intern(&self.result).as_str() }\n     }\n \n-    fn finish(mut self, hash: &str) -> String {\n-        // end name-sequence\n-        self.push(hash);\n-        self.result.push('E');\n+    fn finish(mut self, hash: u64) -> String {\n+        // E = end name-sequence\n+        let _ = write!(self.result, \"17h{:016x}E\", hash);\n         self.result\n     }\n }\n@@ -356,7 +355,7 @@ pub fn exported_name_from_type_and_prefix<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let hash = get_symbol_hash(tcx, None, t, None);\n     let mut buffer = SymbolPathBuffer::new();\n     buffer.push(prefix);\n-    buffer.finish(&hash)\n+    buffer.finish(hash)\n }\n \n // Name sanitation. LLVM will happily accept identifiers with weird names, but"}]}