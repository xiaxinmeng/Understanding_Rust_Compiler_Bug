{"sha": "b4bff574d2e40ca71a07b661854df894f6a16eef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YmZmNTc0ZDJlNDBjYTcxYTA3YjY2MTg1NGRmODk0ZjZhMTZlZWY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-17T15:49:06Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-17T15:49:06Z"}, "message": "rollup merge of #17277 : steveklabnik/doc_fix_rollup", "tree": {"sha": "b1f6df814075d89bcca830f95bcf86829431406f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1f6df814075d89bcca830f95bcf86829431406f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4bff574d2e40ca71a07b661854df894f6a16eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bff574d2e40ca71a07b661854df894f6a16eef", "html_url": "https://github.com/rust-lang/rust/commit/b4bff574d2e40ca71a07b661854df894f6a16eef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4bff574d2e40ca71a07b661854df894f6a16eef/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a3ac5cb08cc7dc210c6b86abcb4669588e7111", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a3ac5cb08cc7dc210c6b86abcb4669588e7111", "html_url": "https://github.com/rust-lang/rust/commit/e8a3ac5cb08cc7dc210c6b86abcb4669588e7111"}, {"sha": "51b4c515f485b5d8a762d4821a6344d37ecd6898", "url": "https://api.github.com/repos/rust-lang/rust/commits/51b4c515f485b5d8a762d4821a6344d37ecd6898", "html_url": "https://github.com/rust-lang/rust/commit/51b4c515f485b5d8a762d4821a6344d37ecd6898"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "4bfe3854dbaa1f49d4e3d13c7f77894f907f9818", "filename": "src/doc/guide.md", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b4bff574d2e40ca71a07b661854df894f6a16eef/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/b4bff574d2e40ca71a07b661854df894f6a16eef/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=b4bff574d2e40ca71a07b661854df894f6a16eef", "patch": "@@ -392,14 +392,10 @@ By the way, in these examples, `i` indicates that the number is an integer.\n \n Rust is a statically typed language, which means that we specify our types up\n front. So why does our first example compile? Well, Rust has this thing called\n-\"[Hindley-Milner type\n-inference](http://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system)\",\n-named after some really smart type theorists. If you clicked that link, don't\n-be scared: what this means for you is that Rust will attempt to infer the types\n-in your program, and it's pretty good at it. If it can infer the type, Rust\n+\"type inference.\" If it can figure out what the type of something is, Rust\n doesn't require you to actually type it out.\n \n-We can add the type if we want to. Types come after a colon (`:`):\n+We can add the type if we want to, though. Types come after a colon (`:`):\n \n ```{rust}\n let x: int = 5;\n@@ -1281,15 +1277,15 @@ two main looping constructs: `for` and `while`.\n \n The `for` loop is used to loop a particular number of times. Rust's `for` loops\n work a bit differently than in other systems languages, however. Rust's `for`\n-loop doesn't look like this C `for` loop:\n+loop doesn't look like this \"C style\" `for` loop:\n \n-```{ignore,c}\n+```{c}\n for (x = 0; x < 10; x++) {\n     printf( \"%d\\n\", x );\n }\n ```\n \n-It looks like this:\n+Instead, it looks like this:\n \n ```{rust}\n for x in range(0i, 10i) {\n@@ -1312,10 +1308,9 @@ valid for the loop body. Once the body is over, the next value is fetched from\n the iterator, and we loop another time. When there are no more values, the\n `for` loop is over.\n \n-In our example, the `range` function is a function, provided by Rust, that\n-takes a start and an end position, and gives an iterator over those values. The\n-upper bound is exclusive, though, so our loop will print `0` through `9`, not\n-`10`.\n+In our example, `range` is a function that takes a start and an end position,\n+and gives an iterator over those values. The upper bound is exclusive, though,\n+so our loop will print `0` through `9`, not `10`.\n \n Rust does not have the \"C style\" `for` loop on purpose. Manually controlling\n each element of the loop is complicated and error prone, even for experienced C"}, {"sha": "f237bc2ddbc6b21e4fd2b474e7231dc3e65881ec", "filename": "src/doc/index.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4bff574d2e40ca71a07b661854df894f6a16eef/src%2Fdoc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/b4bff574d2e40ca71a07b661854df894f6a16eef/src%2Fdoc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Findex.md?ref=b4bff574d2e40ca71a07b661854df894f6a16eef", "patch": "@@ -86,10 +86,10 @@ There are questions that are asked quite often, and so we've made FAQs for them:\n \n # The standard library\n \n-You can find function-level documentation for the entire standard library\n-[here](std/index.html). There's a list of crates on the left with more specific\n-sections, or you can use the search bar at the top to search for something if\n-you know its name.\n+We have [API documentation for the entire standard\n+library](std/index.html). There's a list of crates on the left with more\n+specific sections, or you can use the search bar at the top to search for\n+something if you know its name.\n \n # External documentation\n "}]}