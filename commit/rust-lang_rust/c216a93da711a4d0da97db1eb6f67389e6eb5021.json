{"sha": "c216a93da711a4d0da97db1eb6f67389e6eb5021", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMTZhOTNkYTcxMWE0ZDBkYTk3ZGIxZWI2ZjY3Mzg5ZTZlYjUwMjE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-10T15:44:29Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-13T14:18:25Z"}, "message": "Upgrade Chalk", "tree": {"sha": "e01837f1d54d587d9d4638ab1efbf3fa68ae3680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e01837f1d54d587d9d4638ab1efbf3fa68ae3680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c216a93da711a4d0da97db1eb6f67389e6eb5021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c216a93da711a4d0da97db1eb6f67389e6eb5021", "html_url": "https://github.com/rust-lang/rust/commit/c216a93da711a4d0da97db1eb6f67389e6eb5021", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c216a93da711a4d0da97db1eb6f67389e6eb5021/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c388130f5ffbcbe7d3131213a24d12d02f769b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/c388130f5ffbcbe7d3131213a24d12d02f769b87", "html_url": "https://github.com/rust-lang/rust/commit/c388130f5ffbcbe7d3131213a24d12d02f769b87"}], "stats": {"total": 110, "additions": 88, "deletions": 22}, "files": [{"sha": "506efdad0275e6b3371806b10befea4fb7bc4bee", "filename": "Cargo.lock", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c216a93da711a4d0da97db1eb6f67389e6eb5021/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c216a93da711a4d0da97db1eb6f67389e6eb5021/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=c216a93da711a4d0da97db1eb6f67389e6eb5021", "patch": "@@ -114,17 +114,18 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n [[package]]\n name = \"chalk-derive\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=039fc904a05f8cb3d0c682c9a57a63dda7a35356#039fc904a05f8cb3d0c682c9a57a63dda7a35356\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=6222e416b96892b2a86bc08de7dbc9826ff1acea#6222e416b96892b2a86bc08de7dbc9826ff1acea\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n  \"syn\",\n+ \"synstructure\",\n ]\n \n [[package]]\n name = \"chalk-engine\"\n version = \"0.9.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=039fc904a05f8cb3d0c682c9a57a63dda7a35356#039fc904a05f8cb3d0c682c9a57a63dda7a35356\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=6222e416b96892b2a86bc08de7dbc9826ff1acea#6222e416b96892b2a86bc08de7dbc9826ff1acea\"\n dependencies = [\n  \"chalk-macros\",\n  \"rustc-hash\",\n@@ -133,7 +134,7 @@ dependencies = [\n [[package]]\n name = \"chalk-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=039fc904a05f8cb3d0c682c9a57a63dda7a35356#039fc904a05f8cb3d0c682c9a57a63dda7a35356\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=6222e416b96892b2a86bc08de7dbc9826ff1acea#6222e416b96892b2a86bc08de7dbc9826ff1acea\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-engine\",\n@@ -143,15 +144,15 @@ dependencies = [\n [[package]]\n name = \"chalk-macros\"\n version = \"0.1.1\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=039fc904a05f8cb3d0c682c9a57a63dda7a35356#039fc904a05f8cb3d0c682c9a57a63dda7a35356\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=6222e416b96892b2a86bc08de7dbc9826ff1acea#6222e416b96892b2a86bc08de7dbc9826ff1acea\"\n dependencies = [\n  \"lazy_static\",\n ]\n \n [[package]]\n name = \"chalk-rust-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=039fc904a05f8cb3d0c682c9a57a63dda7a35356#039fc904a05f8cb3d0c682c9a57a63dda7a35356\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=6222e416b96892b2a86bc08de7dbc9826ff1acea#6222e416b96892b2a86bc08de7dbc9826ff1acea\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-engine\",\n@@ -162,7 +163,7 @@ dependencies = [\n [[package]]\n name = \"chalk-solve\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=039fc904a05f8cb3d0c682c9a57a63dda7a35356#039fc904a05f8cb3d0c682c9a57a63dda7a35356\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=6222e416b96892b2a86bc08de7dbc9826ff1acea#6222e416b96892b2a86bc08de7dbc9826ff1acea\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-engine\",\n@@ -1564,6 +1565,18 @@ dependencies = [\n  \"unicode-xid\",\n ]\n \n+[[package]]\n+name = \"synstructure\"\n+version = \"0.12.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"67656ea1dc1b41b1451851562ea232ec2e5a80242139f7e679ceccfb5d61f545\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+ \"unicode-xid\",\n+]\n+\n [[package]]\n name = \"tempfile\"\n version = \"3.1.0\""}, {"sha": "aaee235d89f922721a2d47b100291ce22ebe434e", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c216a93da711a4d0da97db1eb6f67389e6eb5021/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c216a93da711a4d0da97db1eb6f67389e6eb5021/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=c216a93da711a4d0da97db1eb6f67389e6eb5021", "patch": "@@ -26,9 +26,9 @@ test_utils = { path = \"../test_utils\" }\n \n scoped-tls = \"1\"\n \n-chalk-solve =   { git = \"https://github.com/rust-lang/chalk.git\", rev = \"039fc904a05f8cb3d0c682c9a57a63dda7a35356\" }\n-chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"039fc904a05f8cb3d0c682c9a57a63dda7a35356\" }\n-chalk-ir =      { git = \"https://github.com/rust-lang/chalk.git\", rev = \"039fc904a05f8cb3d0c682c9a57a63dda7a35356\" }\n+chalk-solve =   { git = \"https://github.com/rust-lang/chalk.git\", rev = \"6222e416b96892b2a86bc08de7dbc9826ff1acea\" }\n+chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"6222e416b96892b2a86bc08de7dbc9826ff1acea\" }\n+chalk-ir =      { git = \"https://github.com/rust-lang/chalk.git\", rev = \"6222e416b96892b2a86bc08de7dbc9826ff1acea\" }\n \n [dev-dependencies]\n insta = \"0.15.0\""}, {"sha": "f6994a1f6fd8316478a60c52d0aaeb9f5efce18e", "filename": "crates/ra_hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 66, "deletions": 13, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c216a93da711a4d0da97db1eb6f67389e6eb5021/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c216a93da711a4d0da97db1eb6f67389e6eb5021/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=c216a93da711a4d0da97db1eb6f67389e6eb5021", "patch": "@@ -32,6 +32,9 @@ impl chalk_ir::interner::Interner for Interner {\n     type InternedGoal = Arc<GoalData<Self>>;\n     type InternedGoals = Vec<Goal<Self>>;\n     type InternedSubstitution = Vec<Parameter<Self>>;\n+    type InternedProgramClause = chalk_ir::ProgramClauseData<Self>;\n+    type InternedProgramClauses = Vec<chalk_ir::ProgramClause<Self>>;\n+    type InternedQuantifiedWhereClauses = Vec<chalk_ir::QuantifiedWhereClause<Self>>;\n     type Identifier = TypeAliasId;\n     type DefId = InternId;\n \n@@ -181,6 +184,48 @@ impl chalk_ir::interner::Interner for Interner {\n     ) -> &'a [Parameter<Self>] {\n         substitution\n     }\n+\n+    fn intern_program_clause(\n+        &self,\n+        data: chalk_ir::ProgramClauseData<Self>,\n+    ) -> chalk_ir::ProgramClauseData<Self> {\n+        data\n+    }\n+\n+    fn program_clause_data<'a>(\n+        &self,\n+        clause: &'a chalk_ir::ProgramClauseData<Self>,\n+    ) -> &'a chalk_ir::ProgramClauseData<Self> {\n+        clause\n+    }\n+\n+    fn intern_program_clauses(\n+        &self,\n+        data: impl IntoIterator<Item = chalk_ir::ProgramClause<Self>>,\n+    ) -> Vec<chalk_ir::ProgramClause<Self>> {\n+        data.into_iter().collect()\n+    }\n+\n+    fn program_clauses_data<'a>(\n+        &self,\n+        clauses: &'a Vec<chalk_ir::ProgramClause<Self>>,\n+    ) -> &'a [chalk_ir::ProgramClause<Self>] {\n+        clauses\n+    }\n+\n+    fn intern_quantified_where_clauses(\n+        &self,\n+        data: impl IntoIterator<Item = chalk_ir::QuantifiedWhereClause<Self>>,\n+    ) -> Self::InternedQuantifiedWhereClauses {\n+        data.into_iter().collect()\n+    }\n+\n+    fn quantified_where_clauses_data<'a>(\n+        &self,\n+        clauses: &'a Self::InternedQuantifiedWhereClauses,\n+    ) -> &'a [chalk_ir::QuantifiedWhereClause<Self>] {\n+        clauses\n+    }\n }\n \n impl chalk_ir::interner::HasInterner for Interner {\n@@ -238,12 +283,10 @@ impl ToChalk for Ty {\n             Ty::Bound(idx) => chalk_ir::TyData::BoundVar(idx).intern(&Interner),\n             Ty::Infer(_infer_ty) => panic!(\"uncanonicalized infer ty\"),\n             Ty::Dyn(predicates) => {\n-                let where_clauses = predicates\n-                    .iter()\n-                    .filter(|p| !p.is_error())\n-                    .cloned()\n-                    .map(|p| p.to_chalk(db))\n-                    .collect();\n+                let where_clauses = chalk_ir::QuantifiedWhereClauses::from(\n+                    &Interner,\n+                    predicates.iter().filter(|p| !p.is_error()).cloned().map(|p| p.to_chalk(db)),\n+                );\n                 let bounded_ty = chalk_ir::DynTy { bounds: make_binders(where_clauses, 1) };\n                 chalk_ir::TyData::Dyn(bounded_ty).intern(&Interner)\n             }\n@@ -281,8 +324,12 @@ impl ToChalk for Ty {\n             chalk_ir::TyData::InferenceVar(_iv) => Ty::Unknown,\n             chalk_ir::TyData::Dyn(where_clauses) => {\n                 assert_eq!(where_clauses.bounds.binders.len(), 1);\n-                let predicates =\n-                    where_clauses.bounds.value.into_iter().map(|c| from_chalk(db, c)).collect();\n+                let predicates = where_clauses\n+                    .bounds\n+                    .skip_binders()\n+                    .iter(&Interner)\n+                    .map(|c| from_chalk(db, c.clone()))\n+                    .collect();\n                 Ty::Dyn(predicates)\n             }\n         }\n@@ -426,7 +473,7 @@ impl ToChalk for GenericPredicate {\n     ) -> GenericPredicate {\n         // we don't produce any where clauses with binders and can't currently deal with them\n         match where_clause\n-            .value\n+            .skip_binders()\n             .shifted_out(&Interner)\n             .expect(\"unexpected bound vars in where clause\")\n         {\n@@ -521,7 +568,7 @@ impl ToChalk for Arc<super::TraitEnvironment> {\n                 pred.clone().to_chalk(db).cast(&Interner);\n             clauses.push(program_clause.into_from_env_clause(&Interner));\n         }\n-        chalk_ir::Environment::new().add_clauses(clauses)\n+        chalk_ir::Environment::new(&Interner).add_clauses(&Interner, clauses)\n     }\n \n     fn from_chalk(\n@@ -603,10 +650,10 @@ impl ToChalk for builtin::BuiltinImplAssocTyValueData {\n }\n \n fn make_binders<T>(value: T, num_vars: usize) -> chalk_ir::Binders<T> {\n-    chalk_ir::Binders {\n+    chalk_ir::Binders::new(\n+        std::iter::repeat(chalk_ir::ParameterKind::Ty(())).take(num_vars).collect(),\n         value,\n-        binders: std::iter::repeat(chalk_ir::ParameterKind::Ty(())).take(num_vars).collect(),\n-    }\n+    )\n }\n \n fn convert_where_clauses(\n@@ -696,6 +743,12 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n     fn interner(&self) -> &Interner {\n         &Interner\n     }\n+    fn well_known_trait_id(\n+        &self,\n+        _well_known_trait: chalk_rust_ir::WellKnownTrait,\n+    ) -> chalk_ir::TraitId<Interner> {\n+        unimplemented!()\n+    }\n }\n \n pub(crate) fn associated_ty_data_query("}]}