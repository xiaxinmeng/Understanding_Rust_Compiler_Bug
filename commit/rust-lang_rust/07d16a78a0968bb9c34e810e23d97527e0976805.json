{"sha": "07d16a78a0968bb9c34e810e23d97527e0976805", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZDE2YTc4YTA5NjhiYjljMzRlODEwZTIzZDk3NTI3ZTA5NzY4MDU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-20T19:14:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-20T19:14:47Z"}, "message": "Rollup merge of #46122 - malbarbo:docs, r=steveklabnik\n\nFix some docs summary nits", "tree": {"sha": "673ff126869e17c51a1e2190843bb46e1be45f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/673ff126869e17c51a1e2190843bb46e1be45f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07d16a78a0968bb9c34e810e23d97527e0976805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07d16a78a0968bb9c34e810e23d97527e0976805", "html_url": "https://github.com/rust-lang/rust/commit/07d16a78a0968bb9c34e810e23d97527e0976805", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07d16a78a0968bb9c34e810e23d97527e0976805/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b9c250025c4a310347d3384634d924f04f468c", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b9c250025c4a310347d3384634d924f04f468c", "html_url": "https://github.com/rust-lang/rust/commit/04b9c250025c4a310347d3384634d924f04f468c"}, {"sha": "941852eef300b3bee42fc6e2ee48cbf40cb9fc3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/941852eef300b3bee42fc6e2ee48cbf40cb9fc3f", "html_url": "https://github.com/rust-lang/rust/commit/941852eef300b3bee42fc6e2ee48cbf40cb9fc3f"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "77f65412bd3e199d0d03d35a32635101d595d0c2", "filename": "src/liballoc/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Fliballoc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Fliballoc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ffmt.rs?ref=07d16a78a0968bb9c34e810e23d97527e0976805", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Utilities for formatting and printing `String`s\n+//! Utilities for formatting and printing `String`s.\n //!\n //! This module contains the runtime support for the [`format!`] syntax extension.\n //! This macro is implemented in the compiler to emit calls to this module in"}, {"sha": "122baec8e58dc6d91d7bbc9a1decc0581f8e771d", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=07d16a78a0968bb9c34e810e23d97527e0976805", "patch": "@@ -361,7 +361,7 @@ macro_rules! try {\n     })\n }\n \n-/// Write formatted data into a buffer\n+/// Write formatted data into a buffer.\n ///\n /// This macro accepts a format string, a list of arguments, and a 'writer'. Arguments will be\n /// formatted according to the specified format string and the result will be passed to the writer."}, {"sha": "645a4c2115095e575c5c0d72935fb2e6faceb0ed", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=07d16a78a0968bb9c34e810e23d97527e0976805", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n //! This module provides constants which are specific to the implementation\n-//! of the `f32` floating point data type. Mathematically significant\n-//! numbers are provided in the `consts` sub-module.\n+//! of the `f32` floating point data type.\n+//!\n+//! Mathematically significant numbers are provided in the `consts` sub-module.\n //!\n //! *[See also the `f32` primitive type](../primitive.f32.html).*\n "}, {"sha": "7fd798155bd5957a87ebf8e5b5271fbc61d6f459", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=07d16a78a0968bb9c34e810e23d97527e0976805", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n //! This module provides constants which are specific to the implementation\n-//! of the `f64` floating point data type. Mathematically significant\n-//! numbers are provided in the `consts` sub-module.\n+//! of the `f64` floating point data type.\n+//!\n+//! Mathematically significant numbers are provided in the `consts` sub-module.\n //!\n //! *[See also the `f64` primitive type](../primitive.f64.html).*\n "}, {"sha": "219e55d6c12062baf44552036ca1eac14d2a450a", "filename": "src/libstd/panic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibstd%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07d16a78a0968bb9c34e810e23d97527e0976805/src%2Flibstd%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanic.rs?ref=07d16a78a0968bb9c34e810e23d97527e0976805", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Panic support in the standard library\n+//! Panic support in the standard library.\n \n #![stable(feature = \"std_panic\", since = \"1.9.0\")]\n "}]}