{"sha": "806c7281ec1905423aa4569d79940b59efc1905a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNmM3MjgxZWMxOTA1NDIzYWE0NTY5ZDc5OTQwYjU5ZWZjMTkwNWE=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-12-02T14:38:37Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-12-02T15:41:01Z"}, "message": "add comment to `visit_ct_substs`", "tree": {"sha": "6fea763d38f0ed43b1d2429f85699d6ee1218bca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fea763d38f0ed43b1d2429f85699d6ee1218bca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/806c7281ec1905423aa4569d79940b59efc1905a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/806c7281ec1905423aa4569d79940b59efc1905a", "html_url": "https://github.com/rust-lang/rust/commit/806c7281ec1905423aa4569d79940b59efc1905a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/806c7281ec1905423aa4569d79940b59efc1905a/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71d75503506880efa89c902465cdcb205d0eb9e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/71d75503506880efa89c902465cdcb205d0eb9e5", "html_url": "https://github.com/rust-lang/rust/commit/71d75503506880efa89c902465cdcb205d0eb9e5"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "987380304d2222fb04f4b17da46ef640300d99e5", "filename": "compiler/rustc_infer/src/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/806c7281ec1905423aa4569d79940b59efc1905a/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/806c7281ec1905423aa4569d79940b59efc1905a/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs?ref=806c7281ec1905423aa4569d79940b59efc1905a", "patch": "@@ -881,9 +881,7 @@ impl TypeRelation<'tcx> for ConstInferUnifier<'_, 'tcx> {\n                     }\n                 }\n             }\n-            ty::Infer(ty::IntVar(_) | ty::FloatVar(_)) => {\n-                Ok(t)\n-            }\n+            ty::Infer(ty::IntVar(_) | ty::FloatVar(_)) => Ok(t),\n             _ => relate::super_relate_tys(self, t, t),\n         }\n     }"}, {"sha": "ea4e731086fb188fa7fa561bbf35bc04d7d7b208", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/806c7281ec1905423aa4569d79940b59efc1905a/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/806c7281ec1905423aa4569d79940b59efc1905a/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=806c7281ec1905423aa4569d79940b59efc1905a", "patch": "@@ -33,6 +33,11 @@ pub trait TypeRelation<'tcx>: Sized {\n     /// relation. Just affects error messages.\n     fn a_is_expected(&self) -> bool;\n \n+    /// Whether we should look into the substs of unevaluated constants\n+    /// even if `feature(const_evaluatable_checked)` is active.\n+    ///\n+    /// This is needed in `combine` to prevent accidentially creating\n+    /// infinite types as we abuse `TypeRelation` to walk a type there.\n     fn visit_ct_substs(&self) -> bool {\n         false\n     }"}]}