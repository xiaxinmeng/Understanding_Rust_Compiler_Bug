{"sha": "fd8947095678c61c5cbc70509e053621baca282d", "node_id": "C_kwDOAAsO6NoAKGZkODk0NzA5NTY3OGM2MWM1Y2JjNzA1MDllMDUzNjIxYmFjYTI4MmQ", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2023-02-16T14:22:01Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2023-02-16T14:22:08Z"}, "message": "Document that CStr::as_ptr returns a type alias\n\nWorkaround for #15823", "tree": {"sha": "aebd9f31200603b7124e914996b91fe9e6343067", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aebd9f31200603b7124e914996b91fe9e6343067"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd8947095678c61c5cbc70509e053621baca282d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8947095678c61c5cbc70509e053621baca282d", "html_url": "https://github.com/rust-lang/rust/commit/fd8947095678c61c5cbc70509e053621baca282d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd8947095678c61c5cbc70509e053621baca282d/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af3c8b27266e290cf65704284f6862d0f90ee4fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/af3c8b27266e290cf65704284f6862d0f90ee4fc", "html_url": "https://github.com/rust-lang/rust/commit/af3c8b27266e290cf65704284f6862d0f90ee4fc"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "87f077325f8bef527102c17c1bcdbb810cc98bc9", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd8947095678c61c5cbc70509e053621baca282d/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd8947095678c61c5cbc70509e053621baca282d/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=fd8947095678c61c5cbc70509e053621baca282d", "patch": "@@ -457,6 +457,10 @@ impl CStr {\n     /// to a contiguous region of memory terminated with a 0 byte to represent\n     /// the end of the string.\n     ///\n+    /// The type of the returned pointer is\n+    /// [`*const c_char`][crate::ffi::c_char], and whether it's\n+    /// an alias for `*const i8` or `*const u8` is platform-specific.\n+    ///\n     /// **WARNING**\n     ///\n     /// The returned pointer is read-only; writing to it (including passing it\n@@ -470,6 +474,7 @@ impl CStr {\n     /// # #![allow(unused_must_use)] #![allow(temporary_cstring_as_ptr)]\n     /// use std::ffi::CString;\n     ///\n+    /// // Do not do this:\n     /// let ptr = CString::new(\"Hello\").expect(\"CString::new failed\").as_ptr();\n     /// unsafe {\n     ///     // `ptr` is dangling"}]}