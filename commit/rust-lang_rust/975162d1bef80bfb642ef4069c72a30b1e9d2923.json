{"sha": "975162d1bef80bfb642ef4069c72a30b1e9d2923", "node_id": "C_kwDOAAsO6NoAKDk3NTE2MmQxYmVmODBiZmI2NDJlZjQwNjljNzJhMzBiMWU5ZDI5MjM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-11T10:59:40Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-30T09:23:58Z"}, "message": "update comment", "tree": {"sha": "2229a72d89781f467e9603dd72070f646cfe9f3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2229a72d89781f467e9603dd72070f646cfe9f3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/975162d1bef80bfb642ef4069c72a30b1e9d2923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/975162d1bef80bfb642ef4069c72a30b1e9d2923", "html_url": "https://github.com/rust-lang/rust/commit/975162d1bef80bfb642ef4069c72a30b1e9d2923", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/975162d1bef80bfb642ef4069c72a30b1e9d2923/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f132bcf3bdf6d3ff9be7d02e8d0088b99007cd5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f132bcf3bdf6d3ff9be7d02e8d0088b99007cd5e", "html_url": "https://github.com/rust-lang/rust/commit/f132bcf3bdf6d3ff9be7d02e8d0088b99007cd5e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2ccd25212f11cc4b87c409fc6ac7ab6f4921bafd", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/975162d1bef80bfb642ef4069c72a30b1e9d2923/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975162d1bef80bfb642ef4069c72a30b1e9d2923/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=975162d1bef80bfb642ef4069c72a30b1e9d2923", "patch": "@@ -765,7 +765,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n             // fcx's fulfillment context after this probe is over.\n             // Note: we only normalize `xform_self_ty` here since the normalization\n             // of the return type can lead to inference results that prohibit\n-            // valid canidates from being found, see issue #85671\n+            // valid candidates from being found, see issue #85671\n             // FIXME Postponing the normalization of the return type likely only hides a deeper bug,\n             // which might be caused by the `param_env` itself. The clauses of the `param_env`\n             // maybe shouldn't include `Param`s, but rather fresh variables or be canonicalized,"}]}