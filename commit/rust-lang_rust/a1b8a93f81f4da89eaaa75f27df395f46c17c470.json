{"sha": "a1b8a93f81f4da89eaaa75f27df395f46c17c470", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYjhhOTNmODFmNGRhODllYWFhNzVmMjdkZjM5NWY0NmMxN2M0NzA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-30T14:17:04Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-08-01T15:44:53Z"}, "message": "Expand long-live-borrows-in-boxes test to include simplier illustrative cases.\n\nAfter talking about the PR with eddyb, I decided it was best to try to\nhave some test cases that simplify the problem down to its core, so\nthat people trying to understand what the issue is here will see those\ncore examples first.", "tree": {"sha": "4bf0ff60f4778fad08bdb9d3867b9b51f3178c12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bf0ff60f4778fad08bdb9d3867b9b51f3178c12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1b8a93f81f4da89eaaa75f27df395f46c17c470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b8a93f81f4da89eaaa75f27df395f46c17c470", "html_url": "https://github.com/rust-lang/rust/commit/a1b8a93f81f4da89eaaa75f27df395f46c17c470", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1b8a93f81f4da89eaaa75f27df395f46c17c470/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "url": "https://api.github.com/repos/rust-lang/rust/commits/469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "html_url": "https://github.com/rust-lang/rust/commit/469d6a819d3d7348fdd54d8c7ec1e694f2f43051"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "881f37c2e0b0e59dc6c68d5ff2e9732af7b182f4", "filename": "src/test/ui/issue-45696-long-live-borrows-in-boxes.rs", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a1b8a93f81f4da89eaaa75f27df395f46c17c470/src%2Ftest%2Fui%2Fissue-45696-long-live-borrows-in-boxes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b8a93f81f4da89eaaa75f27df395f46c17c470/src%2Ftest%2Fui%2Fissue-45696-long-live-borrows-in-boxes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-45696-long-live-borrows-in-boxes.rs?ref=a1b8a93f81f4da89eaaa75f27df395f46c17c470", "patch": "@@ -22,24 +22,54 @@\n \n // run-pass\n \n-type Boxed<'a, 'b> = Box<(&'a mut u32, &'b mut u32)>;\n+// This function shows quite directly what is going on: We have a\n+// reborrow of contents within the box.\n+fn return_borrow_from_dropped_box_1(x: Box<&mut u32>) -> &mut u32 { &mut **x }\n \n-fn return_borrow_from_dropped_box<'a>(x: Boxed<'a, '_>) -> &'a mut u32 {\n+// This function is the way you'll probably see this in practice (the\n+// reborrow is now implicit).\n+fn return_borrow_from_dropped_box_2(x: Box<&mut u32>) -> &mut u32 { *x }\n+\n+// For the remaining tests we just add some fields or other\n+// indirection to ensure that the compiler isn't just special-casing\n+// the above `Box<&mut T>` as the only type that would work.\n+\n+// Here we add a tuple of indirection between the box and the\n+// reference.\n+type BoxedTup<'a, 'b> = Box<(&'a mut u32, &'b mut u32)>;\n+\n+fn return_borrow_of_field_from_dropped_box_1<'a>(x: BoxedTup<'a, '_>) -> &'a mut u32 {\n     &mut *x.0\n }\n \n-fn return_borrow_from_dropped_tupled_box<'a>(x: (Boxed<'a, '_>, &mut u32)) -> &'a mut u32 {\n+fn return_borrow_of_field_from_dropped_box_2<'a>(x: BoxedTup<'a, '_>) -> &'a mut u32 {\n+    x.0\n+}\n+\n+fn return_borrow_from_dropped_tupled_box_1<'a>(x: (BoxedTup<'a, '_>, &mut u32)) -> &'a mut u32 {\n     &mut *(x.0).0\n }\n \n+fn return_borrow_from_dropped_tupled_box_2<'a>(x: (BoxedTup<'a, '_>, &mut u32)) -> &'a mut u32 {\n+    (x.0).0\n+}\n+\n fn basic_tests() {\n     let mut x = 2;\n     let mut y = 3;\n     let mut z = 4;\n-    *return_borrow_from_dropped_box(Box::new((&mut x, &mut y))) += 10;\n+    *return_borrow_from_dropped_box_1(Box::new(&mut x)) += 10;\n     assert_eq!((x, y, z), (12, 3, 4));\n-    *return_borrow_from_dropped_tupled_box((Box::new((&mut x, &mut y)), &mut z)) += 10;\n+    *return_borrow_from_dropped_box_2(Box::new(&mut x)) += 10;\n     assert_eq!((x, y, z), (22, 3, 4));\n+    *return_borrow_of_field_from_dropped_box_1(Box::new((&mut x, &mut y))) += 10;\n+    assert_eq!((x, y, z), (32, 3, 4));\n+    *return_borrow_of_field_from_dropped_box_2(Box::new((&mut x, &mut y))) += 10;\n+    assert_eq!((x, y, z), (42, 3, 4));\n+    *return_borrow_from_dropped_tupled_box_1((Box::new((&mut x, &mut y)), &mut z)) += 10;\n+    assert_eq!((x, y, z), (52, 3, 4));\n+    *return_borrow_from_dropped_tupled_box_2((Box::new((&mut x, &mut y)), &mut z)) += 10;\n+    assert_eq!((x, y, z), (62, 3, 4));\n }\n \n // These scribbling tests have been transcribed from"}]}