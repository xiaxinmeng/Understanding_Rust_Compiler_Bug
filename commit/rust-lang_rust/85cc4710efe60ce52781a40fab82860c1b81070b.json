{"sha": "85cc4710efe60ce52781a40fab82860c1b81070b", "node_id": "C_kwDOAAsO6NoAKDg1Y2M0NzEwZWZlNjBjZTUyNzgxYTQwZmFiODI4NjBjMWI4MTA3MGI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-19T12:11:48Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-02T18:26:54Z"}, "message": "Add more tests for mismatched Option/Result return types.", "tree": {"sha": "5a34e6b1369151dd170f29debcb3cf817aac8e00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a34e6b1369151dd170f29debcb3cf817aac8e00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85cc4710efe60ce52781a40fab82860c1b81070b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85cc4710efe60ce52781a40fab82860c1b81070b", "html_url": "https://github.com/rust-lang/rust/commit/85cc4710efe60ce52781a40fab82860c1b81070b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85cc4710efe60ce52781a40fab82860c1b81070b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "html_url": "https://github.com/rust-lang/rust/commit/003c892f9f5bdb8b19f27e75e9d89d148ce030e8"}], "stats": {"total": 76, "additions": 68, "deletions": 8}, "files": [{"sha": "b078064b26745c6835dd24319219c027d6e69b18", "filename": "src/test/ui/did_you_mean/compatible-variants.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/85cc4710efe60ce52781a40fab82860c1b81070b/src%2Ftest%2Fui%2Fdid_you_mean%2Fcompatible-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85cc4710efe60ce52781a40fab82860c1b81070b/src%2Ftest%2Fui%2Fdid_you_mean%2Fcompatible-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fcompatible-variants.rs?ref=85cc4710efe60ce52781a40fab82860c1b81070b", "patch": "@@ -23,6 +23,21 @@ fn b() -> Result<(), ()> {\n     //~| HELP try adding an expression\n }\n \n+fn c() -> Option<()> {\n+    for _ in [1, 2] {\n+        //~^ ERROR mismatched types\n+        f();\n+    }\n+    //~^ HELP try adding an expression\n+}\n+\n+fn d() -> Option<()> {\n+    c()?\n+    //~^ ERROR incompatible types\n+    //~| HELP try removing this `?`\n+    //~| HELP try adding an expression\n+}\n+\n fn main() {\n     let _: Option<()> = while false {};\n     //~^ ERROR mismatched types"}, {"sha": "51c1bf97c4e2c5c91df8b341fac1ec8b2e778bbf", "filename": "src/test/ui/did_you_mean/compatible-variants.stderr", "status": "modified", "additions": 53, "deletions": 8, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/85cc4710efe60ce52781a40fab82860c1b81070b/src%2Ftest%2Fui%2Fdid_you_mean%2Fcompatible-variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/85cc4710efe60ce52781a40fab82860c1b81070b/src%2Ftest%2Fui%2Fdid_you_mean%2Fcompatible-variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fcompatible-variants.stderr?ref=85cc4710efe60ce52781a40fab82860c1b81070b", "patch": "@@ -37,7 +37,52 @@ LL +     Ok(())\n    |\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:27:25\n+  --> $DIR/compatible-variants.rs:27:5\n+   |\n+LL |   fn c() -> Option<()> {\n+   |             ---------- expected `Option<()>` because of return type\n+LL | /     for _ in [1, 2] {\n+LL | |\n+LL | |         f();\n+LL | |     }\n+   | |_____^ expected enum `Option`, found `()`\n+   |\n+   = note:   expected enum `Option<()>`\n+           found unit type `()`\n+help: try adding an expression at the end of the block\n+   |\n+LL ~     }\n+LL +     None\n+   |\n+LL ~     }\n+LL +     Some(())\n+   |\n+\n+error[E0308]: `?` operator has incompatible types\n+  --> $DIR/compatible-variants.rs:35:5\n+   |\n+LL |     c()?\n+   |     ^^^^ expected enum `Option`, found `()`\n+   |\n+   = note: `?` operator cannot convert from `()` to `Option<()>`\n+   = note:   expected enum `Option<()>`\n+           found unit type `()`\n+help: try removing this `?`\n+   |\n+LL -     c()?\n+LL +     c()\n+   | \n+help: try adding an expression at the end of the block\n+   |\n+LL ~     c()?;\n+LL +     None\n+   |\n+LL ~     c()?;\n+LL +     Some(())\n+   |\n+\n+error[E0308]: mismatched types\n+  --> $DIR/compatible-variants.rs:42:25\n    |\n LL |     let _: Option<()> = while false {};\n    |            ----------   ^^^^^^^^^^^^^^ expected enum `Option`, found `()`\n@@ -52,7 +97,7 @@ LL |     let _: Option<()> = Some(while false {});\n    |                         +++++              +\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:31:9\n+  --> $DIR/compatible-variants.rs:46:9\n    |\n LL |         while false {}\n    |         ^^^^^^^^^^^^^^ expected enum `Option`, found `()`\n@@ -69,7 +114,7 @@ LL +         Some(())\n    |\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:35:31\n+  --> $DIR/compatible-variants.rs:50:31\n    |\n LL |     let _: Result<i32, i32> = 1;\n    |            ----------------   ^ expected enum `Result`, found integer\n@@ -86,7 +131,7 @@ LL |     let _: Result<i32, i32> = Err(1);\n    |                               ++++ +\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:38:26\n+  --> $DIR/compatible-variants.rs:53:26\n    |\n LL |     let _: Option<i32> = 1;\n    |            -----------   ^ expected enum `Option`, found integer\n@@ -101,7 +146,7 @@ LL |     let _: Option<i32> = Some(1);\n    |                          +++++ +\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:41:28\n+  --> $DIR/compatible-variants.rs:56:28\n    |\n LL |     let _: Hey<i32, i32> = 1;\n    |            -------------   ^ expected enum `Hey`, found integer\n@@ -118,7 +163,7 @@ LL |     let _: Hey<i32, i32> = Hey::B(1);\n    |                            +++++++ +\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:44:29\n+  --> $DIR/compatible-variants.rs:59:29\n    |\n LL |     let _: Hey<i32, bool> = false;\n    |            --------------   ^^^^^ expected enum `Hey`, found `bool`\n@@ -133,7 +178,7 @@ LL |     let _: Hey<i32, bool> = Hey::B(false);\n    |                             +++++++     +\n \n error[E0308]: mismatched types\n-  --> $DIR/compatible-variants.rs:48:19\n+  --> $DIR/compatible-variants.rs:63:19\n    |\n LL |     let _ = Foo { bar };\n    |                   ^^^ expected enum `Option`, found `i32`\n@@ -145,6 +190,6 @@ help: try wrapping the expression in `Some`\n LL |     let _ = Foo { bar: Some(bar) };\n    |                   ++++++++++   +\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 11 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}