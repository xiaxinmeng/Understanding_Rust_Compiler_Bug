{"sha": "868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OGYxNjhjMWM1ZmE5ZjE5YzkyMmYzYjBiYTViZTM5ODBmNmIwYTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-18T10:05:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-18T10:05:04Z"}, "message": "Auto merge of #4215 - matthiaskrgr:rustup_9, r=flip1995\n\nrustup https://github.com/rust-lang/rust/pull/61836/\n\nchangelog: none", "tree": {"sha": "02f7dc52fa34e229bd5d36a97a9ffb7d64a454fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02f7dc52fa34e229bd5d36a97a9ffb7d64a454fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "html_url": "https://github.com/rust-lang/rust/commit/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab085d9aea5625ace47165e7178420ca37c91963", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab085d9aea5625ace47165e7178420ca37c91963", "html_url": "https://github.com/rust-lang/rust/commit/ab085d9aea5625ace47165e7178420ca37c91963"}, {"sha": "4d984dc6e65575fb79f835c10467b50854549d2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d984dc6e65575fb79f835c10467b50854549d2e", "html_url": "https://github.com/rust-lang/rust/commit/4d984dc6e65575fb79f835c10467b50854549d2e"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "68f235309ba8c1df7ea8fdda70660fa6e62a9f26", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -114,7 +114,7 @@ fn check_hash_peq<'a, 'tcx>(\n                         cx, DERIVE_HASH_XOR_EQ, span,\n                         mess,\n                         |db| {\n-                        if let Some(node_id) = cx.tcx.hir().as_local_node_id(impl_id) {\n+                        if let Some(node_id) = cx.tcx.hir().as_local_hir_id(impl_id) {\n                             db.span_note(\n                                 cx.tcx.hir().span(node_id),\n                                 \"`PartialEq` implemented here\""}, {"sha": "489eb6dade8fab1f22c58fc97851b10009206d87", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -32,7 +32,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EnumGlobUse {\n         let map = cx.tcx.hir();\n         // only check top level `use` statements\n         for item in &m.item_ids {\n-            self.lint_item(cx, map.expect_item(map.hir_to_node_id(item.id)));\n+            self.lint_item(cx, map.expect_item(item.id));\n         }\n     }\n }"}, {"sha": "9106c15579634acb28ed5599efda1a214909582a", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -94,7 +94,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n             span_lint(\n                 cx,\n                 BOXED_LOCAL,\n-                cx.tcx.hir().span_by_hir_id(node),\n+                cx.tcx.hir().span(node),\n                 \"local variable doesn't need to be boxed here\",\n             );\n         }"}, {"sha": "c3446b1ed7aed525971e9cbbc919c82bcbac26db", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -346,7 +346,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             },\n             TyKind::Def(item, _) => {\n                 let map = self.cx.tcx.hir();\n-                if let ItemKind::Existential(ref exist_ty) = map.expect_item(map.hir_to_node_id(item.id)).node {\n+                if let ItemKind::Existential(ref exist_ty) = map.expect_item(item.id).node {\n                     for bound in &exist_ty.bounds {\n                         if let GenericBound::Outlives(_) = *bound {\n                             self.record(&None);"}, {"sha": "d91d7ecc2b8e1d4ad03a03fcce60e9178a610dfd", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -947,7 +947,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n         }\n         let name = implitem.ident.name.as_str();\n         let parent = cx.tcx.hir().get_parent_item(implitem.hir_id);\n-        let item = cx.tcx.hir().expect_item_by_hir_id(parent);\n+        let item = cx.tcx.hir().expect_item(parent);\n         let def_id = cx.tcx.hir().local_def_id_from_hir_id(item.hir_id);\n         let ty = cx.tcx.type_of(def_id);\n         if_chain! {\n@@ -1070,7 +1070,7 @@ fn lint_or_fun_call<'a, 'tcx: 'a>(\n \n             if call_found {\n                 // don't lint for constant values\n-                let owner_def = self.cx.tcx.hir().get_parent_did_by_hir_id(expr.hir_id);\n+                let owner_def = self.cx.tcx.hir().get_parent_did(expr.hir_id);\n                 let promotable = self\n                     .cx\n                     .tcx"}, {"sha": "d77f71c2ab23612a9b4cbca2d90262e85a52b3b0", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -605,7 +605,7 @@ fn in_attributes_expansion(expr: &Expr) -> bool {\n /// Tests whether `res` is a variable defined outside a macro.\n fn non_macro_local(cx: &LateContext<'_, '_>, res: def::Res) -> bool {\n     if let def::Res::Local(id) = res {\n-        !in_macro_or_desugar(cx.tcx.hir().span_by_hir_id(id))\n+        !in_macro_or_desugar(cx.tcx.hir().span(id))\n     } else {\n         false\n     }"}, {"sha": "723c1a997bbb91d74f0ab8048ddab9a53e825711", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -146,8 +146,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                         if let Some(self_def) = cx.tcx.type_of(self_did).ty_adt_def();\n                                         if self_def.did.is_local();\n                                         then {\n-                                            let self_id = cx.tcx.hir().local_def_id_to_node_id(self_def.did.to_local());\n-                                            if impling_types.contains(&self_id) {\n+                                            let self_id = cx.tcx.hir().local_def_id_to_hir_id(self_def.did.to_local());\n+                                            let node_id = cx.tcx.hir().hir_to_node_id(self_id);\n+                                            if impling_types.contains(&node_id) {\n                                                 return;\n                                             }\n                                         }"}, {"sha": "832452a0e4d30e5b79acf9636fb0481ad3ba5769", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -170,7 +170,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonCopyConst {\n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, impl_item: &'tcx ImplItem) {\n         if let ImplItemKind::Const(hir_ty, ..) = &impl_item.node {\n             let item_hir_id = cx.tcx.hir().get_parent_node_by_hir_id(impl_item.hir_id);\n-            let item = cx.tcx.hir().expect_item_by_hir_id(item_hir_id);\n+            let item = cx.tcx.hir().expect_item(item_hir_id);\n             // Ensure the impl is an inherent impl.\n             if let ItemKind::Impl(_, _, _, _, None, _, _) = item.node {\n                 let ty = hir_ty_to_ty(cx.tcx, hir_ty);"}, {"sha": "afaaa9e81c60a0ff7064768cd0c680ee4ab415a6", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "patch": "@@ -978,7 +978,7 @@ pub fn any_parent_is_automatically_derived(tcx: TyCtxt<'_>, node: HirId) -> bool\n     let mut prev_enclosing_node = None;\n     let mut enclosing_node = node;\n     while Some(enclosing_node) != prev_enclosing_node {\n-        if is_automatically_derived(map.attrs_by_hir_id(enclosing_node)) {\n+        if is_automatically_derived(map.attrs(enclosing_node)) {\n             return true;\n         }\n         prev_enclosing_node = Some(enclosing_node);"}]}