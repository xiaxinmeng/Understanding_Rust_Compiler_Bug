{"sha": "cc42adf3a21a4b1a359dfd8281693f3e892669d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNDJhZGYzYTIxYTRiMWEzNTlkZmQ4MjgxNjkzZjNlODkyNjY5ZDM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-20T18:10:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-20T18:10:55Z"}, "message": "Rollup merge of #65463 - nnethercote:rm-arena-allocation-from-expand_pattern, r=varkor\n\nAvoid unnecessary arena allocations in `expand_pattern()`.\n\n`expand_pattern()` has two callsites. One of them needs arena\nallocation, but the other does not.\n\nThis commit moves the arena allocation out of the function. This avoids\nthe allocation of many 4 KiB page arena chunks that only hold a single\nsmall allocation. It reduces the number of bytes allocated by up to 2%\nfor various benchmarks, albeit without only a very small improvement in\nruntime.", "tree": {"sha": "fc5ea542a67c36b0be5b5b0c3194799b7e347c56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc5ea542a67c36b0be5b5b0c3194799b7e347c56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc42adf3a21a4b1a359dfd8281693f3e892669d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdrKMvCRBK7hj4Ov3rIwAAdHIIAAMd6XgoXF5/e73Wuo/cjlLt\nvChR80sxGciqOCM3KpXXnhZvIKMw1r7sW7YNnyn+2mq5FI8RXqiNnYE6H4NTaXye\nIml8f65kKaXn6H82CyiCB3MXGmwBjuz+YI8i2MmJiGRh5sediOL5J0c8kSaX0doT\nOgmBGK+6tf7bruIqj/pZL1UFt9zcSYreSmyYTDwBn4rO1IIBFa60BtqwdePZLw5B\n/EiTrZkVfIq7Knx19afx9ccZJ7ZEUC1JTZlwYXgewkCZ4KtDza6FcPrYw7uT+vtY\nDvLmlzWQyTgOdNd3KFRM/7Q0xk0gsqmdZ3i2ZItUtjuhpUHRNCwhMfB7MEQfjLk=\n=Iere\n-----END PGP SIGNATURE-----\n", "payload": "tree fc5ea542a67c36b0be5b5b0c3194799b7e347c56\nparent 2518bbd5a3eb880de619920512b16b4c8818560c\nparent c4deea212d19b19fa11fb4e29dd5c7f1359543a5\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1571595055 +0900\ncommitter GitHub <noreply@github.com> 1571595055 +0900\n\nRollup merge of #65463 - nnethercote:rm-arena-allocation-from-expand_pattern, r=varkor\n\nAvoid unnecessary arena allocations in `expand_pattern()`.\n\n`expand_pattern()` has two callsites. One of them needs arena\nallocation, but the other does not.\n\nThis commit moves the arena allocation out of the function. This avoids\nthe allocation of many 4 KiB page arena chunks that only hold a single\nsmall allocation. It reduces the number of bytes allocated by up to 2%\nfor various benchmarks, albeit without only a very small improvement in\nruntime.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc42adf3a21a4b1a359dfd8281693f3e892669d3", "html_url": "https://github.com/rust-lang/rust/commit/cc42adf3a21a4b1a359dfd8281693f3e892669d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc42adf3a21a4b1a359dfd8281693f3e892669d3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2518bbd5a3eb880de619920512b16b4c8818560c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2518bbd5a3eb880de619920512b16b4c8818560c", "html_url": "https://github.com/rust-lang/rust/commit/2518bbd5a3eb880de619920512b16b4c8818560c"}, {"sha": "c4deea212d19b19fa11fb4e29dd5c7f1359543a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4deea212d19b19fa11fb4e29dd5c7f1359543a5", "html_url": "https://github.com/rust-lang/rust/commit/c4deea212d19b19fa11fb4e29dd5c7f1359543a5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "dc6d4b27886e4c72e043f6bbb958a5dc03a87aee", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc42adf3a21a4b1a359dfd8281693f3e892669d3/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc42adf3a21a4b1a359dfd8281693f3e892669d3/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=cc42adf3a21a4b1a359dfd8281693f3e892669d3", "patch": "@@ -189,8 +189,8 @@ use std::ops::RangeInclusive;\n use std::u128;\n use std::convert::TryInto;\n \n-pub fn expand_pattern<'a, 'tcx>(cx: &MatchCheckCtxt<'a, 'tcx>, pat: Pat<'tcx>) -> &'a Pat<'tcx> {\n-    cx.pattern_arena.alloc(LiteralExpander { tcx: cx.tcx }.fold_pattern(&pat))\n+pub fn expand_pattern<'a, 'tcx>(cx: &MatchCheckCtxt<'a, 'tcx>, pat: Pat<'tcx>) -> Pat<'tcx> {\n+    LiteralExpander { tcx: cx.tcx }.fold_pattern(&pat)\n }\n \n struct LiteralExpander<'tcx> {"}, {"sha": "77f3768172fb4013f8bffbfc270a15a7063453ef", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc42adf3a21a4b1a359dfd8281693f3e892669d3/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc42adf3a21a4b1a359dfd8281693f3e892669d3/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=cc42adf3a21a4b1a359dfd8281693f3e892669d3", "patch": "@@ -154,7 +154,8 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n                         self.tables\n                     );\n                     patcx.include_lint_checks();\n-                    let pattern = expand_pattern(cx, patcx.lower_pattern(&pat));\n+                    let pattern =\n+                        cx.pattern_arena.alloc(expand_pattern(cx, patcx.lower_pattern(&pat))) as &_;\n                     if !patcx.errors.is_empty() {\n                         patcx.report_inlining_errors(pat.span);\n                         have_errors = true;\n@@ -253,8 +254,9 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n             patcx.include_lint_checks();\n             let pattern = patcx.lower_pattern(pat);\n             let pattern_ty = pattern.ty;\n+            let pattern = expand_pattern(cx, pattern);\n             let pats: Matrix<'_, '_> = vec![smallvec![\n-                expand_pattern(cx, pattern)\n+                &pattern\n             ]].into_iter().collect();\n \n             let witnesses = match check_not_useful(cx, pattern_ty, &pats, pat.hir_id) {"}]}