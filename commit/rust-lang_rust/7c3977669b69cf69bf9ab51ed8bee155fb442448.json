{"sha": "7c3977669b69cf69bf9ab51ed8bee155fb442448", "node_id": "C_kwDOAAsO6NoAKDdjMzk3NzY2OWI2OWNmNjliZjlhYjUxZWQ4YmVlMTU1ZmI0NDI0NDg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-26T04:14:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-26T04:14:57Z"}, "message": "Rollup merge of #98385 - m-ou-se:llvm-12-memory-order, r=petrochenkov\n\nWork around llvm 12's memory ordering restrictions.\n\nOlder llvm has the pre-C++17 restriction on success and failure memory ordering, requiring the former to be at least as strong as the latter. So, for llvm 12, this upgrades the success ordering to a stronger one if necessary.\n\nSee https://github.com/rust-lang/rust/issues/68464", "tree": {"sha": "8a19a655f00506675e3edfcd76fe789a4f7ffad2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a19a655f00506675e3edfcd76fe789a4f7ffad2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c3977669b69cf69bf9ab51ed8bee155fb442448", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJit91BCRBK7hj4Ov3rIwAAg2YIAD2+YgyeJGAQULdH10kTo30m\n6BwvIiTEtmHVpmj+vA5jkUqIoinaE8mykBPx1KVopO7A3QxpNNcfM/ELr/Cd8jhO\neNibjVnk9tnnTsWaIPRbmuA+w77NYEkUyUkkKRGWQb7Sqh+A9jthvI9331ZPMkwb\nrCBWRlYciq2IHINvxSvtCYYcCLiq7fmFxqhVjjtS+0IWVdEwvlyj1bGizi7tF2lv\nfOCE76K2eboP/7mOwXro1w1HN7USVmkiZ6QBC/tnr6JBLYRCik488oOTOHUFK8O8\nfg0eeTEaDxEKLl0NTxEvPJAxMEOowdFFxiBCIXJ2cUiN1fcgNYEEjEnR6R7nQFo=\n=JECI\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a19a655f00506675e3edfcd76fe789a4f7ffad2\nparent 645e5c475a238581f6aefe53d416ddcc7aff5fb3\nparent 903357604d154888320135086e4d862bc71d644a\nauthor Yuki Okushi <jtitor@2k36.org> 1656216897 +0900\ncommitter GitHub <noreply@github.com> 1656216897 +0900\n\nRollup merge of #98385 - m-ou-se:llvm-12-memory-order, r=petrochenkov\n\nWork around llvm 12's memory ordering restrictions.\n\nOlder llvm has the pre-C++17 restriction on success and failure memory ordering, requiring the former to be at least as strong as the latter. So, for llvm 12, this upgrades the success ordering to a stronger one if necessary.\n\nSee https://github.com/rust-lang/rust/issues/68464\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c3977669b69cf69bf9ab51ed8bee155fb442448", "html_url": "https://github.com/rust-lang/rust/commit/7c3977669b69cf69bf9ab51ed8bee155fb442448", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c3977669b69cf69bf9ab51ed8bee155fb442448/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "645e5c475a238581f6aefe53d416ddcc7aff5fb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/645e5c475a238581f6aefe53d416ddcc7aff5fb3", "html_url": "https://github.com/rust-lang/rust/commit/645e5c475a238581f6aefe53d416ddcc7aff5fb3"}, {"sha": "903357604d154888320135086e4d862bc71d644a", "url": "https://api.github.com/repos/rust-lang/rust/commits/903357604d154888320135086e4d862bc71d644a", "html_url": "https://github.com/rust-lang/rust/commit/903357604d154888320135086e4d862bc71d644a"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "8c1e865762ccd30c6501d01d430de0b65a4e20a9", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7c3977669b69cf69bf9ab51ed8bee155fb442448/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3977669b69cf69bf9ab51ed8bee155fb442448/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=7c3977669b69cf69bf9ab51ed8bee155fb442448", "patch": "@@ -1064,11 +1064,25 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         dst: &'ll Value,\n         cmp: &'ll Value,\n         src: &'ll Value,\n-        order: rustc_codegen_ssa::common::AtomicOrdering,\n+        mut order: rustc_codegen_ssa::common::AtomicOrdering,\n         failure_order: rustc_codegen_ssa::common::AtomicOrdering,\n         weak: bool,\n     ) -> &'ll Value {\n         let weak = if weak { llvm::True } else { llvm::False };\n+        if llvm_util::get_version() < (13, 0, 0) {\n+            use rustc_codegen_ssa::common::AtomicOrdering::*;\n+            // Older llvm has the pre-C++17 restriction on\n+            // success and failure memory ordering,\n+            // requiring the former to be at least as strong as the latter.\n+            // So, for llvm 12, we upgrade the success ordering to a stronger\n+            // one if necessary.\n+            match (order, failure_order) {\n+                (Relaxed, Acquire) => order = Acquire,\n+                (Release, Acquire) => order = AcquireRelease,\n+                (_, SequentiallyConsistent) => order = SequentiallyConsistent,\n+                _ => {}\n+            }\n+        }\n         unsafe {\n             llvm::LLVMRustBuildAtomicCmpXchg(\n                 self.llbuilder,"}]}