{"sha": "011c37d59e51ba6553b9146aeb32a9a4cf5a179d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMWMzN2Q1OWU1MWJhNjU1M2I5MTQ2YWViMzJhOWE0Y2Y1YTE3OWQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-05-20T11:20:00Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-05-20T11:20:00Z"}, "message": "`borrowck::mir`: alpha-renamed DropFlagState variant names.", "tree": {"sha": "12d78e3d7a514269b26cd3601cbdc31847252d2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12d78e3d7a514269b26cd3601cbdc31847252d2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/011c37d59e51ba6553b9146aeb32a9a4cf5a179d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/011c37d59e51ba6553b9146aeb32a9a4cf5a179d", "html_url": "https://github.com/rust-lang/rust/commit/011c37d59e51ba6553b9146aeb32a9a4cf5a179d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/011c37d59e51ba6553b9146aeb32a9a4cf5a179d/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fcbe2a2f902d6a538a3605877e0eb1b3ad9314f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcbe2a2f902d6a538a3605877e0eb1b3ad9314f", "html_url": "https://github.com/rust-lang/rust/commit/9fcbe2a2f902d6a538a3605877e0eb1b3ad9314f"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "cb110e606f2273d35288d675ede3c6782d9fd225", "filename": "src/librustc_borrowck/borrowck/mir/dataflow/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/011c37d59e51ba6553b9146aeb32a9a4cf5a179d/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011c37d59e51ba6553b9146aeb32a9a4cf5a179d/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fmod.rs?ref=011c37d59e51ba6553b9146aeb32a9a4cf5a179d", "patch": "@@ -827,11 +827,11 @@ impl<'a, 'tcx> MaybeInitializedLvals<'a, 'tcx> {\n                    state: super::DropFlagState)\n     {\n         match state {\n-            DropFlagState::Dead => {\n+            DropFlagState::Absent => {\n                 sets.gen_set.clear_bit(path.idx());\n                 sets.kill_set.set_bit(path.idx());\n             }\n-            DropFlagState::Live => {\n+            DropFlagState::Present => {\n                 sets.gen_set.set_bit(path.idx());\n                 sets.kill_set.clear_bit(path.idx());\n             }\n@@ -844,11 +844,11 @@ impl<'a, 'tcx> MaybeUninitializedLvals<'a, 'tcx> {\n                    state: super::DropFlagState)\n     {\n         match state {\n-            DropFlagState::Dead => {\n+            DropFlagState::Absent => {\n                 sets.gen_set.set_bit(path.idx());\n                 sets.kill_set.clear_bit(path.idx());\n             }\n-            DropFlagState::Live => {\n+            DropFlagState::Present => {\n                 sets.gen_set.clear_bit(path.idx());\n                 sets.kill_set.set_bit(path.idx());\n             }\n@@ -861,11 +861,11 @@ impl<'a, 'tcx> DefinitelyInitializedLvals<'a, 'tcx> {\n                    state: super::DropFlagState)\n     {\n         match state {\n-            DropFlagState::Dead => {\n+            DropFlagState::Absent => {\n                 sets.gen_set.clear_bit(path.idx());\n                 sets.kill_set.set_bit(path.idx());\n             }\n-            DropFlagState::Live => {\n+            DropFlagState::Present => {\n                 sets.gen_set.set_bit(path.idx());\n                 sets.kill_set.clear_bit(path.idx());\n             }\n@@ -889,7 +889,7 @@ impl<'a, 'tcx> BitDenotation for MaybeInitializedLvals<'a, 'tcx> {\n         super::drop_flag_effects_for_function_entry(\n             ctxt.0, ctxt.1, &ctxt.2,\n             |path, s| {\n-                assert!(s == DropFlagState::Live);\n+                assert!(s == DropFlagState::Present);\n                 sets.on_entry.set_bit(path.idx());\n             });\n     }\n@@ -956,7 +956,7 @@ impl<'a, 'tcx> BitDenotation for MaybeUninitializedLvals<'a, 'tcx> {\n         super::drop_flag_effects_for_function_entry(\n             ctxt.0, ctxt.1, &ctxt.2,\n             |path, s| {\n-                assert!(s == DropFlagState::Live);\n+                assert!(s == DropFlagState::Present);\n                 sets.on_entry.clear_bit(path.idx());\n             });\n     }\n@@ -1022,7 +1022,7 @@ impl<'a, 'tcx> BitDenotation for DefinitelyInitializedLvals<'a, 'tcx> {\n         super::drop_flag_effects_for_function_entry(\n             ctxt.0, ctxt.1, &ctxt.2,\n             |path, s| {\n-                assert!(s == DropFlagState::Live);\n+                assert!(s == DropFlagState::Present);\n                 sets.on_entry.set_bit(path.idx());\n             });\n     }"}, {"sha": "a3cf6176779c37c03b6e07e4b4ebc8d94275bb9e", "filename": "src/librustc_borrowck/borrowck/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/011c37d59e51ba6553b9146aeb32a9a4cf5a179d/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011c37d59e51ba6553b9146aeb32a9a4cf5a179d/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs?ref=011c37d59e51ba6553b9146aeb32a9a4cf5a179d", "patch": "@@ -195,8 +195,8 @@ impl<'b, 'a: 'b, 'tcx: 'a> MirBorrowckCtxt<'b, 'a, 'tcx> {\n \n #[derive(Debug, PartialEq, Eq, Copy, Clone)]\n enum DropFlagState {\n-    Live,\n-    Dead\n+    Present, // i.e. initialized\n+    Absent, // i.e. deinitialized or \"moved\"\n }\n \n fn on_all_children_bits<'a, 'tcx, F>(\n@@ -266,7 +266,7 @@ fn drop_flag_effects_for_function_entry<'a, 'tcx, F>(\n         let move_path_index = move_data.rev_lookup.find(&lvalue);\n         on_all_children_bits(tcx, mir, move_data,\n                              move_path_index,\n-                             |moi| callback(moi, DropFlagState::Live));\n+                             |moi| callback(moi, DropFlagState::Present));\n     }\n }\n \n@@ -296,7 +296,7 @@ fn drop_flag_effects_for_location<'a, 'tcx, F>(\n \n         on_all_children_bits(tcx, mir, move_data,\n                              path,\n-                             |moi| callback(moi, DropFlagState::Dead))\n+                             |moi| callback(moi, DropFlagState::Absent))\n     }\n \n     let bb = mir.basic_block_data(loc.block);\n@@ -306,7 +306,7 @@ fn drop_flag_effects_for_location<'a, 'tcx, F>(\n                 debug!(\"drop_flag_effects: assignment {:?}\", stmt);\n                 on_all_children_bits(tcx, mir, move_data,\n                                      move_data.rev_lookup.find(lvalue),\n-                                     |moi| callback(moi, DropFlagState::Live))\n+                                     |moi| callback(moi, DropFlagState::Present))\n             }\n         },\n         None => {"}]}