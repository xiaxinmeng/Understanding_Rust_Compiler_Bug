{"sha": "0982c7f78c26766e8b13a8dea700b03d86f376f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ODJjN2Y3OGMyNjc2NmU4YjEzYThkZWE3MDBiMDNkODZmMzc2ZjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-02T01:19:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-02T21:14:20Z"}, "message": "hastily port so we don't fail to build", "tree": {"sha": "f076027fcdaf6808f71d16a1bc2e14535318afac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f076027fcdaf6808f71d16a1bc2e14535318afac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0982c7f78c26766e8b13a8dea700b03d86f376f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0982c7f78c26766e8b13a8dea700b03d86f376f3", "html_url": "https://github.com/rust-lang/rust/commit/0982c7f78c26766e8b13a8dea700b03d86f376f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0982c7f78c26766e8b13a8dea700b03d86f376f3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bfa72ea42493c3337737cd35c5cd366502031c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bfa72ea42493c3337737cd35c5cd366502031c3", "html_url": "https://github.com/rust-lang/rust/commit/2bfa72ea42493c3337737cd35c5cd366502031c3"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "b19ec15153708422803754e3cd6d093ccdf922b4", "filename": "src/rt/arch/x86_64/morestack.S", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/0982c7f78c26766e8b13a8dea700b03d86f376f3/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/0982c7f78c26766e8b13a8dea700b03d86f376f3/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=0982c7f78c26766e8b13a8dea700b03d86f376f3", "patch": "@@ -0,0 +1,52 @@\n+    .text\n+\n+// __morestack\n+//\n+// LLVM generates a call to this to allocate more stack space in a functiono\n+// prolog when we run out.\n+\n+#if defined(__APPLE__) || defined(_WIN32)\n+#define RUST_NEW_STACK      _rust_new_stack\n+#define RUST_DEL_STACK      _rust_del_stack\n+#else\n+#define RUST_NEW_STACK      rust_new_stack\n+#define RUST_DEL_STACK      rust_del_stack\n+#endif\n+\n+        // Naturally, nobody can agree as to\n+        // which arguments should go in which\n+        // registers:\n+#if defined(_WIN32)\n+#  define ARG0 %rcx\n+#  define ARG1 %rdx\n+#  define ARG2 %r8\n+#else\n+#  define ARG0 %rdi\n+#  define ARG1 %rsi\n+#  define ARG2 %rdx\n+#endif\n+\n+.globl RUST_NEW_STACK\n+.globl RUST_DEL_STACK\n+\n+.globl __morestack\n+\n+__morestack:\n+        // Hastily and probably incorrectly ported from i386 version.\n+        // Actually this calling convention doens't make so much sense\n+        // for x86_64...\n+        mov %rcx, ARG0      // param 0: amount of space needed\n+        mov %rdx, ARG2      // param 2: size of arguments\n+        lea 8(%rsp),ARG1\n+        call RUST_NEW_STACK\n+\n+        mov (%rsp),%rdx        // Grab the return pointer.\n+        inc %rdx               // Skip past the `ret`.\n+        mov %rax,%rsp          // Switch to the new stack.\n+        call *%rdx             // Enter the new function.\n+\n+        // Now the function that called us has returned, so we need to delete the\n+        // old stack space.\n+        call RUST_DEL_STACK\n+        mov %rax,%rsp          // Switch back to the old stack.\n+        ret"}]}