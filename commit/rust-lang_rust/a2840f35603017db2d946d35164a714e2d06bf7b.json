{"sha": "a2840f35603017db2d946d35164a714e2d06bf7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyODQwZjM1NjAzMDE3ZGIyZDk0NmQzNTE2NGE3MTRlMmQwNmJmN2I=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-15T12:59:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-15T13:12:43Z"}, "message": "Rollup merge of #22278 - nikomatsakis:rustc-error, r=nikomatsakis\n\n Add `#[rustc_error]` annotation, which causes trans to signal an error\nif found on the `main()` function. This lets you write tests that live\nin `compile-fail` but are expected to compile successfully. This is\nhandy when you have many small variations on a theme that you want to\nkeep together, and you are just testing the type checker, not the\nruntime semantics.\n\nr? @pnkfelix", "tree": {"sha": "518fe5a5fa1ec99fbc90fdbd1d1aff479c47f79f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/518fe5a5fa1ec99fbc90fdbd1d1aff479c47f79f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2840f35603017db2d946d35164a714e2d06bf7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2840f35603017db2d946d35164a714e2d06bf7b", "html_url": "https://github.com/rust-lang/rust/commit/a2840f35603017db2d946d35164a714e2d06bf7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2840f35603017db2d946d35164a714e2d06bf7b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2935d67e08c31067ddc9d3f6589054b5f7dad81a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2935d67e08c31067ddc9d3f6589054b5f7dad81a", "html_url": "https://github.com/rust-lang/rust/commit/2935d67e08c31067ddc9d3f6589054b5f7dad81a"}, {"sha": "fb05f282d7810f93c9dcb0ef979e66648a8716fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb05f282d7810f93c9dcb0ef979e66648a8716fc", "html_url": "https://github.com/rust-lang/rust/commit/fb05f282d7810f93c9dcb0ef979e66648a8716fc"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "fe1d695ab7b3e6c889ecd20bbd3bfaf3d999f5af", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2840f35603017db2d946d35164a714e2d06bf7b/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2840f35603017db2d946d35164a714e2d06bf7b/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=a2840f35603017db2d946d35164a714e2d06bf7b", "patch": "@@ -674,6 +674,7 @@ impl LintPass for UnusedAttributes {\n             \"stable\",\n             \"unstable\",\n             \"rustc_on_unimplemented\",\n+            \"rustc_error\",\n \n             // FIXME: #19470 this shouldn't be needed forever\n             \"old_orphan_check\","}, {"sha": "54c50b7a62b5dcae915656bce45b37395f4919e9", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a2840f35603017db2d946d35164a714e2d06bf7b/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2840f35603017db2d946d35164a714e2d06bf7b/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=a2840f35603017db2d946d35164a714e2d06bf7b", "patch": "@@ -2425,6 +2425,14 @@ fn finish_register_fn(ccx: &CrateContext, sp: Span, sym: String, node_id: ast::N\n \n \n     if is_entry_fn(ccx.sess(), node_id) {\n+        // check for the #[rustc_error] annotation, which forces an\n+        // error in trans. This is used to write compile-fail tests\n+        // that actually test that compilation succeeds without\n+        // reporting an error.\n+        if ty::has_attr(ccx.tcx(), local_def(node_id), \"rustc_error\") {\n+            ccx.tcx().sess.span_fatal(sp, \"compilation successful\");\n+        }\n+\n         create_entry_wrapper(ccx, sp, llfn);\n     }\n }"}, {"sha": "6497439c3dc5756d07fa94b410f99d850d8886fb", "filename": "src/test/compile-fail/rustc-error.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a2840f35603017db2d946d35164a714e2d06bf7b/src%2Ftest%2Fcompile-fail%2Frustc-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2840f35603017db2d946d35164a714e2d06bf7b/src%2Ftest%2Fcompile-fail%2Frustc-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frustc-error.rs?ref=a2840f35603017db2d946d35164a714e2d06bf7b", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[rustc_error]\n+fn main() {\n+    //~^ ERROR compilation successful\n+}"}]}