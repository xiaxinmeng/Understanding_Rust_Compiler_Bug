{"sha": "48c4afbf9c29880dd946067d1c9aee1e7f75834a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YzRhZmJmOWMyOTg4MGRkOTQ2MDY3ZDFjOWFlZTFlN2Y3NTgzNGE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-10-29T16:05:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-29T16:05:28Z"}, "message": "Rollup merge of #78499 - SkiFire13:fix-string-retain, r=m-ou-se\n\nPrevent String::retain from creating non-utf8 strings when abusing panic\n\nFixes #78498\n\nThe idea is the same as `Vec::drain`, set the len to 0 so that nobody can observe the broken invariant if it escapes the function (in this case if `f` panics)", "tree": {"sha": "4edb3ac88fd5324a1b070600afced7d02ac4134c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4edb3ac88fd5324a1b070600afced7d02ac4134c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c4afbf9c29880dd946067d1c9aee1e7f75834a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfmuhICRBK7hj4Ov3rIwAAdHIIAIUAdr68IYXoY6dLQQz2EI4j\nQkIWnGcbBxD63WZ9QEr9wV3XaLh/+PCQPuTJ9gZh/DW2PAQzsaaQhEtF750AYWhp\nzCqLs1IwTQHQ3mNpxdGfxxaBaNRTBAtkia07zuNeZoBoz4eraJBvltuXzS5bwdQb\nLtDrsifLuvsyBXy2Gy+p3O3Mxvr0D8o7oVW3+pJzbyd2jyj19tz/lXQP2MxAS3IJ\nkTNSMogWsBqREuWYyv6JUuGsQMk9RHqPE7xM7/+LbJ7DJm7TnuZSD+Lr0+QPbjVa\nXEDcZtdyrVRF8sU3wHedmAdzvBeyc/N8Ek73wfr4JY9e/BnnUDBURVRDBB5qE9I=\n=+rGh\n-----END PGP SIGNATURE-----\n", "payload": "tree 4edb3ac88fd5324a1b070600afced7d02ac4134c\nparent a01e5f8c0dcf27462f93a174b179c0595eab3e43\nparent 1f6f917f73a4372f098e9b19560b5945be145dc3\nauthor Jonas Schievink <jonasschievink@gmail.com> 1603987528 +0100\ncommitter GitHub <noreply@github.com> 1603987528 +0100\n\nRollup merge of #78499 - SkiFire13:fix-string-retain, r=m-ou-se\n\nPrevent String::retain from creating non-utf8 strings when abusing panic\n\nFixes #78498\n\nThe idea is the same as `Vec::drain`, set the len to 0 so that nobody can observe the broken invariant if it escapes the function (in this case if `f` panics)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c4afbf9c29880dd946067d1c9aee1e7f75834a", "html_url": "https://github.com/rust-lang/rust/commit/48c4afbf9c29880dd946067d1c9aee1e7f75834a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c4afbf9c29880dd946067d1c9aee1e7f75834a/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a01e5f8c0dcf27462f93a174b179c0595eab3e43", "url": "https://api.github.com/repos/rust-lang/rust/commits/a01e5f8c0dcf27462f93a174b179c0595eab3e43", "html_url": "https://github.com/rust-lang/rust/commit/a01e5f8c0dcf27462f93a174b179c0595eab3e43"}, {"sha": "1f6f917f73a4372f098e9b19560b5945be145dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f6f917f73a4372f098e9b19560b5945be145dc3", "html_url": "https://github.com/rust-lang/rust/commit/1f6f917f73a4372f098e9b19560b5945be145dc3"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "ce216e5336eb8082c36eddc5c98187773028be2d", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48c4afbf9c29880dd946067d1c9aee1e7f75834a/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c4afbf9c29880dd946067d1c9aee1e7f75834a/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=48c4afbf9c29880dd946067d1c9aee1e7f75834a", "patch": "@@ -1235,6 +1235,10 @@ impl String {\n         let mut del_bytes = 0;\n         let mut idx = 0;\n \n+        unsafe {\n+            self.vec.set_len(0);\n+        }\n+\n         while idx < len {\n             let ch = unsafe { self.get_unchecked(idx..len).chars().next().unwrap() };\n             let ch_len = ch.len_utf8();\n@@ -1255,10 +1259,8 @@ impl String {\n             idx += ch_len;\n         }\n \n-        if del_bytes > 0 {\n-            unsafe {\n-                self.vec.set_len(len - del_bytes);\n-            }\n+        unsafe {\n+            self.vec.set_len(len - del_bytes);\n         }\n     }\n "}, {"sha": "b28694186b65ee611d3b486f8e6152ce5c7c3d1a", "filename": "library/alloc/tests/string.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/48c4afbf9c29880dd946067d1c9aee1e7f75834a/library%2Falloc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c4afbf9c29880dd946067d1c9aee1e7f75834a/library%2Falloc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fstring.rs?ref=48c4afbf9c29880dd946067d1c9aee1e7f75834a", "patch": "@@ -1,6 +1,7 @@\n use std::borrow::Cow;\n use std::collections::TryReserveError::*;\n use std::ops::Bound::*;\n+use std::panic;\n \n pub trait IntoCow<'a, B: ?Sized>\n where\n@@ -378,6 +379,20 @@ fn test_retain() {\n \n     s.retain(|_| false);\n     assert_eq!(s, \"\");\n+\n+    let mut s = String::from(\"0\u00e80\");\n+    let _ = panic::catch_unwind(panic::AssertUnwindSafe(|| {\n+        let mut count = 0;\n+        s.retain(|_| {\n+            count += 1;\n+            match count {\n+                1 => false,\n+                2 => true,\n+                _ => panic!(),\n+            }\n+        });\n+    }));\n+    assert!(std::str::from_utf8(s.as_bytes()).is_ok());\n }\n \n #[test]"}]}