{"sha": "57895393115c61ec01fcbc9815f9821b2bfe5886", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ODk1MzkzMTE1YzYxZWMwMWZjYmM5ODE1Zjk4MjFiMmJmZTU4ODY=", "commit": {"author": {"name": "Shawn Walker-Salas", "email": "shawn.walker@oracle.com", "date": "2017-02-16T06:52:47Z"}, "committer": {"name": "Shawn Walker-Salas", "email": "shawn.walker@oracle.com", "date": "2017-02-16T06:52:47Z"}, "message": "simplify home_dir by removing unnecessary getpwuid_r wrapper", "tree": {"sha": "967ad44bb112ccb89ea42bb946c37b639e6490a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/967ad44bb112ccb89ea42bb946c37b639e6490a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57895393115c61ec01fcbc9815f9821b2bfe5886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57895393115c61ec01fcbc9815f9821b2bfe5886", "html_url": "https://github.com/rust-lang/rust/commit/57895393115c61ec01fcbc9815f9821b2bfe5886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57895393115c61ec01fcbc9815f9821b2bfe5886/comments", "author": {"login": "binarycrusader", "id": 541114, "node_id": "MDQ6VXNlcjU0MTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/541114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarycrusader", "html_url": "https://github.com/binarycrusader", "followers_url": "https://api.github.com/users/binarycrusader/followers", "following_url": "https://api.github.com/users/binarycrusader/following{/other_user}", "gists_url": "https://api.github.com/users/binarycrusader/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarycrusader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarycrusader/subscriptions", "organizations_url": "https://api.github.com/users/binarycrusader/orgs", "repos_url": "https://api.github.com/users/binarycrusader/repos", "events_url": "https://api.github.com/users/binarycrusader/events{/privacy}", "received_events_url": "https://api.github.com/users/binarycrusader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "binarycrusader", "id": 541114, "node_id": "MDQ6VXNlcjU0MTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/541114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarycrusader", "html_url": "https://github.com/binarycrusader", "followers_url": "https://api.github.com/users/binarycrusader/followers", "following_url": "https://api.github.com/users/binarycrusader/following{/other_user}", "gists_url": "https://api.github.com/users/binarycrusader/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarycrusader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarycrusader/subscriptions", "organizations_url": "https://api.github.com/users/binarycrusader/orgs", "repos_url": "https://api.github.com/users/binarycrusader/repos", "events_url": "https://api.github.com/users/binarycrusader/events{/privacy}", "received_events_url": "https://api.github.com/users/binarycrusader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebf70a9a206e3ecff7d442a7edf297731e9fe042", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf70a9a206e3ecff7d442a7edf297731e9fe042", "html_url": "https://github.com/rust-lang/rust/commit/ebf70a9a206e3ecff7d442a7edf297731e9fe042"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "e78928c266792adb7006cab1b1857ac318aab0e8", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/57895393115c61ec01fcbc9815f9821b2bfe5886/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57895393115c61ec01fcbc9815f9821b2bfe5886/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=57895393115c61ec01fcbc9815f9821b2bfe5886", "patch": "@@ -483,30 +483,21 @@ pub fn home_dir() -> Option<PathBuf> {\n                   target_os = \"nacl\",\n                   target_os = \"emscripten\")))]\n     unsafe fn fallback() -> Option<OsString> {\n-        unsafe fn getpwduid_r(me: libc::uid_t, passwd: &mut libc::passwd,\n-                              buf: &mut Vec<c_char>) -> Option<()> {\n-            let mut result = ptr::null_mut();\n-            match libc::getpwuid_r(me, passwd, buf.as_mut_ptr(),\n-                                   buf.capacity(),\n-                                   &mut result) {\n-                0 if !result.is_null() => Some(()),\n-                _ => None\n-            }\n-        }\n-\n         let amt = match libc::sysconf(libc::_SC_GETPW_R_SIZE_MAX) {\n             n if n < 0 => 512 as usize,\n             n => n as usize,\n         };\n         let mut buf = Vec::with_capacity(amt);\n         let mut passwd: libc::passwd = mem::zeroed();\n-\n-        if getpwduid_r(libc::getuid(), &mut passwd, &mut buf).is_some() {\n-            let ptr = passwd.pw_dir as *const _;\n-            let bytes = CStr::from_ptr(ptr).to_bytes().to_vec();\n-            Some(OsStringExt::from_vec(bytes))\n-        } else {\n-            None\n+        let mut result = ptr::null_mut();\n+        match libc::getpwuid_r(libc::getuid(), &mut passwd, buf.as_mut_ptr(),\n+                               buf.capacity(), &mut result) {\n+            0 if !result.is_null() => {\n+                let ptr = passwd.pw_dir as *const _;\n+                let bytes = CStr::from_ptr(ptr).to_bytes().to_vec();\n+                Some(OsStringExt::from_vec(bytes))\n+            },\n+            _ => None,\n         }\n     }\n }"}]}