{"sha": "391a7ebd830bc8118a9d92979d2660bfc63b0315", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MWE3ZWJkODMwYmM4MTE4YTlkOTI5NzlkMjY2MGJmYzYzYjAzMTU=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-12-17T22:50:58Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-03T22:34:53Z"}, "message": "add comment to <List<ExistentialPredicates>>::principal", "tree": {"sha": "cb6b0c3f05142fc08437f25383c05a04dd8745e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb6b0c3f05142fc08437f25383c05a04dd8745e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/391a7ebd830bc8118a9d92979d2660bfc63b0315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/391a7ebd830bc8118a9d92979d2660bfc63b0315", "html_url": "https://github.com/rust-lang/rust/commit/391a7ebd830bc8118a9d92979d2660bfc63b0315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/391a7ebd830bc8118a9d92979d2660bfc63b0315/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64857de2bd49ddf24600835cc3a7d5917504c769", "url": "https://api.github.com/repos/rust-lang/rust/commits/64857de2bd49ddf24600835cc3a7d5917504c769", "html_url": "https://github.com/rust-lang/rust/commit/64857de2bd49ddf24600835cc3a7d5917504c769"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "05e10784e2dba474013aeb26d72cab3ef18daaad", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/391a7ebd830bc8118a9d92979d2660bfc63b0315/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391a7ebd830bc8118a9d92979d2660bfc63b0315/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=391a7ebd830bc8118a9d92979d2660bfc63b0315", "patch": "@@ -569,14 +569,38 @@ impl<'a, 'gcx, 'tcx> Binder<ExistentialPredicate<'tcx>> {\n impl<'tcx> serialize::UseSpecializedDecodable for &'tcx List<ExistentialPredicate<'tcx>> {}\n \n impl<'tcx> List<ExistentialPredicate<'tcx>> {\n+    /// Returns the \"principal def id\" of this set of existential predicates.\n+    ///\n+    /// A Rust trait object type consists (in addition to a lifetime bound)\n+    /// of a set of trait bounds, which are separated into any number\n+    /// of auto-trait bounds, and at most 1 non-auto-trait bound. The\n+    /// non-auto-trait bound is called the \"principal\" of the trait\n+    /// object.\n+    ///\n+    /// Only the principal can have methods or type parameters (because\n+    /// auto traits can have neither of them). This is important, because\n+    /// it means the auto traits can be treated as an unordered set (methods\n+    /// would force an order for the vtable, while relating traits with\n+    /// type parameters without knowing the order to relate them in is\n+    /// a rather non-trivial task).\n+    ///\n+    /// For example, in the trait object `dyn fmt::Debug + Sync`, the\n+    /// principal bound is `Some(fmt::Debug)`, while the auto-trait bounds\n+    /// are the set `{Sync}`.\n+    ///\n+    /// It is also possible to have a \"trivial\" trait object that\n+    /// consists only of auto traits, with no principal - for example,\n+    /// `dyn Send + Sync`. In that case, the set of auto-trait bounds\n+    /// is `{Send, Sync}`, while there is no principal. These trait objects\n+    /// have a \"trivial\" vtable consisting of just the size, alignment,\n+    /// and destructor.\n     pub fn principal(&self) -> Option<ExistentialTraitRef<'tcx>> {\n         match self[0] {\n             ExistentialPredicate::Trait(tr) => Some(tr),\n             _ => None\n         }\n     }\n \n-\n     pub fn principal_def_id(&self) -> Option<DefId> {\n         self.principal().map(|d| d.def_id)\n     }"}]}