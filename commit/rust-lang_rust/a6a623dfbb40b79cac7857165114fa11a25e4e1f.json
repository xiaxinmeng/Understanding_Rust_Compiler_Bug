{"sha": "a6a623dfbb40b79cac7857165114fa11a25e4e1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YTYyM2RmYmI0MGI3OWNhYzc4NTcxNjUxMTRmYTExYTI1ZTRlMWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-29T15:57:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-29T15:57:56Z"}, "message": "Small cleanup", "tree": {"sha": "b32c98b5c186a6d495d53d6e5b375a47ee0a0955", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32c98b5c186a6d495d53d6e5b375a47ee0a0955"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6a623dfbb40b79cac7857165114fa11a25e4e1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a623dfbb40b79cac7857165114fa11a25e4e1f", "html_url": "https://github.com/rust-lang/rust/commit/a6a623dfbb40b79cac7857165114fa11a25e4e1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6a623dfbb40b79cac7857165114fa11a25e4e1f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "099a8f37f5fd41f7afe26039b063973617133153", "url": "https://api.github.com/repos/rust-lang/rust/commits/099a8f37f5fd41f7afe26039b063973617133153", "html_url": "https://github.com/rust-lang/rust/commit/099a8f37f5fd41f7afe26039b063973617133153"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "439a4d5dbb9de71dfd3e7454351b3117323fe9d1", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a6a623dfbb40b79cac7857165114fa11a25e4e1f/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6a623dfbb40b79cac7857165114fa11a25e4e1f/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=a6a623dfbb40b79cac7857165114fa11a25e4e1f", "patch": "@@ -101,15 +101,7 @@ impl SourceBinder {\n     }\n \n     fn child_by_source(&mut self, db: &impl HirDatabase, container: ChildContainer) -> &DynMap {\n-        self.child_by_source_cache.entry(container).or_insert_with(|| match container {\n-            ChildContainer::DefWithBodyId(it) => it.child_by_source(db),\n-            ChildContainer::ModuleId(it) => it.child_by_source(db),\n-            ChildContainer::TraitId(it) => it.child_by_source(db),\n-            ChildContainer::ImplId(it) => it.child_by_source(db),\n-            ChildContainer::EnumId(it) => it.child_by_source(db),\n-            ChildContainer::VariantId(it) => it.child_by_source(db),\n-            ChildContainer::GenericDefId(it) => it.child_by_source(db),\n-        })\n+        self.child_by_source_cache.entry(container).or_insert_with(|| container.child_by_source(db))\n     }\n }\n \n@@ -145,6 +137,20 @@ impl_froms! {\n     GenericDefId\n }\n \n+impl ChildContainer {\n+    fn child_by_source(self, db: &impl HirDatabase) -> DynMap {\n+        match self {\n+            ChildContainer::DefWithBodyId(it) => it.child_by_source(db),\n+            ChildContainer::ModuleId(it) => it.child_by_source(db),\n+            ChildContainer::TraitId(it) => it.child_by_source(db),\n+            ChildContainer::ImplId(it) => it.child_by_source(db),\n+            ChildContainer::EnumId(it) => it.child_by_source(db),\n+            ChildContainer::VariantId(it) => it.child_by_source(db),\n+            ChildContainer::GenericDefId(it) => it.child_by_source(db),\n+        }\n+    }\n+}\n+\n pub(crate) trait ToIdByKey: Sized + AstNode + 'static {\n     type ID: Sized + Copy + 'static;\n     const KEY: Key<Self, Self::ID>;"}]}