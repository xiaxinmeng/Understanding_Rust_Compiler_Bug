{"sha": "000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMGRiZDI3ZjE0NmY0ZmQ2ZWUyZmI1ZTBmMzA2MGM0NDBhMDg4OTg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-10T15:23:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-10T15:23:14Z"}, "message": "Rollup merge of #86165 - m-ou-se:proc-macro-span-shrink, r=dtolnay\n\nAdd proc_macro::Span::{before, after}.\n\nThis adds `proc_macro::Span::before()` and `proc_macro::Span::after()` to get a zero width span at the start or end of the span.\n\nThese are equivalent to rustc's `Span::shrink_to_lo()` and `Span::shrink_to_hi()` but with a less cryptic name. They are useful when generating diagnostlics like \"missing \\<thing\\> after \\<thing\\>\".\n\nE.g.\n\n```rust\nsyn::Error::new(ident.span().after(), \"missing `:` after field name\").into_compile_error()\n```", "tree": {"sha": "5d4a2ffcb93d0e604ef357304d4269805ca98feb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d4a2ffcb93d0e604ef357304d4269805ca98feb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhO3hiCRBK7hj4Ov3rIwAAitoIAJYGYSJmnyQCBMBub6n/Maog\nLYqMuCPXJB0AG+T1X0A43p/Mv8Xxyu4dwSuWbdajbNUkBnLUoVxGJWRbid2j/uy9\nHlpAFC0NWzUkimCF84GGdVg+afY78Qf6d5JLpbR7L85k3eimPEUebfHa+CLLb89V\nCmoWQgYEc3UK7JTg+lw9EmG1gZO428onjNwEqXphReVrG21Cuj7s8PhevzBDNGjX\n4+bZ/bHc2EdAfBGFEc/vWBeERcp8izTd6nvT6i+0PRpWrxTKmZMJSXQx3Wfn9BUc\nHuN7kdzcpRX+fhLA7mCJl7gr1hR3fYmeSsmCdVnk136l7AS2Ron2ep+mDfgjNFA=\n=sgm+\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d4a2ffcb93d0e604ef357304d4269805ca98feb\nparent acfe7c41412808094fd85ba3b9f5ceeabfeea932\nparent f9be6cd8988a48a532c99a9f5b887a6d354e5b2f\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631287394 -0700\ncommitter GitHub <noreply@github.com> 1631287394 -0700\n\nRollup merge of #86165 - m-ou-se:proc-macro-span-shrink, r=dtolnay\n\nAdd proc_macro::Span::{before, after}.\n\nThis adds `proc_macro::Span::before()` and `proc_macro::Span::after()` to get a zero width span at the start or end of the span.\n\nThese are equivalent to rustc's `Span::shrink_to_lo()` and `Span::shrink_to_hi()` but with a less cryptic name. They are useful when generating diagnostlics like \"missing \\<thing\\> after \\<thing\\>\".\n\nE.g.\n\n```rust\nsyn::Error::new(ident.span().after(), \"missing `:` after field name\").into_compile_error()\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "html_url": "https://github.com/rust-lang/rust/commit/000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acfe7c41412808094fd85ba3b9f5ceeabfeea932", "url": "https://api.github.com/repos/rust-lang/rust/commits/acfe7c41412808094fd85ba3b9f5ceeabfeea932", "html_url": "https://github.com/rust-lang/rust/commit/acfe7c41412808094fd85ba3b9f5ceeabfeea932"}, {"sha": "f9be6cd8988a48a532c99a9f5b887a6d354e5b2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9be6cd8988a48a532c99a9f5b887a6d354e5b2f", "html_url": "https://github.com/rust-lang/rust/commit/f9be6cd8988a48a532c99a9f5b887a6d354e5b2f"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "02d92e7c90a0d07c89c5ac58f21df53caaab58ec", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "patch": "@@ -758,6 +758,12 @@ impl server::Span for Rustc<'_> {\n         let loc = self.sess.source_map().lookup_char_pos(span.hi());\n         LineColumn { line: loc.line, column: loc.col.to_usize() }\n     }\n+    fn before(&mut self, span: Self::Span) -> Self::Span {\n+        span.shrink_to_lo()\n+    }\n+    fn after(&mut self, span: Self::Span) -> Self::Span {\n+        span.shrink_to_hi()\n+    }\n     fn join(&mut self, first: Self::Span, second: Self::Span) -> Option<Self::Span> {\n         let self_loc = self.sess.source_map().lookup_char_pos(first.lo());\n         let other_loc = self.sess.source_map().lookup_char_pos(second.lo());"}, {"sha": "bb05506defd0778c8f1f24e72d2a9d1617a64121", "filename": "library/proc_macro/src/bridge/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs?ref=000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "patch": "@@ -162,6 +162,8 @@ macro_rules! with_api {\n                 fn source($self: $S::Span) -> $S::Span;\n                 fn start($self: $S::Span) -> LineColumn;\n                 fn end($self: $S::Span) -> LineColumn;\n+                fn before($self: $S::Span) -> $S::Span;\n+                fn after($self: $S::Span) -> $S::Span;\n                 fn join($self: $S::Span, other: $S::Span) -> Option<$S::Span>;\n                 fn resolved_at($self: $S::Span, at: $S::Span) -> $S::Span;\n                 fn source_text($self: $S::Span) -> Option<String>;"}, {"sha": "e21a1507a62e200689e9a2d182d2673461baaa0f", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000dbd27f146f4fd6ee2fb5e0f3060c440a08898/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=000dbd27f146f4fd6ee2fb5e0f3060c440a08898", "patch": "@@ -357,6 +357,18 @@ impl Span {\n         self.0.end().add_1_to_column()\n     }\n \n+    /// Creates an empty span pointing to directly before this span.\n+    #[unstable(feature = \"proc_macro_span_shrink\", issue = \"87552\")]\n+    pub fn before(&self) -> Span {\n+        Span(self.0.before())\n+    }\n+\n+    /// Creates an empty span pointing to directly after this span.\n+    #[unstable(feature = \"proc_macro_span_shrink\", issue = \"87552\")]\n+    pub fn after(&self) -> Span {\n+        Span(self.0.after())\n+    }\n+\n     /// Creates a new span encompassing `self` and `other`.\n     ///\n     /// Returns `None` if `self` and `other` are from different files."}]}