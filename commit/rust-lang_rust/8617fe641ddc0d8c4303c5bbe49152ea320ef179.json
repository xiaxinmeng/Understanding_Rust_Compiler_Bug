{"sha": "8617fe641ddc0d8c4303c5bbe49152ea320ef179", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MTdmZTY0MWRkYzBkOGM0MzAzYzViYmU0OTE1MmVhMzIwZWYxNzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-24T09:49:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-24T09:49:25Z"}, "message": "Merge #3694\n\n3694: Complete only missing fields r=matklad a=SomeoneToIgnore\n\n\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "8a757993eed789d309b92c974b1956acaba6f09d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a757993eed789d309b92c974b1956acaba6f09d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8617fe641ddc0d8c4303c5bbe49152ea320ef179", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeedelCRBK7hj4Ov3rIwAAdHIIAGvckeENxljUESvRpc1OX7kq\nQm65HiDemraJPchAzhmO1nuGvcmKsASSimv14bcojPyar/3mIgR93qruf96q+D6e\n44O6ebkojnuv0dUUnPDOHGYymANgqRIdM68WOfQcvWlaSYSA5opD7QzbfcOgCiwv\nmAiVr8F6wQAXIMMMlrgcFjdqQkBoJNpy+gI2s2p9qb/+GBPRgBCCwoDi1r7e6tix\nK4efoISYD51AirIcUbacAcgEOgTFw6ZkxI8BPCgkOHOkav65InTcvczetABJqUVp\nrjfG2agmCq95ysPqNup9LHDX4mbYM1o0xs4MX24tHXagpeRkicfeSPrc+XPO0Fs=\n=yj3W\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a757993eed789d309b92c974b1956acaba6f09d\nparent c23c76eea9990f6e46fac3b92c9652600b2a47e9\nparent f1cf1cc1ca47ba3bbe208144659612f786dff3d5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1585043365 +0000\ncommitter GitHub <noreply@github.com> 1585043365 +0000\n\nMerge #3694\n\n3694: Complete only missing fields r=matklad a=SomeoneToIgnore\n\n\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8617fe641ddc0d8c4303c5bbe49152ea320ef179", "html_url": "https://github.com/rust-lang/rust/commit/8617fe641ddc0d8c4303c5bbe49152ea320ef179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8617fe641ddc0d8c4303c5bbe49152ea320ef179/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c23c76eea9990f6e46fac3b92c9652600b2a47e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c23c76eea9990f6e46fac3b92c9652600b2a47e9", "html_url": "https://github.com/rust-lang/rust/commit/c23c76eea9990f6e46fac3b92c9652600b2a47e9"}, {"sha": "f1cf1cc1ca47ba3bbe208144659612f786dff3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cf1cc1ca47ba3bbe208144659612f786dff3d5", "html_url": "https://github.com/rust-lang/rust/commit/f1cf1cc1ca47ba3bbe208144659612f786dff3d5"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "e4e764f58242c79dfdc4f3527790d83c48cbc21c", "filename": "crates/ra_ide/src/completion/complete_record_literal.rs", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/8617fe641ddc0d8c4303c5bbe49152ea320ef179/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8617fe641ddc0d8c4303c5bbe49152ea320ef179/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=8617fe641ddc0d8c4303c5bbe49152ea320ef179", "patch": "@@ -1,6 +1,7 @@\n //! FIXME: write short doc here\n \n use crate::completion::{CompletionContext, Completions};\n+use ra_syntax::SmolStr;\n \n /// Complete fields in fields literals.\n pub(super) fn complete_record_literal(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -11,8 +12,24 @@ pub(super) fn complete_record_literal(acc: &mut Completions, ctx: &CompletionCon\n         _ => return,\n     };\n \n+    let already_present_names: Vec<SmolStr> = ctx\n+        .record_lit_syntax\n+        .as_ref()\n+        .and_then(|record_literal| record_literal.record_field_list())\n+        .map(|field_list| field_list.fields())\n+        .map(|fields| {\n+            fields\n+                .into_iter()\n+                .filter_map(|field| field.name_ref())\n+                .map(|name_ref| name_ref.text().clone())\n+                .collect()\n+        })\n+        .unwrap_or_default();\n+\n     for (field, field_ty) in ty.variant_fields(ctx.db, variant) {\n-        acc.add_field(ctx, field, &field_ty);\n+        if !already_present_names.contains(&SmolStr::from(field.name(ctx.db).to_string())) {\n+            acc.add_field(ctx, field, &field_ty);\n+        }\n     }\n }\n \n@@ -178,4 +195,47 @@ mod tests {\n         ]\n         \"###);\n     }\n+\n+    #[test]\n+    fn only_missing_fields_are_completed() {\n+        let completions = complete(\n+            r\"\n+            struct S {\n+                foo1: u32,\n+                foo2: u32,\n+                bar: u32,\n+                baz: u32,\n+            }\n+\n+            fn main() {\n+                let foo1 = 1;\n+                let s = S {\n+                    foo1,\n+                    foo2: 5,\n+                    <|>\n+                }\n+            }\n+            \",\n+        );\n+        assert_debug_snapshot!(completions, @r###\"\n+        [\n+            CompletionItem {\n+                label: \"bar\",\n+                source_range: [302; 302),\n+                delete: [302; 302),\n+                insert: \"bar\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+            CompletionItem {\n+                label: \"baz\",\n+                source_range: [302; 302),\n+                delete: [302; 302),\n+                insert: \"baz\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n+        \"###);\n+    }\n }"}]}