{"sha": "d5495e215559e503e7ad6d3321bb3786184fc22b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NDk1ZTIxNTU1OWU1MDNlN2FkNmQzMzIxYmIzNzg2MTg0ZmMyMmI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-06T02:45:44Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-03T13:29:20Z"}, "message": "Refactor `ItemLink` into its own struct", "tree": {"sha": "92fac8bd93665b0f890ee8266b2adf38c9ede44e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92fac8bd93665b0f890ee8266b2adf38c9ede44e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5495e215559e503e7ad6d3321bb3786184fc22b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5495e215559e503e7ad6d3321bb3786184fc22b", "html_url": "https://github.com/rust-lang/rust/commit/d5495e215559e503e7ad6d3321bb3786184fc22b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5495e215559e503e7ad6d3321bb3786184fc22b/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89ae59a360b18e34b4cdbec8e53c9a4e05b7db14", "url": "https://api.github.com/repos/rust-lang/rust/commits/89ae59a360b18e34b4cdbec8e53c9a4e05b7db14", "html_url": "https://github.com/rust-lang/rust/commit/89ae59a360b18e34b4cdbec8e53c9a4e05b7db14"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "949790cfe26e1ffc99b45041809ddc30ebcb2224", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d5495e215559e503e7ad6d3321bb3786184fc22b/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5495e215559e503e7ad6d3321bb3786184fc22b/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=d5495e215559e503e7ad6d3321bb3786184fc22b", "patch": "@@ -425,10 +425,22 @@ pub struct Attributes {\n     pub cfg: Option<Arc<Cfg>>,\n     pub span: Option<rustc_span::Span>,\n     /// map from Rust paths to resolved defs and potential URL fragments\n-    pub links: Vec<(String, Option<DefId>, Option<String>)>,\n+    pub links: Vec<ItemLink>,\n     pub inner_docs: bool,\n }\n \n+#[derive(Clone, Debug, Default, PartialEq, Eq, Hash)]\n+/// A link that has not yet been rendered.\n+///\n+/// This link will be turned into a rendered link by [`Attributes::links`]\n+pub struct ItemLink {\n+    /// The original link written in the markdown\n+    pub(crate) link: String,\n+    pub(crate) did: Option<DefId>,\n+    /// The url fragment to append to the link\n+    pub(crate) fragment: Option<String>,\n+}\n+\n impl Attributes {\n     /// Extracts the content from an attribute `#[doc(cfg(content))]`.\n     pub fn extract_cfg(mi: &ast::MetaItem) -> Option<&ast::MetaItem> {\n@@ -611,8 +623,8 @@ impl Attributes {\n \n         self.links\n             .iter()\n-            .filter_map(|&(ref s, did, ref fragment)| {\n-                match did {\n+            .filter_map(|ItemLink { link: s, did, fragment }| {\n+                match *did {\n                     Some(did) => {\n                         if let Some((mut href, ..)) = href(did) {\n                             if let Some(ref fragment) = *fragment {"}, {"sha": "a0cffc92ce19546cfe90b9753561e8bdf969ca65", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5495e215559e503e7ad6d3321bb3786184fc22b/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5495e215559e503e7ad6d3321bb3786184fc22b/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=d5495e215559e503e7ad6d3321bb3786184fc22b", "patch": "@@ -904,7 +904,7 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n             if let Res::PrimTy(_) = res {\n                 match disambiguator {\n                     Some(Disambiguator::Primitive | Disambiguator::Namespace(_)) | None => {\n-                        item.attrs.links.push((ori_link, None, fragment))\n+                        item.attrs.links.push(ItemLink { link: ori_link, did: None, fragment });\n                     }\n                     Some(other) => {\n                         report_mismatch(other, Disambiguator::Primitive);\n@@ -955,7 +955,7 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                     }\n                 }\n                 let id = register_res(cx, res);\n-                item.attrs.links.push((ori_link, Some(id), fragment));\n+                item.attrs.links.push(ItemLink { link: ori_link, did: Some(id), fragment });\n             }\n         }\n "}]}