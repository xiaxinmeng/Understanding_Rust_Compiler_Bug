{"sha": "0daf069b0efb7690bcd3436318e806b8b4d983a4", "node_id": "C_kwDOAAsO6NoAKDBkYWYwNjliMGVmYjc2OTBiY2QzNDM2MzE4ZTgwNmI4YjRkOTgzYTQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-25T17:37:18Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-25T17:37:18Z"}, "message": "fix: Fix renames of locals being broken in macro calls", "tree": {"sha": "391e7d67d2c30e4723e73e64e7fae5590f815bae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391e7d67d2c30e4723e73e64e7fae5590f815bae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0daf069b0efb7690bcd3436318e806b8b4d983a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0daf069b0efb7690bcd3436318e806b8b4d983a4", "html_url": "https://github.com/rust-lang/rust/commit/0daf069b0efb7690bcd3436318e806b8b4d983a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0daf069b0efb7690bcd3436318e806b8b4d983a4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71b23360e781a00e51ed702a96e181261e92c6c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/71b23360e781a00e51ed702a96e181261e92c6c5", "html_url": "https://github.com/rust-lang/rust/commit/71b23360e781a00e51ed702a96e181261e92c6c5"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "980de3c2685a95665f5c0f75b89dd155933eab29", "filename": "crates/hir-expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0daf069b0efb7690bcd3436318e806b8b4d983a4/crates%2Fhir-expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0daf069b0efb7690bcd3436318e806b8b4d983a4/crates%2Fhir-expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Flib.rs?ref=0daf069b0efb7690bcd3436318e806b8b4d983a4", "patch": "@@ -977,6 +977,7 @@ impl<N: AstNode> InFile<N> {\n         self.value.syntax().descendants().filter_map(T::cast).map(move |n| self.with_value(n))\n     }\n \n+    // FIXME: this should return `Option<InFileNotHirFile<N>>`\n     pub fn original_ast_node(self, db: &dyn db::ExpandDatabase) -> Option<InFile<N>> {\n         // This kind of upmapping can only be achieved in attribute expanded files,\n         // as we don't have node inputs otherwise and therefore can't find an `N` node in the input"}, {"sha": "9aadf40363853f95fbe74ddb9aa693750ebee773", "filename": "crates/ide-db/src/rename.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0daf069b0efb7690bcd3436318e806b8b4d983a4/crates%2Fide-db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0daf069b0efb7690bcd3436318e806b8b4d983a4/crates%2Fide-db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Frename.rs?ref=0daf069b0efb7690bcd3436318e806b8b4d983a4", "patch": "@@ -207,7 +207,7 @@ fn rename_mod(\n             }\n             // The anchor is on the same level as target dir\n             (false, true, Some(mod_name)) => {\n-                Some((mod_name.unescaped().to_string(), new_name.to_string()))\n+                Some((mod_name.unescaped().to_string(), new_name.to_owned()))\n             }\n             _ => None,\n         };\n@@ -232,7 +232,7 @@ fn rename_mod(\n                 {\n                     source_change.insert_source_edit(\n                         file_id,\n-                        TextEdit::replace(file_range.range, new_name.to_string()),\n+                        TextEdit::replace(file_range.range, new_name.to_owned()),\n                     )\n                 };\n             }\n@@ -442,7 +442,7 @@ fn source_edit_from_name_ref(\n                         let s = field_name.syntax().text_range().start();\n                         let e = pat.syntax().text_range().start();\n                         edit.delete(TextRange::new(s, e));\n-                        edit.replace(name.syntax().text_range(), new_name.to_string());\n+                        edit.replace(name.syntax().text_range(), new_name.to_owned());\n                         return true;\n                     }\n                 }\n@@ -462,7 +462,19 @@ fn source_edit_from_def(\n     if let Definition::Local(local) = def {\n         let mut file_id = None;\n         for source in local.sources(sema.db) {\n-            let source = source.source;\n+            let source = match source.source.clone().original_ast_node(sema.db) {\n+                Some(source) => source,\n+                None => match source.source.syntax().original_file_range_opt(sema.db) {\n+                    Some(FileRange { file_id: file_id2, range }) => {\n+                        file_id = Some(file_id2);\n+                        edit.replace(range, new_name.to_owned());\n+                        continue;\n+                    }\n+                    None => {\n+                        bail!(\"Can't rename local that is defined in a macro declaration\")\n+                    }\n+                },\n+            };\n             file_id = source.file_id.file_id();\n             if let Either::Left(pat) = source.value {\n                 let name_range = pat.name().unwrap().syntax().text_range();\n@@ -485,7 +497,7 @@ fn source_edit_from_def(\n                             // Foo { field: ref mut local @ local 2} -> Foo { field: ref mut new_name @ local2 }\n                             // Foo { field: ref mut local } -> Foo { field: ref mut new_name }\n                             //                      ^^^^^ replace this with `new_name`\n-                            edit.replace(name_range, new_name.to_string());\n+                            edit.replace(name_range, new_name.to_owned());\n                         }\n                     } else {\n                         // Foo { ref mut field } -> Foo { field: ref mut new_name }\n@@ -495,10 +507,10 @@ fn source_edit_from_def(\n                             pat.syntax().text_range().start(),\n                             format!(\"{}: \", pat_field.field_name().unwrap()),\n                         );\n-                        edit.replace(name_range, new_name.to_string());\n+                        edit.replace(name_range, new_name.to_owned());\n                     }\n                 } else {\n-                    edit.replace(name_range, new_name.to_string());\n+                    edit.replace(name_range, new_name.to_owned());\n                 }\n             }\n         }"}]}