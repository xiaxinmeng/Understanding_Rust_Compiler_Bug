{"sha": "c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZDBiNzE3ZWUwOWQzNjgwYWIxNmZhOTFiMmY1YzZhZjhkNDBkNTM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-04-08T23:56:08Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-04-08T23:57:48Z"}, "message": "Fix codemap.lookup_pos\n\nPreviously, it would place every single location in the first\nfile of the crate that was parsed.", "tree": {"sha": "eb4df8157cb92d1761ff6804097c672ba19de94d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb4df8157cb92d1761ff6804097c672ba19de94d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53", "html_url": "https://github.com/rust-lang/rust/commit/c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "129c8392af9711c747df35f2e6b13606bc2a985b", "url": "https://api.github.com/repos/rust-lang/rust/commits/129c8392af9711c747df35f2e6b13606bc2a985b", "html_url": "https://github.com/rust-lang/rust/commit/129c8392af9711c747df35f2e6b13606bc2a985b"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "8d18e51b7d9dcdb0c75f394bf95c385f0e53cdeb", "filename": "src/comp/front/codemap.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53/src%2Fcomp%2Ffront%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53/src%2Fcomp%2Ffront%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fcodemap.rs?ref=c0d0b717ee09d3680ab16fa91b2f5c6af8d40d53", "patch": "@@ -18,35 +18,32 @@ fn new_codemap() -> codemap {\n }\n \n fn new_filemap(str filename, uint start_pos) -> filemap {\n-    let vec[uint] lines = vec();\n     ret @rec(name=filename,\n              start_pos=start_pos,\n-             mutable lines=lines);\n+             mutable lines=vec(0u));\n }\n \n fn next_line(filemap file, uint pos) {\n     _vec.push[uint](file.lines, pos);\n }\n \n fn lookup_pos(codemap map, uint pos) -> loc {\n-    for (filemap f in map.files) {\n-        if (f.start_pos < pos) {\n-            auto line_num = 1u;\n-            auto line_start = 0u;\n+    auto i = _vec.len[filemap](map.files);\n+    while (i > 0u) {\n+        i -= 1u;\n+        auto f = map.files.(i);\n+        if (f.start_pos <= pos) {\n             // FIXME this can be a binary search if we need to be faster\n-            for (uint line_start_ in f.lines) {\n-                // FIXME duplicate code due to lack of working break\n-                if (line_start_ > pos) {\n+            auto line = _vec.len[uint](f.lines);\n+            while (line > 0u) {\n+                line -= 1u;\n+                auto line_start = f.lines.(line);\n+                if (line_start <= pos) {\n                     ret rec(filename=f.name,\n-                            line=line_num,\n+                            line=line + 1u,\n                             col=pos-line_start);\n                 }\n-                line_start = line_start_;\n-                line_num += 1u;\n             }\n-            ret rec(filename=f.name,\n-                    line=line_num,\n-                    col=pos-line_start);\n         }\n     }\n     log #fmt(\"Failed to find a location for character %u\", pos);"}]}