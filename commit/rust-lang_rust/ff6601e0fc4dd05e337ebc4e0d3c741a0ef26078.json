{"sha": "ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "node_id": "C_kwDOAAsO6NoAKGZmNjYwMWUwZmM0ZGQwNWUzMzdlYmM0ZTBkM2M3NDFhMGVmMjYwNzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-07T20:31:33Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-07T20:31:33Z"}, "message": "some clippy::perf fixes", "tree": {"sha": "88f39d36cba3b6234885775178f915acf4aa6787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88f39d36cba3b6234885775178f915acf4aa6787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "html_url": "https://github.com/rust-lang/rust/commit/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0157cc977fd71297ce73e2f249321f5ba2555d42", "url": "https://api.github.com/repos/rust-lang/rust/commits/0157cc977fd71297ce73e2f249321f5ba2555d42", "html_url": "https://github.com/rust-lang/rust/commit/0157cc977fd71297ce73e2f249321f5ba2555d42"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3d29d305021090512f8dcdf3b86afa1084ec1cbd", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "patch": "@@ -1096,7 +1096,7 @@ impl<'a> Parser<'a> {\n             (Err(ref mut err), Some((mut snapshot, ExprKind::Path(None, path)))) => {\n                 let name = pprust::path_to_string(&path);\n                 snapshot.bump(); // `(`\n-                match snapshot.parse_struct_fields(path.clone(), false, token::Paren) {\n+                match snapshot.parse_struct_fields(path, false, token::Paren) {\n                     Ok((fields, ..)) if snapshot.eat(&token::CloseDelim(token::Paren)) => {\n                         // We have are certain we have `Enum::Foo(a: 3, b: 4)`, suggest\n                         // `Enum::Foo { a: 3, b: 4 }` or `Enum::Foo(3, 4)`."}, {"sha": "78849b276d6bfb80f610c574a021f4b7efb91d3a", "filename": "compiler/rustc_typeck/src/check/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs?ref=ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "patch": "@@ -431,7 +431,7 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                         .sess\n                         .source_map()\n                         .span_to_snippet(self.expr.span)\n-                        .map_or(false, |snip| snip.starts_with(\"(\"));\n+                        .map_or(false, |snip| snip.starts_with('('));\n \n                     // Very crude check to see whether the expression must be wrapped\n                     // in parentheses for the suggestion to work (issue #89497)."}, {"sha": "3846aad2cfc103e2447cb27de49bea72afb9a23d", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=ff6601e0fc4dd05e337ebc4e0d3c741a0ef26078", "patch": "@@ -1887,7 +1887,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             };\n         let expr_snippet =\n             self.tcx.sess.source_map().span_to_snippet(expr.span).unwrap_or(String::new());\n-        let is_wrapped = expr_snippet.starts_with(\"(\") && expr_snippet.ends_with(\")\");\n+        let is_wrapped = expr_snippet.starts_with('(') && expr_snippet.ends_with(')');\n         let after_open = expr.span.lo() + rustc_span::BytePos(1);\n         let before_close = expr.span.hi() - rustc_span::BytePos(1);\n "}]}