{"sha": "c0d40a1908723a7bbf0d2f745570162de250f188", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZDQwYTE5MDg3MjNhN2JiZjBkMmY3NDU1NzAxNjJkZTI1MGYxODg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-11T13:26:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-11T13:26:09Z"}, "message": "Auto merge of #45192 - steveklabnik:rollup, r=steveklabnik\n\nRollup of 5 pull requests\n\n- Successful merges: #45071, #45139, #45148, #45171, #45180\n- Failed merges: #45121", "tree": {"sha": "28d342c8beb99445f408a545a7ff101d4f161889", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28d342c8beb99445f408a545a7ff101d4f161889"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0d40a1908723a7bbf0d2f745570162de250f188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d40a1908723a7bbf0d2f745570162de250f188", "html_url": "https://github.com/rust-lang/rust/commit/c0d40a1908723a7bbf0d2f745570162de250f188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0d40a1908723a7bbf0d2f745570162de250f188/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "264aafe0566e521bbc95bd3f44dae97591c9fd20", "url": "https://api.github.com/repos/rust-lang/rust/commits/264aafe0566e521bbc95bd3f44dae97591c9fd20", "html_url": "https://github.com/rust-lang/rust/commit/264aafe0566e521bbc95bd3f44dae97591c9fd20"}, {"sha": "4a90366464a109f5959917cce188f73fef6aa225", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a90366464a109f5959917cce188f73fef6aa225", "html_url": "https://github.com/rust-lang/rust/commit/4a90366464a109f5959917cce188f73fef6aa225"}], "stats": {"total": 249, "additions": 229, "deletions": 20}, "files": [{"sha": "194745d9caad4062dbf1593703c72f0a76aeabb6", "filename": "RELEASES.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0d40a1908723a7bbf0d2f745570162de250f188/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/c0d40a1908723a7bbf0d2f745570162de250f188/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=c0d40a1908723a7bbf0d2f745570162de250f188", "patch": "@@ -3,19 +3,19 @@ Version 1.21.0 (2017-10-12)\n \n Language\n --------\n-- [Relaxed path syntax. You can now add type parameters to values][43540]\n-  Example:\n-  ```rust\n-  my_macro!(Vec<i32>::new); // Always worked\n-  my_macro!(Vec::<i32>::new); // Now works\n-  ```\n - [You can now use static references for literals.][43838]\n   Example:\n   ```rust\n   fn main() {\n       let x: &'static u32 = &0;\n   }\n   ```\n+- [Relaxed path syntax. Optional `::` before `<` is now allowed in all contexts.][43540]\n+  Example:\n+  ```rust\n+  my_macro!(Vec<i32>::new); // Always worked\n+  my_macro!(Vec::<i32>::new); // Now works\n+  ```\n \n Compiler\n --------"}, {"sha": "0ea4af386c7cbcb3d10203ea7e357b8dfcf4e99f", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=c0d40a1908723a7bbf0d2f745570162de250f188", "patch": "@@ -407,11 +407,6 @@ def configure_section(lines, config):\n     contents = contents.replace(\"$(CFG_PYTHON)\", sys.executable)\n     f.write(contents)\n \n-# Finally, clean up with a bit of a help message\n-relpath = os.path.dirname(__file__)\n-if relpath == '':\n-    relpath = '.'\n-\n p(\"\")\n-p(\"run `python {}/x.py --help`\".format(relpath))\n+p(\"run `python {}/x.py --help`\".format(rust_dir))\n p(\"\")"}, {"sha": "0612873e28153b445964ccaffb52021098ddf915", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=c0d40a1908723a7bbf0d2f745570162de250f188", "patch": "@@ -248,7 +248,10 @@ def __init__(self, val):\n     def to_string(self):\n         (length, data_ptr) = rustpp.extract_length_and_ptr_from_slice(self.__val)\n         raw_ptr = data_ptr.get_wrapped_value()\n-        return '\"%s\"' % raw_ptr.string(encoding=\"utf-8\", length=length)\n+        return raw_ptr.lazy_string(encoding=\"utf-8\", length=length)\n+\n+    def display_hint(self):\n+        return \"string\"\n \n \n class RustStdVecPrinter(object):\n@@ -278,9 +281,11 @@ def __init__(self, val):\n     def to_string(self):\n         vec = self.__val.get_child_at_index(0)\n         (length, data_ptr, cap) = rustpp.extract_length_ptr_and_cap_from_std_vec(vec)\n-        return '\"%s\"' % data_ptr.get_wrapped_value().string(encoding=\"utf-8\",\n-                                                            length=length)\n+        return data_ptr.get_wrapped_value().lazy_string(encoding=\"utf-8\",\n+                                                        length=length)\n \n+    def display_hint(self):\n+        return \"string\"\n \n class RustOsStringPrinter(object):\n     def __init__(self, val):\n@@ -294,8 +299,10 @@ def to_string(self):\n \n         (length, data_ptr, cap) = rustpp.extract_length_ptr_and_cap_from_std_vec(\n             vec)\n-        return '\"%s\"' % data_ptr.get_wrapped_value().string(length=length)\n+        return data_ptr.get_wrapped_value().lazy_string(length=length)\n \n+    def display_hint(self):\n+        return \"string\"\n \n class RustCStyleVariantPrinter(object):\n     def __init__(self, val):"}, {"sha": "389b0401b86ab2e528276a8b7a9e57289809c6f8", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=c0d40a1908723a7bbf0d2f745570162de250f188", "patch": "@@ -603,6 +603,49 @@ macro_rules! define_provider_struct {\n     };\n }\n \n+\n+/// The red/green evaluation system will try to mark a specific DepNode in the\n+/// dependency graph as green by recursively trying to mark the dependencies of\n+/// that DepNode as green. While doing so, it will sometimes encounter a DepNode\n+/// where we don't know if it is red or green and we therefore actually have\n+/// to recompute its value in order to find out. Since the only piece of\n+/// information that we have at that point is the DepNode we are trying to\n+/// re-evaluate, we need some way to re-run a query from just that. This is what\n+/// `force_from_dep_node()` implements.\n+///\n+/// In the general case, a DepNode consists of a DepKind and an opaque\n+/// GUID/fingerprint that will uniquely identify the node. This GUID/fingerprint\n+/// is usually constructed by computing a stable hash of the query-key that the\n+/// DepNode corresponds to. Consequently, it is not in general possible to go\n+/// back from hash to query-key (since hash functions are not reversible). For\n+/// this reason `force_from_dep_node()` is expected to fail from time to time\n+/// because we just cannot find out, from the DepNode alone, what the\n+/// corresponding query-key is and therefore cannot re-run the query.\n+///\n+/// The system deals with this case letting `try_mark_green` fail which forces\n+/// the root query to be re-evaluated.\n+///\n+/// Now, if force_from_dep_node() would always fail, it would be pretty useless.\n+/// Fortunately, we can use some contextual information that will allow us to\n+/// reconstruct query-keys for certain kinds of DepNodes. In particular, we\n+/// enforce by construction that the GUID/fingerprint of certain DepNodes is a\n+/// valid DefPathHash. Since we also always build a huge table that maps every\n+/// DefPathHash in the current codebase to the corresponding DefId, we have\n+/// everything we need to re-run the query.\n+///\n+/// Take the `mir_validated` query as an example. Like many other queries, it\n+/// just has a single parameter: the DefId of the item it will compute the\n+/// validated MIR for. Now, when we call `force_from_dep_node()` on a dep-node\n+/// with kind `MirValidated`, we know that the GUID/fingerprint of the dep-node\n+/// is actually a DefPathHash, and can therefore just look up the corresponding\n+/// DefId in `tcx.def_path_hash_to_def_id`.\n+///\n+/// When you implement a new query, it will likely have a corresponding new\n+/// DepKind, and you'll have to support it here in `force_from_dep_node()`. As\n+/// a rule of thumb, if your query takes a DefId or DefIndex as sole parameter,\n+/// then `force_from_dep_node()` should not fail for it. Otherwise, you can just\n+/// add it to the \"We don't have enough information to reconstruct...\" group in\n+/// the match below.\n pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n                                            dep_node: &DepNode)\n                                            -> bool {\n@@ -687,16 +730,16 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::Hir |\n \n         // This are anonymous nodes\n+        DepKind::TraitSelect |\n+\n+        // We don't have enough information to reconstruct the query key of\n+        // these\n         DepKind::IsCopy |\n         DepKind::IsSized |\n         DepKind::IsFreeze |\n         DepKind::NeedsDrop |\n         DepKind::Layout |\n-        DepKind::TraitSelect |\n         DepKind::ConstEval |\n-\n-        // We don't have enough information to reconstruct the query key of\n-        // these\n         DepKind::InstanceSymbolName |\n         DepKind::MirShim |\n         DepKind::BorrowCheckKrate |"}, {"sha": "2a28c895b797e2c1eab38159b0133d45c5cce8b7", "filename": "src/test/debuginfo/pretty-std.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs?ref=c0d40a1908723a7bbf0d2f745570162de250f188", "patch": "@@ -44,6 +44,10 @@\n // gdb-command: print some_string\n // gdb-check:$8 = Some = {\"IAMA optional string!\"}\n \n+// gdb-command: set print length 5\n+// gdb-command: print some_string\n+// gdb-check:$8 = Some = {\"IAMA \"...}\n+\n \n // === LLDB TESTS ==================================================================================\n "}, {"sha": "d46fbd367607c72e535f3225e1bda6f7014c12eb", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d40a1908723a7bbf0d2f745570162de250f188/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=c0d40a1908723a7bbf0d2f745570162de250f188", "patch": "@@ -38,6 +38,20 @@ pub fn change_name() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_name() {\n     let _y = 2u64;\n }\n@@ -57,6 +71,20 @@ pub fn add_type() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn add_type() {\n     let _x: u32 = 2u32;\n }\n@@ -76,6 +104,20 @@ pub fn change_type() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_type() {\n     let _x: u8 = 2;\n }\n@@ -95,6 +137,20 @@ pub fn change_mutability_of_reference_type() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_mutability_of_reference_type() {\n     let _x: &mut u64;\n }\n@@ -114,6 +170,20 @@ pub fn change_mutability_of_slot() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_mutability_of_slot() {\n     let _x: u64 = 0;\n }\n@@ -133,6 +203,20 @@ pub fn change_simple_binding_to_pattern() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_simple_binding_to_pattern() {\n     let (_a, _b) = (0u8, 'x');\n }\n@@ -152,6 +236,20 @@ pub fn change_name_in_pattern() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_name_in_pattern() {\n     let (_a, _c) = (1u8, 'y');\n }\n@@ -171,6 +269,20 @@ pub fn add_ref_in_pattern() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn add_ref_in_pattern() {\n     let (ref _a, _b) = (1u8, 'y');\n }\n@@ -190,6 +302,12 @@ pub fn add_amp_in_pattern() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n pub fn add_amp_in_pattern() {\n     let (&_a, _b) = (&1u8, 'y');\n }\n@@ -209,6 +327,20 @@ pub fn change_mutability_of_binding_in_pattern() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern() {\n     let (mut _a, _b) = (99u8, 'q');\n }\n@@ -228,6 +360,20 @@ pub fn add_initializer() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn add_initializer() {\n     let _x: i16 = 3i16;\n }\n@@ -247,6 +393,20 @@ pub fn change_initializer() {\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirValidated\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"MirOptimized\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"MirOptimized\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"FnSignature\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n pub fn change_initializer() {\n     let _x = 5u16;\n }"}]}