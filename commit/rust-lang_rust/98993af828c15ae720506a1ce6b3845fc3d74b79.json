{"sha": "98993af828c15ae720506a1ce6b3845fc3d74b79", "node_id": "C_kwDOAAsO6NoAKDk4OTkzYWY4MjhjMTVhZTcyMDUwNmExY2U2YjM4NDVmYzNkNzRiNzk", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-11-20T16:43:23Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-11-20T16:43:23Z"}, "message": "add examples to chunks remainder methods. Also fixed some links to rchunk remainder methods.", "tree": {"sha": "2f4e393be9b1b6fc832308e7a37af411facd8478", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f4e393be9b1b6fc832308e7a37af411facd8478"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98993af828c15ae720506a1ce6b3845fc3d74b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98993af828c15ae720506a1ce6b3845fc3d74b79", "html_url": "https://github.com/rust-lang/rust/commit/98993af828c15ae720506a1ce6b3845fc3d74b79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98993af828c15ae720506a1ce6b3845fc3d74b79/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "911cbf8e46f0f3b044c87fc5cbca922878db757b", "url": "https://api.github.com/repos/rust-lang/rust/commits/911cbf8e46f0f3b044c87fc5cbca922878db757b", "html_url": "https://github.com/rust-lang/rust/commit/911cbf8e46f0f3b044c87fc5cbca922878db757b"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "06228976719f52f8e25c59010c4fab554b7ae4f5", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/98993af828c15ae720506a1ce6b3845fc3d74b79/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98993af828c15ae720506a1ce6b3845fc3d74b79/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=98993af828c15ae720506a1ce6b3845fc3d74b79", "patch": "@@ -1834,6 +1834,20 @@ impl<'a, T> ChunksExact<'a, T> {\n     /// Returns the remainder of the original slice that is not going to be\n     /// returned by the iterator. The returned slice has at most `chunk_size-1`\n     /// elements.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// let slice = ['l', 'o', 'r', 'e', 'm'];\n+    /// let mut iter = slice.chunks_exact(2);\n+    /// assert_eq!(iter.remainder(), &['m'][..]);\n+    /// assert_eq!(iter.next(), Some(&['l', 'o'][..]));\n+    /// assert_eq!(iter.remainder(), &['m'][..]);\n+    /// assert_eq!(iter.next(), Some(&['r', 'e'][..]));\n+    /// assert_eq!(iter.remainder(), &['m'][..]);\n+    /// assert_eq!(iter.next(), None);\n+    /// assert_eq!(iter.remainder(), &['m'][..]);\n+    /// ```\n     #[must_use]\n     #[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n     pub fn remainder(&self) -> &'a [T] {\n@@ -2869,7 +2883,7 @@ unsafe impl<T> Sync for RChunksMut<'_, T> where T: Sync {}\n /// ```\n ///\n /// [`rchunks_exact`]: slice::rchunks_exact\n-/// [`remainder`]: ChunksExact::remainder\n+/// [`remainder`]: RChunksExact::remainder\n /// [slices]: slice\n #[derive(Debug)]\n #[stable(feature = \"rchunks\", since = \"1.31.0\")]\n@@ -2892,6 +2906,20 @@ impl<'a, T> RChunksExact<'a, T> {\n     /// Returns the remainder of the original slice that is not going to be\n     /// returned by the iterator. The returned slice has at most `chunk_size-1`\n     /// elements.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// let slice = ['l', 'o', 'r', 'e', 'm'];\n+    /// let mut iter = slice.rchunks_exact(2);\n+    /// assert_eq!(iter.remainder(), &['l'][..]);\n+    /// assert_eq!(iter.next(), Some(&['e', 'm'][..]));\n+    /// assert_eq!(iter.remainder(), &['l'][..]);\n+    /// assert_eq!(iter.next(), Some(&['o', 'r'][..]));\n+    /// assert_eq!(iter.remainder(), &['l'][..]);\n+    /// assert_eq!(iter.next(), None);\n+    /// assert_eq!(iter.remainder(), &['l'][..]);\n+    /// ```\n     #[must_use]\n     #[stable(feature = \"rchunks\", since = \"1.31.0\")]\n     pub fn remainder(&self) -> &'a [T] {\n@@ -3031,7 +3059,7 @@ unsafe impl<'a, T> TrustedRandomAccessNoCoerce for RChunksExact<'a, T> {\n /// ```\n ///\n /// [`rchunks_exact_mut`]: slice::rchunks_exact_mut\n-/// [`into_remainder`]: ChunksExactMut::into_remainder\n+/// [`into_remainder`]: RChunksExactMut::into_remainder\n /// [slices]: slice\n #[derive(Debug)]\n #[stable(feature = \"rchunks\", since = \"1.31.0\")]"}]}