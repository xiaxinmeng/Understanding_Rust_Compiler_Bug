{"sha": "875bdd5dbe663a6dafd785b86c8964a90653eeb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NWJkZDVkYmU2NjNhNmRhZmQ3ODViODZjODk2NGE5MDY1M2VlYjc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-21T08:12:09Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-21T08:12:09Z"}, "message": "Report even duplilcate errors in case the feature gat is not active", "tree": {"sha": "d2a28e88cf714dabd2c9a95e384c03f569b35f33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a28e88cf714dabd2c9a95e384c03f569b35f33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/875bdd5dbe663a6dafd785b86c8964a90653eeb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/875bdd5dbe663a6dafd785b86c8964a90653eeb7", "html_url": "https://github.com/rust-lang/rust/commit/875bdd5dbe663a6dafd785b86c8964a90653eeb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/875bdd5dbe663a6dafd785b86c8964a90653eeb7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0653694fdc46a2bca119b9790d1dfd62e1b4901e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0653694fdc46a2bca119b9790d1dfd62e1b4901e", "html_url": "https://github.com/rust-lang/rust/commit/0653694fdc46a2bca119b9790d1dfd62e1b4901e"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "c5b809ad380f7a38b713d3d39133b8a89a2f1366", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/875bdd5dbe663a6dafd785b86c8964a90653eeb7/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/875bdd5dbe663a6dafd785b86c8964a90653eeb7/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=875bdd5dbe663a6dafd785b86c8964a90653eeb7", "patch": "@@ -1394,11 +1394,6 @@ fn check_union(tcx: TyCtxt<'_>, id: hir::HirId, span: Span) {\n /// When the `#![feature(untagged_unions)]` gate is active,\n /// check that the fields of the `union` does not contain fields that need dropping.\n fn check_union_fields(tcx: TyCtxt<'_>, span: Span, item_def_id: DefId) -> bool {\n-    // Without the feature we check that all fields are `Copy` in our stability checking\n-    // infrastructure.\n-    if !tcx.features().untagged_unions {\n-        return true;\n-    }\n     let item_type = tcx.type_of(item_def_id);\n     if let ty::Adt(def, substs) = item_type.kind {\n         assert!(def.is_union());"}, {"sha": "9ee0e6f681dcc4ae2f1b9b335ab15a90825d8aee", "filename": "src/test/ui/feature-gates/feature-gate-untagged_unions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/875bdd5dbe663a6dafd785b86c8964a90653eeb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/875bdd5dbe663a6dafd785b86c8964a90653eeb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.rs?ref=875bdd5dbe663a6dafd785b86c8964a90653eeb7", "patch": "@@ -7,11 +7,11 @@ union U2<T: Copy> { // OK\n }\n \n union U3 { //~ ERROR unions with non-`Copy` fields are unstable\n-    a: String,\n+    a: String, //~ ERROR unions may not contain fields that need dropping\n }\n \n union U4<T> { //~ ERROR unions with non-`Copy` fields are unstable\n-    a: T,\n+    a: T, //~ ERROR unions may not contain fields that need dropping\n }\n \n union U5 { //~ ERROR unions with `Drop` implementations are unstable"}, {"sha": "1885518a4585cc0e8b916bd34e31f39d18821624", "filename": "src/test/ui/feature-gates/feature-gate-untagged_unions.stderr", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/875bdd5dbe663a6dafd785b86c8964a90653eeb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/875bdd5dbe663a6dafd785b86c8964a90653eeb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr?ref=875bdd5dbe663a6dafd785b86c8964a90653eeb7", "patch": "@@ -31,6 +31,31 @@ LL | | }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n    = help: add `#![feature(untagged_unions)]` to the crate attributes to enable\n \n-error: aborting due to 3 previous errors\n+error[E0740]: unions may not contain fields that need dropping\n+  --> $DIR/feature-gate-untagged_unions.rs:10:5\n+   |\n+LL |     a: String,\n+   |     ^^^^^^^^^\n+   |\n+note: `std::mem::ManuallyDrop` can be used to wrap the type\n+  --> $DIR/feature-gate-untagged_unions.rs:10:5\n+   |\n+LL |     a: String,\n+   |     ^^^^^^^^^\n+\n+error[E0740]: unions may not contain fields that need dropping\n+  --> $DIR/feature-gate-untagged_unions.rs:14:5\n+   |\n+LL |     a: T,\n+   |     ^^^^\n+   |\n+note: `std::mem::ManuallyDrop` can be used to wrap the type\n+  --> $DIR/feature-gate-untagged_unions.rs:14:5\n+   |\n+LL |     a: T,\n+   |     ^^^^\n+\n+error: aborting due to 5 previous errors\n \n-For more information about this error, try `rustc --explain E0658`.\n+Some errors have detailed explanations: E0658, E0740.\n+For more information about an error, try `rustc --explain E0658`."}]}