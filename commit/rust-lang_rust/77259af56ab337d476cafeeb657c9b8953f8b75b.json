{"sha": "77259af56ab337d476cafeeb657c9b8953f8b75b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MjU5YWY1NmFiMzM3ZDQ3NmNhZmVlYjY1N2M5Yjg5NTNmOGI3NWI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-05-27T05:46:19Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-06-06T13:25:17Z"}, "message": "Use try_lock in collect_active_jobs", "tree": {"sha": "c396dd4505b1ae2b5dfe42dc8ca18e3a37fa1762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c396dd4505b1ae2b5dfe42dc8ca18e3a37fa1762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77259af56ab337d476cafeeb657c9b8953f8b75b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77259af56ab337d476cafeeb657c9b8953f8b75b", "html_url": "https://github.com/rust-lang/rust/commit/77259af56ab337d476cafeeb657c9b8953f8b75b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77259af56ab337d476cafeeb657c9b8953f8b75b/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85b5eadeaca624b886838787150adbdfdb1dcbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d85b5eadeaca624b886838787150adbdfdb1dcbe", "html_url": "https://github.com/rust-lang/rust/commit/d85b5eadeaca624b886838787150adbdfdb1dcbe"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "13d2a13e5ddc519e3e8ac193f8dccca02221d362", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77259af56ab337d476cafeeb657c9b8953f8b75b/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77259af56ab337d476cafeeb657c9b8953f8b75b/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=77259af56ab337d476cafeeb657c9b8953f8b75b", "patch": "@@ -659,7 +659,9 @@ macro_rules! define_maps {\n             pub fn collect_active_jobs(&self) -> Vec<Lrc<QueryJob<$tcx>>> {\n                 let mut jobs = Vec::new();\n \n-                $(for v in self.$name.lock().active.values() {\n+                // We use try_lock here since we are only called from the\n+                // deadlock handler, and this shouldn't be locked\n+                $(for v in self.$name.try_lock().unwrap().active.values() {\n                     match *v {\n                         QueryResult::Started(ref job) => jobs.push(job.clone()),\n                         _ => (),"}, {"sha": "33f6eda2a8753696658b61c3951cb5682df09d03", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77259af56ab337d476cafeeb657c9b8953f8b75b/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77259af56ab337d476cafeeb657c9b8953f8b75b/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=77259af56ab337d476cafeeb657c9b8953f8b75b", "patch": "@@ -519,6 +519,18 @@ impl<T> Lock<T> {\n         self.0.get_mut()\n     }\n \n+    #[cfg(parallel_queries)]\n+    #[inline(always)]\n+    pub fn try_lock(&self) -> Option<LockGuard<T>> {\n+        self.0.try_lock()\n+    }\n+\n+    #[cfg(not(parallel_queries))]\n+    #[inline(always)]\n+    pub fn try_lock(&self) -> Option<LockGuard<T>> {\n+        self.0.try_borrow_mut().ok()\n+    }\n+\n     #[cfg(parallel_queries)]\n     #[inline(always)]\n     pub fn lock(&self) -> LockGuard<T> {"}]}