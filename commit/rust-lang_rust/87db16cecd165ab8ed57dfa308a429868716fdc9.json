{"sha": "87db16cecd165ab8ed57dfa308a429868716fdc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZGIxNmNlY2QxNjVhYjhlZDU3ZGZhMzA4YTQyOTg2ODcxNmZkYzk=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2015-01-22T09:22:16Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2015-01-22T09:22:16Z"}, "message": "core::marker: s/task/thread/", "tree": {"sha": "d02143fa67ffad2ceb69a992818aee56e506aee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d02143fa67ffad2ceb69a992818aee56e506aee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87db16cecd165ab8ed57dfa308a429868716fdc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87db16cecd165ab8ed57dfa308a429868716fdc9", "html_url": "https://github.com/rust-lang/rust/commit/87db16cecd165ab8ed57dfa308a429868716fdc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87db16cecd165ab8ed57dfa308a429868716fdc9/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be138ed2bd6a4c4bf1c80287569709a9905e4891", "url": "https://api.github.com/repos/rust-lang/rust/commits/be138ed2bd6a4c4bf1c80287569709a9905e4891", "html_url": "https://github.com/rust-lang/rust/commit/be138ed2bd6a4c4bf1c80287569709a9905e4891"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "688f0484401529233794fdea918635d4a8ecab98", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87db16cecd165ab8ed57dfa308a429868716fdc9/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87db16cecd165ab8ed57dfa308a429868716fdc9/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=87db16cecd165ab8ed57dfa308a429868716fdc9", "patch": "@@ -27,7 +27,7 @@\n \n use clone::Clone;\n \n-/// Types able to be transferred across task boundaries.\n+/// Types able to be transferred across thread boundaries.\n #[unstable = \"will be overhauled with new lifetime rules; see RFC 458\"]\n #[lang=\"send\"]\n #[rustc_on_unimplemented = \"`{Self}` cannot be sent between threads safely\"]\n@@ -148,11 +148,11 @@ pub trait Copy {\n     // Empty.\n }\n \n-/// Types that can be safely shared between tasks when aliased.\n+/// Types that can be safely shared between threads when aliased.\n ///\n /// The precise definition is: a type `T` is `Sync` if `&T` is\n /// thread-safe. In other words, there is no possibility of data races\n-/// when passing `&T` references between tasks.\n+/// when passing `&T` references between threads.\n ///\n /// As one would expect, primitive types like `u8` and `f64` are all\n /// `Sync`, and so are simple aggregate types containing them (like"}]}