{"sha": "8ce6b0dd21319f97575f667236e233a35598b5c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZTZiMGRkMjEzMTlmOTc1NzVmNjY3MjM2ZTIzM2EzNTU5OGI1YzQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-09T01:22:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-09T01:22:43Z"}, "message": "rustc: Add appropriate type predicates for references. Simple uses of references/region pointers now work.", "tree": {"sha": "2ada38cd13635edfbb3e3ca520127ac283d47542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ada38cd13635edfbb3e3ca520127ac283d47542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ce6b0dd21319f97575f667236e233a35598b5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce6b0dd21319f97575f667236e233a35598b5c4", "html_url": "https://github.com/rust-lang/rust/commit/8ce6b0dd21319f97575f667236e233a35598b5c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ce6b0dd21319f97575f667236e233a35598b5c4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "256146bba4d02bd96e67859e1d7a42b44e351626", "url": "https://api.github.com/repos/rust-lang/rust/commits/256146bba4d02bd96e67859e1d7a42b44e351626", "html_url": "https://github.com/rust-lang/rust/commit/256146bba4d02bd96e67859e1d7a42b44e351626"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "ad641a451c492ed7dc9567c52681758969d4245f", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ce6b0dd21319f97575f667236e233a35598b5c4/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ce6b0dd21319f97575f667236e233a35598b5c4/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=8ce6b0dd21319f97575f667236e233a35598b5c4", "patch": "@@ -739,7 +739,7 @@ pure fn type_is_unique(ty: t) -> bool {\n pure fn type_is_scalar(ty: t) -> bool {\n     alt get(ty).struct {\n       ty_nil | ty_bool | ty_int(_) | ty_float(_) | ty_uint(_) |\n-      ty_send_type | ty_type | ty_ptr(_) { true }\n+      ty_send_type | ty_type | ty_ptr(_) | ty_rptr(_, _) { true }\n       _ { false }\n     }\n }\n@@ -760,7 +760,7 @@ fn type_needs_drop(cx: ctxt, ty: t) -> bool {\n     let result = alt get(ty).struct {\n       // scalar types\n       ty_nil | ty_bot | ty_bool | ty_int(_) | ty_float(_) | ty_uint(_) |\n-      ty_type | ty_ptr(_) { false }\n+      ty_type | ty_ptr(_) | ty_rptr(_, _) { false }\n       ty_rec(flds) {\n         for f in flds { if type_needs_drop(cx, f.mt.ty) { accum = true; } }\n         accum\n@@ -852,6 +852,7 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n       // Those with refcounts-to-inner raise pinned to shared,\n       // lower unique to shared. Therefore just set result to shared.\n       ty_box(_) | ty_iface(_, _) | ty_opaque_box { kind_copyable }\n+      ty_rptr(_, _) { kind_copyable }\n       // Boxes and unique pointers raise pinned to shared.\n       ty_vec(tm) | ty_uniq(tm) { type_kind(cx, tm.ty) }\n       // Records lower to the lowest of their members.\n@@ -1012,7 +1013,7 @@ fn type_is_pod(cx: ctxt, ty: t) -> bool {\n       ty_send_type | ty_type | ty_ptr(_) { result = true; }\n       // Boxed types\n       ty_str | ty_box(_) | ty_uniq(_) | ty_vec(_) | ty_fn(_) |\n-      ty_iface(_, _) | ty_opaque_box { result = false; }\n+      ty_iface(_, _) | ty_rptr(_,_) | ty_opaque_box { result = false; }\n       // Structural types\n       ty_enum(did, tps) {\n         let variants = enum_variants(cx, did);"}]}