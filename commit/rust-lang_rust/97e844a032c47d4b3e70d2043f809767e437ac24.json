{"sha": "97e844a032c47d4b3e70d2043f809767e437ac24", "node_id": "C_kwDOAAsO6NoAKDk3ZTg0NGEwMzJjNDdkNGIzZTcwZDIwNDNmODA5NzY3ZTQzN2FjMjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-13T21:58:58Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-14T11:40:28Z"}, "message": "fix clippy::single_char_pattern perf findings", "tree": {"sha": "6f1fc68faba406c3525cdc884b8cc211a5c54eae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f1fc68faba406c3525cdc884b8cc211a5c54eae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97e844a032c47d4b3e70d2043f809767e437ac24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97e844a032c47d4b3e70d2043f809767e437ac24", "html_url": "https://github.com/rust-lang/rust/commit/97e844a032c47d4b3e70d2043f809767e437ac24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97e844a032c47d4b3e70d2043f809767e437ac24/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1796de7bb123df3f3d32124ededf1344434f672e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1796de7bb123df3f3d32124ededf1344434f672e", "html_url": "https://github.com/rust-lang/rust/commit/1796de7bb123df3f3d32124ededf1344434f672e"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "e29c109f12d599149760c86bb07eaf94a6fdd463", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -2226,8 +2226,8 @@ fn add_upstream_rust_crates<'a, B: ArchiveBuilder<'a>>(\n                     continue;\n                 }\n \n-                let canonical = f.replace(\"-\", \"_\");\n-                let canonical_name = name.replace(\"-\", \"_\");\n+                let canonical = f.replace('-', \"_\");\n+                let canonical_name = name.replace('-', \"_\");\n \n                 let is_rust_object =\n                     canonical.starts_with(&canonical_name) && looks_like_rust_object_file(&f);"}, {"sha": "12e0b7a4977e1cf88130901ac251958a77951cf0", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -872,7 +872,7 @@ Available lint options:\n \n     let print_lints = |lints: Vec<&Lint>| {\n         for lint in lints {\n-            let name = lint.name_lower().replace(\"_\", \"-\");\n+            let name = lint.name_lower().replace('_', \"-\");\n             println!(\n                 \"    {}  {:7.7}  {}\",\n                 padded(&name),\n@@ -908,10 +908,10 @@ Available lint options:\n \n     let print_lint_groups = |lints: Vec<(&'static str, Vec<LintId>)>| {\n         for (name, to) in lints {\n-            let name = name.to_lowercase().replace(\"_\", \"-\");\n+            let name = name.to_lowercase().replace('_', \"-\");\n             let desc = to\n                 .into_iter()\n-                .map(|x| x.to_string().replace(\"_\", \"-\"))\n+                .map(|x| x.to_string().replace('_', \"-\"))\n                 .collect::<Vec<String>>()\n                 .join(\", \");\n             println!(\"    {}  {}\", padded(&name), desc);\n@@ -960,7 +960,7 @@ fn print_flag_list<T>(\n         println!(\n             \"    {} {:>width$}=val -- {}\",\n             cmdline_opt,\n-            name.replace(\"_\", \"-\"),\n+            name.replace('_', \"-\"),\n             desc,\n             width = max_len\n         );\n@@ -1015,7 +1015,7 @@ pub fn handle_options(args: &[String]) -> Option<getopts::Matches> {\n                 .iter()\n                 .map(|&(name, ..)| ('C', name))\n                 .chain(DB_OPTIONS.iter().map(|&(name, ..)| ('Z', name)))\n-                .find(|&(_, name)| *opt == name.replace(\"_\", \"-\"))\n+                .find(|&(_, name)| *opt == name.replace('_', \"-\"))\n                 .map(|(flag, _)| format!(\"{}. Did you mean `-{} {}`?\", e, flag, opt)),\n             _ => None,\n         };"}, {"sha": "e318090ebe15aec658917b35b2c4b903589f3a01", "filename": "compiler/rustc_graphviz/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -472,7 +472,7 @@ pub trait Labeller<'a> {\n /// Escape tags in such a way that it is suitable for inclusion in a\n /// Graphviz HTML label.\n pub fn escape_html(s: &str) -> String {\n-    s.replace(\"&\", \"&amp;\").replace(\"\\\"\", \"&quot;\").replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\")\n+    s.replace('&', \"&amp;\").replace('\\\"', \"&quot;\").replace('<', \"&lt;\").replace('>', \"&gt;\")\n }\n \n impl<'a> LabelText<'a> {"}, {"sha": "34865900495c753b23201f1b0d84286b951edfce", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -584,7 +584,7 @@ fn output_conflicts_with_dir(output_paths: &[PathBuf]) -> Option<PathBuf> {\n fn escape_dep_filename(filename: &str) -> String {\n     // Apparently clang and gcc *only* escape spaces:\n     // https://llvm.org/klaus/clang/commit/9d50634cfc268ecc9a7250226dd5ca0e945240d4\n-    filename.replace(\" \", \"\\\\ \")\n+    filename.replace(' ', \"\\\\ \")\n }\n \n // Makefile comments only need escaping newlines and `\\`."}, {"sha": "a6432b301743a292b63ee6aab566dd0e7ec8a114", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -295,7 +295,7 @@ pub fn struct_lint_level<'s, 'd>(\n                     Level::Allow => \"-A\",\n                     Level::ForceWarn => \"--force-warn\",\n                 };\n-                let hyphen_case_lint_name = name.replace(\"_\", \"-\");\n+                let hyphen_case_lint_name = name.replace('_', \"-\");\n                 if lint_flag_val.as_str() == name {\n                     sess.diag_note_once(\n                         &mut err,\n@@ -306,7 +306,7 @@ pub fn struct_lint_level<'s, 'd>(\n                         ),\n                     );\n                 } else {\n-                    let hyphen_case_flag_val = lint_flag_val.as_str().replace(\"_\", \"-\");\n+                    let hyphen_case_flag_val = lint_flag_val.as_str().replace('_', \"-\");\n                     sess.diag_note_once(\n                         &mut err,\n                         DiagnosticMessageId::from(lint),"}, {"sha": "c907680bda14aab6068bd00ff6358223631e1aca", "filename": "compiler/rustc_middle/src/mir/generic_graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fgeneric_graphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fgeneric_graphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fgeneric_graphviz.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -126,7 +126,7 @@ impl<\n             write!(\n                 w,\n                 r#\"<tr><td align=\"left\" balign=\"left\">{}</td></tr>\"#,\n-                dot::escape_html(&section).replace(\"\\n\", \"<br/>\")\n+                dot::escape_html(&section).replace('\\n', \"<br/>\")\n             )?;\n         }\n \n@@ -147,7 +147,7 @@ impl<\n             let src = self.node(source);\n             let trg = self.node(target);\n             let escaped_edge_label = if let Some(edge_label) = edge_labels.get(index) {\n-                dot::escape_html(edge_label).replace(\"\\n\", r#\"<br align=\"left\"/>\"#)\n+                dot::escape_html(edge_label).replace('\\n', r#\"<br align=\"left\"/>\"#)\n             } else {\n                 \"\".to_owned()\n             };"}, {"sha": "507f9971981b0a5b6270715faeae44b6596ab931", "filename": "compiler/rustc_middle/src/mir/spanview.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fspanview.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fspanview.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fspanview.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -681,13 +681,13 @@ fn hir_body<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Option<&'tcx rustc_hir::B\n }\n \n fn escape_html(s: &str) -> String {\n-    s.replace(\"&\", \"&amp;\").replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\")\n+    s.replace('&', \"&amp;\").replace('<', \"&lt;\").replace('>', \"&gt;\")\n }\n \n fn escape_attr(s: &str) -> String {\n-    s.replace(\"&\", \"&amp;\")\n-        .replace(\"\\\"\", \"&quot;\")\n-        .replace(\"'\", \"&#39;\")\n-        .replace(\"<\", \"&lt;\")\n-        .replace(\">\", \"&gt;\")\n+    s.replace('&', \"&amp;\")\n+        .replace('\\\"', \"&quot;\")\n+        .replace('\\'', \"&#39;\")\n+        .replace('<', \"&lt;\")\n+        .replace('>', \"&gt;\")\n }"}, {"sha": "c61ee6f7e6cb784f8cb5c002f9ffdf9ba2fe4b40", "filename": "compiler/rustc_mir_transform/src/coverage/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fdebug.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -148,7 +148,7 @@ impl DebugOptions {\n         let mut counter_format = ExpressionFormat::default();\n \n         if let Ok(env_debug_options) = std::env::var(RUSTC_COVERAGE_DEBUG_OPTIONS) {\n-            for setting_str in env_debug_options.replace(\" \", \"\").replace(\"-\", \"_\").split(',') {\n+            for setting_str in env_debug_options.replace(' ', \"\").replace('-', \"_\").split(',') {\n                 let (option, value) = match setting_str.split_once('=') {\n                     None => (setting_str, None),\n                     Some((k, v)) => (k, Some(v)),"}, {"sha": "b5356a817f7ac5e25dc8c7d05268450172c9334f", "filename": "compiler/rustc_mir_transform/src/coverage/spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fspans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fspans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fspans.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -155,7 +155,7 @@ impl CoverageSpan {\n         format!(\n             \"{}\\n    {}\",\n             source_range_no_file(tcx, &self.span),\n-            self.format_coverage_statements(tcx, mir_body).replace(\"\\n\", \"\\n    \"),\n+            self.format_coverage_statements(tcx, mir_body).replace('\\n', \"\\n    \"),\n         )\n     }\n "}, {"sha": "9677e7642b88c9c4f522eb51dae3a4ac2b76fd0c", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -2236,7 +2236,7 @@ impl<'a> Parser<'a> {\n             err.span_suggestion(\n                 seq_span,\n                 \"...or a vertical bar to match on multiple alternatives\",\n-                seq_snippet.replace(\",\", \" |\"),\n+                seq_snippet.replace(',', \" |\"),\n                 Applicability::MachineApplicable,\n             );\n         }"}, {"sha": "6f86bafbe458144ed3da5c5b3a5e82ec895e4bc2", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -1036,7 +1036,7 @@ fn find_config(supplied: Option<Config>) -> Config {\n \n // Helper function to escape quotes in a string\n fn escape(s: String) -> String {\n-    s.replace(\"\\\"\", \"\\\"\\\"\")\n+    s.replace('\\\"', \"\\\"\\\"\")\n }\n \n // Helper function to determine if a span came from a"}, {"sha": "50a8f0336728e2276f55aed853bc7cee31562bbb", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -1213,7 +1213,7 @@ pub fn get_cmd_lint_options(\n             if lint_name == \"help\" {\n                 describe_lints = true;\n             } else {\n-                lint_opts_with_position.push((arg_pos, lint_name.replace(\"-\", \"_\"), level));\n+                lint_opts_with_position.push((arg_pos, lint_name.replace('-', \"_\"), level));\n             }\n         }\n     }"}, {"sha": "dc5f4ee0ece0cd0ccad378fd6ec73dad9ddca585", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -335,7 +335,7 @@ fn build_options<O: Default>(\n             Some((k, v)) => (k.to_string(), Some(v)),\n         };\n \n-        let option_to_lookup = key.replace(\"-\", \"_\");\n+        let option_to_lookup = key.replace('-', \"_\");\n         match descrs.iter().find(|(name, ..)| *name == option_to_lookup) {\n             Some((_, setter, type_desc, _)) => {\n                 if !setter(&mut op, value) {"}, {"sha": "5689b723ad6104c65ec57e2dc2b7721c01bded7e", "filename": "compiler/rustc_session/src/output.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_session%2Fsrc%2Foutput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_session%2Fsrc%2Foutput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foutput.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -85,7 +85,7 @@ pub fn find_crate_name(sess: &Session, attrs: &[ast::Attribute], input: &Input)\n                 );\n                 sess.err(&msg);\n             } else {\n-                return validate(s.replace(\"-\", \"_\"), None);\n+                return validate(s.replace('-', \"_\"), None);\n             }\n         }\n     }"}, {"sha": "1396d1e606af4102723f2bb5bb92a794ce74016b", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -741,7 +741,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n \n                     let msg = format!(\n                         \"the trait bound `{}: {}` is not satisfied\",\n-                        orig_ty.to_string(),\n+                        orig_ty,\n                         old_ref.print_only_trait_path(),\n                     );\n                     if has_custom_message {"}, {"sha": "631eacc9618286120d88c3b020fbcc8f1cf93671", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -184,8 +184,8 @@ crate fn build_index<'tcx>(krate: &clean::Crate, cache: &mut Cache, tcx: TyCtxt<\n         })\n         .expect(\"failed serde conversion\")\n         // All these `replace` calls are because we have to go through JS string for JSON content.\n-        .replace(r\"\\\", r\"\\\\\")\n-        .replace(\"'\", r\"\\'\")\n+        .replace(r#\"\\\"#, r\"\\\\\")\n+        .replace(r#\"'\"#, r\"\\'\")\n         // We need to escape double quotes for the JSON.\n         .replace(\"\\\\\\\"\", \"\\\\\\\\\\\"\")\n     )"}, {"sha": "c67fe1fef40cdd5750bda407d8be5588ce8f2195", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -989,7 +989,7 @@ fn attributes(it: &clean::Item) -> Vec<String> {\n         .iter()\n         .filter_map(|attr| {\n             if ALLOWED_ATTRIBUTES.contains(&attr.name_or_empty()) {\n-                Some(pprust::attribute_to_string(attr).replace(\"\\n\", \"\").replace(\"  \", \" \"))\n+                Some(pprust::attribute_to_string(attr).replace('\\n', \"\").replace(\"  \", \" \"))\n             } else {\n                 None\n             }"}, {"sha": "2faf7781807d42a0700d354b430db1f4e8768a6f", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -963,7 +963,7 @@ fn preprocess_link<'a>(\n         return None;\n     }\n \n-    let stripped = ori_link.link.replace(\"`\", \"\");\n+    let stripped = ori_link.link.replace('`', \"\");\n     let mut parts = stripped.split('#');\n \n     let link = parts.next().unwrap();"}, {"sha": "1e9a65e1d2fc498f1072929e8359ce7a9e3fe3cd", "filename": "src/librustdoc/theme.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Ftheme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97e844a032c47d4b3e70d2043f809767e437ac24/src%2Flibrustdoc%2Ftheme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme.rs?ref=97e844a032c47d4b3e70d2043f809767e437ac24", "patch": "@@ -173,11 +173,11 @@ fn build_rule(v: &[u8], positions: &[usize]) -> String {\n             .map(|x| ::std::str::from_utf8(&v[x[0]..x[1]]).unwrap_or(\"\"))\n             .collect::<String>()\n             .trim()\n-            .replace(\"\\n\", \" \")\n-            .replace(\"/\", \"\")\n-            .replace(\"\\t\", \" \")\n-            .replace(\"{\", \"\")\n-            .replace(\"}\", \"\")\n+            .replace('\\n', \" \")\n+            .replace('/', \"\")\n+            .replace('\\t', \" \")\n+            .replace('{', \"\")\n+            .replace('}', \"\")\n             .split(' ')\n             .filter(|s| !s.is_empty())\n             .collect::<Vec<&str>>()"}]}