{"sha": "7b362bb84178b9c87b2b9246b7d3d107820e932a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMzYyYmI4NDE3OGI5Yzg3YjJiOTI0NmI3ZDNkMTA3ODIwZTkzMmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-05-28T18:56:05Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-05-28T18:56:05Z"}, "message": "Fixup style", "tree": {"sha": "4445ef03f80a9fc72f723900cd704c7a9f7698bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4445ef03f80a9fc72f723900cd704c7a9f7698bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b362bb84178b9c87b2b9246b7d3d107820e932a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b362bb84178b9c87b2b9246b7d3d107820e932a", "html_url": "https://github.com/rust-lang/rust/commit/7b362bb84178b9c87b2b9246b7d3d107820e932a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b362bb84178b9c87b2b9246b7d3d107820e932a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59291dc788d4b14f5c154ab30ccf87d85a472978", "url": "https://api.github.com/repos/rust-lang/rust/commits/59291dc788d4b14f5c154ab30ccf87d85a472978", "html_url": "https://github.com/rust-lang/rust/commit/59291dc788d4b14f5c154ab30ccf87d85a472978"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "a007cbff06411af4363c8baee4074249de170111", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7b362bb84178b9c87b2b9246b7d3d107820e932a/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b362bb84178b9c87b2b9246b7d3d107820e932a/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=7b362bb84178b9c87b2b9246b7d3d107820e932a", "patch": "@@ -588,7 +588,12 @@ impl<'a> Builder<'a> {\n     /// sysroot.\n     ///\n     /// See `force_use_stage1` for documentation on what each argument is.\n-    pub fn compiler_for(&self, stage: u32, host: Interned<String>, target: Interned<String>) -> Compiler {\n+    pub fn compiler_for(\n+        &self,\n+        stage: u32,\n+        host: Interned<String>,\n+        target: Interned<String>,\n+    ) -> Compiler {\n         if self.build.force_use_stage1(Compiler { stage, host }, target) {\n             self.compiler(1, self.config.build)\n         } else {"}, {"sha": "0047be4d5951b95a4fbc77bcdac5e6f902f1827b", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7b362bb84178b9c87b2b9246b7d3d107820e932a/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b362bb84178b9c87b2b9246b7d3d107820e932a/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=7b362bb84178b9c87b2b9246b7d3d107820e932a", "patch": "@@ -210,32 +210,43 @@ install!((self, builder, _config),\n             Self::should_install(builder) {\n             install_rls(builder, self.compiler.stage, self.target);\n         } else {\n-            builder.info(&format!(\"skipping Install RLS stage{} ({})\", self.compiler.stage, self.target));\n+            builder.info(\n+                &format!(\"skipping Install RLS stage{} ({})\", self.compiler.stage, self.target),\n+            );\n         }\n     };\n     Clippy, \"clippy\", Self::should_build(_config), only_hosts: true, {\n-        if builder.ensure(dist::Clippy { compiler: self.compiler, target: self.target }).is_some() ||\n-            Self::should_install(builder) {\n+        if builder.ensure(dist::Clippy {\n+            compiler: self.compiler,\n+            target: self.target,\n+        }).is_some() || Self::should_install(builder) {\n             install_clippy(builder, self.compiler.stage, self.target);\n         } else {\n-            builder.info(&format!(\"skipping Install clippy stage{} ({})\", self.compiler.stage, self.target));\n+            builder.info(\n+                &format!(\"skipping Install clippy stage{} ({})\", self.compiler.stage, self.target),\n+            );\n         }\n     };\n     Miri, \"miri\", Self::should_build(_config), only_hosts: true, {\n         if builder.ensure(dist::Miri { compiler: self.compiler, target: self.target }).is_some() ||\n             Self::should_install(builder) {\n             install_miri(builder, self.compiler.stage, self.target);\n         } else {\n-            builder.info(&format!(\"skipping Install miri stage{} ({})\", self.compiler.stage, self.target));\n+            builder.info(\n+                &format!(\"skipping Install miri stage{} ({})\", self.compiler.stage, self.target),\n+            );\n         }\n     };\n     Rustfmt, \"rustfmt\", Self::should_build(_config), only_hosts: true, {\n-        if builder.ensure(dist::Rustfmt { compiler: self.compiler, target: self.target }).is_some() ||\n-            Self::should_install(builder) {\n+        if builder.ensure(dist::Rustfmt {\n+            compiler: self.compiler,\n+            target: self.target\n+        }).is_some() || Self::should_install(builder) {\n             install_rustfmt(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info(\n-                &format!(\"skipping Install Rustfmt stage{} ({})\", self.compiler.stage, self.target));\n+                &format!(\"skipping Install Rustfmt stage{} ({})\", self.compiler.stage, self.target),\n+            );\n         }\n     };\n     Analysis, \"analysis\", Self::should_build(_config), only_hosts: false, {"}]}