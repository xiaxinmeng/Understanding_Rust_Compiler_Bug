{"sha": "b21e0b82c5245bb8329564bc328703bd03536dd2", "node_id": "C_kwDOAAsO6NoAKGIyMWUwYjgyYzUyNDViYjgzMjk1NjRiYzMyODcwM2JkMDM1MzZkZDI", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-11-12T10:50:57Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-18T22:46:36Z"}, "message": "Fix compilation issue after rebase", "tree": {"sha": "89cd290254789c8523eed677aaea61aea724c048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89cd290254789c8523eed677aaea61aea724c048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b21e0b82c5245bb8329564bc328703bd03536dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b21e0b82c5245bb8329564bc328703bd03536dd2", "html_url": "https://github.com/rust-lang/rust/commit/b21e0b82c5245bb8329564bc328703bd03536dd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b21e0b82c5245bb8329564bc328703bd03536dd2/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "707c035e006b7ed6e81081628a27cb6d6211bf06", "url": "https://api.github.com/repos/rust-lang/rust/commits/707c035e006b7ed6e81081628a27cb6d6211bf06", "html_url": "https://github.com/rust-lang/rust/commit/707c035e006b7ed6e81081628a27cb6d6211bf06"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "7d5e4723a6d883b6b22bf24c19259c93f210c3fa", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b21e0b82c5245bb8329564bc328703bd03536dd2/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b21e0b82c5245bb8329564bc328703bd03536dd2/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=b21e0b82c5245bb8329564bc328703bd03536dd2", "patch": "@@ -51,6 +51,9 @@ impl<'source> IntoDiagnosticArg for DiagnosticArgValue<'source> {\n         match self {\n             DiagnosticArgValue::Str(s) => DiagnosticArgValue::Str(Cow::Owned(s.into_owned())),\n             DiagnosticArgValue::Number(n) => DiagnosticArgValue::Number(n),\n+            DiagnosticArgValue::StrListSepByAnd(l) => DiagnosticArgValue::StrListSepByAnd(\n+                l.into_iter().map(|s| Cow::Owned(s.into_owned())).collect(),\n+            ),\n         }\n     }\n }"}]}