{"sha": "bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968", "node_id": "C_kwDOAAsO6NoAKGJkN2Y4M2RjMzc3M2VlMWEwY2U2ZWJiNWJmN2MzYThjZDA0YmI5Njg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-04T15:48:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-04T17:25:54Z"}, "message": "run clippy on CI", "tree": {"sha": "da3c0600789ef15a08da445c37ecf9028d4b4cf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da3c0600789ef15a08da445c37ecf9028d4b4cf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968", "html_url": "https://github.com/rust-lang/rust/commit/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c2e3c0bcf8becc753e923780ec3b3fb0ca54f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c2e3c0bcf8becc753e923780ec3b3fb0ca54f2", "html_url": "https://github.com/rust-lang/rust/commit/92c2e3c0bcf8becc753e923780ec3b3fb0ca54f2"}], "stats": {"total": 60, "additions": 31, "deletions": 29}, "files": [{"sha": "41cf159e0c80139a8a28e78b87923ec8e9729465", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 27, "deletions": 28, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968", "patch": "@@ -72,20 +72,10 @@ jobs:\n         shell: bash\n         run: |\n           if [[ ${{ github.event_name }} == 'schedule' ]]; then\n-            RUSTC_HASH=$(git ls-remote https://github.com/rust-lang/rust.git master | awk '{print $1}')\n+            ./rustup-toolchain HEAD --host ${{ matrix.host_target }}\n           else\n-            RUSTC_HASH=$(< rust-version)\n+            ./rustup-toolchain \"\" --host ${{ matrix.host_target }}\n           fi\n-          # We need a nightly cargo for parts of the cargo miri test suite.\n-          rustup-toolchain-install-master \\\n-            -f \\\n-            -n master \"$RUSTC_HASH\" \\\n-            -c cargo \\\n-            -c rust-src \\\n-            -c rustc-dev \\\n-            -c llvm-tools \\\n-            --host ${{ matrix.host_target }}\n-          rustup default master\n \n       - name: Show Rust version\n         run: |\n@@ -97,26 +87,35 @@ jobs:\n         run: bash ./ci.sh\n \n   fmt:\n-    name: check formatting (ignored by bors)\n+    name: formatting (ignored by bors)\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v3\n       - name: Install latest nightly\n-        uses: actions-rs/toolchain@v1\n-        with:\n-            toolchain: nightly\n-            components: rustfmt\n-            default: true\n-      - name: Check formatting (miri)\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: fmt\n-          args: --all -- --check\n-      - name: Check formatting (cargo-miri)\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: fmt\n-          args: --manifest-path cargo-miri/Cargo.toml --all -- --check\n+        run: |\n+          rustup toolchain install nightly --component rustfmt\n+          rustup override set nightly\n+      - name: Formatting (miri, ui_test)\n+        run: cargo fmt --all --check\n+      - name: Formatting (cargo-miri)\n+        run: cargo fmt --manifest-path cargo-miri/Cargo.toml --all --check\n+\n+  clippy:\n+    name: clippy (ignored by bors)\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+      - name: Install required toolchain\n+        # We need a toolchain that can actually build Miri, just a nightly won't do.\n+        run: |\n+          cargo install rustup-toolchain-install-master # TODO: cache this?\n+          ./rustup-toolchain \"\" -c clippy\n+      - name: Clippy (miri)\n+        run: cargo clippy --all-targets -- -D warnings\n+      #- name: Clippy (ui_test)\n+      #  run: cargo clippy --manifest-path ui_test/Cargo.toml --all-targets -- -D warnings\n+      - name: Clippy (cargo-miri)\n+        run: cargo clippy --manifest-path cargo-miri/Cargo.toml --all-targets -- -D warnings\n \n   # These jobs doesn't actually test anything, but they're only used to tell\n   # bors the build completed, as there is no practical way to detect when a"}, {"sha": "7e5d57349b9dd6298240c71ffbb11442abbce631", "filename": "rustup-toolchain", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968/rustup-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968/rustup-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustup-toolchain?ref=bd7f83dc3773ee1a0ce6ebb5bf7c3a8cd04bb968", "patch": "@@ -12,6 +12,8 @@ set -e\n # ./rustup-toolchain HEAD: Update \"miri\" toolchain and `rust-version` file to latest rustc HEAD.\n #\n # ./rustup-toolchain $COMMIT: Update \"miri\" toolchain and `rust-version` file to match that commit.\n+#\n+# Any extra parameters are passed to `rustup-toolchain-install-master`.\n \n # Make sure rustup-toolchain-install-master is installed.\n if ! which rustup-toolchain-install-master >/dev/null; then\n@@ -28,6 +30,7 @@ else\n     NEW_COMMIT=\"$1\"\n fi\n echo \"$NEW_COMMIT\" > rust-version\n+shift\n \n # Check if we already are at that commit.\n CUR_COMMIT=$(rustc +miri --version -v 2>/dev/null | egrep \"^commit-hash: \" | cut -d \" \" -f 2)\n@@ -39,7 +42,7 @@ fi\n \n # Install and setup new toolchain.\n rustup toolchain uninstall miri\n-rustup-toolchain-install-master -n miri -c cargo -c rust-src -c rustc-dev -c llvm-tools -- \"$NEW_COMMIT\"\n+rustup-toolchain-install-master -n miri -c cargo -c rust-src -c rustc-dev -c llvm-tools \"$@\" -- \"$NEW_COMMIT\"\n rustup override set miri\n \n # Cleanup."}]}