{"sha": "3b668066245bf158ef2b990ac80199117b7097b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNjY4MDY2MjQ1YmYxNThlZjJiOTkwYWM4MDE5OTExN2I3MDk3YjU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-12T04:08:01Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T23:33:07Z"}, "message": "prohibit ptr deref unless in unsafe code", "tree": {"sha": "c074f6f357d085706af53425fbe85c1111eddd53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c074f6f357d085706af53425fbe85c1111eddd53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b668066245bf158ef2b990ac80199117b7097b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b668066245bf158ef2b990ac80199117b7097b5", "html_url": "https://github.com/rust-lang/rust/commit/3b668066245bf158ef2b990ac80199117b7097b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b668066245bf158ef2b990ac80199117b7097b5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a56698575c26a1238409ac638f0912f68dbfa7f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a56698575c26a1238409ac638f0912f68dbfa7f5", "html_url": "https://github.com/rust-lang/rust/commit/a56698575c26a1238409ac638f0912f68dbfa7f5"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "e18e5c2c63ea9dfd197a3a4d96f298550f4451f3", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3b668066245bf158ef2b990ac80199117b7097b5/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b668066245bf158ef2b990ac80199117b7097b5/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=3b668066245bf158ef2b990ac80199117b7097b5", "patch": "@@ -193,7 +193,7 @@ fn structurally_resolved_type(fcx: @fn_ctxt, sp: span, tp: ty::t) -> ty::t {\n }\n \n \n-// Returns the one-level-deep structure of the given type.\n+// Returns the one-level-deep structure of the given type.f\n fn structure_of(fcx: @fn_ctxt, sp: span, typ: ty::t) -> ty::sty {\n     ret ty::struct(fcx.ccx.tcx, structurally_resolved_type(fcx, sp, typ));\n }\n@@ -1530,7 +1530,7 @@ fn require_unsafe(sess: session::session, f_purity: ast::purity, sp: span) {\n           _ {\n             sess.span_fatal(\n                 sp,\n-                \"Found unsafe expression in safe function decl\");\n+                \"unsafe operation requires unsafe function or block\");\n           }\n         }\n     }\n@@ -1591,6 +1591,23 @@ fn check_expr_with(fcx: @fn_ctxt, expr: @ast::expr, expected: ty::t) -> bool {\n     ret check_expr_with_unifier(fcx, expr, demand::simple, expected);\n }\n \n+fn check_for_unsafe_assignments(fcx: @fn_ctxt, lhs: @ast::expr) {\n+    alt lhs.node {\n+      ast::expr_unary(ast::deref., ptr) {\n+        let ty = expr_ty(fcx.ccx.tcx, ptr);\n+        let sty = structure_of(fcx, ptr.span, ty);\n+        alt sty {\n+          ty::ty_ptr(_) {\n+            require_unsafe(fcx.ccx.tcx.sess, fcx.purity, lhs.span);\n+          }\n+          _ {}\n+        }\n+      }\n+      _ {\n+      }\n+    }\n+}\n+\n fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n                            expected: ty::t) -> bool {\n     //log_err \"typechecking expr \" + syntax::print::pprust::expr_to_str(expr);\n@@ -1702,6 +1719,7 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n                         rhs: @ast::expr, id: ast::node_id) -> bool {\n         let t = next_ty_var(fcx);\n         let bot = check_expr_with(fcx, lhs, t) | check_expr_with(fcx, rhs, t);\n+        check_for_unsafe_assignments(fcx, lhs);\n         write::ty_only_fixup(fcx, id, ty::mk_nil(fcx.ccx.tcx));\n         ret bot;\n     }"}, {"sha": "cf5dac3ff89f40aa64130229b5fea14296f01690", "filename": "src/test/compile-fail/unsafe-fn-deref-ptr.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3b668066245bf158ef2b990ac80199117b7097b5/src%2Ftest%2Fcompile-fail%2Funsafe-fn-deref-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b668066245bf158ef2b990ac80199117b7097b5/src%2Ftest%2Fcompile-fail%2Funsafe-fn-deref-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-fn-deref-ptr.rs?ref=3b668066245bf158ef2b990ac80199117b7097b5", "patch": "@@ -0,0 +1,11 @@\n+// -*- rust -*-\n+// error-pattern: unsafe operation requires unsafe function or block\n+\n+fn f(p: *u8) {\n+    *p = 0u8;\n+    ret;\n+}\n+\n+fn main() {\n+    f();\n+}"}]}