{"sha": "8c235d19bcb14518e79a789e546116b1990741cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMjM1ZDE5YmNiMTQ1MThlNzlhNzg5ZTU0NjExNmIxOTkwNzQxY2Q=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2017-06-13T01:36:36Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2017-06-13T02:06:37Z"}, "message": "`in_macro` check in `NEEDLESS_RETURN`\n\nThis allows you to define a macro like `try!(...)` that embeds an\nearly exit without emitting the \"needless_return\" warning.\n\nCloses #1271.", "tree": {"sha": "718caa412efb2b9adfaa3e6c20531016373fc717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/718caa412efb2b9adfaa3e6c20531016373fc717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c235d19bcb14518e79a789e546116b1990741cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c235d19bcb14518e79a789e546116b1990741cd", "html_url": "https://github.com/rust-lang/rust/commit/8c235d19bcb14518e79a789e546116b1990741cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c235d19bcb14518e79a789e546116b1990741cd/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6f5c89b934df49e2fc1af2df33dc1870fe85009", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f5c89b934df49e2fc1af2df33dc1870fe85009", "html_url": "https://github.com/rust-lang/rust/commit/c6f5c89b934df49e2fc1af2df33dc1870fe85009"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "65fcc6b1d70756de7b979acddd8bce5ec90303b6", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c235d19bcb14518e79a789e546116b1990741cd/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c235d19bcb14518e79a789e546116b1990741cd/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=8c235d19bcb14518e79a789e546116b1990741cd", "patch": "@@ -3,7 +3,8 @@ use syntax::ast;\n use syntax::codemap::{Span, Spanned};\n use syntax::visit::FnKind;\n \n-use utils::{span_note_and_lint, span_lint_and_then, snippet_opt, match_path_ast, in_external_macro};\n+use utils::{span_note_and_lint, span_lint_and_then, snippet_opt, match_path_ast, in_macro,\n+            in_external_macro};\n \n /// **What it does:** Checks for return statements at the end of a block.\n ///\n@@ -89,7 +90,7 @@ impl ReturnPass {\n     }\n \n     fn emit_return_lint(&mut self, cx: &EarlyContext, ret_span: Span, inner_span: Span) {\n-        if in_external_macro(cx, inner_span) {\n+        if in_external_macro(cx, inner_span) || in_macro(inner_span) {\n             return;\n         }\n         span_lint_and_then(cx,"}]}