{"sha": "ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "node_id": "C_kwDOAAsO6NoAKGNlYWUxZGQzZjg0NzY4MmE5YjJiYmEzNDdlYTJmODViMWZiNmM2ODQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-11T15:02:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T15:02:49Z"}, "message": "Rollup merge of #91717 - inashivb:issue-91713, r=jyn514\n\nAdd deprecation warning for --passes\n\nIssue https://github.com/rust-lang/rust/issues/91713 mentored by ```@jyn514```", "tree": {"sha": "4b49e4b86dcd1be1bf05a3138970c4d6f1b47952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b49e4b86dcd1be1bf05a3138970c4d6f1b47952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtL2ZCRBK7hj4Ov3rIwAA82cIAI5QLS9K9MeVAMONLAybORWX\nZISjnRBALqYRBpWf+nqb+ET5nhmLPsebqMSAD155OKQl9LE6Zt1TvB1Y9n62B1VC\nQjeC9/iIWfvXc52RjybgvDUWdtiQbWQln8pLzSaAFXz71QZSuXvSXgRcFyiK+2pQ\nyIrIhJSPSCR+y7/ekSyHpyf5KhOuzTocrYgqttlibcvlQPEQGRAJWdolpy5zxaTZ\nZ18hPEh5zhW5sRwCiIb7uoyKqwPyXDpiwhxR+SEOXh9APgXXCGO33TtgiJYefmBh\nPkYJeZkakAchAvZFnylb80dmjU8g1ap2YEZXdXvYJyXPZYQ/WEypQRGxp6JLm9w=\n=cikP\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b49e4b86dcd1be1bf05a3138970c4d6f1b47952\nparent 94ac197585939106216f110d50f6ef731134fb30\nparent 2b6987d91fda4d47415914acc54afc26be837ac2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639234969 +0100\ncommitter GitHub <noreply@github.com> 1639234969 +0100\n\nRollup merge of #91717 - inashivb:issue-91713, r=jyn514\n\nAdd deprecation warning for --passes\n\nIssue https://github.com/rust-lang/rust/issues/91713 mentored by ```@jyn514```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "html_url": "https://github.com/rust-lang/rust/commit/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94ac197585939106216f110d50f6ef731134fb30", "url": "https://api.github.com/repos/rust-lang/rust/commits/94ac197585939106216f110d50f6ef731134fb30", "html_url": "https://github.com/rust-lang/rust/commit/94ac197585939106216f110d50f6ef731134fb30"}, {"sha": "2b6987d91fda4d47415914acc54afc26be837ac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b6987d91fda4d47415914acc54afc26be837ac2", "html_url": "https://github.com/rust-lang/rust/commit/2b6987d91fda4d47415914acc54afc26be837ac2"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "35df5fa1b7470a9307cf9927dd2fe426a5705e78", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "patch": "@@ -327,6 +327,19 @@ impl Options {\n             return Err(0);\n         }\n \n+        let color = config::parse_color(matches);\n+        let config::JsonConfig { json_rendered, json_unused_externs, .. } =\n+            config::parse_json(matches);\n+        let error_format = config::parse_error_format(matches, color, json_rendered);\n+\n+        let codegen_options = CodegenOptions::build(matches, error_format);\n+        let debugging_opts = DebuggingOptions::build(matches, error_format);\n+\n+        let diag = new_handler(error_format, None, &debugging_opts);\n+\n+        // check for deprecated options\n+        check_deprecated_options(matches, &diag);\n+\n         if matches.opt_strs(\"passes\") == [\"list\"] {\n             println!(\"Available passes for running rustdoc:\");\n             for pass in passes::PASSES {\n@@ -359,19 +372,6 @@ impl Options {\n             return Err(0);\n         }\n \n-        let color = config::parse_color(matches);\n-        let config::JsonConfig { json_rendered, json_unused_externs, .. } =\n-            config::parse_json(matches);\n-        let error_format = config::parse_error_format(matches, color, json_rendered);\n-\n-        let codegen_options = CodegenOptions::build(matches, error_format);\n-        let debugging_opts = DebuggingOptions::build(matches, error_format);\n-\n-        let diag = new_handler(error_format, None, &debugging_opts);\n-\n-        // check for deprecated options\n-        check_deprecated_options(matches, &diag);\n-\n         let mut emit = Vec::new();\n         for list in matches.opt_strs(\"emit\") {\n             for kind in list.split(',') {"}, {"sha": "b7057d868c27565e2de0992638041e9f29999c36", "filename": "src/test/rustdoc-ui/issue-91713.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Ftest%2Frustdoc-ui%2Fissue-91713.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Ftest%2Frustdoc-ui%2Fissue-91713.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91713.rs?ref=ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "patch": "@@ -0,0 +1,3 @@\n+// check-pass\n+// compile-flags: --passes list\n+// error-pattern: the `passes` flag is deprecated"}, {"sha": "70c22b3c01e9e4ab17f516e65333c1bac6472528", "filename": "src/test/rustdoc-ui/issue-91713.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stderr?ref=ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "patch": "@@ -0,0 +1,4 @@\n+warning: the `passes` flag is deprecated\n+   |\n+   = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+"}, {"sha": "d0372d4945f3a4598043fea06c2565c2f5ae8373", "filename": "src/test/rustdoc-ui/issue-91713.stdout", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/ceae1dd3f847682a9b2bba347ea2f85b1fb6c684/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stdout?ref=ceae1dd3f847682a9b2bba347ea2f85b1fb6c684", "patch": "@@ -0,0 +1,31 @@\n+Available passes for running rustdoc:\n+check_doc_test_visibility - run various visibility-related lints on doctests\n+        strip-hidden - strips all `#[doc(hidden)]` items from the output\n+   unindent-comments - removes excess indentation on comments in order for markdown to like it\n+       strip-private - strips all private items from a crate which cannot be seen externally, implies strip-priv-imports\n+  strip-priv-imports - strips all private import statements (`use`, `extern crate`) from a crate\n+   propagate-doc-cfg - propagates `#[doc(cfg(...))]` to child items\n+collect-intra-doc-links - resolves intra-doc links\n+check-code-block-syntax - validates syntax inside Rust code blocks\n+ collect-trait-impls - retrieves trait impls for items in the crate\n+calculate-doc-coverage - counts the number of items with and without documentation\n+check-invalid-html-tags - detects invalid HTML tags in doc comments\n+     check-bare-urls - detects URLs that are not hyperlinks\n+\n+Default passes for rustdoc:\n+ collect-trait-impls\n+   unindent-comments\n+check_doc_test_visibility\n+        strip-hidden  (when not --document-hidden-items)\n+       strip-private  (when not --document-private-items)\n+  strip-priv-imports  (when --document-private-items)\n+collect-intra-doc-links\n+check-code-block-syntax\n+check-invalid-html-tags\n+   propagate-doc-cfg\n+     check-bare-urls\n+\n+Passes run with `--show-coverage`:\n+        strip-hidden  (when not --document-hidden-items)\n+       strip-private  (when not --document-private-items)\n+calculate-doc-coverage"}]}