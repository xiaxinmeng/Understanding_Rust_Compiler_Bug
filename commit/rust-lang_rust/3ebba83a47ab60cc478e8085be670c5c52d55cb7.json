{"sha": "3ebba83a47ab60cc478e8085be670c5c52d55cb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYmJhODNhNDdhYjYwY2M0NzhlODA4NWJlNjcwYzVjNTJkNTVjYjc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-19T09:47:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-19T09:47:37Z"}, "message": "Rollup merge of #75580 - JulianKnodt:or_pattern, r=wesleywiser\n\nAdd test for checking duplicated branch or-patterns\n\nThis adds a regression test for checking `or-patterns` in MIR as shown in #75439.\nThis doesn't introduce a fix as I'm not sure where it would go(I suspect maybe here: src/librustc_mir_build/build/matches/mod.rs), and I'm not particularly able to fix it.\n\ncc: @lzutao", "tree": {"sha": "275cc67e1ff72ed4cd5cfd590cc765456fe4414b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/275cc67e1ff72ed4cd5cfd590cc765456fe4414b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ebba83a47ab60cc478e8085be670c5c52d55cb7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfZdO6CRBK7hj4Ov3rIwAAdHIIAFMBexZdlIkKR+hMKZoBS1Rk\nR+nPI5ylScrLRqEptIN7WUE4xvFWa5EG6ImPL07rm7oVMlw62h95tl1TKbq0dWU2\nDZayJF46dcvuGBqCyCeiFdd4E6rI1wNs8UFYzcWP1NjQTZViVW6f0k+p6Q/FLZBN\nQ+vzNeCrwuGD1dqe5BUU40g5JqrxztB8pYGg1/Feg+Ohx5w6OeVahMDjpL65tFKw\nceicFAbXB3jUZtfHV3osVLB44QlhjIr6yOb+dZ0wwKZ36c4KCWO9tARuyz0hQrhp\nbfa0dJVuakcLvMI7LKoFZpKbGcXgTKqWR+VIWQ7yuMsLpXZyv4jPnVwLHaMETUY=\n=L4Lt\n-----END PGP SIGNATURE-----\n", "payload": "tree 275cc67e1ff72ed4cd5cfd590cc765456fe4414b\nparent f62ba52f5c100eadd658d6685e680518b71cdb77\nparent 6cb671628393e292d5e68e6367f80488ace46532\nauthor Ralf Jung <post@ralfj.de> 1600508857 +0200\ncommitter GitHub <noreply@github.com> 1600508857 +0200\n\nRollup merge of #75580 - JulianKnodt:or_pattern, r=wesleywiser\n\nAdd test for checking duplicated branch or-patterns\n\nThis adds a regression test for checking `or-patterns` in MIR as shown in #75439.\nThis doesn't introduce a fix as I'm not sure where it would go(I suspect maybe here: src/librustc_mir_build/build/matches/mod.rs), and I'm not particularly able to fix it.\n\ncc: @lzutao\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebba83a47ab60cc478e8085be670c5c52d55cb7", "html_url": "https://github.com/rust-lang/rust/commit/3ebba83a47ab60cc478e8085be670c5c52d55cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ebba83a47ab60cc478e8085be670c5c52d55cb7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f62ba52f5c100eadd658d6685e680518b71cdb77", "url": "https://api.github.com/repos/rust-lang/rust/commits/f62ba52f5c100eadd658d6685e680518b71cdb77", "html_url": "https://github.com/rust-lang/rust/commit/f62ba52f5c100eadd658d6685e680518b71cdb77"}, {"sha": "6cb671628393e292d5e68e6367f80488ace46532", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb671628393e292d5e68e6367f80488ace46532", "html_url": "https://github.com/rust-lang/rust/commit/6cb671628393e292d5e68e6367f80488ace46532"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "44d6bc619d3bbfa09b207b3d1be395418d054ef5", "filename": "src/test/mir-opt/issues/issue-75439.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3ebba83a47ab60cc478e8085be670c5c52d55cb7/src%2Ftest%2Fmir-opt%2Fissues%2Fissue-75439.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ebba83a47ab60cc478e8085be670c5c52d55cb7/src%2Ftest%2Fmir-opt%2Fissues%2Fissue-75439.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissues%2Fissue-75439.rs?ref=3ebba83a47ab60cc478e8085be670c5c52d55cb7", "patch": "@@ -0,0 +1,21 @@\n+// EMIT_MIR issue_75439.foo.MatchBranchSimplification.diff\n+\n+#![feature(const_fn_transmute)]\n+#![feature(or_patterns)]\n+\n+use std::mem::transmute;\n+\n+pub fn foo(bytes: [u8; 16]) -> Option<[u8; 4]> {\n+    // big endian `u32`s\n+    let dwords: [u32; 4] = unsafe { transmute(bytes) };\n+    const FF: u32 = 0x0000_ffff_u32.to_be();\n+    if let [0, 0, 0 | FF, ip] = dwords {\n+        Some(unsafe { transmute(ip) })\n+    } else {\n+        None\n+    }\n+}\n+\n+fn main() {\n+  let _ = foo([0; 16]);\n+}"}, {"sha": "43422b36e1e5283894f3f923a390167d31158560", "filename": "src/test/mir-opt/issues/issue_75439.foo.MatchBranchSimplification.diff", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/3ebba83a47ab60cc478e8085be670c5c52d55cb7/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_75439.foo.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/3ebba83a47ab60cc478e8085be670c5c52d55cb7/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_75439.foo.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_75439.foo.MatchBranchSimplification.diff?ref=3ebba83a47ab60cc478e8085be670c5c52d55cb7", "patch": "@@ -0,0 +1,87 @@\n+- // MIR for `foo` before MatchBranchSimplification\n++ // MIR for `foo` after MatchBranchSimplification\n+  \n+  fn foo(_1: [u8; 16]) -> Option<[u8; 4]> {\n+      debug bytes => _1;                   // in scope 0 at $DIR/issue-75439.rs:8:12: 8:17\n+      let mut _0: std::option::Option<[u8; 4]>; // return place in scope 0 at $DIR/issue-75439.rs:8:32: 8:47\n+      let _2: [u32; 4];                    // in scope 0 at $DIR/issue-75439.rs:10:9: 10:15\n+      let mut _3: [u8; 16];                // in scope 0 at $DIR/issue-75439.rs:10:47: 10:52\n+      let mut _5: [u8; 4];                 // in scope 0 at $DIR/issue-75439.rs:13:14: 13:38\n+      let mut _6: u32;                     // in scope 0 at $DIR/issue-75439.rs:13:33: 13:35\n+      scope 1 {\n+          debug dwords => _2;              // in scope 1 at $DIR/issue-75439.rs:10:9: 10:15\n+          let _4: u32;                     // in scope 1 at $DIR/issue-75439.rs:12:27: 12:29\n+          scope 3 {\n+              debug ip => _4;              // in scope 3 at $DIR/issue-75439.rs:12:27: 12:29\n+              scope 4 {\n+              }\n+          }\n+      }\n+      scope 2 {\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/issue-75439.rs:10:9: 10:15\n+          StorageLive(_3);                 // scope 2 at $DIR/issue-75439.rs:10:47: 10:52\n+          _3 = _1;                         // scope 2 at $DIR/issue-75439.rs:10:47: 10:52\n+          _2 = transmute::<[u8; 16], [u32; 4]>(move _3) -> bb1; // scope 2 at $DIR/issue-75439.rs:10:37: 10:53\n+                                           // mir::Constant\n+                                           // + span: $DIR/issue-75439.rs:10:37: 10:46\n+                                           // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn([u8; 16]) -> [u32; 4] {std::intrinsics::transmute::<[u8; 16], [u32; 4]>}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_3);                 // scope 2 at $DIR/issue-75439.rs:10:52: 10:53\n+          switchInt(_2[0 of 4]) -> [0_u32: bb2, otherwise: bb4]; // scope 1 at $DIR/issue-75439.rs:12:13: 12:14\n+      }\n+  \n+      bb2: {\n+          switchInt(_2[1 of 4]) -> [0_u32: bb3, otherwise: bb4]; // scope 1 at $DIR/issue-75439.rs:12:16: 12:17\n+      }\n+  \n+      bb3: {\n+          switchInt(_2[2 of 4]) -> [0_u32: bb6, 4294901760_u32: bb7, otherwise: bb4]; // scope 1 at $DIR/issue-75439.rs:12:19: 12:20\n+      }\n+  \n+      bb4: {\n+          discriminant(_0) = 0;            // scope 1 at $DIR/issue-75439.rs:15:9: 15:13\n+          goto -> bb9;                     // scope 1 at $DIR/issue-75439.rs:12:5: 16:6\n+      }\n+  \n+      bb5: {\n+          StorageLive(_5);                 // scope 3 at $DIR/issue-75439.rs:13:14: 13:38\n+          StorageLive(_6);                 // scope 4 at $DIR/issue-75439.rs:13:33: 13:35\n+          _6 = _4;                         // scope 4 at $DIR/issue-75439.rs:13:33: 13:35\n+          _5 = transmute::<u32, [u8; 4]>(move _6) -> bb8; // scope 4 at $DIR/issue-75439.rs:13:23: 13:36\n+                                           // mir::Constant\n+                                           // + span: $DIR/issue-75439.rs:13:23: 13:32\n+                                           // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(u32) -> [u8; 4] {std::intrinsics::transmute::<u32, [u8; 4]>}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb6: {\n+          StorageLive(_4);                 // scope 1 at $DIR/issue-75439.rs:12:27: 12:29\n+          _4 = _2[3 of 4];                 // scope 1 at $DIR/issue-75439.rs:12:27: 12:29\n+          goto -> bb5;                     // scope 1 at $DIR/issue-75439.rs:12:5: 16:6\n+      }\n+  \n+      bb7: {\n+          StorageLive(_4);                 // scope 1 at $DIR/issue-75439.rs:12:27: 12:29\n+          _4 = _2[3 of 4];                 // scope 1 at $DIR/issue-75439.rs:12:27: 12:29\n+          goto -> bb5;                     // scope 1 at $DIR/issue-75439.rs:12:5: 16:6\n+      }\n+  \n+      bb8: {\n+          StorageDead(_6);                 // scope 4 at $DIR/issue-75439.rs:13:35: 13:36\n+          ((_0 as Some).0: [u8; 4]) = move _5; // scope 3 at $DIR/issue-75439.rs:13:9: 13:39\n+          discriminant(_0) = 1;            // scope 3 at $DIR/issue-75439.rs:13:9: 13:39\n+          StorageDead(_5);                 // scope 3 at $DIR/issue-75439.rs:13:38: 13:39\n+          StorageDead(_4);                 // scope 1 at $DIR/issue-75439.rs:14:5: 14:6\n+          goto -> bb9;                     // scope 1 at $DIR/issue-75439.rs:12:5: 16:6\n+      }\n+  \n+      bb9: {\n+          StorageDead(_2);                 // scope 0 at $DIR/issue-75439.rs:17:1: 17:2\n+          return;                          // scope 0 at $DIR/issue-75439.rs:17:2: 17:2\n+      }\n+  }\n+  "}]}