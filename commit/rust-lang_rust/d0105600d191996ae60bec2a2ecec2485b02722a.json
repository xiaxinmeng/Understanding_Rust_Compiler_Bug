{"sha": "d0105600d191996ae60bec2a2ecec2485b02722a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMTA1NjAwZDE5MTk5NmFlNjBiZWMyYTJlY2VjMjQ4NWIwMjcyMmE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-08T11:29:55Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:20:41Z"}, "message": "document parse_late_bound_lifetime_defs", "tree": {"sha": "b5151d3ff2c782ff7f8d82023cbaac28c45f6c54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5151d3ff2c782ff7f8d82023cbaac28c45f6c54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0105600d191996ae60bec2a2ecec2485b02722a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0105600d191996ae60bec2a2ecec2485b02722a", "html_url": "https://github.com/rust-lang/rust/commit/d0105600d191996ae60bec2a2ecec2485b02722a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0105600d191996ae60bec2a2ecec2485b02722a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f221b394def7e739c6c2b936afd12e032ee0f827", "url": "https://api.github.com/repos/rust-lang/rust/commits/f221b394def7e739c6c2b936afd12e032ee0f827", "html_url": "https://github.com/rust-lang/rust/commit/f221b394def7e739c6c2b936afd12e032ee0f827"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "09697c01a54b140e5b2071c2f2ec5295edf07f84", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0105600d191996ae60bec2a2ecec2485b02722a/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0105600d191996ae60bec2a2ecec2485b02722a/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=d0105600d191996ae60bec2a2ecec2485b02722a", "patch": "@@ -514,6 +514,7 @@ impl<'a> Parser<'a> {\n         Ok(GenericBound::Trait(poly_trait, modifier))\n     }\n \n+    /// Optionally parses `for<$generic_params>`.\n     pub(super) fn parse_late_bound_lifetime_defs(&mut self) -> PResult<'a, Vec<GenericParam>> {\n         if self.eat_keyword(kw::For) {\n             self.expect_lt()?;"}]}