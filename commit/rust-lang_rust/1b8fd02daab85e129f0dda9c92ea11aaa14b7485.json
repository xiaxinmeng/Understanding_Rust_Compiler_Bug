{"sha": "1b8fd02daab85e129f0dda9c92ea11aaa14b7485", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiOGZkMDJkYWFiODVlMTI5ZjBkZGE5YzkyZWExMWFhYTE0Yjc0ODU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-15T09:26:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-15T09:26:11Z"}, "message": "Rollup merge of #80834 - bugadani:vecdeque, r=oli-obk\n\nRemove unreachable panics from VecDeque::{front/back}[_mut]\n\n`VecDeque`'s `front`, `front_mut`, `back` and `back_mut` methods are implemented in terms of the index operator, which causes these functions to contain [unreachable panic calls](https://rust.godbolt.org/z/MTnq1o).\n\nThis PR reimplements these methods in terms of `get[_mut]` instead.", "tree": {"sha": "430e8c9eb2d45f681155b91b75cea49a793f9b8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/430e8c9eb2d45f681155b91b75cea49a793f9b8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b8fd02daab85e129f0dda9c92ea11aaa14b7485", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgAV+0CRBK7hj4Ov3rIwAAdHIIAD4snNRiQkbqJg+D4+1EQtw1\npJPd1nvugRTfRDYuSxXCwtebWR6hxG7QN7ilGyxwD5LqtjAaRMMMncX09pwRJKe0\nI50OwpEKf3Pkm6tgGs0gFG1pDLVbAhfIKPvWLuuGACMiofI6ZUy11vrRqXlTAmwg\nG6tg7eCUgIhBdKh6mMNncA5XlxT6oGQx2h7xAOyHyV3J93AMauPDJrZlHgwcjeIj\nqVfwDIg/X835mW62TgwTQqmp81jWk8rxQtSoQx6muJAyP1nG2gwH2YebQElb8E0V\nnIEf+2R+jzlVh03XFroQa5cu5G2uKtSHy6ECY0Df06oEArjmF7utesSSG1gP8M8=\n=yhID\n-----END PGP SIGNATURE-----\n", "payload": "tree 430e8c9eb2d45f681155b91b75cea49a793f9b8f\nparent 0dedc6c0546c709087ebad1dc1f9d85b183b2f09\nparent 744f885e2a505136203e3e0eef51f72dbe78b511\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610702771 +0900\ncommitter GitHub <noreply@github.com> 1610702771 +0900\n\nRollup merge of #80834 - bugadani:vecdeque, r=oli-obk\n\nRemove unreachable panics from VecDeque::{front/back}[_mut]\n\n`VecDeque`'s `front`, `front_mut`, `back` and `back_mut` methods are implemented in terms of the index operator, which causes these functions to contain [unreachable panic calls](https://rust.godbolt.org/z/MTnq1o).\n\nThis PR reimplements these methods in terms of `get[_mut]` instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8fd02daab85e129f0dda9c92ea11aaa14b7485", "html_url": "https://github.com/rust-lang/rust/commit/1b8fd02daab85e129f0dda9c92ea11aaa14b7485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b8fd02daab85e129f0dda9c92ea11aaa14b7485/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dedc6c0546c709087ebad1dc1f9d85b183b2f09", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dedc6c0546c709087ebad1dc1f9d85b183b2f09", "html_url": "https://github.com/rust-lang/rust/commit/0dedc6c0546c709087ebad1dc1f9d85b183b2f09"}, {"sha": "744f885e2a505136203e3e0eef51f72dbe78b511", "url": "https://api.github.com/repos/rust-lang/rust/commits/744f885e2a505136203e3e0eef51f72dbe78b511", "html_url": "https://github.com/rust-lang/rust/commit/744f885e2a505136203e3e0eef51f72dbe78b511"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "5b61e8911a59a40fa810403ebf22fb59799cced1", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1b8fd02daab85e129f0dda9c92ea11aaa14b7485/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8fd02daab85e129f0dda9c92ea11aaa14b7485/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=1b8fd02daab85e129f0dda9c92ea11aaa14b7485", "patch": "@@ -1292,7 +1292,7 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn front(&self) -> Option<&T> {\n-        if !self.is_empty() { Some(&self[0]) } else { None }\n+        self.get(0)\n     }\n \n     /// Provides a mutable reference to the front element, or `None` if the\n@@ -1316,7 +1316,7 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn front_mut(&mut self) -> Option<&mut T> {\n-        if !self.is_empty() { Some(&mut self[0]) } else { None }\n+        self.get_mut(0)\n     }\n \n     /// Provides a reference to the back element, or `None` if the `VecDeque` is\n@@ -1336,7 +1336,7 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn back(&self) -> Option<&T> {\n-        if !self.is_empty() { Some(&self[self.len() - 1]) } else { None }\n+        self.get(self.len().wrapping_sub(1))\n     }\n \n     /// Provides a mutable reference to the back element, or `None` if the\n@@ -1360,8 +1360,7 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn back_mut(&mut self) -> Option<&mut T> {\n-        let len = self.len();\n-        if !self.is_empty() { Some(&mut self[len - 1]) } else { None }\n+        self.get_mut(self.len().wrapping_sub(1))\n     }\n \n     /// Removes the first element and returns it, or `None` if the `VecDeque` is"}, {"sha": "cbf420bada994cfd338634428bc0afb110cfeda5", "filename": "src/test/codegen/vecdeque_no_panic.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1b8fd02daab85e129f0dda9c92ea11aaa14b7485/src%2Ftest%2Fcodegen%2Fvecdeque_no_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8fd02daab85e129f0dda9c92ea11aaa14b7485/src%2Ftest%2Fcodegen%2Fvecdeque_no_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fvecdeque_no_panic.rs?ref=1b8fd02daab85e129f0dda9c92ea11aaa14b7485", "patch": "@@ -0,0 +1,19 @@\n+// This test checks that `VecDeque::front[_mut]()` and `VecDeque::back[_mut]()` can't panic.\n+\n+// compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n+\n+#![crate_type = \"lib\"]\n+\n+use std::collections::VecDeque;\n+\n+// CHECK-LABEL: @dont_panic\n+#[no_mangle]\n+pub fn dont_panic(v: &mut VecDeque<usize>) {\n+    // CHECK-NOT: expect\n+    // CHECK-NOT: panic\n+    v.front();\n+    v.front_mut();\n+    v.back();\n+    v.back_mut();\n+}"}]}