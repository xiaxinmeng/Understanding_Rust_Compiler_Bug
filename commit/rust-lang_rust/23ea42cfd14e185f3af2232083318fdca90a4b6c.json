{"sha": "23ea42cfd14e185f3af2232083318fdca90a4b6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZWE0MmNmZDE0ZTE4NWYzYWYyMjMyMDgzMzE4ZmRjYTkwYTRiNmM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-14T04:30:34Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-20T09:28:10Z"}, "message": "Update tests", "tree": {"sha": "898d1fa3c70c28e7b11971c98cdc85a6223fff4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/898d1fa3c70c28e7b11971c98cdc85a6223fff4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23ea42cfd14e185f3af2232083318fdca90a4b6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23ea42cfd14e185f3af2232083318fdca90a4b6c", "html_url": "https://github.com/rust-lang/rust/commit/23ea42cfd14e185f3af2232083318fdca90a4b6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23ea42cfd14e185f3af2232083318fdca90a4b6c/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "html_url": "https://github.com/rust-lang/rust/commit/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e"}], "stats": {"total": 143, "additions": 49, "deletions": 94}, "files": [{"sha": "e4f4d4262b64d54e21adcf2375edef1f54a362f2", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.gated.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -1,8 +1,8 @@\n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/feature-gate.rs:11:29\n+error: fatal error triggered by #[rustc_error]\n+  --> $DIR/feature-gate.rs:16:1\n    |\n-LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n-   |                             ^^^^^^^^\n+LL | fn main() {}\n+   | ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "d600b53e448750bfb6a76cec02e8d9f5ac575b36", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -3,13 +3,14 @@\n \n #![cfg_attr(gated, feature(const_trait_bound_opt_out))]\n #![allow(incomplete_features)]\n+#![feature(rustc_attrs)]\n \n trait T {\n     const CONST: i32;\n }\n \n const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n //[stock]~^ ERROR `?const` on trait bounds is experimental\n-//[stock,gated]~^^ ERROR `?const` on trait bounds is not yet implemented\n \n-fn main() {}\n+#[rustc_error]\n+fn main() {} //[gated]~ ERROR fatal error triggered by #[rustc_error]"}, {"sha": "fbd3840cb1d2bc1ffe53c784b24f401cce66bcfe", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.stock.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -1,18 +1,12 @@\n error[E0658]: `?const` on trait bounds is experimental\n-  --> $DIR/feature-gate.rs:11:29\n+  --> $DIR/feature-gate.rs:12:29\n    |\n LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n    |                             ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/67794\n    = help: add `#![feature(const_trait_bound_opt_out)]` to the crate attributes to enable\n \n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/feature-gate.rs:11:29\n-   |\n-LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n-   |                             ^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "f5561a922ddcd7555d6803c57332fc405f372266", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-impl-trait.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -8,18 +8,14 @@ impl T for S {}\n \n fn rpit() -> impl ?const T { S }\n //~^ ERROR `?const` is not permitted in `impl Trait`\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn apit(_: impl ?const T) {}\n //~^ ERROR `?const` is not permitted in `impl Trait`\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n //~^ ERROR `?const` is not permitted in `impl Trait`\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n //~^ ERROR `?const` is not permitted in `impl Trait`\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn main() {}"}, {"sha": "06cd00a956a2d99999ad837e585e3c4668af4404", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-impl-trait.stderr", "status": "modified", "additions": 4, "deletions": 28, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -5,46 +5,22 @@ LL | fn rpit() -> impl ?const T { S }\n    |                   ^^^^^^^^\n \n error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:13:17\n+  --> $DIR/in-impl-trait.rs:12:17\n    |\n LL | fn apit(_: impl ?const T) {}\n    |                 ^^^^^^^^\n \n error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:17:50\n+  --> $DIR/in-impl-trait.rs:15:50\n    |\n LL | fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n    |                                                  ^^^^^^^^\n \n error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:21:48\n+  --> $DIR/in-impl-trait.rs:18:48\n    |\n LL | fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n    |                                                ^^^^^^^^\n \n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-impl-trait.rs:9:19\n-   |\n-LL | fn rpit() -> impl ?const T { S }\n-   |                   ^^^^^^^^\n-\n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-impl-trait.rs:13:17\n-   |\n-LL | fn apit(_: impl ?const T) {}\n-   |                 ^^^^^^^^\n-\n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-impl-trait.rs:17:50\n-   |\n-LL | fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n-   |                                                  ^^^^^^^^\n-\n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-impl-trait.rs:21:48\n-   |\n-LL | fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n-   |                                                ^^^^^^^^\n-\n-error: aborting due to 8 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "fc9ed5b1dc22e10ab2101576d623266c0dccef17", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-bounds.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -4,6 +4,5 @@\n trait Super {}\n trait T: ?const Super {}\n //~^ ERROR `?const` is not permitted in supertraits\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn main() {}"}, {"sha": "a0d8f95acd2a839313f73b39b3ed399f9f351b68", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-bounds.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -4,11 +4,5 @@ error: `?const` is not permitted in supertraits\n LL | trait T: ?const Super {}\n    |          ^^^^^^^^^^^^\n \n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-trait-bounds.rs:5:10\n-   |\n-LL | trait T: ?const Super {}\n-   |          ^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "b3d1f48ace147403190ef7e220b17950619c95c1", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-object.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -9,14 +9,11 @@ impl T for S {}\n // An inherent impl for the trait object `?const T`.\n impl ?const T {}\n //~^ ERROR `?const` is not permitted in trait objects\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn trait_object() -> &'static dyn ?const T { &S }\n //~^ ERROR `?const` is not permitted in trait objects\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn trait_object_in_apit(_: impl IntoIterator<Item = Box<dyn ?const T>>) {}\n //~^ ERROR `?const` is not permitted in trait objects\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn main() {}"}, {"sha": "331fe0423fa9499abfedb7cb525dbc99bc9fb178", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-object.stderr", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -5,34 +5,16 @@ LL | impl ?const T {}\n    |      ^^^^^^^^\n \n error: `?const` is not permitted in trait objects\n-  --> $DIR/in-trait-object.rs:14:35\n+  --> $DIR/in-trait-object.rs:13:35\n    |\n LL | fn trait_object() -> &'static dyn ?const T { &S }\n    |                                   ^^^^^^^^\n \n error: `?const` is not permitted in trait objects\n-  --> $DIR/in-trait-object.rs:18:61\n+  --> $DIR/in-trait-object.rs:16:61\n    |\n LL | fn trait_object_in_apit(_: impl IntoIterator<Item = Box<dyn ?const T>>) {}\n    |                                                             ^^^^^^^^\n \n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-trait-object.rs:10:6\n-   |\n-LL | impl ?const T {}\n-   |      ^^^^^^^^\n-\n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-trait-object.rs:14:35\n-   |\n-LL | fn trait_object() -> &'static dyn ?const T { &S }\n-   |                                   ^^^^^^^^\n-\n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/in-trait-object.rs:18:61\n-   |\n-LL | fn trait_object_in_apit(_: impl IntoIterator<Item = Box<dyn ?const T>>) {}\n-   |                                                             ^^^^^^^^\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "c2c8689e2942bcd33ba2ad795acd56b809544537", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/with-maybe-sized.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.rs?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -3,6 +3,5 @@\n \n struct S<T: ?const ?Sized>(std::marker::PhantomData<T>);\n //~^ ERROR `?const` and `?` are mutually exclusive\n-//~| ERROR `?const` on trait bounds is not yet implemented\n \n fn main() {}"}, {"sha": "e8e9d6c1e76215671845463d21c0656e70b5e111", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/with-maybe-sized.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -4,11 +4,5 @@ error: `?const` and `?` are mutually exclusive\n LL | struct S<T: ?const ?Sized>(std::marker::PhantomData<T>);\n    |             ^^^^^^^^^^^^^\n \n-error: `?const` on trait bounds is not yet implemented\n-  --> $DIR/with-maybe-sized.rs:4:13\n-   |\n-LL | struct S<T: ?const ?Sized>(std::marker::PhantomData<T>);\n-   |             ^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "7f064c0c53ade98d5fb14af17eff69ecc2080ee2", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n #![feature(const_trait_impl)]\n #![feature(const_trait_bound_opt_out)]\n #![allow(incomplete_features)]\n@@ -8,7 +6,12 @@\n struct S;\n trait T {}\n \n+impl const S {}\n+//~^ ERROR inherent impls cannot be `const`\n+//~| ERROR const trait impls are not yet implemented\n+\n impl const T {}\n-//~^ ERROR `const` cannot modify an inherent impl\n+//~^ ERROR inherent impls cannot be `const`\n+//~| ERROR const trait impls are not yet implemented\n \n fn main() {}"}, {"sha": "508c6f4c747e1745839b039208be5a974289164d", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.stderr", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ea42cfd14e185f3af2232083318fdca90a4b6c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr?ref=23ea42cfd14e185f3af2232083318fdca90a4b6c", "patch": "@@ -1,10 +1,30 @@\n-error: `const` cannot modify an inherent impl\n-  --> $DIR/inherent-impl.rs:11:6\n+error: inherent impls cannot be `const`\n+  --> $DIR/inherent-impl.rs:9:1\n+   |\n+LL | impl const S {}\n+   | ^^^^^^^^^^^^^^^\n+   |\n+   = note: only trait implementations may be annotated with `const`\n+\n+error: inherent impls cannot be `const`\n+  --> $DIR/inherent-impl.rs:13:1\n    |\n LL | impl const T {}\n-   |      ^^^^^\n+   | ^^^^^^^^^^^^^^^\n+   |\n+   = note: only trait implementations may be annotated with `const`\n+\n+error: const trait impls are not yet implemented\n+  --> $DIR/inherent-impl.rs:9:1\n+   |\n+LL | impl const S {}\n+   | ^^^^^^^^^^^^^^^\n+\n+error: const trait impls are not yet implemented\n+  --> $DIR/inherent-impl.rs:13:1\n    |\n-   = help: only a trait impl can be `const`\n+LL | impl const T {}\n+   | ^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to 4 previous errors\n "}]}