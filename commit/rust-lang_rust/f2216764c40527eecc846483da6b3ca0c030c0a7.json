{"sha": "f2216764c40527eecc846483da6b3ca0c030c0a7", "node_id": "C_kwDOAAsO6NoAKGYyMjE2NzY0YzQwNTI3ZWVjYzg0NjQ4M2RhNmIzY2EwYzAzMGMwYTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-07T11:00:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-07T11:00:29Z"}, "message": "Auto merge of #12186 - Veykril:completion-rev, r=Veykril\n\nminor: Move inferred type completions", "tree": {"sha": "92040b61e005d0d6a57d9b63c111895b24dfbd53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92040b61e005d0d6a57d9b63c111895b24dfbd53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2216764c40527eecc846483da6b3ca0c030c0a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2216764c40527eecc846483da6b3ca0c030c0a7", "html_url": "https://github.com/rust-lang/rust/commit/f2216764c40527eecc846483da6b3ca0c030c0a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2216764c40527eecc846483da6b3ca0c030c0a7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6e4efc3bc87f9259e011a5a6091b86a24ed41c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6e4efc3bc87f9259e011a5a6091b86a24ed41c", "html_url": "https://github.com/rust-lang/rust/commit/6f6e4efc3bc87f9259e011a5a6091b86a24ed41c"}, {"sha": "1dc83f5a90248c53fca38eaee7392a5485a375a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc83f5a90248c53fca38eaee7392a5485a375a3", "html_url": "https://github.com/rust-lang/rust/commit/1dc83f5a90248c53fca38eaee7392a5485a375a3"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "931b92dec3f6bc564b610d1c21a0d6dc35716ced", "filename": "crates/ide-completion/src/completions.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions.rs?ref=f2216764c40527eecc846483da6b3ca0c030c0a7", "patch": "@@ -22,21 +22,19 @@ pub(crate) mod vis;\n \n use std::iter;\n \n-use hir::{db::HirDatabase, known, HirDisplay, ScopeDef};\n+use hir::{db::HirDatabase, known, ScopeDef};\n use ide_db::SymbolKind;\n \n use crate::{\n     context::Visible,\n     item::Builder,\n-    patterns::{ImmediateLocation, TypeAnnotation},\n     render::{\n         const_::render_const,\n         function::{render_fn, render_method},\n         literal::{render_struct_literal, render_variant_lit},\n         macro_::render_macro,\n         pattern::{render_struct_pat, render_variant_pat},\n         render_field, render_resolution, render_resolution_simple, render_tuple_field,\n-        render_type_inference,\n         type_alias::{render_type_alias, render_type_alias_with_eq},\n         union_literal::render_union_literal,\n         RenderContext,\n@@ -401,19 +399,3 @@ fn enum_variants_with_paths(\n         }\n     }\n }\n-\n-pub(crate) fn inferred_type(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n-    use TypeAnnotation::*;\n-    let pat = match &ctx.completion_location {\n-        Some(ImmediateLocation::TypeAnnotation(t)) => t,\n-        _ => return None,\n-    };\n-    let x = match pat {\n-        Let(pat) | FnParam(pat) => ctx.sema.type_of_pat(pat.as_ref()?),\n-        Const(exp) | RetType(exp) => ctx.sema.type_of_expr(exp.as_ref()?),\n-    }?\n-    .adjusted();\n-    let ty_string = x.display_source_code(ctx.db, ctx.module.into()).ok()?;\n-    acc.add(render_type_inference(ty_string, ctx));\n-    None\n-}"}, {"sha": "a8d71fd86884961018456f2c2768e9a191e87418", "filename": "crates/ide-completion/src/completions/type.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ftype.rs?ref=f2216764c40527eecc846483da6b3ca0c030c0a7", "patch": "@@ -1,12 +1,13 @@\n //! Completion of names from the current scope in type position.\n \n-use hir::ScopeDef;\n+use hir::{HirDisplay, ScopeDef};\n use ide_db::FxHashSet;\n use syntax::{ast, AstNode};\n \n use crate::{\n     context::{PathCompletionCtx, PathKind, PathQualifierCtx},\n-    patterns::ImmediateLocation,\n+    patterns::{ImmediateLocation, TypeAnnotation},\n+    render::render_type_inference,\n     CompletionContext, Completions,\n };\n \n@@ -184,6 +185,22 @@ pub(crate) fn complete_type_path(acc: &mut Completions, ctx: &CompletionContext)\n     }\n }\n \n+pub(crate) fn complete_inferred_type(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n+    use TypeAnnotation::*;\n+    let pat = match &ctx.completion_location {\n+        Some(ImmediateLocation::TypeAnnotation(t)) => t,\n+        _ => return None,\n+    };\n+    let x = match pat {\n+        Let(pat) | FnParam(pat) => ctx.sema.type_of_pat(pat.as_ref()?),\n+        Const(exp) | RetType(exp) => ctx.sema.type_of_expr(exp.as_ref()?),\n+    }?\n+    .adjusted();\n+    let ty_string = x.display_source_code(ctx.db, ctx.module.into()).ok()?;\n+    acc.add(render_type_inference(ty_string, ctx));\n+    None\n+}\n+\n fn add_assoc_item(acc: &mut Completions, ctx: &CompletionContext, item: hir::AssocItem) {\n     match item {\n         hir::AssocItem::Const(ct) if ctx.expects_generic_arg() => acc.add_const(ctx, ct),"}, {"sha": "6e5c2a9386f72001714ce195944d895364028aec", "filename": "crates/ide-completion/src/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fitem.rs?ref=f2216764c40527eecc846483da6b3ca0c030c0a7", "patch": "@@ -149,7 +149,7 @@ pub struct CompletionRelevance {\n     pub is_private_editable: bool,\n     /// Set for postfix snippet item completions\n     pub postfix_match: Option<CompletionRelevancePostfixMatch>,\n-    /// This is setted for type inference results\n+    /// This is set for type inference results\n     pub is_definite: bool,\n }\n "}, {"sha": "6695fcdc1928c3a3cffa20e8896297c6509d8cca", "filename": "crates/ide-completion/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2216764c40527eecc846483da6b3ca0c030c0a7/crates%2Fide-completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Flib.rs?ref=f2216764c40527eecc846483da6b3ca0c030c0a7", "patch": "@@ -159,7 +159,6 @@ pub fn completions(\n         completions::fn_param::complete_fn_param(acc, ctx);\n         completions::format_string::format_string(acc, ctx);\n         completions::item_list::complete_item_list(acc, ctx);\n-        completions::inferred_type(acc, ctx);\n         completions::keyword::complete_expr_keyword(acc, ctx);\n         completions::lifetime::complete_label(acc, ctx);\n         completions::lifetime::complete_lifetime(acc, ctx);\n@@ -172,6 +171,7 @@ pub fn completions(\n         completions::snippet::complete_item_snippet(acc, ctx);\n         completions::trait_impl::complete_trait_impl(acc, ctx);\n         completions::r#type::complete_type_path(acc, ctx);\n+        completions::r#type::complete_inferred_type(acc, ctx);\n         completions::use_::complete_use_tree(acc, ctx);\n         completions::vis::complete_vis(acc, ctx);\n     }"}]}