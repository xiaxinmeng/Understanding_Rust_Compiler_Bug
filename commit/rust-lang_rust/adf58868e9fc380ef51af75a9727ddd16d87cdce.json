{"sha": "adf58868e9fc380ef51af75a9727ddd16d87cdce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZjU4ODY4ZTlmYzM4MGVmNTFhZjc1YTk3MjdkZGQxNmQ4N2NkY2U=", "commit": {"author": {"name": "James Wang", "email": "jameswang9909@hotmail.com", "date": "2019-10-14T19:23:24Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-15T07:58:12Z"}, "message": "Change terminology from static to associated", "tree": {"sha": "3a6db731f92fc6f71c69e5413f3b4e846c0c430d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a6db731f92fc6f71c69e5413f3b4e846c0c430d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adf58868e9fc380ef51af75a9727ddd16d87cdce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl2lfBQACgkQaTCGhp1Q\nZjfOLQ/+Mt2PeKAOby/kffPCvJ1PzcNZypRNbnqMCXy7SeED4gVa5d821uwMFFNK\nRYvWqhXZtf1yGHgT0lYJUyta7ObXs5NP+Xys/xa09NhFPpcRNd9zO2ajCA47kKkD\nOM17iiu4tOyqiBBMGGWFDX8rPmHVBNjnf12kwG+GL57k7hVGe8T4q+HUTMEWuBoR\n7DO8HJKceRKiMMJVK/Pej8IiS0Reexf1h8BXC2oYu+rMgcvRqJXfDUcdrCburVB6\nnxnU6yoS4fd2vGItyD+xSqayJwjyx2peNYws6gv+JggjjNul3Vyadfsjy29oI+27\njCaFVG3+hMOghiMAY/STmDxXoTex2xxamP5kotTN6HjUX3ql0sDEoNqbRcfIB7P+\nNJFxSh7eIdHRTlgjGLPPiZtytF1gnKPBB6PXNN8hd5MkHIWBWRpKtj86U3zuqLrD\n3M60fXUpzuvZi+uHKIt4Waho9wfUQ32jgvT8g4tjvWB2K0nwPmUcNTyDkSjBJF0T\nTQ6qrXsHND/zmmKAI3nDE57xCT9DaIgmE4jV3Zbpk1XYSVK1SBRYOBrUdairzrtg\nETZk1tO0lZZmwbEYZ0YX2MrKl938RPXYfgOqjYtHS/1GrPIUgZEdQJtkUwmhqgdC\njMxjdv38X7EmRoBMDZBs27eEfTsurQ+YxOO0+nCvIfIIQd52rC8=\n=+MbW\n-----END PGP SIGNATURE-----", "payload": "tree 3a6db731f92fc6f71c69e5413f3b4e846c0c430d\nparent 8b50599cb423083a603095dd90ce42c64555c6c8\nauthor James Wang <jameswang9909@hotmail.com> 1571081004 -0500\ncommitter flip1995 <hello@philkrones.com> 1571126292 +0200\n\nChange terminology from static to associated\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adf58868e9fc380ef51af75a9727ddd16d87cdce", "html_url": "https://github.com/rust-lang/rust/commit/adf58868e9fc380ef51af75a9727ddd16d87cdce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adf58868e9fc380ef51af75a9727ddd16d87cdce/comments", "author": {"login": "james9909", "id": 9091144, "node_id": "MDQ6VXNlcjkwOTExNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9091144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/james9909", "html_url": "https://github.com/james9909", "followers_url": "https://api.github.com/users/james9909/followers", "following_url": "https://api.github.com/users/james9909/following{/other_user}", "gists_url": "https://api.github.com/users/james9909/gists{/gist_id}", "starred_url": "https://api.github.com/users/james9909/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/james9909/subscriptions", "organizations_url": "https://api.github.com/users/james9909/orgs", "repos_url": "https://api.github.com/users/james9909/repos", "events_url": "https://api.github.com/users/james9909/events{/privacy}", "received_events_url": "https://api.github.com/users/james9909/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b50599cb423083a603095dd90ce42c64555c6c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b50599cb423083a603095dd90ce42c64555c6c8", "html_url": "https://github.com/rust-lang/rust/commit/8b50599cb423083a603095dd90ce42c64555c6c8"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "06b11b6c38c14c3116c6604fbff934f06a21f8db", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/adf58868e9fc380ef51af75a9727ddd16d87cdce/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adf58868e9fc380ef51af75a9727ddd16d87cdce/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=adf58868e9fc380ef51af75a9727ddd16d87cdce", "patch": "@@ -10,7 +10,7 @@ use crate::utils::span_help_and_lint;\n declare_clippy_lint! {\n     /// **What it does:** Checks methods that contain a `self` argument but don't use it\n     ///\n-    /// **Why is this bad?** It may be clearer to define the method as a static function instead\n+    /// **Why is this bad?** It may be clearer to define the method as an associated function instead\n     /// of an instance method if it doesn't require `self`.\n     ///\n     /// **Known problems:** None.\n@@ -68,7 +68,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedSelf {\n                                 UNUSED_SELF,\n                                 self_param.span,\n                                 \"unused `self` argument\",\n-                                \"consider refactoring to a static method or function\",\n+                                \"consider refactoring to a associated function\",\n                             )\n                         }\n                     }"}, {"sha": "0534b40eabb75ebb2de8465990b82f185f89c97e", "filename": "tests/ui/unused_self.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/adf58868e9fc380ef51af75a9727ddd16d87cdce/tests%2Fui%2Funused_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adf58868e9fc380ef51af75a9727ddd16d87cdce/tests%2Fui%2Funused_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_self.stderr?ref=adf58868e9fc380ef51af75a9727ddd16d87cdce", "patch": "@@ -5,71 +5,71 @@ LL |         fn unused_self_move(self) {}\n    |                             ^^^^\n    |\n    = note: `-D clippy::unused-self` implied by `-D warnings`\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:12:28\n    |\n LL |         fn unused_self_ref(&self) {}\n    |                            ^^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:13:32\n    |\n LL |         fn unused_self_mut_ref(&mut self) {}\n    |                                ^^^^^^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:14:32\n    |\n LL |         fn unused_self_pin_ref(self: Pin<&Self>) {}\n    |                                ^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:15:36\n    |\n LL |         fn unused_self_pin_mut_ref(self: Pin<&mut Self>) {}\n    |                                    ^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:16:35\n    |\n LL |         fn unused_self_pin_nested(self: Pin<Arc<Self>>) {}\n    |                                   ^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:17:28\n    |\n LL |         fn unused_self_box(self: Box<Self>) {}\n    |                            ^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:18:40\n    |\n LL |         fn unused_with_other_used_args(&self, x: u8, y: u8) -> u8 {\n    |                                        ^^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: unused `self` argument\n   --> $DIR/unused_self.rs:21:37\n    |\n LL |         fn unused_self_class_method(&self) {\n    |                                     ^^^^^\n    |\n-   = help: consider refactoring to a static method or function\n+   = help: consider refactoring to a associated function\n \n error: aborting due to 9 previous errors\n "}]}