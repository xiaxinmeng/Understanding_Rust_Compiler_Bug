{"sha": "15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1Yjk2MmE5YjllZTFjYjQzNGJjNGEzNWRlYTg0ZjI1ZmZlN2I1Yjc=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-03-15T22:45:26Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-03-15T22:45:26Z"}, "message": "libstd: Fix a typo. s/target_os/target_arch/", "tree": {"sha": "986774ecbb907ca3c88132025e4a018e60356514", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/986774ecbb907ca3c88132025e4a018e60356514"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7", "html_url": "https://github.com/rust-lang/rust/commit/15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "352c5e7eb767401e426e526acf5c8fe0311d8c30", "url": "https://api.github.com/repos/rust-lang/rust/commits/352c5e7eb767401e426e526acf5c8fe0311d8c30", "html_url": "https://github.com/rust-lang/rust/commit/352c5e7eb767401e426e526acf5c8fe0311d8c30"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2528a22be9a003e5a5a66c75b5ec688cef4ef8c5", "filename": "src/libstd/rt/libunwind.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7/src%2Flibstd%2Frt%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7/src%2Flibstd%2Frt%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flibunwind.rs?ref=15b962a9b9ee1cb434bc4a35dea84f25ffe7b5b7", "patch": "@@ -120,7 +120,7 @@ extern \"C\" {\n // of the macro. This is all copy/pasted directly from the header file with the\n // definition of _Unwind_GetIP.\n #[cfg(target_os = \"android\")]\n-#[cfg(target_os = \"linux\", target_os = \"arm\")]\n+#[cfg(target_os = \"linux\", target_arch = \"arm\")]\n pub unsafe fn _Unwind_GetIP(ctx: *_Unwind_Context) -> libc::uintptr_t {\n     #[repr(C)]\n     enum _Unwind_VRS_Result {\n@@ -162,9 +162,9 @@ pub unsafe fn _Unwind_GetIP(ctx: *_Unwind_Context) -> libc::uintptr_t {\n     (val & !1) as libc::uintptr_t\n }\n \n-// This function also doesn't exist on android, so make it a no-op\n+// This function also doesn't exist on android or arm/linux, so make it a no-op\n #[cfg(target_os = \"android\")]\n-#[cfg(target_os = \"linux\", target_os = \"arm\")]\n-pub unsafe fn _Unwind_FindEnclosingFunction(pc: *libc::c_void) -> *libc::c_void{\n+#[cfg(target_os = \"linux\", target_arch = \"arm\")]\n+pub unsafe fn _Unwind_FindEnclosingFunction(pc: *libc::c_void) -> *libc::c_void {\n     pc\n }"}]}