{"sha": "a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZGU2ZTIyODU4YTAyY2ZjZjZiZmMxOGZmNDBlYmIxNjNlYmIwN2M=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-02-04T23:10:28Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-02-04T23:10:28Z"}, "message": "Fix TryFrom for i128/u128\n\nAnother case of `as` cast silent truncation being error prone.\n\nThis also adds a few missing TryFrom tests to libcoretest.", "tree": {"sha": "98e6bf845d7a6a22a17800285127164930f180b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98e6bf845d7a6a22a17800285127164930f180b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c", "html_url": "https://github.com/rust-lang/rust/commit/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb5cb9545cfa4f1e90c92266b802edc4690f584a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5cb9545cfa4f1e90c92266b802edc4690f584a", "html_url": "https://github.com/rust-lang/rust/commit/eb5cb9545cfa4f1e90c92266b802edc4690f584a"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "97ea6bb347b54adcecb766ba32169583baccf75e", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c", "patch": "@@ -2626,8 +2626,8 @@ macro_rules! cross_sign_from_int_impl {\n             type Err = TryFromIntError;\n \n             fn try_from(u: $unsigned) -> Result<$signed, TryFromIntError> {\n-                let max = <$signed as FromStrRadixHelper>::max_value() as u64;\n-                if u as u64 > max {\n+                let max = <$signed as FromStrRadixHelper>::max_value() as u128;\n+                if u as u128 > max {\n                     Err(TryFromIntError(()))\n                 } else {\n                     Ok(u as $signed)\n@@ -2640,8 +2640,8 @@ macro_rules! cross_sign_from_int_impl {\n             type Err = TryFromIntError;\n \n             fn try_from(u: $signed) -> Result<$unsigned, TryFromIntError> {\n-                let max = <$unsigned as FromStrRadixHelper>::max_value() as u64;\n-                if u < 0 || u as u64 > max {\n+                let max = <$unsigned as FromStrRadixHelper>::max_value() as u128;\n+                if u < 0 || u as u128 > max {\n                     Err(TryFromIntError(()))\n                 } else {\n                     Ok(u as $unsigned)"}, {"sha": "51737c9c3b485e42b74b47e3671ee5eecc53a90d", "filename": "src/libcoretest/num/mod.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c/src%2Flibcoretest%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c/src%2Flibcoretest%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fmod.rs?ref=a2de6e22858a02cfcf6bfc18ff40ebb163ebb07c", "patch": "@@ -366,3 +366,35 @@ test_impl_try_from_same_sign_err! { test_try_i32i16, i32, i16 }\n test_impl_try_from_same_sign_err! { test_try_i64i8, i64, i8 }\n test_impl_try_from_same_sign_err! { test_try_i64i16, i64, i16 }\n test_impl_try_from_same_sign_err! { test_try_i64i32, i64, i32 }\n+\n+macro_rules! test_impl_try_from_signed_to_unsigned_err {\n+    ($fn_name:ident, $source:ty, $target:ty) => {\n+        #[test]\n+        fn $fn_name() {\n+            let max = <$source>::max_value();\n+            let min = <$source>::min_value();\n+            let zero: $source = 0;\n+            let t_max = <$target>::max_value();\n+            let t_min = <$target>::min_value();\n+            assert!(<$target as TryFrom<$source>>::try_from(max).is_err());\n+            assert!(<$target as TryFrom<$source>>::try_from(min).is_err());\n+            assert_eq!(<$target as TryFrom<$source>>::try_from(zero).unwrap(),\n+                       zero as $target);\n+            assert_eq!(<$target as TryFrom<$source>>::try_from(t_max as $source)\n+                            .unwrap(),\n+                       t_max as $target);\n+            assert_eq!(<$target as TryFrom<$source>>::try_from(t_min as $source)\n+                            .unwrap(),\n+                       t_min as $target);\n+        }\n+    }\n+}\n+\n+test_impl_try_from_signed_to_unsigned_err! { test_try_i16u8, i16, u8 }\n+\n+test_impl_try_from_signed_to_unsigned_err! { test_try_i32u8, i32, u8 }\n+test_impl_try_from_signed_to_unsigned_err! { test_try_i32u16, i32, u16 }\n+\n+test_impl_try_from_signed_to_unsigned_err! { test_try_i64u8, i64, u8 }\n+test_impl_try_from_signed_to_unsigned_err! { test_try_i64u16, i64, u16 }\n+test_impl_try_from_signed_to_unsigned_err! { test_try_i64u32, i64, u32 }"}]}