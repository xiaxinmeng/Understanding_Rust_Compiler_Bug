{"sha": "687cc989ca85f61f6244cabd281d91af2958bdf6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4N2NjOTg5Y2E4NWY2MWY2MjQ0Y2FiZDI4MWQ5MWFmMjk1OGJkZjY=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-08-14T20:18:18Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-08-14T20:18:18Z"}, "message": "add individual docs to `core::num::NonZero*`", "tree": {"sha": "2321283adffbc7a387ce740579d6628e1c61e28e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2321283adffbc7a387ce740579d6628e1c61e28e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/687cc989ca85f61f6244cabd281d91af2958bdf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/687cc989ca85f61f6244cabd281d91af2958bdf6", "html_url": "https://github.com/rust-lang/rust/commit/687cc989ca85f61f6244cabd281d91af2958bdf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/687cc989ca85f61f6244cabd281d91af2958bdf6/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bb923988f949639f11dba0c1ab1980fe8dfec3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb923988f949639f11dba0c1ab1980fe8dfec3d", "html_url": "https://github.com/rust-lang/rust/commit/5bb923988f949639f11dba0c1ab1980fe8dfec3d"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "8b973687c3744ed8a21f305a9238a93e52732115", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/687cc989ca85f61f6244cabd281d91af2958bdf6/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/687cc989ca85f61f6244cabd281d91af2958bdf6/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=687cc989ca85f61f6244cabd281d91af2958bdf6", "patch": "@@ -34,22 +34,32 @@ macro_rules! impl_nonzero_fmt {\n     }\n }\n \n+macro_rules! doc_comment {\n+    ($x:expr, $($tt:tt)*) => {\n+        #[doc = $x]\n+        $($tt)*\n+    };\n+}\n+\n macro_rules! nonzero_integers {\n     ( $( $Ty: ident($Int: ty); )+ ) => {\n         $(\n-            /// An integer that is known not to equal zero.\n-            ///\n-            /// This enables some memory layout optimization.\n-            /// For example, `Option<NonZeroU32>` is the same size as `u32`:\n-            ///\n-            /// ```rust\n-            /// use std::mem::size_of;\n-            /// assert_eq!(size_of::<Option<std::num::NonZeroU32>>(), size_of::<u32>());\n-            /// ```\n-            #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n-            #[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]\n-            #[repr(transparent)]\n-            pub struct $Ty(NonZero<$Int>);\n+            doc_comment! {\n+                concat!(\"An integer that is known not to equal zero.\n+\n+This enables some memory layout optimization.\n+For example, `Option<\", stringify!($Ty), \">` is the same size as `\", stringify!($Int), \"`:\n+\n+```rust\n+use std::mem::size_of;\n+assert_eq!(size_of::<Option<std::num::\", stringify!($Ty), \">>(), size_of::<\", stringify!($Int),\n+\">());\n+```\"),\n+                #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n+                #[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]\n+                #[repr(transparent)]\n+                pub struct $Ty(NonZero<$Int>);\n+            }\n \n             impl $Ty {\n                 /// Create a non-zero without checking the value.\n@@ -176,13 +186,6 @@ pub mod dec2flt;\n pub mod bignum;\n pub mod diy_float;\n \n-macro_rules! doc_comment {\n-    ($x:expr, $($tt:tt)*) => {\n-        #[doc = $x]\n-        $($tt)*\n-    };\n-}\n-\n mod wrapping;\n \n // `Int` + `SignedInt` implemented for signed integers"}]}