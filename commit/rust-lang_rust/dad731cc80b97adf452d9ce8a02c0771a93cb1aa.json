{"sha": "dad731cc80b97adf452d9ce8a02c0771a93cb1aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZDczMWNjODBiOTdhZGY0NTJkOWNlOGEwMmMwNzcxYTkzY2IxYWE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-09T16:16:19Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-09T16:27:16Z"}, "message": "Rollup merge of #44962 - shepmaster:no-ignore-result, r=steveklabnik\n\nDon't encourage people to ignore threading errors in the docs", "tree": {"sha": "2e29f072c7297f6e66cfb6840ef43c648c5666c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e29f072c7297f6e66cfb6840ef43c648c5666c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dad731cc80b97adf452d9ce8a02c0771a93cb1aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlnbo2QACgkQ/vbIBR0O\nATz2zxAAqqWJbGIQWHarA7neeCtjfJ72h7+gtImjpl+9x16tQBbb/tuAJmbrrD40\nIsl7iVxbNDKejvYPCSlxvko8bgGiZRpmoatnq/p5FdQdzGIzvogexEioRa3G3Af0\nWBMp9S2GawN+hVlLi68QnXU89ZbVSLsalJYDxzkpmgQGUa6jEKoz3Brp3ABaUUnp\nM/R0NjsrvRsAZCAWh7Oq5csTU0lP4TTUnpBKXL1rhjswVdQuohB71upAQb76XBJS\nM4N1M+fgJDCv6ty94bkQWNhSJECaO/0Fqr5sryPdr9RKIvQafZt+h2KSWKukqSc3\nnlU4ja78yV823EjEer52McM2OHHkY7ABY1vPqJ90lNpJc82/Gk/A7U+abX2Hh6lC\nO5bOnLWh1RtqrDeVgEagnwhpja/r4vvC6gD7jOo5AUNOZtsx0bDvIX7Z+alDdF8n\nBxOFnbPOeztkYpvIeUWGSubAeD3K2wJMaMltJf3HFQ4eRzXg1yQaHvzQ5gLeh1s8\ny32WDgNxMoyy9Vz0fdxiIxZHh9cP0AG9BGOmBE02uXz90JqmCP/LVGjFYA+fZ+8X\ncSbrhitHGRDp3ywPrPwlmUyW8ByBv5LTcybUFWA8O6EuRTjisT4evExsGr0uMciU\n9cKpWtFASv+yORJIhwHv0UbBGjNu7pdtLLwonpPRjH2ebTs4i/Q=\n=XTBa\n-----END PGP SIGNATURE-----", "payload": "tree 2e29f072c7297f6e66cfb6840ef43c648c5666c0\nparent d7acd29ad5a49f6123185502d8ca92822c477f55\nparent b5b7666120658e332c1ea26e8bb3944aefde31ca\nauthor kennytm <kennytm@gmail.com> 1507565779 +0800\ncommitter kennytm <kennytm@gmail.com> 1507566436 +0800\n\nRollup merge of #44962 - shepmaster:no-ignore-result, r=steveklabnik\n\nDon't encourage people to ignore threading errors in the docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dad731cc80b97adf452d9ce8a02c0771a93cb1aa", "html_url": "https://github.com/rust-lang/rust/commit/dad731cc80b97adf452d9ce8a02c0771a93cb1aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dad731cc80b97adf452d9ce8a02c0771a93cb1aa/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7acd29ad5a49f6123185502d8ca92822c477f55", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7acd29ad5a49f6123185502d8ca92822c477f55", "html_url": "https://github.com/rust-lang/rust/commit/d7acd29ad5a49f6123185502d8ca92822c477f55"}, {"sha": "b5b7666120658e332c1ea26e8bb3944aefde31ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5b7666120658e332c1ea26e8bb3944aefde31ca", "html_url": "https://github.com/rust-lang/rust/commit/b5b7666120658e332c1ea26e8bb3944aefde31ca"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "07bbddc62b9f9f5e07cad2d1e8c158878cfc8a71", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dad731cc80b97adf452d9ce8a02c0771a93cb1aa/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad731cc80b97adf452d9ce8a02c0771a93cb1aa/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=dad731cc80b97adf452d9ce8a02c0771a93cb1aa", "patch": "@@ -485,15 +485,17 @@ impl Builder {\n /// let (tx, rx) = channel();\n ///\n /// let sender = thread::spawn(move || {\n-///     let _ = tx.send(\"Hello, thread\".to_owned());\n+///     tx.send(\"Hello, thread\".to_owned())\n+///         .expect(\"Unable to send on channel\");\n /// });\n ///\n /// let receiver = thread::spawn(move || {\n-///     println!(\"{}\", rx.recv().unwrap());\n+///     let value = rx.recv().expect(\"Unable to receive from channel\");\n+///     println!(\"{}\", value);\n /// });\n ///\n-/// let _ = sender.join();\n-/// let _ = receiver.join();\n+/// sender.join().expect(\"The sender thread has panicked\");\n+/// receiver.join().expect(\"The receiver thread has panicked\");\n /// ```\n ///\n /// A thread can also return a value through its [`JoinHandle`], you can use\n@@ -1192,7 +1194,7 @@ impl<T> JoinInner<T> {\n ///     });\n /// });\n ///\n-/// let _ = original_thread.join();\n+/// original_thread.join().expect(\"The thread being joined has panicked\");\n /// println!(\"Original thread is joined.\");\n ///\n /// // We make sure that the new thread has time to run, before the main"}]}