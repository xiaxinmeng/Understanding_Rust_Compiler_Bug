{"sha": "5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhY2M4ZTVhNTFlOTdhNmFiNWYwYWFjZWVkZWZjZjhjZDEwYTBjMWI=", "commit": {"author": {"name": "Ralph Bodenner", "email": "rkbodenner+github@gmail.com", "date": "2013-06-17T07:07:52Z"}, "committer": {"name": "Ralph Bodenner", "email": "rkbodenner+github@gmail.com", "date": "2013-06-17T07:07:52Z"}, "message": "Reproduce text changes from @brson PR 7176 and fix a typo therein", "tree": {"sha": "877b4fb88888eec9d2980768daaabccad6771e27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/877b4fb88888eec9d2980768daaabccad6771e27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b", "html_url": "https://github.com/rust-lang/rust/commit/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b/comments", "author": {"login": "rkbodenner", "id": 97996, "node_id": "MDQ6VXNlcjk3OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/97996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkbodenner", "html_url": "https://github.com/rkbodenner", "followers_url": "https://api.github.com/users/rkbodenner/followers", "following_url": "https://api.github.com/users/rkbodenner/following{/other_user}", "gists_url": "https://api.github.com/users/rkbodenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkbodenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkbodenner/subscriptions", "organizations_url": "https://api.github.com/users/rkbodenner/orgs", "repos_url": "https://api.github.com/users/rkbodenner/repos", "events_url": "https://api.github.com/users/rkbodenner/events{/privacy}", "received_events_url": "https://api.github.com/users/rkbodenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rkbodenner", "id": 97996, "node_id": "MDQ6VXNlcjk3OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/97996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkbodenner", "html_url": "https://github.com/rkbodenner", "followers_url": "https://api.github.com/users/rkbodenner/followers", "following_url": "https://api.github.com/users/rkbodenner/following{/other_user}", "gists_url": "https://api.github.com/users/rkbodenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkbodenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkbodenner/subscriptions", "organizations_url": "https://api.github.com/users/rkbodenner/orgs", "repos_url": "https://api.github.com/users/rkbodenner/repos", "events_url": "https://api.github.com/users/rkbodenner/events{/privacy}", "received_events_url": "https://api.github.com/users/rkbodenner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "819d07af7f73af36a2bef102b92e5a8701122312", "url": "https://api.github.com/repos/rust-lang/rust/commits/819d07af7f73af36a2bef102b92e5a8701122312", "html_url": "https://github.com/rust-lang/rust/commit/819d07af7f73af36a2bef102b92e5a8701122312"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "96c53266c6f174d2c5cec93994c6ffd9ecb76b21", "filename": "src/libextra/std.rc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b/src%2Flibextra%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b/src%2Flibextra%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstd.rc?ref=5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b", "patch": "@@ -10,10 +10,13 @@\n \n /*!\n \n-The Rust \"extras\" library.\n+Rust extras.\n \n-The Rust extras library (`extra`) provides a number of useful features that\n-are not required in or otherwise suitable for the standard library (`std`).\n+The `extra` crate is a set of useful modules for a variety of\n+purposes, including collections, numerics, I/O, serialization,\n+and concurrency.\n+\n+Rust extras are part of the standard Rust distribution.\n \n */\n \n@@ -22,7 +25,7 @@ are not required in or otherwise suitable for the standard library (`std`).\n        uuid = \"122bed0b-c19b-4b82-b0b7-7ae8aead7297\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/libextra\")];\n \n-#[comment = \"The Rust extras library\"];\n+#[comment = \"Rust extras\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n "}, {"sha": "f37f65c1edcde2e8fbe54700f2c89da9cad2f1bc", "filename": "src/libstd/core.rc", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b/src%2Flibstd%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b/src%2Flibstd%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcore.rc?ref=5acc8e5a51e97a6ab5f0aaceedefcf8cd10a0c1b", "patch": "@@ -12,19 +12,20 @@\n \n # The Rust standard library\n \n-The Rust standard library provides runtime features required by the language,\n-including the task scheduler and memory allocators, as well as library\n-support for Rust built-in types, platform abstractions, and other commonly\n-used features.\n-\n-`std` includes modules corresponding to each of the integer types, each of\n-the floating point types, the `bool` type, tuples, characters, strings\n-(`str`), vectors (`vec`), managed boxes (`managed`), owned boxes (`owned`),\n-and unsafe and borrowed pointers (`ptr`).  Additionally, `std` provides\n-pervasive types (`option` and `result`), task creation and communication\n-primitives (`task`, `comm`), platform abstractions (`os` and `path`), basic\n-I/O abstractions (`io`), common traits (`kinds`, `ops`, `cmp`, `num`,\n-`to_str`), and complete bindings to the C standard library (`libc`).\n+The Rust standard library is a group of interrelated modules defining\n+the core language traits, operations on built-in data types, collections,\n+platform abstractions, the task scheduler, runtime support for language\n+features and other common functionality.\n+\n+`std` includes modules corresponding to each of the integer types,\n+each of the floating point types, the `bool` type, tuples, characters,\n+strings (`str`), vectors (`vec`), managed boxes (`managed`), owned\n+boxes (`owned`), and unsafe and borrowed pointers (`ptr`, `borrowed`).\n+Additionally, `std` provides pervasive types (`option` and `result`),\n+task creation and communication primitives (`task`, `comm`), platform\n+abstractions (`os` and `path`), basic I/O abstractions (`io`), common\n+traits (`kinds`, `ops`, `cmp`, `num`, `to_str`), and complete bindings\n+to the C standard library (`libc`).\n \n # Standard library injection and the Rust prelude\n \n@@ -38,7 +39,7 @@ with the `std::` path prefix, as in `use std::vec`, `use std::task::spawn`,\n etc.\n \n Additionally, `std` contains a `prelude` module that reexports many of the\n-most common `std` modules, types and traits. The contents of the prelude are\n+most common types, traits and functions. The contents of the prelude are\n imported into every *module* by default.  Implicitly, all modules behave as if\n they contained the following prologue:\n "}]}