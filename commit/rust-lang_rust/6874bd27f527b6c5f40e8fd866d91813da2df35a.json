{"sha": "6874bd27f527b6c5f40e8fd866d91813da2df35a", "node_id": "C_kwDOAAsO6NoAKDY4NzRiZDI3ZjUyN2I2YzVmNDBlOGZkODY2ZDkxODEzZGEyZGYzNWE", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-01T19:40:48Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-27T02:50:04Z"}, "message": "Provide suggestion for missing `>` in a type parameter list\n\nWhen encountering an inproperly terminated type parameter list, provide\na suggestion to close it after the last non-constraint type parameter\nthat was successfully parsed.\n\nFix #94058.", "tree": {"sha": "53b50c5b05c6d6fe279ace2f35b583b532d33bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53b50c5b05c6d6fe279ace2f35b583b532d33bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6874bd27f527b6c5f40e8fd866d91813da2df35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6874bd27f527b6c5f40e8fd866d91813da2df35a", "html_url": "https://github.com/rust-lang/rust/commit/6874bd27f527b6c5f40e8fd866d91813da2df35a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6874bd27f527b6c5f40e8fd866d91813da2df35a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe3b89cd57229343eeca753fdd8c63d9b03c65c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe3b89cd57229343eeca753fdd8c63d9b03c65c", "html_url": "https://github.com/rust-lang/rust/commit/3fe3b89cd57229343eeca753fdd8c63d9b03c65c"}], "stats": {"total": 185, "additions": 175, "deletions": 10}, "files": [{"sha": "596099bf2de547e3713c6c14153c47c4d6589923", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -272,7 +272,23 @@ impl<'a> Parser<'a> {\n                         lo,\n                         ty_generics,\n                     )?;\n-                    self.expect_gt()?;\n+                    self.expect_gt().map_err(|mut err| {\n+                        // Attempt to find places where a missing `>` might belong.\n+                        if let Some(arg) = args\n+                            .iter()\n+                            .rev()\n+                            .skip_while(|arg| matches!(arg, AngleBracketedArg::Constraint(_)))\n+                            .next()\n+                        {\n+                            err.span_suggestion_verbose(\n+                                arg.span().shrink_to_hi(),\n+                                \"you might have meant to end the type parameters here\",\n+                                \">\".to_string(),\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        }\n+                        err\n+                    })?;\n                     let span = lo.to(self.prev_token.span);\n                     AngleBracketedArgs { args, span }.into()\n                 } else {"}, {"sha": "272afc10b17b54659809cc42c53f8665b78b819f", "filename": "src/test/ui/generic-associated-types/parse/trait-path-expressions.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -13,6 +13,11 @@ LL |   fn f2<'a>(arg : Box<dyn X< { 1 } = 32 >>) {}\n    |                                  - ^ expected one of `,`, `:`, or `>`\n    |                                  |\n    |                                  maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   fn f2<'a>(arg : Box<dyn X< { 1 }> = 32 >>) {}\n+   |                                   +\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7394393c05e25602b80858f14f48f0efcf26dcbc", "filename": "src/test/ui/generic-associated-types/parse/trait-path-segments.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -5,6 +5,11 @@ LL |     fn f1<'a>(arg : Box<dyn X<X::Y = u32>>) {}\n    |                                  - ^ expected one of 8 possible tokens\n    |                                  |\n    |                                  maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     fn f1<'a>(arg : Box<dyn X<X::Y> = u32>>) {}\n+   |                                   +\n \n error: expected one of `,`, `::`, `:`, or `>`, found `=`\n   --> $DIR/trait-path-segments.rs:19:35\n@@ -13,6 +18,11 @@ LL |     impl<T : X<<Self as X>::Y<'a> = &'a u32>> Z for T {}\n    |                                 - ^ expected one of `,`, `::`, `:`, or `>`\n    |                                 |\n    |                                 maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     impl<T : X<<Self as X>::Y<'a>> = &'a u32>> Z for T {}\n+   |                                  +\n \n error: expected one of `!`, `+`, `,`, `::`, `:`, or `>`, found `=`\n   --> $DIR/trait-path-segments.rs:30:25\n@@ -21,6 +31,11 @@ LL |     impl<T : X<X::Y<'a> = &'a u32>> Z for T {}\n    |                       - ^ expected one of `!`, `+`, `,`, `::`, `:`, or `>`\n    |                       |\n    |                       maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     impl<T : X<X::Y<'a>> = &'a u32>> Z for T {}\n+   |                        +\n \n error: aborting due to 3 previous errors\n "}, {"sha": "fe9ed579e34afc1458b26d7ac06066be66e43567", "filename": "src/test/ui/generic-associated-types/parse/trait-path-types.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -5,6 +5,11 @@ LL |   fn f<'a>(arg : Box<dyn X< [u8; 1] = u32>>) {}\n    |                                   - ^ expected one of `,`, `:`, or `>`\n    |                                   |\n    |                                   maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   fn f<'a>(arg : Box<dyn X< [u8; 1]> = u32>>) {}\n+   |                                    +\n \n error: expected one of `,`, `:`, or `>`, found `=`\n   --> $DIR/trait-path-types.rs:13:37\n@@ -13,6 +18,11 @@ LL |   fn f1<'a>(arg : Box<dyn X<(Y<'a>) = &'a ()>>) {}\n    |                                   - ^ expected one of `,`, `:`, or `>`\n    |                                   |\n    |                                   maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X<(Y<'a>)> = &'a ()>>) {}\n+   |                                    +\n \n error: expected one of `,`, `:`, or `>`, found `=`\n   --> $DIR/trait-path-types.rs:18:33\n@@ -21,6 +31,11 @@ LL |   fn f1<'a>(arg : Box<dyn X< 'a = u32 >>) {}\n    |                              -- ^ expected one of `,`, `:`, or `>`\n    |                              |\n    |                              maybe try to close unmatched angle bracket\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< 'a> = u32 >>) {}\n+   |                                +\n \n error: aborting due to 3 previous errors\n "}, {"sha": "cd697445faff35c1ceafb29af19a60d2755933cd", "filename": "src/test/ui/issues/issue-34334.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -6,6 +6,11 @@ LL |     let sr: Vec<(u32, _, _) = vec![];\n    |         |                 |\n    |         |                 maybe try to close unmatched angle bracket\n    |         while parsing the type for `sr`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     let sr: Vec<(u32, _, _)> = vec![];\n+   |                            +\n \n error[E0277]: a value of type `Vec<(u32, _, _)>` cannot be built from an iterator over elements of type `()`\n   --> $DIR/issue-34334.rs:5:87"}, {"sha": "13e6aa7d605c773278f1b82da3d0493c43b553a8", "filename": "src/test/ui/parser/issues/issue-20616-2.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-2.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `,`, `:`, `=`, or `>`, found `(`\n    |\n LL | type Type_2 = Type_1_<'static ()>;\n    |                               ^ expected one of `,`, `:`, `=`, or `>`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type Type_2 = Type_1_<'static> ()>;\n+   |                              +\n \n error: aborting due to previous error\n "}, {"sha": "dbff116e505f2799bcb499ba5a1753ec75328ab4", "filename": "src/test/ui/parser/issues/issue-20616-3.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-3.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `>`, a const expression, lifetime, or type, found `,`\n    |\n LL | type Type_3<T> = Box<T,,>;\n    |                        ^ expected one of `>`, a const expression, lifetime, or type\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type Type_3<T> = Box<T>,,>;\n+   |                       +\n \n error: aborting due to previous error\n "}, {"sha": "48a06e00b24dd5f76326286a32b46b448f93fd02", "filename": "src/test/ui/parser/issues/issue-20616-4.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-4.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `>`, a const expression, lifetime, or type, found `,`\n    |\n LL | type Type_4<T> = Type_1_<'static,, T>;\n    |                                  ^ expected one of `>`, a const expression, lifetime, or type\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type Type_4<T> = Type_1_<'static>,, T>;\n+   |                                 +\n \n error: aborting due to previous error\n "}, {"sha": "84bee2ad18425affda22a54ecaa81b0b9b9d51ee", "filename": "src/test/ui/parser/issues/issue-20616-5.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-5.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `>`, a const expression, lifetime, or type, found `,`\n    |\n LL | type Type_5<'a> = Type_1_<'a, (),,>;\n    |                                  ^ expected one of `>`, a const expression, lifetime, or type\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type Type_5<'a> = Type_1_<'a, ()>,,>;\n+   |                                 +\n \n error: aborting due to previous error\n "}, {"sha": "67de41b9747cb0d584726c04a7a89e4ed53f118d", "filename": "src/test/ui/parser/issues/issue-20616-6.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-6.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `>`, a const expression, lifetime, or type, found `,`\n    |\n LL | type Type_6 = Type_5_<'a,,>;\n    |                          ^ expected one of `>`, a const expression, lifetime, or type\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type Type_6 = Type_5_<'a>,,>;\n+   |                         +\n \n error: aborting due to previous error\n "}, {"sha": "3b8e07fa0d05df518b8bfecefe4c279bbf46fcf1", "filename": "src/test/ui/parser/issues/issue-20616-7.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-20616-7.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `>`, a const expression, lifetime, or type, found `,`\n    |\n LL | type Type_7 = Box<(),,>;\n    |                      ^ expected one of `>`, a const expression, lifetime, or type\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type Type_7 = Box<()>,,>;\n+   |                     +\n \n error: aborting due to previous error\n "}, {"sha": "be0b9a524df84bf5dd1adc14e07e2230d0ab7196", "filename": "src/test/ui/parser/issues/issue-62660.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-62660.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-62660.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-62660.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)\n    |\n LL |     pub fn foo(_: i32, self: Box<Self) {}\n    |                                      ^ expected one of 9 possible tokens\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     pub fn foo(_: i32, self: Box<Self>) {}\n+   |                                      +\n \n error: aborting due to previous error\n "}, {"sha": "a2407affeef8d0095d3af9f0f73c19ca887eba58", "filename": "src/test/ui/parser/issues/issue-84117.stderr", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-84117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-84117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-84117.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -2,10 +2,18 @@ error: expected one of `>`, a const expression, lifetime, or type, found `}`\n   --> $DIR/issue-84117.rs:2:67\n    |\n LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n-   |                                         ------------              ^ expected one of `>`, a const expression, lifetime, or type\n-   |                                         |          |\n-   |                                         |          help: use `=` if you meant to assign\n+   |                                         -----------               ^ expected one of `>`, a const expression, lifetime, or type\n+   |                                         |\n    |                                         while parsing the type for `inner_local`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str>, }\n+   |                                                                 +\n+help: use `=` if you meant to assign\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local =e_inner<&str, }\n+   |                                                     ~\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n   --> $DIR/issue-84117.rs:2:65\n@@ -17,21 +25,36 @@ error: expected one of `,`, `:`, `=`, or `>`, found `}`\n   --> $DIR/issue-84117.rs:8:1\n    |\n LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n-   |         ------------ help: use `=` if you meant to assign          - expected one of `,`, `:`, `=`, or `>`\n-   |         |\n-   |         while parsing the type for `outer_local`\n+   |         ----------- while parsing the type for `outer_local`       - expected one of `,`, `:`, `=`, or `>`\n ...\n LL | }\n    | ^ unexpected token\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }>\n+   |                                                                    +\n+help: use `=` if you meant to assign\n+   |\n+LL |     let outer_local =e_outer<&str, { let inner_local:e_inner<&str, }\n+   |                     ~\n \n error: expected one of `>`, a const expression, lifetime, or type, found `}`\n   --> $DIR/issue-84117.rs:2:67\n    |\n LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str, }\n-   |                                         ------------              ^ expected one of `>`, a const expression, lifetime, or type\n-   |                                         |          |\n-   |                                         |          help: use `=` if you meant to assign\n+   |                                         -----------               ^ expected one of `>`, a const expression, lifetime, or type\n+   |                                         |\n    |                                         while parsing the type for `inner_local`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local:e_inner<&str>, }\n+   |                                                                 +\n+help: use `=` if you meant to assign\n+   |\n+LL |     let outer_local:e_outer<&str, { let inner_local =e_inner<&str, }\n+   |                                                     ~\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `,`\n   --> $DIR/issue-84117.rs:2:65"}, {"sha": "948f9655e1e95d4a8a07fe216f1e3b5735774bf3", "filename": "src/test/ui/parser/lifetime-semicolon.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `,`, `:`, `=`, or `>`, found `;`\n    |\n LL | fn foo<'a, 'b>(x: &mut Foo<'a; 'b>) {}\n    |                              ^ expected one of `,`, `:`, `=`, or `>`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | fn foo<'a, 'b>(x: &mut Foo<'a>; 'b>) {}\n+   |                              +\n \n error: aborting due to previous error\n "}, {"sha": "427234e97cf55c2f6f0e7ad2fb5b04cf06764335", "filename": "src/test/ui/parser/missing-closing-angle-bracket-eq-constraint.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-eq-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-eq-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-eq-constraint.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -6,6 +6,11 @@ LL |   let v : Vec<(u32,_) = vec![];\n    |       |             |\n    |       |             maybe try to close unmatched angle bracket\n    |       while parsing the type for `v`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   let v : Vec<(u32,_)> = vec![];\n+   |                      +\n \n error: expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `{`\n   --> $DIR/missing-closing-angle-bracket-eq-constraint.rs:13:32\n@@ -14,6 +19,11 @@ LL |   let foo : Foo::<T1, T2 = Foo {_a : arg1, _b : arg2};\n    |       ---                      ^ expected one of 7 possible tokens\n    |       |\n    |       while parsing the type for `foo`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   let foo : Foo::<T1>, T2 = Foo {_a : arg1, _b : arg2};\n+   |                     +\n \n error: expected one of `,`, `:`, or `>`, found `=`\n   --> $DIR/missing-closing-angle-bracket-eq-constraint.rs:18:18\n@@ -23,6 +33,11 @@ LL |   let v : Vec<'a = vec![];\n    |       |       |\n    |       |       maybe try to close unmatched angle bracket\n    |       while parsing the type for `v`\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |   let v : Vec<'a> = vec![];\n+   |                 +\n \n error[E0282]: type annotations needed for `Vec<T>`\n   --> $DIR/missing-closing-angle-bracket-eq-constraint.rs:7:25"}, {"sha": "d69a56c51d3f4bc81d86d9f8e7cfa266e024c054", "filename": "src/test/ui/parser/missing-closing-angle-bracket-struct-field-ty.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-struct-field-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-struct-field-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-struct-field-ty.rs?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -0,0 +1,11 @@\n+// run-rustifx\n+#![allow(unused)]\n+use std::sync::{Arc, Mutex};\n+\n+pub struct Foo {\n+    a: Mutex<usize>,\n+    b: Arc<Mutex<usize>, //~ HELP you might have meant to end the type parameters here\n+    c: Arc<Mutex<usize>>,\n+} //~ ERROR expected one of\n+\n+fn main() {}"}, {"sha": "46ca1f06be67be0bcf9cfd355e77dd4ee05bc093", "filename": "src/test/ui/parser/missing-closing-angle-bracket-struct-field-ty.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-struct-field-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-struct-field-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing-closing-angle-bracket-struct-field-ty.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -0,0 +1,15 @@\n+error: expected one of `>`, a const expression, lifetime, or type, found `}`\n+  --> $DIR/missing-closing-angle-bracket-struct-field-ty.rs:9:1\n+   |\n+LL |     c: Arc<Mutex<usize>>,\n+   |                          - expected one of `>`, a const expression, lifetime, or type\n+LL | }\n+   | ^ unexpected token\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL |     b: Arc<Mutex<usize>>,\n+   |                        +\n+\n+error: aborting due to previous error\n+"}, {"sha": "e107c6b78b3136a8d9650fa3ec34a34d1ba4caea", "filename": "src/test/ui/parser/removed-syntax-closure-lifetime.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6874bd27f527b6c5f40e8fd866d91813da2df35a/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.stderr?ref=6874bd27f527b6c5f40e8fd866d91813da2df35a", "patch": "@@ -3,6 +3,11 @@ error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `/\n    |\n LL | type closure = Box<lt/fn()>;\n    |                      ^ expected one of 9 possible tokens\n+   |\n+help: you might have meant to end the type parameters here\n+   |\n+LL | type closure = Box<lt>/fn()>;\n+   |                      +\n \n error: aborting due to previous error\n "}]}