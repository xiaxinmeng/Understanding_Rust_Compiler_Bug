{"sha": "fef60c03e02f728a7b2b81e61dc27137393c99bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZjYwYzAzZTAyZjcyOGE3YjJiODFlNjFkYzI3MTM3MzkzYzk5YmM=", "commit": {"author": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-10T19:53:37Z"}, "committer": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-11T14:09:09Z"}, "message": "add long diagnostics for E0194", "tree": {"sha": "91c7998523a6cf8d2c49cbae25ba6e048803ffd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c7998523a6cf8d2c49cbae25ba6e048803ffd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fef60c03e02f728a7b2b81e61dc27137393c99bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fef60c03e02f728a7b2b81e61dc27137393c99bc", "html_url": "https://github.com/rust-lang/rust/commit/fef60c03e02f728a7b2b81e61dc27137393c99bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fef60c03e02f728a7b2b81e61dc27137393c99bc/comments", "author": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c756526eb2aed91e96d2b5d9461898cb33565707", "url": "https://api.github.com/repos/rust-lang/rust/commits/c756526eb2aed91e96d2b5d9461898cb33565707", "html_url": "https://github.com/rust-lang/rust/commit/c756526eb2aed91e96d2b5d9461898cb33565707"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "e7f3c780fac076376a45a10bcd30f7dfcf9479dc", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fef60c03e02f728a7b2b81e61dc27137393c99bc/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fef60c03e02f728a7b2b81e61dc27137393c99bc/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=fef60c03e02f728a7b2b81e61dc27137393c99bc", "patch": "@@ -1840,6 +1840,22 @@ Since we know for certain that Wrapper<u32> implements Clone, there's no reason\n to also specify it in a `where` clause.\n \"##,\n \n+E0194: r##\"\n+A type parameter was declared which shadows an existing one. An example of this\n+error:\n+\n+```\n+trait Foo<T> {\n+    fn do_something(&self) -> T;\n+    fn do_something_else<T: Clone>(&self, bar: T);\n+}\n+```\n+\n+In this example, the trait `Foo` and the trait method `do_something_else` both\n+define a type parameter `T`. This is not allowed: if the method wishes to\n+define a type parameter, it must use a different name for it.\n+\"##,\n+\n E0195: r##\"\n Your method's lifetime parameters do not match the trait declaration.\n Erroneous code example:\n@@ -2595,7 +2611,6 @@ register_diagnostics! {\n     E0188, // can not cast a immutable reference to a mutable pointer\n     E0189, // deprecated: can only cast a boxed pointer to a boxed object\n     E0190, // deprecated: can only cast a &-pointer to an &-object\n-    E0194,\n     E0196, // cannot determine a type for this closure\n     E0203, // type parameter has more than one relaxed default bound,\n            // and only one is supported"}]}