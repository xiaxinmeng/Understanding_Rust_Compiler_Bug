{"sha": "a37cd5ad43f28e2eddab713266517cf06c256ba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzN2NkNWFkNDNmMjhlMmVkZGFiNzEzMjY2NTE3Y2YwNmMyNTZiYTc=", "commit": {"author": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2018-09-08T14:55:53Z"}, "committer": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2018-09-08T14:55:53Z"}, "message": "Add trivial fuzzer for parser\n\nAs described in #61, fuzz testing some parts of this would be ~~fun~~\nhelpful. So, I started with the most trivial fuzzer I could think of:\nPut random stuff into File::parse and see what happens.\n\nTo speed things up, I also did\n\n    cp src/**/*.rs fuzz/corpus/parser/\n\nin the `crates/libsyntax2/` directory (running the fuzzer once will\ngenerate the necessary directories).", "tree": {"sha": "910bfe4935460d6022cfe897897cf84814482d3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/910bfe4935460d6022cfe897897cf84814482d3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a37cd5ad43f28e2eddab713266517cf06c256ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a37cd5ad43f28e2eddab713266517cf06c256ba7", "html_url": "https://github.com/rust-lang/rust/commit/a37cd5ad43f28e2eddab713266517cf06c256ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a37cd5ad43f28e2eddab713266517cf06c256ba7/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "html_url": "https://github.com/rust-lang/rust/commit/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "572e03bdf321b6cc3a99488183436905cefd086d", "filename": "crates/libsyntax2/fuzz/.gitignore", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a37cd5ad43f28e2eddab713266517cf06c256ba7/crates%2Flibsyntax2%2Ffuzz%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/a37cd5ad43f28e2eddab713266517cf06c256ba7/crates%2Flibsyntax2%2Ffuzz%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ffuzz%2F.gitignore?ref=a37cd5ad43f28e2eddab713266517cf06c256ba7", "patch": "@@ -0,0 +1,4 @@\n+\n+target\n+corpus\n+artifacts"}, {"sha": "916cd5b6f1ce913a957a68db8fe1859c07426a8a", "filename": "crates/libsyntax2/fuzz/Cargo.toml", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a37cd5ad43f28e2eddab713266517cf06c256ba7/crates%2Flibsyntax2%2Ffuzz%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a37cd5ad43f28e2eddab713266517cf06c256ba7/crates%2Flibsyntax2%2Ffuzz%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ffuzz%2FCargo.toml?ref=a37cd5ad43f28e2eddab713266517cf06c256ba7", "patch": "@@ -0,0 +1,22 @@\n+\n+[package]\n+name = \"libsyntax2-fuzz\"\n+version = \"0.0.1\"\n+authors = [\"Automatically generated\"]\n+publish = false\n+\n+[package.metadata]\n+cargo-fuzz = true\n+\n+[dependencies.libsyntax2]\n+path = \"..\"\n+[dependencies.libfuzzer-sys]\n+git = \"https://github.com/rust-fuzz/libfuzzer-sys.git\"\n+\n+# Prevent this from interfering with workspaces\n+[workspace]\n+members = [\".\"]\n+\n+[[bin]]\n+name = \"parser\"\n+path = \"fuzz_targets/parser.rs\""}, {"sha": "f941855e86066143437c07eaf1a62100af41822d", "filename": "crates/libsyntax2/fuzz/fuzz_targets/parser.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a37cd5ad43f28e2eddab713266517cf06c256ba7/crates%2Flibsyntax2%2Ffuzz%2Ffuzz_targets%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a37cd5ad43f28e2eddab713266517cf06c256ba7/crates%2Flibsyntax2%2Ffuzz%2Ffuzz_targets%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ffuzz%2Ffuzz_targets%2Fparser.rs?ref=a37cd5ad43f28e2eddab713266517cf06c256ba7", "patch": "@@ -0,0 +1,12 @@\n+#![no_main]\n+#[macro_use] extern crate libfuzzer_sys;\n+extern crate libsyntax2;\n+\n+fuzz_target!(|data: &[u8]| {\n+    if let Ok(text) = std::str::from_utf8(data) {\n+        let x = libsyntax2::File::parse(text);\n+        let _ = x.ast();\n+        let _ = x.syntax();\n+        let _ = x.errors();\n+    }\n+});"}]}