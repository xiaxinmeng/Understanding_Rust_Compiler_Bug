{"sha": "f531b8122ebd7b07a50198b14727337763d05707", "node_id": "C_kwDOAAsO6NoAKGY1MzFiODEyMmViZDdiMDdhNTAxOThiMTQ3MjczMzc3NjNkMDU3MDc", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-10-01T17:39:08Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-10-01T17:41:22Z"}, "message": "docs: `std::hash::Hash` should ensure prefix-free data\n\nCloses #89429", "tree": {"sha": "b6d0bf6aad80d7e8888f80a904acfe20a27beaeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6d0bf6aad80d7e8888f80a904acfe20a27beaeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f531b8122ebd7b07a50198b14727337763d05707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f531b8122ebd7b07a50198b14727337763d05707", "html_url": "https://github.com/rust-lang/rust/commit/f531b8122ebd7b07a50198b14727337763d05707", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f531b8122ebd7b07a50198b14727337763d05707/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed937594d3912ced11f6f35a90bb8bf591909d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed937594d3912ced11f6f35a90bb8bf591909d2a", "html_url": "https://github.com/rust-lang/rust/commit/ed937594d3912ced11f6f35a90bb8bf591909d2a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "83cb85843b6ebebf3d91539176d6c961d556178e", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f531b8122ebd7b07a50198b14727337763d05707/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f531b8122ebd7b07a50198b14727337763d05707/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=f531b8122ebd7b07a50198b14727337763d05707", "patch": "@@ -153,9 +153,19 @@ mod sip;\n /// Thankfully, you won't need to worry about upholding this property when\n /// deriving both [`Eq`] and `Hash` with `#[derive(PartialEq, Eq, Hash)]`.\n ///\n+/// ## Prefix collisions\n+///\n+/// Implementations of `hash` should ensure that the data they\n+/// pass to the `Hasher` are prefix-free. That is, different concatenations\n+/// of the same data should not produce the same output.\n+/// For example, the standard implementation of [`Hash` for `&str`][impl] passes an extra\n+/// `0xFF` byte to the `Hasher` so that the values `(\"ab\", \"c\")` and `(\"a\",\n+/// \"bc\")` hash differently.\n+///\n /// [`HashMap`]: ../../std/collections/struct.HashMap.html\n /// [`HashSet`]: ../../std/collections/struct.HashSet.html\n /// [`hash`]: Hash::hash\n+/// [impl]: ../../std/primitive.str.html#impl-Hash\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_diagnostic_item = \"Hash\"]\n pub trait Hash {"}]}