{"sha": "0ed27c388adca887cda3d8141efaf974e90a5958", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZDI3YzM4OGFkY2E4ODdjZGEzZDgxNDFlZmFmOTc0ZTkwYTU5NTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-09T21:02:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-09T21:02:10Z"}, "message": "Drop needless trait", "tree": {"sha": "f7d19b2f513ae88e7ae94cec58e184ac7183a6b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7d19b2f513ae88e7ae94cec58e184ac7183a6b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ed27c388adca887cda3d8141efaf974e90a5958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ed27c388adca887cda3d8141efaf974e90a5958", "html_url": "https://github.com/rust-lang/rust/commit/0ed27c388adca887cda3d8141efaf974e90a5958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ed27c388adca887cda3d8141efaf974e90a5958/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e07d3c94de4694f38aa87316018c0d4cf28be941", "url": "https://api.github.com/repos/rust-lang/rust/commits/e07d3c94de4694f38aa87316018c0d4cf28be941", "html_url": "https://github.com/rust-lang/rust/commit/e07d3c94de4694f38aa87316018c0d4cf28be941"}], "stats": {"total": 48, "additions": 20, "deletions": 28}, "files": [{"sha": "f84b559fc126fef1b36e5ae4d7836110359a2182", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0ed27c388adca887cda3d8141efaf974e90a5958/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed27c388adca887cda3d8141efaf974e90a5958/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=0ed27c388adca887cda3d8141efaf974e90a5958", "patch": "@@ -1,6 +1,9 @@\n //! FIXME: write short doc here\n \n-use ra_syntax::{ast, match_ast, AstNode};\n+use ra_syntax::{\n+    ast::{self, ModuleItemOwner},\n+    match_ast, AstNode,\n+};\n use rustc_hash::FxHashMap;\n \n use crate::completion::{CompletionContext, CompletionItem, CompletionKind, Completions};\n@@ -16,11 +19,19 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n \n     let mut params = FxHashMap::default();\n     for node in ctx.token.parent().ancestors() {\n-        match_ast! {\n+        let items = match_ast! {\n             match node {\n-                ast::SourceFile(it) => process(it, &mut params),\n-                ast::ItemList(it) => process(it, &mut params),\n-                _ => (),\n+                ast::SourceFile(it) => it.items(),\n+                ast::ItemList(it) => it.items(),\n+                _ => continue,\n+            }\n+        };\n+        for item in items {\n+            if let ast::ModuleItem::FnDef(func) = item {\n+                func.param_list().into_iter().flat_map(|it| it.params()).for_each(|param| {\n+                    let text = param.syntax().text().to_string();\n+                    params.entry(text).or_insert((0, param)).0 += 1;\n+                })\n             }\n         }\n     }\n@@ -39,15 +50,6 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n                 .lookup_by(lookup)\n                 .add_to(acc)\n         });\n-\n-    fn process<N: ast::FnDefOwner>(node: N, params: &mut FxHashMap<String, (u32, ast::Param)>) {\n-        node.functions().filter_map(|it| it.param_list()).flat_map(|it| it.params()).for_each(\n-            |param| {\n-                let text = param.syntax().text().to_string();\n-                params.entry(text).or_insert((0, param)).0 += 1;\n-            },\n-        )\n-    }\n }\n \n #[cfg(test)]"}, {"sha": "3b820507ddb7ec3728b8ec4280622bfa2e4a2175", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ed27c388adca887cda3d8141efaf974e90a5958/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed27c388adca887cda3d8141efaf974e90a5958/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=0ed27c388adca887cda3d8141efaf974e90a5958", "patch": "@@ -22,7 +22,6 @@ impl AstNode for SourceFile {\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n impl ast::ModuleItemOwner for SourceFile {}\n-impl ast::FnDefOwner for SourceFile {}\n impl ast::AttrsOwner for SourceFile {}\n impl SourceFile {\n     pub fn modules(&self) -> AstChildren<Module> { support::children(&self.syntax) }\n@@ -344,7 +343,6 @@ impl AstNode for ItemList {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl ast::FnDefOwner for ItemList {}\n impl ast::ModuleItemOwner for ItemList {}\n impl ItemList {\n     pub fn l_curly_token(&self) -> Option<LCurly> { support::token(&self.syntax) }\n@@ -2512,7 +2510,6 @@ impl AstNode for MacroItems {\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n impl ast::ModuleItemOwner for MacroItems {}\n-impl ast::FnDefOwner for MacroItems {}\n impl MacroItems {}\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct MacroStmts {\n@@ -2548,7 +2545,6 @@ impl AstNode for ExternItemList {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl ast::FnDefOwner for ExternItemList {}\n impl ast::ModuleItemOwner for ExternItemList {}\n impl ExternItemList {\n     pub fn l_curly_token(&self) -> Option<LCurly> { support::token(&self.syntax) }"}, {"sha": "f0b54cf29727d4060713d079eff90d2d496f1040", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ed27c388adca887cda3d8141efaf974e90a5958/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed27c388adca887cda3d8141efaf974e90a5958/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=0ed27c388adca887cda3d8141efaf974e90a5958", "patch": "@@ -43,12 +43,6 @@ pub trait ArgListOwner: AstNode {\n     }\n }\n \n-pub trait FnDefOwner: AstNode {\n-    fn functions(&self) -> AstChildren<ast::FnDef> {\n-        support::children(self.syntax())\n-    }\n-}\n-\n pub trait ModuleItemOwner: AstNode {\n     fn items(&self) -> AstChildren<ast::ModuleItem> {\n         support::children(self.syntax())"}, {"sha": "ac4cc9717eecee13eb7f6cfbc8c504dc945a20f4", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0ed27c388adca887cda3d8141efaf974e90a5958/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed27c388adca887cda3d8141efaf974e90a5958/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=0ed27c388adca887cda3d8141efaf974e90a5958", "patch": "@@ -298,7 +298,7 @@ macro_rules! ast_enums {\n \n pub(crate) const AST_SRC: AstSrc = AstSrc {\n     nodes: &ast_nodes! {\n-        struct SourceFile: ModuleItemOwner, FnDefOwner, AttrsOwner {\n+        struct SourceFile: ModuleItemOwner, AttrsOwner {\n             modules: [Module],\n         }\n \n@@ -364,7 +364,7 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n             Semi\n         }\n \n-        struct ItemList: FnDefOwner, ModuleItemOwner {\n+        struct ItemList: ModuleItemOwner {\n             LCurly,\n             impl_items: [ImplItem],\n             RCurly\n@@ -604,14 +604,14 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n         struct LifetimeArg { Lifetime }\n         struct ConstArg { Literal, Eq, BlockExpr }\n \n-        struct MacroItems: ModuleItemOwner, FnDefOwner { }\n+        struct MacroItems: ModuleItemOwner{ }\n \n         struct MacroStmts {\n             statements: [Stmt],\n             Expr,\n         }\n \n-        struct ExternItemList: FnDefOwner, ModuleItemOwner {\n+        struct ExternItemList: ModuleItemOwner {\n             LCurly,\n             extern_items: [ExternItem],\n             RCurly"}]}