{"sha": "74f39b64c8d6a1395c6029d59d50342f80cae04e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZjM5YjY0YzhkNmExMzk1YzYwMjlkNTlkNTAzNDJmODBjYWUwNGU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-21T11:48:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-21T11:48:43Z"}, "message": "Avoid a temporary stackslot in codegen_checked_int_binop", "tree": {"sha": "827db78d8ad23365d31b2114e45db2f4bbb38410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/827db78d8ad23365d31b2114e45db2f4bbb38410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f39b64c8d6a1395c6029d59d50342f80cae04e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f39b64c8d6a1395c6029d59d50342f80cae04e", "html_url": "https://github.com/rust-lang/rust/commit/74f39b64c8d6a1395c6029d59d50342f80cae04e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f39b64c8d6a1395c6029d59d50342f80cae04e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0f870edd63c671645647c7bb9026b3e0e5f0966", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f870edd63c671645647c7bb9026b3e0e5f0966", "html_url": "https://github.com/rust-lang/rust/commit/b0f870edd63c671645647c7bb9026b3e0e5f0966"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "850ff3561f7f2b3c4ed5dffced584652ff5d3ac9", "filename": "src/num.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/74f39b64c8d6a1395c6029d59d50342f80cae04e/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f39b64c8d6a1395c6029d59d50342f80cae04e/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=74f39b64c8d6a1395c6029d59d50342f80cae04e", "patch": "@@ -328,18 +328,11 @@ pub(crate) fn codegen_checked_int_binop<'tcx>(\n \n     let has_overflow = fx.bcx.ins().bint(types::I8, has_overflow);\n \n-    // FIXME directly write to result place instead\n-    let out_place = CPlace::new_stack_slot(\n-        fx,\n-        fx.layout_of(\n-            fx.tcx\n-                .mk_tup([in_lhs.layout().ty, fx.tcx.types.bool].iter()),\n-        ),\n+    let out_layout = fx.layout_of(\n+        fx.tcx\n+            .mk_tup([in_lhs.layout().ty, fx.tcx.types.bool].iter()),\n     );\n-    let out_layout = out_place.layout();\n-    out_place.write_cvalue(fx, CValue::by_val_pair(res, has_overflow, out_layout));\n-\n-    out_place.to_cvalue(fx)\n+    CValue::by_val_pair(res, has_overflow, out_layout)\n }\n \n pub(crate) fn codegen_float_binop<'tcx>("}]}