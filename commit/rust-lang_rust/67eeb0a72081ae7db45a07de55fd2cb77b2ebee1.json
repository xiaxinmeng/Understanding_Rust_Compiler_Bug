{"sha": "67eeb0a72081ae7db45a07de55fd2cb77b2ebee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZWViMGE3MjA4MWFlN2RiNDVhMDdkZTU1ZmQyY2I3N2IyZWJlZTE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-11-08T04:06:40Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-11-10T11:21:23Z"}, "message": "Add regression test.", "tree": {"sha": "50d83c03ab78649edca960936d4a60815de10931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50d83c03ab78649edca960936d4a60815de10931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1", "html_url": "https://github.com/rust-lang/rust/commit/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11195676a03cf08b13c41684de328869ac345ff8", "url": "https://api.github.com/repos/rust-lang/rust/commits/11195676a03cf08b13c41684de328869ac345ff8", "html_url": "https://github.com/rust-lang/rust/commit/11195676a03cf08b13c41684de328869ac345ff8"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "969ed91f595e6d1697fc4e4ff2b80039f8b7512d", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/double.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fdouble.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fdouble.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fdouble.rs?ref=67eeb0a72081ae7db45a07de55fd2cb77b2ebee1", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+#![feature(proc_macro)]\n+#![feature(proc_macro_lib)]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(Double)]\n+pub fn derive(input: TokenStream) -> TokenStream {\n+    format!(\"mod foo {{ {} }}\", input.to_string()).parse().unwrap()\n+}"}, {"sha": "d19b49ab18c075ecd07e0314f85d33e240c06b71", "filename": "src/test/run-pass-fulldeps/proc-macro/crate-var.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcrate-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67eeb0a72081ae7db45a07de55fd2cb77b2ebee1/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcrate-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcrate-var.rs?ref=67eeb0a72081ae7db45a07de55fd2cb77b2ebee1", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:double.rs\n+\n+#![feature(proc_macro)]\n+#![allow(unused)]\n+\n+#[macro_use]\n+extern crate double;\n+\n+struct Foo;\n+\n+macro_rules! m { () => {\n+    #[derive(Double)]\n+    struct Bar($crate::Foo);\n+} }\n+m!();\n+\n+fn main() {}"}]}