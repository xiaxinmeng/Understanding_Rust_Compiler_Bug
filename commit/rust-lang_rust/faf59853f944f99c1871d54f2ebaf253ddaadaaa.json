{"sha": "faf59853f944f99c1871d54f2ebaf253ddaadaaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZjU5ODUzZjk0NGY5OWMxODcxZDU0ZjJlYmFmMjUzZGRhYWRhYWE=", "commit": {"author": {"name": "Jo\u00e3o M. Bezerra", "email": "marcospb19@hotmail.com", "date": "2021-08-29T18:58:20Z"}, "committer": {"name": "Jo\u00e3o M. Bezerra", "email": "marcospb19@hotmail.com", "date": "2021-08-30T02:59:35Z"}, "message": "Adding examples to docs of std::time module\n\nAnd adding missing link to Duration from Instant", "tree": {"sha": "07630fc3d54e8cb8dc81a0aeccdd021039de8888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07630fc3d54e8cb8dc81a0aeccdd021039de8888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faf59853f944f99c1871d54f2ebaf253ddaadaaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faf59853f944f99c1871d54f2ebaf253ddaadaaa", "html_url": "https://github.com/rust-lang/rust/commit/faf59853f944f99c1871d54f2ebaf253ddaadaaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faf59853f944f99c1871d54f2ebaf253ddaadaaa/comments", "author": {"login": "marcospb19", "id": 38900226, "node_id": "MDQ6VXNlcjM4OTAwMjI2", "avatar_url": "https://avatars.githubusercontent.com/u/38900226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcospb19", "html_url": "https://github.com/marcospb19", "followers_url": "https://api.github.com/users/marcospb19/followers", "following_url": "https://api.github.com/users/marcospb19/following{/other_user}", "gists_url": "https://api.github.com/users/marcospb19/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcospb19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcospb19/subscriptions", "organizations_url": "https://api.github.com/users/marcospb19/orgs", "repos_url": "https://api.github.com/users/marcospb19/repos", "events_url": "https://api.github.com/users/marcospb19/events{/privacy}", "received_events_url": "https://api.github.com/users/marcospb19/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcospb19", "id": 38900226, "node_id": "MDQ6VXNlcjM4OTAwMjI2", "avatar_url": "https://avatars.githubusercontent.com/u/38900226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcospb19", "html_url": "https://github.com/marcospb19", "followers_url": "https://api.github.com/users/marcospb19/followers", "following_url": "https://api.github.com/users/marcospb19/following{/other_user}", "gists_url": "https://api.github.com/users/marcospb19/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcospb19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcospb19/subscriptions", "organizations_url": "https://api.github.com/users/marcospb19/orgs", "repos_url": "https://api.github.com/users/marcospb19/repos", "events_url": "https://api.github.com/users/marcospb19/events{/privacy}", "received_events_url": "https://api.github.com/users/marcospb19/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daa4dc997c777676b0f0e48d0311cc5e7bde5f87", "url": "https://api.github.com/repos/rust-lang/rust/commits/daa4dc997c777676b0f0e48d0311cc5e7bde5f87", "html_url": "https://github.com/rust-lang/rust/commit/daa4dc997c777676b0f0e48d0311cc5e7bde5f87"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "35b740cd74372b9a03a1343bf9445c01d7cb9a5a", "filename": "library/core/src/time.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/faf59853f944f99c1871d54f2ebaf253ddaadaaa/library%2Fcore%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf59853f944f99c1871d54f2ebaf253ddaadaaa/library%2Fcore%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftime.rs?ref=faf59853f944f99c1871d54f2ebaf253ddaadaaa", "patch": "@@ -2,14 +2,21 @@\n \n //! Temporal quantification.\n //!\n-//! Example:\n+//! # Examples:\n+//!\n+//! There are multiple ways to create a new [`Duration`]:\n //!\n //! ```\n-//! use std::time::Duration;\n+//! # use std::time::Duration;\n+//! let five_seconds = Duration::from_secs(5);\n+//! assert_eq!(five_seconds, Duration::from_millis(5_000));\n+//! assert_eq!(five_seconds, Duration::from_micros(5_000_000));\n+//! assert_eq!(five_seconds, Duration::from_nanos(5_000_000_000));\n //!\n-//! let five_seconds = Duration::new(5, 0);\n-//! // both declarations are equivalent\n-//! assert_eq!(Duration::new(5, 0), Duration::from_secs(5));\n+//! let ten_seconds = Duration::from_secs(10);\n+//! let seven_nanos = Duration::from_nanos(7);\n+//! let total = ten_seconds + seven_nanos;\n+//! assert_eq!(total, Duration::new(10, 7));\n //! ```\n \n use crate::fmt;"}, {"sha": "e9207ee36171b18d44613c17583cf0a77f0232e0", "filename": "library/std/src/time.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/faf59853f944f99c1871d54f2ebaf253ddaadaaa/library%2Fstd%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf59853f944f99c1871d54f2ebaf253ddaadaaa/library%2Fstd%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime.rs?ref=faf59853f944f99c1871d54f2ebaf253ddaadaaa", "patch": "@@ -1,13 +1,32 @@\n //! Temporal quantification.\n //!\n-//! Example:\n+//! # Examples:\n //!\n+//! There are multiple ways to create a new [`Duration`]:\n+//!\n+//! ```\n+//! # use std::time::Duration;\n+//! let five_seconds = Duration::from_secs(5);\n+//! assert_eq!(five_seconds, Duration::from_millis(5_000));\n+//! assert_eq!(five_seconds, Duration::from_micros(5_000_000));\n+//! assert_eq!(five_seconds, Duration::from_nanos(5_000_000_000));\n+//!\n+//! let ten_seconds = Duration::from_secs(10);\n+//! let seven_nanos = Duration::from_nanos(7);\n+//! let total = ten_seconds + seven_nanos;\n+//! assert_eq!(total, Duration::new(10, 7));\n //! ```\n-//! use std::time::Duration;\n //!\n-//! let five_seconds = Duration::new(5, 0);\n-//! // both declarations are equivalent\n-//! assert_eq!(Duration::new(5, 0), Duration::from_secs(5));\n+//! Using [`Instant`] to calculate how long a function took to run:\n+//!\n+//! ```ignore (incomplete)\n+//! let now = Instant::now();\n+//!\n+//! // Calling a slow function, it may take a while\n+//! slow_function();\n+//!\n+//! let elapsed_time = now.elapsed();\n+//! println!(\"Running slow_function() took {} seconds.\", elapsed_time.as_secs());\n //! ```\n \n #![stable(feature = \"time\", since = \"1.3.0\")]\n@@ -26,7 +45,7 @@ use crate::sys_common::FromInner;\n pub use core::time::Duration;\n \n /// A measurement of a monotonically nondecreasing clock.\n-/// Opaque and useful only with `Duration`.\n+/// Opaque and useful only with [`Duration`].\n ///\n /// Instants are always guaranteed to be no less than any previously measured\n /// instant when created, and are often useful for tasks such as measuring"}]}