{"sha": "efcfaae34ac7a54e858aad82e6503a7c69d6c550", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmY2ZhYWUzNGFjN2E1NGU4NThhYWQ4MmU2NTAzYTdjNjlkNmM1NTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T09:32:29Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T09:32:29Z"}, "message": "Tests for partial parse", "tree": {"sha": "611b74d833d3e852f0fe271db3faebd4e865c097", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/611b74d833d3e852f0fe271db3faebd4e865c097"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efcfaae34ac7a54e858aad82e6503a7c69d6c550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efcfaae34ac7a54e858aad82e6503a7c69d6c550", "html_url": "https://github.com/rust-lang/rust/commit/efcfaae34ac7a54e858aad82e6503a7c69d6c550", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efcfaae34ac7a54e858aad82e6503a7c69d6c550/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f797c81155e9b7371b24801efac3fcbd236fc9ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/f797c81155e9b7371b24801efac3fcbd236fc9ab", "html_url": "https://github.com/rust-lang/rust/commit/f797c81155e9b7371b24801efac3fcbd236fc9ab"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "79ef8b31c10ebeb332002b7d82c947cab613da55", "filename": "src/parser/event_parser/grammar.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar.rs?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "patch": "@@ -74,7 +74,12 @@ fn many<F: Fn(&mut Parser) -> bool>(p: &mut Parser, f: F) {\n fn comma_list<F: Fn(&mut Parser) -> bool>(p: &mut Parser, f: F) {\n     many(p, |p| {\n         f(p);\n-        p.is_eof() || p.expect(COMMA)\n+        if p.is_eof() {\n+            false\n+        } else {\n+            p.expect(COMMA);\n+            true\n+        }\n     })\n }\n "}, {"sha": "fe5030d893f92d2ebc8ae84786c32c9c9f0a8ddd", "filename": "tests/data/parser/err/0000_struct_field_missing_comma.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rs?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "patch": "@@ -0,0 +1,4 @@\n+struct S {\n+    a: u32\n+    b: u32\n+}\n\\ No newline at end of file"}, {"sha": "e2e99bb63528cb8a8841d8a84ac4b128d362af4c", "filename": "tests/data/parser/err/0000_struct_field_missing_comma.txt", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Ferr%2F0000_struct_field_missing_comma.txt", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Ferr%2F0000_struct_field_missing_comma.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Ferr%2F0000_struct_field_missing_comma.txt?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "patch": "@@ -0,0 +1,20 @@\n+FILE@[0; 34)\n+  STRUCT_ITEM@[0; 34) err: `expected COMMA`\n+    STRUCT_KW@[0; 6)\n+    WHITESPACE@[6; 7)\n+    IDENT@[7; 8)\n+    WHITESPACE@[8; 9)\n+    L_CURLY@[9; 10)\n+    STRUCT_FIELD@[10; 26)\n+      WHITESPACE@[10; 15)\n+      IDENT@[15; 16)\n+      COLON@[16; 17)\n+      WHITESPACE@[17; 18)\n+      IDENT@[18; 21)\n+      WHITESPACE@[21; 26)\n+    STRUCT_FIELD@[26; 33)\n+      IDENT@[26; 27)\n+      COLON@[27; 28)\n+      WHITESPACE@[28; 29)\n+      IDENT@[29; 32)\n+      WHITESPACE@[32;\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/data/parser/ok/0000_empty.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0000_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0000_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0000_empty.rs?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "previous_filename": "tests/data/parser/0000_empty.rs"}, {"sha": "54be3e7bc97af4c7f74f704d42610957088cf0cf", "filename": "tests/data/parser/ok/0000_empty.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0000_empty.txt", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0000_empty.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0000_empty.txt?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "previous_filename": "tests/data/parser/0000_empty.txt"}, {"sha": "d3a8c1d23d49fd7b70d63b7e5e79424be579dcca", "filename": "tests/data/parser/ok/0001_struct_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0001_struct_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0001_struct_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0001_struct_item.rs?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "previous_filename": "tests/data/parser/0001_struct_item.rs"}, {"sha": "f599e9d2c5d877a0a27167058f74f1dc18964dd8", "filename": "tests/data/parser/ok/0001_struct_item.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "previous_filename": "tests/data/parser/0001_struct_item.txt"}, {"sha": "cc3866d2511ed9a75a1ecb8d50ffdbe191047840", "filename": "tests/data/parser/ok/0002_struct_item_field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0002_struct_item_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0002_struct_item_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0002_struct_item_field.rs?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "previous_filename": "tests/data/parser/0002_struct_item_field.rs"}, {"sha": "87ab3f7a9b1530e3c219ea8a76578c0e0d35895d", "filename": "tests/data/parser/ok/0002_struct_item_field.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0002_struct_item_field.txt", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fdata%2Fparser%2Fok%2F0002_struct_item_field.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0002_struct_item_field.txt?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "previous_filename": "tests/data/parser/0002_struct_item_field.txt"}, {"sha": "206da2a6471a5442d361c53d527f81feaeea3900", "filename": "tests/parser.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efcfaae34ac7a54e858aad82e6503a7c69d6c550/tests%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fparser.rs?ref=efcfaae34ac7a54e858aad82e6503a7c69d6c550", "patch": "@@ -21,9 +21,8 @@ fn parser_test_dir() -> PathBuf {\n     PathBuf::from(dir).join(\"tests/data/parser\")\n }\n \n-fn parser_test_cases() -> Vec<PathBuf> {\n+fn test_from_dir(dir: &Path) -> Vec<PathBuf> {\n     let mut acc = Vec::new();\n-    let dir = parser_test_dir();\n     for file in read_dir(&dir).unwrap() {\n         let file = file.unwrap();\n         let path = file.path();\n@@ -35,14 +34,24 @@ fn parser_test_cases() -> Vec<PathBuf> {\n     acc\n }\n \n+fn parser_test_cases() -> Vec<PathBuf> {\n+    let mut acc = Vec::new();\n+    acc.extend(test_from_dir(&parser_test_dir().join(\"ok\")));\n+    acc.extend(test_from_dir(&parser_test_dir().join(\"err\")));\n+    acc\n+}\n+\n fn parser_test_case(path: &Path) {\n     let actual = {\n         let text = file::get_text(path).unwrap();\n         let tokens = tokenize(&text);\n         let file = parse(text, &tokens);\n         dump_tree(&file)\n     };\n-    let expected = file::get_text(&path.with_extension(\"txt\")).unwrap();\n+    let expected = path.with_extension(\"txt\");\n+    let expected = file::get_text(&expected).expect(\n+        &format!(\"Can't read {}\", expected.display())\n+    );\n     let expected = expected.as_str();\n     let actual = actual.as_str();\n     if expected == actual {"}]}