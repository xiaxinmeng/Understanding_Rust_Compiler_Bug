{"sha": "c03eba2d0833a21205b00e4b71e920df709a2658", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwM2ViYTJkMDgzM2EyMTIwNWIwMGU0YjcxZTkyMGRmNzA5YTI2NTg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-08-28T21:20:14Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-08-30T18:15:25Z"}, "message": "Add `FIXME` for faster cached block transfer functions\n\nI've tried a few ways of implementing this, but each fell short.\n\nAdding an auxiliary `_Idx` associated type to `Analysis` that defaults\nto `!` but is overridden in the blanket impl of `Analysis` for `A:\nGenKillAnalysis` to `A::Idx` seems promising, but the trait solver is\nunable to prove equivalence between `A::Idx` and `A::_Idx` within the\noverridden version of `into_engine`. Without full-featured\nspecialization, removing `into_engine` or splitting it into a different\ntrait would have a significant ergonomic penalty.\n\nAlternatively, we could erase the index type and store a\n`GenKillSet<u32>` as well as a function pointer for transmuting between\n`&mut A::Domain` and `&mut BitSet<u32>` in the hopes that LLVM can\ndevirtualize a simple function pointer better than the boxed closure.\nHowever, this is brittle, requires `unsafe` code, and doesn't work for\nindex types that aren't the same size as a `u32` (e.g. `usize`) since\n`GenKillSet` stores a `HybridBitSet`, which may be a `Vec<I>`. Perhaps\nsafe transmute could help here?", "tree": {"sha": "20836a30e17e13d725089e5ad052725e0bbf5dce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20836a30e17e13d725089e5ad052725e0bbf5dce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c03eba2d0833a21205b00e4b71e920df709a2658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c03eba2d0833a21205b00e4b71e920df709a2658", "html_url": "https://github.com/rust-lang/rust/commit/c03eba2d0833a21205b00e4b71e920df709a2658", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c03eba2d0833a21205b00e4b71e920df709a2658/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b19b8ea6113a6e912d508c11a25567b05d7db54c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b19b8ea6113a6e912d508c11a25567b05d7db54c", "html_url": "https://github.com/rust-lang/rust/commit/b19b8ea6113a6e912d508c11a25567b05d7db54c"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "d3ad42f6bbcce5b8563205b87e98d9858eee21eb", "filename": "compiler/rustc_mir/src/dataflow/framework/engine.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c03eba2d0833a21205b00e4b71e920df709a2658/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c03eba2d0833a21205b00e4b71e920df709a2658/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fframework%2Fengine.rs?ref=c03eba2d0833a21205b00e4b71e920df709a2658", "patch": "@@ -87,6 +87,11 @@ where\n     analysis: A,\n \n     /// Cached, cumulative transfer functions for each block.\n+    //\n+    // FIXME(ecstaticmorse): This boxed `Fn` trait object is invoked inside a tight loop for\n+    // gen/kill problems on cyclic CFGs. This is not ideal, but it doesn't seem to degrade\n+    // performance in practice. I've tried a few ways to avoid this, but they have downsides. See\n+    // the message for the commit that added this FIXME for more information.\n     apply_trans_for_block: Option<Box<dyn Fn(BasicBlock, &mut A::Domain)>>,\n }\n "}]}