{"sha": "b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YWYzZTMwYTllMzRlNGZlMzUzZTdlNWM0MjEwMzg1MWY5YzhmNzk=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-09-18T12:58:22Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-09-18T12:58:22Z"}, "message": "bootstrap: move the version number to a plaintext file\n\nThe Rust version number is currently embedded in bootstrap's source\ncode, which makes it hard to update it automatically or access it\noutside of ./x.py (as you'd have to parse the source code).\n\nThis commit moves the version number to a standalone plaintext file,\nwhich makes accessing or updating it trivial.", "tree": {"sha": "82329cd8f65ebaf9d6991e4b200d8b645032f689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82329cd8f65ebaf9d6991e4b200d8b645032f689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl9krvIACgkQPgar6Auq\n8Zx73A//QATAS92+BxkLDYlLCePrFiiHWLse6T2ktmO9rYK+YGa+mFndfEt0LekO\npeZfzOgUgv7gdzAD8A2oz7OUIT1jH6iQ0cwjLjVa5bFzoH6wXRHsf0ckiwT4Tiow\nW0NvxowNLPXOIQiiX3WmJ5xAPrjNxs+NKTUEcerbbKT32IlYsQLUSrgxqohktETF\nQ5OSp1jvG/ilERs/XZnDTlf6xaukN5l7iSv9xf5b9LvKJDATjNk7plHBEdG4GssT\nS9kL2y5/gvczMCWbFDPWrqwHBTDnw7pT/6tx08CP41ods0ibBcYd0QQOXSwzvKmE\noqbHmGBSxjjT83sPYHl/vP7AbkiCVsXMx9wpEhq3pj1qeHl4fpoefZLTW5KmYMNK\n/SypxLBVc2hwOR530TK2HfKorqhk4Ps1dPjsxLt6OMqPiC9w1VVEO7HcFYmvaTds\njf1Vcw2VhUB+OFhTXUb4W/JSBPnlyHc+apoQ2UK5VC+/aiBa3+qeVDOPEDsI82J4\nxBeJO8BiZqimN8gbMJ2pJVT6SBJkqxRwamP3kkjZnoDIIHGdMrnEjrnTa3hH+jhw\nqCiwWBuCidBg9MVw9HPQLnkOYYw3p+V2tsQjK0QlS567sPHfhdEn1561qUgONpQa\nwjvLK6+nr/4uhQ6jLt/MzhSHPnsRwnXrl3MBhvUU1XLd5n8uZno=\n=aQBc\n-----END PGP SIGNATURE-----", "payload": "tree 82329cd8f65ebaf9d6991e4b200d8b645032f689\nparent 95386b656e91168bf53e2ab63c6b992cae591fe7\nauthor Pietro Albini <pietro@pietroalbini.org> 1600433902 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1600433902 +0200\n\nbootstrap: move the version number to a plaintext file\n\nThe Rust version number is currently embedded in bootstrap's source\ncode, which makes it hard to update it automatically or access it\noutside of ./x.py (as you'd have to parse the source code).\n\nThis commit moves the version number to a standalone plaintext file,\nwhich makes accessing or updating it trivial.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "html_url": "https://github.com/rust-lang/rust/commit/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95386b656e91168bf53e2ab63c6b992cae591fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/95386b656e91168bf53e2ab63c6b992cae591fe7", "html_url": "https://github.com/rust-lang/rust/commit/95386b656e91168bf53e2ab63c6b992cae591fe7"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "2b82f6c30b27364aa4f56ab0d44ffa0aad9d0428", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -12,9 +12,6 @@ use build_helper::output;\n \n use crate::Build;\n \n-// The version number\n-pub const CFG_RELEASE_NUM: &str = \"1.48.0\";\n-\n pub struct GitInfo {\n     inner: Option<Info>,\n }"}, {"sha": "f25ad50c9b7741f2e14967db4c477aa3242f3902", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -18,7 +18,6 @@ use build_helper::{output, t};\n \n use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n use crate::cache::{Interned, INTERNER};\n-use crate::channel;\n use crate::compile;\n use crate::config::TargetSelection;\n use crate::tool::{self, Tool};\n@@ -569,7 +568,7 @@ impl Step for Rustc {\n                     &page_dst,\n                     &[\n                         (\"<INSERT DATE HERE>\", &month_year),\n-                        (\"<INSERT VERSION HERE>\", channel::CFG_RELEASE_NUM),\n+                        (\"<INSERT VERSION HERE>\", &builder.version),\n                     ],\n                 );\n             }\n@@ -2289,9 +2288,9 @@ impl Step for Extended {\n }\n \n fn add_env(builder: &Builder<'_>, cmd: &mut Command, target: TargetSelection) {\n-    let mut parts = channel::CFG_RELEASE_NUM.split('.');\n+    let mut parts = builder.version.split('.');\n     cmd.env(\"CFG_RELEASE_INFO\", builder.rust_version())\n-        .env(\"CFG_RELEASE_NUM\", channel::CFG_RELEASE_NUM)\n+        .env(\"CFG_RELEASE_NUM\", &builder.version)\n         .env(\"CFG_RELEASE\", builder.rust_release())\n         .env(\"CFG_VER_MAJOR\", parts.next().unwrap())\n         .env(\"CFG_VER_MINOR\", parts.next().unwrap())"}, {"sha": "97f32b61fb9c9a29277b9a9086caa8cdee42ebda", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -433,7 +433,7 @@ impl Step for Std {\n                 .arg(\"-Z\")\n                 .arg(\"unstable-options\")\n                 .arg(\"--resource-suffix\")\n-                .arg(crate::channel::CFG_RELEASE_NUM)\n+                .arg(&builder.version)\n                 .arg(\"--index-page\")\n                 .arg(&builder.src.join(\"src/doc/index.md\"));\n \n@@ -659,7 +659,7 @@ impl Step for ErrorIndex {\n         let mut index = tool::ErrorIndex::command(builder, self.compiler);\n         index.arg(\"html\");\n         index.arg(out.join(\"error-index.html\"));\n-        index.arg(crate::channel::CFG_RELEASE_NUM);\n+        index.arg(&builder.version);\n \n         builder.run(&mut index);\n     }"}, {"sha": "3f7aeae0ed4951f79c598960341b0ffc65bb4e48", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -218,6 +218,9 @@ pub struct Build {\n     /// User-specified configuration from `config.toml`.\n     config: Config,\n \n+    // Version information\n+    version: String,\n+\n     // Properties derived from the above configuration\n     src: PathBuf,\n     out: PathBuf,\n@@ -380,6 +383,10 @@ impl Build {\n             .unwrap()\n             .to_path_buf();\n \n+        let version = std::fs::read_to_string(src.join(\"src\").join(\"version\"))\n+            .expect(\"failed to read src/version\");\n+        let version = version.trim();\n+\n         let mut build = Build {\n             initial_rustc: config.initial_rustc.clone(),\n             initial_cargo: config.initial_cargo.clone(),\n@@ -395,6 +402,7 @@ impl Build {\n             targets: config.targets.clone(),\n \n             config,\n+            version: version.to_string(),\n             src,\n             out,\n \n@@ -433,8 +441,7 @@ impl Build {\n             .next()\n             .unwrap()\n             .trim();\n-        let my_version = channel::CFG_RELEASE_NUM;\n-        if local_release.split('.').take(2).eq(my_version.split('.').take(2)) {\n+        if local_release.split('.').take(2).eq(version.split('.').take(2)) {\n             build.verbose(&format!(\"auto-detected local-rebuild {}\", local_release));\n             build.local_rebuild = true;\n         }\n@@ -785,7 +792,7 @@ impl Build {\n \n         match which {\n             GitRepo::Rustc => {\n-                let sha = self.rust_sha().unwrap_or(channel::CFG_RELEASE_NUM);\n+                let sha = self.rust_sha().unwrap_or(&self.version);\n                 Some(format!(\"/rustc/{}\", sha))\n             }\n             GitRepo::Llvm => Some(String::from(\"/rustc/llvm\")),\n@@ -1016,7 +1023,7 @@ impl Build {\n \n     /// Returns the value of `release` above for Rust itself.\n     fn rust_release(&self) -> String {\n-        self.release(channel::CFG_RELEASE_NUM)\n+        self.release(&self.version)\n     }\n \n     /// Returns the \"package version\" for a component given the `num` release\n@@ -1036,7 +1043,7 @@ impl Build {\n \n     /// Returns the value of `package_vers` above for Rust itself.\n     fn rust_package_vers(&self) -> String {\n-        self.package_vers(channel::CFG_RELEASE_NUM)\n+        self.package_vers(&self.version)\n     }\n \n     /// Returns the value of `package_vers` above for Cargo\n@@ -1070,7 +1077,7 @@ impl Build {\n     }\n \n     fn llvm_tools_package_vers(&self) -> String {\n-        self.package_vers(channel::CFG_RELEASE_NUM)\n+        self.package_vers(&self.version)\n     }\n \n     fn llvm_tools_vers(&self) -> String {\n@@ -1087,7 +1094,7 @@ impl Build {\n     /// Note that this is a descriptive string which includes the commit date,\n     /// sha, version, etc.\n     fn rust_version(&self) -> String {\n-        self.rust_info.version(self, channel::CFG_RELEASE_NUM)\n+        self.rust_info.version(self, &self.version)\n     }\n \n     /// Returns the full commit hash."}, {"sha": "9e4d6d0023dc947e469c6bf442b99aabc4a005b0", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -19,7 +19,6 @@ use std::process::Command;\n use build_helper::{output, t};\n \n use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n-use crate::channel;\n use crate::config::TargetSelection;\n use crate::util::{self, exe};\n use crate::GitRepo;\n@@ -296,7 +295,7 @@ impl Step for Llvm {\n             // release number on the dev channel.\n             cfg.define(\"LLVM_VERSION_SUFFIX\", \"-rust-dev\");\n         } else {\n-            let suffix = format!(\"-rust-{}-{}\", channel::CFG_RELEASE_NUM, builder.config.channel);\n+            let suffix = format!(\"-rust-{}-{}\", builder.version, builder.config.channel);\n             cfg.define(\"LLVM_VERSION_SUFFIX\", suffix);\n         }\n "}, {"sha": "dc28b8ece2452597ab3bb30f6822241cff66b4f4", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -636,7 +636,7 @@ impl Step for RustdocJSStd {\n                 .arg(\"--crate-name\")\n                 .arg(\"std\")\n                 .arg(\"--resource-suffix\")\n-                .arg(crate::channel::CFG_RELEASE_NUM)\n+                .arg(&builder.version)\n                 .arg(\"--doc-folder\")\n                 .arg(builder.doc_out(self.target))\n                 .arg(\"--test-folder\")"}, {"sha": "5d66632d92ceb49e85af55b6e1ddff0bc582f1e4", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -7,7 +7,6 @@ use std::process::{exit, Command};\n use build_helper::t;\n \n use crate::builder::{Builder, Cargo as CargoCommand, RunConfig, ShouldRun, Step};\n-use crate::channel;\n use crate::channel::GitInfo;\n use crate::compile;\n use crate::config::TargetSelection;\n@@ -255,7 +254,7 @@ pub fn prepare_tool_cargo(\n     cargo.env(\"CFG_RELEASE\", builder.rust_release());\n     cargo.env(\"CFG_RELEASE_CHANNEL\", &builder.config.channel);\n     cargo.env(\"CFG_VERSION\", builder.rust_version());\n-    cargo.env(\"CFG_RELEASE_NUM\", channel::CFG_RELEASE_NUM);\n+    cargo.env(\"CFG_RELEASE_NUM\", &builder.version);\n \n     let info = GitInfo::new(builder.config.ignore_git, &dir);\n     if let Some(sha) = info.sha() {"}, {"sha": "9db5ea12f52279a37e2d5c8280e97f2c9f83aa8a", "filename": "src/version", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fversion", "raw_url": "https://github.com/rust-lang/rust/raw/b9af3e30a9e34e4fe353e7e5c42103851f9c8f79/src%2Fversion", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fversion?ref=b9af3e30a9e34e4fe353e7e5c42103851f9c8f79", "patch": "@@ -0,0 +1 @@\n+1.48.0"}]}